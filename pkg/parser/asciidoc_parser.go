// Code generated by pigeon; DO NOT EDIT.

package parser

import (
	"bytes"
	"errors"
	"fmt"
	"io"
	"io/ioutil"
	"math"
	"os"
	"sort"
	"strconv"
	"strings"
	"unicode"
	"unicode/utf8"

	"github.com/bytesparadise/libasciidoc/pkg/types"
)

// *****************************************************************************************
// This file is generated after its sibling `asciidoc-grammar.peg` file. DO NOT MODIFY !
// *****************************************************************************************

var g = &grammar{
	rules: []*rule{
		{
			name: "Document",
			pos:  position{line: 18, col: 1, offset: 504},
			expr: &actionExpr{
				pos: position{line: 18, col: 13, offset: 516},
				run: (*parser).callonDocument1,
				expr: &seqExpr{
					pos: position{line: 18, col: 13, offset: 516},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 18, col: 13, offset: 516},
							label: "frontMatter",
							expr: &zeroOrOneExpr{
								pos: position{line: 18, col: 26, offset: 529},
								expr: &ruleRefExpr{
									pos:  position{line: 18, col: 26, offset: 529},
									name: "FrontMatter",
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 18, col: 40, offset: 543},
							label: "documentHeader",
							expr: &zeroOrOneExpr{
								pos: position{line: 18, col: 56, offset: 559},
								expr: &ruleRefExpr{
									pos:  position{line: 18, col: 56, offset: 559},
									name: "DocumentHeader",
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 18, col: 73, offset: 576},
							label: "blocks",
							expr: &zeroOrMoreExpr{
								pos: position{line: 18, col: 80, offset: 583},
								expr: &ruleRefExpr{
									pos:  position{line: 18, col: 81, offset: 584},
									name: "DocumentBlock",
								},
							},
						},
						&notExpr{
							pos: position{line: 1249, col: 8, offset: 48919},
							expr: &anyMatcher{
								line: 1249, col: 9, offset: 48920,
							},
						},
					},
				},
			},
		},
		{
			name: "DocumentBlock",
			pos:  position{line: 22, col: 1, offset: 691},
			expr: &actionExpr{
				pos: position{line: 22, col: 18, offset: 708},
				run: (*parser).callonDocumentBlock1,
				expr: &seqExpr{
					pos: position{line: 22, col: 18, offset: 708},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 22, col: 18, offset: 708},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 22, col: 29, offset: 719},
								expr: &actionExpr{
									pos: position{line: 164, col: 21, offset: 5763},
									run: (*parser).callonDocumentBlock5,
									expr: &seqExpr{
										pos: position{line: 164, col: 21, offset: 5763},
										exprs: []interface{}{
											&andExpr{
												pos: position{line: 164, col: 21, offset: 5763},
												expr: &charClassMatcher{
													pos:        position{line: 164, col: 23, offset: 5765},
													val:        "[[.#]",
													chars:      []rune{'[', '.', '#'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&labeledExpr{
												pos:   position{line: 165, col: 5, offset: 5853},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 165, col: 11, offset: 5859},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 174, col: 14, offset: 6316},
															run: (*parser).callonDocumentBlock11,
															expr: &seqExpr{
																pos: position{line: 174, col: 14, offset: 6316},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 174, col: 14, offset: 6316},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 174, col: 19, offset: 6321},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1225, col: 7, offset: 48453},
																			run: (*parser).callonDocumentBlock15,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1225, col: 7, offset: 48453},
																				expr: &choiceExpr{
																					pos: position{line: 1225, col: 8, offset: 48454},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonDocumentBlock18,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1225, col: 20, offset: 48466},
																							run: (*parser).callonDocumentBlock21,
																							expr: &seqExpr{
																								pos: position{line: 1225, col: 21, offset: 48467},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1225, col: 21, offset: 48467},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 30, offset: 48476},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonDocumentBlock30,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 34, offset: 48480},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 35, offset: 48481},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 39, offset: 48485},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 40, offset: 48486},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 44, offset: 48490},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 45, offset: 48491},
																											val:        "<<",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 50, offset: 48496},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 51, offset: 48497},
																											val:        ">>",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 56, offset: 48502},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 57, offset: 48503},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1225, col: 62, offset: 48508,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 174, col: 27, offset: 6329},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 5, offset: 6383},
															run: (*parser).callonDocumentBlock44,
															expr: &seqExpr{
																pos: position{line: 176, col: 5, offset: 6383},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 5, offset: 6383},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 10, offset: 6388},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1225, col: 7, offset: 48453},
																			run: (*parser).callonDocumentBlock48,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1225, col: 7, offset: 48453},
																				expr: &choiceExpr{
																					pos: position{line: 1225, col: 8, offset: 48454},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonDocumentBlock51,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1225, col: 20, offset: 48466},
																							run: (*parser).callonDocumentBlock54,
																							expr: &seqExpr{
																								pos: position{line: 1225, col: 21, offset: 48467},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1225, col: 21, offset: 48467},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 30, offset: 48476},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonDocumentBlock63,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 34, offset: 48480},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 35, offset: 48481},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 39, offset: 48485},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 40, offset: 48486},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 44, offset: 48490},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 45, offset: 48491},
																											val:        "<<",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 50, offset: 48496},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 51, offset: 48497},
																											val:        ">>",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 56, offset: 48502},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 57, offset: 48503},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1225, col: 62, offset: 48508,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 18, offset: 6396},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 186, col: 17, offset: 6699},
															run: (*parser).callonDocumentBlock77,
															expr: &seqExpr{
																pos: position{line: 186, col: 17, offset: 6699},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 186, col: 17, offset: 6699},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 186, col: 21, offset: 6703},
																		expr: &litMatcher{
																			pos:        position{line: 186, col: 22, offset: 6704},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 186, col: 26, offset: 6708},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonDocumentBlock85,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 186, col: 30, offset: 6712},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 186, col: 37, offset: 6719},
																			run: (*parser).callonDocumentBlock88,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 186, col: 37, offset: 6719},
																				expr: &choiceExpr{
																					pos: position{line: 186, col: 38, offset: 6720},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonDocumentBlock91,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonDocumentBlock94,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonDocumentBlock98,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 186, col: 59, offset: 6741},
																							run: (*parser).callonDocumentBlock100,
																							expr: &seqExpr{
																								pos: position{line: 186, col: 60, offset: 6742},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 186, col: 60, offset: 6742},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 186, col: 70, offset: 6752,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 196, col: 16, offset: 6990},
															run: (*parser).callonDocumentBlock107,
															expr: &seqExpr{
																pos: position{line: 196, col: 16, offset: 6990},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 196, col: 16, offset: 6990},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 196, col: 21, offset: 6995},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonDocumentBlock113,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 196, col: 25, offset: 6999},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 196, col: 31, offset: 7005},
																			run: (*parser).callonDocumentBlock116,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 196, col: 31, offset: 7005},
																				expr: &choiceExpr{
																					pos: position{line: 196, col: 32, offset: 7006},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonDocumentBlock119,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonDocumentBlock122,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonDocumentBlock126,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 196, col: 53, offset: 7027},
																							run: (*parser).callonDocumentBlock128,
																							expr: &seqExpr{
																								pos: position{line: 196, col: 54, offset: 7028},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 196, col: 54, offset: 7028},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 196, col: 63, offset: 7037},
																										expr: &litMatcher{
																											pos:        position{line: 196, col: 64, offset: 7038},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 196, col: 69, offset: 7043,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 200, col: 4, offset: 7118},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 210, col: 21, offset: 7481},
															run: (*parser).callonDocumentBlock138,
															expr: &litMatcher{
																pos:        position{line: 210, col: 21, offset: 7481},
																val:        "[source]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 212, col: 5, offset: 7539},
															run: (*parser).callonDocumentBlock140,
															expr: &seqExpr{
																pos: position{line: 212, col: 5, offset: 7539},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 212, col: 5, offset: 7539},
																		val:        "[source,",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 212, col: 16, offset: 7550},
																		label: "language",
																		expr: &actionExpr{
																			pos: position{line: 212, col: 26, offset: 7560},
																			run: (*parser).callonDocumentBlock144,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 212, col: 26, offset: 7560},
																				expr: &choiceExpr{
																					pos: position{line: 212, col: 27, offset: 7561},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonDocumentBlock147,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonDocumentBlock150,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonDocumentBlock154,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 212, col: 48, offset: 7582},
																							run: (*parser).callonDocumentBlock156,
																							expr: &seqExpr{
																								pos: position{line: 212, col: 49, offset: 7583},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 212, col: 49, offset: 7583},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 212, col: 58, offset: 7592},
																										expr: &litMatcher{
																											pos:        position{line: 212, col: 59, offset: 7593},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 212, col: 64, offset: 7598,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 216, col: 7, offset: 7688},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 247, col: 20, offset: 8646},
															run: (*parser).callonDocumentBlock166,
															expr: &seqExpr{
																pos: position{line: 247, col: 20, offset: 8646},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 247, col: 20, offset: 8646},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 24, offset: 8650},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonDocumentBlock170,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 247, col: 41, offset: 8667},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonDocumentBlock175,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 45, offset: 8671},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 49, offset: 8675},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 286, col: 16, offset: 9839},
																			run: (*parser).callonDocumentBlock179,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 286, col: 16, offset: 9839},
																				expr: &choiceExpr{
																					pos: position{line: 286, col: 17, offset: 9840},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonDocumentBlock182,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonDocumentBlock185,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonDocumentBlock189,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 286, col: 38, offset: 9861},
																							run: (*parser).callonDocumentBlock191,
																							expr: &seqExpr{
																								pos: position{line: 286, col: 39, offset: 9862},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 286, col: 39, offset: 9862},
																										expr: &choiceExpr{
																											pos: position{line: 1251, col: 8, offset: 48930},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																												&notExpr{
																													pos: position{line: 1249, col: 8, offset: 48919},
																													expr: &anyMatcher{
																														line: 1249, col: 9, offset: 48920,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 44, offset: 9867},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 45, offset: 9868},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 49, offset: 9872},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 50, offset: 9873},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 286, col: 55, offset: 9878,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 70, offset: 8696},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 74, offset: 8700},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 292, col: 15, offset: 9967},
																			run: (*parser).callonDocumentBlock206,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 292, col: 15, offset: 9967},
																				expr: &choiceExpr{
																					pos: position{line: 292, col: 16, offset: 9968},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonDocumentBlock209,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonDocumentBlock212,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonDocumentBlock216,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&seqExpr{
																							pos: position{line: 292, col: 38, offset: 9990},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 292, col: 38, offset: 9990},
																									expr: &choiceExpr{
																										pos: position{line: 1251, col: 8, offset: 48930},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1247, col: 12, offset: 48890},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1247, col: 21, offset: 48899},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																											&notExpr{
																												pos: position{line: 1249, col: 8, offset: 48919},
																												expr: &anyMatcher{
																													line: 1249, col: 9, offset: 48920,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 292, col: 43, offset: 9995},
																									expr: &litMatcher{
																										pos:        position{line: 292, col: 44, offset: 9996},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 292, col: 48, offset: 10000},
																									expr: &litMatcher{
																										pos:        position{line: 292, col: 49, offset: 10001},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 292, col: 54, offset: 10006,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 93, offset: 8719},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 251, col: 1, offset: 8846},
															run: (*parser).callonDocumentBlock231,
															expr: &seqExpr{
																pos: position{line: 251, col: 1, offset: 8846},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 251, col: 1, offset: 8846},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 251, col: 5, offset: 8850},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonDocumentBlock235,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 251, col: 22, offset: 8867},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonDocumentBlock240,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 251, col: 26, offset: 8871},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 251, col: 30, offset: 8875},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 286, col: 16, offset: 9839},
																			run: (*parser).callonDocumentBlock244,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 286, col: 16, offset: 9839},
																				expr: &choiceExpr{
																					pos: position{line: 286, col: 17, offset: 9840},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonDocumentBlock247,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonDocumentBlock250,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonDocumentBlock254,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 286, col: 38, offset: 9861},
																							run: (*parser).callonDocumentBlock256,
																							expr: &seqExpr{
																								pos: position{line: 286, col: 39, offset: 9862},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 286, col: 39, offset: 9862},
																										expr: &choiceExpr{
																											pos: position{line: 1251, col: 8, offset: 48930},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																												&notExpr{
																													pos: position{line: 1249, col: 8, offset: 48919},
																													expr: &anyMatcher{
																														line: 1249, col: 9, offset: 48920,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 44, offset: 9867},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 45, offset: 9868},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 49, offset: 9872},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 50, offset: 9873},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 286, col: 55, offset: 9878,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 251, col: 51, offset: 8896},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 255, col: 1, offset: 9011},
															run: (*parser).callonDocumentBlock270,
															expr: &seqExpr{
																pos: position{line: 255, col: 1, offset: 9011},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 255, col: 1, offset: 9011},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 255, col: 5, offset: 9015},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonDocumentBlock274,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 255, col: 22, offset: 9032},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonDocumentBlock279,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 255, col: 26, offset: 9036},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 263, col: 20, offset: 9179},
															run: (*parser).callonDocumentBlock282,
															expr: &seqExpr{
																pos: position{line: 263, col: 20, offset: 9179},
																exprs: []interface{}{
																	&labeledExpr{
																		pos:   position{line: 263, col: 20, offset: 9179},
																		label: "attribute",
																		expr: &choiceExpr{
																			pos: position{line: 263, col: 31, offset: 9190},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 263, col: 31, offset: 9190},
																					run: (*parser).callonDocumentBlock286,
																					expr: &seqExpr{
																						pos: position{line: 263, col: 31, offset: 9190},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 263, col: 31, offset: 9190},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 35, offset: 9194},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonDocumentBlock290,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 263, col: 52, offset: 9211},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonDocumentBlock295,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 56, offset: 9215},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 60, offset: 9219},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 286, col: 16, offset: 9839},
																									run: (*parser).callonDocumentBlock299,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 286, col: 16, offset: 9839},
																										expr: &choiceExpr{
																											pos: position{line: 286, col: 17, offset: 9840},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1205, col: 14, offset: 47940},
																													run: (*parser).callonDocumentBlock302,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1205, col: 14, offset: 47940},
																														expr: &charClassMatcher{
																															pos:        position{line: 1205, col: 14, offset: 47940},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1215, col: 11, offset: 48287},
																													run: (*parser).callonDocumentBlock305,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1215, col: 11, offset: 48287},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonDocumentBlock309,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 286, col: 38, offset: 9861},
																													run: (*parser).callonDocumentBlock311,
																													expr: &seqExpr{
																														pos: position{line: 286, col: 39, offset: 9862},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 286, col: 39, offset: 9862},
																																expr: &choiceExpr{
																																	pos: position{line: 1251, col: 8, offset: 48930},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1247, col: 12, offset: 48890},
																																			val:        "\r\n",
																																			ignoreCase: false,
																																		},
																																		&charClassMatcher{
																																			pos:        position{line: 1247, col: 21, offset: 48899},
																																			val:        "[\\r\\n]",
																																			chars:      []rune{'\r', '\n'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																		&notExpr{
																																			pos: position{line: 1249, col: 8, offset: 48919},
																																			expr: &anyMatcher{
																																				line: 1249, col: 9, offset: 48920,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 44, offset: 9867},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 45, offset: 9868},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 49, offset: 9872},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 50, offset: 9873},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 286, col: 55, offset: 9878,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 81, offset: 9240},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 85, offset: 9244},
																								label: "title",
																								expr: &actionExpr{
																									pos: position{line: 292, col: 15, offset: 9967},
																									run: (*parser).callonDocumentBlock326,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 292, col: 15, offset: 9967},
																										expr: &choiceExpr{
																											pos: position{line: 292, col: 16, offset: 9968},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1205, col: 14, offset: 47940},
																													run: (*parser).callonDocumentBlock329,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1205, col: 14, offset: 47940},
																														expr: &charClassMatcher{
																															pos:        position{line: 1205, col: 14, offset: 47940},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1215, col: 11, offset: 48287},
																													run: (*parser).callonDocumentBlock332,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1215, col: 11, offset: 48287},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonDocumentBlock336,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&seqExpr{
																													pos: position{line: 292, col: 38, offset: 9990},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 292, col: 38, offset: 9990},
																															expr: &choiceExpr{
																																pos: position{line: 1251, col: 8, offset: 48930},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1247, col: 12, offset: 48890},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1247, col: 21, offset: 48899},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																	&notExpr{
																																		pos: position{line: 1249, col: 8, offset: 48919},
																																		expr: &anyMatcher{
																																			line: 1249, col: 9, offset: 48920,
																																		},
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 292, col: 43, offset: 9995},
																															expr: &litMatcher{
																																pos:        position{line: 292, col: 44, offset: 9996},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 292, col: 48, offset: 10000},
																															expr: &litMatcher{
																																pos:        position{line: 292, col: 49, offset: 10001},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 292, col: 54, offset: 10006,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 104, offset: 9263},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 267, col: 5, offset: 9406},
																					run: (*parser).callonDocumentBlock351,
																					expr: &seqExpr{
																						pos: position{line: 267, col: 5, offset: 9406},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 267, col: 5, offset: 9406},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 267, col: 9, offset: 9410},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonDocumentBlock355,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 267, col: 26, offset: 9427},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonDocumentBlock360,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 267, col: 30, offset: 9431},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 267, col: 34, offset: 9435},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 286, col: 16, offset: 9839},
																									run: (*parser).callonDocumentBlock364,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 286, col: 16, offset: 9839},
																										expr: &choiceExpr{
																											pos: position{line: 286, col: 17, offset: 9840},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1205, col: 14, offset: 47940},
																													run: (*parser).callonDocumentBlock367,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1205, col: 14, offset: 47940},
																														expr: &charClassMatcher{
																															pos:        position{line: 1205, col: 14, offset: 47940},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1215, col: 11, offset: 48287},
																													run: (*parser).callonDocumentBlock370,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1215, col: 11, offset: 48287},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonDocumentBlock374,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 286, col: 38, offset: 9861},
																													run: (*parser).callonDocumentBlock376,
																													expr: &seqExpr{
																														pos: position{line: 286, col: 39, offset: 9862},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 286, col: 39, offset: 9862},
																																expr: &choiceExpr{
																																	pos: position{line: 1251, col: 8, offset: 48930},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1247, col: 12, offset: 48890},
																																			val:        "\r\n",
																																			ignoreCase: false,
																																		},
																																		&charClassMatcher{
																																			pos:        position{line: 1247, col: 21, offset: 48899},
																																			val:        "[\\r\\n]",
																																			chars:      []rune{'\r', '\n'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																		&notExpr{
																																			pos: position{line: 1249, col: 8, offset: 48919},
																																			expr: &anyMatcher{
																																				line: 1249, col: 9, offset: 48920,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 44, offset: 9867},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 45, offset: 9868},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 49, offset: 9872},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 50, offset: 9873},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 286, col: 55, offset: 9878,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 267, col: 55, offset: 9456},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 271, col: 5, offset: 9587},
																					run: (*parser).callonDocumentBlock390,
																					expr: &seqExpr{
																						pos: position{line: 271, col: 5, offset: 9587},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 271, col: 5, offset: 9587},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 271, col: 9, offset: 9591},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonDocumentBlock394,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 271, col: 26, offset: 9608},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonDocumentBlock399,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 271, col: 30, offset: 9612},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&stateCodeExpr{
																		pos: position{line: 275, col: 1, offset: 9688},
																		run: (*parser).callonDocumentBlock402,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 205, col: 30, offset: 7283},
															run: (*parser).callonDocumentBlock403,
															expr: &seqExpr{
																pos: position{line: 205, col: 30, offset: 7283},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 205, col: 30, offset: 7283},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 205, col: 34, offset: 7287},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 564, col: 19, offset: 20877},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 564, col: 19, offset: 20877},
																					run: (*parser).callonDocumentBlock408,
																					expr: &litMatcher{
																						pos:        position{line: 564, col: 19, offset: 20877},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 566, col: 9, offset: 20923},
																					run: (*parser).callonDocumentBlock410,
																					expr: &litMatcher{
																						pos:        position{line: 566, col: 9, offset: 20923},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 568, col: 9, offset: 20971},
																					run: (*parser).callonDocumentBlock412,
																					expr: &litMatcher{
																						pos:        position{line: 568, col: 9, offset: 20971},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 570, col: 9, offset: 21029},
																					run: (*parser).callonDocumentBlock414,
																					expr: &litMatcher{
																						pos:        position{line: 570, col: 9, offset: 21029},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 572, col: 9, offset: 21083},
																					run: (*parser).callonDocumentBlock416,
																					expr: &litMatcher{
																						pos:        position{line: 572, col: 9, offset: 21083},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 205, col: 53, offset: 7306},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 243, col: 21, offset: 8543},
															run: (*parser).callonDocumentBlock419,
															expr: &litMatcher{
																pos:        position{line: 243, col: 21, offset: 8543},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 221, col: 19, offset: 7839},
															run: (*parser).callonDocumentBlock421,
															expr: &seqExpr{
																pos: position{line: 221, col: 19, offset: 7839},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 221, col: 19, offset: 7839},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 221, col: 23, offset: 7843},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonDocumentBlock427,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 221, col: 27, offset: 7847},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 221, col: 38, offset: 7858},
																			expr: &choiceExpr{
																				pos: position{line: 225, col: 21, offset: 7971},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 225, col: 21, offset: 7971},
																						run: (*parser).callonDocumentBlock432,
																						expr: &seqExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 225, col: 21, offset: 7971},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										run: (*parser).callonDocumentBlock435,
																										expr: &seqExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9116},
																														run: (*parser).callonDocumentBlock438,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9116},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 28, offset: 8242},
																													expr: &actionExpr{
																														pos: position{line: 282, col: 14, offset: 9780},
																														run: (*parser).callonDocumentBlock441,
																														expr: &litMatcher{
																															pos:        position{line: 282, col: 14, offset: 9780},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 39, offset: 8253},
																													expr: &actionExpr{
																														pos: position{line: 1170, col: 16, offset: 47067},
																														run: (*parser).callonDocumentBlock444,
																														expr: &litMatcher{
																															pos:        position{line: 1170, col: 16, offset: 47067},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 231, col: 52, offset: 8266},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 231, col: 56, offset: 8270},
																														expr: &choiceExpr{
																															pos: position{line: 231, col: 57, offset: 8271},
																															alternatives: []interface{}{
																																&actionExpr{
																																	pos: position{line: 1205, col: 14, offset: 47940},
																																	run: (*parser).callonDocumentBlock449,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		expr: &charClassMatcher{
																																			pos:        position{line: 1205, col: 14, offset: 47940},
																																			val:        "[a-zA-Z0-9]",
																																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 1215, col: 11, offset: 48287},
																																	run: (*parser).callonDocumentBlock452,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		expr: &choiceExpr{
																																			pos: position{line: 1243, col: 7, offset: 48832},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1243, col: 7, offset: 48832},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 1243, col: 13, offset: 48838},
																																					run: (*parser).callonDocumentBlock456,
																																					expr: &litMatcher{
																																						pos:        position{line: 1243, col: 13, offset: 48838},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 231, col: 78, offset: 8292},
																																	run: (*parser).callonDocumentBlock458,
																																	expr: &seqExpr{
																																		pos: position{line: 231, col: 79, offset: 8293},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 231, col: 79, offset: 8293},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 80, offset: 8294},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 84, offset: 8298},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 85, offset: 8299},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 89, offset: 8303},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 90, offset: 8304},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 231, col: 95, offset: 8309,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 225, col: 40, offset: 7990},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 225, col: 44, offset: 7994},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 237, col: 19, offset: 8403},
																										run: (*parser).callonDocumentBlock469,
																										expr: &labeledExpr{
																											pos:   position{line: 237, col: 19, offset: 8403},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 237, col: 25, offset: 8409},
																												expr: &choiceExpr{
																													pos: position{line: 237, col: 26, offset: 8410},
																													alternatives: []interface{}{
																														&actionExpr{
																															pos: position{line: 1205, col: 14, offset: 47940},
																															run: (*parser).callonDocumentBlock473,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1205, col: 14, offset: 47940},
																																expr: &charClassMatcher{
																																	pos:        position{line: 1205, col: 14, offset: 47940},
																																	val:        "[a-zA-Z0-9]",
																																	ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 1215, col: 11, offset: 48287},
																															run: (*parser).callonDocumentBlock476,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1215, col: 11, offset: 48287},
																																expr: &choiceExpr{
																																	pos: position{line: 1243, col: 7, offset: 48832},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1243, col: 7, offset: 48832},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 1243, col: 13, offset: 48838},
																																			run: (*parser).callonDocumentBlock480,
																																			expr: &litMatcher{
																																				pos:        position{line: 1243, col: 13, offset: 48838},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 237, col: 47, offset: 8431},
																															run: (*parser).callonDocumentBlock482,
																															expr: &seqExpr{
																																pos: position{line: 237, col: 48, offset: 8432},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 237, col: 48, offset: 8432},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 49, offset: 8433},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 237, col: 53, offset: 8437},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 54, offset: 8438},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 237, col: 58, offset: 8442},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 59, offset: 8443},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 237, col: 64, offset: 8448,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 225, col: 67, offset: 8017},
																									expr: &litMatcher{
																										pos:        position{line: 225, col: 67, offset: 8017},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 225, col: 72, offset: 8022},
																									expr: &choiceExpr{
																										pos: position{line: 1243, col: 7, offset: 48832},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1243, col: 7, offset: 48832},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1243, col: 13, offset: 48838},
																												run: (*parser).callonDocumentBlock496,
																												expr: &litMatcher{
																													pos:        position{line: 1243, col: 13, offset: 48838},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 227, col: 5, offset: 8106},
																						run: (*parser).callonDocumentBlock498,
																						expr: &seqExpr{
																							pos: position{line: 227, col: 5, offset: 8106},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 227, col: 5, offset: 8106},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										run: (*parser).callonDocumentBlock501,
																										expr: &seqExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9116},
																														run: (*parser).callonDocumentBlock504,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9116},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 28, offset: 8242},
																													expr: &actionExpr{
																														pos: position{line: 282, col: 14, offset: 9780},
																														run: (*parser).callonDocumentBlock507,
																														expr: &litMatcher{
																															pos:        position{line: 282, col: 14, offset: 9780},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 39, offset: 8253},
																													expr: &actionExpr{
																														pos: position{line: 1170, col: 16, offset: 47067},
																														run: (*parser).callonDocumentBlock510,
																														expr: &litMatcher{
																															pos:        position{line: 1170, col: 16, offset: 47067},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 231, col: 52, offset: 8266},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 231, col: 56, offset: 8270},
																														expr: &choiceExpr{
																															pos: position{line: 231, col: 57, offset: 8271},
																															alternatives: []interface{}{
																																&actionExpr{
																																	pos: position{line: 1205, col: 14, offset: 47940},
																																	run: (*parser).callonDocumentBlock515,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		expr: &charClassMatcher{
																																			pos:        position{line: 1205, col: 14, offset: 47940},
																																			val:        "[a-zA-Z0-9]",
																																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 1215, col: 11, offset: 48287},
																																	run: (*parser).callonDocumentBlock518,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		expr: &choiceExpr{
																																			pos: position{line: 1243, col: 7, offset: 48832},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1243, col: 7, offset: 48832},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 1243, col: 13, offset: 48838},
																																					run: (*parser).callonDocumentBlock522,
																																					expr: &litMatcher{
																																						pos:        position{line: 1243, col: 13, offset: 48838},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 231, col: 78, offset: 8292},
																																	run: (*parser).callonDocumentBlock524,
																																	expr: &seqExpr{
																																		pos: position{line: 231, col: 79, offset: 8293},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 231, col: 79, offset: 8293},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 80, offset: 8294},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 84, offset: 8298},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 85, offset: 8299},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 89, offset: 8303},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 90, offset: 8304},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 231, col: 95, offset: 8309,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 227, col: 24, offset: 8125},
																									expr: &litMatcher{
																										pos:        position{line: 227, col: 24, offset: 8125},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 227, col: 29, offset: 8130},
																									expr: &choiceExpr{
																										pos: position{line: 1243, col: 7, offset: 48832},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1243, col: 7, offset: 48832},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1243, col: 13, offset: 48838},
																												run: (*parser).callonDocumentBlock538,
																												expr: &litMatcher{
																													pos:        position{line: 1243, col: 13, offset: 48838},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 221, col: 59, offset: 7879},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 165, col: 170, offset: 6018},
												expr: &choiceExpr{
													pos: position{line: 1243, col: 7, offset: 48832},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1243, col: 7, offset: 48832},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1243, col: 13, offset: 48838},
															run: (*parser).callonDocumentBlock544,
															expr: &litMatcher{
																pos:        position{line: 1243, col: 13, offset: 48838},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1251, col: 8, offset: 48930},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1247, col: 12, offset: 48890},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1247, col: 21, offset: 48899},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1249, col: 8, offset: 48919},
														expr: &anyMatcher{
															line: 1249, col: 9, offset: 48920,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 22, col: 49, offset: 739},
							label: "block",
							expr: &choiceExpr{
								pos: position{line: 22, col: 56, offset: 746},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 22, col: 56, offset: 746},
										name: "Section",
									},
									&ruleRefExpr{
										pos:  position{line: 22, col: 66, offset: 756},
										name: "DocumentElement",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "FrontMatter",
			pos:  position{line: 29, col: 1, offset: 953},
			expr: &ruleRefExpr{
				pos:  position{line: 29, col: 16, offset: 968},
				name: "YamlFrontMatter",
			},
		},
		{
			name: "FrontMatter",
			pos:  position{line: 31, col: 1, offset: 986},
			expr: &actionExpr{
				pos: position{line: 31, col: 16, offset: 1001},
				run: (*parser).callonFrontMatter1,
				expr: &seqExpr{
					pos: position{line: 31, col: 16, offset: 1001},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 35, col: 26, offset: 1160},
							val:        "---",
							ignoreCase: false,
						},
						&choiceExpr{
							pos: position{line: 1251, col: 8, offset: 48930},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1247, col: 12, offset: 48890},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1247, col: 21, offset: 48899},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1249, col: 8, offset: 48919},
									expr: &anyMatcher{
										line: 1249, col: 9, offset: 48920,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 31, col: 37, offset: 1022},
							label: "content",
							expr: &actionExpr{
								pos: position{line: 37, col: 27, offset: 1197},
								run: (*parser).callonFrontMatter10,
								expr: &zeroOrMoreExpr{
									pos: position{line: 37, col: 27, offset: 1197},
									expr: &choiceExpr{
										pos: position{line: 37, col: 28, offset: 1198},
										alternatives: []interface{}{
											&actionExpr{
												pos: position{line: 1205, col: 14, offset: 47940},
												run: (*parser).callonFrontMatter13,
												expr: &oneOrMoreExpr{
													pos: position{line: 1205, col: 14, offset: 47940},
													expr: &charClassMatcher{
														pos:        position{line: 1205, col: 14, offset: 47940},
														val:        "[a-zA-Z0-9]",
														ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
														ignoreCase: false,
														inverted:   false,
													},
												},
											},
											&actionExpr{
												pos: position{line: 1215, col: 11, offset: 48287},
												run: (*parser).callonFrontMatter16,
												expr: &oneOrMoreExpr{
													pos: position{line: 1215, col: 11, offset: 48287},
													expr: &choiceExpr{
														pos: position{line: 1243, col: 7, offset: 48832},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1243, col: 7, offset: 48832},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1243, col: 13, offset: 48838},
																run: (*parser).callonFrontMatter20,
																expr: &litMatcher{
																	pos:        position{line: 1243, col: 13, offset: 48838},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
											&actionExpr{
												pos: position{line: 37, col: 49, offset: 1219},
												run: (*parser).callonFrontMatter22,
												expr: &seqExpr{
													pos: position{line: 37, col: 50, offset: 1220},
													exprs: []interface{}{
														&notExpr{
															pos: position{line: 37, col: 50, offset: 1220},
															expr: &seqExpr{
																pos: position{line: 35, col: 26, offset: 1160},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 35, col: 26, offset: 1160},
																		val:        "---",
																		ignoreCase: false,
																	},
																	&choiceExpr{
																		pos: position{line: 1251, col: 8, offset: 48930},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1247, col: 12, offset: 48890},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1247, col: 21, offset: 48899},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																			&notExpr{
																				pos: position{line: 1249, col: 8, offset: 48919},
																				expr: &anyMatcher{
																					line: 1249, col: 9, offset: 48920,
																				},
																			},
																		},
																	},
																},
															},
														},
														&anyMatcher{
															line: 37, col: 73, offset: 1243,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 35, col: 26, offset: 1160},
							val:        "---",
							ignoreCase: false,
						},
						&choiceExpr{
							pos: position{line: 1251, col: 8, offset: 48930},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1247, col: 12, offset: 48890},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1247, col: 21, offset: 48899},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1249, col: 8, offset: 48919},
									expr: &anyMatcher{
										line: 1249, col: 9, offset: 48920,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "DocumentHeader",
			pos:  position{line: 47, col: 1, offset: 1502},
			expr: &actionExpr{
				pos: position{line: 47, col: 19, offset: 1520},
				run: (*parser).callonDocumentHeader1,
				expr: &seqExpr{
					pos: position{line: 47, col: 19, offset: 1520},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 47, col: 19, offset: 1520},
							label: "header",
							expr: &ruleRefExpr{
								pos:  position{line: 47, col: 27, offset: 1528},
								name: "Section0TitleWithAttributes",
							},
						},
						&labeledExpr{
							pos:   position{line: 47, col: 56, offset: 1557},
							label: "authors",
							expr: &zeroOrOneExpr{
								pos: position{line: 47, col: 65, offset: 1566},
								expr: &choiceExpr{
									pos: position{line: 51, col: 20, offset: 1780},
									alternatives: []interface{}{
										&actionExpr{
											pos: position{line: 53, col: 30, offset: 1867},
											run: (*parser).callonDocumentHeader8,
											expr: &seqExpr{
												pos: position{line: 53, col: 30, offset: 1867},
												exprs: []interface{}{
													&zeroOrMoreExpr{
														pos: position{line: 53, col: 30, offset: 1867},
														expr: &choiceExpr{
															pos: position{line: 1243, col: 7, offset: 48832},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1243, col: 7, offset: 48832},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1243, col: 13, offset: 48838},
																	run: (*parser).callonDocumentHeader13,
																	expr: &litMatcher{
																		pos:        position{line: 1243, col: 13, offset: 48838},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&notExpr{
														pos: position{line: 53, col: 34, offset: 1871},
														expr: &litMatcher{
															pos:        position{line: 53, col: 35, offset: 1872},
															val:        ":",
															ignoreCase: false,
														},
													},
													&labeledExpr{
														pos:   position{line: 53, col: 39, offset: 1876},
														label: "authors",
														expr: &oneOrMoreExpr{
															pos: position{line: 53, col: 48, offset: 1885},
															expr: &actionExpr{
																pos: position{line: 61, col: 19, offset: 2136},
																run: (*parser).callonDocumentHeader19,
																expr: &seqExpr{
																	pos: position{line: 61, col: 19, offset: 2136},
																	exprs: []interface{}{
																		&zeroOrMoreExpr{
																			pos: position{line: 61, col: 19, offset: 2136},
																			expr: &choiceExpr{
																				pos: position{line: 1243, col: 7, offset: 48832},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1243, col: 7, offset: 48832},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1243, col: 13, offset: 48838},
																						run: (*parser).callonDocumentHeader24,
																						expr: &litMatcher{
																							pos:        position{line: 1243, col: 13, offset: 48838},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 61, col: 23, offset: 2140},
																			label: "namePart1",
																			expr: &actionExpr{
																				pos: position{line: 66, col: 27, offset: 2476},
																				run: (*parser).callonDocumentHeader27,
																				expr: &seqExpr{
																					pos: position{line: 66, col: 27, offset: 2476},
																					exprs: []interface{}{
																						&oneOrMoreExpr{
																							pos: position{line: 66, col: 27, offset: 2476},
																							expr: &choiceExpr{
																								pos: position{line: 66, col: 28, offset: 2477},
																								alternatives: []interface{}{
																									&actionExpr{
																										pos: position{line: 1205, col: 14, offset: 47940},
																										run: (*parser).callonDocumentHeader31,
																										expr: &oneOrMoreExpr{
																											pos: position{line: 1205, col: 14, offset: 47940},
																											expr: &charClassMatcher{
																												pos:        position{line: 1205, col: 14, offset: 47940},
																												val:        "[a-zA-Z0-9]",
																												ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																									&actionExpr{
																										pos: position{line: 66, col: 40, offset: 2489},
																										run: (*parser).callonDocumentHeader34,
																										expr: &seqExpr{
																											pos: position{line: 66, col: 41, offset: 2490},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 66, col: 41, offset: 2490},
																													expr: &litMatcher{
																														pos:        position{line: 66, col: 42, offset: 2491},
																														val:        "<",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 66, col: 46, offset: 2495},
																													expr: &litMatcher{
																														pos:        position{line: 66, col: 47, offset: 2496},
																														val:        ";",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 66, col: 51, offset: 2500},
																													expr: &choiceExpr{
																														pos: position{line: 1247, col: 12, offset: 48890},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1247, col: 12, offset: 48890},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1247, col: 21, offset: 48899},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 66, col: 60, offset: 2509},
																													expr: &choiceExpr{
																														pos: position{line: 1243, col: 7, offset: 48832},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1243, col: 7, offset: 48832},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1243, col: 13, offset: 48838},
																																run: (*parser).callonDocumentHeader47,
																																expr: &litMatcher{
																																	pos:        position{line: 1243, col: 13, offset: 48838},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&anyMatcher{
																													line: 66, col: 64, offset: 2513,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&zeroOrMoreExpr{
																							pos: position{line: 68, col: 5, offset: 2552},
																							expr: &choiceExpr{
																								pos: position{line: 1243, col: 7, offset: 48832},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1243, col: 7, offset: 48832},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1243, col: 13, offset: 48838},
																										run: (*parser).callonDocumentHeader53,
																										expr: &litMatcher{
																											pos:        position{line: 1243, col: 13, offset: 48838},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 61, col: 58, offset: 2175},
																			label: "namePart2",
																			expr: &zeroOrOneExpr{
																				pos: position{line: 61, col: 68, offset: 2185},
																				expr: &actionExpr{
																					pos: position{line: 66, col: 27, offset: 2476},
																					run: (*parser).callonDocumentHeader57,
																					expr: &seqExpr{
																						pos: position{line: 66, col: 27, offset: 2476},
																						exprs: []interface{}{
																							&oneOrMoreExpr{
																								pos: position{line: 66, col: 27, offset: 2476},
																								expr: &choiceExpr{
																									pos: position{line: 66, col: 28, offset: 2477},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 1205, col: 14, offset: 47940},
																											run: (*parser).callonDocumentHeader61,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 1205, col: 14, offset: 47940},
																												expr: &charClassMatcher{
																													pos:        position{line: 1205, col: 14, offset: 47940},
																													val:        "[a-zA-Z0-9]",
																													ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 66, col: 40, offset: 2489},
																											run: (*parser).callonDocumentHeader64,
																											expr: &seqExpr{
																												pos: position{line: 66, col: 41, offset: 2490},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 66, col: 41, offset: 2490},
																														expr: &litMatcher{
																															pos:        position{line: 66, col: 42, offset: 2491},
																															val:        "<",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 66, col: 46, offset: 2495},
																														expr: &litMatcher{
																															pos:        position{line: 66, col: 47, offset: 2496},
																															val:        ";",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 66, col: 51, offset: 2500},
																														expr: &choiceExpr{
																															pos: position{line: 1247, col: 12, offset: 48890},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1247, col: 12, offset: 48890},
																																	val:        "\r\n",
																																	ignoreCase: false,
																																},
																																&charClassMatcher{
																																	pos:        position{line: 1247, col: 21, offset: 48899},
																																	val:        "[\\r\\n]",
																																	chars:      []rune{'\r', '\n'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 66, col: 60, offset: 2509},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonDocumentHeader77,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																													&anyMatcher{
																														line: 66, col: 64, offset: 2513,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 68, col: 5, offset: 2552},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonDocumentHeader83,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 61, col: 94, offset: 2211},
																			label: "namePart3",
																			expr: &zeroOrOneExpr{
																				pos: position{line: 61, col: 104, offset: 2221},
																				expr: &actionExpr{
																					pos: position{line: 66, col: 27, offset: 2476},
																					run: (*parser).callonDocumentHeader87,
																					expr: &seqExpr{
																						pos: position{line: 66, col: 27, offset: 2476},
																						exprs: []interface{}{
																							&oneOrMoreExpr{
																								pos: position{line: 66, col: 27, offset: 2476},
																								expr: &choiceExpr{
																									pos: position{line: 66, col: 28, offset: 2477},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 1205, col: 14, offset: 47940},
																											run: (*parser).callonDocumentHeader91,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 1205, col: 14, offset: 47940},
																												expr: &charClassMatcher{
																													pos:        position{line: 1205, col: 14, offset: 47940},
																													val:        "[a-zA-Z0-9]",
																													ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 66, col: 40, offset: 2489},
																											run: (*parser).callonDocumentHeader94,
																											expr: &seqExpr{
																												pos: position{line: 66, col: 41, offset: 2490},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 66, col: 41, offset: 2490},
																														expr: &litMatcher{
																															pos:        position{line: 66, col: 42, offset: 2491},
																															val:        "<",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 66, col: 46, offset: 2495},
																														expr: &litMatcher{
																															pos:        position{line: 66, col: 47, offset: 2496},
																															val:        ";",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 66, col: 51, offset: 2500},
																														expr: &choiceExpr{
																															pos: position{line: 1247, col: 12, offset: 48890},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1247, col: 12, offset: 48890},
																																	val:        "\r\n",
																																	ignoreCase: false,
																																},
																																&charClassMatcher{
																																	pos:        position{line: 1247, col: 21, offset: 48899},
																																	val:        "[\\r\\n]",
																																	chars:      []rune{'\r', '\n'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 66, col: 60, offset: 2509},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonDocumentHeader107,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																													&anyMatcher{
																														line: 66, col: 64, offset: 2513,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 68, col: 5, offset: 2552},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonDocumentHeader113,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 61, col: 130, offset: 2247},
																			label: "email",
																			expr: &zeroOrOneExpr{
																				pos: position{line: 61, col: 136, offset: 2253},
																				expr: &actionExpr{
																					pos: position{line: 72, col: 24, offset: 2615},
																					run: (*parser).callonDocumentHeader117,
																					expr: &seqExpr{
																						pos: position{line: 72, col: 24, offset: 2615},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 72, col: 24, offset: 2615},
																								val:        "<",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 72, col: 28, offset: 2619},
																								label: "email",
																								expr: &oneOrMoreExpr{
																									pos: position{line: 72, col: 34, offset: 2625},
																									expr: &choiceExpr{
																										pos: position{line: 72, col: 35, offset: 2626},
																										alternatives: []interface{}{
																											&actionExpr{
																												pos: position{line: 1205, col: 14, offset: 47940},
																												run: (*parser).callonDocumentHeader123,
																												expr: &oneOrMoreExpr{
																													pos: position{line: 1205, col: 14, offset: 47940},
																													expr: &charClassMatcher{
																														pos:        position{line: 1205, col: 14, offset: 47940},
																														val:        "[a-zA-Z0-9]",
																														ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																											&actionExpr{
																												pos: position{line: 72, col: 47, offset: 2638},
																												run: (*parser).callonDocumentHeader126,
																												expr: &seqExpr{
																													pos: position{line: 72, col: 48, offset: 2639},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 72, col: 48, offset: 2639},
																															expr: &litMatcher{
																																pos:        position{line: 72, col: 49, offset: 2640},
																																val:        ">",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 72, col: 53, offset: 2644},
																															expr: &choiceExpr{
																																pos: position{line: 1251, col: 8, offset: 48930},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1247, col: 12, offset: 48890},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1247, col: 21, offset: 48899},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																	&notExpr{
																																		pos: position{line: 1249, col: 8, offset: 48919},
																																		expr: &anyMatcher{
																																			line: 1249, col: 9, offset: 48920,
																																		},
																																	},
																																},
																															},
																														},
																														&anyMatcher{
																															line: 72, col: 59, offset: 2650,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 74, col: 5, offset: 2689},
																								val:        ">",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 61, col: 159, offset: 2276},
																			expr: &choiceExpr{
																				pos: position{line: 1243, col: 7, offset: 48832},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1243, col: 7, offset: 48832},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1243, col: 13, offset: 48838},
																						run: (*parser).callonDocumentHeader141,
																						expr: &litMatcher{
																							pos:        position{line: 1243, col: 13, offset: 48838},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 61, col: 163, offset: 2280},
																			expr: &litMatcher{
																				pos:        position{line: 61, col: 163, offset: 2280},
																				val:        ";",
																				ignoreCase: false,
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 61, col: 168, offset: 2285},
																			expr: &choiceExpr{
																				pos: position{line: 1243, col: 7, offset: 48832},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1243, col: 7, offset: 48832},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1243, col: 13, offset: 48838},
																						run: (*parser).callonDocumentHeader148,
																						expr: &litMatcher{
																							pos:        position{line: 1243, col: 13, offset: 48838},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1251, col: 8, offset: 48930},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1247, col: 12, offset: 48890},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1247, col: 21, offset: 48899},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1249, col: 8, offset: 48919},
																expr: &anyMatcher{
																	line: 1249, col: 9, offset: 48920,
																},
															},
														},
													},
												},
											},
										},
										&actionExpr{
											pos: position{line: 57, col: 33, offset: 2004},
											run: (*parser).callonDocumentHeader155,
											expr: &seqExpr{
												pos: position{line: 57, col: 33, offset: 2004},
												exprs: []interface{}{
													&zeroOrMoreExpr{
														pos: position{line: 57, col: 33, offset: 2004},
														expr: &choiceExpr{
															pos: position{line: 1243, col: 7, offset: 48832},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1243, col: 7, offset: 48832},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1243, col: 13, offset: 48838},
																	run: (*parser).callonDocumentHeader160,
																	expr: &litMatcher{
																		pos:        position{line: 1243, col: 13, offset: 48838},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&litMatcher{
														pos:        position{line: 57, col: 37, offset: 2008},
														val:        ":author:",
														ignoreCase: false,
													},
													&labeledExpr{
														pos:   position{line: 57, col: 48, offset: 2019},
														label: "author",
														expr: &actionExpr{
															pos: position{line: 61, col: 19, offset: 2136},
															run: (*parser).callonDocumentHeader164,
															expr: &seqExpr{
																pos: position{line: 61, col: 19, offset: 2136},
																exprs: []interface{}{
																	&zeroOrMoreExpr{
																		pos: position{line: 61, col: 19, offset: 2136},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonDocumentHeader169,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 61, col: 23, offset: 2140},
																		label: "namePart1",
																		expr: &actionExpr{
																			pos: position{line: 66, col: 27, offset: 2476},
																			run: (*parser).callonDocumentHeader172,
																			expr: &seqExpr{
																				pos: position{line: 66, col: 27, offset: 2476},
																				exprs: []interface{}{
																					&oneOrMoreExpr{
																						pos: position{line: 66, col: 27, offset: 2476},
																						expr: &choiceExpr{
																							pos: position{line: 66, col: 28, offset: 2477},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 1205, col: 14, offset: 47940},
																									run: (*parser).callonDocumentHeader176,
																									expr: &oneOrMoreExpr{
																										pos: position{line: 1205, col: 14, offset: 47940},
																										expr: &charClassMatcher{
																											pos:        position{line: 1205, col: 14, offset: 47940},
																											val:        "[a-zA-Z0-9]",
																											ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																											ignoreCase: false,
																											inverted:   false,
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 66, col: 40, offset: 2489},
																									run: (*parser).callonDocumentHeader179,
																									expr: &seqExpr{
																										pos: position{line: 66, col: 41, offset: 2490},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 66, col: 41, offset: 2490},
																												expr: &litMatcher{
																													pos:        position{line: 66, col: 42, offset: 2491},
																													val:        "<",
																													ignoreCase: false,
																												},
																											},
																											&notExpr{
																												pos: position{line: 66, col: 46, offset: 2495},
																												expr: &litMatcher{
																													pos:        position{line: 66, col: 47, offset: 2496},
																													val:        ";",
																													ignoreCase: false,
																												},
																											},
																											&notExpr{
																												pos: position{line: 66, col: 51, offset: 2500},
																												expr: &choiceExpr{
																													pos: position{line: 1247, col: 12, offset: 48890},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1247, col: 12, offset: 48890},
																															val:        "\r\n",
																															ignoreCase: false,
																														},
																														&charClassMatcher{
																															pos:        position{line: 1247, col: 21, offset: 48899},
																															val:        "[\\r\\n]",
																															chars:      []rune{'\r', '\n'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 66, col: 60, offset: 2509},
																												expr: &choiceExpr{
																													pos: position{line: 1243, col: 7, offset: 48832},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1243, col: 7, offset: 48832},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1243, col: 13, offset: 48838},
																															run: (*parser).callonDocumentHeader192,
																															expr: &litMatcher{
																																pos:        position{line: 1243, col: 13, offset: 48838},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																											&anyMatcher{
																												line: 66, col: 64, offset: 2513,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 68, col: 5, offset: 2552},
																						expr: &choiceExpr{
																							pos: position{line: 1243, col: 7, offset: 48832},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1243, col: 7, offset: 48832},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1243, col: 13, offset: 48838},
																									run: (*parser).callonDocumentHeader198,
																									expr: &litMatcher{
																										pos:        position{line: 1243, col: 13, offset: 48838},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 61, col: 58, offset: 2175},
																		label: "namePart2",
																		expr: &zeroOrOneExpr{
																			pos: position{line: 61, col: 68, offset: 2185},
																			expr: &actionExpr{
																				pos: position{line: 66, col: 27, offset: 2476},
																				run: (*parser).callonDocumentHeader57,
																				expr: &seqExpr{
																					pos: position{line: 66, col: 27, offset: 2476},
																					exprs: []interface{}{
																						&oneOrMoreExpr{
																							pos: position{line: 66, col: 27, offset: 2476},
																							expr: &choiceExpr{
																								pos: position{line: 66, col: 28, offset: 2477},
																								alternatives: []interface{}{
																									&actionExpr{
																										pos: position{line: 1205, col: 14, offset: 47940},
																										run: (*parser).callonDocumentHeader61,
																										expr: &oneOrMoreExpr{
																											pos: position{line: 1205, col: 14, offset: 47940},
																											expr: &charClassMatcher{
																												pos:        position{line: 1205, col: 14, offset: 47940},
																												val:        "[a-zA-Z0-9]",
																												ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																									&actionExpr{
																										pos: position{line: 66, col: 40, offset: 2489},
																										run: (*parser).callonDocumentHeader64,
																										expr: &seqExpr{
																											pos: position{line: 66, col: 41, offset: 2490},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 66, col: 41, offset: 2490},
																													expr: &litMatcher{
																														pos:        position{line: 66, col: 42, offset: 2491},
																														val:        "<",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 66, col: 46, offset: 2495},
																													expr: &litMatcher{
																														pos:        position{line: 66, col: 47, offset: 2496},
																														val:        ";",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 66, col: 51, offset: 2500},
																													expr: &choiceExpr{
																														pos: position{line: 1247, col: 12, offset: 48890},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1247, col: 12, offset: 48890},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1247, col: 21, offset: 48899},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 66, col: 60, offset: 2509},
																													expr: &choiceExpr{
																														pos: position{line: 1243, col: 7, offset: 48832},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1243, col: 7, offset: 48832},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1243, col: 13, offset: 48838},
																																run: (*parser).callonDocumentHeader77,
																																expr: &litMatcher{
																																	pos:        position{line: 1243, col: 13, offset: 48838},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&anyMatcher{
																													line: 66, col: 64, offset: 2513,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&zeroOrMoreExpr{
																							pos: position{line: 68, col: 5, offset: 2552},
																							expr: &choiceExpr{
																								pos: position{line: 1243, col: 7, offset: 48832},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1243, col: 7, offset: 48832},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1243, col: 13, offset: 48838},
																										run: (*parser).callonDocumentHeader83,
																										expr: &litMatcher{
																											pos:        position{line: 1243, col: 13, offset: 48838},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 61, col: 94, offset: 2211},
																		label: "namePart3",
																		expr: &zeroOrOneExpr{
																			pos: position{line: 61, col: 104, offset: 2221},
																			expr: &actionExpr{
																				pos: position{line: 66, col: 27, offset: 2476},
																				run: (*parser).callonDocumentHeader87,
																				expr: &seqExpr{
																					pos: position{line: 66, col: 27, offset: 2476},
																					exprs: []interface{}{
																						&oneOrMoreExpr{
																							pos: position{line: 66, col: 27, offset: 2476},
																							expr: &choiceExpr{
																								pos: position{line: 66, col: 28, offset: 2477},
																								alternatives: []interface{}{
																									&actionExpr{
																										pos: position{line: 1205, col: 14, offset: 47940},
																										run: (*parser).callonDocumentHeader91,
																										expr: &oneOrMoreExpr{
																											pos: position{line: 1205, col: 14, offset: 47940},
																											expr: &charClassMatcher{
																												pos:        position{line: 1205, col: 14, offset: 47940},
																												val:        "[a-zA-Z0-9]",
																												ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																									&actionExpr{
																										pos: position{line: 66, col: 40, offset: 2489},
																										run: (*parser).callonDocumentHeader94,
																										expr: &seqExpr{
																											pos: position{line: 66, col: 41, offset: 2490},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 66, col: 41, offset: 2490},
																													expr: &litMatcher{
																														pos:        position{line: 66, col: 42, offset: 2491},
																														val:        "<",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 66, col: 46, offset: 2495},
																													expr: &litMatcher{
																														pos:        position{line: 66, col: 47, offset: 2496},
																														val:        ";",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 66, col: 51, offset: 2500},
																													expr: &choiceExpr{
																														pos: position{line: 1247, col: 12, offset: 48890},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1247, col: 12, offset: 48890},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1247, col: 21, offset: 48899},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 66, col: 60, offset: 2509},
																													expr: &choiceExpr{
																														pos: position{line: 1243, col: 7, offset: 48832},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1243, col: 7, offset: 48832},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1243, col: 13, offset: 48838},
																																run: (*parser).callonDocumentHeader107,
																																expr: &litMatcher{
																																	pos:        position{line: 1243, col: 13, offset: 48838},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&anyMatcher{
																													line: 66, col: 64, offset: 2513,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&zeroOrMoreExpr{
																							pos: position{line: 68, col: 5, offset: 2552},
																							expr: &choiceExpr{
																								pos: position{line: 1243, col: 7, offset: 48832},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1243, col: 7, offset: 48832},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1243, col: 13, offset: 48838},
																										run: (*parser).callonDocumentHeader113,
																										expr: &litMatcher{
																											pos:        position{line: 1243, col: 13, offset: 48838},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 61, col: 130, offset: 2247},
																		label: "email",
																		expr: &zeroOrOneExpr{
																			pos: position{line: 61, col: 136, offset: 2253},
																			expr: &actionExpr{
																				pos: position{line: 72, col: 24, offset: 2615},
																				run: (*parser).callonDocumentHeader117,
																				expr: &seqExpr{
																					pos: position{line: 72, col: 24, offset: 2615},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 72, col: 24, offset: 2615},
																							val:        "<",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 72, col: 28, offset: 2619},
																							label: "email",
																							expr: &oneOrMoreExpr{
																								pos: position{line: 72, col: 34, offset: 2625},
																								expr: &choiceExpr{
																									pos: position{line: 72, col: 35, offset: 2626},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 1205, col: 14, offset: 47940},
																											run: (*parser).callonDocumentHeader123,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 1205, col: 14, offset: 47940},
																												expr: &charClassMatcher{
																													pos:        position{line: 1205, col: 14, offset: 47940},
																													val:        "[a-zA-Z0-9]",
																													ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 72, col: 47, offset: 2638},
																											run: (*parser).callonDocumentHeader126,
																											expr: &seqExpr{
																												pos: position{line: 72, col: 48, offset: 2639},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 72, col: 48, offset: 2639},
																														expr: &litMatcher{
																															pos:        position{line: 72, col: 49, offset: 2640},
																															val:        ">",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 72, col: 53, offset: 2644},
																														expr: &choiceExpr{
																															pos: position{line: 1251, col: 8, offset: 48930},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1247, col: 12, offset: 48890},
																																	val:        "\r\n",
																																	ignoreCase: false,
																																},
																																&charClassMatcher{
																																	pos:        position{line: 1247, col: 21, offset: 48899},
																																	val:        "[\\r\\n]",
																																	chars:      []rune{'\r', '\n'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																																&notExpr{
																																	pos: position{line: 1249, col: 8, offset: 48919},
																																	expr: &anyMatcher{
																																		line: 1249, col: 9, offset: 48920,
																																	},
																																},
																															},
																														},
																													},
																													&anyMatcher{
																														line: 72, col: 59, offset: 2650,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 74, col: 5, offset: 2689},
																							val:        ">",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 61, col: 159, offset: 2276},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonDocumentHeader286,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&zeroOrOneExpr{
																		pos: position{line: 61, col: 163, offset: 2280},
																		expr: &litMatcher{
																			pos:        position{line: 61, col: 163, offset: 2280},
																			val:        ";",
																			ignoreCase: false,
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 61, col: 168, offset: 2285},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonDocumentHeader293,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 47, col: 83, offset: 1584},
							label: "revision",
							expr: &zeroOrOneExpr{
								pos: position{line: 47, col: 93, offset: 1594},
								expr: &actionExpr{
									pos: position{line: 80, col: 21, offset: 2879},
									run: (*parser).callonDocumentHeader297,
									expr: &seqExpr{
										pos: position{line: 80, col: 21, offset: 2879},
										exprs: []interface{}{
											&zeroOrMoreExpr{
												pos: position{line: 80, col: 21, offset: 2879},
												expr: &choiceExpr{
													pos: position{line: 1243, col: 7, offset: 48832},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1243, col: 7, offset: 48832},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1243, col: 13, offset: 48838},
															run: (*parser).callonDocumentHeader302,
															expr: &litMatcher{
																pos:        position{line: 1243, col: 13, offset: 48838},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 80, col: 25, offset: 2883},
												expr: &litMatcher{
													pos:        position{line: 80, col: 26, offset: 2884},
													val:        ":",
													ignoreCase: false,
												},
											},
											&labeledExpr{
												pos:   position{line: 80, col: 30, offset: 2888},
												label: "revnumber",
												expr: &zeroOrOneExpr{
													pos: position{line: 80, col: 40, offset: 2898},
													expr: &choiceExpr{
														pos: position{line: 85, col: 27, offset: 3201},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 85, col: 27, offset: 3201},
																run: (*parser).callonDocumentHeader309,
																expr: &seqExpr{
																	pos: position{line: 85, col: 27, offset: 3201},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 85, col: 27, offset: 3201},
																			val:        "v",
																			ignoreCase: true,
																		},
																		&actionExpr{
																			pos: position{line: 1239, col: 10, offset: 48784},
																			run: (*parser).callonDocumentHeader312,
																			expr: &charClassMatcher{
																				pos:        position{line: 1239, col: 10, offset: 48784},
																				val:        "[0-9]",
																				ranges:     []rune{'0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 85, col: 39, offset: 3213},
																			expr: &choiceExpr{
																				pos: position{line: 85, col: 40, offset: 3214},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 1205, col: 14, offset: 47940},
																						run: (*parser).callonDocumentHeader316,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							expr: &charClassMatcher{
																								pos:        position{line: 1205, col: 14, offset: 47940},
																								val:        "[a-zA-Z0-9]",
																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 1215, col: 11, offset: 48287},
																						run: (*parser).callonDocumentHeader319,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							expr: &choiceExpr{
																								pos: position{line: 1243, col: 7, offset: 48832},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1243, col: 7, offset: 48832},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1243, col: 13, offset: 48838},
																										run: (*parser).callonDocumentHeader323,
																										expr: &litMatcher{
																											pos:        position{line: 1243, col: 13, offset: 48838},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 85, col: 61, offset: 3235},
																						run: (*parser).callonDocumentHeader325,
																						expr: &seqExpr{
																							pos: position{line: 85, col: 62, offset: 3236},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 85, col: 62, offset: 3236},
																									expr: &choiceExpr{
																										pos: position{line: 1251, col: 8, offset: 48930},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1247, col: 12, offset: 48890},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1247, col: 21, offset: 48899},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																											&notExpr{
																												pos: position{line: 1249, col: 8, offset: 48919},
																												expr: &anyMatcher{
																													line: 1249, col: 9, offset: 48920,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 85, col: 67, offset: 3241},
																									expr: &litMatcher{
																										pos:        position{line: 85, col: 68, offset: 3242},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 85, col: 72, offset: 3246},
																									expr: &litMatcher{
																										pos:        position{line: 85, col: 73, offset: 3247},
																										val:        ":",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 85, col: 78, offset: 3252,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 89, col: 5, offset: 3328},
																run: (*parser).callonDocumentHeader338,
																expr: &seqExpr{
																	pos: position{line: 89, col: 5, offset: 3328},
																	exprs: []interface{}{
																		&zeroOrOneExpr{
																			pos: position{line: 89, col: 5, offset: 3328},
																			expr: &litMatcher{
																				pos:        position{line: 89, col: 5, offset: 3328},
																				val:        "v",
																				ignoreCase: true,
																			},
																		},
																		&actionExpr{
																			pos: position{line: 1239, col: 10, offset: 48784},
																			run: (*parser).callonDocumentHeader342,
																			expr: &charClassMatcher{
																				pos:        position{line: 1239, col: 10, offset: 48784},
																				val:        "[0-9]",
																				ranges:     []rune{'0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 89, col: 18, offset: 3341},
																			expr: &choiceExpr{
																				pos: position{line: 89, col: 19, offset: 3342},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 1205, col: 14, offset: 47940},
																						run: (*parser).callonDocumentHeader346,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							expr: &charClassMatcher{
																								pos:        position{line: 1205, col: 14, offset: 47940},
																								val:        "[a-zA-Z0-9]",
																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 1215, col: 11, offset: 48287},
																						run: (*parser).callonDocumentHeader349,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							expr: &choiceExpr{
																								pos: position{line: 1243, col: 7, offset: 48832},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1243, col: 7, offset: 48832},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1243, col: 13, offset: 48838},
																										run: (*parser).callonDocumentHeader353,
																										expr: &litMatcher{
																											pos:        position{line: 1243, col: 13, offset: 48838},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																					&seqExpr{
																						pos: position{line: 89, col: 41, offset: 3364},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 89, col: 41, offset: 3364},
																								expr: &choiceExpr{
																									pos: position{line: 1251, col: 8, offset: 48930},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1247, col: 12, offset: 48890},
																											val:        "\r\n",
																											ignoreCase: false,
																										},
																										&charClassMatcher{
																											pos:        position{line: 1247, col: 21, offset: 48899},
																											val:        "[\\r\\n]",
																											chars:      []rune{'\r', '\n'},
																											ignoreCase: false,
																											inverted:   false,
																										},
																										&notExpr{
																											pos: position{line: 1249, col: 8, offset: 48919},
																											expr: &anyMatcher{
																												line: 1249, col: 9, offset: 48920,
																											},
																										},
																									},
																								},
																							},
																							&notExpr{
																								pos: position{line: 89, col: 46, offset: 3369},
																								expr: &litMatcher{
																									pos:        position{line: 89, col: 47, offset: 3370},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 89, col: 51, offset: 3374},
																								expr: &litMatcher{
																									pos:        position{line: 89, col: 52, offset: 3375},
																									val:        ":",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 89, col: 57, offset: 3380,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 89, col: 62, offset: 3385},
																			expr: &choiceExpr{
																				pos: position{line: 1243, col: 7, offset: 48832},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1243, col: 7, offset: 48832},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1243, col: 13, offset: 48838},
																						run: (*parser).callonDocumentHeader370,
																						expr: &litMatcher{
																							pos:        position{line: 1243, col: 13, offset: 48838},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&andExpr{
																			pos: position{line: 89, col: 66, offset: 3389},
																			expr: &litMatcher{
																				pos:        position{line: 89, col: 67, offset: 3390},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrOneExpr{
												pos: position{line: 80, col: 66, offset: 2924},
												expr: &litMatcher{
													pos:        position{line: 80, col: 66, offset: 2924},
													val:        ",",
													ignoreCase: false,
												},
											},
											&labeledExpr{
												pos:   position{line: 80, col: 71, offset: 2929},
												label: "revdate",
												expr: &zeroOrOneExpr{
													pos: position{line: 80, col: 79, offset: 2937},
													expr: &actionExpr{
														pos: position{line: 93, col: 25, offset: 3454},
														run: (*parser).callonDocumentHeader378,
														expr: &zeroOrMoreExpr{
															pos: position{line: 93, col: 25, offset: 3454},
															expr: &choiceExpr{
																pos: position{line: 93, col: 26, offset: 3455},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 1205, col: 14, offset: 47940},
																		run: (*parser).callonDocumentHeader381,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1205, col: 14, offset: 47940},
																			expr: &charClassMatcher{
																				pos:        position{line: 1205, col: 14, offset: 47940},
																				val:        "[a-zA-Z0-9]",
																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 1215, col: 11, offset: 48287},
																		run: (*parser).callonDocumentHeader384,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1215, col: 11, offset: 48287},
																			expr: &choiceExpr{
																				pos: position{line: 1243, col: 7, offset: 48832},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1243, col: 7, offset: 48832},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1243, col: 13, offset: 48838},
																						run: (*parser).callonDocumentHeader388,
																						expr: &litMatcher{
																							pos:        position{line: 1243, col: 13, offset: 48838},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 93, col: 47, offset: 3476},
																		run: (*parser).callonDocumentHeader390,
																		expr: &seqExpr{
																			pos: position{line: 93, col: 48, offset: 3477},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 93, col: 48, offset: 3477},
																					expr: &choiceExpr{
																						pos: position{line: 1251, col: 8, offset: 48930},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1247, col: 12, offset: 48890},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 1247, col: 21, offset: 48899},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																							&notExpr{
																								pos: position{line: 1249, col: 8, offset: 48919},
																								expr: &anyMatcher{
																									line: 1249, col: 9, offset: 48920,
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 93, col: 53, offset: 3482},
																					expr: &litMatcher{
																						pos:        position{line: 93, col: 54, offset: 3483},
																						val:        ":",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 93, col: 59, offset: 3488,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrOneExpr{
												pos: position{line: 80, col: 103, offset: 2961},
												expr: &litMatcher{
													pos:        position{line: 80, col: 103, offset: 2961},
													val:        ":",
													ignoreCase: false,
												},
											},
											&labeledExpr{
												pos:   position{line: 80, col: 108, offset: 2966},
												label: "revremark",
												expr: &zeroOrOneExpr{
													pos: position{line: 80, col: 118, offset: 2976},
													expr: &actionExpr{
														pos: position{line: 99, col: 27, offset: 3589},
														run: (*parser).callonDocumentHeader405,
														expr: &zeroOrMoreExpr{
															pos: position{line: 99, col: 27, offset: 3589},
															expr: &choiceExpr{
																pos: position{line: 99, col: 28, offset: 3590},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 1205, col: 14, offset: 47940},
																		run: (*parser).callonDocumentHeader408,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1205, col: 14, offset: 47940},
																			expr: &charClassMatcher{
																				pos:        position{line: 1205, col: 14, offset: 47940},
																				val:        "[a-zA-Z0-9]",
																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 1215, col: 11, offset: 48287},
																		run: (*parser).callonDocumentHeader411,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1215, col: 11, offset: 48287},
																			expr: &choiceExpr{
																				pos: position{line: 1243, col: 7, offset: 48832},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1243, col: 7, offset: 48832},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1243, col: 13, offset: 48838},
																						run: (*parser).callonDocumentHeader415,
																						expr: &litMatcher{
																							pos:        position{line: 1243, col: 13, offset: 48838},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 99, col: 49, offset: 3611},
																		run: (*parser).callonDocumentHeader417,
																		expr: &seqExpr{
																			pos: position{line: 99, col: 50, offset: 3612},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 99, col: 50, offset: 3612},
																					expr: &choiceExpr{
																						pos: position{line: 1251, col: 8, offset: 48930},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1247, col: 12, offset: 48890},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 1247, col: 21, offset: 48899},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																							&notExpr{
																								pos: position{line: 1249, col: 8, offset: 48919},
																								expr: &anyMatcher{
																									line: 1249, col: 9, offset: 48920,
																								},
																							},
																						},
																					},
																				},
																				&anyMatcher{
																					line: 99, col: 56, offset: 3618,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1251, col: 8, offset: 48930},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1247, col: 12, offset: 48890},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1247, col: 21, offset: 48899},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1249, col: 8, offset: 48919},
														expr: &anyMatcher{
															line: 1249, col: 9, offset: 48920,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 47, col: 112, offset: 1613},
							label: "otherAttributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 47, col: 129, offset: 1630},
								expr: &choiceExpr{
									pos: position{line: 108, col: 33, offset: 3840},
									alternatives: []interface{}{
										&actionExpr{
											pos: position{line: 108, col: 33, offset: 3840},
											run: (*parser).callonDocumentHeader434,
											expr: &seqExpr{
												pos: position{line: 108, col: 33, offset: 3840},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 108, col: 33, offset: 3840},
														val:        ":",
														ignoreCase: false,
													},
													&labeledExpr{
														pos:   position{line: 108, col: 37, offset: 3844},
														label: "name",
														expr: &actionExpr{
															pos: position{line: 127, col: 26, offset: 4690},
															run: (*parser).callonDocumentHeader438,
															expr: &seqExpr{
																pos: position{line: 127, col: 26, offset: 4690},
																exprs: []interface{}{
																	&charClassMatcher{
																		pos:        position{line: 127, col: 27, offset: 4691},
																		val:        "[_A-Za-z0-9]",
																		chars:      []rune{'_'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 127, col: 56, offset: 4720},
																		expr: &charClassMatcher{
																			pos:        position{line: 127, col: 57, offset: 4721},
																			val:        "[-A-Za-z0-9]",
																			chars:      []rune{'-'},
																			ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
														},
													},
													&litMatcher{
														pos:        position{line: 108, col: 66, offset: 3873},
														val:        ":",
														ignoreCase: false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 108, col: 70, offset: 3877},
														expr: &choiceExpr{
															pos: position{line: 1243, col: 7, offset: 48832},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1243, col: 7, offset: 48832},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1243, col: 13, offset: 48838},
																	run: (*parser).callonDocumentHeader447,
																	expr: &litMatcher{
																		pos:        position{line: 1243, col: 13, offset: 48838},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1251, col: 8, offset: 48930},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1247, col: 12, offset: 48890},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1247, col: 21, offset: 48899},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1249, col: 8, offset: 48919},
																expr: &anyMatcher{
																	line: 1249, col: 9, offset: 48920,
																},
															},
														},
													},
												},
											},
										},
										&actionExpr{
											pos: position{line: 110, col: 5, offset: 3960},
											run: (*parser).callonDocumentHeader454,
											expr: &seqExpr{
												pos: position{line: 110, col: 5, offset: 3960},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 110, col: 5, offset: 3960},
														val:        ":",
														ignoreCase: false,
													},
													&labeledExpr{
														pos:   position{line: 110, col: 9, offset: 3964},
														label: "name",
														expr: &actionExpr{
															pos: position{line: 127, col: 26, offset: 4690},
															run: (*parser).callonDocumentHeader458,
															expr: &seqExpr{
																pos: position{line: 127, col: 26, offset: 4690},
																exprs: []interface{}{
																	&charClassMatcher{
																		pos:        position{line: 127, col: 27, offset: 4691},
																		val:        "[_A-Za-z0-9]",
																		chars:      []rune{'_'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 127, col: 56, offset: 4720},
																		expr: &charClassMatcher{
																			pos:        position{line: 127, col: 57, offset: 4721},
																			val:        "[-A-Za-z0-9]",
																			chars:      []rune{'-'},
																			ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
														},
													},
													&litMatcher{
														pos:        position{line: 110, col: 38, offset: 3993},
														val:        ":",
														ignoreCase: false,
													},
													&oneOrMoreExpr{
														pos: position{line: 110, col: 42, offset: 3997},
														expr: &choiceExpr{
															pos: position{line: 1243, col: 7, offset: 48832},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1243, col: 7, offset: 48832},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1243, col: 13, offset: 48838},
																	run: (*parser).callonDocumentHeader467,
																	expr: &litMatcher{
																		pos:        position{line: 1243, col: 13, offset: 48838},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&labeledExpr{
														pos:   position{line: 110, col: 46, offset: 4001},
														label: "value",
														expr: &actionExpr{
															pos: position{line: 131, col: 27, offset: 4813},
															run: (*parser).callonDocumentHeader470,
															expr: &zeroOrMoreExpr{
																pos: position{line: 131, col: 27, offset: 4813},
																expr: &choiceExpr{
																	pos: position{line: 131, col: 28, offset: 4814},
																	alternatives: []interface{}{
																		&actionExpr{
																			pos: position{line: 1205, col: 14, offset: 47940},
																			run: (*parser).callonDocumentHeader473,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1205, col: 14, offset: 47940},
																				expr: &charClassMatcher{
																					pos:        position{line: 1205, col: 14, offset: 47940},
																					val:        "[a-zA-Z0-9]",
																					ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 1215, col: 11, offset: 48287},
																			run: (*parser).callonDocumentHeader476,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1215, col: 11, offset: 48287},
																				expr: &choiceExpr{
																					pos: position{line: 1243, col: 7, offset: 48832},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1243, col: 7, offset: 48832},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1243, col: 13, offset: 48838},
																							run: (*parser).callonDocumentHeader480,
																							expr: &litMatcher{
																								pos:        position{line: 1243, col: 13, offset: 48838},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 131, col: 49, offset: 4835},
																			run: (*parser).callonDocumentHeader482,
																			expr: &seqExpr{
																				pos: position{line: 131, col: 50, offset: 4836},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 131, col: 50, offset: 4836},
																						expr: &choiceExpr{
																							pos: position{line: 1247, col: 12, offset: 48890},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1247, col: 12, offset: 48890},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1247, col: 21, offset: 48899},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&anyMatcher{
																						line: 131, col: 60, offset: 4846,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1251, col: 8, offset: 48930},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1247, col: 12, offset: 48890},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1247, col: 21, offset: 48899},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1249, col: 8, offset: 48919},
																expr: &anyMatcher{
																	line: 1249, col: 9, offset: 48920,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "DocumentElement",
			pos:  position{line: 140, col: 1, offset: 5032},
			expr: &actionExpr{
				pos: position{line: 140, col: 20, offset: 5051},
				run: (*parser).callonDocumentElement1,
				expr: &seqExpr{
					pos: position{line: 140, col: 20, offset: 5051},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 140, col: 20, offset: 5051},
							expr: &notExpr{
								pos: position{line: 1249, col: 8, offset: 48919},
								expr: &anyMatcher{
									line: 1249, col: 9, offset: 48920,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 141, col: 5, offset: 5129},
							label: "element",
							expr: &choiceExpr{
								pos: position{line: 141, col: 14, offset: 5138},
								alternatives: []interface{}{
									&actionExpr{
										pos: position{line: 1194, col: 14, offset: 47708},
										run: (*parser).callonDocumentElement8,
										expr: &seqExpr{
											pos: position{line: 1194, col: 14, offset: 47708},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 1194, col: 14, offset: 47708},
													expr: &notExpr{
														pos: position{line: 1249, col: 8, offset: 48919},
														expr: &anyMatcher{
															line: 1249, col: 9, offset: 48920,
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 1194, col: 19, offset: 47713},
													expr: &choiceExpr{
														pos: position{line: 1243, col: 7, offset: 48832},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1243, col: 7, offset: 48832},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1243, col: 13, offset: 48838},
																run: (*parser).callonDocumentElement16,
																expr: &litMatcher{
																	pos:        position{line: 1243, col: 13, offset: 48838},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1251, col: 8, offset: 48930},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1247, col: 12, offset: 48890},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1247, col: 21, offset: 48899},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1249, col: 8, offset: 48919},
															expr: &anyMatcher{
																line: 1249, col: 9, offset: 48920,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 108, col: 33, offset: 3840},
										run: (*parser).callonDocumentElement23,
										expr: &seqExpr{
											pos: position{line: 108, col: 33, offset: 3840},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 108, col: 33, offset: 3840},
													val:        ":",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 108, col: 37, offset: 3844},
													label: "name",
													expr: &actionExpr{
														pos: position{line: 127, col: 26, offset: 4690},
														run: (*parser).callonDocumentElement27,
														expr: &seqExpr{
															pos: position{line: 127, col: 26, offset: 4690},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 127, col: 27, offset: 4691},
																	val:        "[_A-Za-z0-9]",
																	chars:      []rune{'_'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 127, col: 56, offset: 4720},
																	expr: &charClassMatcher{
																		pos:        position{line: 127, col: 57, offset: 4721},
																		val:        "[-A-Za-z0-9]",
																		chars:      []rune{'-'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 108, col: 66, offset: 3873},
													val:        ":",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 108, col: 70, offset: 3877},
													expr: &choiceExpr{
														pos: position{line: 1243, col: 7, offset: 48832},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1243, col: 7, offset: 48832},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1243, col: 13, offset: 48838},
																run: (*parser).callonDocumentElement36,
																expr: &litMatcher{
																	pos:        position{line: 1243, col: 13, offset: 48838},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1251, col: 8, offset: 48930},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1247, col: 12, offset: 48890},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1247, col: 21, offset: 48899},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1249, col: 8, offset: 48919},
															expr: &anyMatcher{
																line: 1249, col: 9, offset: 48920,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 110, col: 5, offset: 3960},
										run: (*parser).callonDocumentElement43,
										expr: &seqExpr{
											pos: position{line: 110, col: 5, offset: 3960},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 110, col: 5, offset: 3960},
													val:        ":",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 110, col: 9, offset: 3964},
													label: "name",
													expr: &actionExpr{
														pos: position{line: 127, col: 26, offset: 4690},
														run: (*parser).callonDocumentElement47,
														expr: &seqExpr{
															pos: position{line: 127, col: 26, offset: 4690},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 127, col: 27, offset: 4691},
																	val:        "[_A-Za-z0-9]",
																	chars:      []rune{'_'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 127, col: 56, offset: 4720},
																	expr: &charClassMatcher{
																		pos:        position{line: 127, col: 57, offset: 4721},
																		val:        "[-A-Za-z0-9]",
																		chars:      []rune{'-'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 110, col: 38, offset: 3993},
													val:        ":",
													ignoreCase: false,
												},
												&oneOrMoreExpr{
													pos: position{line: 110, col: 42, offset: 3997},
													expr: &choiceExpr{
														pos: position{line: 1243, col: 7, offset: 48832},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1243, col: 7, offset: 48832},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1243, col: 13, offset: 48838},
																run: (*parser).callonDocumentElement56,
																expr: &litMatcher{
																	pos:        position{line: 1243, col: 13, offset: 48838},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 110, col: 46, offset: 4001},
													label: "value",
													expr: &actionExpr{
														pos: position{line: 131, col: 27, offset: 4813},
														run: (*parser).callonDocumentElement59,
														expr: &zeroOrMoreExpr{
															pos: position{line: 131, col: 27, offset: 4813},
															expr: &choiceExpr{
																pos: position{line: 131, col: 28, offset: 4814},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 1205, col: 14, offset: 47940},
																		run: (*parser).callonDocumentElement62,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1205, col: 14, offset: 47940},
																			expr: &charClassMatcher{
																				pos:        position{line: 1205, col: 14, offset: 47940},
																				val:        "[a-zA-Z0-9]",
																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 1215, col: 11, offset: 48287},
																		run: (*parser).callonDocumentElement65,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1215, col: 11, offset: 48287},
																			expr: &choiceExpr{
																				pos: position{line: 1243, col: 7, offset: 48832},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1243, col: 7, offset: 48832},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1243, col: 13, offset: 48838},
																						run: (*parser).callonDocumentElement69,
																						expr: &litMatcher{
																							pos:        position{line: 1243, col: 13, offset: 48838},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 131, col: 49, offset: 4835},
																		run: (*parser).callonDocumentElement71,
																		expr: &seqExpr{
																			pos: position{line: 131, col: 50, offset: 4836},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 131, col: 50, offset: 4836},
																					expr: &choiceExpr{
																						pos: position{line: 1247, col: 12, offset: 48890},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1247, col: 12, offset: 48890},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 1247, col: 21, offset: 48899},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																				},
																				&anyMatcher{
																					line: 131, col: 60, offset: 4846,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1251, col: 8, offset: 48930},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1247, col: 12, offset: 48890},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1247, col: 21, offset: 48899},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1249, col: 8, offset: 48919},
															expr: &anyMatcher{
																line: 1249, col: 9, offset: 48920,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 114, col: 27, offset: 4139},
										run: (*parser).callonDocumentElement83,
										expr: &seqExpr{
											pos: position{line: 114, col: 27, offset: 4139},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 114, col: 27, offset: 4139},
													val:        ":!",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 114, col: 32, offset: 4144},
													label: "name",
													expr: &actionExpr{
														pos: position{line: 127, col: 26, offset: 4690},
														run: (*parser).callonDocumentElement87,
														expr: &seqExpr{
															pos: position{line: 127, col: 26, offset: 4690},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 127, col: 27, offset: 4691},
																	val:        "[_A-Za-z0-9]",
																	chars:      []rune{'_'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 127, col: 56, offset: 4720},
																	expr: &charClassMatcher{
																		pos:        position{line: 127, col: 57, offset: 4721},
																		val:        "[-A-Za-z0-9]",
																		chars:      []rune{'-'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 114, col: 61, offset: 4173},
													val:        ":",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 114, col: 65, offset: 4177},
													expr: &choiceExpr{
														pos: position{line: 1243, col: 7, offset: 48832},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1243, col: 7, offset: 48832},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1243, col: 13, offset: 48838},
																run: (*parser).callonDocumentElement96,
																expr: &litMatcher{
																	pos:        position{line: 1243, col: 13, offset: 48838},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1251, col: 8, offset: 48930},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1247, col: 12, offset: 48890},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1247, col: 21, offset: 48899},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1249, col: 8, offset: 48919},
															expr: &anyMatcher{
																line: 1249, col: 9, offset: 48920,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 116, col: 5, offset: 4249},
										run: (*parser).callonDocumentElement103,
										expr: &seqExpr{
											pos: position{line: 116, col: 5, offset: 4249},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 116, col: 5, offset: 4249},
													val:        ":",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 116, col: 9, offset: 4253},
													label: "name",
													expr: &actionExpr{
														pos: position{line: 127, col: 26, offset: 4690},
														run: (*parser).callonDocumentElement107,
														expr: &seqExpr{
															pos: position{line: 127, col: 26, offset: 4690},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 127, col: 27, offset: 4691},
																	val:        "[_A-Za-z0-9]",
																	chars:      []rune{'_'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 127, col: 56, offset: 4720},
																	expr: &charClassMatcher{
																		pos:        position{line: 127, col: 57, offset: 4721},
																		val:        "[-A-Za-z0-9]",
																		chars:      []rune{'-'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 116, col: 38, offset: 4282},
													val:        "!:",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 116, col: 43, offset: 4287},
													expr: &choiceExpr{
														pos: position{line: 1243, col: 7, offset: 48832},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1243, col: 7, offset: 48832},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1243, col: 13, offset: 48838},
																run: (*parser).callonDocumentElement116,
																expr: &litMatcher{
																	pos:        position{line: 1243, col: 13, offset: 48838},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1251, col: 8, offset: 48930},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1247, col: 12, offset: 48890},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1247, col: 21, offset: 48899},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1249, col: 8, offset: 48919},
															expr: &anyMatcher{
																line: 1249, col: 9, offset: 48920,
															},
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 426, col: 25, offset: 15224},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 426, col: 25, offset: 15224},
												val:        "toc::[]",
												ignoreCase: false,
											},
											&choiceExpr{
												pos: position{line: 1247, col: 12, offset: 48890},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1247, col: 12, offset: 48890},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1247, col: 21, offset: 48899},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 145, col: 15, offset: 5280},
										name: "VerseBlock",
									},
									&ruleRefExpr{
										pos:  position{line: 146, col: 15, offset: 5305},
										name: "VerseParagraph",
									},
									&actionExpr{
										pos: position{line: 871, col: 15, offset: 35356},
										run: (*parser).callonDocumentElement130,
										expr: &seqExpr{
											pos: position{line: 871, col: 15, offset: 35356},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 871, col: 15, offset: 35356},
													val:        "image::",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 871, col: 25, offset: 35366},
													label: "path",
													expr: &actionExpr{
														pos: position{line: 1219, col: 8, offset: 48334},
														run: (*parser).callonDocumentElement134,
														expr: &oneOrMoreExpr{
															pos: position{line: 1219, col: 8, offset: 48334},
															expr: &choiceExpr{
																pos: position{line: 1219, col: 9, offset: 48335},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 1205, col: 14, offset: 47940},
																		run: (*parser).callonDocumentElement137,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1205, col: 14, offset: 47940},
																			expr: &charClassMatcher{
																				pos:        position{line: 1205, col: 14, offset: 47940},
																				val:        "[a-zA-Z0-9]",
																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 1219, col: 21, offset: 48347},
																		run: (*parser).callonDocumentElement140,
																		expr: &seqExpr{
																			pos: position{line: 1219, col: 22, offset: 48348},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 1219, col: 22, offset: 48348},
																					expr: &choiceExpr{
																						pos: position{line: 1247, col: 12, offset: 48890},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1247, col: 12, offset: 48890},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 1247, col: 21, offset: 48899},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1219, col: 31, offset: 48357},
																					expr: &choiceExpr{
																						pos: position{line: 1243, col: 7, offset: 48832},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1243, col: 7, offset: 48832},
																								val:        " ",
																								ignoreCase: false,
																							},
																							&actionExpr{
																								pos: position{line: 1243, col: 13, offset: 48838},
																								run: (*parser).callonDocumentElement149,
																								expr: &litMatcher{
																									pos:        position{line: 1243, col: 13, offset: 48838},
																									val:        "\t",
																									ignoreCase: false,
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1219, col: 35, offset: 48361},
																					expr: &litMatcher{
																						pos:        position{line: 1219, col: 36, offset: 48362},
																						val:        "[",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1219, col: 40, offset: 48366},
																					expr: &litMatcher{
																						pos:        position{line: 1219, col: 41, offset: 48367},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 1219, col: 46, offset: 48372,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 871, col: 36, offset: 35377},
													label: "inlineAttributes",
													expr: &choiceExpr{
														pos: position{line: 880, col: 20, offset: 35812},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 880, col: 20, offset: 35812},
																run: (*parser).callonDocumentElement158,
																expr: &seqExpr{
																	pos: position{line: 880, col: 20, offset: 35812},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 880, col: 20, offset: 35812},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 880, col: 24, offset: 35816},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 897, col: 19, offset: 36535},
																				run: (*parser).callonDocumentElement162,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 897, col: 19, offset: 36535},
																					expr: &choiceExpr{
																						pos: position{line: 897, col: 20, offset: 36536},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								run: (*parser).callonDocumentElement165,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1205, col: 14, offset: 47940},
																									expr: &charClassMatcher{
																										pos:        position{line: 1205, col: 14, offset: 47940},
																										val:        "[a-zA-Z0-9]",
																										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								run: (*parser).callonDocumentElement168,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1215, col: 11, offset: 48287},
																									expr: &choiceExpr{
																										pos: position{line: 1243, col: 7, offset: 48832},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1243, col: 7, offset: 48832},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1243, col: 13, offset: 48838},
																												run: (*parser).callonDocumentElement172,
																												expr: &litMatcher{
																													pos:        position{line: 1243, col: 13, offset: 48838},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 897, col: 41, offset: 36557},
																								run: (*parser).callonDocumentElement174,
																								expr: &seqExpr{
																									pos: position{line: 897, col: 42, offset: 36558},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 897, col: 42, offset: 36558},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 43, offset: 36559},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 897, col: 47, offset: 36563},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 48, offset: 36564},
																												val:        "=",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 897, col: 52, offset: 36568},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 53, offset: 36569},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 897, col: 57, offset: 36573,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 880, col: 45, offset: 35837},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 881, col: 5, offset: 35845},
																			label: "width",
																			expr: &actionExpr{
																				pos: position{line: 897, col: 19, offset: 36535},
																				run: (*parser).callonDocumentElement185,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 897, col: 19, offset: 36535},
																					expr: &choiceExpr{
																						pos: position{line: 897, col: 20, offset: 36536},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								run: (*parser).callonDocumentElement188,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1205, col: 14, offset: 47940},
																									expr: &charClassMatcher{
																										pos:        position{line: 1205, col: 14, offset: 47940},
																										val:        "[a-zA-Z0-9]",
																										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								run: (*parser).callonDocumentElement191,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1215, col: 11, offset: 48287},
																									expr: &choiceExpr{
																										pos: position{line: 1243, col: 7, offset: 48832},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1243, col: 7, offset: 48832},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1243, col: 13, offset: 48838},
																												run: (*parser).callonDocumentElement195,
																												expr: &litMatcher{
																													pos:        position{line: 1243, col: 13, offset: 48838},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 897, col: 41, offset: 36557},
																								run: (*parser).callonDocumentElement197,
																								expr: &seqExpr{
																									pos: position{line: 897, col: 42, offset: 36558},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 897, col: 42, offset: 36558},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 43, offset: 36559},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 897, col: 47, offset: 36563},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 48, offset: 36564},
																												val:        "=",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 897, col: 52, offset: 36568},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 53, offset: 36569},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 897, col: 57, offset: 36573,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 881, col: 29, offset: 35869},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 882, col: 5, offset: 35877},
																			label: "height",
																			expr: &actionExpr{
																				pos: position{line: 897, col: 19, offset: 36535},
																				run: (*parser).callonDocumentElement208,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 897, col: 19, offset: 36535},
																					expr: &choiceExpr{
																						pos: position{line: 897, col: 20, offset: 36536},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								run: (*parser).callonDocumentElement211,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1205, col: 14, offset: 47940},
																									expr: &charClassMatcher{
																										pos:        position{line: 1205, col: 14, offset: 47940},
																										val:        "[a-zA-Z0-9]",
																										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								run: (*parser).callonDocumentElement214,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1215, col: 11, offset: 48287},
																									expr: &choiceExpr{
																										pos: position{line: 1243, col: 7, offset: 48832},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1243, col: 7, offset: 48832},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1243, col: 13, offset: 48838},
																												run: (*parser).callonDocumentElement218,
																												expr: &litMatcher{
																													pos:        position{line: 1243, col: 13, offset: 48838},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 897, col: 41, offset: 36557},
																								run: (*parser).callonDocumentElement220,
																								expr: &seqExpr{
																									pos: position{line: 897, col: 42, offset: 36558},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 897, col: 42, offset: 36558},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 43, offset: 36559},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 897, col: 47, offset: 36563},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 48, offset: 36564},
																												val:        "=",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 897, col: 52, offset: 36568},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 53, offset: 36569},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 897, col: 57, offset: 36573,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 882, col: 29, offset: 35901},
																			expr: &litMatcher{
																				pos:        position{line: 882, col: 29, offset: 35901},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 883, col: 5, offset: 35910},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 883, col: 16, offset: 35921},
																				expr: &choiceExpr{
																					pos: position{line: 225, col: 21, offset: 7971},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							run: (*parser).callonDocumentElement234,
																							expr: &seqExpr{
																								pos: position{line: 225, col: 21, offset: 7971},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 225, col: 21, offset: 7971},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonDocumentElement237,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonDocumentElement240,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonDocumentElement243,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1170, col: 16, offset: 47067},
																															run: (*parser).callonDocumentElement246,
																															expr: &litMatcher{
																																pos:        position{line: 1170, col: 16, offset: 47067},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		run: (*parser).callonDocumentElement251,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1205, col: 14, offset: 47940},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1205, col: 14, offset: 47940},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		run: (*parser).callonDocumentElement254,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1215, col: 11, offset: 48287},
																																			expr: &choiceExpr{
																																				pos: position{line: 1243, col: 7, offset: 48832},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1243, col: 7, offset: 48832},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1243, col: 13, offset: 48838},
																																						run: (*parser).callonDocumentElement258,
																																						expr: &litMatcher{
																																							pos:        position{line: 1243, col: 13, offset: 48838},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonDocumentElement260,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 225, col: 40, offset: 7990},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 225, col: 44, offset: 7994},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 237, col: 19, offset: 8403},
																											run: (*parser).callonDocumentElement271,
																											expr: &labeledExpr{
																												pos:   position{line: 237, col: 19, offset: 8403},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 237, col: 25, offset: 8409},
																													expr: &choiceExpr{
																														pos: position{line: 237, col: 26, offset: 8410},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1205, col: 14, offset: 47940},
																																run: (*parser).callonDocumentElement275,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1205, col: 14, offset: 47940},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1205, col: 14, offset: 47940},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1215, col: 11, offset: 48287},
																																run: (*parser).callonDocumentElement278,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1215, col: 11, offset: 48287},
																																	expr: &choiceExpr{
																																		pos: position{line: 1243, col: 7, offset: 48832},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1243, col: 7, offset: 48832},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1243, col: 13, offset: 48838},
																																				run: (*parser).callonDocumentElement282,
																																				expr: &litMatcher{
																																					pos:        position{line: 1243, col: 13, offset: 48838},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 237, col: 47, offset: 8431},
																																run: (*parser).callonDocumentElement284,
																																expr: &seqExpr{
																																	pos: position{line: 237, col: 48, offset: 8432},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 237, col: 48, offset: 8432},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 49, offset: 8433},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 53, offset: 8437},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 54, offset: 8438},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 58, offset: 8442},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 59, offset: 8443},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 237, col: 64, offset: 8448,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 225, col: 67, offset: 8017},
																										expr: &litMatcher{
																											pos:        position{line: 225, col: 67, offset: 8017},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 225, col: 72, offset: 8022},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonDocumentElement298,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 227, col: 5, offset: 8106},
																							run: (*parser).callonDocumentElement300,
																							expr: &seqExpr{
																								pos: position{line: 227, col: 5, offset: 8106},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 227, col: 5, offset: 8106},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonDocumentElement303,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonDocumentElement306,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonDocumentElement309,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1170, col: 16, offset: 47067},
																															run: (*parser).callonDocumentElement312,
																															expr: &litMatcher{
																																pos:        position{line: 1170, col: 16, offset: 47067},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		run: (*parser).callonDocumentElement317,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1205, col: 14, offset: 47940},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1205, col: 14, offset: 47940},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		run: (*parser).callonDocumentElement320,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1215, col: 11, offset: 48287},
																																			expr: &choiceExpr{
																																				pos: position{line: 1243, col: 7, offset: 48832},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1243, col: 7, offset: 48832},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1243, col: 13, offset: 48838},
																																						run: (*parser).callonDocumentElement324,
																																						expr: &litMatcher{
																																							pos:        position{line: 1243, col: 13, offset: 48838},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonDocumentElement326,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 227, col: 24, offset: 8125},
																										expr: &litMatcher{
																											pos:        position{line: 227, col: 24, offset: 8125},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 227, col: 29, offset: 8130},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonDocumentElement340,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 883, col: 36, offset: 35941},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 885, col: 5, offset: 36039},
																run: (*parser).callonDocumentElement343,
																expr: &seqExpr{
																	pos: position{line: 885, col: 5, offset: 36039},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 885, col: 5, offset: 36039},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 885, col: 9, offset: 36043},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 897, col: 19, offset: 36535},
																				run: (*parser).callonDocumentElement347,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 897, col: 19, offset: 36535},
																					expr: &choiceExpr{
																						pos: position{line: 897, col: 20, offset: 36536},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								run: (*parser).callonDocumentElement350,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1205, col: 14, offset: 47940},
																									expr: &charClassMatcher{
																										pos:        position{line: 1205, col: 14, offset: 47940},
																										val:        "[a-zA-Z0-9]",
																										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								run: (*parser).callonDocumentElement353,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1215, col: 11, offset: 48287},
																									expr: &choiceExpr{
																										pos: position{line: 1243, col: 7, offset: 48832},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1243, col: 7, offset: 48832},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1243, col: 13, offset: 48838},
																												run: (*parser).callonDocumentElement357,
																												expr: &litMatcher{
																													pos:        position{line: 1243, col: 13, offset: 48838},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 897, col: 41, offset: 36557},
																								run: (*parser).callonDocumentElement359,
																								expr: &seqExpr{
																									pos: position{line: 897, col: 42, offset: 36558},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 897, col: 42, offset: 36558},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 43, offset: 36559},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 897, col: 47, offset: 36563},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 48, offset: 36564},
																												val:        "=",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 897, col: 52, offset: 36568},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 53, offset: 36569},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 897, col: 57, offset: 36573,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 885, col: 30, offset: 36064},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 886, col: 5, offset: 36072},
																			label: "width",
																			expr: &actionExpr{
																				pos: position{line: 897, col: 19, offset: 36535},
																				run: (*parser).callonDocumentElement370,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 897, col: 19, offset: 36535},
																					expr: &choiceExpr{
																						pos: position{line: 897, col: 20, offset: 36536},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								run: (*parser).callonDocumentElement373,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1205, col: 14, offset: 47940},
																									expr: &charClassMatcher{
																										pos:        position{line: 1205, col: 14, offset: 47940},
																										val:        "[a-zA-Z0-9]",
																										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								run: (*parser).callonDocumentElement376,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1215, col: 11, offset: 48287},
																									expr: &choiceExpr{
																										pos: position{line: 1243, col: 7, offset: 48832},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1243, col: 7, offset: 48832},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1243, col: 13, offset: 48838},
																												run: (*parser).callonDocumentElement380,
																												expr: &litMatcher{
																													pos:        position{line: 1243, col: 13, offset: 48838},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 897, col: 41, offset: 36557},
																								run: (*parser).callonDocumentElement382,
																								expr: &seqExpr{
																									pos: position{line: 897, col: 42, offset: 36558},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 897, col: 42, offset: 36558},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 43, offset: 36559},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 897, col: 47, offset: 36563},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 48, offset: 36564},
																												val:        "=",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 897, col: 52, offset: 36568},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 53, offset: 36569},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 897, col: 57, offset: 36573,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 886, col: 28, offset: 36095},
																			expr: &litMatcher{
																				pos:        position{line: 886, col: 28, offset: 36095},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 887, col: 5, offset: 36104},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 887, col: 16, offset: 36115},
																				expr: &choiceExpr{
																					pos: position{line: 225, col: 21, offset: 7971},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							run: (*parser).callonDocumentElement396,
																							expr: &seqExpr{
																								pos: position{line: 225, col: 21, offset: 7971},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 225, col: 21, offset: 7971},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonDocumentElement399,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonDocumentElement402,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonDocumentElement405,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1170, col: 16, offset: 47067},
																															run: (*parser).callonDocumentElement408,
																															expr: &litMatcher{
																																pos:        position{line: 1170, col: 16, offset: 47067},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		run: (*parser).callonDocumentElement413,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1205, col: 14, offset: 47940},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1205, col: 14, offset: 47940},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		run: (*parser).callonDocumentElement416,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1215, col: 11, offset: 48287},
																																			expr: &choiceExpr{
																																				pos: position{line: 1243, col: 7, offset: 48832},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1243, col: 7, offset: 48832},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1243, col: 13, offset: 48838},
																																						run: (*parser).callonDocumentElement420,
																																						expr: &litMatcher{
																																							pos:        position{line: 1243, col: 13, offset: 48838},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonDocumentElement422,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 225, col: 40, offset: 7990},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 225, col: 44, offset: 7994},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 237, col: 19, offset: 8403},
																											run: (*parser).callonDocumentElement433,
																											expr: &labeledExpr{
																												pos:   position{line: 237, col: 19, offset: 8403},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 237, col: 25, offset: 8409},
																													expr: &choiceExpr{
																														pos: position{line: 237, col: 26, offset: 8410},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1205, col: 14, offset: 47940},
																																run: (*parser).callonDocumentElement437,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1205, col: 14, offset: 47940},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1205, col: 14, offset: 47940},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1215, col: 11, offset: 48287},
																																run: (*parser).callonDocumentElement440,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1215, col: 11, offset: 48287},
																																	expr: &choiceExpr{
																																		pos: position{line: 1243, col: 7, offset: 48832},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1243, col: 7, offset: 48832},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1243, col: 13, offset: 48838},
																																				run: (*parser).callonDocumentElement444,
																																				expr: &litMatcher{
																																					pos:        position{line: 1243, col: 13, offset: 48838},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 237, col: 47, offset: 8431},
																																run: (*parser).callonDocumentElement446,
																																expr: &seqExpr{
																																	pos: position{line: 237, col: 48, offset: 8432},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 237, col: 48, offset: 8432},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 49, offset: 8433},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 53, offset: 8437},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 54, offset: 8438},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 58, offset: 8442},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 59, offset: 8443},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 237, col: 64, offset: 8448,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 225, col: 67, offset: 8017},
																										expr: &litMatcher{
																											pos:        position{line: 225, col: 67, offset: 8017},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 225, col: 72, offset: 8022},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonDocumentElement460,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 227, col: 5, offset: 8106},
																							run: (*parser).callonDocumentElement462,
																							expr: &seqExpr{
																								pos: position{line: 227, col: 5, offset: 8106},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 227, col: 5, offset: 8106},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonDocumentElement465,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonDocumentElement468,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonDocumentElement471,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1170, col: 16, offset: 47067},
																															run: (*parser).callonDocumentElement474,
																															expr: &litMatcher{
																																pos:        position{line: 1170, col: 16, offset: 47067},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		run: (*parser).callonDocumentElement479,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1205, col: 14, offset: 47940},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1205, col: 14, offset: 47940},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		run: (*parser).callonDocumentElement482,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1215, col: 11, offset: 48287},
																																			expr: &choiceExpr{
																																				pos: position{line: 1243, col: 7, offset: 48832},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1243, col: 7, offset: 48832},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1243, col: 13, offset: 48838},
																																						run: (*parser).callonDocumentElement486,
																																						expr: &litMatcher{
																																							pos:        position{line: 1243, col: 13, offset: 48838},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonDocumentElement488,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 227, col: 24, offset: 8125},
																										expr: &litMatcher{
																											pos:        position{line: 227, col: 24, offset: 8125},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 227, col: 29, offset: 8130},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonDocumentElement502,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 887, col: 36, offset: 36135},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 889, col: 5, offset: 36230},
																run: (*parser).callonDocumentElement505,
																expr: &seqExpr{
																	pos: position{line: 889, col: 5, offset: 36230},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 889, col: 5, offset: 36230},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 889, col: 9, offset: 36234},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 897, col: 19, offset: 36535},
																				run: (*parser).callonDocumentElement509,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 897, col: 19, offset: 36535},
																					expr: &choiceExpr{
																						pos: position{line: 897, col: 20, offset: 36536},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								run: (*parser).callonDocumentElement512,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1205, col: 14, offset: 47940},
																									expr: &charClassMatcher{
																										pos:        position{line: 1205, col: 14, offset: 47940},
																										val:        "[a-zA-Z0-9]",
																										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								run: (*parser).callonDocumentElement515,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1215, col: 11, offset: 48287},
																									expr: &choiceExpr{
																										pos: position{line: 1243, col: 7, offset: 48832},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1243, col: 7, offset: 48832},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1243, col: 13, offset: 48838},
																												run: (*parser).callonDocumentElement519,
																												expr: &litMatcher{
																													pos:        position{line: 1243, col: 13, offset: 48838},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 897, col: 41, offset: 36557},
																								run: (*parser).callonDocumentElement521,
																								expr: &seqExpr{
																									pos: position{line: 897, col: 42, offset: 36558},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 897, col: 42, offset: 36558},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 43, offset: 36559},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 897, col: 47, offset: 36563},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 48, offset: 36564},
																												val:        "=",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 897, col: 52, offset: 36568},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 53, offset: 36569},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 897, col: 57, offset: 36573,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 889, col: 30, offset: 36255},
																			expr: &litMatcher{
																				pos:        position{line: 889, col: 30, offset: 36255},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 890, col: 5, offset: 36264},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 890, col: 16, offset: 36275},
																				expr: &choiceExpr{
																					pos: position{line: 225, col: 21, offset: 7971},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							run: (*parser).callonDocumentElement535,
																							expr: &seqExpr{
																								pos: position{line: 225, col: 21, offset: 7971},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 225, col: 21, offset: 7971},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonDocumentElement538,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonDocumentElement541,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonDocumentElement544,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1170, col: 16, offset: 47067},
																															run: (*parser).callonDocumentElement547,
																															expr: &litMatcher{
																																pos:        position{line: 1170, col: 16, offset: 47067},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		run: (*parser).callonDocumentElement552,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1205, col: 14, offset: 47940},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1205, col: 14, offset: 47940},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		run: (*parser).callonDocumentElement555,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1215, col: 11, offset: 48287},
																																			expr: &choiceExpr{
																																				pos: position{line: 1243, col: 7, offset: 48832},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1243, col: 7, offset: 48832},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1243, col: 13, offset: 48838},
																																						run: (*parser).callonDocumentElement559,
																																						expr: &litMatcher{
																																							pos:        position{line: 1243, col: 13, offset: 48838},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonDocumentElement561,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 225, col: 40, offset: 7990},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 225, col: 44, offset: 7994},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 237, col: 19, offset: 8403},
																											run: (*parser).callonDocumentElement572,
																											expr: &labeledExpr{
																												pos:   position{line: 237, col: 19, offset: 8403},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 237, col: 25, offset: 8409},
																													expr: &choiceExpr{
																														pos: position{line: 237, col: 26, offset: 8410},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1205, col: 14, offset: 47940},
																																run: (*parser).callonDocumentElement576,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1205, col: 14, offset: 47940},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1205, col: 14, offset: 47940},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1215, col: 11, offset: 48287},
																																run: (*parser).callonDocumentElement579,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1215, col: 11, offset: 48287},
																																	expr: &choiceExpr{
																																		pos: position{line: 1243, col: 7, offset: 48832},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1243, col: 7, offset: 48832},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1243, col: 13, offset: 48838},
																																				run: (*parser).callonDocumentElement583,
																																				expr: &litMatcher{
																																					pos:        position{line: 1243, col: 13, offset: 48838},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 237, col: 47, offset: 8431},
																																run: (*parser).callonDocumentElement585,
																																expr: &seqExpr{
																																	pos: position{line: 237, col: 48, offset: 8432},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 237, col: 48, offset: 8432},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 49, offset: 8433},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 53, offset: 8437},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 54, offset: 8438},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 58, offset: 8442},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 59, offset: 8443},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 237, col: 64, offset: 8448,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 225, col: 67, offset: 8017},
																										expr: &litMatcher{
																											pos:        position{line: 225, col: 67, offset: 8017},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 225, col: 72, offset: 8022},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonDocumentElement599,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 227, col: 5, offset: 8106},
																							run: (*parser).callonDocumentElement601,
																							expr: &seqExpr{
																								pos: position{line: 227, col: 5, offset: 8106},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 227, col: 5, offset: 8106},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonDocumentElement604,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonDocumentElement607,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonDocumentElement610,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1170, col: 16, offset: 47067},
																															run: (*parser).callonDocumentElement613,
																															expr: &litMatcher{
																																pos:        position{line: 1170, col: 16, offset: 47067},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		run: (*parser).callonDocumentElement618,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1205, col: 14, offset: 47940},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1205, col: 14, offset: 47940},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		run: (*parser).callonDocumentElement621,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1215, col: 11, offset: 48287},
																																			expr: &choiceExpr{
																																				pos: position{line: 1243, col: 7, offset: 48832},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1243, col: 7, offset: 48832},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1243, col: 13, offset: 48838},
																																						run: (*parser).callonDocumentElement625,
																																						expr: &litMatcher{
																																							pos:        position{line: 1243, col: 13, offset: 48838},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonDocumentElement627,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 227, col: 24, offset: 8125},
																										expr: &litMatcher{
																											pos:        position{line: 227, col: 24, offset: 8125},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 227, col: 29, offset: 8130},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonDocumentElement641,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 890, col: 36, offset: 36295},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 892, col: 5, offset: 36388},
																run: (*parser).callonDocumentElement644,
																expr: &seqExpr{
																	pos: position{line: 892, col: 5, offset: 36388},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 892, col: 5, offset: 36388},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 892, col: 9, offset: 36392},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 892, col: 20, offset: 36403},
																				expr: &choiceExpr{
																					pos: position{line: 225, col: 21, offset: 7971},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							run: (*parser).callonDocumentElement650,
																							expr: &seqExpr{
																								pos: position{line: 225, col: 21, offset: 7971},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 225, col: 21, offset: 7971},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonDocumentElement653,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonDocumentElement656,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonDocumentElement659,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1170, col: 16, offset: 47067},
																															run: (*parser).callonDocumentElement662,
																															expr: &litMatcher{
																																pos:        position{line: 1170, col: 16, offset: 47067},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		run: (*parser).callonDocumentElement667,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1205, col: 14, offset: 47940},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1205, col: 14, offset: 47940},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		run: (*parser).callonDocumentElement670,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1215, col: 11, offset: 48287},
																																			expr: &choiceExpr{
																																				pos: position{line: 1243, col: 7, offset: 48832},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1243, col: 7, offset: 48832},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1243, col: 13, offset: 48838},
																																						run: (*parser).callonDocumentElement674,
																																						expr: &litMatcher{
																																							pos:        position{line: 1243, col: 13, offset: 48838},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonDocumentElement676,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 225, col: 40, offset: 7990},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 225, col: 44, offset: 7994},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 237, col: 19, offset: 8403},
																											run: (*parser).callonDocumentElement687,
																											expr: &labeledExpr{
																												pos:   position{line: 237, col: 19, offset: 8403},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 237, col: 25, offset: 8409},
																													expr: &choiceExpr{
																														pos: position{line: 237, col: 26, offset: 8410},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1205, col: 14, offset: 47940},
																																run: (*parser).callonDocumentElement691,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1205, col: 14, offset: 47940},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1205, col: 14, offset: 47940},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1215, col: 11, offset: 48287},
																																run: (*parser).callonDocumentElement694,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1215, col: 11, offset: 48287},
																																	expr: &choiceExpr{
																																		pos: position{line: 1243, col: 7, offset: 48832},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1243, col: 7, offset: 48832},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1243, col: 13, offset: 48838},
																																				run: (*parser).callonDocumentElement698,
																																				expr: &litMatcher{
																																					pos:        position{line: 1243, col: 13, offset: 48838},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 237, col: 47, offset: 8431},
																																run: (*parser).callonDocumentElement700,
																																expr: &seqExpr{
																																	pos: position{line: 237, col: 48, offset: 8432},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 237, col: 48, offset: 8432},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 49, offset: 8433},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 53, offset: 8437},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 54, offset: 8438},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 58, offset: 8442},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 59, offset: 8443},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 237, col: 64, offset: 8448,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 225, col: 67, offset: 8017},
																										expr: &litMatcher{
																											pos:        position{line: 225, col: 67, offset: 8017},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 225, col: 72, offset: 8022},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonDocumentElement714,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 227, col: 5, offset: 8106},
																							run: (*parser).callonDocumentElement716,
																							expr: &seqExpr{
																								pos: position{line: 227, col: 5, offset: 8106},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 227, col: 5, offset: 8106},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonDocumentElement719,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonDocumentElement722,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonDocumentElement725,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1170, col: 16, offset: 47067},
																															run: (*parser).callonDocumentElement728,
																															expr: &litMatcher{
																																pos:        position{line: 1170, col: 16, offset: 47067},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		run: (*parser).callonDocumentElement733,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1205, col: 14, offset: 47940},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1205, col: 14, offset: 47940},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		run: (*parser).callonDocumentElement736,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1215, col: 11, offset: 48287},
																																			expr: &choiceExpr{
																																				pos: position{line: 1243, col: 7, offset: 48832},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1243, col: 7, offset: 48832},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1243, col: 13, offset: 48838},
																																						run: (*parser).callonDocumentElement740,
																																						expr: &litMatcher{
																																							pos:        position{line: 1243, col: 13, offset: 48838},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonDocumentElement742,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 227, col: 24, offset: 8125},
																										expr: &litMatcher{
																											pos:        position{line: 227, col: 24, offset: 8125},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 227, col: 29, offset: 8130},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonDocumentElement756,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 892, col: 40, offset: 36423},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 871, col: 71, offset: 35412},
													expr: &choiceExpr{
														pos: position{line: 1243, col: 7, offset: 48832},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1243, col: 7, offset: 48832},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1243, col: 13, offset: 48838},
																run: (*parser).callonDocumentElement762,
																expr: &litMatcher{
																	pos:        position{line: 1243, col: 13, offset: 48838},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1251, col: 8, offset: 48930},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1247, col: 12, offset: 48890},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1247, col: 21, offset: 48899},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1249, col: 8, offset: 48919},
															expr: &anyMatcher{
																line: 1249, col: 9, offset: 48920,
															},
														},
													},
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 148, col: 15, offset: 5360},
										name: "FencedBlock",
									},
									&actionExpr{
										pos: position{line: 962, col: 17, offset: 39184},
										run: (*parser).callonDocumentElement770,
										expr: &seqExpr{
											pos: position{line: 962, col: 17, offset: 39184},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 959, col: 26, offset: 39117},
													val:        "----",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 959, col: 33, offset: 39124},
													expr: &choiceExpr{
														pos: position{line: 1243, col: 7, offset: 48832},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1243, col: 7, offset: 48832},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1243, col: 13, offset: 48838},
																run: (*parser).callonDocumentElement776,
																expr: &litMatcher{
																	pos:        position{line: 1243, col: 13, offset: 48838},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1251, col: 8, offset: 48930},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1247, col: 12, offset: 48890},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1247, col: 21, offset: 48899},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1249, col: 8, offset: 48919},
															expr: &anyMatcher{
																line: 1249, col: 9, offset: 48920,
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 962, col: 39, offset: 39206},
													label: "content",
													expr: &zeroOrMoreExpr{
														pos: position{line: 962, col: 47, offset: 39214},
														expr: &actionExpr{
															pos: position{line: 966, col: 24, offset: 39384},
															run: (*parser).callonDocumentElement785,
															expr: &labeledExpr{
																pos:   position{line: 966, col: 24, offset: 39384},
																label: "lines",
																expr: &oneOrMoreExpr{
																	pos: position{line: 966, col: 30, offset: 39390},
																	expr: &actionExpr{
																		pos: position{line: 970, col: 21, offset: 39493},
																		run: (*parser).callonDocumentElement788,
																		expr: &seqExpr{
																			pos: position{line: 970, col: 21, offset: 39493},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 970, col: 21, offset: 39493},
																					expr: &seqExpr{
																						pos: position{line: 959, col: 26, offset: 39117},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 959, col: 26, offset: 39117},
																								val:        "----",
																								ignoreCase: false,
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 959, col: 33, offset: 39124},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonDocumentElement796,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&choiceExpr{
																								pos: position{line: 1251, col: 8, offset: 48930},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1247, col: 12, offset: 48890},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1247, col: 21, offset: 48899},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1249, col: 8, offset: 48919},
																										expr: &anyMatcher{
																											line: 1249, col: 9, offset: 48920,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 970, col: 44, offset: 39516},
																					expr: &notExpr{
																						pos: position{line: 1249, col: 8, offset: 48919},
																						expr: &anyMatcher{
																							line: 1249, col: 9, offset: 48920,
																						},
																					},
																				},
																				&labeledExpr{
																					pos:   position{line: 970, col: 49, offset: 39521},
																					label: "line",
																					expr: &actionExpr{
																						pos: position{line: 974, col: 28, offset: 39632},
																						run: (*parser).callonDocumentElement807,
																						expr: &zeroOrMoreExpr{
																							pos: position{line: 974, col: 28, offset: 39632},
																							expr: &choiceExpr{
																								pos: position{line: 974, col: 29, offset: 39633},
																								alternatives: []interface{}{
																									&actionExpr{
																										pos: position{line: 1205, col: 14, offset: 47940},
																										run: (*parser).callonDocumentElement810,
																										expr: &oneOrMoreExpr{
																											pos: position{line: 1205, col: 14, offset: 47940},
																											expr: &charClassMatcher{
																												pos:        position{line: 1205, col: 14, offset: 47940},
																												val:        "[a-zA-Z0-9]",
																												ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																									&actionExpr{
																										pos: position{line: 1215, col: 11, offset: 48287},
																										run: (*parser).callonDocumentElement813,
																										expr: &oneOrMoreExpr{
																											pos: position{line: 1215, col: 11, offset: 48287},
																											expr: &choiceExpr{
																												pos: position{line: 1243, col: 7, offset: 48832},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1243, col: 7, offset: 48832},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 1243, col: 13, offset: 48838},
																														run: (*parser).callonDocumentElement817,
																														expr: &litMatcher{
																															pos:        position{line: 1243, col: 13, offset: 48838},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																									},
																									&actionExpr{
																										pos: position{line: 974, col: 50, offset: 39654},
																										run: (*parser).callonDocumentElement819,
																										expr: &seqExpr{
																											pos: position{line: 974, col: 51, offset: 39655},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 974, col: 51, offset: 39655},
																													expr: &seqExpr{
																														pos: position{line: 959, col: 26, offset: 39117},
																														exprs: []interface{}{
																															&litMatcher{
																																pos:        position{line: 959, col: 26, offset: 39117},
																																val:        "----",
																																ignoreCase: false,
																															},
																															&zeroOrMoreExpr{
																																pos: position{line: 959, col: 33, offset: 39124},
																																expr: &choiceExpr{
																																	pos: position{line: 1243, col: 7, offset: 48832},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1243, col: 7, offset: 48832},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 1243, col: 13, offset: 48838},
																																			run: (*parser).callonDocumentElement827,
																																			expr: &litMatcher{
																																				pos:        position{line: 1243, col: 13, offset: 48838},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																															&choiceExpr{
																																pos: position{line: 1251, col: 8, offset: 48930},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1247, col: 12, offset: 48890},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1247, col: 21, offset: 48899},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																	&notExpr{
																																		pos: position{line: 1249, col: 8, offset: 48919},
																																		expr: &anyMatcher{
																																			line: 1249, col: 9, offset: 48920,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 974, col: 74, offset: 39678},
																													expr: &choiceExpr{
																														pos: position{line: 1251, col: 8, offset: 48930},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1247, col: 12, offset: 48890},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1247, col: 21, offset: 48899},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 1249, col: 8, offset: 48919},
																																expr: &anyMatcher{
																																	line: 1249, col: 9, offset: 48920,
																																},
																															},
																														},
																													},
																												},
																												&anyMatcher{
																													line: 974, col: 80, offset: 39684,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&choiceExpr{
																					pos: position{line: 1251, col: 8, offset: 48930},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1247, col: 12, offset: 48890},
																							val:        "\r\n",
																							ignoreCase: false,
																						},
																						&charClassMatcher{
																							pos:        position{line: 1247, col: 21, offset: 48899},
																							val:        "[\\r\\n]",
																							chars:      []rune{'\r', '\n'},
																							ignoreCase: false,
																							inverted:   false,
																						},
																						&notExpr{
																							pos: position{line: 1249, col: 8, offset: 48919},
																							expr: &anyMatcher{
																								line: 1249, col: 9, offset: 48920,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 962, col: 71, offset: 39238},
													alternatives: []interface{}{
														&seqExpr{
															pos: position{line: 959, col: 26, offset: 39117},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 959, col: 26, offset: 39117},
																	val:        "----",
																	ignoreCase: false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 959, col: 33, offset: 39124},
																	expr: &choiceExpr{
																		pos: position{line: 1243, col: 7, offset: 48832},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1243, col: 7, offset: 48832},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1243, col: 13, offset: 48838},
																				run: (*parser).callonDocumentElement852,
																				expr: &litMatcher{
																					pos:        position{line: 1243, col: 13, offset: 48838},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1251, col: 8, offset: 48930},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1247, col: 12, offset: 48890},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1247, col: 21, offset: 48899},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1249, col: 8, offset: 48919},
																			expr: &anyMatcher{
																				line: 1249, col: 9, offset: 48920,
																			},
																		},
																	},
																},
															},
														},
														&notExpr{
															pos: position{line: 1249, col: 8, offset: 48919},
															expr: &anyMatcher{
																line: 1249, col: 9, offset: 48920,
															},
														},
													},
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 150, col: 15, offset: 5413},
										name: "ExampleBlock",
									},
									&actionExpr{
										pos: position{line: 1094, col: 17, offset: 44022},
										run: (*parser).callonDocumentElement862,
										expr: &seqExpr{
											pos: position{line: 1094, col: 17, offset: 44022},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 1092, col: 26, offset: 43998},
													val:        "////",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 1094, col: 39, offset: 44044},
													expr: &choiceExpr{
														pos: position{line: 1243, col: 7, offset: 48832},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1243, col: 7, offset: 48832},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1243, col: 13, offset: 48838},
																run: (*parser).callonDocumentElement868,
																expr: &litMatcher{
																	pos:        position{line: 1243, col: 13, offset: 48838},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1247, col: 12, offset: 48890},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1247, col: 12, offset: 48890},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1247, col: 21, offset: 48899},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 1094, col: 51, offset: 44056},
													label: "content",
													expr: &zeroOrMoreExpr{
														pos: position{line: 1094, col: 59, offset: 44064},
														expr: &actionExpr{
															pos: position{line: 1098, col: 21, offset: 44241},
															run: (*parser).callonDocumentElement875,
															expr: &seqExpr{
																pos: position{line: 1098, col: 21, offset: 44241},
																exprs: []interface{}{
																	&zeroOrMoreExpr{
																		pos: position{line: 1098, col: 21, offset: 44241},
																		expr: &choiceExpr{
																			pos: position{line: 1098, col: 22, offset: 44242},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 1205, col: 14, offset: 47940},
																					run: (*parser).callonDocumentElement879,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1205, col: 14, offset: 47940},
																						expr: &charClassMatcher{
																							pos:        position{line: 1205, col: 14, offset: 47940},
																							val:        "[a-zA-Z0-9]",
																							ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																							ignoreCase: false,
																							inverted:   false,
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 1215, col: 11, offset: 48287},
																					run: (*parser).callonDocumentElement882,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1215, col: 11, offset: 48287},
																						expr: &choiceExpr{
																							pos: position{line: 1243, col: 7, offset: 48832},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1243, col: 7, offset: 48832},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1243, col: 13, offset: 48838},
																									run: (*parser).callonDocumentElement886,
																									expr: &litMatcher{
																										pos:        position{line: 1243, col: 13, offset: 48838},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 1098, col: 43, offset: 44263},
																					run: (*parser).callonDocumentElement888,
																					expr: &seqExpr{
																						pos: position{line: 1098, col: 44, offset: 44264},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 1098, col: 44, offset: 44264},
																								expr: &litMatcher{
																									pos:        position{line: 1092, col: 26, offset: 43998},
																									val:        "////",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 1098, col: 67, offset: 44287},
																								expr: &choiceExpr{
																									pos: position{line: 1251, col: 8, offset: 48930},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1247, col: 12, offset: 48890},
																											val:        "\r\n",
																											ignoreCase: false,
																										},
																										&charClassMatcher{
																											pos:        position{line: 1247, col: 21, offset: 48899},
																											val:        "[\\r\\n]",
																											chars:      []rune{'\r', '\n'},
																											ignoreCase: false,
																											inverted:   false,
																										},
																										&notExpr{
																											pos: position{line: 1249, col: 8, offset: 48919},
																											expr: &anyMatcher{
																												line: 1249, col: 9, offset: 48920,
																											},
																										},
																									},
																								},
																							},
																							&anyMatcher{
																								line: 1098, col: 73, offset: 44293,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&choiceExpr{
																		pos: position{line: 1251, col: 8, offset: 48930},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1247, col: 12, offset: 48890},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1247, col: 21, offset: 48899},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																			&notExpr{
																				pos: position{line: 1249, col: 8, offset: 48919},
																				expr: &anyMatcher{
																					line: 1249, col: 9, offset: 48920,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1094, col: 81, offset: 44086},
													alternatives: []interface{}{
														&seqExpr{
															pos: position{line: 1094, col: 82, offset: 44087},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 1092, col: 26, offset: 43998},
																	val:        "////",
																	ignoreCase: false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 1094, col: 104, offset: 44109},
																	expr: &choiceExpr{
																		pos: position{line: 1243, col: 7, offset: 48832},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1243, col: 7, offset: 48832},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1243, col: 13, offset: 48838},
																				run: (*parser).callonDocumentElement910,
																				expr: &litMatcher{
																					pos:        position{line: 1243, col: 13, offset: 48838},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1251, col: 8, offset: 48930},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1247, col: 12, offset: 48890},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1247, col: 21, offset: 48899},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1249, col: 8, offset: 48919},
																			expr: &anyMatcher{
																				line: 1249, col: 9, offset: 48920,
																			},
																		},
																	},
																},
															},
														},
														&notExpr{
															pos: position{line: 1249, col: 8, offset: 48919},
															expr: &anyMatcher{
																line: 1249, col: 9, offset: 48920,
															},
														},
													},
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 152, col: 15, offset: 5467},
										name: "QuoteBlock",
									},
									&ruleRefExpr{
										pos:  position{line: 153, col: 15, offset: 5493},
										name: "SidebarBlock",
									},
									&ruleRefExpr{
										pos:  position{line: 154, col: 15, offset: 5520},
										name: "Table",
									},
									&ruleRefExpr{
										pos:  position{line: 155, col: 15, offset: 5541},
										name: "List",
									},
									&actionExpr{
										pos: position{line: 1123, col: 31, offset: 45161},
										run: (*parser).callonDocumentElement923,
										expr: &labeledExpr{
											pos:   position{line: 1123, col: 31, offset: 45161},
											label: "lines",
											expr: &actionExpr{
												pos: position{line: 1129, col: 5, offset: 45426},
												run: (*parser).callonDocumentElement925,
												expr: &seqExpr{
													pos: position{line: 1129, col: 5, offset: 45426},
													exprs: []interface{}{
														&labeledExpr{
															pos:   position{line: 1129, col: 5, offset: 45426},
															label: "firstLine",
															expr: &actionExpr{
																pos: position{line: 1129, col: 16, offset: 45437},
																run: (*parser).callonDocumentElement928,
																expr: &seqExpr{
																	pos: position{line: 1129, col: 16, offset: 45437},
																	exprs: []interface{}{
																		&choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonDocumentElement932,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&oneOrMoreExpr{
																			pos: position{line: 1129, col: 19, offset: 45440},
																			expr: &choiceExpr{
																				pos: position{line: 1129, col: 20, offset: 45441},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 1205, col: 14, offset: 47940},
																						run: (*parser).callonDocumentElement936,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							expr: &charClassMatcher{
																								pos:        position{line: 1205, col: 14, offset: 47940},
																								val:        "[a-zA-Z0-9]",
																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 1215, col: 11, offset: 48287},
																						run: (*parser).callonDocumentElement939,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							expr: &choiceExpr{
																								pos: position{line: 1243, col: 7, offset: 48832},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1243, col: 7, offset: 48832},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1243, col: 13, offset: 48838},
																										run: (*parser).callonDocumentElement943,
																										expr: &litMatcher{
																											pos:        position{line: 1243, col: 13, offset: 48838},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 1129, col: 41, offset: 45462},
																						run: (*parser).callonDocumentElement945,
																						expr: &seqExpr{
																							pos: position{line: 1129, col: 42, offset: 45463},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 1129, col: 42, offset: 45463},
																									expr: &choiceExpr{
																										pos: position{line: 1251, col: 8, offset: 48930},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1247, col: 12, offset: 48890},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1247, col: 21, offset: 48899},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																											&notExpr{
																												pos: position{line: 1249, col: 8, offset: 48919},
																												expr: &anyMatcher{
																													line: 1249, col: 9, offset: 48920,
																												},
																											},
																										},
																									},
																								},
																								&anyMatcher{
																									line: 1129, col: 48, offset: 45469,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&choiceExpr{
															pos: position{line: 1251, col: 8, offset: 48930},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1247, col: 12, offset: 48890},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1247, col: 21, offset: 48899},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&notExpr{
																	pos: position{line: 1249, col: 8, offset: 48919},
																	expr: &anyMatcher{
																		line: 1249, col: 9, offset: 48920,
																	},
																},
															},
														},
														&labeledExpr{
															pos:   position{line: 1134, col: 5, offset: 45623},
															label: "otherLines",
															expr: &zeroOrMoreExpr{
																pos: position{line: 1134, col: 16, offset: 45634},
																expr: &actionExpr{
																	pos: position{line: 1135, col: 9, offset: 45644},
																	run: (*parser).callonDocumentElement961,
																	expr: &seqExpr{
																		pos: position{line: 1135, col: 9, offset: 45644},
																		exprs: []interface{}{
																			&notExpr{
																				pos: position{line: 1135, col: 9, offset: 45644},
																				expr: &actionExpr{
																					pos: position{line: 1194, col: 14, offset: 47708},
																					run: (*parser).callonDocumentElement964,
																					expr: &seqExpr{
																						pos: position{line: 1194, col: 14, offset: 47708},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 1194, col: 14, offset: 47708},
																								expr: &notExpr{
																									pos: position{line: 1249, col: 8, offset: 48919},
																									expr: &anyMatcher{
																										line: 1249, col: 9, offset: 48920,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 1194, col: 19, offset: 47713},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonDocumentElement972,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&choiceExpr{
																								pos: position{line: 1251, col: 8, offset: 48930},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1247, col: 12, offset: 48890},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1247, col: 21, offset: 48899},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1249, col: 8, offset: 48919},
																										expr: &anyMatcher{
																											line: 1249, col: 9, offset: 48920,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 1136, col: 9, offset: 45664},
																				label: "otherLine",
																				expr: &actionExpr{
																					pos: position{line: 1136, col: 20, offset: 45675},
																					run: (*parser).callonDocumentElement980,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1136, col: 20, offset: 45675},
																						expr: &choiceExpr{
																							pos: position{line: 1136, col: 21, offset: 45676},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 1205, col: 14, offset: 47940},
																									run: (*parser).callonDocumentElement983,
																									expr: &oneOrMoreExpr{
																										pos: position{line: 1205, col: 14, offset: 47940},
																										expr: &charClassMatcher{
																											pos:        position{line: 1205, col: 14, offset: 47940},
																											val:        "[a-zA-Z0-9]",
																											ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																											ignoreCase: false,
																											inverted:   false,
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 1215, col: 11, offset: 48287},
																									run: (*parser).callonDocumentElement986,
																									expr: &oneOrMoreExpr{
																										pos: position{line: 1215, col: 11, offset: 48287},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonDocumentElement990,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 1136, col: 42, offset: 45697},
																									run: (*parser).callonDocumentElement992,
																									expr: &seqExpr{
																										pos: position{line: 1136, col: 43, offset: 45698},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 1136, col: 43, offset: 45698},
																												expr: &choiceExpr{
																													pos: position{line: 1251, col: 8, offset: 48930},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1247, col: 12, offset: 48890},
																															val:        "\r\n",
																															ignoreCase: false,
																														},
																														&charClassMatcher{
																															pos:        position{line: 1247, col: 21, offset: 48899},
																															val:        "[\\r\\n]",
																															chars:      []rune{'\r', '\n'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																														&notExpr{
																															pos: position{line: 1249, col: 8, offset: 48919},
																															expr: &anyMatcher{
																																line: 1249, col: 9, offset: 48920,
																															},
																														},
																													},
																												},
																											},
																											&anyMatcher{
																												line: 1136, col: 49, offset: 45704,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																			&choiceExpr{
																				pos: position{line: 1251, col: 8, offset: 48930},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1247, col: 12, offset: 48890},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 1247, col: 21, offset: 48899},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																					&notExpr{
																						pos: position{line: 1249, col: 8, offset: 48919},
																						expr: &anyMatcher{
																							line: 1249, col: 9, offset: 48920,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 1147, col: 39, offset: 46079},
										run: (*parser).callonDocumentElement1006,
										expr: &seqExpr{
											pos: position{line: 1147, col: 39, offset: 46079},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 1120, col: 26, offset: 45059},
													val:        "....",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 1147, col: 61, offset: 46101},
													expr: &choiceExpr{
														pos: position{line: 1243, col: 7, offset: 48832},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1243, col: 7, offset: 48832},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1243, col: 13, offset: 48838},
																run: (*parser).callonDocumentElement1012,
																expr: &litMatcher{
																	pos:        position{line: 1243, col: 13, offset: 48838},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1247, col: 12, offset: 48890},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1247, col: 12, offset: 48890},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1247, col: 21, offset: 48899},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 1147, col: 73, offset: 46113},
													label: "lines",
													expr: &actionExpr{
														pos: position{line: 1152, col: 44, offset: 46386},
														run: (*parser).callonDocumentElement1018,
														expr: &labeledExpr{
															pos:   position{line: 1152, col: 44, offset: 46386},
															label: "lines",
															expr: &zeroOrMoreExpr{
																pos: position{line: 1152, col: 50, offset: 46392},
																expr: &actionExpr{
																	pos: position{line: 1157, col: 5, offset: 46532},
																	run: (*parser).callonDocumentElement1021,
																	expr: &seqExpr{
																		pos: position{line: 1157, col: 5, offset: 46532},
																		exprs: []interface{}{
																			&labeledExpr{
																				pos:   position{line: 1157, col: 5, offset: 46532},
																				label: "line",
																				expr: &actionExpr{
																					pos: position{line: 1157, col: 11, offset: 46538},
																					run: (*parser).callonDocumentElement1024,
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 1157, col: 11, offset: 46538},
																						expr: &choiceExpr{
																							pos: position{line: 1157, col: 12, offset: 46539},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 1205, col: 14, offset: 47940},
																									run: (*parser).callonDocumentElement1027,
																									expr: &oneOrMoreExpr{
																										pos: position{line: 1205, col: 14, offset: 47940},
																										expr: &charClassMatcher{
																											pos:        position{line: 1205, col: 14, offset: 47940},
																											val:        "[a-zA-Z0-9]",
																											ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																											ignoreCase: false,
																											inverted:   false,
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 1215, col: 11, offset: 48287},
																									run: (*parser).callonDocumentElement1030,
																									expr: &oneOrMoreExpr{
																										pos: position{line: 1215, col: 11, offset: 48287},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonDocumentElement1034,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 1157, col: 33, offset: 46560},
																									run: (*parser).callonDocumentElement1036,
																									expr: &seqExpr{
																										pos: position{line: 1157, col: 34, offset: 46561},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 1157, col: 34, offset: 46561},
																												expr: &litMatcher{
																													pos:        position{line: 1120, col: 26, offset: 45059},
																													val:        "....",
																													ignoreCase: false,
																												},
																											},
																											&notExpr{
																												pos: position{line: 1157, col: 57, offset: 46584},
																												expr: &choiceExpr{
																													pos: position{line: 1251, col: 8, offset: 48930},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1247, col: 12, offset: 48890},
																															val:        "\r\n",
																															ignoreCase: false,
																														},
																														&charClassMatcher{
																															pos:        position{line: 1247, col: 21, offset: 48899},
																															val:        "[\\r\\n]",
																															chars:      []rune{'\r', '\n'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																														&notExpr{
																															pos: position{line: 1249, col: 8, offset: 48919},
																															expr: &anyMatcher{
																																line: 1249, col: 9, offset: 48920,
																															},
																														},
																													},
																												},
																											},
																											&anyMatcher{
																												line: 1157, col: 62, offset: 46589,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																			&choiceExpr{
																				pos: position{line: 1251, col: 8, offset: 48930},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1247, col: 12, offset: 48890},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 1247, col: 21, offset: 48899},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																					&notExpr{
																						pos: position{line: 1249, col: 8, offset: 48919},
																						expr: &anyMatcher{
																							line: 1249, col: 9, offset: 48920,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1147, col: 122, offset: 46162},
													alternatives: []interface{}{
														&seqExpr{
															pos: position{line: 1147, col: 123, offset: 46163},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 1120, col: 26, offset: 45059},
																	val:        "....",
																	ignoreCase: false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 1147, col: 145, offset: 46185},
																	expr: &choiceExpr{
																		pos: position{line: 1243, col: 7, offset: 48832},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1243, col: 7, offset: 48832},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1243, col: 13, offset: 48838},
																				run: (*parser).callonDocumentElement1058,
																				expr: &litMatcher{
																					pos:        position{line: 1243, col: 13, offset: 48838},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1251, col: 8, offset: 48930},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1247, col: 12, offset: 48890},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1247, col: 21, offset: 48899},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1249, col: 8, offset: 48919},
																			expr: &anyMatcher{
																				line: 1249, col: 9, offset: 48920,
																			},
																		},
																	},
																},
															},
														},
														&notExpr{
															pos: position{line: 1249, col: 8, offset: 48919},
															expr: &anyMatcher{
																line: 1249, col: 9, offset: 48920,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 1166, col: 34, offset: 46839},
										run: (*parser).callonDocumentElement1067,
										expr: &seqExpr{
											pos: position{line: 1166, col: 34, offset: 46839},
											exprs: []interface{}{
												&labeledExpr{
													pos:   position{line: 1166, col: 34, offset: 46839},
													label: "attributes",
													expr: &seqExpr{
														pos: position{line: 1166, col: 46, offset: 46851},
														exprs: []interface{}{
															&actionExpr{
																pos: position{line: 1174, col: 21, offset: 47133},
																run: (*parser).callonDocumentElement1071,
																expr: &seqExpr{
																	pos: position{line: 1174, col: 21, offset: 47133},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1174, col: 21, offset: 47133},
																			val:        "[literal]",
																			ignoreCase: false,
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 1174, col: 33, offset: 47145},
																			expr: &choiceExpr{
																				pos: position{line: 1243, col: 7, offset: 48832},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1243, col: 7, offset: 48832},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1243, col: 13, offset: 48838},
																						run: (*parser).callonDocumentElement1077,
																						expr: &litMatcher{
																							pos:        position{line: 1243, col: 13, offset: 48838},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&choiceExpr{
																			pos: position{line: 1247, col: 12, offset: 48890},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1247, col: 12, offset: 48890},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1247, col: 21, offset: 48899},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																},
															},
															&zeroOrMoreExpr{
																pos: position{line: 1166, col: 63, offset: 46868},
																expr: &actionExpr{
																	pos: position{line: 164, col: 21, offset: 5763},
																	run: (*parser).callonDocumentElement1083,
																	expr: &seqExpr{
																		pos: position{line: 164, col: 21, offset: 5763},
																		exprs: []interface{}{
																			&andExpr{
																				pos: position{line: 164, col: 21, offset: 5763},
																				expr: &charClassMatcher{
																					pos:        position{line: 164, col: 23, offset: 5765},
																					val:        "[[.#]",
																					chars:      []rune{'[', '.', '#'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 165, col: 5, offset: 5853},
																				label: "attr",
																				expr: &choiceExpr{
																					pos: position{line: 165, col: 11, offset: 5859},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 174, col: 14, offset: 6316},
																							run: (*parser).callonDocumentElement1089,
																							expr: &seqExpr{
																								pos: position{line: 174, col: 14, offset: 6316},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 174, col: 14, offset: 6316},
																										val:        "[[",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 174, col: 19, offset: 6321},
																										label: "id",
																										expr: &actionExpr{
																											pos: position{line: 1225, col: 7, offset: 48453},
																											run: (*parser).callonDocumentElement1093,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 1225, col: 7, offset: 48453},
																												expr: &choiceExpr{
																													pos: position{line: 1225, col: 8, offset: 48454},
																													alternatives: []interface{}{
																														&actionExpr{
																															pos: position{line: 1205, col: 14, offset: 47940},
																															run: (*parser).callonDocumentElement1096,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1205, col: 14, offset: 47940},
																																expr: &charClassMatcher{
																																	pos:        position{line: 1205, col: 14, offset: 47940},
																																	val:        "[a-zA-Z0-9]",
																																	ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 1225, col: 20, offset: 48466},
																															run: (*parser).callonDocumentElement1099,
																															expr: &seqExpr{
																																pos: position{line: 1225, col: 21, offset: 48467},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 1225, col: 21, offset: 48467},
																																		expr: &choiceExpr{
																																			pos: position{line: 1247, col: 12, offset: 48890},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1247, col: 12, offset: 48890},
																																					val:        "\r\n",
																																					ignoreCase: false,
																																				},
																																				&charClassMatcher{
																																					pos:        position{line: 1247, col: 21, offset: 48899},
																																					val:        "[\\r\\n]",
																																					chars:      []rune{'\r', '\n'},
																																					ignoreCase: false,
																																					inverted:   false,
																																				},
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 1225, col: 30, offset: 48476},
																																		expr: &choiceExpr{
																																			pos: position{line: 1243, col: 7, offset: 48832},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1243, col: 7, offset: 48832},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 1243, col: 13, offset: 48838},
																																					run: (*parser).callonDocumentElement1108,
																																					expr: &litMatcher{
																																						pos:        position{line: 1243, col: 13, offset: 48838},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 1225, col: 34, offset: 48480},
																																		expr: &litMatcher{
																																			pos:        position{line: 1225, col: 35, offset: 48481},
																																			val:        "[",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 1225, col: 39, offset: 48485},
																																		expr: &litMatcher{
																																			pos:        position{line: 1225, col: 40, offset: 48486},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 1225, col: 44, offset: 48490},
																																		expr: &litMatcher{
																																			pos:        position{line: 1225, col: 45, offset: 48491},
																																			val:        "<<",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 1225, col: 50, offset: 48496},
																																		expr: &litMatcher{
																																			pos:        position{line: 1225, col: 51, offset: 48497},
																																			val:        ">>",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 1225, col: 56, offset: 48502},
																																		expr: &litMatcher{
																																			pos:        position{line: 1225, col: 57, offset: 48503},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 1225, col: 62, offset: 48508,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 174, col: 27, offset: 6329},
																										val:        "]]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 176, col: 5, offset: 6383},
																							run: (*parser).callonDocumentElement1122,
																							expr: &seqExpr{
																								pos: position{line: 176, col: 5, offset: 6383},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 176, col: 5, offset: 6383},
																										val:        "[#",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 176, col: 10, offset: 6388},
																										label: "id",
																										expr: &actionExpr{
																											pos: position{line: 1225, col: 7, offset: 48453},
																											run: (*parser).callonDocumentElement1126,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 1225, col: 7, offset: 48453},
																												expr: &choiceExpr{
																													pos: position{line: 1225, col: 8, offset: 48454},
																													alternatives: []interface{}{
																														&actionExpr{
																															pos: position{line: 1205, col: 14, offset: 47940},
																															run: (*parser).callonDocumentElement1129,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1205, col: 14, offset: 47940},
																																expr: &charClassMatcher{
																																	pos:        position{line: 1205, col: 14, offset: 47940},
																																	val:        "[a-zA-Z0-9]",
																																	ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 1225, col: 20, offset: 48466},
																															run: (*parser).callonDocumentElement1132,
																															expr: &seqExpr{
																																pos: position{line: 1225, col: 21, offset: 48467},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 1225, col: 21, offset: 48467},
																																		expr: &choiceExpr{
																																			pos: position{line: 1247, col: 12, offset: 48890},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1247, col: 12, offset: 48890},
																																					val:        "\r\n",
																																					ignoreCase: false,
																																				},
																																				&charClassMatcher{
																																					pos:        position{line: 1247, col: 21, offset: 48899},
																																					val:        "[\\r\\n]",
																																					chars:      []rune{'\r', '\n'},
																																					ignoreCase: false,
																																					inverted:   false,
																																				},
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 1225, col: 30, offset: 48476},
																																		expr: &choiceExpr{
																																			pos: position{line: 1243, col: 7, offset: 48832},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1243, col: 7, offset: 48832},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 1243, col: 13, offset: 48838},
																																					run: (*parser).callonDocumentElement1141,
																																					expr: &litMatcher{
																																						pos:        position{line: 1243, col: 13, offset: 48838},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 1225, col: 34, offset: 48480},
																																		expr: &litMatcher{
																																			pos:        position{line: 1225, col: 35, offset: 48481},
																																			val:        "[",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 1225, col: 39, offset: 48485},
																																		expr: &litMatcher{
																																			pos:        position{line: 1225, col: 40, offset: 48486},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 1225, col: 44, offset: 48490},
																																		expr: &litMatcher{
																																			pos:        position{line: 1225, col: 45, offset: 48491},
																																			val:        "<<",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 1225, col: 50, offset: 48496},
																																		expr: &litMatcher{
																																			pos:        position{line: 1225, col: 51, offset: 48497},
																																			val:        ">>",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 1225, col: 56, offset: 48502},
																																		expr: &litMatcher{
																																			pos:        position{line: 1225, col: 57, offset: 48503},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 1225, col: 62, offset: 48508,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 176, col: 18, offset: 6396},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 186, col: 17, offset: 6699},
																							run: (*parser).callonDocumentElement1155,
																							expr: &seqExpr{
																								pos: position{line: 186, col: 17, offset: 6699},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 186, col: 17, offset: 6699},
																										val:        ".",
																										ignoreCase: false,
																									},
																									&notExpr{
																										pos: position{line: 186, col: 21, offset: 6703},
																										expr: &litMatcher{
																											pos:        position{line: 186, col: 22, offset: 6704},
																											val:        ".",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 186, col: 26, offset: 6708},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonDocumentElement1163,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&labeledExpr{
																										pos:   position{line: 186, col: 30, offset: 6712},
																										label: "title",
																										expr: &actionExpr{
																											pos: position{line: 186, col: 37, offset: 6719},
																											run: (*parser).callonDocumentElement1166,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 186, col: 37, offset: 6719},
																												expr: &choiceExpr{
																													pos: position{line: 186, col: 38, offset: 6720},
																													alternatives: []interface{}{
																														&actionExpr{
																															pos: position{line: 1205, col: 14, offset: 47940},
																															run: (*parser).callonDocumentElement1169,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1205, col: 14, offset: 47940},
																																expr: &charClassMatcher{
																																	pos:        position{line: 1205, col: 14, offset: 47940},
																																	val:        "[a-zA-Z0-9]",
																																	ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 1215, col: 11, offset: 48287},
																															run: (*parser).callonDocumentElement1172,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1215, col: 11, offset: 48287},
																																expr: &choiceExpr{
																																	pos: position{line: 1243, col: 7, offset: 48832},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1243, col: 7, offset: 48832},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 1243, col: 13, offset: 48838},
																																			run: (*parser).callonDocumentElement1176,
																																			expr: &litMatcher{
																																				pos:        position{line: 1243, col: 13, offset: 48838},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 186, col: 59, offset: 6741},
																															run: (*parser).callonDocumentElement1178,
																															expr: &seqExpr{
																																pos: position{line: 186, col: 60, offset: 6742},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 186, col: 60, offset: 6742},
																																		expr: &choiceExpr{
																																			pos: position{line: 1247, col: 12, offset: 48890},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1247, col: 12, offset: 48890},
																																					val:        "\r\n",
																																					ignoreCase: false,
																																				},
																																				&charClassMatcher{
																																					pos:        position{line: 1247, col: 21, offset: 48899},
																																					val:        "[\\r\\n]",
																																					chars:      []rune{'\r', '\n'},
																																					ignoreCase: false,
																																					inverted:   false,
																																				},
																																			},
																																		},
																																	},
																																	&anyMatcher{
																																		line: 186, col: 70, offset: 6752,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 196, col: 16, offset: 6990},
																							run: (*parser).callonDocumentElement1185,
																							expr: &seqExpr{
																								pos: position{line: 196, col: 16, offset: 6990},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 196, col: 16, offset: 6990},
																										val:        "[.",
																										ignoreCase: false,
																									},
																									&notExpr{
																										pos: position{line: 196, col: 21, offset: 6995},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonDocumentElement1191,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&labeledExpr{
																										pos:   position{line: 196, col: 25, offset: 6999},
																										label: "role",
																										expr: &actionExpr{
																											pos: position{line: 196, col: 31, offset: 7005},
																											run: (*parser).callonDocumentElement1194,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 196, col: 31, offset: 7005},
																												expr: &choiceExpr{
																													pos: position{line: 196, col: 32, offset: 7006},
																													alternatives: []interface{}{
																														&actionExpr{
																															pos: position{line: 1205, col: 14, offset: 47940},
																															run: (*parser).callonDocumentElement1197,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1205, col: 14, offset: 47940},
																																expr: &charClassMatcher{
																																	pos:        position{line: 1205, col: 14, offset: 47940},
																																	val:        "[a-zA-Z0-9]",
																																	ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 1215, col: 11, offset: 48287},
																															run: (*parser).callonDocumentElement1200,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1215, col: 11, offset: 48287},
																																expr: &choiceExpr{
																																	pos: position{line: 1243, col: 7, offset: 48832},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1243, col: 7, offset: 48832},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 1243, col: 13, offset: 48838},
																																			run: (*parser).callonDocumentElement1204,
																																			expr: &litMatcher{
																																				pos:        position{line: 1243, col: 13, offset: 48838},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 196, col: 53, offset: 7027},
																															run: (*parser).callonDocumentElement1206,
																															expr: &seqExpr{
																																pos: position{line: 196, col: 54, offset: 7028},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 196, col: 54, offset: 7028},
																																		expr: &choiceExpr{
																																			pos: position{line: 1247, col: 12, offset: 48890},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1247, col: 12, offset: 48890},
																																					val:        "\r\n",
																																					ignoreCase: false,
																																				},
																																				&charClassMatcher{
																																					pos:        position{line: 1247, col: 21, offset: 48899},
																																					val:        "[\\r\\n]",
																																					chars:      []rune{'\r', '\n'},
																																					ignoreCase: false,
																																					inverted:   false,
																																				},
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 196, col: 63, offset: 7037},
																																		expr: &litMatcher{
																																			pos:        position{line: 196, col: 64, offset: 7038},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 196, col: 69, offset: 7043,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 200, col: 4, offset: 7118},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 210, col: 21, offset: 7481},
																							run: (*parser).callonDocumentElement1216,
																							expr: &litMatcher{
																								pos:        position{line: 210, col: 21, offset: 7481},
																								val:        "[source]",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 212, col: 5, offset: 7539},
																							run: (*parser).callonDocumentElement1218,
																							expr: &seqExpr{
																								pos: position{line: 212, col: 5, offset: 7539},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 212, col: 5, offset: 7539},
																										val:        "[source,",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 212, col: 16, offset: 7550},
																										label: "language",
																										expr: &actionExpr{
																											pos: position{line: 212, col: 26, offset: 7560},
																											run: (*parser).callonDocumentElement1222,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 212, col: 26, offset: 7560},
																												expr: &choiceExpr{
																													pos: position{line: 212, col: 27, offset: 7561},
																													alternatives: []interface{}{
																														&actionExpr{
																															pos: position{line: 1205, col: 14, offset: 47940},
																															run: (*parser).callonDocumentElement1225,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1205, col: 14, offset: 47940},
																																expr: &charClassMatcher{
																																	pos:        position{line: 1205, col: 14, offset: 47940},
																																	val:        "[a-zA-Z0-9]",
																																	ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 1215, col: 11, offset: 48287},
																															run: (*parser).callonDocumentElement1228,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1215, col: 11, offset: 48287},
																																expr: &choiceExpr{
																																	pos: position{line: 1243, col: 7, offset: 48832},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1243, col: 7, offset: 48832},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 1243, col: 13, offset: 48838},
																																			run: (*parser).callonDocumentElement1232,
																																			expr: &litMatcher{
																																				pos:        position{line: 1243, col: 13, offset: 48838},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 212, col: 48, offset: 7582},
																															run: (*parser).callonDocumentElement1234,
																															expr: &seqExpr{
																																pos: position{line: 212, col: 49, offset: 7583},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 212, col: 49, offset: 7583},
																																		expr: &choiceExpr{
																																			pos: position{line: 1247, col: 12, offset: 48890},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1247, col: 12, offset: 48890},
																																					val:        "\r\n",
																																					ignoreCase: false,
																																				},
																																				&charClassMatcher{
																																					pos:        position{line: 1247, col: 21, offset: 48899},
																																					val:        "[\\r\\n]",
																																					chars:      []rune{'\r', '\n'},
																																					ignoreCase: false,
																																					inverted:   false,
																																				},
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 58, offset: 7592},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 59, offset: 7593},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 212, col: 64, offset: 7598,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 216, col: 7, offset: 7688},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 247, col: 20, offset: 8646},
																							run: (*parser).callonDocumentElement1244,
																							expr: &seqExpr{
																								pos: position{line: 247, col: 20, offset: 8646},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 247, col: 20, offset: 8646},
																										val:        "[",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 247, col: 24, offset: 8650},
																										label: "kind",
																										expr: &actionExpr{
																											pos: position{line: 259, col: 14, offset: 9116},
																											run: (*parser).callonDocumentElement1248,
																											expr: &litMatcher{
																												pos:        position{line: 259, col: 14, offset: 9116},
																												val:        "quote",
																												ignoreCase: false,
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 247, col: 41, offset: 8667},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonDocumentElement1253,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 247, col: 45, offset: 8671},
																										val:        ",",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 247, col: 49, offset: 8675},
																										label: "author",
																										expr: &actionExpr{
																											pos: position{line: 286, col: 16, offset: 9839},
																											run: (*parser).callonDocumentElement1257,
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 286, col: 16, offset: 9839},
																												expr: &choiceExpr{
																													pos: position{line: 286, col: 17, offset: 9840},
																													alternatives: []interface{}{
																														&actionExpr{
																															pos: position{line: 1205, col: 14, offset: 47940},
																															run: (*parser).callonDocumentElement1260,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1205, col: 14, offset: 47940},
																																expr: &charClassMatcher{
																																	pos:        position{line: 1205, col: 14, offset: 47940},
																																	val:        "[a-zA-Z0-9]",
																																	ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 1215, col: 11, offset: 48287},
																															run: (*parser).callonDocumentElement1263,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1215, col: 11, offset: 48287},
																																expr: &choiceExpr{
																																	pos: position{line: 1243, col: 7, offset: 48832},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1243, col: 7, offset: 48832},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 1243, col: 13, offset: 48838},
																																			run: (*parser).callonDocumentElement1267,
																																			expr: &litMatcher{
																																				pos:        position{line: 1243, col: 13, offset: 48838},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 286, col: 38, offset: 9861},
																															run: (*parser).callonDocumentElement1269,
																															expr: &seqExpr{
																																pos: position{line: 286, col: 39, offset: 9862},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 286, col: 39, offset: 9862},
																																		expr: &choiceExpr{
																																			pos: position{line: 1251, col: 8, offset: 48930},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1247, col: 12, offset: 48890},
																																					val:        "\r\n",
																																					ignoreCase: false,
																																				},
																																				&charClassMatcher{
																																					pos:        position{line: 1247, col: 21, offset: 48899},
																																					val:        "[\\r\\n]",
																																					chars:      []rune{'\r', '\n'},
																																					ignoreCase: false,
																																					inverted:   false,
																																				},
																																				&notExpr{
																																					pos: position{line: 1249, col: 8, offset: 48919},
																																					expr: &anyMatcher{
																																						line: 1249, col: 9, offset: 48920,
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 286, col: 44, offset: 9867},
																																		expr: &litMatcher{
																																			pos:        position{line: 286, col: 45, offset: 9868},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 286, col: 49, offset: 9872},
																																		expr: &litMatcher{
																																			pos:        position{line: 286, col: 50, offset: 9873},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 286, col: 55, offset: 9878,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 247, col: 70, offset: 8696},
																										val:        ",",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 247, col: 74, offset: 8700},
																										label: "title",
																										expr: &actionExpr{
																											pos: position{line: 292, col: 15, offset: 9967},
																											run: (*parser).callonDocumentElement1284,
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 292, col: 15, offset: 9967},
																												expr: &choiceExpr{
																													pos: position{line: 292, col: 16, offset: 9968},
																													alternatives: []interface{}{
																														&actionExpr{
																															pos: position{line: 1205, col: 14, offset: 47940},
																															run: (*parser).callonDocumentElement1287,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1205, col: 14, offset: 47940},
																																expr: &charClassMatcher{
																																	pos:        position{line: 1205, col: 14, offset: 47940},
																																	val:        "[a-zA-Z0-9]",
																																	ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 1215, col: 11, offset: 48287},
																															run: (*parser).callonDocumentElement1290,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1215, col: 11, offset: 48287},
																																expr: &choiceExpr{
																																	pos: position{line: 1243, col: 7, offset: 48832},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1243, col: 7, offset: 48832},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 1243, col: 13, offset: 48838},
																																			run: (*parser).callonDocumentElement1294,
																																			expr: &litMatcher{
																																				pos:        position{line: 1243, col: 13, offset: 48838},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&seqExpr{
																															pos: position{line: 292, col: 38, offset: 9990},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 292, col: 38, offset: 9990},
																																	expr: &choiceExpr{
																																		pos: position{line: 1251, col: 8, offset: 48930},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1247, col: 12, offset: 48890},
																																				val:        "\r\n",
																																				ignoreCase: false,
																																			},
																																			&charClassMatcher{
																																				pos:        position{line: 1247, col: 21, offset: 48899},
																																				val:        "[\\r\\n]",
																																				chars:      []rune{'\r', '\n'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																			&notExpr{
																																				pos: position{line: 1249, col: 8, offset: 48919},
																																				expr: &anyMatcher{
																																					line: 1249, col: 9, offset: 48920,
																																				},
																																			},
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 292, col: 43, offset: 9995},
																																	expr: &litMatcher{
																																		pos:        position{line: 292, col: 44, offset: 9996},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 292, col: 48, offset: 10000},
																																	expr: &litMatcher{
																																		pos:        position{line: 292, col: 49, offset: 10001},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 292, col: 54, offset: 10006,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 247, col: 93, offset: 8719},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 251, col: 1, offset: 8846},
																							run: (*parser).callonDocumentElement1309,
																							expr: &seqExpr{
																								pos: position{line: 251, col: 1, offset: 8846},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 251, col: 1, offset: 8846},
																										val:        "[",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 251, col: 5, offset: 8850},
																										label: "kind",
																										expr: &actionExpr{
																											pos: position{line: 259, col: 14, offset: 9116},
																											run: (*parser).callonDocumentElement1313,
																											expr: &litMatcher{
																												pos:        position{line: 259, col: 14, offset: 9116},
																												val:        "quote",
																												ignoreCase: false,
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 251, col: 22, offset: 8867},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonDocumentElement1318,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 251, col: 26, offset: 8871},
																										val:        ",",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 251, col: 30, offset: 8875},
																										label: "author",
																										expr: &actionExpr{
																											pos: position{line: 286, col: 16, offset: 9839},
																											run: (*parser).callonDocumentElement1322,
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 286, col: 16, offset: 9839},
																												expr: &choiceExpr{
																													pos: position{line: 286, col: 17, offset: 9840},
																													alternatives: []interface{}{
																														&actionExpr{
																															pos: position{line: 1205, col: 14, offset: 47940},
																															run: (*parser).callonDocumentElement1325,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1205, col: 14, offset: 47940},
																																expr: &charClassMatcher{
																																	pos:        position{line: 1205, col: 14, offset: 47940},
																																	val:        "[a-zA-Z0-9]",
																																	ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 1215, col: 11, offset: 48287},
																															run: (*parser).callonDocumentElement1328,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1215, col: 11, offset: 48287},
																																expr: &choiceExpr{
																																	pos: position{line: 1243, col: 7, offset: 48832},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1243, col: 7, offset: 48832},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 1243, col: 13, offset: 48838},
																																			run: (*parser).callonDocumentElement1332,
																																			expr: &litMatcher{
																																				pos:        position{line: 1243, col: 13, offset: 48838},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 286, col: 38, offset: 9861},
																															run: (*parser).callonDocumentElement1334,
																															expr: &seqExpr{
																																pos: position{line: 286, col: 39, offset: 9862},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 286, col: 39, offset: 9862},
																																		expr: &choiceExpr{
																																			pos: position{line: 1251, col: 8, offset: 48930},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1247, col: 12, offset: 48890},
																																					val:        "\r\n",
																																					ignoreCase: false,
																																				},
																																				&charClassMatcher{
																																					pos:        position{line: 1247, col: 21, offset: 48899},
																																					val:        "[\\r\\n]",
																																					chars:      []rune{'\r', '\n'},
																																					ignoreCase: false,
																																					inverted:   false,
																																				},
																																				&notExpr{
																																					pos: position{line: 1249, col: 8, offset: 48919},
																																					expr: &anyMatcher{
																																						line: 1249, col: 9, offset: 48920,
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 286, col: 44, offset: 9867},
																																		expr: &litMatcher{
																																			pos:        position{line: 286, col: 45, offset: 9868},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 286, col: 49, offset: 9872},
																																		expr: &litMatcher{
																																			pos:        position{line: 286, col: 50, offset: 9873},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 286, col: 55, offset: 9878,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 251, col: 51, offset: 8896},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 255, col: 1, offset: 9011},
																							run: (*parser).callonDocumentElement1348,
																							expr: &seqExpr{
																								pos: position{line: 255, col: 1, offset: 9011},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 255, col: 1, offset: 9011},
																										val:        "[",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 255, col: 5, offset: 9015},
																										label: "kind",
																										expr: &actionExpr{
																											pos: position{line: 259, col: 14, offset: 9116},
																											run: (*parser).callonDocumentElement1352,
																											expr: &litMatcher{
																												pos:        position{line: 259, col: 14, offset: 9116},
																												val:        "quote",
																												ignoreCase: false,
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 255, col: 22, offset: 9032},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonDocumentElement1357,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 255, col: 26, offset: 9036},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 263, col: 20, offset: 9179},
																							run: (*parser).callonDocumentElement1360,
																							expr: &seqExpr{
																								pos: position{line: 263, col: 20, offset: 9179},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 263, col: 20, offset: 9179},
																										label: "attribute",
																										expr: &choiceExpr{
																											pos: position{line: 263, col: 31, offset: 9190},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 263, col: 31, offset: 9190},
																													run: (*parser).callonDocumentElement1364,
																													expr: &seqExpr{
																														pos: position{line: 263, col: 31, offset: 9190},
																														exprs: []interface{}{
																															&litMatcher{
																																pos:        position{line: 263, col: 31, offset: 9190},
																																val:        "[",
																																ignoreCase: false,
																															},
																															&labeledExpr{
																																pos:   position{line: 263, col: 35, offset: 9194},
																																label: "kind",
																																expr: &actionExpr{
																																	pos: position{line: 282, col: 14, offset: 9780},
																																	run: (*parser).callonDocumentElement1368,
																																	expr: &litMatcher{
																																		pos:        position{line: 282, col: 14, offset: 9780},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&zeroOrMoreExpr{
																																pos: position{line: 263, col: 52, offset: 9211},
																																expr: &choiceExpr{
																																	pos: position{line: 1243, col: 7, offset: 48832},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1243, col: 7, offset: 48832},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 1243, col: 13, offset: 48838},
																																			run: (*parser).callonDocumentElement1373,
																																			expr: &litMatcher{
																																				pos:        position{line: 1243, col: 13, offset: 48838},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																															&litMatcher{
																																pos:        position{line: 263, col: 56, offset: 9215},
																																val:        ",",
																																ignoreCase: false,
																															},
																															&labeledExpr{
																																pos:   position{line: 263, col: 60, offset: 9219},
																																label: "author",
																																expr: &actionExpr{
																																	pos: position{line: 286, col: 16, offset: 9839},
																																	run: (*parser).callonDocumentElement1377,
																																	expr: &zeroOrMoreExpr{
																																		pos: position{line: 286, col: 16, offset: 9839},
																																		expr: &choiceExpr{
																																			pos: position{line: 286, col: 17, offset: 9840},
																																			alternatives: []interface{}{
																																				&actionExpr{
																																					pos: position{line: 1205, col: 14, offset: 47940},
																																					run: (*parser).callonDocumentElement1380,
																																					expr: &oneOrMoreExpr{
																																						pos: position{line: 1205, col: 14, offset: 47940},
																																						expr: &charClassMatcher{
																																							pos:        position{line: 1205, col: 14, offset: 47940},
																																							val:        "[a-zA-Z0-9]",
																																							ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																							ignoreCase: false,
																																							inverted:   false,
																																						},
																																					},
																																				},
																																				&actionExpr{
																																					pos: position{line: 1215, col: 11, offset: 48287},
																																					run: (*parser).callonDocumentElement1383,
																																					expr: &oneOrMoreExpr{
																																						pos: position{line: 1215, col: 11, offset: 48287},
																																						expr: &choiceExpr{
																																							pos: position{line: 1243, col: 7, offset: 48832},
																																							alternatives: []interface{}{
																																								&litMatcher{
																																									pos:        position{line: 1243, col: 7, offset: 48832},
																																									val:        " ",
																																									ignoreCase: false,
																																								},
																																								&actionExpr{
																																									pos: position{line: 1243, col: 13, offset: 48838},
																																									run: (*parser).callonDocumentElement1387,
																																									expr: &litMatcher{
																																										pos:        position{line: 1243, col: 13, offset: 48838},
																																										val:        "\t",
																																										ignoreCase: false,
																																									},
																																								},
																																							},
																																						},
																																					},
																																				},
																																				&actionExpr{
																																					pos: position{line: 286, col: 38, offset: 9861},
																																					run: (*parser).callonDocumentElement1389,
																																					expr: &seqExpr{
																																						pos: position{line: 286, col: 39, offset: 9862},
																																						exprs: []interface{}{
																																							&notExpr{
																																								pos: position{line: 286, col: 39, offset: 9862},
																																								expr: &choiceExpr{
																																									pos: position{line: 1251, col: 8, offset: 48930},
																																									alternatives: []interface{}{
																																										&litMatcher{
																																											pos:        position{line: 1247, col: 12, offset: 48890},
																																											val:        "\r\n",
																																											ignoreCase: false,
																																										},
																																										&charClassMatcher{
																																											pos:        position{line: 1247, col: 21, offset: 48899},
																																											val:        "[\\r\\n]",
																																											chars:      []rune{'\r', '\n'},
																																											ignoreCase: false,
																																											inverted:   false,
																																										},
																																										&notExpr{
																																											pos: position{line: 1249, col: 8, offset: 48919},
																																											expr: &anyMatcher{
																																												line: 1249, col: 9, offset: 48920,
																																											},
																																										},
																																									},
																																								},
																																							},
																																							&notExpr{
																																								pos: position{line: 286, col: 44, offset: 9867},
																																								expr: &litMatcher{
																																									pos:        position{line: 286, col: 45, offset: 9868},
																																									val:        ",",
																																									ignoreCase: false,
																																								},
																																							},
																																							&notExpr{
																																								pos: position{line: 286, col: 49, offset: 9872},
																																								expr: &litMatcher{
																																									pos:        position{line: 286, col: 50, offset: 9873},
																																									val:        "]",
																																									ignoreCase: false,
																																								},
																																							},
																																							&anyMatcher{
																																								line: 286, col: 55, offset: 9878,
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&litMatcher{
																																pos:        position{line: 263, col: 81, offset: 9240},
																																val:        ",",
																																ignoreCase: false,
																															},
																															&labeledExpr{
																																pos:   position{line: 263, col: 85, offset: 9244},
																																label: "title",
																																expr: &actionExpr{
																																	pos: position{line: 292, col: 15, offset: 9967},
																																	run: (*parser).callonDocumentElement1404,
																																	expr: &zeroOrMoreExpr{
																																		pos: position{line: 292, col: 15, offset: 9967},
																																		expr: &choiceExpr{
																																			pos: position{line: 292, col: 16, offset: 9968},
																																			alternatives: []interface{}{
																																				&actionExpr{
																																					pos: position{line: 1205, col: 14, offset: 47940},
																																					run: (*parser).callonDocumentElement1407,
																																					expr: &oneOrMoreExpr{
																																						pos: position{line: 1205, col: 14, offset: 47940},
																																						expr: &charClassMatcher{
																																							pos:        position{line: 1205, col: 14, offset: 47940},
																																							val:        "[a-zA-Z0-9]",
																																							ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																							ignoreCase: false,
																																							inverted:   false,
																																						},
																																					},
																																				},
																																				&actionExpr{
																																					pos: position{line: 1215, col: 11, offset: 48287},
																																					run: (*parser).callonDocumentElement1410,
																																					expr: &oneOrMoreExpr{
																																						pos: position{line: 1215, col: 11, offset: 48287},
																																						expr: &choiceExpr{
																																							pos: position{line: 1243, col: 7, offset: 48832},
																																							alternatives: []interface{}{
																																								&litMatcher{
																																									pos:        position{line: 1243, col: 7, offset: 48832},
																																									val:        " ",
																																									ignoreCase: false,
																																								},
																																								&actionExpr{
																																									pos: position{line: 1243, col: 13, offset: 48838},
																																									run: (*parser).callonDocumentElement1414,
																																									expr: &litMatcher{
																																										pos:        position{line: 1243, col: 13, offset: 48838},
																																										val:        "\t",
																																										ignoreCase: false,
																																									},
																																								},
																																							},
																																						},
																																					},
																																				},
																																				&seqExpr{
																																					pos: position{line: 292, col: 38, offset: 9990},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 292, col: 38, offset: 9990},
																																							expr: &choiceExpr{
																																								pos: position{line: 1251, col: 8, offset: 48930},
																																								alternatives: []interface{}{
																																									&litMatcher{
																																										pos:        position{line: 1247, col: 12, offset: 48890},
																																										val:        "\r\n",
																																										ignoreCase: false,
																																									},
																																									&charClassMatcher{
																																										pos:        position{line: 1247, col: 21, offset: 48899},
																																										val:        "[\\r\\n]",
																																										chars:      []rune{'\r', '\n'},
																																										ignoreCase: false,
																																										inverted:   false,
																																									},
																																									&notExpr{
																																										pos: position{line: 1249, col: 8, offset: 48919},
																																										expr: &anyMatcher{
																																											line: 1249, col: 9, offset: 48920,
																																										},
																																									},
																																								},
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 292, col: 43, offset: 9995},
																																							expr: &litMatcher{
																																								pos:        position{line: 292, col: 44, offset: 9996},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 292, col: 48, offset: 10000},
																																							expr: &litMatcher{
																																								pos:        position{line: 292, col: 49, offset: 10001},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 292, col: 54, offset: 10006,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&litMatcher{
																																pos:        position{line: 263, col: 104, offset: 9263},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 267, col: 5, offset: 9406},
																													run: (*parser).callonDocumentElement1429,
																													expr: &seqExpr{
																														pos: position{line: 267, col: 5, offset: 9406},
																														exprs: []interface{}{
																															&litMatcher{
																																pos:        position{line: 267, col: 5, offset: 9406},
																																val:        "[",
																																ignoreCase: false,
																															},
																															&labeledExpr{
																																pos:   position{line: 267, col: 9, offset: 9410},
																																label: "kind",
																																expr: &actionExpr{
																																	pos: position{line: 282, col: 14, offset: 9780},
																																	run: (*parser).callonDocumentElement1433,
																																	expr: &litMatcher{
																																		pos:        position{line: 282, col: 14, offset: 9780},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&zeroOrMoreExpr{
																																pos: position{line: 267, col: 26, offset: 9427},
																																expr: &choiceExpr{
																																	pos: position{line: 1243, col: 7, offset: 48832},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1243, col: 7, offset: 48832},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 1243, col: 13, offset: 48838},
																																			run: (*parser).callonDocumentElement1438,
																																			expr: &litMatcher{
																																				pos:        position{line: 1243, col: 13, offset: 48838},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																															&litMatcher{
																																pos:        position{line: 267, col: 30, offset: 9431},
																																val:        ",",
																																ignoreCase: false,
																															},
																															&labeledExpr{
																																pos:   position{line: 267, col: 34, offset: 9435},
																																label: "author",
																																expr: &actionExpr{
																																	pos: position{line: 286, col: 16, offset: 9839},
																																	run: (*parser).callonDocumentElement1442,
																																	expr: &zeroOrMoreExpr{
																																		pos: position{line: 286, col: 16, offset: 9839},
																																		expr: &choiceExpr{
																																			pos: position{line: 286, col: 17, offset: 9840},
																																			alternatives: []interface{}{
																																				&actionExpr{
																																					pos: position{line: 1205, col: 14, offset: 47940},
																																					run: (*parser).callonDocumentElement1445,
																																					expr: &oneOrMoreExpr{
																																						pos: position{line: 1205, col: 14, offset: 47940},
																																						expr: &charClassMatcher{
																																							pos:        position{line: 1205, col: 14, offset: 47940},
																																							val:        "[a-zA-Z0-9]",
																																							ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																							ignoreCase: false,
																																							inverted:   false,
																																						},
																																					},
																																				},
																																				&actionExpr{
																																					pos: position{line: 1215, col: 11, offset: 48287},
																																					run: (*parser).callonDocumentElement1448,
																																					expr: &oneOrMoreExpr{
																																						pos: position{line: 1215, col: 11, offset: 48287},
																																						expr: &choiceExpr{
																																							pos: position{line: 1243, col: 7, offset: 48832},
																																							alternatives: []interface{}{
																																								&litMatcher{
																																									pos:        position{line: 1243, col: 7, offset: 48832},
																																									val:        " ",
																																									ignoreCase: false,
																																								},
																																								&actionExpr{
																																									pos: position{line: 1243, col: 13, offset: 48838},
																																									run: (*parser).callonDocumentElement1452,
																																									expr: &litMatcher{
																																										pos:        position{line: 1243, col: 13, offset: 48838},
																																										val:        "\t",
																																										ignoreCase: false,
																																									},
																																								},
																																							},
																																						},
																																					},
																																				},
																																				&actionExpr{
																																					pos: position{line: 286, col: 38, offset: 9861},
																																					run: (*parser).callonDocumentElement1454,
																																					expr: &seqExpr{
																																						pos: position{line: 286, col: 39, offset: 9862},
																																						exprs: []interface{}{
																																							&notExpr{
																																								pos: position{line: 286, col: 39, offset: 9862},
																																								expr: &choiceExpr{
																																									pos: position{line: 1251, col: 8, offset: 48930},
																																									alternatives: []interface{}{
																																										&litMatcher{
																																											pos:        position{line: 1247, col: 12, offset: 48890},
																																											val:        "\r\n",
																																											ignoreCase: false,
																																										},
																																										&charClassMatcher{
																																											pos:        position{line: 1247, col: 21, offset: 48899},
																																											val:        "[\\r\\n]",
																																											chars:      []rune{'\r', '\n'},
																																											ignoreCase: false,
																																											inverted:   false,
																																										},
																																										&notExpr{
																																											pos: position{line: 1249, col: 8, offset: 48919},
																																											expr: &anyMatcher{
																																												line: 1249, col: 9, offset: 48920,
																																											},
																																										},
																																									},
																																								},
																																							},
																																							&notExpr{
																																								pos: position{line: 286, col: 44, offset: 9867},
																																								expr: &litMatcher{
																																									pos:        position{line: 286, col: 45, offset: 9868},
																																									val:        ",",
																																									ignoreCase: false,
																																								},
																																							},
																																							&notExpr{
																																								pos: position{line: 286, col: 49, offset: 9872},
																																								expr: &litMatcher{
																																									pos:        position{line: 286, col: 50, offset: 9873},
																																									val:        "]",
																																									ignoreCase: false,
																																								},
																																							},
																																							&anyMatcher{
																																								line: 286, col: 55, offset: 9878,
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&litMatcher{
																																pos:        position{line: 267, col: 55, offset: 9456},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 271, col: 5, offset: 9587},
																													run: (*parser).callonDocumentElement1468,
																													expr: &seqExpr{
																														pos: position{line: 271, col: 5, offset: 9587},
																														exprs: []interface{}{
																															&litMatcher{
																																pos:        position{line: 271, col: 5, offset: 9587},
																																val:        "[",
																																ignoreCase: false,
																															},
																															&labeledExpr{
																																pos:   position{line: 271, col: 9, offset: 9591},
																																label: "kind",
																																expr: &actionExpr{
																																	pos: position{line: 282, col: 14, offset: 9780},
																																	run: (*parser).callonDocumentElement1472,
																																	expr: &litMatcher{
																																		pos:        position{line: 282, col: 14, offset: 9780},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&zeroOrMoreExpr{
																																pos: position{line: 271, col: 26, offset: 9608},
																																expr: &choiceExpr{
																																	pos: position{line: 1243, col: 7, offset: 48832},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1243, col: 7, offset: 48832},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 1243, col: 13, offset: 48838},
																																			run: (*parser).callonDocumentElement1477,
																																			expr: &litMatcher{
																																				pos:        position{line: 1243, col: 13, offset: 48838},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																															&litMatcher{
																																pos:        position{line: 271, col: 30, offset: 9612},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&stateCodeExpr{
																										pos: position{line: 275, col: 1, offset: 9688},
																										run: (*parser).callonDocumentElement1480,
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 205, col: 30, offset: 7283},
																							run: (*parser).callonDocumentElement1481,
																							expr: &seqExpr{
																								pos: position{line: 205, col: 30, offset: 7283},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 205, col: 30, offset: 7283},
																										val:        "[",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 205, col: 34, offset: 7287},
																										label: "k",
																										expr: &choiceExpr{
																											pos: position{line: 564, col: 19, offset: 20877},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 564, col: 19, offset: 20877},
																													run: (*parser).callonDocumentElement1486,
																													expr: &litMatcher{
																														pos:        position{line: 564, col: 19, offset: 20877},
																														val:        "TIP",
																														ignoreCase: false,
																													},
																												},
																												&actionExpr{
																													pos: position{line: 566, col: 9, offset: 20923},
																													run: (*parser).callonDocumentElement1488,
																													expr: &litMatcher{
																														pos:        position{line: 566, col: 9, offset: 20923},
																														val:        "NOTE",
																														ignoreCase: false,
																													},
																												},
																												&actionExpr{
																													pos: position{line: 568, col: 9, offset: 20971},
																													run: (*parser).callonDocumentElement1490,
																													expr: &litMatcher{
																														pos:        position{line: 568, col: 9, offset: 20971},
																														val:        "IMPORTANT",
																														ignoreCase: false,
																													},
																												},
																												&actionExpr{
																													pos: position{line: 570, col: 9, offset: 21029},
																													run: (*parser).callonDocumentElement1492,
																													expr: &litMatcher{
																														pos:        position{line: 570, col: 9, offset: 21029},
																														val:        "WARNING",
																														ignoreCase: false,
																													},
																												},
																												&actionExpr{
																													pos: position{line: 572, col: 9, offset: 21083},
																													run: (*parser).callonDocumentElement1494,
																													expr: &litMatcher{
																														pos:        position{line: 572, col: 9, offset: 21083},
																														val:        "CAUTION",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 205, col: 53, offset: 7306},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 243, col: 21, offset: 8543},
																							run: (*parser).callonDocumentElement1497,
																							expr: &litMatcher{
																								pos:        position{line: 243, col: 21, offset: 8543},
																								val:        "[horizontal]",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 221, col: 19, offset: 7839},
																							run: (*parser).callonDocumentElement1499,
																							expr: &seqExpr{
																								pos: position{line: 221, col: 19, offset: 7839},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 221, col: 19, offset: 7839},
																										val:        "[",
																										ignoreCase: false,
																									},
																									&notExpr{
																										pos: position{line: 221, col: 23, offset: 7843},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonDocumentElement1505,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&labeledExpr{
																										pos:   position{line: 221, col: 27, offset: 7847},
																										label: "attributes",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 221, col: 38, offset: 7858},
																											expr: &choiceExpr{
																												pos: position{line: 225, col: 21, offset: 7971},
																												alternatives: []interface{}{
																													&actionExpr{
																														pos: position{line: 225, col: 21, offset: 7971},
																														run: (*parser).callonDocumentElement1510,
																														expr: &seqExpr{
																															pos: position{line: 225, col: 21, offset: 7971},
																															exprs: []interface{}{
																																&labeledExpr{
																																	pos:   position{line: 225, col: 21, offset: 7971},
																																	label: "key",
																																	expr: &actionExpr{
																																		pos: position{line: 231, col: 17, offset: 8231},
																																		run: (*parser).callonDocumentElement1513,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 17, offset: 8231},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 17, offset: 8231},
																																					expr: &actionExpr{
																																						pos: position{line: 259, col: 14, offset: 9116},
																																						run: (*parser).callonDocumentElement1516,
																																						expr: &litMatcher{
																																							pos:        position{line: 259, col: 14, offset: 9116},
																																							val:        "quote",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 28, offset: 8242},
																																					expr: &actionExpr{
																																						pos: position{line: 282, col: 14, offset: 9780},
																																						run: (*parser).callonDocumentElement1519,
																																						expr: &litMatcher{
																																							pos:        position{line: 282, col: 14, offset: 9780},
																																							val:        "verse",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 39, offset: 8253},
																																					expr: &actionExpr{
																																						pos: position{line: 1170, col: 16, offset: 47067},
																																						run: (*parser).callonDocumentElement1522,
																																						expr: &litMatcher{
																																							pos:        position{line: 1170, col: 16, offset: 47067},
																																							val:        "literal",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																				&labeledExpr{
																																					pos:   position{line: 231, col: 52, offset: 8266},
																																					label: "key",
																																					expr: &oneOrMoreExpr{
																																						pos: position{line: 231, col: 56, offset: 8270},
																																						expr: &choiceExpr{
																																							pos: position{line: 231, col: 57, offset: 8271},
																																							alternatives: []interface{}{
																																								&actionExpr{
																																									pos: position{line: 1205, col: 14, offset: 47940},
																																									run: (*parser).callonDocumentElement1527,
																																									expr: &oneOrMoreExpr{
																																										pos: position{line: 1205, col: 14, offset: 47940},
																																										expr: &charClassMatcher{
																																											pos:        position{line: 1205, col: 14, offset: 47940},
																																											val:        "[a-zA-Z0-9]",
																																											ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																											ignoreCase: false,
																																											inverted:   false,
																																										},
																																									},
																																								},
																																								&actionExpr{
																																									pos: position{line: 1215, col: 11, offset: 48287},
																																									run: (*parser).callonDocumentElement1530,
																																									expr: &oneOrMoreExpr{
																																										pos: position{line: 1215, col: 11, offset: 48287},
																																										expr: &choiceExpr{
																																											pos: position{line: 1243, col: 7, offset: 48832},
																																											alternatives: []interface{}{
																																												&litMatcher{
																																													pos:        position{line: 1243, col: 7, offset: 48832},
																																													val:        " ",
																																													ignoreCase: false,
																																												},
																																												&actionExpr{
																																													pos: position{line: 1243, col: 13, offset: 48838},
																																													run: (*parser).callonDocumentElement1534,
																																													expr: &litMatcher{
																																														pos:        position{line: 1243, col: 13, offset: 48838},
																																														val:        "\t",
																																														ignoreCase: false,
																																													},
																																												},
																																											},
																																										},
																																									},
																																								},
																																								&actionExpr{
																																									pos: position{line: 231, col: 78, offset: 8292},
																																									run: (*parser).callonDocumentElement1536,
																																									expr: &seqExpr{
																																										pos: position{line: 231, col: 79, offset: 8293},
																																										exprs: []interface{}{
																																											&notExpr{
																																												pos: position{line: 231, col: 79, offset: 8293},
																																												expr: &litMatcher{
																																													pos:        position{line: 231, col: 80, offset: 8294},
																																													val:        "=",
																																													ignoreCase: false,
																																												},
																																											},
																																											&notExpr{
																																												pos: position{line: 231, col: 84, offset: 8298},
																																												expr: &litMatcher{
																																													pos:        position{line: 231, col: 85, offset: 8299},
																																													val:        ",",
																																													ignoreCase: false,
																																												},
																																											},
																																											&notExpr{
																																												pos: position{line: 231, col: 89, offset: 8303},
																																												expr: &litMatcher{
																																													pos:        position{line: 231, col: 90, offset: 8304},
																																													val:        "]",
																																													ignoreCase: false,
																																												},
																																											},
																																											&anyMatcher{
																																												line: 231, col: 95, offset: 8309,
																																											},
																																										},
																																									},
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&litMatcher{
																																	pos:        position{line: 225, col: 40, offset: 7990},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																																&labeledExpr{
																																	pos:   position{line: 225, col: 44, offset: 7994},
																																	label: "value",
																																	expr: &actionExpr{
																																		pos: position{line: 237, col: 19, offset: 8403},
																																		run: (*parser).callonDocumentElement1547,
																																		expr: &labeledExpr{
																																			pos:   position{line: 237, col: 19, offset: 8403},
																																			label: "value",
																																			expr: &zeroOrMoreExpr{
																																				pos: position{line: 237, col: 25, offset: 8409},
																																				expr: &choiceExpr{
																																					pos: position{line: 237, col: 26, offset: 8410},
																																					alternatives: []interface{}{
																																						&actionExpr{
																																							pos: position{line: 1205, col: 14, offset: 47940},
																																							run: (*parser).callonDocumentElement1551,
																																							expr: &oneOrMoreExpr{
																																								pos: position{line: 1205, col: 14, offset: 47940},
																																								expr: &charClassMatcher{
																																									pos:        position{line: 1205, col: 14, offset: 47940},
																																									val:        "[a-zA-Z0-9]",
																																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																									ignoreCase: false,
																																									inverted:   false,
																																								},
																																							},
																																						},
																																						&actionExpr{
																																							pos: position{line: 1215, col: 11, offset: 48287},
																																							run: (*parser).callonDocumentElement1554,
																																							expr: &oneOrMoreExpr{
																																								pos: position{line: 1215, col: 11, offset: 48287},
																																								expr: &choiceExpr{
																																									pos: position{line: 1243, col: 7, offset: 48832},
																																									alternatives: []interface{}{
																																										&litMatcher{
																																											pos:        position{line: 1243, col: 7, offset: 48832},
																																											val:        " ",
																																											ignoreCase: false,
																																										},
																																										&actionExpr{
																																											pos: position{line: 1243, col: 13, offset: 48838},
																																											run: (*parser).callonDocumentElement1558,
																																											expr: &litMatcher{
																																												pos:        position{line: 1243, col: 13, offset: 48838},
																																												val:        "\t",
																																												ignoreCase: false,
																																											},
																																										},
																																									},
																																								},
																																							},
																																						},
																																						&actionExpr{
																																							pos: position{line: 237, col: 47, offset: 8431},
																																							run: (*parser).callonDocumentElement1560,
																																							expr: &seqExpr{
																																								pos: position{line: 237, col: 48, offset: 8432},
																																								exprs: []interface{}{
																																									&notExpr{
																																										pos: position{line: 237, col: 48, offset: 8432},
																																										expr: &litMatcher{
																																											pos:        position{line: 237, col: 49, offset: 8433},
																																											val:        "=",
																																											ignoreCase: false,
																																										},
																																									},
																																									&notExpr{
																																										pos: position{line: 237, col: 53, offset: 8437},
																																										expr: &litMatcher{
																																											pos:        position{line: 237, col: 54, offset: 8438},
																																											val:        ",",
																																											ignoreCase: false,
																																										},
																																									},
																																									&notExpr{
																																										pos: position{line: 237, col: 58, offset: 8442},
																																										expr: &litMatcher{
																																											pos:        position{line: 237, col: 59, offset: 8443},
																																											val:        "]",
																																											ignoreCase: false,
																																										},
																																									},
																																									&anyMatcher{
																																										line: 237, col: 64, offset: 8448,
																																									},
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&zeroOrOneExpr{
																																	pos: position{line: 225, col: 67, offset: 8017},
																																	expr: &litMatcher{
																																		pos:        position{line: 225, col: 67, offset: 8017},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&zeroOrMoreExpr{
																																	pos: position{line: 225, col: 72, offset: 8022},
																																	expr: &choiceExpr{
																																		pos: position{line: 1243, col: 7, offset: 48832},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1243, col: 7, offset: 48832},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1243, col: 13, offset: 48838},
																																				run: (*parser).callonDocumentElement1574,
																																				expr: &litMatcher{
																																					pos:        position{line: 1243, col: 13, offset: 48838},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&actionExpr{
																														pos: position{line: 227, col: 5, offset: 8106},
																														run: (*parser).callonDocumentElement1576,
																														expr: &seqExpr{
																															pos: position{line: 227, col: 5, offset: 8106},
																															exprs: []interface{}{
																																&labeledExpr{
																																	pos:   position{line: 227, col: 5, offset: 8106},
																																	label: "key",
																																	expr: &actionExpr{
																																		pos: position{line: 231, col: 17, offset: 8231},
																																		run: (*parser).callonDocumentElement1579,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 17, offset: 8231},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 17, offset: 8231},
																																					expr: &actionExpr{
																																						pos: position{line: 259, col: 14, offset: 9116},
																																						run: (*parser).callonDocumentElement1582,
																																						expr: &litMatcher{
																																							pos:        position{line: 259, col: 14, offset: 9116},
																																							val:        "quote",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 28, offset: 8242},
																																					expr: &actionExpr{
																																						pos: position{line: 282, col: 14, offset: 9780},
																																						run: (*parser).callonDocumentElement1585,
																																						expr: &litMatcher{
																																							pos:        position{line: 282, col: 14, offset: 9780},
																																							val:        "verse",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 39, offset: 8253},
																																					expr: &actionExpr{
																																						pos: position{line: 1170, col: 16, offset: 47067},
																																						run: (*parser).callonDocumentElement1588,
																																						expr: &litMatcher{
																																							pos:        position{line: 1170, col: 16, offset: 47067},
																																							val:        "literal",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																				&labeledExpr{
																																					pos:   position{line: 231, col: 52, offset: 8266},
																																					label: "key",
																																					expr: &oneOrMoreExpr{
																																						pos: position{line: 231, col: 56, offset: 8270},
																																						expr: &choiceExpr{
																																							pos: position{line: 231, col: 57, offset: 8271},
																																							alternatives: []interface{}{
																																								&actionExpr{
																																									pos: position{line: 1205, col: 14, offset: 47940},
																																									run: (*parser).callonDocumentElement1593,
																																									expr: &oneOrMoreExpr{
																																										pos: position{line: 1205, col: 14, offset: 47940},
																																										expr: &charClassMatcher{
																																											pos:        position{line: 1205, col: 14, offset: 47940},
																																											val:        "[a-zA-Z0-9]",
																																											ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																											ignoreCase: false,
																																											inverted:   false,
																																										},
																																									},
																																								},
																																								&actionExpr{
																																									pos: position{line: 1215, col: 11, offset: 48287},
																																									run: (*parser).callonDocumentElement1596,
																																									expr: &oneOrMoreExpr{
																																										pos: position{line: 1215, col: 11, offset: 48287},
																																										expr: &choiceExpr{
																																											pos: position{line: 1243, col: 7, offset: 48832},
																																											alternatives: []interface{}{
																																												&litMatcher{
																																													pos:        position{line: 1243, col: 7, offset: 48832},
																																													val:        " ",
																																													ignoreCase: false,
																																												},
																																												&actionExpr{
																																													pos: position{line: 1243, col: 13, offset: 48838},
																																													run: (*parser).callonDocumentElement1600,
																																													expr: &litMatcher{
																																														pos:        position{line: 1243, col: 13, offset: 48838},
																																														val:        "\t",
																																														ignoreCase: false,
																																													},
																																												},
																																											},
																																										},
																																									},
																																								},
																																								&actionExpr{
																																									pos: position{line: 231, col: 78, offset: 8292},
																																									run: (*parser).callonDocumentElement1602,
																																									expr: &seqExpr{
																																										pos: position{line: 231, col: 79, offset: 8293},
																																										exprs: []interface{}{
																																											&notExpr{
																																												pos: position{line: 231, col: 79, offset: 8293},
																																												expr: &litMatcher{
																																													pos:        position{line: 231, col: 80, offset: 8294},
																																													val:        "=",
																																													ignoreCase: false,
																																												},
																																											},
																																											&notExpr{
																																												pos: position{line: 231, col: 84, offset: 8298},
																																												expr: &litMatcher{
																																													pos:        position{line: 231, col: 85, offset: 8299},
																																													val:        ",",
																																													ignoreCase: false,
																																												},
																																											},
																																											&notExpr{
																																												pos: position{line: 231, col: 89, offset: 8303},
																																												expr: &litMatcher{
																																													pos:        position{line: 231, col: 90, offset: 8304},
																																													val:        "]",
																																													ignoreCase: false,
																																												},
																																											},
																																											&anyMatcher{
																																												line: 231, col: 95, offset: 8309,
																																											},
																																										},
																																									},
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&zeroOrOneExpr{
																																	pos: position{line: 227, col: 24, offset: 8125},
																																	expr: &litMatcher{
																																		pos:        position{line: 227, col: 24, offset: 8125},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&zeroOrMoreExpr{
																																	pos: position{line: 227, col: 29, offset: 8130},
																																	expr: &choiceExpr{
																																		pos: position{line: 1243, col: 7, offset: 48832},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1243, col: 7, offset: 48832},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1243, col: 13, offset: 48838},
																																				run: (*parser).callonDocumentElement1616,
																																				expr: &litMatcher{
																																					pos:        position{line: 1243, col: 13, offset: 48838},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 221, col: 59, offset: 7879},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																			&zeroOrMoreExpr{
																				pos: position{line: 165, col: 170, offset: 6018},
																				expr: &choiceExpr{
																					pos: position{line: 1243, col: 7, offset: 48832},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1243, col: 7, offset: 48832},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1243, col: 13, offset: 48838},
																							run: (*parser).callonDocumentElement1622,
																							expr: &litMatcher{
																								pos:        position{line: 1243, col: 13, offset: 48838},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&choiceExpr{
																				pos: position{line: 1251, col: 8, offset: 48930},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1247, col: 12, offset: 48890},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 1247, col: 21, offset: 48899},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																					&notExpr{
																						pos: position{line: 1249, col: 8, offset: 48919},
																						expr: &anyMatcher{
																							line: 1249, col: 9, offset: 48920,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 1166, col: 82, offset: 46887},
													label: "lines",
													expr: &actionExpr{
														pos: position{line: 1179, col: 39, offset: 47276},
														run: (*parser).callonDocumentElement1630,
														expr: &labeledExpr{
															pos:   position{line: 1179, col: 39, offset: 47276},
															label: "lines",
															expr: &oneOrMoreExpr{
																pos: position{line: 1179, col: 45, offset: 47282},
																expr: &actionExpr{
																	pos: position{line: 1183, col: 38, offset: 47400},
																	run: (*parser).callonDocumentElement1633,
																	expr: &seqExpr{
																		pos: position{line: 1183, col: 38, offset: 47400},
																		exprs: []interface{}{
																			&labeledExpr{
																				pos:   position{line: 1183, col: 38, offset: 47400},
																				label: "line",
																				expr: &actionExpr{
																					pos: position{line: 1183, col: 44, offset: 47406},
																					run: (*parser).callonDocumentElement1636,
																					expr: &seqExpr{
																						pos: position{line: 1183, col: 44, offset: 47406},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 1183, col: 44, offset: 47406},
																								expr: &actionExpr{
																									pos: position{line: 1194, col: 14, offset: 47708},
																									run: (*parser).callonDocumentElement1639,
																									expr: &seqExpr{
																										pos: position{line: 1194, col: 14, offset: 47708},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 1194, col: 14, offset: 47708},
																												expr: &notExpr{
																													pos: position{line: 1249, col: 8, offset: 48919},
																													expr: &anyMatcher{
																														line: 1249, col: 9, offset: 48920,
																													},
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 1194, col: 19, offset: 47713},
																												expr: &choiceExpr{
																													pos: position{line: 1243, col: 7, offset: 48832},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1243, col: 7, offset: 48832},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1243, col: 13, offset: 48838},
																															run: (*parser).callonDocumentElement1647,
																															expr: &litMatcher{
																																pos:        position{line: 1243, col: 13, offset: 48838},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																											&choiceExpr{
																												pos: position{line: 1251, col: 8, offset: 48930},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1247, col: 12, offset: 48890},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1247, col: 21, offset: 48899},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1249, col: 8, offset: 48919},
																														expr: &anyMatcher{
																															line: 1249, col: 9, offset: 48920,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&oneOrMoreExpr{
																								pos: position{line: 1183, col: 57, offset: 47419},
																								expr: &choiceExpr{
																									pos: position{line: 1183, col: 58, offset: 47420},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 1205, col: 14, offset: 47940},
																											run: (*parser).callonDocumentElement1656,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 1205, col: 14, offset: 47940},
																												expr: &charClassMatcher{
																													pos:        position{line: 1205, col: 14, offset: 47940},
																													val:        "[a-zA-Z0-9]",
																													ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 1215, col: 11, offset: 48287},
																											run: (*parser).callonDocumentElement1659,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 1215, col: 11, offset: 48287},
																												expr: &choiceExpr{
																													pos: position{line: 1243, col: 7, offset: 48832},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1243, col: 7, offset: 48832},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1243, col: 13, offset: 48838},
																															run: (*parser).callonDocumentElement1663,
																															expr: &litMatcher{
																																pos:        position{line: 1243, col: 13, offset: 48838},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 1183, col: 79, offset: 47441},
																											run: (*parser).callonDocumentElement1665,
																											expr: &seqExpr{
																												pos: position{line: 1183, col: 80, offset: 47442},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 1183, col: 80, offset: 47442},
																														expr: &choiceExpr{
																															pos: position{line: 1251, col: 8, offset: 48930},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1247, col: 12, offset: 48890},
																																	val:        "\r\n",
																																	ignoreCase: false,
																																},
																																&charClassMatcher{
																																	pos:        position{line: 1247, col: 21, offset: 48899},
																																	val:        "[\\r\\n]",
																																	chars:      []rune{'\r', '\n'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																																&notExpr{
																																	pos: position{line: 1249, col: 8, offset: 48919},
																																	expr: &anyMatcher{
																																		line: 1249, col: 9, offset: 48920,
																																	},
																																},
																															},
																														},
																													},
																													&anyMatcher{
																														line: 1183, col: 86, offset: 47448,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																			&choiceExpr{
																				pos: position{line: 1251, col: 8, offset: 48930},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1247, col: 12, offset: 48890},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 1247, col: 21, offset: 48899},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																					&notExpr{
																						pos: position{line: 1249, col: 8, offset: 48919},
																						expr: &anyMatcher{
																							line: 1249, col: 9, offset: 48920,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 157, col: 15, offset: 5589},
										name: "Paragraph",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "QuoteAttributes",
			pos:  position{line: 247, col: 1, offset: 8627},
			expr: &choiceExpr{
				pos: position{line: 247, col: 20, offset: 8646},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 247, col: 20, offset: 8646},
						run: (*parser).callonQuoteAttributes2,
						expr: &seqExpr{
							pos: position{line: 247, col: 20, offset: 8646},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 247, col: 20, offset: 8646},
									val:        "[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 247, col: 24, offset: 8650},
									label: "kind",
									expr: &actionExpr{
										pos: position{line: 259, col: 14, offset: 9116},
										run: (*parser).callonQuoteAttributes6,
										expr: &litMatcher{
											pos:        position{line: 259, col: 14, offset: 9116},
											val:        "quote",
											ignoreCase: false,
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 247, col: 41, offset: 8667},
									expr: &choiceExpr{
										pos: position{line: 1243, col: 7, offset: 48832},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1243, col: 7, offset: 48832},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1243, col: 13, offset: 48838},
												run: (*parser).callonQuoteAttributes11,
												expr: &litMatcher{
													pos:        position{line: 1243, col: 13, offset: 48838},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 247, col: 45, offset: 8671},
									val:        ",",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 247, col: 49, offset: 8675},
									label: "author",
									expr: &actionExpr{
										pos: position{line: 286, col: 16, offset: 9839},
										run: (*parser).callonQuoteAttributes15,
										expr: &zeroOrMoreExpr{
											pos: position{line: 286, col: 16, offset: 9839},
											expr: &choiceExpr{
												pos: position{line: 286, col: 17, offset: 9840},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 1205, col: 14, offset: 47940},
														run: (*parser).callonQuoteAttributes18,
														expr: &oneOrMoreExpr{
															pos: position{line: 1205, col: 14, offset: 47940},
															expr: &charClassMatcher{
																pos:        position{line: 1205, col: 14, offset: 47940},
																val:        "[a-zA-Z0-9]",
																ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																ignoreCase: false,
																inverted:   false,
															},
														},
													},
													&actionExpr{
														pos: position{line: 1215, col: 11, offset: 48287},
														run: (*parser).callonQuoteAttributes21,
														expr: &oneOrMoreExpr{
															pos: position{line: 1215, col: 11, offset: 48287},
															expr: &choiceExpr{
																pos: position{line: 1243, col: 7, offset: 48832},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1243, col: 7, offset: 48832},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1243, col: 13, offset: 48838},
																		run: (*parser).callonQuoteAttributes25,
																		expr: &litMatcher{
																			pos:        position{line: 1243, col: 13, offset: 48838},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 286, col: 38, offset: 9861},
														run: (*parser).callonQuoteAttributes27,
														expr: &seqExpr{
															pos: position{line: 286, col: 39, offset: 9862},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 286, col: 39, offset: 9862},
																	expr: &choiceExpr{
																		pos: position{line: 1251, col: 8, offset: 48930},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1247, col: 12, offset: 48890},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1247, col: 21, offset: 48899},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																			&notExpr{
																				pos: position{line: 1249, col: 8, offset: 48919},
																				expr: &anyMatcher{
																					line: 1249, col: 9, offset: 48920,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 286, col: 44, offset: 9867},
																	expr: &litMatcher{
																		pos:        position{line: 286, col: 45, offset: 9868},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 286, col: 49, offset: 9872},
																	expr: &litMatcher{
																		pos:        position{line: 286, col: 50, offset: 9873},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 286, col: 55, offset: 9878,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 247, col: 70, offset: 8696},
									val:        ",",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 247, col: 74, offset: 8700},
									label: "title",
									expr: &actionExpr{
										pos: position{line: 292, col: 15, offset: 9967},
										run: (*parser).callonQuoteAttributes42,
										expr: &zeroOrMoreExpr{
											pos: position{line: 292, col: 15, offset: 9967},
											expr: &choiceExpr{
												pos: position{line: 292, col: 16, offset: 9968},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 1205, col: 14, offset: 47940},
														run: (*parser).callonQuoteAttributes45,
														expr: &oneOrMoreExpr{
															pos: position{line: 1205, col: 14, offset: 47940},
															expr: &charClassMatcher{
																pos:        position{line: 1205, col: 14, offset: 47940},
																val:        "[a-zA-Z0-9]",
																ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																ignoreCase: false,
																inverted:   false,
															},
														},
													},
													&actionExpr{
														pos: position{line: 1215, col: 11, offset: 48287},
														run: (*parser).callonQuoteAttributes48,
														expr: &oneOrMoreExpr{
															pos: position{line: 1215, col: 11, offset: 48287},
															expr: &choiceExpr{
																pos: position{line: 1243, col: 7, offset: 48832},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1243, col: 7, offset: 48832},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1243, col: 13, offset: 48838},
																		run: (*parser).callonQuoteAttributes52,
																		expr: &litMatcher{
																			pos:        position{line: 1243, col: 13, offset: 48838},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
													},
													&seqExpr{
														pos: position{line: 292, col: 38, offset: 9990},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 292, col: 38, offset: 9990},
																expr: &choiceExpr{
																	pos: position{line: 1251, col: 8, offset: 48930},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1247, col: 12, offset: 48890},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1247, col: 21, offset: 48899},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1249, col: 8, offset: 48919},
																			expr: &anyMatcher{
																				line: 1249, col: 9, offset: 48920,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 292, col: 43, offset: 9995},
																expr: &litMatcher{
																	pos:        position{line: 292, col: 44, offset: 9996},
																	val:        ",",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 292, col: 48, offset: 10000},
																expr: &litMatcher{
																	pos:        position{line: 292, col: 49, offset: 10001},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 292, col: 54, offset: 10006,
															},
														},
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 247, col: 93, offset: 8719},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 251, col: 1, offset: 8846},
						run: (*parser).callonQuoteAttributes67,
						expr: &seqExpr{
							pos: position{line: 251, col: 1, offset: 8846},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 251, col: 1, offset: 8846},
									val:        "[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 251, col: 5, offset: 8850},
									label: "kind",
									expr: &actionExpr{
										pos: position{line: 259, col: 14, offset: 9116},
										run: (*parser).callonQuoteAttributes71,
										expr: &litMatcher{
											pos:        position{line: 259, col: 14, offset: 9116},
											val:        "quote",
											ignoreCase: false,
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 251, col: 22, offset: 8867},
									expr: &choiceExpr{
										pos: position{line: 1243, col: 7, offset: 48832},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1243, col: 7, offset: 48832},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1243, col: 13, offset: 48838},
												run: (*parser).callonQuoteAttributes76,
												expr: &litMatcher{
													pos:        position{line: 1243, col: 13, offset: 48838},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 251, col: 26, offset: 8871},
									val:        ",",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 251, col: 30, offset: 8875},
									label: "author",
									expr: &actionExpr{
										pos: position{line: 286, col: 16, offset: 9839},
										run: (*parser).callonQuoteAttributes80,
										expr: &zeroOrMoreExpr{
											pos: position{line: 286, col: 16, offset: 9839},
											expr: &choiceExpr{
												pos: position{line: 286, col: 17, offset: 9840},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 1205, col: 14, offset: 47940},
														run: (*parser).callonQuoteAttributes83,
														expr: &oneOrMoreExpr{
															pos: position{line: 1205, col: 14, offset: 47940},
															expr: &charClassMatcher{
																pos:        position{line: 1205, col: 14, offset: 47940},
																val:        "[a-zA-Z0-9]",
																ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																ignoreCase: false,
																inverted:   false,
															},
														},
													},
													&actionExpr{
														pos: position{line: 1215, col: 11, offset: 48287},
														run: (*parser).callonQuoteAttributes86,
														expr: &oneOrMoreExpr{
															pos: position{line: 1215, col: 11, offset: 48287},
															expr: &choiceExpr{
																pos: position{line: 1243, col: 7, offset: 48832},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1243, col: 7, offset: 48832},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1243, col: 13, offset: 48838},
																		run: (*parser).callonQuoteAttributes90,
																		expr: &litMatcher{
																			pos:        position{line: 1243, col: 13, offset: 48838},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 286, col: 38, offset: 9861},
														run: (*parser).callonQuoteAttributes92,
														expr: &seqExpr{
															pos: position{line: 286, col: 39, offset: 9862},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 286, col: 39, offset: 9862},
																	expr: &choiceExpr{
																		pos: position{line: 1251, col: 8, offset: 48930},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1247, col: 12, offset: 48890},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1247, col: 21, offset: 48899},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																			&notExpr{
																				pos: position{line: 1249, col: 8, offset: 48919},
																				expr: &anyMatcher{
																					line: 1249, col: 9, offset: 48920,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 286, col: 44, offset: 9867},
																	expr: &litMatcher{
																		pos:        position{line: 286, col: 45, offset: 9868},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 286, col: 49, offset: 9872},
																	expr: &litMatcher{
																		pos:        position{line: 286, col: 50, offset: 9873},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 286, col: 55, offset: 9878,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 251, col: 51, offset: 8896},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 255, col: 1, offset: 9011},
						run: (*parser).callonQuoteAttributes106,
						expr: &seqExpr{
							pos: position{line: 255, col: 1, offset: 9011},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 255, col: 1, offset: 9011},
									val:        "[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 255, col: 5, offset: 9015},
									label: "kind",
									expr: &actionExpr{
										pos: position{line: 259, col: 14, offset: 9116},
										run: (*parser).callonQuoteAttributes110,
										expr: &litMatcher{
											pos:        position{line: 259, col: 14, offset: 9116},
											val:        "quote",
											ignoreCase: false,
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 255, col: 22, offset: 9032},
									expr: &choiceExpr{
										pos: position{line: 1243, col: 7, offset: 48832},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1243, col: 7, offset: 48832},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1243, col: 13, offset: 48838},
												run: (*parser).callonQuoteAttributes115,
												expr: &litMatcher{
													pos:        position{line: 1243, col: 13, offset: 48838},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 255, col: 26, offset: 9036},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "VerseAttributes",
			pos:  position{line: 263, col: 1, offset: 9160},
			expr: &actionExpr{
				pos: position{line: 263, col: 20, offset: 9179},
				run: (*parser).callonVerseAttributes1,
				expr: &seqExpr{
					pos: position{line: 263, col: 20, offset: 9179},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 263, col: 20, offset: 9179},
							label: "attribute",
							expr: &choiceExpr{
								pos: position{line: 263, col: 31, offset: 9190},
								alternatives: []interface{}{
									&actionExpr{
										pos: position{line: 263, col: 31, offset: 9190},
										run: (*parser).callonVerseAttributes5,
										expr: &seqExpr{
											pos: position{line: 263, col: 31, offset: 9190},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 263, col: 31, offset: 9190},
													val:        "[",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 263, col: 35, offset: 9194},
													label: "kind",
													expr: &actionExpr{
														pos: position{line: 282, col: 14, offset: 9780},
														run: (*parser).callonVerseAttributes9,
														expr: &litMatcher{
															pos:        position{line: 282, col: 14, offset: 9780},
															val:        "verse",
															ignoreCase: false,
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 263, col: 52, offset: 9211},
													expr: &choiceExpr{
														pos: position{line: 1243, col: 7, offset: 48832},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1243, col: 7, offset: 48832},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1243, col: 13, offset: 48838},
																run: (*parser).callonVerseAttributes14,
																expr: &litMatcher{
																	pos:        position{line: 1243, col: 13, offset: 48838},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 263, col: 56, offset: 9215},
													val:        ",",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 263, col: 60, offset: 9219},
													label: "author",
													expr: &actionExpr{
														pos: position{line: 286, col: 16, offset: 9839},
														run: (*parser).callonVerseAttributes18,
														expr: &zeroOrMoreExpr{
															pos: position{line: 286, col: 16, offset: 9839},
															expr: &choiceExpr{
																pos: position{line: 286, col: 17, offset: 9840},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 1205, col: 14, offset: 47940},
																		run: (*parser).callonVerseAttributes21,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1205, col: 14, offset: 47940},
																			expr: &charClassMatcher{
																				pos:        position{line: 1205, col: 14, offset: 47940},
																				val:        "[a-zA-Z0-9]",
																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 1215, col: 11, offset: 48287},
																		run: (*parser).callonVerseAttributes24,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1215, col: 11, offset: 48287},
																			expr: &choiceExpr{
																				pos: position{line: 1243, col: 7, offset: 48832},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1243, col: 7, offset: 48832},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1243, col: 13, offset: 48838},
																						run: (*parser).callonVerseAttributes28,
																						expr: &litMatcher{
																							pos:        position{line: 1243, col: 13, offset: 48838},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 286, col: 38, offset: 9861},
																		run: (*parser).callonVerseAttributes30,
																		expr: &seqExpr{
																			pos: position{line: 286, col: 39, offset: 9862},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 286, col: 39, offset: 9862},
																					expr: &choiceExpr{
																						pos: position{line: 1251, col: 8, offset: 48930},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1247, col: 12, offset: 48890},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 1247, col: 21, offset: 48899},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																							&notExpr{
																								pos: position{line: 1249, col: 8, offset: 48919},
																								expr: &anyMatcher{
																									line: 1249, col: 9, offset: 48920,
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 286, col: 44, offset: 9867},
																					expr: &litMatcher{
																						pos:        position{line: 286, col: 45, offset: 9868},
																						val:        ",",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 286, col: 49, offset: 9872},
																					expr: &litMatcher{
																						pos:        position{line: 286, col: 50, offset: 9873},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 286, col: 55, offset: 9878,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 263, col: 81, offset: 9240},
													val:        ",",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 263, col: 85, offset: 9244},
													label: "title",
													expr: &actionExpr{
														pos: position{line: 292, col: 15, offset: 9967},
														run: (*parser).callonVerseAttributes45,
														expr: &zeroOrMoreExpr{
															pos: position{line: 292, col: 15, offset: 9967},
															expr: &choiceExpr{
																pos: position{line: 292, col: 16, offset: 9968},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 1205, col: 14, offset: 47940},
																		run: (*parser).callonVerseAttributes48,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1205, col: 14, offset: 47940},
																			expr: &charClassMatcher{
																				pos:        position{line: 1205, col: 14, offset: 47940},
																				val:        "[a-zA-Z0-9]",
																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 1215, col: 11, offset: 48287},
																		run: (*parser).callonVerseAttributes51,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1215, col: 11, offset: 48287},
																			expr: &choiceExpr{
																				pos: position{line: 1243, col: 7, offset: 48832},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1243, col: 7, offset: 48832},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1243, col: 13, offset: 48838},
																						run: (*parser).callonVerseAttributes55,
																						expr: &litMatcher{
																							pos:        position{line: 1243, col: 13, offset: 48838},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																	&seqExpr{
																		pos: position{line: 292, col: 38, offset: 9990},
																		exprs: []interface{}{
																			&notExpr{
																				pos: position{line: 292, col: 38, offset: 9990},
																				expr: &choiceExpr{
																					pos: position{line: 1251, col: 8, offset: 48930},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1247, col: 12, offset: 48890},
																							val:        "\r\n",
																							ignoreCase: false,
																						},
																						&charClassMatcher{
																							pos:        position{line: 1247, col: 21, offset: 48899},
																							val:        "[\\r\\n]",
																							chars:      []rune{'\r', '\n'},
																							ignoreCase: false,
																							inverted:   false,
																						},
																						&notExpr{
																							pos: position{line: 1249, col: 8, offset: 48919},
																							expr: &anyMatcher{
																								line: 1249, col: 9, offset: 48920,
																							},
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 292, col: 43, offset: 9995},
																				expr: &litMatcher{
																					pos:        position{line: 292, col: 44, offset: 9996},
																					val:        ",",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 292, col: 48, offset: 10000},
																				expr: &litMatcher{
																					pos:        position{line: 292, col: 49, offset: 10001},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																			&anyMatcher{
																				line: 292, col: 54, offset: 10006,
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 263, col: 104, offset: 9263},
													val:        "]",
													ignoreCase: false,
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 267, col: 5, offset: 9406},
										run: (*parser).callonVerseAttributes70,
										expr: &seqExpr{
											pos: position{line: 267, col: 5, offset: 9406},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 267, col: 5, offset: 9406},
													val:        "[",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 267, col: 9, offset: 9410},
													label: "kind",
													expr: &actionExpr{
														pos: position{line: 282, col: 14, offset: 9780},
														run: (*parser).callonVerseAttributes74,
														expr: &litMatcher{
															pos:        position{line: 282, col: 14, offset: 9780},
															val:        "verse",
															ignoreCase: false,
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 267, col: 26, offset: 9427},
													expr: &choiceExpr{
														pos: position{line: 1243, col: 7, offset: 48832},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1243, col: 7, offset: 48832},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1243, col: 13, offset: 48838},
																run: (*parser).callonVerseAttributes79,
																expr: &litMatcher{
																	pos:        position{line: 1243, col: 13, offset: 48838},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 267, col: 30, offset: 9431},
													val:        ",",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 267, col: 34, offset: 9435},
													label: "author",
													expr: &actionExpr{
														pos: position{line: 286, col: 16, offset: 9839},
														run: (*parser).callonVerseAttributes83,
														expr: &zeroOrMoreExpr{
															pos: position{line: 286, col: 16, offset: 9839},
															expr: &choiceExpr{
																pos: position{line: 286, col: 17, offset: 9840},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 1205, col: 14, offset: 47940},
																		run: (*parser).callonVerseAttributes86,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1205, col: 14, offset: 47940},
																			expr: &charClassMatcher{
																				pos:        position{line: 1205, col: 14, offset: 47940},
																				val:        "[a-zA-Z0-9]",
																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 1215, col: 11, offset: 48287},
																		run: (*parser).callonVerseAttributes89,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1215, col: 11, offset: 48287},
																			expr: &choiceExpr{
																				pos: position{line: 1243, col: 7, offset: 48832},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1243, col: 7, offset: 48832},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1243, col: 13, offset: 48838},
																						run: (*parser).callonVerseAttributes93,
																						expr: &litMatcher{
																							pos:        position{line: 1243, col: 13, offset: 48838},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 286, col: 38, offset: 9861},
																		run: (*parser).callonVerseAttributes95,
																		expr: &seqExpr{
																			pos: position{line: 286, col: 39, offset: 9862},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 286, col: 39, offset: 9862},
																					expr: &choiceExpr{
																						pos: position{line: 1251, col: 8, offset: 48930},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1247, col: 12, offset: 48890},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 1247, col: 21, offset: 48899},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																							&notExpr{
																								pos: position{line: 1249, col: 8, offset: 48919},
																								expr: &anyMatcher{
																									line: 1249, col: 9, offset: 48920,
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 286, col: 44, offset: 9867},
																					expr: &litMatcher{
																						pos:        position{line: 286, col: 45, offset: 9868},
																						val:        ",",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 286, col: 49, offset: 9872},
																					expr: &litMatcher{
																						pos:        position{line: 286, col: 50, offset: 9873},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 286, col: 55, offset: 9878,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 267, col: 55, offset: 9456},
													val:        "]",
													ignoreCase: false,
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 271, col: 5, offset: 9587},
										run: (*parser).callonVerseAttributes109,
										expr: &seqExpr{
											pos: position{line: 271, col: 5, offset: 9587},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 271, col: 5, offset: 9587},
													val:        "[",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 271, col: 9, offset: 9591},
													label: "kind",
													expr: &actionExpr{
														pos: position{line: 282, col: 14, offset: 9780},
														run: (*parser).callonVerseAttributes113,
														expr: &litMatcher{
															pos:        position{line: 282, col: 14, offset: 9780},
															val:        "verse",
															ignoreCase: false,
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 271, col: 26, offset: 9608},
													expr: &choiceExpr{
														pos: position{line: 1243, col: 7, offset: 48832},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1243, col: 7, offset: 48832},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1243, col: 13, offset: 48838},
																run: (*parser).callonVerseAttributes118,
																expr: &litMatcher{
																	pos:        position{line: 1243, col: 13, offset: 48838},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 271, col: 30, offset: 9612},
													val:        "]",
													ignoreCase: false,
												},
											},
										},
									},
								},
							},
						},
						&stateCodeExpr{
							pos: position{line: 275, col: 1, offset: 9688},
							run: (*parser).callonVerseAttributes121,
						},
					},
				},
			},
		},
		{
			name: "Section",
			pos:  position{line: 299, col: 1, offset: 10151},
			expr: &actionExpr{
				pos: position{line: 299, col: 12, offset: 10162},
				run: (*parser).callonSection1,
				expr: &seqExpr{
					pos: position{line: 299, col: 12, offset: 10162},
					exprs: []interface{}{
						&andExpr{
							pos: position{line: 299, col: 12, offset: 10162},
							expr: &litMatcher{
								pos:        position{line: 299, col: 13, offset: 10163},
								val:        "=",
								ignoreCase: false,
							},
						},
						&labeledExpr{
							pos:   position{line: 300, col: 5, offset: 10236},
							label: "section",
							expr: &choiceExpr{
								pos: position{line: 300, col: 14, offset: 10245},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 300, col: 14, offset: 10245},
										name: "Section0",
									},
									&ruleRefExpr{
										pos:  position{line: 300, col: 25, offset: 10256},
										name: "Section1",
									},
									&ruleRefExpr{
										pos:  position{line: 300, col: 36, offset: 10267},
										name: "Section2",
									},
									&ruleRefExpr{
										pos:  position{line: 300, col: 47, offset: 10278},
										name: "Section3",
									},
									&ruleRefExpr{
										pos:  position{line: 300, col: 58, offset: 10289},
										name: "Section4",
									},
									&ruleRefExpr{
										pos:  position{line: 300, col: 69, offset: 10300},
										name: "Section5",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section0",
			pos:  position{line: 306, col: 1, offset: 10377},
			expr: &actionExpr{
				pos: position{line: 306, col: 13, offset: 10389},
				run: (*parser).callonSection01,
				expr: &seqExpr{
					pos: position{line: 306, col: 13, offset: 10389},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 306, col: 13, offset: 10389},
							expr: &notExpr{
								pos: position{line: 1249, col: 8, offset: 48919},
								expr: &anyMatcher{
									line: 1249, col: 9, offset: 48920,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 307, col: 5, offset: 10460},
							label: "header",
							expr: &ruleRefExpr{
								pos:  position{line: 307, col: 13, offset: 10468},
								name: "Section0Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 307, col: 28, offset: 10483},
							label: "elements",
							expr: &zeroOrMoreExpr{
								pos: position{line: 307, col: 38, offset: 10493},
								expr: &ruleRefExpr{
									pos:  position{line: 307, col: 38, offset: 10493},
									name: "Section0Element",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section0Title",
			pos:  position{line: 313, col: 1, offset: 10638},
			expr: &actionExpr{
				pos: position{line: 313, col: 18, offset: 10655},
				run: (*parser).callonSection0Title1,
				expr: &seqExpr{
					pos: position{line: 313, col: 18, offset: 10655},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 311, col: 24, offset: 10629},
							val:        "=",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 311, col: 28, offset: 10633},
							expr: &choiceExpr{
								pos: position{line: 1243, col: 7, offset: 48832},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1243, col: 7, offset: 48832},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1243, col: 13, offset: 48838},
										run: (*parser).callonSection0Title7,
										expr: &litMatcher{
											pos:        position{line: 1243, col: 13, offset: 48838},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 313, col: 38, offset: 10675},
							label: "elements",
							expr: &ruleRefExpr{
								pos:  position{line: 313, col: 48, offset: 10685},
								name: "TitleElements",
							},
						},
						&labeledExpr{
							pos:   position{line: 313, col: 63, offset: 10700},
							label: "id",
							expr: &zeroOrMoreExpr{
								pos: position{line: 313, col: 67, offset: 10704},
								expr: &actionExpr{
									pos: position{line: 180, col: 20, offset: 6467},
									run: (*parser).callonSection0Title13,
									expr: &seqExpr{
										pos: position{line: 180, col: 20, offset: 6467},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 180, col: 20, offset: 6467},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 180, col: 25, offset: 6472},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 1225, col: 7, offset: 48453},
													run: (*parser).callonSection0Title17,
													expr: &oneOrMoreExpr{
														pos: position{line: 1225, col: 7, offset: 48453},
														expr: &choiceExpr{
															pos: position{line: 1225, col: 8, offset: 48454},
															alternatives: []interface{}{
																&actionExpr{
																	pos: position{line: 1205, col: 14, offset: 47940},
																	run: (*parser).callonSection0Title20,
																	expr: &oneOrMoreExpr{
																		pos: position{line: 1205, col: 14, offset: 47940},
																		expr: &charClassMatcher{
																			pos:        position{line: 1205, col: 14, offset: 47940},
																			val:        "[a-zA-Z0-9]",
																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 1225, col: 20, offset: 48466},
																	run: (*parser).callonSection0Title23,
																	expr: &seqExpr{
																		pos: position{line: 1225, col: 21, offset: 48467},
																		exprs: []interface{}{
																			&notExpr{
																				pos: position{line: 1225, col: 21, offset: 48467},
																				expr: &choiceExpr{
																					pos: position{line: 1247, col: 12, offset: 48890},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1247, col: 12, offset: 48890},
																							val:        "\r\n",
																							ignoreCase: false,
																						},
																						&charClassMatcher{
																							pos:        position{line: 1247, col: 21, offset: 48899},
																							val:        "[\\r\\n]",
																							chars:      []rune{'\r', '\n'},
																							ignoreCase: false,
																							inverted:   false,
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 1225, col: 30, offset: 48476},
																				expr: &choiceExpr{
																					pos: position{line: 1243, col: 7, offset: 48832},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1243, col: 7, offset: 48832},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1243, col: 13, offset: 48838},
																							run: (*parser).callonSection0Title32,
																							expr: &litMatcher{
																								pos:        position{line: 1243, col: 13, offset: 48838},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 1225, col: 34, offset: 48480},
																				expr: &litMatcher{
																					pos:        position{line: 1225, col: 35, offset: 48481},
																					val:        "[",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1225, col: 39, offset: 48485},
																				expr: &litMatcher{
																					pos:        position{line: 1225, col: 40, offset: 48486},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1225, col: 44, offset: 48490},
																				expr: &litMatcher{
																					pos:        position{line: 1225, col: 45, offset: 48491},
																					val:        "<<",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1225, col: 50, offset: 48496},
																				expr: &litMatcher{
																					pos:        position{line: 1225, col: 51, offset: 48497},
																					val:        ">>",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1225, col: 56, offset: 48502},
																				expr: &litMatcher{
																					pos:        position{line: 1225, col: 57, offset: 48503},
																					val:        ",",
																					ignoreCase: false,
																				},
																			},
																			&anyMatcher{
																				line: 1225, col: 62, offset: 48508,
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 180, col: 33, offset: 6480},
												val:        "]]",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 180, col: 38, offset: 6485},
												expr: &choiceExpr{
													pos: position{line: 1243, col: 7, offset: 48832},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1243, col: 7, offset: 48832},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1243, col: 13, offset: 48838},
															run: (*parser).callonSection0Title49,
															expr: &litMatcher{
																pos:        position{line: 1243, col: 13, offset: 48838},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1251, col: 8, offset: 48930},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1247, col: 12, offset: 48890},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1247, col: 21, offset: 48899},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1249, col: 8, offset: 48919},
									expr: &anyMatcher{
										line: 1249, col: 9, offset: 48920,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section0TitleWithAttributes",
			pos:  position{line: 317, col: 1, offset: 10819},
			expr: &actionExpr{
				pos: position{line: 317, col: 32, offset: 10850},
				run: (*parser).callonSection0TitleWithAttributes1,
				expr: &seqExpr{
					pos: position{line: 317, col: 32, offset: 10850},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 317, col: 32, offset: 10850},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 317, col: 43, offset: 10861},
								expr: &actionExpr{
									pos: position{line: 164, col: 21, offset: 5763},
									run: (*parser).callonSection0TitleWithAttributes5,
									expr: &seqExpr{
										pos: position{line: 164, col: 21, offset: 5763},
										exprs: []interface{}{
											&andExpr{
												pos: position{line: 164, col: 21, offset: 5763},
												expr: &charClassMatcher{
													pos:        position{line: 164, col: 23, offset: 5765},
													val:        "[[.#]",
													chars:      []rune{'[', '.', '#'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&labeledExpr{
												pos:   position{line: 165, col: 5, offset: 5853},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 165, col: 11, offset: 5859},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 174, col: 14, offset: 6316},
															run: (*parser).callonSection0TitleWithAttributes11,
															expr: &seqExpr{
																pos: position{line: 174, col: 14, offset: 6316},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 174, col: 14, offset: 6316},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 174, col: 19, offset: 6321},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1225, col: 7, offset: 48453},
																			run: (*parser).callonSection0TitleWithAttributes15,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1225, col: 7, offset: 48453},
																				expr: &choiceExpr{
																					pos: position{line: 1225, col: 8, offset: 48454},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection0TitleWithAttributes18,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1225, col: 20, offset: 48466},
																							run: (*parser).callonSection0TitleWithAttributes21,
																							expr: &seqExpr{
																								pos: position{line: 1225, col: 21, offset: 48467},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1225, col: 21, offset: 48467},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 30, offset: 48476},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonSection0TitleWithAttributes30,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 34, offset: 48480},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 35, offset: 48481},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 39, offset: 48485},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 40, offset: 48486},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 44, offset: 48490},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 45, offset: 48491},
																											val:        "<<",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 50, offset: 48496},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 51, offset: 48497},
																											val:        ">>",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 56, offset: 48502},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 57, offset: 48503},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1225, col: 62, offset: 48508,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 174, col: 27, offset: 6329},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 5, offset: 6383},
															run: (*parser).callonSection0TitleWithAttributes44,
															expr: &seqExpr{
																pos: position{line: 176, col: 5, offset: 6383},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 5, offset: 6383},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 10, offset: 6388},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1225, col: 7, offset: 48453},
																			run: (*parser).callonSection0TitleWithAttributes48,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1225, col: 7, offset: 48453},
																				expr: &choiceExpr{
																					pos: position{line: 1225, col: 8, offset: 48454},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection0TitleWithAttributes51,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1225, col: 20, offset: 48466},
																							run: (*parser).callonSection0TitleWithAttributes54,
																							expr: &seqExpr{
																								pos: position{line: 1225, col: 21, offset: 48467},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1225, col: 21, offset: 48467},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 30, offset: 48476},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonSection0TitleWithAttributes63,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 34, offset: 48480},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 35, offset: 48481},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 39, offset: 48485},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 40, offset: 48486},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 44, offset: 48490},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 45, offset: 48491},
																											val:        "<<",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 50, offset: 48496},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 51, offset: 48497},
																											val:        ">>",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 56, offset: 48502},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 57, offset: 48503},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1225, col: 62, offset: 48508,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 18, offset: 6396},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 186, col: 17, offset: 6699},
															run: (*parser).callonSection0TitleWithAttributes77,
															expr: &seqExpr{
																pos: position{line: 186, col: 17, offset: 6699},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 186, col: 17, offset: 6699},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 186, col: 21, offset: 6703},
																		expr: &litMatcher{
																			pos:        position{line: 186, col: 22, offset: 6704},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 186, col: 26, offset: 6708},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonSection0TitleWithAttributes85,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 186, col: 30, offset: 6712},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 186, col: 37, offset: 6719},
																			run: (*parser).callonSection0TitleWithAttributes88,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 186, col: 37, offset: 6719},
																				expr: &choiceExpr{
																					pos: position{line: 186, col: 38, offset: 6720},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection0TitleWithAttributes91,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonSection0TitleWithAttributes94,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection0TitleWithAttributes98,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 186, col: 59, offset: 6741},
																							run: (*parser).callonSection0TitleWithAttributes100,
																							expr: &seqExpr{
																								pos: position{line: 186, col: 60, offset: 6742},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 186, col: 60, offset: 6742},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 186, col: 70, offset: 6752,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 196, col: 16, offset: 6990},
															run: (*parser).callonSection0TitleWithAttributes107,
															expr: &seqExpr{
																pos: position{line: 196, col: 16, offset: 6990},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 196, col: 16, offset: 6990},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 196, col: 21, offset: 6995},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonSection0TitleWithAttributes113,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 196, col: 25, offset: 6999},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 196, col: 31, offset: 7005},
																			run: (*parser).callonSection0TitleWithAttributes116,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 196, col: 31, offset: 7005},
																				expr: &choiceExpr{
																					pos: position{line: 196, col: 32, offset: 7006},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection0TitleWithAttributes119,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonSection0TitleWithAttributes122,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection0TitleWithAttributes126,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 196, col: 53, offset: 7027},
																							run: (*parser).callonSection0TitleWithAttributes128,
																							expr: &seqExpr{
																								pos: position{line: 196, col: 54, offset: 7028},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 196, col: 54, offset: 7028},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 196, col: 63, offset: 7037},
																										expr: &litMatcher{
																											pos:        position{line: 196, col: 64, offset: 7038},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 196, col: 69, offset: 7043,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 200, col: 4, offset: 7118},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 210, col: 21, offset: 7481},
															run: (*parser).callonSection0TitleWithAttributes138,
															expr: &litMatcher{
																pos:        position{line: 210, col: 21, offset: 7481},
																val:        "[source]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 212, col: 5, offset: 7539},
															run: (*parser).callonSection0TitleWithAttributes140,
															expr: &seqExpr{
																pos: position{line: 212, col: 5, offset: 7539},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 212, col: 5, offset: 7539},
																		val:        "[source,",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 212, col: 16, offset: 7550},
																		label: "language",
																		expr: &actionExpr{
																			pos: position{line: 212, col: 26, offset: 7560},
																			run: (*parser).callonSection0TitleWithAttributes144,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 212, col: 26, offset: 7560},
																				expr: &choiceExpr{
																					pos: position{line: 212, col: 27, offset: 7561},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection0TitleWithAttributes147,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonSection0TitleWithAttributes150,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection0TitleWithAttributes154,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 212, col: 48, offset: 7582},
																							run: (*parser).callonSection0TitleWithAttributes156,
																							expr: &seqExpr{
																								pos: position{line: 212, col: 49, offset: 7583},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 212, col: 49, offset: 7583},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 212, col: 58, offset: 7592},
																										expr: &litMatcher{
																											pos:        position{line: 212, col: 59, offset: 7593},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 212, col: 64, offset: 7598,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 216, col: 7, offset: 7688},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 247, col: 20, offset: 8646},
															run: (*parser).callonSection0TitleWithAttributes166,
															expr: &seqExpr{
																pos: position{line: 247, col: 20, offset: 8646},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 247, col: 20, offset: 8646},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 24, offset: 8650},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonSection0TitleWithAttributes170,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 247, col: 41, offset: 8667},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonSection0TitleWithAttributes175,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 45, offset: 8671},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 49, offset: 8675},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 286, col: 16, offset: 9839},
																			run: (*parser).callonSection0TitleWithAttributes179,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 286, col: 16, offset: 9839},
																				expr: &choiceExpr{
																					pos: position{line: 286, col: 17, offset: 9840},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection0TitleWithAttributes182,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonSection0TitleWithAttributes185,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection0TitleWithAttributes189,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 286, col: 38, offset: 9861},
																							run: (*parser).callonSection0TitleWithAttributes191,
																							expr: &seqExpr{
																								pos: position{line: 286, col: 39, offset: 9862},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 286, col: 39, offset: 9862},
																										expr: &choiceExpr{
																											pos: position{line: 1251, col: 8, offset: 48930},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																												&notExpr{
																													pos: position{line: 1249, col: 8, offset: 48919},
																													expr: &anyMatcher{
																														line: 1249, col: 9, offset: 48920,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 44, offset: 9867},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 45, offset: 9868},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 49, offset: 9872},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 50, offset: 9873},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 286, col: 55, offset: 9878,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 70, offset: 8696},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 74, offset: 8700},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 292, col: 15, offset: 9967},
																			run: (*parser).callonSection0TitleWithAttributes206,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 292, col: 15, offset: 9967},
																				expr: &choiceExpr{
																					pos: position{line: 292, col: 16, offset: 9968},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection0TitleWithAttributes209,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonSection0TitleWithAttributes212,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection0TitleWithAttributes216,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&seqExpr{
																							pos: position{line: 292, col: 38, offset: 9990},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 292, col: 38, offset: 9990},
																									expr: &choiceExpr{
																										pos: position{line: 1251, col: 8, offset: 48930},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1247, col: 12, offset: 48890},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1247, col: 21, offset: 48899},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																											&notExpr{
																												pos: position{line: 1249, col: 8, offset: 48919},
																												expr: &anyMatcher{
																													line: 1249, col: 9, offset: 48920,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 292, col: 43, offset: 9995},
																									expr: &litMatcher{
																										pos:        position{line: 292, col: 44, offset: 9996},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 292, col: 48, offset: 10000},
																									expr: &litMatcher{
																										pos:        position{line: 292, col: 49, offset: 10001},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 292, col: 54, offset: 10006,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 93, offset: 8719},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 251, col: 1, offset: 8846},
															run: (*parser).callonSection0TitleWithAttributes231,
															expr: &seqExpr{
																pos: position{line: 251, col: 1, offset: 8846},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 251, col: 1, offset: 8846},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 251, col: 5, offset: 8850},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonSection0TitleWithAttributes235,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 251, col: 22, offset: 8867},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonSection0TitleWithAttributes240,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 251, col: 26, offset: 8871},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 251, col: 30, offset: 8875},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 286, col: 16, offset: 9839},
																			run: (*parser).callonSection0TitleWithAttributes244,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 286, col: 16, offset: 9839},
																				expr: &choiceExpr{
																					pos: position{line: 286, col: 17, offset: 9840},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection0TitleWithAttributes247,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonSection0TitleWithAttributes250,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection0TitleWithAttributes254,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 286, col: 38, offset: 9861},
																							run: (*parser).callonSection0TitleWithAttributes256,
																							expr: &seqExpr{
																								pos: position{line: 286, col: 39, offset: 9862},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 286, col: 39, offset: 9862},
																										expr: &choiceExpr{
																											pos: position{line: 1251, col: 8, offset: 48930},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																												&notExpr{
																													pos: position{line: 1249, col: 8, offset: 48919},
																													expr: &anyMatcher{
																														line: 1249, col: 9, offset: 48920,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 44, offset: 9867},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 45, offset: 9868},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 49, offset: 9872},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 50, offset: 9873},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 286, col: 55, offset: 9878,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 251, col: 51, offset: 8896},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 255, col: 1, offset: 9011},
															run: (*parser).callonSection0TitleWithAttributes270,
															expr: &seqExpr{
																pos: position{line: 255, col: 1, offset: 9011},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 255, col: 1, offset: 9011},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 255, col: 5, offset: 9015},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonSection0TitleWithAttributes274,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 255, col: 22, offset: 9032},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonSection0TitleWithAttributes279,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 255, col: 26, offset: 9036},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 263, col: 20, offset: 9179},
															run: (*parser).callonSection0TitleWithAttributes282,
															expr: &seqExpr{
																pos: position{line: 263, col: 20, offset: 9179},
																exprs: []interface{}{
																	&labeledExpr{
																		pos:   position{line: 263, col: 20, offset: 9179},
																		label: "attribute",
																		expr: &choiceExpr{
																			pos: position{line: 263, col: 31, offset: 9190},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 263, col: 31, offset: 9190},
																					run: (*parser).callonSection0TitleWithAttributes286,
																					expr: &seqExpr{
																						pos: position{line: 263, col: 31, offset: 9190},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 263, col: 31, offset: 9190},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 35, offset: 9194},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonSection0TitleWithAttributes290,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 263, col: 52, offset: 9211},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection0TitleWithAttributes295,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 56, offset: 9215},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 60, offset: 9219},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 286, col: 16, offset: 9839},
																									run: (*parser).callonSection0TitleWithAttributes299,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 286, col: 16, offset: 9839},
																										expr: &choiceExpr{
																											pos: position{line: 286, col: 17, offset: 9840},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1205, col: 14, offset: 47940},
																													run: (*parser).callonSection0TitleWithAttributes302,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1205, col: 14, offset: 47940},
																														expr: &charClassMatcher{
																															pos:        position{line: 1205, col: 14, offset: 47940},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1215, col: 11, offset: 48287},
																													run: (*parser).callonSection0TitleWithAttributes305,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1215, col: 11, offset: 48287},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonSection0TitleWithAttributes309,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 286, col: 38, offset: 9861},
																													run: (*parser).callonSection0TitleWithAttributes311,
																													expr: &seqExpr{
																														pos: position{line: 286, col: 39, offset: 9862},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 286, col: 39, offset: 9862},
																																expr: &choiceExpr{
																																	pos: position{line: 1251, col: 8, offset: 48930},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1247, col: 12, offset: 48890},
																																			val:        "\r\n",
																																			ignoreCase: false,
																																		},
																																		&charClassMatcher{
																																			pos:        position{line: 1247, col: 21, offset: 48899},
																																			val:        "[\\r\\n]",
																																			chars:      []rune{'\r', '\n'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																		&notExpr{
																																			pos: position{line: 1249, col: 8, offset: 48919},
																																			expr: &anyMatcher{
																																				line: 1249, col: 9, offset: 48920,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 44, offset: 9867},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 45, offset: 9868},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 49, offset: 9872},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 50, offset: 9873},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 286, col: 55, offset: 9878,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 81, offset: 9240},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 85, offset: 9244},
																								label: "title",
																								expr: &actionExpr{
																									pos: position{line: 292, col: 15, offset: 9967},
																									run: (*parser).callonSection0TitleWithAttributes326,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 292, col: 15, offset: 9967},
																										expr: &choiceExpr{
																											pos: position{line: 292, col: 16, offset: 9968},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1205, col: 14, offset: 47940},
																													run: (*parser).callonSection0TitleWithAttributes329,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1205, col: 14, offset: 47940},
																														expr: &charClassMatcher{
																															pos:        position{line: 1205, col: 14, offset: 47940},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1215, col: 11, offset: 48287},
																													run: (*parser).callonSection0TitleWithAttributes332,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1215, col: 11, offset: 48287},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonSection0TitleWithAttributes336,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&seqExpr{
																													pos: position{line: 292, col: 38, offset: 9990},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 292, col: 38, offset: 9990},
																															expr: &choiceExpr{
																																pos: position{line: 1251, col: 8, offset: 48930},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1247, col: 12, offset: 48890},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1247, col: 21, offset: 48899},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																	&notExpr{
																																		pos: position{line: 1249, col: 8, offset: 48919},
																																		expr: &anyMatcher{
																																			line: 1249, col: 9, offset: 48920,
																																		},
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 292, col: 43, offset: 9995},
																															expr: &litMatcher{
																																pos:        position{line: 292, col: 44, offset: 9996},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 292, col: 48, offset: 10000},
																															expr: &litMatcher{
																																pos:        position{line: 292, col: 49, offset: 10001},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 292, col: 54, offset: 10006,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 104, offset: 9263},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 267, col: 5, offset: 9406},
																					run: (*parser).callonSection0TitleWithAttributes351,
																					expr: &seqExpr{
																						pos: position{line: 267, col: 5, offset: 9406},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 267, col: 5, offset: 9406},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 267, col: 9, offset: 9410},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonSection0TitleWithAttributes355,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 267, col: 26, offset: 9427},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection0TitleWithAttributes360,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 267, col: 30, offset: 9431},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 267, col: 34, offset: 9435},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 286, col: 16, offset: 9839},
																									run: (*parser).callonSection0TitleWithAttributes364,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 286, col: 16, offset: 9839},
																										expr: &choiceExpr{
																											pos: position{line: 286, col: 17, offset: 9840},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1205, col: 14, offset: 47940},
																													run: (*parser).callonSection0TitleWithAttributes367,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1205, col: 14, offset: 47940},
																														expr: &charClassMatcher{
																															pos:        position{line: 1205, col: 14, offset: 47940},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1215, col: 11, offset: 48287},
																													run: (*parser).callonSection0TitleWithAttributes370,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1215, col: 11, offset: 48287},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonSection0TitleWithAttributes374,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 286, col: 38, offset: 9861},
																													run: (*parser).callonSection0TitleWithAttributes376,
																													expr: &seqExpr{
																														pos: position{line: 286, col: 39, offset: 9862},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 286, col: 39, offset: 9862},
																																expr: &choiceExpr{
																																	pos: position{line: 1251, col: 8, offset: 48930},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1247, col: 12, offset: 48890},
																																			val:        "\r\n",
																																			ignoreCase: false,
																																		},
																																		&charClassMatcher{
																																			pos:        position{line: 1247, col: 21, offset: 48899},
																																			val:        "[\\r\\n]",
																																			chars:      []rune{'\r', '\n'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																		&notExpr{
																																			pos: position{line: 1249, col: 8, offset: 48919},
																																			expr: &anyMatcher{
																																				line: 1249, col: 9, offset: 48920,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 44, offset: 9867},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 45, offset: 9868},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 49, offset: 9872},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 50, offset: 9873},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 286, col: 55, offset: 9878,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 267, col: 55, offset: 9456},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 271, col: 5, offset: 9587},
																					run: (*parser).callonSection0TitleWithAttributes390,
																					expr: &seqExpr{
																						pos: position{line: 271, col: 5, offset: 9587},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 271, col: 5, offset: 9587},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 271, col: 9, offset: 9591},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonSection0TitleWithAttributes394,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 271, col: 26, offset: 9608},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection0TitleWithAttributes399,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 271, col: 30, offset: 9612},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&stateCodeExpr{
																		pos: position{line: 275, col: 1, offset: 9688},
																		run: (*parser).callonSection0TitleWithAttributes402,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 205, col: 30, offset: 7283},
															run: (*parser).callonSection0TitleWithAttributes403,
															expr: &seqExpr{
																pos: position{line: 205, col: 30, offset: 7283},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 205, col: 30, offset: 7283},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 205, col: 34, offset: 7287},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 564, col: 19, offset: 20877},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 564, col: 19, offset: 20877},
																					run: (*parser).callonSection0TitleWithAttributes408,
																					expr: &litMatcher{
																						pos:        position{line: 564, col: 19, offset: 20877},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 566, col: 9, offset: 20923},
																					run: (*parser).callonSection0TitleWithAttributes410,
																					expr: &litMatcher{
																						pos:        position{line: 566, col: 9, offset: 20923},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 568, col: 9, offset: 20971},
																					run: (*parser).callonSection0TitleWithAttributes412,
																					expr: &litMatcher{
																						pos:        position{line: 568, col: 9, offset: 20971},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 570, col: 9, offset: 21029},
																					run: (*parser).callonSection0TitleWithAttributes414,
																					expr: &litMatcher{
																						pos:        position{line: 570, col: 9, offset: 21029},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 572, col: 9, offset: 21083},
																					run: (*parser).callonSection0TitleWithAttributes416,
																					expr: &litMatcher{
																						pos:        position{line: 572, col: 9, offset: 21083},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 205, col: 53, offset: 7306},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 243, col: 21, offset: 8543},
															run: (*parser).callonSection0TitleWithAttributes419,
															expr: &litMatcher{
																pos:        position{line: 243, col: 21, offset: 8543},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 221, col: 19, offset: 7839},
															run: (*parser).callonSection0TitleWithAttributes421,
															expr: &seqExpr{
																pos: position{line: 221, col: 19, offset: 7839},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 221, col: 19, offset: 7839},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 221, col: 23, offset: 7843},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonSection0TitleWithAttributes427,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 221, col: 27, offset: 7847},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 221, col: 38, offset: 7858},
																			expr: &choiceExpr{
																				pos: position{line: 225, col: 21, offset: 7971},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 225, col: 21, offset: 7971},
																						run: (*parser).callonSection0TitleWithAttributes432,
																						expr: &seqExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 225, col: 21, offset: 7971},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										run: (*parser).callonSection0TitleWithAttributes435,
																										expr: &seqExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9116},
																														run: (*parser).callonSection0TitleWithAttributes438,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9116},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 28, offset: 8242},
																													expr: &actionExpr{
																														pos: position{line: 282, col: 14, offset: 9780},
																														run: (*parser).callonSection0TitleWithAttributes441,
																														expr: &litMatcher{
																															pos:        position{line: 282, col: 14, offset: 9780},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 39, offset: 8253},
																													expr: &actionExpr{
																														pos: position{line: 1170, col: 16, offset: 47067},
																														run: (*parser).callonSection0TitleWithAttributes444,
																														expr: &litMatcher{
																															pos:        position{line: 1170, col: 16, offset: 47067},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 231, col: 52, offset: 8266},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 231, col: 56, offset: 8270},
																														expr: &choiceExpr{
																															pos: position{line: 231, col: 57, offset: 8271},
																															alternatives: []interface{}{
																																&actionExpr{
																																	pos: position{line: 1205, col: 14, offset: 47940},
																																	run: (*parser).callonSection0TitleWithAttributes449,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		expr: &charClassMatcher{
																																			pos:        position{line: 1205, col: 14, offset: 47940},
																																			val:        "[a-zA-Z0-9]",
																																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 1215, col: 11, offset: 48287},
																																	run: (*parser).callonSection0TitleWithAttributes452,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		expr: &choiceExpr{
																																			pos: position{line: 1243, col: 7, offset: 48832},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1243, col: 7, offset: 48832},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 1243, col: 13, offset: 48838},
																																					run: (*parser).callonSection0TitleWithAttributes456,
																																					expr: &litMatcher{
																																						pos:        position{line: 1243, col: 13, offset: 48838},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 231, col: 78, offset: 8292},
																																	run: (*parser).callonSection0TitleWithAttributes458,
																																	expr: &seqExpr{
																																		pos: position{line: 231, col: 79, offset: 8293},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 231, col: 79, offset: 8293},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 80, offset: 8294},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 84, offset: 8298},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 85, offset: 8299},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 89, offset: 8303},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 90, offset: 8304},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 231, col: 95, offset: 8309,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 225, col: 40, offset: 7990},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 225, col: 44, offset: 7994},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 237, col: 19, offset: 8403},
																										run: (*parser).callonSection0TitleWithAttributes469,
																										expr: &labeledExpr{
																											pos:   position{line: 237, col: 19, offset: 8403},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 237, col: 25, offset: 8409},
																												expr: &choiceExpr{
																													pos: position{line: 237, col: 26, offset: 8410},
																													alternatives: []interface{}{
																														&actionExpr{
																															pos: position{line: 1205, col: 14, offset: 47940},
																															run: (*parser).callonSection0TitleWithAttributes473,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1205, col: 14, offset: 47940},
																																expr: &charClassMatcher{
																																	pos:        position{line: 1205, col: 14, offset: 47940},
																																	val:        "[a-zA-Z0-9]",
																																	ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 1215, col: 11, offset: 48287},
																															run: (*parser).callonSection0TitleWithAttributes476,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1215, col: 11, offset: 48287},
																																expr: &choiceExpr{
																																	pos: position{line: 1243, col: 7, offset: 48832},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1243, col: 7, offset: 48832},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 1243, col: 13, offset: 48838},
																																			run: (*parser).callonSection0TitleWithAttributes480,
																																			expr: &litMatcher{
																																				pos:        position{line: 1243, col: 13, offset: 48838},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 237, col: 47, offset: 8431},
																															run: (*parser).callonSection0TitleWithAttributes482,
																															expr: &seqExpr{
																																pos: position{line: 237, col: 48, offset: 8432},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 237, col: 48, offset: 8432},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 49, offset: 8433},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 237, col: 53, offset: 8437},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 54, offset: 8438},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 237, col: 58, offset: 8442},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 59, offset: 8443},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 237, col: 64, offset: 8448,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 225, col: 67, offset: 8017},
																									expr: &litMatcher{
																										pos:        position{line: 225, col: 67, offset: 8017},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 225, col: 72, offset: 8022},
																									expr: &choiceExpr{
																										pos: position{line: 1243, col: 7, offset: 48832},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1243, col: 7, offset: 48832},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1243, col: 13, offset: 48838},
																												run: (*parser).callonSection0TitleWithAttributes496,
																												expr: &litMatcher{
																													pos:        position{line: 1243, col: 13, offset: 48838},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 227, col: 5, offset: 8106},
																						run: (*parser).callonSection0TitleWithAttributes498,
																						expr: &seqExpr{
																							pos: position{line: 227, col: 5, offset: 8106},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 227, col: 5, offset: 8106},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										run: (*parser).callonSection0TitleWithAttributes501,
																										expr: &seqExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9116},
																														run: (*parser).callonSection0TitleWithAttributes504,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9116},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 28, offset: 8242},
																													expr: &actionExpr{
																														pos: position{line: 282, col: 14, offset: 9780},
																														run: (*parser).callonSection0TitleWithAttributes507,
																														expr: &litMatcher{
																															pos:        position{line: 282, col: 14, offset: 9780},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 39, offset: 8253},
																													expr: &actionExpr{
																														pos: position{line: 1170, col: 16, offset: 47067},
																														run: (*parser).callonSection0TitleWithAttributes510,
																														expr: &litMatcher{
																															pos:        position{line: 1170, col: 16, offset: 47067},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 231, col: 52, offset: 8266},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 231, col: 56, offset: 8270},
																														expr: &choiceExpr{
																															pos: position{line: 231, col: 57, offset: 8271},
																															alternatives: []interface{}{
																																&actionExpr{
																																	pos: position{line: 1205, col: 14, offset: 47940},
																																	run: (*parser).callonSection0TitleWithAttributes515,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		expr: &charClassMatcher{
																																			pos:        position{line: 1205, col: 14, offset: 47940},
																																			val:        "[a-zA-Z0-9]",
																																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 1215, col: 11, offset: 48287},
																																	run: (*parser).callonSection0TitleWithAttributes518,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		expr: &choiceExpr{
																																			pos: position{line: 1243, col: 7, offset: 48832},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1243, col: 7, offset: 48832},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 1243, col: 13, offset: 48838},
																																					run: (*parser).callonSection0TitleWithAttributes522,
																																					expr: &litMatcher{
																																						pos:        position{line: 1243, col: 13, offset: 48838},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 231, col: 78, offset: 8292},
																																	run: (*parser).callonSection0TitleWithAttributes524,
																																	expr: &seqExpr{
																																		pos: position{line: 231, col: 79, offset: 8293},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 231, col: 79, offset: 8293},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 80, offset: 8294},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 84, offset: 8298},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 85, offset: 8299},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 89, offset: 8303},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 90, offset: 8304},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 231, col: 95, offset: 8309,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 227, col: 24, offset: 8125},
																									expr: &litMatcher{
																										pos:        position{line: 227, col: 24, offset: 8125},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 227, col: 29, offset: 8130},
																									expr: &choiceExpr{
																										pos: position{line: 1243, col: 7, offset: 48832},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1243, col: 7, offset: 48832},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1243, col: 13, offset: 48838},
																												run: (*parser).callonSection0TitleWithAttributes538,
																												expr: &litMatcher{
																													pos:        position{line: 1243, col: 13, offset: 48838},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 221, col: 59, offset: 7879},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 165, col: 170, offset: 6018},
												expr: &choiceExpr{
													pos: position{line: 1243, col: 7, offset: 48832},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1243, col: 7, offset: 48832},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1243, col: 13, offset: 48838},
															run: (*parser).callonSection0TitleWithAttributes544,
															expr: &litMatcher{
																pos:        position{line: 1243, col: 13, offset: 48838},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1251, col: 8, offset: 48930},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1247, col: 12, offset: 48890},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1247, col: 21, offset: 48899},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1249, col: 8, offset: 48919},
														expr: &anyMatcher{
															line: 1249, col: 9, offset: 48920,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 318, col: 5, offset: 10886},
							label: "title",
							expr: &ruleRefExpr{
								pos:  position{line: 318, col: 12, offset: 10893},
								name: "Section0Title",
							},
						},
					},
				},
			},
		},
		{
			name: "Section0Element",
			pos:  position{line: 322, col: 1, offset: 10984},
			expr: &actionExpr{
				pos: position{line: 322, col: 20, offset: 11003},
				run: (*parser).callonSection0Element1,
				expr: &seqExpr{
					pos: position{line: 322, col: 20, offset: 11003},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 322, col: 20, offset: 11003},
							expr: &seqExpr{
								pos: position{line: 311, col: 24, offset: 10629},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 311, col: 24, offset: 10629},
										val:        "=",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 311, col: 28, offset: 10633},
										expr: &choiceExpr{
											pos: position{line: 1243, col: 7, offset: 48832},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1243, col: 7, offset: 48832},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1243, col: 13, offset: 48838},
													run: (*parser).callonSection0Element9,
													expr: &litMatcher{
														pos:        position{line: 1243, col: 13, offset: 48838},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 323, col: 5, offset: 11028},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 323, col: 16, offset: 11039},
								expr: &actionExpr{
									pos: position{line: 164, col: 21, offset: 5763},
									run: (*parser).callonSection0Element13,
									expr: &seqExpr{
										pos: position{line: 164, col: 21, offset: 5763},
										exprs: []interface{}{
											&andExpr{
												pos: position{line: 164, col: 21, offset: 5763},
												expr: &charClassMatcher{
													pos:        position{line: 164, col: 23, offset: 5765},
													val:        "[[.#]",
													chars:      []rune{'[', '.', '#'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&labeledExpr{
												pos:   position{line: 165, col: 5, offset: 5853},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 165, col: 11, offset: 5859},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 174, col: 14, offset: 6316},
															run: (*parser).callonSection0Element19,
															expr: &seqExpr{
																pos: position{line: 174, col: 14, offset: 6316},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 174, col: 14, offset: 6316},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 174, col: 19, offset: 6321},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1225, col: 7, offset: 48453},
																			run: (*parser).callonSection0Element23,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1225, col: 7, offset: 48453},
																				expr: &choiceExpr{
																					pos: position{line: 1225, col: 8, offset: 48454},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection0Element26,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1225, col: 20, offset: 48466},
																							run: (*parser).callonSection0Element29,
																							expr: &seqExpr{
																								pos: position{line: 1225, col: 21, offset: 48467},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1225, col: 21, offset: 48467},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 30, offset: 48476},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonSection0Element38,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 34, offset: 48480},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 35, offset: 48481},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 39, offset: 48485},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 40, offset: 48486},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 44, offset: 48490},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 45, offset: 48491},
																											val:        "<<",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 50, offset: 48496},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 51, offset: 48497},
																											val:        ">>",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 56, offset: 48502},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 57, offset: 48503},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1225, col: 62, offset: 48508,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 174, col: 27, offset: 6329},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 5, offset: 6383},
															run: (*parser).callonSection0Element52,
															expr: &seqExpr{
																pos: position{line: 176, col: 5, offset: 6383},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 5, offset: 6383},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 10, offset: 6388},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1225, col: 7, offset: 48453},
																			run: (*parser).callonSection0Element56,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1225, col: 7, offset: 48453},
																				expr: &choiceExpr{
																					pos: position{line: 1225, col: 8, offset: 48454},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection0Element59,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1225, col: 20, offset: 48466},
																							run: (*parser).callonSection0Element62,
																							expr: &seqExpr{
																								pos: position{line: 1225, col: 21, offset: 48467},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1225, col: 21, offset: 48467},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 30, offset: 48476},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonSection0Element71,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 34, offset: 48480},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 35, offset: 48481},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 39, offset: 48485},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 40, offset: 48486},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 44, offset: 48490},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 45, offset: 48491},
																											val:        "<<",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 50, offset: 48496},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 51, offset: 48497},
																											val:        ">>",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 56, offset: 48502},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 57, offset: 48503},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1225, col: 62, offset: 48508,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 18, offset: 6396},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 186, col: 17, offset: 6699},
															run: (*parser).callonSection0Element85,
															expr: &seqExpr{
																pos: position{line: 186, col: 17, offset: 6699},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 186, col: 17, offset: 6699},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 186, col: 21, offset: 6703},
																		expr: &litMatcher{
																			pos:        position{line: 186, col: 22, offset: 6704},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 186, col: 26, offset: 6708},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonSection0Element93,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 186, col: 30, offset: 6712},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 186, col: 37, offset: 6719},
																			run: (*parser).callonSection0Element96,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 186, col: 37, offset: 6719},
																				expr: &choiceExpr{
																					pos: position{line: 186, col: 38, offset: 6720},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection0Element99,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonSection0Element102,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection0Element106,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 186, col: 59, offset: 6741},
																							run: (*parser).callonSection0Element108,
																							expr: &seqExpr{
																								pos: position{line: 186, col: 60, offset: 6742},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 186, col: 60, offset: 6742},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 186, col: 70, offset: 6752,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 196, col: 16, offset: 6990},
															run: (*parser).callonSection0Element115,
															expr: &seqExpr{
																pos: position{line: 196, col: 16, offset: 6990},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 196, col: 16, offset: 6990},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 196, col: 21, offset: 6995},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonSection0Element121,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 196, col: 25, offset: 6999},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 196, col: 31, offset: 7005},
																			run: (*parser).callonSection0Element124,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 196, col: 31, offset: 7005},
																				expr: &choiceExpr{
																					pos: position{line: 196, col: 32, offset: 7006},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection0Element127,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonSection0Element130,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection0Element134,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 196, col: 53, offset: 7027},
																							run: (*parser).callonSection0Element136,
																							expr: &seqExpr{
																								pos: position{line: 196, col: 54, offset: 7028},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 196, col: 54, offset: 7028},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 196, col: 63, offset: 7037},
																										expr: &litMatcher{
																											pos:        position{line: 196, col: 64, offset: 7038},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 196, col: 69, offset: 7043,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 200, col: 4, offset: 7118},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 210, col: 21, offset: 7481},
															run: (*parser).callonSection0Element146,
															expr: &litMatcher{
																pos:        position{line: 210, col: 21, offset: 7481},
																val:        "[source]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 212, col: 5, offset: 7539},
															run: (*parser).callonSection0Element148,
															expr: &seqExpr{
																pos: position{line: 212, col: 5, offset: 7539},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 212, col: 5, offset: 7539},
																		val:        "[source,",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 212, col: 16, offset: 7550},
																		label: "language",
																		expr: &actionExpr{
																			pos: position{line: 212, col: 26, offset: 7560},
																			run: (*parser).callonSection0Element152,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 212, col: 26, offset: 7560},
																				expr: &choiceExpr{
																					pos: position{line: 212, col: 27, offset: 7561},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection0Element155,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonSection0Element158,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection0Element162,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 212, col: 48, offset: 7582},
																							run: (*parser).callonSection0Element164,
																							expr: &seqExpr{
																								pos: position{line: 212, col: 49, offset: 7583},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 212, col: 49, offset: 7583},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 212, col: 58, offset: 7592},
																										expr: &litMatcher{
																											pos:        position{line: 212, col: 59, offset: 7593},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 212, col: 64, offset: 7598,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 216, col: 7, offset: 7688},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 247, col: 20, offset: 8646},
															run: (*parser).callonSection0Element174,
															expr: &seqExpr{
																pos: position{line: 247, col: 20, offset: 8646},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 247, col: 20, offset: 8646},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 24, offset: 8650},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonSection0Element178,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 247, col: 41, offset: 8667},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonSection0Element183,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 45, offset: 8671},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 49, offset: 8675},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 286, col: 16, offset: 9839},
																			run: (*parser).callonSection0Element187,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 286, col: 16, offset: 9839},
																				expr: &choiceExpr{
																					pos: position{line: 286, col: 17, offset: 9840},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection0Element190,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonSection0Element193,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection0Element197,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 286, col: 38, offset: 9861},
																							run: (*parser).callonSection0Element199,
																							expr: &seqExpr{
																								pos: position{line: 286, col: 39, offset: 9862},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 286, col: 39, offset: 9862},
																										expr: &choiceExpr{
																											pos: position{line: 1251, col: 8, offset: 48930},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																												&notExpr{
																													pos: position{line: 1249, col: 8, offset: 48919},
																													expr: &anyMatcher{
																														line: 1249, col: 9, offset: 48920,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 44, offset: 9867},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 45, offset: 9868},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 49, offset: 9872},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 50, offset: 9873},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 286, col: 55, offset: 9878,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 70, offset: 8696},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 74, offset: 8700},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 292, col: 15, offset: 9967},
																			run: (*parser).callonSection0Element214,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 292, col: 15, offset: 9967},
																				expr: &choiceExpr{
																					pos: position{line: 292, col: 16, offset: 9968},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection0Element217,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonSection0Element220,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection0Element224,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&seqExpr{
																							pos: position{line: 292, col: 38, offset: 9990},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 292, col: 38, offset: 9990},
																									expr: &choiceExpr{
																										pos: position{line: 1251, col: 8, offset: 48930},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1247, col: 12, offset: 48890},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1247, col: 21, offset: 48899},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																											&notExpr{
																												pos: position{line: 1249, col: 8, offset: 48919},
																												expr: &anyMatcher{
																													line: 1249, col: 9, offset: 48920,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 292, col: 43, offset: 9995},
																									expr: &litMatcher{
																										pos:        position{line: 292, col: 44, offset: 9996},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 292, col: 48, offset: 10000},
																									expr: &litMatcher{
																										pos:        position{line: 292, col: 49, offset: 10001},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 292, col: 54, offset: 10006,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 93, offset: 8719},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 251, col: 1, offset: 8846},
															run: (*parser).callonSection0Element239,
															expr: &seqExpr{
																pos: position{line: 251, col: 1, offset: 8846},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 251, col: 1, offset: 8846},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 251, col: 5, offset: 8850},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonSection0Element243,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 251, col: 22, offset: 8867},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonSection0Element248,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 251, col: 26, offset: 8871},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 251, col: 30, offset: 8875},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 286, col: 16, offset: 9839},
																			run: (*parser).callonSection0Element252,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 286, col: 16, offset: 9839},
																				expr: &choiceExpr{
																					pos: position{line: 286, col: 17, offset: 9840},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection0Element255,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonSection0Element258,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection0Element262,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 286, col: 38, offset: 9861},
																							run: (*parser).callonSection0Element264,
																							expr: &seqExpr{
																								pos: position{line: 286, col: 39, offset: 9862},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 286, col: 39, offset: 9862},
																										expr: &choiceExpr{
																											pos: position{line: 1251, col: 8, offset: 48930},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																												&notExpr{
																													pos: position{line: 1249, col: 8, offset: 48919},
																													expr: &anyMatcher{
																														line: 1249, col: 9, offset: 48920,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 44, offset: 9867},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 45, offset: 9868},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 49, offset: 9872},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 50, offset: 9873},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 286, col: 55, offset: 9878,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 251, col: 51, offset: 8896},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 255, col: 1, offset: 9011},
															run: (*parser).callonSection0Element278,
															expr: &seqExpr{
																pos: position{line: 255, col: 1, offset: 9011},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 255, col: 1, offset: 9011},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 255, col: 5, offset: 9015},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonSection0Element282,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 255, col: 22, offset: 9032},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonSection0Element287,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 255, col: 26, offset: 9036},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 263, col: 20, offset: 9179},
															run: (*parser).callonSection0Element290,
															expr: &seqExpr{
																pos: position{line: 263, col: 20, offset: 9179},
																exprs: []interface{}{
																	&labeledExpr{
																		pos:   position{line: 263, col: 20, offset: 9179},
																		label: "attribute",
																		expr: &choiceExpr{
																			pos: position{line: 263, col: 31, offset: 9190},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 263, col: 31, offset: 9190},
																					run: (*parser).callonSection0Element294,
																					expr: &seqExpr{
																						pos: position{line: 263, col: 31, offset: 9190},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 263, col: 31, offset: 9190},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 35, offset: 9194},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonSection0Element298,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 263, col: 52, offset: 9211},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection0Element303,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 56, offset: 9215},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 60, offset: 9219},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 286, col: 16, offset: 9839},
																									run: (*parser).callonSection0Element307,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 286, col: 16, offset: 9839},
																										expr: &choiceExpr{
																											pos: position{line: 286, col: 17, offset: 9840},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1205, col: 14, offset: 47940},
																													run: (*parser).callonSection0Element310,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1205, col: 14, offset: 47940},
																														expr: &charClassMatcher{
																															pos:        position{line: 1205, col: 14, offset: 47940},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1215, col: 11, offset: 48287},
																													run: (*parser).callonSection0Element313,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1215, col: 11, offset: 48287},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonSection0Element317,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 286, col: 38, offset: 9861},
																													run: (*parser).callonSection0Element319,
																													expr: &seqExpr{
																														pos: position{line: 286, col: 39, offset: 9862},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 286, col: 39, offset: 9862},
																																expr: &choiceExpr{
																																	pos: position{line: 1251, col: 8, offset: 48930},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1247, col: 12, offset: 48890},
																																			val:        "\r\n",
																																			ignoreCase: false,
																																		},
																																		&charClassMatcher{
																																			pos:        position{line: 1247, col: 21, offset: 48899},
																																			val:        "[\\r\\n]",
																																			chars:      []rune{'\r', '\n'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																		&notExpr{
																																			pos: position{line: 1249, col: 8, offset: 48919},
																																			expr: &anyMatcher{
																																				line: 1249, col: 9, offset: 48920,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 44, offset: 9867},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 45, offset: 9868},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 49, offset: 9872},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 50, offset: 9873},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 286, col: 55, offset: 9878,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 81, offset: 9240},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 85, offset: 9244},
																								label: "title",
																								expr: &actionExpr{
																									pos: position{line: 292, col: 15, offset: 9967},
																									run: (*parser).callonSection0Element334,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 292, col: 15, offset: 9967},
																										expr: &choiceExpr{
																											pos: position{line: 292, col: 16, offset: 9968},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1205, col: 14, offset: 47940},
																													run: (*parser).callonSection0Element337,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1205, col: 14, offset: 47940},
																														expr: &charClassMatcher{
																															pos:        position{line: 1205, col: 14, offset: 47940},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1215, col: 11, offset: 48287},
																													run: (*parser).callonSection0Element340,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1215, col: 11, offset: 48287},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonSection0Element344,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&seqExpr{
																													pos: position{line: 292, col: 38, offset: 9990},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 292, col: 38, offset: 9990},
																															expr: &choiceExpr{
																																pos: position{line: 1251, col: 8, offset: 48930},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1247, col: 12, offset: 48890},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1247, col: 21, offset: 48899},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																	&notExpr{
																																		pos: position{line: 1249, col: 8, offset: 48919},
																																		expr: &anyMatcher{
																																			line: 1249, col: 9, offset: 48920,
																																		},
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 292, col: 43, offset: 9995},
																															expr: &litMatcher{
																																pos:        position{line: 292, col: 44, offset: 9996},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 292, col: 48, offset: 10000},
																															expr: &litMatcher{
																																pos:        position{line: 292, col: 49, offset: 10001},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 292, col: 54, offset: 10006,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 104, offset: 9263},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 267, col: 5, offset: 9406},
																					run: (*parser).callonSection0Element359,
																					expr: &seqExpr{
																						pos: position{line: 267, col: 5, offset: 9406},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 267, col: 5, offset: 9406},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 267, col: 9, offset: 9410},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonSection0Element363,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 267, col: 26, offset: 9427},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection0Element368,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 267, col: 30, offset: 9431},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 267, col: 34, offset: 9435},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 286, col: 16, offset: 9839},
																									run: (*parser).callonSection0Element372,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 286, col: 16, offset: 9839},
																										expr: &choiceExpr{
																											pos: position{line: 286, col: 17, offset: 9840},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1205, col: 14, offset: 47940},
																													run: (*parser).callonSection0Element375,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1205, col: 14, offset: 47940},
																														expr: &charClassMatcher{
																															pos:        position{line: 1205, col: 14, offset: 47940},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1215, col: 11, offset: 48287},
																													run: (*parser).callonSection0Element378,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1215, col: 11, offset: 48287},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonSection0Element382,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 286, col: 38, offset: 9861},
																													run: (*parser).callonSection0Element384,
																													expr: &seqExpr{
																														pos: position{line: 286, col: 39, offset: 9862},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 286, col: 39, offset: 9862},
																																expr: &choiceExpr{
																																	pos: position{line: 1251, col: 8, offset: 48930},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1247, col: 12, offset: 48890},
																																			val:        "\r\n",
																																			ignoreCase: false,
																																		},
																																		&charClassMatcher{
																																			pos:        position{line: 1247, col: 21, offset: 48899},
																																			val:        "[\\r\\n]",
																																			chars:      []rune{'\r', '\n'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																		&notExpr{
																																			pos: position{line: 1249, col: 8, offset: 48919},
																																			expr: &anyMatcher{
																																				line: 1249, col: 9, offset: 48920,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 44, offset: 9867},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 45, offset: 9868},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 49, offset: 9872},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 50, offset: 9873},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 286, col: 55, offset: 9878,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 267, col: 55, offset: 9456},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 271, col: 5, offset: 9587},
																					run: (*parser).callonSection0Element398,
																					expr: &seqExpr{
																						pos: position{line: 271, col: 5, offset: 9587},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 271, col: 5, offset: 9587},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 271, col: 9, offset: 9591},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonSection0Element402,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 271, col: 26, offset: 9608},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection0Element407,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 271, col: 30, offset: 9612},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&stateCodeExpr{
																		pos: position{line: 275, col: 1, offset: 9688},
																		run: (*parser).callonSection0Element410,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 205, col: 30, offset: 7283},
															run: (*parser).callonSection0Element411,
															expr: &seqExpr{
																pos: position{line: 205, col: 30, offset: 7283},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 205, col: 30, offset: 7283},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 205, col: 34, offset: 7287},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 564, col: 19, offset: 20877},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 564, col: 19, offset: 20877},
																					run: (*parser).callonSection0Element416,
																					expr: &litMatcher{
																						pos:        position{line: 564, col: 19, offset: 20877},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 566, col: 9, offset: 20923},
																					run: (*parser).callonSection0Element418,
																					expr: &litMatcher{
																						pos:        position{line: 566, col: 9, offset: 20923},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 568, col: 9, offset: 20971},
																					run: (*parser).callonSection0Element420,
																					expr: &litMatcher{
																						pos:        position{line: 568, col: 9, offset: 20971},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 570, col: 9, offset: 21029},
																					run: (*parser).callonSection0Element422,
																					expr: &litMatcher{
																						pos:        position{line: 570, col: 9, offset: 21029},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 572, col: 9, offset: 21083},
																					run: (*parser).callonSection0Element424,
																					expr: &litMatcher{
																						pos:        position{line: 572, col: 9, offset: 21083},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 205, col: 53, offset: 7306},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 243, col: 21, offset: 8543},
															run: (*parser).callonSection0Element427,
															expr: &litMatcher{
																pos:        position{line: 243, col: 21, offset: 8543},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 221, col: 19, offset: 7839},
															run: (*parser).callonSection0Element429,
															expr: &seqExpr{
																pos: position{line: 221, col: 19, offset: 7839},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 221, col: 19, offset: 7839},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 221, col: 23, offset: 7843},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonSection0Element435,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 221, col: 27, offset: 7847},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 221, col: 38, offset: 7858},
																			expr: &choiceExpr{
																				pos: position{line: 225, col: 21, offset: 7971},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 225, col: 21, offset: 7971},
																						run: (*parser).callonSection0Element440,
																						expr: &seqExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 225, col: 21, offset: 7971},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										run: (*parser).callonSection0Element443,
																										expr: &seqExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9116},
																														run: (*parser).callonSection0Element446,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9116},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 28, offset: 8242},
																													expr: &actionExpr{
																														pos: position{line: 282, col: 14, offset: 9780},
																														run: (*parser).callonSection0Element449,
																														expr: &litMatcher{
																															pos:        position{line: 282, col: 14, offset: 9780},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 39, offset: 8253},
																													expr: &actionExpr{
																														pos: position{line: 1170, col: 16, offset: 47067},
																														run: (*parser).callonSection0Element452,
																														expr: &litMatcher{
																															pos:        position{line: 1170, col: 16, offset: 47067},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 231, col: 52, offset: 8266},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 231, col: 56, offset: 8270},
																														expr: &choiceExpr{
																															pos: position{line: 231, col: 57, offset: 8271},
																															alternatives: []interface{}{
																																&actionExpr{
																																	pos: position{line: 1205, col: 14, offset: 47940},
																																	run: (*parser).callonSection0Element457,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		expr: &charClassMatcher{
																																			pos:        position{line: 1205, col: 14, offset: 47940},
																																			val:        "[a-zA-Z0-9]",
																																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 1215, col: 11, offset: 48287},
																																	run: (*parser).callonSection0Element460,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		expr: &choiceExpr{
																																			pos: position{line: 1243, col: 7, offset: 48832},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1243, col: 7, offset: 48832},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 1243, col: 13, offset: 48838},
																																					run: (*parser).callonSection0Element464,
																																					expr: &litMatcher{
																																						pos:        position{line: 1243, col: 13, offset: 48838},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 231, col: 78, offset: 8292},
																																	run: (*parser).callonSection0Element466,
																																	expr: &seqExpr{
																																		pos: position{line: 231, col: 79, offset: 8293},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 231, col: 79, offset: 8293},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 80, offset: 8294},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 84, offset: 8298},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 85, offset: 8299},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 89, offset: 8303},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 90, offset: 8304},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 231, col: 95, offset: 8309,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 225, col: 40, offset: 7990},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 225, col: 44, offset: 7994},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 237, col: 19, offset: 8403},
																										run: (*parser).callonSection0Element477,
																										expr: &labeledExpr{
																											pos:   position{line: 237, col: 19, offset: 8403},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 237, col: 25, offset: 8409},
																												expr: &choiceExpr{
																													pos: position{line: 237, col: 26, offset: 8410},
																													alternatives: []interface{}{
																														&actionExpr{
																															pos: position{line: 1205, col: 14, offset: 47940},
																															run: (*parser).callonSection0Element481,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1205, col: 14, offset: 47940},
																																expr: &charClassMatcher{
																																	pos:        position{line: 1205, col: 14, offset: 47940},
																																	val:        "[a-zA-Z0-9]",
																																	ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 1215, col: 11, offset: 48287},
																															run: (*parser).callonSection0Element484,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1215, col: 11, offset: 48287},
																																expr: &choiceExpr{
																																	pos: position{line: 1243, col: 7, offset: 48832},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1243, col: 7, offset: 48832},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 1243, col: 13, offset: 48838},
																																			run: (*parser).callonSection0Element488,
																																			expr: &litMatcher{
																																				pos:        position{line: 1243, col: 13, offset: 48838},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 237, col: 47, offset: 8431},
																															run: (*parser).callonSection0Element490,
																															expr: &seqExpr{
																																pos: position{line: 237, col: 48, offset: 8432},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 237, col: 48, offset: 8432},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 49, offset: 8433},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 237, col: 53, offset: 8437},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 54, offset: 8438},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 237, col: 58, offset: 8442},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 59, offset: 8443},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 237, col: 64, offset: 8448,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 225, col: 67, offset: 8017},
																									expr: &litMatcher{
																										pos:        position{line: 225, col: 67, offset: 8017},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 225, col: 72, offset: 8022},
																									expr: &choiceExpr{
																										pos: position{line: 1243, col: 7, offset: 48832},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1243, col: 7, offset: 48832},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1243, col: 13, offset: 48838},
																												run: (*parser).callonSection0Element504,
																												expr: &litMatcher{
																													pos:        position{line: 1243, col: 13, offset: 48838},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 227, col: 5, offset: 8106},
																						run: (*parser).callonSection0Element506,
																						expr: &seqExpr{
																							pos: position{line: 227, col: 5, offset: 8106},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 227, col: 5, offset: 8106},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										run: (*parser).callonSection0Element509,
																										expr: &seqExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9116},
																														run: (*parser).callonSection0Element512,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9116},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 28, offset: 8242},
																													expr: &actionExpr{
																														pos: position{line: 282, col: 14, offset: 9780},
																														run: (*parser).callonSection0Element515,
																														expr: &litMatcher{
																															pos:        position{line: 282, col: 14, offset: 9780},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 39, offset: 8253},
																													expr: &actionExpr{
																														pos: position{line: 1170, col: 16, offset: 47067},
																														run: (*parser).callonSection0Element518,
																														expr: &litMatcher{
																															pos:        position{line: 1170, col: 16, offset: 47067},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 231, col: 52, offset: 8266},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 231, col: 56, offset: 8270},
																														expr: &choiceExpr{
																															pos: position{line: 231, col: 57, offset: 8271},
																															alternatives: []interface{}{
																																&actionExpr{
																																	pos: position{line: 1205, col: 14, offset: 47940},
																																	run: (*parser).callonSection0Element523,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		expr: &charClassMatcher{
																																			pos:        position{line: 1205, col: 14, offset: 47940},
																																			val:        "[a-zA-Z0-9]",
																																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 1215, col: 11, offset: 48287},
																																	run: (*parser).callonSection0Element526,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		expr: &choiceExpr{
																																			pos: position{line: 1243, col: 7, offset: 48832},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1243, col: 7, offset: 48832},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 1243, col: 13, offset: 48838},
																																					run: (*parser).callonSection0Element530,
																																					expr: &litMatcher{
																																						pos:        position{line: 1243, col: 13, offset: 48838},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 231, col: 78, offset: 8292},
																																	run: (*parser).callonSection0Element532,
																																	expr: &seqExpr{
																																		pos: position{line: 231, col: 79, offset: 8293},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 231, col: 79, offset: 8293},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 80, offset: 8294},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 84, offset: 8298},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 85, offset: 8299},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 89, offset: 8303},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 90, offset: 8304},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 231, col: 95, offset: 8309,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 227, col: 24, offset: 8125},
																									expr: &litMatcher{
																										pos:        position{line: 227, col: 24, offset: 8125},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 227, col: 29, offset: 8130},
																									expr: &choiceExpr{
																										pos: position{line: 1243, col: 7, offset: 48832},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1243, col: 7, offset: 48832},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1243, col: 13, offset: 48838},
																												run: (*parser).callonSection0Element546,
																												expr: &litMatcher{
																													pos:        position{line: 1243, col: 13, offset: 48838},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 221, col: 59, offset: 7879},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 165, col: 170, offset: 6018},
												expr: &choiceExpr{
													pos: position{line: 1243, col: 7, offset: 48832},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1243, col: 7, offset: 48832},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1243, col: 13, offset: 48838},
															run: (*parser).callonSection0Element552,
															expr: &litMatcher{
																pos:        position{line: 1243, col: 13, offset: 48838},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1251, col: 8, offset: 48930},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1247, col: 12, offset: 48890},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1247, col: 21, offset: 48899},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1249, col: 8, offset: 48919},
														expr: &anyMatcher{
															line: 1249, col: 9, offset: 48920,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 324, col: 5, offset: 11064},
							label: "element",
							expr: &choiceExpr{
								pos: position{line: 324, col: 14, offset: 11073},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 324, col: 14, offset: 11073},
										name: "Section1",
									},
									&ruleRefExpr{
										pos:  position{line: 324, col: 25, offset: 11084},
										name: "Section2",
									},
									&ruleRefExpr{
										pos:  position{line: 324, col: 36, offset: 11095},
										name: "Section3",
									},
									&ruleRefExpr{
										pos:  position{line: 324, col: 47, offset: 11106},
										name: "Section4",
									},
									&ruleRefExpr{
										pos:  position{line: 324, col: 58, offset: 11117},
										name: "Section5",
									},
									&ruleRefExpr{
										pos:  position{line: 324, col: 69, offset: 11128},
										name: "DocumentElement",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section1",
			pos:  position{line: 329, col: 1, offset: 11228},
			expr: &actionExpr{
				pos: position{line: 329, col: 13, offset: 11240},
				run: (*parser).callonSection11,
				expr: &seqExpr{
					pos: position{line: 329, col: 13, offset: 11240},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 329, col: 13, offset: 11240},
							expr: &notExpr{
								pos: position{line: 1249, col: 8, offset: 48919},
								expr: &anyMatcher{
									line: 1249, col: 9, offset: 48920,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 330, col: 5, offset: 11311},
							label: "header",
							expr: &ruleRefExpr{
								pos:  position{line: 330, col: 13, offset: 11319},
								name: "Section1Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 330, col: 28, offset: 11334},
							label: "elements",
							expr: &zeroOrMoreExpr{
								pos: position{line: 330, col: 38, offset: 11344},
								expr: &ruleRefExpr{
									pos:  position{line: 330, col: 38, offset: 11344},
									name: "Section1Element",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section1Title",
			pos:  position{line: 336, col: 1, offset: 11490},
			expr: &actionExpr{
				pos: position{line: 336, col: 18, offset: 11507},
				run: (*parser).callonSection1Title1,
				expr: &seqExpr{
					pos: position{line: 336, col: 18, offset: 11507},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 334, col: 24, offset: 11480},
							val:        "==",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 334, col: 29, offset: 11485},
							expr: &choiceExpr{
								pos: position{line: 1243, col: 7, offset: 48832},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1243, col: 7, offset: 48832},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1243, col: 13, offset: 48838},
										run: (*parser).callonSection1Title7,
										expr: &litMatcher{
											pos:        position{line: 1243, col: 13, offset: 48838},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 336, col: 38, offset: 11527},
							label: "elements",
							expr: &ruleRefExpr{
								pos:  position{line: 336, col: 48, offset: 11537},
								name: "TitleElements",
							},
						},
						&labeledExpr{
							pos:   position{line: 336, col: 63, offset: 11552},
							label: "id",
							expr: &zeroOrMoreExpr{
								pos: position{line: 336, col: 67, offset: 11556},
								expr: &actionExpr{
									pos: position{line: 180, col: 20, offset: 6467},
									run: (*parser).callonSection1Title13,
									expr: &seqExpr{
										pos: position{line: 180, col: 20, offset: 6467},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 180, col: 20, offset: 6467},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 180, col: 25, offset: 6472},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 1225, col: 7, offset: 48453},
													run: (*parser).callonSection1Title17,
													expr: &oneOrMoreExpr{
														pos: position{line: 1225, col: 7, offset: 48453},
														expr: &choiceExpr{
															pos: position{line: 1225, col: 8, offset: 48454},
															alternatives: []interface{}{
																&actionExpr{
																	pos: position{line: 1205, col: 14, offset: 47940},
																	run: (*parser).callonSection1Title20,
																	expr: &oneOrMoreExpr{
																		pos: position{line: 1205, col: 14, offset: 47940},
																		expr: &charClassMatcher{
																			pos:        position{line: 1205, col: 14, offset: 47940},
																			val:        "[a-zA-Z0-9]",
																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 1225, col: 20, offset: 48466},
																	run: (*parser).callonSection1Title23,
																	expr: &seqExpr{
																		pos: position{line: 1225, col: 21, offset: 48467},
																		exprs: []interface{}{
																			&notExpr{
																				pos: position{line: 1225, col: 21, offset: 48467},
																				expr: &choiceExpr{
																					pos: position{line: 1247, col: 12, offset: 48890},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1247, col: 12, offset: 48890},
																							val:        "\r\n",
																							ignoreCase: false,
																						},
																						&charClassMatcher{
																							pos:        position{line: 1247, col: 21, offset: 48899},
																							val:        "[\\r\\n]",
																							chars:      []rune{'\r', '\n'},
																							ignoreCase: false,
																							inverted:   false,
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 1225, col: 30, offset: 48476},
																				expr: &choiceExpr{
																					pos: position{line: 1243, col: 7, offset: 48832},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1243, col: 7, offset: 48832},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1243, col: 13, offset: 48838},
																							run: (*parser).callonSection1Title32,
																							expr: &litMatcher{
																								pos:        position{line: 1243, col: 13, offset: 48838},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 1225, col: 34, offset: 48480},
																				expr: &litMatcher{
																					pos:        position{line: 1225, col: 35, offset: 48481},
																					val:        "[",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1225, col: 39, offset: 48485},
																				expr: &litMatcher{
																					pos:        position{line: 1225, col: 40, offset: 48486},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1225, col: 44, offset: 48490},
																				expr: &litMatcher{
																					pos:        position{line: 1225, col: 45, offset: 48491},
																					val:        "<<",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1225, col: 50, offset: 48496},
																				expr: &litMatcher{
																					pos:        position{line: 1225, col: 51, offset: 48497},
																					val:        ">>",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1225, col: 56, offset: 48502},
																				expr: &litMatcher{
																					pos:        position{line: 1225, col: 57, offset: 48503},
																					val:        ",",
																					ignoreCase: false,
																				},
																			},
																			&anyMatcher{
																				line: 1225, col: 62, offset: 48508,
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 180, col: 33, offset: 6480},
												val:        "]]",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 180, col: 38, offset: 6485},
												expr: &choiceExpr{
													pos: position{line: 1243, col: 7, offset: 48832},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1243, col: 7, offset: 48832},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1243, col: 13, offset: 48838},
															run: (*parser).callonSection1Title49,
															expr: &litMatcher{
																pos:        position{line: 1243, col: 13, offset: 48838},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1251, col: 8, offset: 48930},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1247, col: 12, offset: 48890},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1247, col: 21, offset: 48899},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1249, col: 8, offset: 48919},
									expr: &anyMatcher{
										line: 1249, col: 9, offset: 48920,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section1Element",
			pos:  position{line: 340, col: 1, offset: 11672},
			expr: &actionExpr{
				pos: position{line: 340, col: 20, offset: 11691},
				run: (*parser).callonSection1Element1,
				expr: &seqExpr{
					pos: position{line: 340, col: 20, offset: 11691},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 340, col: 20, offset: 11691},
							expr: &seqExpr{
								pos: position{line: 334, col: 24, offset: 11480},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 334, col: 24, offset: 11480},
										val:        "==",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 334, col: 29, offset: 11485},
										expr: &choiceExpr{
											pos: position{line: 1243, col: 7, offset: 48832},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1243, col: 7, offset: 48832},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1243, col: 13, offset: 48838},
													run: (*parser).callonSection1Element9,
													expr: &litMatcher{
														pos:        position{line: 1243, col: 13, offset: 48838},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 341, col: 5, offset: 11717},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 341, col: 16, offset: 11728},
								expr: &actionExpr{
									pos: position{line: 164, col: 21, offset: 5763},
									run: (*parser).callonSection1Element13,
									expr: &seqExpr{
										pos: position{line: 164, col: 21, offset: 5763},
										exprs: []interface{}{
											&andExpr{
												pos: position{line: 164, col: 21, offset: 5763},
												expr: &charClassMatcher{
													pos:        position{line: 164, col: 23, offset: 5765},
													val:        "[[.#]",
													chars:      []rune{'[', '.', '#'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&labeledExpr{
												pos:   position{line: 165, col: 5, offset: 5853},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 165, col: 11, offset: 5859},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 174, col: 14, offset: 6316},
															run: (*parser).callonSection1Element19,
															expr: &seqExpr{
																pos: position{line: 174, col: 14, offset: 6316},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 174, col: 14, offset: 6316},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 174, col: 19, offset: 6321},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1225, col: 7, offset: 48453},
																			run: (*parser).callonSection1Element23,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1225, col: 7, offset: 48453},
																				expr: &choiceExpr{
																					pos: position{line: 1225, col: 8, offset: 48454},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection1Element26,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1225, col: 20, offset: 48466},
																							run: (*parser).callonSection1Element29,
																							expr: &seqExpr{
																								pos: position{line: 1225, col: 21, offset: 48467},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1225, col: 21, offset: 48467},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 30, offset: 48476},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonSection1Element38,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 34, offset: 48480},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 35, offset: 48481},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 39, offset: 48485},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 40, offset: 48486},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 44, offset: 48490},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 45, offset: 48491},
																											val:        "<<",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 50, offset: 48496},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 51, offset: 48497},
																											val:        ">>",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 56, offset: 48502},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 57, offset: 48503},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1225, col: 62, offset: 48508,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 174, col: 27, offset: 6329},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 5, offset: 6383},
															run: (*parser).callonSection1Element52,
															expr: &seqExpr{
																pos: position{line: 176, col: 5, offset: 6383},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 5, offset: 6383},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 10, offset: 6388},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1225, col: 7, offset: 48453},
																			run: (*parser).callonSection1Element56,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1225, col: 7, offset: 48453},
																				expr: &choiceExpr{
																					pos: position{line: 1225, col: 8, offset: 48454},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection1Element59,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1225, col: 20, offset: 48466},
																							run: (*parser).callonSection1Element62,
																							expr: &seqExpr{
																								pos: position{line: 1225, col: 21, offset: 48467},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1225, col: 21, offset: 48467},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 30, offset: 48476},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonSection1Element71,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 34, offset: 48480},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 35, offset: 48481},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 39, offset: 48485},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 40, offset: 48486},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 44, offset: 48490},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 45, offset: 48491},
																											val:        "<<",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 50, offset: 48496},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 51, offset: 48497},
																											val:        ">>",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 56, offset: 48502},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 57, offset: 48503},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1225, col: 62, offset: 48508,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 18, offset: 6396},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 186, col: 17, offset: 6699},
															run: (*parser).callonSection1Element85,
															expr: &seqExpr{
																pos: position{line: 186, col: 17, offset: 6699},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 186, col: 17, offset: 6699},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 186, col: 21, offset: 6703},
																		expr: &litMatcher{
																			pos:        position{line: 186, col: 22, offset: 6704},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 186, col: 26, offset: 6708},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonSection1Element93,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 186, col: 30, offset: 6712},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 186, col: 37, offset: 6719},
																			run: (*parser).callonSection1Element96,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 186, col: 37, offset: 6719},
																				expr: &choiceExpr{
																					pos: position{line: 186, col: 38, offset: 6720},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection1Element99,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonSection1Element102,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection1Element106,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 186, col: 59, offset: 6741},
																							run: (*parser).callonSection1Element108,
																							expr: &seqExpr{
																								pos: position{line: 186, col: 60, offset: 6742},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 186, col: 60, offset: 6742},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 186, col: 70, offset: 6752,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 196, col: 16, offset: 6990},
															run: (*parser).callonSection1Element115,
															expr: &seqExpr{
																pos: position{line: 196, col: 16, offset: 6990},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 196, col: 16, offset: 6990},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 196, col: 21, offset: 6995},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonSection1Element121,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 196, col: 25, offset: 6999},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 196, col: 31, offset: 7005},
																			run: (*parser).callonSection1Element124,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 196, col: 31, offset: 7005},
																				expr: &choiceExpr{
																					pos: position{line: 196, col: 32, offset: 7006},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection1Element127,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonSection1Element130,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection1Element134,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 196, col: 53, offset: 7027},
																							run: (*parser).callonSection1Element136,
																							expr: &seqExpr{
																								pos: position{line: 196, col: 54, offset: 7028},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 196, col: 54, offset: 7028},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 196, col: 63, offset: 7037},
																										expr: &litMatcher{
																											pos:        position{line: 196, col: 64, offset: 7038},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 196, col: 69, offset: 7043,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 200, col: 4, offset: 7118},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 210, col: 21, offset: 7481},
															run: (*parser).callonSection1Element146,
															expr: &litMatcher{
																pos:        position{line: 210, col: 21, offset: 7481},
																val:        "[source]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 212, col: 5, offset: 7539},
															run: (*parser).callonSection1Element148,
															expr: &seqExpr{
																pos: position{line: 212, col: 5, offset: 7539},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 212, col: 5, offset: 7539},
																		val:        "[source,",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 212, col: 16, offset: 7550},
																		label: "language",
																		expr: &actionExpr{
																			pos: position{line: 212, col: 26, offset: 7560},
																			run: (*parser).callonSection1Element152,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 212, col: 26, offset: 7560},
																				expr: &choiceExpr{
																					pos: position{line: 212, col: 27, offset: 7561},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection1Element155,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonSection1Element158,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection1Element162,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 212, col: 48, offset: 7582},
																							run: (*parser).callonSection1Element164,
																							expr: &seqExpr{
																								pos: position{line: 212, col: 49, offset: 7583},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 212, col: 49, offset: 7583},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 212, col: 58, offset: 7592},
																										expr: &litMatcher{
																											pos:        position{line: 212, col: 59, offset: 7593},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 212, col: 64, offset: 7598,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 216, col: 7, offset: 7688},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 247, col: 20, offset: 8646},
															run: (*parser).callonSection1Element174,
															expr: &seqExpr{
																pos: position{line: 247, col: 20, offset: 8646},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 247, col: 20, offset: 8646},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 24, offset: 8650},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonSection1Element178,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 247, col: 41, offset: 8667},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonSection1Element183,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 45, offset: 8671},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 49, offset: 8675},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 286, col: 16, offset: 9839},
																			run: (*parser).callonSection1Element187,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 286, col: 16, offset: 9839},
																				expr: &choiceExpr{
																					pos: position{line: 286, col: 17, offset: 9840},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection1Element190,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonSection1Element193,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection1Element197,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 286, col: 38, offset: 9861},
																							run: (*parser).callonSection1Element199,
																							expr: &seqExpr{
																								pos: position{line: 286, col: 39, offset: 9862},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 286, col: 39, offset: 9862},
																										expr: &choiceExpr{
																											pos: position{line: 1251, col: 8, offset: 48930},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																												&notExpr{
																													pos: position{line: 1249, col: 8, offset: 48919},
																													expr: &anyMatcher{
																														line: 1249, col: 9, offset: 48920,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 44, offset: 9867},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 45, offset: 9868},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 49, offset: 9872},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 50, offset: 9873},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 286, col: 55, offset: 9878,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 70, offset: 8696},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 74, offset: 8700},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 292, col: 15, offset: 9967},
																			run: (*parser).callonSection1Element214,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 292, col: 15, offset: 9967},
																				expr: &choiceExpr{
																					pos: position{line: 292, col: 16, offset: 9968},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection1Element217,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonSection1Element220,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection1Element224,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&seqExpr{
																							pos: position{line: 292, col: 38, offset: 9990},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 292, col: 38, offset: 9990},
																									expr: &choiceExpr{
																										pos: position{line: 1251, col: 8, offset: 48930},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1247, col: 12, offset: 48890},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1247, col: 21, offset: 48899},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																											&notExpr{
																												pos: position{line: 1249, col: 8, offset: 48919},
																												expr: &anyMatcher{
																													line: 1249, col: 9, offset: 48920,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 292, col: 43, offset: 9995},
																									expr: &litMatcher{
																										pos:        position{line: 292, col: 44, offset: 9996},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 292, col: 48, offset: 10000},
																									expr: &litMatcher{
																										pos:        position{line: 292, col: 49, offset: 10001},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 292, col: 54, offset: 10006,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 93, offset: 8719},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 251, col: 1, offset: 8846},
															run: (*parser).callonSection1Element239,
															expr: &seqExpr{
																pos: position{line: 251, col: 1, offset: 8846},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 251, col: 1, offset: 8846},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 251, col: 5, offset: 8850},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonSection1Element243,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 251, col: 22, offset: 8867},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonSection1Element248,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 251, col: 26, offset: 8871},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 251, col: 30, offset: 8875},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 286, col: 16, offset: 9839},
																			run: (*parser).callonSection1Element252,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 286, col: 16, offset: 9839},
																				expr: &choiceExpr{
																					pos: position{line: 286, col: 17, offset: 9840},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection1Element255,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonSection1Element258,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection1Element262,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 286, col: 38, offset: 9861},
																							run: (*parser).callonSection1Element264,
																							expr: &seqExpr{
																								pos: position{line: 286, col: 39, offset: 9862},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 286, col: 39, offset: 9862},
																										expr: &choiceExpr{
																											pos: position{line: 1251, col: 8, offset: 48930},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																												&notExpr{
																													pos: position{line: 1249, col: 8, offset: 48919},
																													expr: &anyMatcher{
																														line: 1249, col: 9, offset: 48920,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 44, offset: 9867},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 45, offset: 9868},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 49, offset: 9872},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 50, offset: 9873},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 286, col: 55, offset: 9878,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 251, col: 51, offset: 8896},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 255, col: 1, offset: 9011},
															run: (*parser).callonSection1Element278,
															expr: &seqExpr{
																pos: position{line: 255, col: 1, offset: 9011},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 255, col: 1, offset: 9011},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 255, col: 5, offset: 9015},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonSection1Element282,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 255, col: 22, offset: 9032},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonSection1Element287,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 255, col: 26, offset: 9036},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 263, col: 20, offset: 9179},
															run: (*parser).callonSection1Element290,
															expr: &seqExpr{
																pos: position{line: 263, col: 20, offset: 9179},
																exprs: []interface{}{
																	&labeledExpr{
																		pos:   position{line: 263, col: 20, offset: 9179},
																		label: "attribute",
																		expr: &choiceExpr{
																			pos: position{line: 263, col: 31, offset: 9190},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 263, col: 31, offset: 9190},
																					run: (*parser).callonSection1Element294,
																					expr: &seqExpr{
																						pos: position{line: 263, col: 31, offset: 9190},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 263, col: 31, offset: 9190},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 35, offset: 9194},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonSection1Element298,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 263, col: 52, offset: 9211},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection1Element303,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 56, offset: 9215},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 60, offset: 9219},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 286, col: 16, offset: 9839},
																									run: (*parser).callonSection1Element307,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 286, col: 16, offset: 9839},
																										expr: &choiceExpr{
																											pos: position{line: 286, col: 17, offset: 9840},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1205, col: 14, offset: 47940},
																													run: (*parser).callonSection1Element310,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1205, col: 14, offset: 47940},
																														expr: &charClassMatcher{
																															pos:        position{line: 1205, col: 14, offset: 47940},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1215, col: 11, offset: 48287},
																													run: (*parser).callonSection1Element313,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1215, col: 11, offset: 48287},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonSection1Element317,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 286, col: 38, offset: 9861},
																													run: (*parser).callonSection1Element319,
																													expr: &seqExpr{
																														pos: position{line: 286, col: 39, offset: 9862},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 286, col: 39, offset: 9862},
																																expr: &choiceExpr{
																																	pos: position{line: 1251, col: 8, offset: 48930},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1247, col: 12, offset: 48890},
																																			val:        "\r\n",
																																			ignoreCase: false,
																																		},
																																		&charClassMatcher{
																																			pos:        position{line: 1247, col: 21, offset: 48899},
																																			val:        "[\\r\\n]",
																																			chars:      []rune{'\r', '\n'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																		&notExpr{
																																			pos: position{line: 1249, col: 8, offset: 48919},
																																			expr: &anyMatcher{
																																				line: 1249, col: 9, offset: 48920,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 44, offset: 9867},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 45, offset: 9868},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 49, offset: 9872},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 50, offset: 9873},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 286, col: 55, offset: 9878,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 81, offset: 9240},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 85, offset: 9244},
																								label: "title",
																								expr: &actionExpr{
																									pos: position{line: 292, col: 15, offset: 9967},
																									run: (*parser).callonSection1Element334,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 292, col: 15, offset: 9967},
																										expr: &choiceExpr{
																											pos: position{line: 292, col: 16, offset: 9968},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1205, col: 14, offset: 47940},
																													run: (*parser).callonSection1Element337,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1205, col: 14, offset: 47940},
																														expr: &charClassMatcher{
																															pos:        position{line: 1205, col: 14, offset: 47940},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1215, col: 11, offset: 48287},
																													run: (*parser).callonSection1Element340,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1215, col: 11, offset: 48287},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonSection1Element344,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&seqExpr{
																													pos: position{line: 292, col: 38, offset: 9990},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 292, col: 38, offset: 9990},
																															expr: &choiceExpr{
																																pos: position{line: 1251, col: 8, offset: 48930},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1247, col: 12, offset: 48890},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1247, col: 21, offset: 48899},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																	&notExpr{
																																		pos: position{line: 1249, col: 8, offset: 48919},
																																		expr: &anyMatcher{
																																			line: 1249, col: 9, offset: 48920,
																																		},
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 292, col: 43, offset: 9995},
																															expr: &litMatcher{
																																pos:        position{line: 292, col: 44, offset: 9996},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 292, col: 48, offset: 10000},
																															expr: &litMatcher{
																																pos:        position{line: 292, col: 49, offset: 10001},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 292, col: 54, offset: 10006,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 104, offset: 9263},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 267, col: 5, offset: 9406},
																					run: (*parser).callonSection1Element359,
																					expr: &seqExpr{
																						pos: position{line: 267, col: 5, offset: 9406},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 267, col: 5, offset: 9406},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 267, col: 9, offset: 9410},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonSection1Element363,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 267, col: 26, offset: 9427},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection1Element368,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 267, col: 30, offset: 9431},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 267, col: 34, offset: 9435},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 286, col: 16, offset: 9839},
																									run: (*parser).callonSection1Element372,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 286, col: 16, offset: 9839},
																										expr: &choiceExpr{
																											pos: position{line: 286, col: 17, offset: 9840},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1205, col: 14, offset: 47940},
																													run: (*parser).callonSection1Element375,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1205, col: 14, offset: 47940},
																														expr: &charClassMatcher{
																															pos:        position{line: 1205, col: 14, offset: 47940},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1215, col: 11, offset: 48287},
																													run: (*parser).callonSection1Element378,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1215, col: 11, offset: 48287},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonSection1Element382,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 286, col: 38, offset: 9861},
																													run: (*parser).callonSection1Element384,
																													expr: &seqExpr{
																														pos: position{line: 286, col: 39, offset: 9862},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 286, col: 39, offset: 9862},
																																expr: &choiceExpr{
																																	pos: position{line: 1251, col: 8, offset: 48930},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1247, col: 12, offset: 48890},
																																			val:        "\r\n",
																																			ignoreCase: false,
																																		},
																																		&charClassMatcher{
																																			pos:        position{line: 1247, col: 21, offset: 48899},
																																			val:        "[\\r\\n]",
																																			chars:      []rune{'\r', '\n'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																		&notExpr{
																																			pos: position{line: 1249, col: 8, offset: 48919},
																																			expr: &anyMatcher{
																																				line: 1249, col: 9, offset: 48920,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 44, offset: 9867},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 45, offset: 9868},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 49, offset: 9872},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 50, offset: 9873},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 286, col: 55, offset: 9878,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 267, col: 55, offset: 9456},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 271, col: 5, offset: 9587},
																					run: (*parser).callonSection1Element398,
																					expr: &seqExpr{
																						pos: position{line: 271, col: 5, offset: 9587},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 271, col: 5, offset: 9587},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 271, col: 9, offset: 9591},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonSection1Element402,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 271, col: 26, offset: 9608},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection1Element407,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 271, col: 30, offset: 9612},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&stateCodeExpr{
																		pos: position{line: 275, col: 1, offset: 9688},
																		run: (*parser).callonSection1Element410,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 205, col: 30, offset: 7283},
															run: (*parser).callonSection1Element411,
															expr: &seqExpr{
																pos: position{line: 205, col: 30, offset: 7283},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 205, col: 30, offset: 7283},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 205, col: 34, offset: 7287},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 564, col: 19, offset: 20877},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 564, col: 19, offset: 20877},
																					run: (*parser).callonSection1Element416,
																					expr: &litMatcher{
																						pos:        position{line: 564, col: 19, offset: 20877},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 566, col: 9, offset: 20923},
																					run: (*parser).callonSection1Element418,
																					expr: &litMatcher{
																						pos:        position{line: 566, col: 9, offset: 20923},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 568, col: 9, offset: 20971},
																					run: (*parser).callonSection1Element420,
																					expr: &litMatcher{
																						pos:        position{line: 568, col: 9, offset: 20971},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 570, col: 9, offset: 21029},
																					run: (*parser).callonSection1Element422,
																					expr: &litMatcher{
																						pos:        position{line: 570, col: 9, offset: 21029},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 572, col: 9, offset: 21083},
																					run: (*parser).callonSection1Element424,
																					expr: &litMatcher{
																						pos:        position{line: 572, col: 9, offset: 21083},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 205, col: 53, offset: 7306},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 243, col: 21, offset: 8543},
															run: (*parser).callonSection1Element427,
															expr: &litMatcher{
																pos:        position{line: 243, col: 21, offset: 8543},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 221, col: 19, offset: 7839},
															run: (*parser).callonSection1Element429,
															expr: &seqExpr{
																pos: position{line: 221, col: 19, offset: 7839},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 221, col: 19, offset: 7839},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 221, col: 23, offset: 7843},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonSection1Element435,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 221, col: 27, offset: 7847},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 221, col: 38, offset: 7858},
																			expr: &choiceExpr{
																				pos: position{line: 225, col: 21, offset: 7971},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 225, col: 21, offset: 7971},
																						run: (*parser).callonSection1Element440,
																						expr: &seqExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 225, col: 21, offset: 7971},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										run: (*parser).callonSection1Element443,
																										expr: &seqExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9116},
																														run: (*parser).callonSection1Element446,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9116},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 28, offset: 8242},
																													expr: &actionExpr{
																														pos: position{line: 282, col: 14, offset: 9780},
																														run: (*parser).callonSection1Element449,
																														expr: &litMatcher{
																															pos:        position{line: 282, col: 14, offset: 9780},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 39, offset: 8253},
																													expr: &actionExpr{
																														pos: position{line: 1170, col: 16, offset: 47067},
																														run: (*parser).callonSection1Element452,
																														expr: &litMatcher{
																															pos:        position{line: 1170, col: 16, offset: 47067},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 231, col: 52, offset: 8266},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 231, col: 56, offset: 8270},
																														expr: &choiceExpr{
																															pos: position{line: 231, col: 57, offset: 8271},
																															alternatives: []interface{}{
																																&actionExpr{
																																	pos: position{line: 1205, col: 14, offset: 47940},
																																	run: (*parser).callonSection1Element457,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		expr: &charClassMatcher{
																																			pos:        position{line: 1205, col: 14, offset: 47940},
																																			val:        "[a-zA-Z0-9]",
																																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 1215, col: 11, offset: 48287},
																																	run: (*parser).callonSection1Element460,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		expr: &choiceExpr{
																																			pos: position{line: 1243, col: 7, offset: 48832},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1243, col: 7, offset: 48832},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 1243, col: 13, offset: 48838},
																																					run: (*parser).callonSection1Element464,
																																					expr: &litMatcher{
																																						pos:        position{line: 1243, col: 13, offset: 48838},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 231, col: 78, offset: 8292},
																																	run: (*parser).callonSection1Element466,
																																	expr: &seqExpr{
																																		pos: position{line: 231, col: 79, offset: 8293},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 231, col: 79, offset: 8293},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 80, offset: 8294},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 84, offset: 8298},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 85, offset: 8299},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 89, offset: 8303},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 90, offset: 8304},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 231, col: 95, offset: 8309,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 225, col: 40, offset: 7990},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 225, col: 44, offset: 7994},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 237, col: 19, offset: 8403},
																										run: (*parser).callonSection1Element477,
																										expr: &labeledExpr{
																											pos:   position{line: 237, col: 19, offset: 8403},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 237, col: 25, offset: 8409},
																												expr: &choiceExpr{
																													pos: position{line: 237, col: 26, offset: 8410},
																													alternatives: []interface{}{
																														&actionExpr{
																															pos: position{line: 1205, col: 14, offset: 47940},
																															run: (*parser).callonSection1Element481,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1205, col: 14, offset: 47940},
																																expr: &charClassMatcher{
																																	pos:        position{line: 1205, col: 14, offset: 47940},
																																	val:        "[a-zA-Z0-9]",
																																	ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 1215, col: 11, offset: 48287},
																															run: (*parser).callonSection1Element484,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1215, col: 11, offset: 48287},
																																expr: &choiceExpr{
																																	pos: position{line: 1243, col: 7, offset: 48832},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1243, col: 7, offset: 48832},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 1243, col: 13, offset: 48838},
																																			run: (*parser).callonSection1Element488,
																																			expr: &litMatcher{
																																				pos:        position{line: 1243, col: 13, offset: 48838},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 237, col: 47, offset: 8431},
																															run: (*parser).callonSection1Element490,
																															expr: &seqExpr{
																																pos: position{line: 237, col: 48, offset: 8432},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 237, col: 48, offset: 8432},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 49, offset: 8433},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 237, col: 53, offset: 8437},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 54, offset: 8438},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 237, col: 58, offset: 8442},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 59, offset: 8443},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 237, col: 64, offset: 8448,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 225, col: 67, offset: 8017},
																									expr: &litMatcher{
																										pos:        position{line: 225, col: 67, offset: 8017},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 225, col: 72, offset: 8022},
																									expr: &choiceExpr{
																										pos: position{line: 1243, col: 7, offset: 48832},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1243, col: 7, offset: 48832},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1243, col: 13, offset: 48838},
																												run: (*parser).callonSection1Element504,
																												expr: &litMatcher{
																													pos:        position{line: 1243, col: 13, offset: 48838},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 227, col: 5, offset: 8106},
																						run: (*parser).callonSection1Element506,
																						expr: &seqExpr{
																							pos: position{line: 227, col: 5, offset: 8106},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 227, col: 5, offset: 8106},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										run: (*parser).callonSection1Element509,
																										expr: &seqExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9116},
																														run: (*parser).callonSection1Element512,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9116},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 28, offset: 8242},
																													expr: &actionExpr{
																														pos: position{line: 282, col: 14, offset: 9780},
																														run: (*parser).callonSection1Element515,
																														expr: &litMatcher{
																															pos:        position{line: 282, col: 14, offset: 9780},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 39, offset: 8253},
																													expr: &actionExpr{
																														pos: position{line: 1170, col: 16, offset: 47067},
																														run: (*parser).callonSection1Element518,
																														expr: &litMatcher{
																															pos:        position{line: 1170, col: 16, offset: 47067},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 231, col: 52, offset: 8266},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 231, col: 56, offset: 8270},
																														expr: &choiceExpr{
																															pos: position{line: 231, col: 57, offset: 8271},
																															alternatives: []interface{}{
																																&actionExpr{
																																	pos: position{line: 1205, col: 14, offset: 47940},
																																	run: (*parser).callonSection1Element523,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		expr: &charClassMatcher{
																																			pos:        position{line: 1205, col: 14, offset: 47940},
																																			val:        "[a-zA-Z0-9]",
																																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 1215, col: 11, offset: 48287},
																																	run: (*parser).callonSection1Element526,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		expr: &choiceExpr{
																																			pos: position{line: 1243, col: 7, offset: 48832},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1243, col: 7, offset: 48832},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 1243, col: 13, offset: 48838},
																																					run: (*parser).callonSection1Element530,
																																					expr: &litMatcher{
																																						pos:        position{line: 1243, col: 13, offset: 48838},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 231, col: 78, offset: 8292},
																																	run: (*parser).callonSection1Element532,
																																	expr: &seqExpr{
																																		pos: position{line: 231, col: 79, offset: 8293},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 231, col: 79, offset: 8293},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 80, offset: 8294},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 84, offset: 8298},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 85, offset: 8299},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 89, offset: 8303},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 90, offset: 8304},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 231, col: 95, offset: 8309,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 227, col: 24, offset: 8125},
																									expr: &litMatcher{
																										pos:        position{line: 227, col: 24, offset: 8125},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 227, col: 29, offset: 8130},
																									expr: &choiceExpr{
																										pos: position{line: 1243, col: 7, offset: 48832},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1243, col: 7, offset: 48832},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1243, col: 13, offset: 48838},
																												run: (*parser).callonSection1Element546,
																												expr: &litMatcher{
																													pos:        position{line: 1243, col: 13, offset: 48838},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 221, col: 59, offset: 7879},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 165, col: 170, offset: 6018},
												expr: &choiceExpr{
													pos: position{line: 1243, col: 7, offset: 48832},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1243, col: 7, offset: 48832},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1243, col: 13, offset: 48838},
															run: (*parser).callonSection1Element552,
															expr: &litMatcher{
																pos:        position{line: 1243, col: 13, offset: 48838},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1251, col: 8, offset: 48930},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1247, col: 12, offset: 48890},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1247, col: 21, offset: 48899},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1249, col: 8, offset: 48919},
														expr: &anyMatcher{
															line: 1249, col: 9, offset: 48920,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 342, col: 5, offset: 11753},
							label: "element",
							expr: &choiceExpr{
								pos: position{line: 342, col: 14, offset: 11762},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 342, col: 14, offset: 11762},
										name: "Section2",
									},
									&ruleRefExpr{
										pos:  position{line: 342, col: 25, offset: 11773},
										name: "Section3",
									},
									&ruleRefExpr{
										pos:  position{line: 342, col: 36, offset: 11784},
										name: "Section4",
									},
									&ruleRefExpr{
										pos:  position{line: 342, col: 47, offset: 11795},
										name: "Section5",
									},
									&ruleRefExpr{
										pos:  position{line: 342, col: 58, offset: 11806},
										name: "DocumentElement",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section2",
			pos:  position{line: 346, col: 1, offset: 11901},
			expr: &actionExpr{
				pos: position{line: 346, col: 13, offset: 11913},
				run: (*parser).callonSection21,
				expr: &seqExpr{
					pos: position{line: 346, col: 13, offset: 11913},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 346, col: 13, offset: 11913},
							expr: &notExpr{
								pos: position{line: 1249, col: 8, offset: 48919},
								expr: &anyMatcher{
									line: 1249, col: 9, offset: 48920,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 347, col: 5, offset: 11984},
							label: "header",
							expr: &ruleRefExpr{
								pos:  position{line: 347, col: 13, offset: 11992},
								name: "Section2Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 347, col: 28, offset: 12007},
							label: "elements",
							expr: &zeroOrMoreExpr{
								pos: position{line: 347, col: 38, offset: 12017},
								expr: &ruleRefExpr{
									pos:  position{line: 347, col: 38, offset: 12017},
									name: "Section2Element",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section2Title",
			pos:  position{line: 353, col: 1, offset: 12165},
			expr: &actionExpr{
				pos: position{line: 353, col: 18, offset: 12182},
				run: (*parser).callonSection2Title1,
				expr: &seqExpr{
					pos: position{line: 353, col: 18, offset: 12182},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 351, col: 24, offset: 12153},
							val:        "===",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 351, col: 30, offset: 12159},
							expr: &choiceExpr{
								pos: position{line: 1243, col: 7, offset: 48832},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1243, col: 7, offset: 48832},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1243, col: 13, offset: 48838},
										run: (*parser).callonSection2Title7,
										expr: &litMatcher{
											pos:        position{line: 1243, col: 13, offset: 48838},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 353, col: 38, offset: 12202},
							label: "elements",
							expr: &ruleRefExpr{
								pos:  position{line: 353, col: 48, offset: 12212},
								name: "TitleElements",
							},
						},
						&labeledExpr{
							pos:   position{line: 353, col: 63, offset: 12227},
							label: "id",
							expr: &zeroOrMoreExpr{
								pos: position{line: 353, col: 67, offset: 12231},
								expr: &actionExpr{
									pos: position{line: 180, col: 20, offset: 6467},
									run: (*parser).callonSection2Title13,
									expr: &seqExpr{
										pos: position{line: 180, col: 20, offset: 6467},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 180, col: 20, offset: 6467},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 180, col: 25, offset: 6472},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 1225, col: 7, offset: 48453},
													run: (*parser).callonSection2Title17,
													expr: &oneOrMoreExpr{
														pos: position{line: 1225, col: 7, offset: 48453},
														expr: &choiceExpr{
															pos: position{line: 1225, col: 8, offset: 48454},
															alternatives: []interface{}{
																&actionExpr{
																	pos: position{line: 1205, col: 14, offset: 47940},
																	run: (*parser).callonSection2Title20,
																	expr: &oneOrMoreExpr{
																		pos: position{line: 1205, col: 14, offset: 47940},
																		expr: &charClassMatcher{
																			pos:        position{line: 1205, col: 14, offset: 47940},
																			val:        "[a-zA-Z0-9]",
																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 1225, col: 20, offset: 48466},
																	run: (*parser).callonSection2Title23,
																	expr: &seqExpr{
																		pos: position{line: 1225, col: 21, offset: 48467},
																		exprs: []interface{}{
																			&notExpr{
																				pos: position{line: 1225, col: 21, offset: 48467},
																				expr: &choiceExpr{
																					pos: position{line: 1247, col: 12, offset: 48890},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1247, col: 12, offset: 48890},
																							val:        "\r\n",
																							ignoreCase: false,
																						},
																						&charClassMatcher{
																							pos:        position{line: 1247, col: 21, offset: 48899},
																							val:        "[\\r\\n]",
																							chars:      []rune{'\r', '\n'},
																							ignoreCase: false,
																							inverted:   false,
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 1225, col: 30, offset: 48476},
																				expr: &choiceExpr{
																					pos: position{line: 1243, col: 7, offset: 48832},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1243, col: 7, offset: 48832},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1243, col: 13, offset: 48838},
																							run: (*parser).callonSection2Title32,
																							expr: &litMatcher{
																								pos:        position{line: 1243, col: 13, offset: 48838},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 1225, col: 34, offset: 48480},
																				expr: &litMatcher{
																					pos:        position{line: 1225, col: 35, offset: 48481},
																					val:        "[",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1225, col: 39, offset: 48485},
																				expr: &litMatcher{
																					pos:        position{line: 1225, col: 40, offset: 48486},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1225, col: 44, offset: 48490},
																				expr: &litMatcher{
																					pos:        position{line: 1225, col: 45, offset: 48491},
																					val:        "<<",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1225, col: 50, offset: 48496},
																				expr: &litMatcher{
																					pos:        position{line: 1225, col: 51, offset: 48497},
																					val:        ">>",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1225, col: 56, offset: 48502},
																				expr: &litMatcher{
																					pos:        position{line: 1225, col: 57, offset: 48503},
																					val:        ",",
																					ignoreCase: false,
																				},
																			},
																			&anyMatcher{
																				line: 1225, col: 62, offset: 48508,
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 180, col: 33, offset: 6480},
												val:        "]]",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 180, col: 38, offset: 6485},
												expr: &choiceExpr{
													pos: position{line: 1243, col: 7, offset: 48832},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1243, col: 7, offset: 48832},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1243, col: 13, offset: 48838},
															run: (*parser).callonSection2Title49,
															expr: &litMatcher{
																pos:        position{line: 1243, col: 13, offset: 48838},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1251, col: 8, offset: 48930},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1247, col: 12, offset: 48890},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1247, col: 21, offset: 48899},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1249, col: 8, offset: 48919},
									expr: &anyMatcher{
										line: 1249, col: 9, offset: 48920,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section2Element",
			pos:  position{line: 357, col: 1, offset: 12351},
			expr: &actionExpr{
				pos: position{line: 357, col: 20, offset: 12370},
				run: (*parser).callonSection2Element1,
				expr: &seqExpr{
					pos: position{line: 357, col: 20, offset: 12370},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 357, col: 20, offset: 12370},
							expr: &seqExpr{
								pos: position{line: 334, col: 24, offset: 11480},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 334, col: 24, offset: 11480},
										val:        "==",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 334, col: 29, offset: 11485},
										expr: &choiceExpr{
											pos: position{line: 1243, col: 7, offset: 48832},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1243, col: 7, offset: 48832},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1243, col: 13, offset: 48838},
													run: (*parser).callonSection2Element9,
													expr: &litMatcher{
														pos:        position{line: 1243, col: 13, offset: 48838},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 357, col: 41, offset: 12391},
							expr: &seqExpr{
								pos: position{line: 351, col: 24, offset: 12153},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 351, col: 24, offset: 12153},
										val:        "===",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 351, col: 30, offset: 12159},
										expr: &choiceExpr{
											pos: position{line: 1243, col: 7, offset: 48832},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1243, col: 7, offset: 48832},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1243, col: 13, offset: 48838},
													run: (*parser).callonSection2Element17,
													expr: &litMatcher{
														pos:        position{line: 1243, col: 13, offset: 48838},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 358, col: 5, offset: 12417},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 358, col: 16, offset: 12428},
								expr: &actionExpr{
									pos: position{line: 164, col: 21, offset: 5763},
									run: (*parser).callonSection2Element21,
									expr: &seqExpr{
										pos: position{line: 164, col: 21, offset: 5763},
										exprs: []interface{}{
											&andExpr{
												pos: position{line: 164, col: 21, offset: 5763},
												expr: &charClassMatcher{
													pos:        position{line: 164, col: 23, offset: 5765},
													val:        "[[.#]",
													chars:      []rune{'[', '.', '#'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&labeledExpr{
												pos:   position{line: 165, col: 5, offset: 5853},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 165, col: 11, offset: 5859},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 174, col: 14, offset: 6316},
															run: (*parser).callonSection2Element27,
															expr: &seqExpr{
																pos: position{line: 174, col: 14, offset: 6316},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 174, col: 14, offset: 6316},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 174, col: 19, offset: 6321},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1225, col: 7, offset: 48453},
																			run: (*parser).callonSection2Element31,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1225, col: 7, offset: 48453},
																				expr: &choiceExpr{
																					pos: position{line: 1225, col: 8, offset: 48454},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection2Element34,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1225, col: 20, offset: 48466},
																							run: (*parser).callonSection2Element37,
																							expr: &seqExpr{
																								pos: position{line: 1225, col: 21, offset: 48467},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1225, col: 21, offset: 48467},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 30, offset: 48476},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonSection2Element46,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 34, offset: 48480},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 35, offset: 48481},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 39, offset: 48485},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 40, offset: 48486},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 44, offset: 48490},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 45, offset: 48491},
																											val:        "<<",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 50, offset: 48496},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 51, offset: 48497},
																											val:        ">>",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 56, offset: 48502},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 57, offset: 48503},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1225, col: 62, offset: 48508,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 174, col: 27, offset: 6329},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 5, offset: 6383},
															run: (*parser).callonSection2Element60,
															expr: &seqExpr{
																pos: position{line: 176, col: 5, offset: 6383},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 5, offset: 6383},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 10, offset: 6388},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1225, col: 7, offset: 48453},
																			run: (*parser).callonSection2Element64,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1225, col: 7, offset: 48453},
																				expr: &choiceExpr{
																					pos: position{line: 1225, col: 8, offset: 48454},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection2Element67,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1225, col: 20, offset: 48466},
																							run: (*parser).callonSection2Element70,
																							expr: &seqExpr{
																								pos: position{line: 1225, col: 21, offset: 48467},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1225, col: 21, offset: 48467},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 30, offset: 48476},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonSection2Element79,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 34, offset: 48480},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 35, offset: 48481},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 39, offset: 48485},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 40, offset: 48486},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 44, offset: 48490},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 45, offset: 48491},
																											val:        "<<",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 50, offset: 48496},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 51, offset: 48497},
																											val:        ">>",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 56, offset: 48502},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 57, offset: 48503},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1225, col: 62, offset: 48508,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 18, offset: 6396},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 186, col: 17, offset: 6699},
															run: (*parser).callonSection2Element93,
															expr: &seqExpr{
																pos: position{line: 186, col: 17, offset: 6699},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 186, col: 17, offset: 6699},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 186, col: 21, offset: 6703},
																		expr: &litMatcher{
																			pos:        position{line: 186, col: 22, offset: 6704},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 186, col: 26, offset: 6708},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonSection2Element101,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 186, col: 30, offset: 6712},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 186, col: 37, offset: 6719},
																			run: (*parser).callonSection2Element104,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 186, col: 37, offset: 6719},
																				expr: &choiceExpr{
																					pos: position{line: 186, col: 38, offset: 6720},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection2Element107,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonSection2Element110,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection2Element114,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 186, col: 59, offset: 6741},
																							run: (*parser).callonSection2Element116,
																							expr: &seqExpr{
																								pos: position{line: 186, col: 60, offset: 6742},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 186, col: 60, offset: 6742},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 186, col: 70, offset: 6752,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 196, col: 16, offset: 6990},
															run: (*parser).callonSection2Element123,
															expr: &seqExpr{
																pos: position{line: 196, col: 16, offset: 6990},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 196, col: 16, offset: 6990},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 196, col: 21, offset: 6995},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonSection2Element129,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 196, col: 25, offset: 6999},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 196, col: 31, offset: 7005},
																			run: (*parser).callonSection2Element132,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 196, col: 31, offset: 7005},
																				expr: &choiceExpr{
																					pos: position{line: 196, col: 32, offset: 7006},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection2Element135,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonSection2Element138,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection2Element142,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 196, col: 53, offset: 7027},
																							run: (*parser).callonSection2Element144,
																							expr: &seqExpr{
																								pos: position{line: 196, col: 54, offset: 7028},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 196, col: 54, offset: 7028},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 196, col: 63, offset: 7037},
																										expr: &litMatcher{
																											pos:        position{line: 196, col: 64, offset: 7038},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 196, col: 69, offset: 7043,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 200, col: 4, offset: 7118},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 210, col: 21, offset: 7481},
															run: (*parser).callonSection2Element154,
															expr: &litMatcher{
																pos:        position{line: 210, col: 21, offset: 7481},
																val:        "[source]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 212, col: 5, offset: 7539},
															run: (*parser).callonSection2Element156,
															expr: &seqExpr{
																pos: position{line: 212, col: 5, offset: 7539},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 212, col: 5, offset: 7539},
																		val:        "[source,",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 212, col: 16, offset: 7550},
																		label: "language",
																		expr: &actionExpr{
																			pos: position{line: 212, col: 26, offset: 7560},
																			run: (*parser).callonSection2Element160,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 212, col: 26, offset: 7560},
																				expr: &choiceExpr{
																					pos: position{line: 212, col: 27, offset: 7561},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection2Element163,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonSection2Element166,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection2Element170,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 212, col: 48, offset: 7582},
																							run: (*parser).callonSection2Element172,
																							expr: &seqExpr{
																								pos: position{line: 212, col: 49, offset: 7583},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 212, col: 49, offset: 7583},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 212, col: 58, offset: 7592},
																										expr: &litMatcher{
																											pos:        position{line: 212, col: 59, offset: 7593},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 212, col: 64, offset: 7598,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 216, col: 7, offset: 7688},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 247, col: 20, offset: 8646},
															run: (*parser).callonSection2Element182,
															expr: &seqExpr{
																pos: position{line: 247, col: 20, offset: 8646},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 247, col: 20, offset: 8646},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 24, offset: 8650},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonSection2Element186,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 247, col: 41, offset: 8667},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonSection2Element191,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 45, offset: 8671},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 49, offset: 8675},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 286, col: 16, offset: 9839},
																			run: (*parser).callonSection2Element195,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 286, col: 16, offset: 9839},
																				expr: &choiceExpr{
																					pos: position{line: 286, col: 17, offset: 9840},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection2Element198,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonSection2Element201,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection2Element205,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 286, col: 38, offset: 9861},
																							run: (*parser).callonSection2Element207,
																							expr: &seqExpr{
																								pos: position{line: 286, col: 39, offset: 9862},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 286, col: 39, offset: 9862},
																										expr: &choiceExpr{
																											pos: position{line: 1251, col: 8, offset: 48930},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																												&notExpr{
																													pos: position{line: 1249, col: 8, offset: 48919},
																													expr: &anyMatcher{
																														line: 1249, col: 9, offset: 48920,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 44, offset: 9867},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 45, offset: 9868},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 49, offset: 9872},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 50, offset: 9873},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 286, col: 55, offset: 9878,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 70, offset: 8696},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 74, offset: 8700},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 292, col: 15, offset: 9967},
																			run: (*parser).callonSection2Element222,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 292, col: 15, offset: 9967},
																				expr: &choiceExpr{
																					pos: position{line: 292, col: 16, offset: 9968},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection2Element225,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonSection2Element228,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection2Element232,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&seqExpr{
																							pos: position{line: 292, col: 38, offset: 9990},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 292, col: 38, offset: 9990},
																									expr: &choiceExpr{
																										pos: position{line: 1251, col: 8, offset: 48930},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1247, col: 12, offset: 48890},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1247, col: 21, offset: 48899},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																											&notExpr{
																												pos: position{line: 1249, col: 8, offset: 48919},
																												expr: &anyMatcher{
																													line: 1249, col: 9, offset: 48920,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 292, col: 43, offset: 9995},
																									expr: &litMatcher{
																										pos:        position{line: 292, col: 44, offset: 9996},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 292, col: 48, offset: 10000},
																									expr: &litMatcher{
																										pos:        position{line: 292, col: 49, offset: 10001},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 292, col: 54, offset: 10006,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 93, offset: 8719},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 251, col: 1, offset: 8846},
															run: (*parser).callonSection2Element247,
															expr: &seqExpr{
																pos: position{line: 251, col: 1, offset: 8846},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 251, col: 1, offset: 8846},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 251, col: 5, offset: 8850},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonSection2Element251,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 251, col: 22, offset: 8867},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonSection2Element256,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 251, col: 26, offset: 8871},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 251, col: 30, offset: 8875},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 286, col: 16, offset: 9839},
																			run: (*parser).callonSection2Element260,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 286, col: 16, offset: 9839},
																				expr: &choiceExpr{
																					pos: position{line: 286, col: 17, offset: 9840},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection2Element263,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonSection2Element266,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection2Element270,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 286, col: 38, offset: 9861},
																							run: (*parser).callonSection2Element272,
																							expr: &seqExpr{
																								pos: position{line: 286, col: 39, offset: 9862},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 286, col: 39, offset: 9862},
																										expr: &choiceExpr{
																											pos: position{line: 1251, col: 8, offset: 48930},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																												&notExpr{
																													pos: position{line: 1249, col: 8, offset: 48919},
																													expr: &anyMatcher{
																														line: 1249, col: 9, offset: 48920,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 44, offset: 9867},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 45, offset: 9868},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 49, offset: 9872},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 50, offset: 9873},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 286, col: 55, offset: 9878,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 251, col: 51, offset: 8896},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 255, col: 1, offset: 9011},
															run: (*parser).callonSection2Element286,
															expr: &seqExpr{
																pos: position{line: 255, col: 1, offset: 9011},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 255, col: 1, offset: 9011},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 255, col: 5, offset: 9015},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonSection2Element290,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 255, col: 22, offset: 9032},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonSection2Element295,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 255, col: 26, offset: 9036},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 263, col: 20, offset: 9179},
															run: (*parser).callonSection2Element298,
															expr: &seqExpr{
																pos: position{line: 263, col: 20, offset: 9179},
																exprs: []interface{}{
																	&labeledExpr{
																		pos:   position{line: 263, col: 20, offset: 9179},
																		label: "attribute",
																		expr: &choiceExpr{
																			pos: position{line: 263, col: 31, offset: 9190},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 263, col: 31, offset: 9190},
																					run: (*parser).callonSection2Element302,
																					expr: &seqExpr{
																						pos: position{line: 263, col: 31, offset: 9190},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 263, col: 31, offset: 9190},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 35, offset: 9194},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonSection2Element306,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 263, col: 52, offset: 9211},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection2Element311,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 56, offset: 9215},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 60, offset: 9219},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 286, col: 16, offset: 9839},
																									run: (*parser).callonSection2Element315,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 286, col: 16, offset: 9839},
																										expr: &choiceExpr{
																											pos: position{line: 286, col: 17, offset: 9840},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1205, col: 14, offset: 47940},
																													run: (*parser).callonSection2Element318,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1205, col: 14, offset: 47940},
																														expr: &charClassMatcher{
																															pos:        position{line: 1205, col: 14, offset: 47940},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1215, col: 11, offset: 48287},
																													run: (*parser).callonSection2Element321,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1215, col: 11, offset: 48287},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonSection2Element325,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 286, col: 38, offset: 9861},
																													run: (*parser).callonSection2Element327,
																													expr: &seqExpr{
																														pos: position{line: 286, col: 39, offset: 9862},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 286, col: 39, offset: 9862},
																																expr: &choiceExpr{
																																	pos: position{line: 1251, col: 8, offset: 48930},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1247, col: 12, offset: 48890},
																																			val:        "\r\n",
																																			ignoreCase: false,
																																		},
																																		&charClassMatcher{
																																			pos:        position{line: 1247, col: 21, offset: 48899},
																																			val:        "[\\r\\n]",
																																			chars:      []rune{'\r', '\n'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																		&notExpr{
																																			pos: position{line: 1249, col: 8, offset: 48919},
																																			expr: &anyMatcher{
																																				line: 1249, col: 9, offset: 48920,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 44, offset: 9867},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 45, offset: 9868},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 49, offset: 9872},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 50, offset: 9873},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 286, col: 55, offset: 9878,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 81, offset: 9240},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 85, offset: 9244},
																								label: "title",
																								expr: &actionExpr{
																									pos: position{line: 292, col: 15, offset: 9967},
																									run: (*parser).callonSection2Element342,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 292, col: 15, offset: 9967},
																										expr: &choiceExpr{
																											pos: position{line: 292, col: 16, offset: 9968},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1205, col: 14, offset: 47940},
																													run: (*parser).callonSection2Element345,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1205, col: 14, offset: 47940},
																														expr: &charClassMatcher{
																															pos:        position{line: 1205, col: 14, offset: 47940},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1215, col: 11, offset: 48287},
																													run: (*parser).callonSection2Element348,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1215, col: 11, offset: 48287},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonSection2Element352,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&seqExpr{
																													pos: position{line: 292, col: 38, offset: 9990},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 292, col: 38, offset: 9990},
																															expr: &choiceExpr{
																																pos: position{line: 1251, col: 8, offset: 48930},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1247, col: 12, offset: 48890},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1247, col: 21, offset: 48899},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																	&notExpr{
																																		pos: position{line: 1249, col: 8, offset: 48919},
																																		expr: &anyMatcher{
																																			line: 1249, col: 9, offset: 48920,
																																		},
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 292, col: 43, offset: 9995},
																															expr: &litMatcher{
																																pos:        position{line: 292, col: 44, offset: 9996},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 292, col: 48, offset: 10000},
																															expr: &litMatcher{
																																pos:        position{line: 292, col: 49, offset: 10001},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 292, col: 54, offset: 10006,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 104, offset: 9263},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 267, col: 5, offset: 9406},
																					run: (*parser).callonSection2Element367,
																					expr: &seqExpr{
																						pos: position{line: 267, col: 5, offset: 9406},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 267, col: 5, offset: 9406},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 267, col: 9, offset: 9410},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonSection2Element371,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 267, col: 26, offset: 9427},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection2Element376,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 267, col: 30, offset: 9431},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 267, col: 34, offset: 9435},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 286, col: 16, offset: 9839},
																									run: (*parser).callonSection2Element380,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 286, col: 16, offset: 9839},
																										expr: &choiceExpr{
																											pos: position{line: 286, col: 17, offset: 9840},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1205, col: 14, offset: 47940},
																													run: (*parser).callonSection2Element383,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1205, col: 14, offset: 47940},
																														expr: &charClassMatcher{
																															pos:        position{line: 1205, col: 14, offset: 47940},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1215, col: 11, offset: 48287},
																													run: (*parser).callonSection2Element386,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1215, col: 11, offset: 48287},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonSection2Element390,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 286, col: 38, offset: 9861},
																													run: (*parser).callonSection2Element392,
																													expr: &seqExpr{
																														pos: position{line: 286, col: 39, offset: 9862},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 286, col: 39, offset: 9862},
																																expr: &choiceExpr{
																																	pos: position{line: 1251, col: 8, offset: 48930},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1247, col: 12, offset: 48890},
																																			val:        "\r\n",
																																			ignoreCase: false,
																																		},
																																		&charClassMatcher{
																																			pos:        position{line: 1247, col: 21, offset: 48899},
																																			val:        "[\\r\\n]",
																																			chars:      []rune{'\r', '\n'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																		&notExpr{
																																			pos: position{line: 1249, col: 8, offset: 48919},
																																			expr: &anyMatcher{
																																				line: 1249, col: 9, offset: 48920,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 44, offset: 9867},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 45, offset: 9868},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 49, offset: 9872},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 50, offset: 9873},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 286, col: 55, offset: 9878,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 267, col: 55, offset: 9456},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 271, col: 5, offset: 9587},
																					run: (*parser).callonSection2Element406,
																					expr: &seqExpr{
																						pos: position{line: 271, col: 5, offset: 9587},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 271, col: 5, offset: 9587},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 271, col: 9, offset: 9591},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonSection2Element410,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 271, col: 26, offset: 9608},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection2Element415,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 271, col: 30, offset: 9612},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&stateCodeExpr{
																		pos: position{line: 275, col: 1, offset: 9688},
																		run: (*parser).callonSection2Element418,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 205, col: 30, offset: 7283},
															run: (*parser).callonSection2Element419,
															expr: &seqExpr{
																pos: position{line: 205, col: 30, offset: 7283},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 205, col: 30, offset: 7283},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 205, col: 34, offset: 7287},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 564, col: 19, offset: 20877},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 564, col: 19, offset: 20877},
																					run: (*parser).callonSection2Element424,
																					expr: &litMatcher{
																						pos:        position{line: 564, col: 19, offset: 20877},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 566, col: 9, offset: 20923},
																					run: (*parser).callonSection2Element426,
																					expr: &litMatcher{
																						pos:        position{line: 566, col: 9, offset: 20923},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 568, col: 9, offset: 20971},
																					run: (*parser).callonSection2Element428,
																					expr: &litMatcher{
																						pos:        position{line: 568, col: 9, offset: 20971},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 570, col: 9, offset: 21029},
																					run: (*parser).callonSection2Element430,
																					expr: &litMatcher{
																						pos:        position{line: 570, col: 9, offset: 21029},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 572, col: 9, offset: 21083},
																					run: (*parser).callonSection2Element432,
																					expr: &litMatcher{
																						pos:        position{line: 572, col: 9, offset: 21083},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 205, col: 53, offset: 7306},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 243, col: 21, offset: 8543},
															run: (*parser).callonSection2Element435,
															expr: &litMatcher{
																pos:        position{line: 243, col: 21, offset: 8543},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 221, col: 19, offset: 7839},
															run: (*parser).callonSection2Element437,
															expr: &seqExpr{
																pos: position{line: 221, col: 19, offset: 7839},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 221, col: 19, offset: 7839},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 221, col: 23, offset: 7843},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonSection2Element443,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 221, col: 27, offset: 7847},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 221, col: 38, offset: 7858},
																			expr: &choiceExpr{
																				pos: position{line: 225, col: 21, offset: 7971},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 225, col: 21, offset: 7971},
																						run: (*parser).callonSection2Element448,
																						expr: &seqExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 225, col: 21, offset: 7971},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										run: (*parser).callonSection2Element451,
																										expr: &seqExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9116},
																														run: (*parser).callonSection2Element454,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9116},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 28, offset: 8242},
																													expr: &actionExpr{
																														pos: position{line: 282, col: 14, offset: 9780},
																														run: (*parser).callonSection2Element457,
																														expr: &litMatcher{
																															pos:        position{line: 282, col: 14, offset: 9780},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 39, offset: 8253},
																													expr: &actionExpr{
																														pos: position{line: 1170, col: 16, offset: 47067},
																														run: (*parser).callonSection2Element460,
																														expr: &litMatcher{
																															pos:        position{line: 1170, col: 16, offset: 47067},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 231, col: 52, offset: 8266},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 231, col: 56, offset: 8270},
																														expr: &choiceExpr{
																															pos: position{line: 231, col: 57, offset: 8271},
																															alternatives: []interface{}{
																																&actionExpr{
																																	pos: position{line: 1205, col: 14, offset: 47940},
																																	run: (*parser).callonSection2Element465,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		expr: &charClassMatcher{
																																			pos:        position{line: 1205, col: 14, offset: 47940},
																																			val:        "[a-zA-Z0-9]",
																																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 1215, col: 11, offset: 48287},
																																	run: (*parser).callonSection2Element468,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		expr: &choiceExpr{
																																			pos: position{line: 1243, col: 7, offset: 48832},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1243, col: 7, offset: 48832},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 1243, col: 13, offset: 48838},
																																					run: (*parser).callonSection2Element472,
																																					expr: &litMatcher{
																																						pos:        position{line: 1243, col: 13, offset: 48838},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 231, col: 78, offset: 8292},
																																	run: (*parser).callonSection2Element474,
																																	expr: &seqExpr{
																																		pos: position{line: 231, col: 79, offset: 8293},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 231, col: 79, offset: 8293},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 80, offset: 8294},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 84, offset: 8298},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 85, offset: 8299},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 89, offset: 8303},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 90, offset: 8304},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 231, col: 95, offset: 8309,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 225, col: 40, offset: 7990},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 225, col: 44, offset: 7994},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 237, col: 19, offset: 8403},
																										run: (*parser).callonSection2Element485,
																										expr: &labeledExpr{
																											pos:   position{line: 237, col: 19, offset: 8403},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 237, col: 25, offset: 8409},
																												expr: &choiceExpr{
																													pos: position{line: 237, col: 26, offset: 8410},
																													alternatives: []interface{}{
																														&actionExpr{
																															pos: position{line: 1205, col: 14, offset: 47940},
																															run: (*parser).callonSection2Element489,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1205, col: 14, offset: 47940},
																																expr: &charClassMatcher{
																																	pos:        position{line: 1205, col: 14, offset: 47940},
																																	val:        "[a-zA-Z0-9]",
																																	ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 1215, col: 11, offset: 48287},
																															run: (*parser).callonSection2Element492,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1215, col: 11, offset: 48287},
																																expr: &choiceExpr{
																																	pos: position{line: 1243, col: 7, offset: 48832},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1243, col: 7, offset: 48832},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 1243, col: 13, offset: 48838},
																																			run: (*parser).callonSection2Element496,
																																			expr: &litMatcher{
																																				pos:        position{line: 1243, col: 13, offset: 48838},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 237, col: 47, offset: 8431},
																															run: (*parser).callonSection2Element498,
																															expr: &seqExpr{
																																pos: position{line: 237, col: 48, offset: 8432},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 237, col: 48, offset: 8432},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 49, offset: 8433},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 237, col: 53, offset: 8437},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 54, offset: 8438},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 237, col: 58, offset: 8442},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 59, offset: 8443},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 237, col: 64, offset: 8448,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 225, col: 67, offset: 8017},
																									expr: &litMatcher{
																										pos:        position{line: 225, col: 67, offset: 8017},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 225, col: 72, offset: 8022},
																									expr: &choiceExpr{
																										pos: position{line: 1243, col: 7, offset: 48832},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1243, col: 7, offset: 48832},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1243, col: 13, offset: 48838},
																												run: (*parser).callonSection2Element512,
																												expr: &litMatcher{
																													pos:        position{line: 1243, col: 13, offset: 48838},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 227, col: 5, offset: 8106},
																						run: (*parser).callonSection2Element514,
																						expr: &seqExpr{
																							pos: position{line: 227, col: 5, offset: 8106},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 227, col: 5, offset: 8106},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										run: (*parser).callonSection2Element517,
																										expr: &seqExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9116},
																														run: (*parser).callonSection2Element520,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9116},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 28, offset: 8242},
																													expr: &actionExpr{
																														pos: position{line: 282, col: 14, offset: 9780},
																														run: (*parser).callonSection2Element523,
																														expr: &litMatcher{
																															pos:        position{line: 282, col: 14, offset: 9780},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 39, offset: 8253},
																													expr: &actionExpr{
																														pos: position{line: 1170, col: 16, offset: 47067},
																														run: (*parser).callonSection2Element526,
																														expr: &litMatcher{
																															pos:        position{line: 1170, col: 16, offset: 47067},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 231, col: 52, offset: 8266},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 231, col: 56, offset: 8270},
																														expr: &choiceExpr{
																															pos: position{line: 231, col: 57, offset: 8271},
																															alternatives: []interface{}{
																																&actionExpr{
																																	pos: position{line: 1205, col: 14, offset: 47940},
																																	run: (*parser).callonSection2Element531,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		expr: &charClassMatcher{
																																			pos:        position{line: 1205, col: 14, offset: 47940},
																																			val:        "[a-zA-Z0-9]",
																																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 1215, col: 11, offset: 48287},
																																	run: (*parser).callonSection2Element534,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		expr: &choiceExpr{
																																			pos: position{line: 1243, col: 7, offset: 48832},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1243, col: 7, offset: 48832},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 1243, col: 13, offset: 48838},
																																					run: (*parser).callonSection2Element538,
																																					expr: &litMatcher{
																																						pos:        position{line: 1243, col: 13, offset: 48838},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 231, col: 78, offset: 8292},
																																	run: (*parser).callonSection2Element540,
																																	expr: &seqExpr{
																																		pos: position{line: 231, col: 79, offset: 8293},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 231, col: 79, offset: 8293},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 80, offset: 8294},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 84, offset: 8298},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 85, offset: 8299},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 89, offset: 8303},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 90, offset: 8304},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 231, col: 95, offset: 8309,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 227, col: 24, offset: 8125},
																									expr: &litMatcher{
																										pos:        position{line: 227, col: 24, offset: 8125},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 227, col: 29, offset: 8130},
																									expr: &choiceExpr{
																										pos: position{line: 1243, col: 7, offset: 48832},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1243, col: 7, offset: 48832},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1243, col: 13, offset: 48838},
																												run: (*parser).callonSection2Element554,
																												expr: &litMatcher{
																													pos:        position{line: 1243, col: 13, offset: 48838},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 221, col: 59, offset: 7879},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 165, col: 170, offset: 6018},
												expr: &choiceExpr{
													pos: position{line: 1243, col: 7, offset: 48832},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1243, col: 7, offset: 48832},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1243, col: 13, offset: 48838},
															run: (*parser).callonSection2Element560,
															expr: &litMatcher{
																pos:        position{line: 1243, col: 13, offset: 48838},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1251, col: 8, offset: 48930},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1247, col: 12, offset: 48890},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1247, col: 21, offset: 48899},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1249, col: 8, offset: 48919},
														expr: &anyMatcher{
															line: 1249, col: 9, offset: 48920,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 359, col: 5, offset: 12453},
							label: "element",
							expr: &choiceExpr{
								pos: position{line: 359, col: 14, offset: 12462},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 359, col: 14, offset: 12462},
										name: "Section3",
									},
									&ruleRefExpr{
										pos:  position{line: 359, col: 25, offset: 12473},
										name: "Section4",
									},
									&ruleRefExpr{
										pos:  position{line: 359, col: 36, offset: 12484},
										name: "Section5",
									},
									&ruleRefExpr{
										pos:  position{line: 359, col: 47, offset: 12495},
										name: "DocumentElement",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section3",
			pos:  position{line: 363, col: 1, offset: 12590},
			expr: &actionExpr{
				pos: position{line: 363, col: 13, offset: 12602},
				run: (*parser).callonSection31,
				expr: &seqExpr{
					pos: position{line: 363, col: 13, offset: 12602},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 363, col: 13, offset: 12602},
							expr: &notExpr{
								pos: position{line: 1249, col: 8, offset: 48919},
								expr: &anyMatcher{
									line: 1249, col: 9, offset: 48920,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 364, col: 5, offset: 12673},
							label: "header",
							expr: &ruleRefExpr{
								pos:  position{line: 364, col: 13, offset: 12681},
								name: "Section3Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 364, col: 28, offset: 12696},
							label: "elements",
							expr: &zeroOrMoreExpr{
								pos: position{line: 364, col: 38, offset: 12706},
								expr: &ruleRefExpr{
									pos:  position{line: 364, col: 38, offset: 12706},
									name: "Section3Element",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section3Title",
			pos:  position{line: 370, col: 1, offset: 12855},
			expr: &actionExpr{
				pos: position{line: 370, col: 18, offset: 12872},
				run: (*parser).callonSection3Title1,
				expr: &seqExpr{
					pos: position{line: 370, col: 18, offset: 12872},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 368, col: 24, offset: 12842},
							val:        "====",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 368, col: 31, offset: 12849},
							expr: &choiceExpr{
								pos: position{line: 1243, col: 7, offset: 48832},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1243, col: 7, offset: 48832},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1243, col: 13, offset: 48838},
										run: (*parser).callonSection3Title7,
										expr: &litMatcher{
											pos:        position{line: 1243, col: 13, offset: 48838},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 370, col: 38, offset: 12892},
							label: "elements",
							expr: &ruleRefExpr{
								pos:  position{line: 370, col: 48, offset: 12902},
								name: "TitleElements",
							},
						},
						&labeledExpr{
							pos:   position{line: 370, col: 63, offset: 12917},
							label: "id",
							expr: &zeroOrMoreExpr{
								pos: position{line: 370, col: 67, offset: 12921},
								expr: &actionExpr{
									pos: position{line: 180, col: 20, offset: 6467},
									run: (*parser).callonSection3Title13,
									expr: &seqExpr{
										pos: position{line: 180, col: 20, offset: 6467},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 180, col: 20, offset: 6467},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 180, col: 25, offset: 6472},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 1225, col: 7, offset: 48453},
													run: (*parser).callonSection3Title17,
													expr: &oneOrMoreExpr{
														pos: position{line: 1225, col: 7, offset: 48453},
														expr: &choiceExpr{
															pos: position{line: 1225, col: 8, offset: 48454},
															alternatives: []interface{}{
																&actionExpr{
																	pos: position{line: 1205, col: 14, offset: 47940},
																	run: (*parser).callonSection3Title20,
																	expr: &oneOrMoreExpr{
																		pos: position{line: 1205, col: 14, offset: 47940},
																		expr: &charClassMatcher{
																			pos:        position{line: 1205, col: 14, offset: 47940},
																			val:        "[a-zA-Z0-9]",
																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 1225, col: 20, offset: 48466},
																	run: (*parser).callonSection3Title23,
																	expr: &seqExpr{
																		pos: position{line: 1225, col: 21, offset: 48467},
																		exprs: []interface{}{
																			&notExpr{
																				pos: position{line: 1225, col: 21, offset: 48467},
																				expr: &choiceExpr{
																					pos: position{line: 1247, col: 12, offset: 48890},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1247, col: 12, offset: 48890},
																							val:        "\r\n",
																							ignoreCase: false,
																						},
																						&charClassMatcher{
																							pos:        position{line: 1247, col: 21, offset: 48899},
																							val:        "[\\r\\n]",
																							chars:      []rune{'\r', '\n'},
																							ignoreCase: false,
																							inverted:   false,
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 1225, col: 30, offset: 48476},
																				expr: &choiceExpr{
																					pos: position{line: 1243, col: 7, offset: 48832},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1243, col: 7, offset: 48832},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1243, col: 13, offset: 48838},
																							run: (*parser).callonSection3Title32,
																							expr: &litMatcher{
																								pos:        position{line: 1243, col: 13, offset: 48838},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 1225, col: 34, offset: 48480},
																				expr: &litMatcher{
																					pos:        position{line: 1225, col: 35, offset: 48481},
																					val:        "[",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1225, col: 39, offset: 48485},
																				expr: &litMatcher{
																					pos:        position{line: 1225, col: 40, offset: 48486},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1225, col: 44, offset: 48490},
																				expr: &litMatcher{
																					pos:        position{line: 1225, col: 45, offset: 48491},
																					val:        "<<",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1225, col: 50, offset: 48496},
																				expr: &litMatcher{
																					pos:        position{line: 1225, col: 51, offset: 48497},
																					val:        ">>",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1225, col: 56, offset: 48502},
																				expr: &litMatcher{
																					pos:        position{line: 1225, col: 57, offset: 48503},
																					val:        ",",
																					ignoreCase: false,
																				},
																			},
																			&anyMatcher{
																				line: 1225, col: 62, offset: 48508,
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 180, col: 33, offset: 6480},
												val:        "]]",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 180, col: 38, offset: 6485},
												expr: &choiceExpr{
													pos: position{line: 1243, col: 7, offset: 48832},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1243, col: 7, offset: 48832},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1243, col: 13, offset: 48838},
															run: (*parser).callonSection3Title49,
															expr: &litMatcher{
																pos:        position{line: 1243, col: 13, offset: 48838},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1251, col: 8, offset: 48930},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1247, col: 12, offset: 48890},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1247, col: 21, offset: 48899},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1249, col: 8, offset: 48919},
									expr: &anyMatcher{
										line: 1249, col: 9, offset: 48920,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section3Element",
			pos:  position{line: 374, col: 1, offset: 13041},
			expr: &actionExpr{
				pos: position{line: 374, col: 20, offset: 13060},
				run: (*parser).callonSection3Element1,
				expr: &seqExpr{
					pos: position{line: 374, col: 20, offset: 13060},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 374, col: 20, offset: 13060},
							expr: &seqExpr{
								pos: position{line: 334, col: 24, offset: 11480},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 334, col: 24, offset: 11480},
										val:        "==",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 334, col: 29, offset: 11485},
										expr: &choiceExpr{
											pos: position{line: 1243, col: 7, offset: 48832},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1243, col: 7, offset: 48832},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1243, col: 13, offset: 48838},
													run: (*parser).callonSection3Element9,
													expr: &litMatcher{
														pos:        position{line: 1243, col: 13, offset: 48838},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 374, col: 41, offset: 13081},
							expr: &seqExpr{
								pos: position{line: 351, col: 24, offset: 12153},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 351, col: 24, offset: 12153},
										val:        "===",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 351, col: 30, offset: 12159},
										expr: &choiceExpr{
											pos: position{line: 1243, col: 7, offset: 48832},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1243, col: 7, offset: 48832},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1243, col: 13, offset: 48838},
													run: (*parser).callonSection3Element17,
													expr: &litMatcher{
														pos:        position{line: 1243, col: 13, offset: 48838},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 374, col: 62, offset: 13102},
							expr: &seqExpr{
								pos: position{line: 368, col: 24, offset: 12842},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 368, col: 24, offset: 12842},
										val:        "====",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 368, col: 31, offset: 12849},
										expr: &choiceExpr{
											pos: position{line: 1243, col: 7, offset: 48832},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1243, col: 7, offset: 48832},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1243, col: 13, offset: 48838},
													run: (*parser).callonSection3Element25,
													expr: &litMatcher{
														pos:        position{line: 1243, col: 13, offset: 48838},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 375, col: 5, offset: 13127},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 375, col: 16, offset: 13138},
								expr: &actionExpr{
									pos: position{line: 164, col: 21, offset: 5763},
									run: (*parser).callonSection3Element29,
									expr: &seqExpr{
										pos: position{line: 164, col: 21, offset: 5763},
										exprs: []interface{}{
											&andExpr{
												pos: position{line: 164, col: 21, offset: 5763},
												expr: &charClassMatcher{
													pos:        position{line: 164, col: 23, offset: 5765},
													val:        "[[.#]",
													chars:      []rune{'[', '.', '#'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&labeledExpr{
												pos:   position{line: 165, col: 5, offset: 5853},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 165, col: 11, offset: 5859},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 174, col: 14, offset: 6316},
															run: (*parser).callonSection3Element35,
															expr: &seqExpr{
																pos: position{line: 174, col: 14, offset: 6316},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 174, col: 14, offset: 6316},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 174, col: 19, offset: 6321},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1225, col: 7, offset: 48453},
																			run: (*parser).callonSection3Element39,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1225, col: 7, offset: 48453},
																				expr: &choiceExpr{
																					pos: position{line: 1225, col: 8, offset: 48454},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection3Element42,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1225, col: 20, offset: 48466},
																							run: (*parser).callonSection3Element45,
																							expr: &seqExpr{
																								pos: position{line: 1225, col: 21, offset: 48467},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1225, col: 21, offset: 48467},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 30, offset: 48476},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonSection3Element54,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 34, offset: 48480},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 35, offset: 48481},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 39, offset: 48485},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 40, offset: 48486},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 44, offset: 48490},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 45, offset: 48491},
																											val:        "<<",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 50, offset: 48496},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 51, offset: 48497},
																											val:        ">>",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 56, offset: 48502},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 57, offset: 48503},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1225, col: 62, offset: 48508,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 174, col: 27, offset: 6329},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 5, offset: 6383},
															run: (*parser).callonSection3Element68,
															expr: &seqExpr{
																pos: position{line: 176, col: 5, offset: 6383},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 5, offset: 6383},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 10, offset: 6388},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1225, col: 7, offset: 48453},
																			run: (*parser).callonSection3Element72,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1225, col: 7, offset: 48453},
																				expr: &choiceExpr{
																					pos: position{line: 1225, col: 8, offset: 48454},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection3Element75,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1225, col: 20, offset: 48466},
																							run: (*parser).callonSection3Element78,
																							expr: &seqExpr{
																								pos: position{line: 1225, col: 21, offset: 48467},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1225, col: 21, offset: 48467},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 30, offset: 48476},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonSection3Element87,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 34, offset: 48480},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 35, offset: 48481},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 39, offset: 48485},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 40, offset: 48486},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 44, offset: 48490},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 45, offset: 48491},
																											val:        "<<",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 50, offset: 48496},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 51, offset: 48497},
																											val:        ">>",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 56, offset: 48502},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 57, offset: 48503},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1225, col: 62, offset: 48508,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 18, offset: 6396},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 186, col: 17, offset: 6699},
															run: (*parser).callonSection3Element101,
															expr: &seqExpr{
																pos: position{line: 186, col: 17, offset: 6699},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 186, col: 17, offset: 6699},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 186, col: 21, offset: 6703},
																		expr: &litMatcher{
																			pos:        position{line: 186, col: 22, offset: 6704},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 186, col: 26, offset: 6708},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonSection3Element109,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 186, col: 30, offset: 6712},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 186, col: 37, offset: 6719},
																			run: (*parser).callonSection3Element112,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 186, col: 37, offset: 6719},
																				expr: &choiceExpr{
																					pos: position{line: 186, col: 38, offset: 6720},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection3Element115,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonSection3Element118,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection3Element122,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 186, col: 59, offset: 6741},
																							run: (*parser).callonSection3Element124,
																							expr: &seqExpr{
																								pos: position{line: 186, col: 60, offset: 6742},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 186, col: 60, offset: 6742},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 186, col: 70, offset: 6752,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 196, col: 16, offset: 6990},
															run: (*parser).callonSection3Element131,
															expr: &seqExpr{
																pos: position{line: 196, col: 16, offset: 6990},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 196, col: 16, offset: 6990},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 196, col: 21, offset: 6995},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonSection3Element137,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 196, col: 25, offset: 6999},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 196, col: 31, offset: 7005},
																			run: (*parser).callonSection3Element140,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 196, col: 31, offset: 7005},
																				expr: &choiceExpr{
																					pos: position{line: 196, col: 32, offset: 7006},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection3Element143,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonSection3Element146,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection3Element150,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 196, col: 53, offset: 7027},
																							run: (*parser).callonSection3Element152,
																							expr: &seqExpr{
																								pos: position{line: 196, col: 54, offset: 7028},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 196, col: 54, offset: 7028},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 196, col: 63, offset: 7037},
																										expr: &litMatcher{
																											pos:        position{line: 196, col: 64, offset: 7038},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 196, col: 69, offset: 7043,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 200, col: 4, offset: 7118},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 210, col: 21, offset: 7481},
															run: (*parser).callonSection3Element162,
															expr: &litMatcher{
																pos:        position{line: 210, col: 21, offset: 7481},
																val:        "[source]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 212, col: 5, offset: 7539},
															run: (*parser).callonSection3Element164,
															expr: &seqExpr{
																pos: position{line: 212, col: 5, offset: 7539},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 212, col: 5, offset: 7539},
																		val:        "[source,",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 212, col: 16, offset: 7550},
																		label: "language",
																		expr: &actionExpr{
																			pos: position{line: 212, col: 26, offset: 7560},
																			run: (*parser).callonSection3Element168,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 212, col: 26, offset: 7560},
																				expr: &choiceExpr{
																					pos: position{line: 212, col: 27, offset: 7561},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection3Element171,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonSection3Element174,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection3Element178,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 212, col: 48, offset: 7582},
																							run: (*parser).callonSection3Element180,
																							expr: &seqExpr{
																								pos: position{line: 212, col: 49, offset: 7583},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 212, col: 49, offset: 7583},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 212, col: 58, offset: 7592},
																										expr: &litMatcher{
																											pos:        position{line: 212, col: 59, offset: 7593},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 212, col: 64, offset: 7598,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 216, col: 7, offset: 7688},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 247, col: 20, offset: 8646},
															run: (*parser).callonSection3Element190,
															expr: &seqExpr{
																pos: position{line: 247, col: 20, offset: 8646},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 247, col: 20, offset: 8646},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 24, offset: 8650},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonSection3Element194,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 247, col: 41, offset: 8667},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonSection3Element199,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 45, offset: 8671},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 49, offset: 8675},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 286, col: 16, offset: 9839},
																			run: (*parser).callonSection3Element203,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 286, col: 16, offset: 9839},
																				expr: &choiceExpr{
																					pos: position{line: 286, col: 17, offset: 9840},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection3Element206,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonSection3Element209,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection3Element213,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 286, col: 38, offset: 9861},
																							run: (*parser).callonSection3Element215,
																							expr: &seqExpr{
																								pos: position{line: 286, col: 39, offset: 9862},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 286, col: 39, offset: 9862},
																										expr: &choiceExpr{
																											pos: position{line: 1251, col: 8, offset: 48930},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																												&notExpr{
																													pos: position{line: 1249, col: 8, offset: 48919},
																													expr: &anyMatcher{
																														line: 1249, col: 9, offset: 48920,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 44, offset: 9867},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 45, offset: 9868},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 49, offset: 9872},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 50, offset: 9873},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 286, col: 55, offset: 9878,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 70, offset: 8696},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 74, offset: 8700},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 292, col: 15, offset: 9967},
																			run: (*parser).callonSection3Element230,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 292, col: 15, offset: 9967},
																				expr: &choiceExpr{
																					pos: position{line: 292, col: 16, offset: 9968},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection3Element233,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonSection3Element236,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection3Element240,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&seqExpr{
																							pos: position{line: 292, col: 38, offset: 9990},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 292, col: 38, offset: 9990},
																									expr: &choiceExpr{
																										pos: position{line: 1251, col: 8, offset: 48930},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1247, col: 12, offset: 48890},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1247, col: 21, offset: 48899},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																											&notExpr{
																												pos: position{line: 1249, col: 8, offset: 48919},
																												expr: &anyMatcher{
																													line: 1249, col: 9, offset: 48920,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 292, col: 43, offset: 9995},
																									expr: &litMatcher{
																										pos:        position{line: 292, col: 44, offset: 9996},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 292, col: 48, offset: 10000},
																									expr: &litMatcher{
																										pos:        position{line: 292, col: 49, offset: 10001},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 292, col: 54, offset: 10006,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 93, offset: 8719},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 251, col: 1, offset: 8846},
															run: (*parser).callonSection3Element255,
															expr: &seqExpr{
																pos: position{line: 251, col: 1, offset: 8846},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 251, col: 1, offset: 8846},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 251, col: 5, offset: 8850},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonSection3Element259,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 251, col: 22, offset: 8867},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonSection3Element264,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 251, col: 26, offset: 8871},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 251, col: 30, offset: 8875},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 286, col: 16, offset: 9839},
																			run: (*parser).callonSection3Element268,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 286, col: 16, offset: 9839},
																				expr: &choiceExpr{
																					pos: position{line: 286, col: 17, offset: 9840},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection3Element271,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonSection3Element274,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection3Element278,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 286, col: 38, offset: 9861},
																							run: (*parser).callonSection3Element280,
																							expr: &seqExpr{
																								pos: position{line: 286, col: 39, offset: 9862},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 286, col: 39, offset: 9862},
																										expr: &choiceExpr{
																											pos: position{line: 1251, col: 8, offset: 48930},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																												&notExpr{
																													pos: position{line: 1249, col: 8, offset: 48919},
																													expr: &anyMatcher{
																														line: 1249, col: 9, offset: 48920,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 44, offset: 9867},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 45, offset: 9868},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 49, offset: 9872},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 50, offset: 9873},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 286, col: 55, offset: 9878,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 251, col: 51, offset: 8896},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 255, col: 1, offset: 9011},
															run: (*parser).callonSection3Element294,
															expr: &seqExpr{
																pos: position{line: 255, col: 1, offset: 9011},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 255, col: 1, offset: 9011},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 255, col: 5, offset: 9015},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonSection3Element298,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 255, col: 22, offset: 9032},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonSection3Element303,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 255, col: 26, offset: 9036},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 263, col: 20, offset: 9179},
															run: (*parser).callonSection3Element306,
															expr: &seqExpr{
																pos: position{line: 263, col: 20, offset: 9179},
																exprs: []interface{}{
																	&labeledExpr{
																		pos:   position{line: 263, col: 20, offset: 9179},
																		label: "attribute",
																		expr: &choiceExpr{
																			pos: position{line: 263, col: 31, offset: 9190},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 263, col: 31, offset: 9190},
																					run: (*parser).callonSection3Element310,
																					expr: &seqExpr{
																						pos: position{line: 263, col: 31, offset: 9190},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 263, col: 31, offset: 9190},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 35, offset: 9194},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonSection3Element314,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 263, col: 52, offset: 9211},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection3Element319,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 56, offset: 9215},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 60, offset: 9219},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 286, col: 16, offset: 9839},
																									run: (*parser).callonSection3Element323,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 286, col: 16, offset: 9839},
																										expr: &choiceExpr{
																											pos: position{line: 286, col: 17, offset: 9840},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1205, col: 14, offset: 47940},
																													run: (*parser).callonSection3Element326,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1205, col: 14, offset: 47940},
																														expr: &charClassMatcher{
																															pos:        position{line: 1205, col: 14, offset: 47940},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1215, col: 11, offset: 48287},
																													run: (*parser).callonSection3Element329,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1215, col: 11, offset: 48287},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonSection3Element333,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 286, col: 38, offset: 9861},
																													run: (*parser).callonSection3Element335,
																													expr: &seqExpr{
																														pos: position{line: 286, col: 39, offset: 9862},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 286, col: 39, offset: 9862},
																																expr: &choiceExpr{
																																	pos: position{line: 1251, col: 8, offset: 48930},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1247, col: 12, offset: 48890},
																																			val:        "\r\n",
																																			ignoreCase: false,
																																		},
																																		&charClassMatcher{
																																			pos:        position{line: 1247, col: 21, offset: 48899},
																																			val:        "[\\r\\n]",
																																			chars:      []rune{'\r', '\n'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																		&notExpr{
																																			pos: position{line: 1249, col: 8, offset: 48919},
																																			expr: &anyMatcher{
																																				line: 1249, col: 9, offset: 48920,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 44, offset: 9867},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 45, offset: 9868},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 49, offset: 9872},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 50, offset: 9873},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 286, col: 55, offset: 9878,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 81, offset: 9240},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 85, offset: 9244},
																								label: "title",
																								expr: &actionExpr{
																									pos: position{line: 292, col: 15, offset: 9967},
																									run: (*parser).callonSection3Element350,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 292, col: 15, offset: 9967},
																										expr: &choiceExpr{
																											pos: position{line: 292, col: 16, offset: 9968},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1205, col: 14, offset: 47940},
																													run: (*parser).callonSection3Element353,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1205, col: 14, offset: 47940},
																														expr: &charClassMatcher{
																															pos:        position{line: 1205, col: 14, offset: 47940},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1215, col: 11, offset: 48287},
																													run: (*parser).callonSection3Element356,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1215, col: 11, offset: 48287},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonSection3Element360,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&seqExpr{
																													pos: position{line: 292, col: 38, offset: 9990},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 292, col: 38, offset: 9990},
																															expr: &choiceExpr{
																																pos: position{line: 1251, col: 8, offset: 48930},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1247, col: 12, offset: 48890},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1247, col: 21, offset: 48899},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																	&notExpr{
																																		pos: position{line: 1249, col: 8, offset: 48919},
																																		expr: &anyMatcher{
																																			line: 1249, col: 9, offset: 48920,
																																		},
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 292, col: 43, offset: 9995},
																															expr: &litMatcher{
																																pos:        position{line: 292, col: 44, offset: 9996},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 292, col: 48, offset: 10000},
																															expr: &litMatcher{
																																pos:        position{line: 292, col: 49, offset: 10001},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 292, col: 54, offset: 10006,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 104, offset: 9263},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 267, col: 5, offset: 9406},
																					run: (*parser).callonSection3Element375,
																					expr: &seqExpr{
																						pos: position{line: 267, col: 5, offset: 9406},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 267, col: 5, offset: 9406},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 267, col: 9, offset: 9410},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonSection3Element379,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 267, col: 26, offset: 9427},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection3Element384,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 267, col: 30, offset: 9431},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 267, col: 34, offset: 9435},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 286, col: 16, offset: 9839},
																									run: (*parser).callonSection3Element388,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 286, col: 16, offset: 9839},
																										expr: &choiceExpr{
																											pos: position{line: 286, col: 17, offset: 9840},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1205, col: 14, offset: 47940},
																													run: (*parser).callonSection3Element391,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1205, col: 14, offset: 47940},
																														expr: &charClassMatcher{
																															pos:        position{line: 1205, col: 14, offset: 47940},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1215, col: 11, offset: 48287},
																													run: (*parser).callonSection3Element394,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1215, col: 11, offset: 48287},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonSection3Element398,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 286, col: 38, offset: 9861},
																													run: (*parser).callonSection3Element400,
																													expr: &seqExpr{
																														pos: position{line: 286, col: 39, offset: 9862},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 286, col: 39, offset: 9862},
																																expr: &choiceExpr{
																																	pos: position{line: 1251, col: 8, offset: 48930},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1247, col: 12, offset: 48890},
																																			val:        "\r\n",
																																			ignoreCase: false,
																																		},
																																		&charClassMatcher{
																																			pos:        position{line: 1247, col: 21, offset: 48899},
																																			val:        "[\\r\\n]",
																																			chars:      []rune{'\r', '\n'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																		&notExpr{
																																			pos: position{line: 1249, col: 8, offset: 48919},
																																			expr: &anyMatcher{
																																				line: 1249, col: 9, offset: 48920,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 44, offset: 9867},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 45, offset: 9868},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 49, offset: 9872},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 50, offset: 9873},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 286, col: 55, offset: 9878,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 267, col: 55, offset: 9456},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 271, col: 5, offset: 9587},
																					run: (*parser).callonSection3Element414,
																					expr: &seqExpr{
																						pos: position{line: 271, col: 5, offset: 9587},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 271, col: 5, offset: 9587},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 271, col: 9, offset: 9591},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonSection3Element418,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 271, col: 26, offset: 9608},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection3Element423,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 271, col: 30, offset: 9612},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&stateCodeExpr{
																		pos: position{line: 275, col: 1, offset: 9688},
																		run: (*parser).callonSection3Element426,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 205, col: 30, offset: 7283},
															run: (*parser).callonSection3Element427,
															expr: &seqExpr{
																pos: position{line: 205, col: 30, offset: 7283},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 205, col: 30, offset: 7283},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 205, col: 34, offset: 7287},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 564, col: 19, offset: 20877},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 564, col: 19, offset: 20877},
																					run: (*parser).callonSection3Element432,
																					expr: &litMatcher{
																						pos:        position{line: 564, col: 19, offset: 20877},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 566, col: 9, offset: 20923},
																					run: (*parser).callonSection3Element434,
																					expr: &litMatcher{
																						pos:        position{line: 566, col: 9, offset: 20923},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 568, col: 9, offset: 20971},
																					run: (*parser).callonSection3Element436,
																					expr: &litMatcher{
																						pos:        position{line: 568, col: 9, offset: 20971},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 570, col: 9, offset: 21029},
																					run: (*parser).callonSection3Element438,
																					expr: &litMatcher{
																						pos:        position{line: 570, col: 9, offset: 21029},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 572, col: 9, offset: 21083},
																					run: (*parser).callonSection3Element440,
																					expr: &litMatcher{
																						pos:        position{line: 572, col: 9, offset: 21083},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 205, col: 53, offset: 7306},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 243, col: 21, offset: 8543},
															run: (*parser).callonSection3Element443,
															expr: &litMatcher{
																pos:        position{line: 243, col: 21, offset: 8543},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 221, col: 19, offset: 7839},
															run: (*parser).callonSection3Element445,
															expr: &seqExpr{
																pos: position{line: 221, col: 19, offset: 7839},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 221, col: 19, offset: 7839},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 221, col: 23, offset: 7843},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonSection3Element451,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 221, col: 27, offset: 7847},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 221, col: 38, offset: 7858},
																			expr: &choiceExpr{
																				pos: position{line: 225, col: 21, offset: 7971},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 225, col: 21, offset: 7971},
																						run: (*parser).callonSection3Element456,
																						expr: &seqExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 225, col: 21, offset: 7971},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										run: (*parser).callonSection3Element459,
																										expr: &seqExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9116},
																														run: (*parser).callonSection3Element462,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9116},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 28, offset: 8242},
																													expr: &actionExpr{
																														pos: position{line: 282, col: 14, offset: 9780},
																														run: (*parser).callonSection3Element465,
																														expr: &litMatcher{
																															pos:        position{line: 282, col: 14, offset: 9780},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 39, offset: 8253},
																													expr: &actionExpr{
																														pos: position{line: 1170, col: 16, offset: 47067},
																														run: (*parser).callonSection3Element468,
																														expr: &litMatcher{
																															pos:        position{line: 1170, col: 16, offset: 47067},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 231, col: 52, offset: 8266},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 231, col: 56, offset: 8270},
																														expr: &choiceExpr{
																															pos: position{line: 231, col: 57, offset: 8271},
																															alternatives: []interface{}{
																																&actionExpr{
																																	pos: position{line: 1205, col: 14, offset: 47940},
																																	run: (*parser).callonSection3Element473,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		expr: &charClassMatcher{
																																			pos:        position{line: 1205, col: 14, offset: 47940},
																																			val:        "[a-zA-Z0-9]",
																																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 1215, col: 11, offset: 48287},
																																	run: (*parser).callonSection3Element476,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		expr: &choiceExpr{
																																			pos: position{line: 1243, col: 7, offset: 48832},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1243, col: 7, offset: 48832},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 1243, col: 13, offset: 48838},
																																					run: (*parser).callonSection3Element480,
																																					expr: &litMatcher{
																																						pos:        position{line: 1243, col: 13, offset: 48838},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 231, col: 78, offset: 8292},
																																	run: (*parser).callonSection3Element482,
																																	expr: &seqExpr{
																																		pos: position{line: 231, col: 79, offset: 8293},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 231, col: 79, offset: 8293},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 80, offset: 8294},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 84, offset: 8298},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 85, offset: 8299},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 89, offset: 8303},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 90, offset: 8304},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 231, col: 95, offset: 8309,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 225, col: 40, offset: 7990},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 225, col: 44, offset: 7994},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 237, col: 19, offset: 8403},
																										run: (*parser).callonSection3Element493,
																										expr: &labeledExpr{
																											pos:   position{line: 237, col: 19, offset: 8403},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 237, col: 25, offset: 8409},
																												expr: &choiceExpr{
																													pos: position{line: 237, col: 26, offset: 8410},
																													alternatives: []interface{}{
																														&actionExpr{
																															pos: position{line: 1205, col: 14, offset: 47940},
																															run: (*parser).callonSection3Element497,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1205, col: 14, offset: 47940},
																																expr: &charClassMatcher{
																																	pos:        position{line: 1205, col: 14, offset: 47940},
																																	val:        "[a-zA-Z0-9]",
																																	ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 1215, col: 11, offset: 48287},
																															run: (*parser).callonSection3Element500,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1215, col: 11, offset: 48287},
																																expr: &choiceExpr{
																																	pos: position{line: 1243, col: 7, offset: 48832},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1243, col: 7, offset: 48832},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 1243, col: 13, offset: 48838},
																																			run: (*parser).callonSection3Element504,
																																			expr: &litMatcher{
																																				pos:        position{line: 1243, col: 13, offset: 48838},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 237, col: 47, offset: 8431},
																															run: (*parser).callonSection3Element506,
																															expr: &seqExpr{
																																pos: position{line: 237, col: 48, offset: 8432},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 237, col: 48, offset: 8432},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 49, offset: 8433},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 237, col: 53, offset: 8437},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 54, offset: 8438},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 237, col: 58, offset: 8442},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 59, offset: 8443},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 237, col: 64, offset: 8448,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 225, col: 67, offset: 8017},
																									expr: &litMatcher{
																										pos:        position{line: 225, col: 67, offset: 8017},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 225, col: 72, offset: 8022},
																									expr: &choiceExpr{
																										pos: position{line: 1243, col: 7, offset: 48832},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1243, col: 7, offset: 48832},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1243, col: 13, offset: 48838},
																												run: (*parser).callonSection3Element520,
																												expr: &litMatcher{
																													pos:        position{line: 1243, col: 13, offset: 48838},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 227, col: 5, offset: 8106},
																						run: (*parser).callonSection3Element522,
																						expr: &seqExpr{
																							pos: position{line: 227, col: 5, offset: 8106},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 227, col: 5, offset: 8106},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										run: (*parser).callonSection3Element525,
																										expr: &seqExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9116},
																														run: (*parser).callonSection3Element528,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9116},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 28, offset: 8242},
																													expr: &actionExpr{
																														pos: position{line: 282, col: 14, offset: 9780},
																														run: (*parser).callonSection3Element531,
																														expr: &litMatcher{
																															pos:        position{line: 282, col: 14, offset: 9780},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 39, offset: 8253},
																													expr: &actionExpr{
																														pos: position{line: 1170, col: 16, offset: 47067},
																														run: (*parser).callonSection3Element534,
																														expr: &litMatcher{
																															pos:        position{line: 1170, col: 16, offset: 47067},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 231, col: 52, offset: 8266},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 231, col: 56, offset: 8270},
																														expr: &choiceExpr{
																															pos: position{line: 231, col: 57, offset: 8271},
																															alternatives: []interface{}{
																																&actionExpr{
																																	pos: position{line: 1205, col: 14, offset: 47940},
																																	run: (*parser).callonSection3Element539,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		expr: &charClassMatcher{
																																			pos:        position{line: 1205, col: 14, offset: 47940},
																																			val:        "[a-zA-Z0-9]",
																																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 1215, col: 11, offset: 48287},
																																	run: (*parser).callonSection3Element542,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		expr: &choiceExpr{
																																			pos: position{line: 1243, col: 7, offset: 48832},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1243, col: 7, offset: 48832},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 1243, col: 13, offset: 48838},
																																					run: (*parser).callonSection3Element546,
																																					expr: &litMatcher{
																																						pos:        position{line: 1243, col: 13, offset: 48838},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 231, col: 78, offset: 8292},
																																	run: (*parser).callonSection3Element548,
																																	expr: &seqExpr{
																																		pos: position{line: 231, col: 79, offset: 8293},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 231, col: 79, offset: 8293},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 80, offset: 8294},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 84, offset: 8298},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 85, offset: 8299},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 89, offset: 8303},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 90, offset: 8304},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 231, col: 95, offset: 8309,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 227, col: 24, offset: 8125},
																									expr: &litMatcher{
																										pos:        position{line: 227, col: 24, offset: 8125},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 227, col: 29, offset: 8130},
																									expr: &choiceExpr{
																										pos: position{line: 1243, col: 7, offset: 48832},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1243, col: 7, offset: 48832},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1243, col: 13, offset: 48838},
																												run: (*parser).callonSection3Element562,
																												expr: &litMatcher{
																													pos:        position{line: 1243, col: 13, offset: 48838},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 221, col: 59, offset: 7879},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 165, col: 170, offset: 6018},
												expr: &choiceExpr{
													pos: position{line: 1243, col: 7, offset: 48832},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1243, col: 7, offset: 48832},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1243, col: 13, offset: 48838},
															run: (*parser).callonSection3Element568,
															expr: &litMatcher{
																pos:        position{line: 1243, col: 13, offset: 48838},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1251, col: 8, offset: 48930},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1247, col: 12, offset: 48890},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1247, col: 21, offset: 48899},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1249, col: 8, offset: 48919},
														expr: &anyMatcher{
															line: 1249, col: 9, offset: 48920,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 376, col: 5, offset: 13163},
							label: "element",
							expr: &choiceExpr{
								pos: position{line: 376, col: 14, offset: 13172},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 376, col: 14, offset: 13172},
										name: "Section4",
									},
									&ruleRefExpr{
										pos:  position{line: 376, col: 25, offset: 13183},
										name: "Section5",
									},
									&ruleRefExpr{
										pos:  position{line: 376, col: 36, offset: 13194},
										name: "DocumentElement",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section4",
			pos:  position{line: 380, col: 1, offset: 13289},
			expr: &actionExpr{
				pos: position{line: 380, col: 13, offset: 13301},
				run: (*parser).callonSection41,
				expr: &seqExpr{
					pos: position{line: 380, col: 13, offset: 13301},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 380, col: 13, offset: 13301},
							expr: &notExpr{
								pos: position{line: 1249, col: 8, offset: 48919},
								expr: &anyMatcher{
									line: 1249, col: 9, offset: 48920,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 381, col: 5, offset: 13372},
							label: "header",
							expr: &ruleRefExpr{
								pos:  position{line: 381, col: 13, offset: 13380},
								name: "Section4Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 381, col: 28, offset: 13395},
							label: "elements",
							expr: &zeroOrMoreExpr{
								pos: position{line: 381, col: 38, offset: 13405},
								expr: &ruleRefExpr{
									pos:  position{line: 381, col: 38, offset: 13405},
									name: "Section4Element",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section4Title",
			pos:  position{line: 387, col: 1, offset: 13555},
			expr: &actionExpr{
				pos: position{line: 387, col: 18, offset: 13572},
				run: (*parser).callonSection4Title1,
				expr: &seqExpr{
					pos: position{line: 387, col: 18, offset: 13572},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 385, col: 24, offset: 13541},
							val:        "=====",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 385, col: 32, offset: 13549},
							expr: &choiceExpr{
								pos: position{line: 1243, col: 7, offset: 48832},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1243, col: 7, offset: 48832},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1243, col: 13, offset: 48838},
										run: (*parser).callonSection4Title7,
										expr: &litMatcher{
											pos:        position{line: 1243, col: 13, offset: 48838},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 387, col: 38, offset: 13592},
							label: "elements",
							expr: &ruleRefExpr{
								pos:  position{line: 387, col: 48, offset: 13602},
								name: "TitleElements",
							},
						},
						&labeledExpr{
							pos:   position{line: 387, col: 63, offset: 13617},
							label: "id",
							expr: &zeroOrMoreExpr{
								pos: position{line: 387, col: 67, offset: 13621},
								expr: &actionExpr{
									pos: position{line: 180, col: 20, offset: 6467},
									run: (*parser).callonSection4Title13,
									expr: &seqExpr{
										pos: position{line: 180, col: 20, offset: 6467},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 180, col: 20, offset: 6467},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 180, col: 25, offset: 6472},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 1225, col: 7, offset: 48453},
													run: (*parser).callonSection4Title17,
													expr: &oneOrMoreExpr{
														pos: position{line: 1225, col: 7, offset: 48453},
														expr: &choiceExpr{
															pos: position{line: 1225, col: 8, offset: 48454},
															alternatives: []interface{}{
																&actionExpr{
																	pos: position{line: 1205, col: 14, offset: 47940},
																	run: (*parser).callonSection4Title20,
																	expr: &oneOrMoreExpr{
																		pos: position{line: 1205, col: 14, offset: 47940},
																		expr: &charClassMatcher{
																			pos:        position{line: 1205, col: 14, offset: 47940},
																			val:        "[a-zA-Z0-9]",
																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 1225, col: 20, offset: 48466},
																	run: (*parser).callonSection4Title23,
																	expr: &seqExpr{
																		pos: position{line: 1225, col: 21, offset: 48467},
																		exprs: []interface{}{
																			&notExpr{
																				pos: position{line: 1225, col: 21, offset: 48467},
																				expr: &choiceExpr{
																					pos: position{line: 1247, col: 12, offset: 48890},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1247, col: 12, offset: 48890},
																							val:        "\r\n",
																							ignoreCase: false,
																						},
																						&charClassMatcher{
																							pos:        position{line: 1247, col: 21, offset: 48899},
																							val:        "[\\r\\n]",
																							chars:      []rune{'\r', '\n'},
																							ignoreCase: false,
																							inverted:   false,
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 1225, col: 30, offset: 48476},
																				expr: &choiceExpr{
																					pos: position{line: 1243, col: 7, offset: 48832},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1243, col: 7, offset: 48832},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1243, col: 13, offset: 48838},
																							run: (*parser).callonSection4Title32,
																							expr: &litMatcher{
																								pos:        position{line: 1243, col: 13, offset: 48838},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 1225, col: 34, offset: 48480},
																				expr: &litMatcher{
																					pos:        position{line: 1225, col: 35, offset: 48481},
																					val:        "[",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1225, col: 39, offset: 48485},
																				expr: &litMatcher{
																					pos:        position{line: 1225, col: 40, offset: 48486},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1225, col: 44, offset: 48490},
																				expr: &litMatcher{
																					pos:        position{line: 1225, col: 45, offset: 48491},
																					val:        "<<",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1225, col: 50, offset: 48496},
																				expr: &litMatcher{
																					pos:        position{line: 1225, col: 51, offset: 48497},
																					val:        ">>",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1225, col: 56, offset: 48502},
																				expr: &litMatcher{
																					pos:        position{line: 1225, col: 57, offset: 48503},
																					val:        ",",
																					ignoreCase: false,
																				},
																			},
																			&anyMatcher{
																				line: 1225, col: 62, offset: 48508,
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 180, col: 33, offset: 6480},
												val:        "]]",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 180, col: 38, offset: 6485},
												expr: &choiceExpr{
													pos: position{line: 1243, col: 7, offset: 48832},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1243, col: 7, offset: 48832},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1243, col: 13, offset: 48838},
															run: (*parser).callonSection4Title49,
															expr: &litMatcher{
																pos:        position{line: 1243, col: 13, offset: 48838},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1251, col: 8, offset: 48930},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1247, col: 12, offset: 48890},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1247, col: 21, offset: 48899},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1249, col: 8, offset: 48919},
									expr: &anyMatcher{
										line: 1249, col: 9, offset: 48920,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section4Element",
			pos:  position{line: 391, col: 1, offset: 13736},
			expr: &actionExpr{
				pos: position{line: 391, col: 20, offset: 13755},
				run: (*parser).callonSection4Element1,
				expr: &seqExpr{
					pos: position{line: 391, col: 20, offset: 13755},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 391, col: 20, offset: 13755},
							expr: &seqExpr{
								pos: position{line: 334, col: 24, offset: 11480},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 334, col: 24, offset: 11480},
										val:        "==",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 334, col: 29, offset: 11485},
										expr: &choiceExpr{
											pos: position{line: 1243, col: 7, offset: 48832},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1243, col: 7, offset: 48832},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1243, col: 13, offset: 48838},
													run: (*parser).callonSection4Element9,
													expr: &litMatcher{
														pos:        position{line: 1243, col: 13, offset: 48838},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 391, col: 41, offset: 13776},
							expr: &seqExpr{
								pos: position{line: 351, col: 24, offset: 12153},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 351, col: 24, offset: 12153},
										val:        "===",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 351, col: 30, offset: 12159},
										expr: &choiceExpr{
											pos: position{line: 1243, col: 7, offset: 48832},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1243, col: 7, offset: 48832},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1243, col: 13, offset: 48838},
													run: (*parser).callonSection4Element17,
													expr: &litMatcher{
														pos:        position{line: 1243, col: 13, offset: 48838},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 391, col: 62, offset: 13797},
							expr: &seqExpr{
								pos: position{line: 368, col: 24, offset: 12842},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 368, col: 24, offset: 12842},
										val:        "====",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 368, col: 31, offset: 12849},
										expr: &choiceExpr{
											pos: position{line: 1243, col: 7, offset: 48832},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1243, col: 7, offset: 48832},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1243, col: 13, offset: 48838},
													run: (*parser).callonSection4Element25,
													expr: &litMatcher{
														pos:        position{line: 1243, col: 13, offset: 48838},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 391, col: 83, offset: 13818},
							expr: &seqExpr{
								pos: position{line: 385, col: 24, offset: 13541},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 385, col: 24, offset: 13541},
										val:        "=====",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 385, col: 32, offset: 13549},
										expr: &choiceExpr{
											pos: position{line: 1243, col: 7, offset: 48832},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1243, col: 7, offset: 48832},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1243, col: 13, offset: 48838},
													run: (*parser).callonSection4Element33,
													expr: &litMatcher{
														pos:        position{line: 1243, col: 13, offset: 48838},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 392, col: 5, offset: 13843},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 392, col: 16, offset: 13854},
								expr: &actionExpr{
									pos: position{line: 164, col: 21, offset: 5763},
									run: (*parser).callonSection4Element37,
									expr: &seqExpr{
										pos: position{line: 164, col: 21, offset: 5763},
										exprs: []interface{}{
											&andExpr{
												pos: position{line: 164, col: 21, offset: 5763},
												expr: &charClassMatcher{
													pos:        position{line: 164, col: 23, offset: 5765},
													val:        "[[.#]",
													chars:      []rune{'[', '.', '#'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&labeledExpr{
												pos:   position{line: 165, col: 5, offset: 5853},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 165, col: 11, offset: 5859},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 174, col: 14, offset: 6316},
															run: (*parser).callonSection4Element43,
															expr: &seqExpr{
																pos: position{line: 174, col: 14, offset: 6316},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 174, col: 14, offset: 6316},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 174, col: 19, offset: 6321},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1225, col: 7, offset: 48453},
																			run: (*parser).callonSection4Element47,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1225, col: 7, offset: 48453},
																				expr: &choiceExpr{
																					pos: position{line: 1225, col: 8, offset: 48454},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection4Element50,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1225, col: 20, offset: 48466},
																							run: (*parser).callonSection4Element53,
																							expr: &seqExpr{
																								pos: position{line: 1225, col: 21, offset: 48467},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1225, col: 21, offset: 48467},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 30, offset: 48476},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonSection4Element62,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 34, offset: 48480},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 35, offset: 48481},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 39, offset: 48485},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 40, offset: 48486},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 44, offset: 48490},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 45, offset: 48491},
																											val:        "<<",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 50, offset: 48496},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 51, offset: 48497},
																											val:        ">>",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 56, offset: 48502},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 57, offset: 48503},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1225, col: 62, offset: 48508,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 174, col: 27, offset: 6329},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 5, offset: 6383},
															run: (*parser).callonSection4Element76,
															expr: &seqExpr{
																pos: position{line: 176, col: 5, offset: 6383},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 5, offset: 6383},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 10, offset: 6388},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1225, col: 7, offset: 48453},
																			run: (*parser).callonSection4Element80,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1225, col: 7, offset: 48453},
																				expr: &choiceExpr{
																					pos: position{line: 1225, col: 8, offset: 48454},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection4Element83,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1225, col: 20, offset: 48466},
																							run: (*parser).callonSection4Element86,
																							expr: &seqExpr{
																								pos: position{line: 1225, col: 21, offset: 48467},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1225, col: 21, offset: 48467},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 30, offset: 48476},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonSection4Element95,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 34, offset: 48480},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 35, offset: 48481},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 39, offset: 48485},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 40, offset: 48486},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 44, offset: 48490},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 45, offset: 48491},
																											val:        "<<",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 50, offset: 48496},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 51, offset: 48497},
																											val:        ">>",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 56, offset: 48502},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 57, offset: 48503},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1225, col: 62, offset: 48508,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 18, offset: 6396},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 186, col: 17, offset: 6699},
															run: (*parser).callonSection4Element109,
															expr: &seqExpr{
																pos: position{line: 186, col: 17, offset: 6699},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 186, col: 17, offset: 6699},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 186, col: 21, offset: 6703},
																		expr: &litMatcher{
																			pos:        position{line: 186, col: 22, offset: 6704},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 186, col: 26, offset: 6708},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonSection4Element117,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 186, col: 30, offset: 6712},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 186, col: 37, offset: 6719},
																			run: (*parser).callonSection4Element120,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 186, col: 37, offset: 6719},
																				expr: &choiceExpr{
																					pos: position{line: 186, col: 38, offset: 6720},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection4Element123,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonSection4Element126,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection4Element130,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 186, col: 59, offset: 6741},
																							run: (*parser).callonSection4Element132,
																							expr: &seqExpr{
																								pos: position{line: 186, col: 60, offset: 6742},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 186, col: 60, offset: 6742},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 186, col: 70, offset: 6752,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 196, col: 16, offset: 6990},
															run: (*parser).callonSection4Element139,
															expr: &seqExpr{
																pos: position{line: 196, col: 16, offset: 6990},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 196, col: 16, offset: 6990},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 196, col: 21, offset: 6995},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonSection4Element145,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 196, col: 25, offset: 6999},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 196, col: 31, offset: 7005},
																			run: (*parser).callonSection4Element148,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 196, col: 31, offset: 7005},
																				expr: &choiceExpr{
																					pos: position{line: 196, col: 32, offset: 7006},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection4Element151,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonSection4Element154,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection4Element158,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 196, col: 53, offset: 7027},
																							run: (*parser).callonSection4Element160,
																							expr: &seqExpr{
																								pos: position{line: 196, col: 54, offset: 7028},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 196, col: 54, offset: 7028},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 196, col: 63, offset: 7037},
																										expr: &litMatcher{
																											pos:        position{line: 196, col: 64, offset: 7038},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 196, col: 69, offset: 7043,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 200, col: 4, offset: 7118},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 210, col: 21, offset: 7481},
															run: (*parser).callonSection4Element170,
															expr: &litMatcher{
																pos:        position{line: 210, col: 21, offset: 7481},
																val:        "[source]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 212, col: 5, offset: 7539},
															run: (*parser).callonSection4Element172,
															expr: &seqExpr{
																pos: position{line: 212, col: 5, offset: 7539},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 212, col: 5, offset: 7539},
																		val:        "[source,",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 212, col: 16, offset: 7550},
																		label: "language",
																		expr: &actionExpr{
																			pos: position{line: 212, col: 26, offset: 7560},
																			run: (*parser).callonSection4Element176,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 212, col: 26, offset: 7560},
																				expr: &choiceExpr{
																					pos: position{line: 212, col: 27, offset: 7561},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection4Element179,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonSection4Element182,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection4Element186,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 212, col: 48, offset: 7582},
																							run: (*parser).callonSection4Element188,
																							expr: &seqExpr{
																								pos: position{line: 212, col: 49, offset: 7583},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 212, col: 49, offset: 7583},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 212, col: 58, offset: 7592},
																										expr: &litMatcher{
																											pos:        position{line: 212, col: 59, offset: 7593},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 212, col: 64, offset: 7598,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 216, col: 7, offset: 7688},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 247, col: 20, offset: 8646},
															run: (*parser).callonSection4Element198,
															expr: &seqExpr{
																pos: position{line: 247, col: 20, offset: 8646},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 247, col: 20, offset: 8646},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 24, offset: 8650},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonSection4Element202,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 247, col: 41, offset: 8667},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonSection4Element207,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 45, offset: 8671},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 49, offset: 8675},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 286, col: 16, offset: 9839},
																			run: (*parser).callonSection4Element211,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 286, col: 16, offset: 9839},
																				expr: &choiceExpr{
																					pos: position{line: 286, col: 17, offset: 9840},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection4Element214,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonSection4Element217,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection4Element221,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 286, col: 38, offset: 9861},
																							run: (*parser).callonSection4Element223,
																							expr: &seqExpr{
																								pos: position{line: 286, col: 39, offset: 9862},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 286, col: 39, offset: 9862},
																										expr: &choiceExpr{
																											pos: position{line: 1251, col: 8, offset: 48930},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																												&notExpr{
																													pos: position{line: 1249, col: 8, offset: 48919},
																													expr: &anyMatcher{
																														line: 1249, col: 9, offset: 48920,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 44, offset: 9867},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 45, offset: 9868},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 49, offset: 9872},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 50, offset: 9873},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 286, col: 55, offset: 9878,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 70, offset: 8696},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 74, offset: 8700},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 292, col: 15, offset: 9967},
																			run: (*parser).callonSection4Element238,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 292, col: 15, offset: 9967},
																				expr: &choiceExpr{
																					pos: position{line: 292, col: 16, offset: 9968},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection4Element241,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonSection4Element244,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection4Element248,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&seqExpr{
																							pos: position{line: 292, col: 38, offset: 9990},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 292, col: 38, offset: 9990},
																									expr: &choiceExpr{
																										pos: position{line: 1251, col: 8, offset: 48930},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1247, col: 12, offset: 48890},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1247, col: 21, offset: 48899},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																											&notExpr{
																												pos: position{line: 1249, col: 8, offset: 48919},
																												expr: &anyMatcher{
																													line: 1249, col: 9, offset: 48920,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 292, col: 43, offset: 9995},
																									expr: &litMatcher{
																										pos:        position{line: 292, col: 44, offset: 9996},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 292, col: 48, offset: 10000},
																									expr: &litMatcher{
																										pos:        position{line: 292, col: 49, offset: 10001},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 292, col: 54, offset: 10006,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 93, offset: 8719},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 251, col: 1, offset: 8846},
															run: (*parser).callonSection4Element263,
															expr: &seqExpr{
																pos: position{line: 251, col: 1, offset: 8846},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 251, col: 1, offset: 8846},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 251, col: 5, offset: 8850},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonSection4Element267,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 251, col: 22, offset: 8867},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonSection4Element272,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 251, col: 26, offset: 8871},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 251, col: 30, offset: 8875},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 286, col: 16, offset: 9839},
																			run: (*parser).callonSection4Element276,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 286, col: 16, offset: 9839},
																				expr: &choiceExpr{
																					pos: position{line: 286, col: 17, offset: 9840},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection4Element279,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonSection4Element282,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection4Element286,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 286, col: 38, offset: 9861},
																							run: (*parser).callonSection4Element288,
																							expr: &seqExpr{
																								pos: position{line: 286, col: 39, offset: 9862},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 286, col: 39, offset: 9862},
																										expr: &choiceExpr{
																											pos: position{line: 1251, col: 8, offset: 48930},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																												&notExpr{
																													pos: position{line: 1249, col: 8, offset: 48919},
																													expr: &anyMatcher{
																														line: 1249, col: 9, offset: 48920,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 44, offset: 9867},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 45, offset: 9868},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 49, offset: 9872},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 50, offset: 9873},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 286, col: 55, offset: 9878,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 251, col: 51, offset: 8896},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 255, col: 1, offset: 9011},
															run: (*parser).callonSection4Element302,
															expr: &seqExpr{
																pos: position{line: 255, col: 1, offset: 9011},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 255, col: 1, offset: 9011},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 255, col: 5, offset: 9015},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonSection4Element306,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 255, col: 22, offset: 9032},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonSection4Element311,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 255, col: 26, offset: 9036},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 263, col: 20, offset: 9179},
															run: (*parser).callonSection4Element314,
															expr: &seqExpr{
																pos: position{line: 263, col: 20, offset: 9179},
																exprs: []interface{}{
																	&labeledExpr{
																		pos:   position{line: 263, col: 20, offset: 9179},
																		label: "attribute",
																		expr: &choiceExpr{
																			pos: position{line: 263, col: 31, offset: 9190},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 263, col: 31, offset: 9190},
																					run: (*parser).callonSection4Element318,
																					expr: &seqExpr{
																						pos: position{line: 263, col: 31, offset: 9190},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 263, col: 31, offset: 9190},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 35, offset: 9194},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonSection4Element322,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 263, col: 52, offset: 9211},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection4Element327,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 56, offset: 9215},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 60, offset: 9219},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 286, col: 16, offset: 9839},
																									run: (*parser).callonSection4Element331,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 286, col: 16, offset: 9839},
																										expr: &choiceExpr{
																											pos: position{line: 286, col: 17, offset: 9840},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1205, col: 14, offset: 47940},
																													run: (*parser).callonSection4Element334,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1205, col: 14, offset: 47940},
																														expr: &charClassMatcher{
																															pos:        position{line: 1205, col: 14, offset: 47940},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1215, col: 11, offset: 48287},
																													run: (*parser).callonSection4Element337,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1215, col: 11, offset: 48287},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonSection4Element341,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 286, col: 38, offset: 9861},
																													run: (*parser).callonSection4Element343,
																													expr: &seqExpr{
																														pos: position{line: 286, col: 39, offset: 9862},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 286, col: 39, offset: 9862},
																																expr: &choiceExpr{
																																	pos: position{line: 1251, col: 8, offset: 48930},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1247, col: 12, offset: 48890},
																																			val:        "\r\n",
																																			ignoreCase: false,
																																		},
																																		&charClassMatcher{
																																			pos:        position{line: 1247, col: 21, offset: 48899},
																																			val:        "[\\r\\n]",
																																			chars:      []rune{'\r', '\n'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																		&notExpr{
																																			pos: position{line: 1249, col: 8, offset: 48919},
																																			expr: &anyMatcher{
																																				line: 1249, col: 9, offset: 48920,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 44, offset: 9867},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 45, offset: 9868},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 49, offset: 9872},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 50, offset: 9873},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 286, col: 55, offset: 9878,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 81, offset: 9240},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 85, offset: 9244},
																								label: "title",
																								expr: &actionExpr{
																									pos: position{line: 292, col: 15, offset: 9967},
																									run: (*parser).callonSection4Element358,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 292, col: 15, offset: 9967},
																										expr: &choiceExpr{
																											pos: position{line: 292, col: 16, offset: 9968},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1205, col: 14, offset: 47940},
																													run: (*parser).callonSection4Element361,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1205, col: 14, offset: 47940},
																														expr: &charClassMatcher{
																															pos:        position{line: 1205, col: 14, offset: 47940},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1215, col: 11, offset: 48287},
																													run: (*parser).callonSection4Element364,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1215, col: 11, offset: 48287},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonSection4Element368,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&seqExpr{
																													pos: position{line: 292, col: 38, offset: 9990},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 292, col: 38, offset: 9990},
																															expr: &choiceExpr{
																																pos: position{line: 1251, col: 8, offset: 48930},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1247, col: 12, offset: 48890},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1247, col: 21, offset: 48899},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																	&notExpr{
																																		pos: position{line: 1249, col: 8, offset: 48919},
																																		expr: &anyMatcher{
																																			line: 1249, col: 9, offset: 48920,
																																		},
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 292, col: 43, offset: 9995},
																															expr: &litMatcher{
																																pos:        position{line: 292, col: 44, offset: 9996},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 292, col: 48, offset: 10000},
																															expr: &litMatcher{
																																pos:        position{line: 292, col: 49, offset: 10001},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 292, col: 54, offset: 10006,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 104, offset: 9263},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 267, col: 5, offset: 9406},
																					run: (*parser).callonSection4Element383,
																					expr: &seqExpr{
																						pos: position{line: 267, col: 5, offset: 9406},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 267, col: 5, offset: 9406},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 267, col: 9, offset: 9410},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonSection4Element387,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 267, col: 26, offset: 9427},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection4Element392,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 267, col: 30, offset: 9431},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 267, col: 34, offset: 9435},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 286, col: 16, offset: 9839},
																									run: (*parser).callonSection4Element396,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 286, col: 16, offset: 9839},
																										expr: &choiceExpr{
																											pos: position{line: 286, col: 17, offset: 9840},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1205, col: 14, offset: 47940},
																													run: (*parser).callonSection4Element399,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1205, col: 14, offset: 47940},
																														expr: &charClassMatcher{
																															pos:        position{line: 1205, col: 14, offset: 47940},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1215, col: 11, offset: 48287},
																													run: (*parser).callonSection4Element402,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1215, col: 11, offset: 48287},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonSection4Element406,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 286, col: 38, offset: 9861},
																													run: (*parser).callonSection4Element408,
																													expr: &seqExpr{
																														pos: position{line: 286, col: 39, offset: 9862},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 286, col: 39, offset: 9862},
																																expr: &choiceExpr{
																																	pos: position{line: 1251, col: 8, offset: 48930},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1247, col: 12, offset: 48890},
																																			val:        "\r\n",
																																			ignoreCase: false,
																																		},
																																		&charClassMatcher{
																																			pos:        position{line: 1247, col: 21, offset: 48899},
																																			val:        "[\\r\\n]",
																																			chars:      []rune{'\r', '\n'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																		&notExpr{
																																			pos: position{line: 1249, col: 8, offset: 48919},
																																			expr: &anyMatcher{
																																				line: 1249, col: 9, offset: 48920,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 44, offset: 9867},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 45, offset: 9868},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 49, offset: 9872},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 50, offset: 9873},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 286, col: 55, offset: 9878,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 267, col: 55, offset: 9456},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 271, col: 5, offset: 9587},
																					run: (*parser).callonSection4Element422,
																					expr: &seqExpr{
																						pos: position{line: 271, col: 5, offset: 9587},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 271, col: 5, offset: 9587},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 271, col: 9, offset: 9591},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonSection4Element426,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 271, col: 26, offset: 9608},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection4Element431,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 271, col: 30, offset: 9612},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&stateCodeExpr{
																		pos: position{line: 275, col: 1, offset: 9688},
																		run: (*parser).callonSection4Element434,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 205, col: 30, offset: 7283},
															run: (*parser).callonSection4Element435,
															expr: &seqExpr{
																pos: position{line: 205, col: 30, offset: 7283},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 205, col: 30, offset: 7283},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 205, col: 34, offset: 7287},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 564, col: 19, offset: 20877},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 564, col: 19, offset: 20877},
																					run: (*parser).callonSection4Element440,
																					expr: &litMatcher{
																						pos:        position{line: 564, col: 19, offset: 20877},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 566, col: 9, offset: 20923},
																					run: (*parser).callonSection4Element442,
																					expr: &litMatcher{
																						pos:        position{line: 566, col: 9, offset: 20923},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 568, col: 9, offset: 20971},
																					run: (*parser).callonSection4Element444,
																					expr: &litMatcher{
																						pos:        position{line: 568, col: 9, offset: 20971},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 570, col: 9, offset: 21029},
																					run: (*parser).callonSection4Element446,
																					expr: &litMatcher{
																						pos:        position{line: 570, col: 9, offset: 21029},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 572, col: 9, offset: 21083},
																					run: (*parser).callonSection4Element448,
																					expr: &litMatcher{
																						pos:        position{line: 572, col: 9, offset: 21083},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 205, col: 53, offset: 7306},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 243, col: 21, offset: 8543},
															run: (*parser).callonSection4Element451,
															expr: &litMatcher{
																pos:        position{line: 243, col: 21, offset: 8543},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 221, col: 19, offset: 7839},
															run: (*parser).callonSection4Element453,
															expr: &seqExpr{
																pos: position{line: 221, col: 19, offset: 7839},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 221, col: 19, offset: 7839},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 221, col: 23, offset: 7843},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonSection4Element459,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 221, col: 27, offset: 7847},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 221, col: 38, offset: 7858},
																			expr: &choiceExpr{
																				pos: position{line: 225, col: 21, offset: 7971},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 225, col: 21, offset: 7971},
																						run: (*parser).callonSection4Element464,
																						expr: &seqExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 225, col: 21, offset: 7971},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										run: (*parser).callonSection4Element467,
																										expr: &seqExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9116},
																														run: (*parser).callonSection4Element470,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9116},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 28, offset: 8242},
																													expr: &actionExpr{
																														pos: position{line: 282, col: 14, offset: 9780},
																														run: (*parser).callonSection4Element473,
																														expr: &litMatcher{
																															pos:        position{line: 282, col: 14, offset: 9780},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 39, offset: 8253},
																													expr: &actionExpr{
																														pos: position{line: 1170, col: 16, offset: 47067},
																														run: (*parser).callonSection4Element476,
																														expr: &litMatcher{
																															pos:        position{line: 1170, col: 16, offset: 47067},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 231, col: 52, offset: 8266},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 231, col: 56, offset: 8270},
																														expr: &choiceExpr{
																															pos: position{line: 231, col: 57, offset: 8271},
																															alternatives: []interface{}{
																																&actionExpr{
																																	pos: position{line: 1205, col: 14, offset: 47940},
																																	run: (*parser).callonSection4Element481,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		expr: &charClassMatcher{
																																			pos:        position{line: 1205, col: 14, offset: 47940},
																																			val:        "[a-zA-Z0-9]",
																																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 1215, col: 11, offset: 48287},
																																	run: (*parser).callonSection4Element484,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		expr: &choiceExpr{
																																			pos: position{line: 1243, col: 7, offset: 48832},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1243, col: 7, offset: 48832},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 1243, col: 13, offset: 48838},
																																					run: (*parser).callonSection4Element488,
																																					expr: &litMatcher{
																																						pos:        position{line: 1243, col: 13, offset: 48838},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 231, col: 78, offset: 8292},
																																	run: (*parser).callonSection4Element490,
																																	expr: &seqExpr{
																																		pos: position{line: 231, col: 79, offset: 8293},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 231, col: 79, offset: 8293},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 80, offset: 8294},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 84, offset: 8298},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 85, offset: 8299},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 89, offset: 8303},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 90, offset: 8304},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 231, col: 95, offset: 8309,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 225, col: 40, offset: 7990},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 225, col: 44, offset: 7994},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 237, col: 19, offset: 8403},
																										run: (*parser).callonSection4Element501,
																										expr: &labeledExpr{
																											pos:   position{line: 237, col: 19, offset: 8403},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 237, col: 25, offset: 8409},
																												expr: &choiceExpr{
																													pos: position{line: 237, col: 26, offset: 8410},
																													alternatives: []interface{}{
																														&actionExpr{
																															pos: position{line: 1205, col: 14, offset: 47940},
																															run: (*parser).callonSection4Element505,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1205, col: 14, offset: 47940},
																																expr: &charClassMatcher{
																																	pos:        position{line: 1205, col: 14, offset: 47940},
																																	val:        "[a-zA-Z0-9]",
																																	ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 1215, col: 11, offset: 48287},
																															run: (*parser).callonSection4Element508,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1215, col: 11, offset: 48287},
																																expr: &choiceExpr{
																																	pos: position{line: 1243, col: 7, offset: 48832},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1243, col: 7, offset: 48832},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 1243, col: 13, offset: 48838},
																																			run: (*parser).callonSection4Element512,
																																			expr: &litMatcher{
																																				pos:        position{line: 1243, col: 13, offset: 48838},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 237, col: 47, offset: 8431},
																															run: (*parser).callonSection4Element514,
																															expr: &seqExpr{
																																pos: position{line: 237, col: 48, offset: 8432},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 237, col: 48, offset: 8432},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 49, offset: 8433},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 237, col: 53, offset: 8437},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 54, offset: 8438},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 237, col: 58, offset: 8442},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 59, offset: 8443},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 237, col: 64, offset: 8448,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 225, col: 67, offset: 8017},
																									expr: &litMatcher{
																										pos:        position{line: 225, col: 67, offset: 8017},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 225, col: 72, offset: 8022},
																									expr: &choiceExpr{
																										pos: position{line: 1243, col: 7, offset: 48832},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1243, col: 7, offset: 48832},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1243, col: 13, offset: 48838},
																												run: (*parser).callonSection4Element528,
																												expr: &litMatcher{
																													pos:        position{line: 1243, col: 13, offset: 48838},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 227, col: 5, offset: 8106},
																						run: (*parser).callonSection4Element530,
																						expr: &seqExpr{
																							pos: position{line: 227, col: 5, offset: 8106},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 227, col: 5, offset: 8106},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										run: (*parser).callonSection4Element533,
																										expr: &seqExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9116},
																														run: (*parser).callonSection4Element536,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9116},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 28, offset: 8242},
																													expr: &actionExpr{
																														pos: position{line: 282, col: 14, offset: 9780},
																														run: (*parser).callonSection4Element539,
																														expr: &litMatcher{
																															pos:        position{line: 282, col: 14, offset: 9780},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 39, offset: 8253},
																													expr: &actionExpr{
																														pos: position{line: 1170, col: 16, offset: 47067},
																														run: (*parser).callonSection4Element542,
																														expr: &litMatcher{
																															pos:        position{line: 1170, col: 16, offset: 47067},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 231, col: 52, offset: 8266},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 231, col: 56, offset: 8270},
																														expr: &choiceExpr{
																															pos: position{line: 231, col: 57, offset: 8271},
																															alternatives: []interface{}{
																																&actionExpr{
																																	pos: position{line: 1205, col: 14, offset: 47940},
																																	run: (*parser).callonSection4Element547,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		expr: &charClassMatcher{
																																			pos:        position{line: 1205, col: 14, offset: 47940},
																																			val:        "[a-zA-Z0-9]",
																																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 1215, col: 11, offset: 48287},
																																	run: (*parser).callonSection4Element550,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		expr: &choiceExpr{
																																			pos: position{line: 1243, col: 7, offset: 48832},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1243, col: 7, offset: 48832},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 1243, col: 13, offset: 48838},
																																					run: (*parser).callonSection4Element554,
																																					expr: &litMatcher{
																																						pos:        position{line: 1243, col: 13, offset: 48838},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 231, col: 78, offset: 8292},
																																	run: (*parser).callonSection4Element556,
																																	expr: &seqExpr{
																																		pos: position{line: 231, col: 79, offset: 8293},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 231, col: 79, offset: 8293},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 80, offset: 8294},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 84, offset: 8298},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 85, offset: 8299},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 89, offset: 8303},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 90, offset: 8304},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 231, col: 95, offset: 8309,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 227, col: 24, offset: 8125},
																									expr: &litMatcher{
																										pos:        position{line: 227, col: 24, offset: 8125},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 227, col: 29, offset: 8130},
																									expr: &choiceExpr{
																										pos: position{line: 1243, col: 7, offset: 48832},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1243, col: 7, offset: 48832},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1243, col: 13, offset: 48838},
																												run: (*parser).callonSection4Element570,
																												expr: &litMatcher{
																													pos:        position{line: 1243, col: 13, offset: 48838},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 221, col: 59, offset: 7879},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 165, col: 170, offset: 6018},
												expr: &choiceExpr{
													pos: position{line: 1243, col: 7, offset: 48832},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1243, col: 7, offset: 48832},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1243, col: 13, offset: 48838},
															run: (*parser).callonSection4Element576,
															expr: &litMatcher{
																pos:        position{line: 1243, col: 13, offset: 48838},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1251, col: 8, offset: 48930},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1247, col: 12, offset: 48890},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1247, col: 21, offset: 48899},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1249, col: 8, offset: 48919},
														expr: &anyMatcher{
															line: 1249, col: 9, offset: 48920,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 393, col: 5, offset: 13879},
							label: "element",
							expr: &choiceExpr{
								pos: position{line: 393, col: 14, offset: 13888},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 393, col: 14, offset: 13888},
										name: "Section5",
									},
									&ruleRefExpr{
										pos:  position{line: 393, col: 25, offset: 13899},
										name: "DocumentElement",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section5",
			pos:  position{line: 397, col: 1, offset: 13994},
			expr: &actionExpr{
				pos: position{line: 397, col: 13, offset: 14006},
				run: (*parser).callonSection51,
				expr: &seqExpr{
					pos: position{line: 397, col: 13, offset: 14006},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 397, col: 13, offset: 14006},
							expr: &notExpr{
								pos: position{line: 1249, col: 8, offset: 48919},
								expr: &anyMatcher{
									line: 1249, col: 9, offset: 48920,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 398, col: 5, offset: 14077},
							label: "header",
							expr: &ruleRefExpr{
								pos:  position{line: 398, col: 13, offset: 14085},
								name: "Section5Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 398, col: 28, offset: 14100},
							label: "elements",
							expr: &zeroOrMoreExpr{
								pos: position{line: 398, col: 38, offset: 14110},
								expr: &ruleRefExpr{
									pos:  position{line: 398, col: 38, offset: 14110},
									name: "Section5Element",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section5Title",
			pos:  position{line: 404, col: 1, offset: 14261},
			expr: &actionExpr{
				pos: position{line: 404, col: 18, offset: 14278},
				run: (*parser).callonSection5Title1,
				expr: &seqExpr{
					pos: position{line: 404, col: 18, offset: 14278},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 402, col: 24, offset: 14246},
							val:        "======",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 402, col: 33, offset: 14255},
							expr: &choiceExpr{
								pos: position{line: 1243, col: 7, offset: 48832},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1243, col: 7, offset: 48832},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1243, col: 13, offset: 48838},
										run: (*parser).callonSection5Title7,
										expr: &litMatcher{
											pos:        position{line: 1243, col: 13, offset: 48838},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 404, col: 38, offset: 14298},
							label: "elements",
							expr: &ruleRefExpr{
								pos:  position{line: 404, col: 48, offset: 14308},
								name: "TitleElements",
							},
						},
						&labeledExpr{
							pos:   position{line: 404, col: 63, offset: 14323},
							label: "id",
							expr: &zeroOrMoreExpr{
								pos: position{line: 404, col: 67, offset: 14327},
								expr: &actionExpr{
									pos: position{line: 180, col: 20, offset: 6467},
									run: (*parser).callonSection5Title13,
									expr: &seqExpr{
										pos: position{line: 180, col: 20, offset: 6467},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 180, col: 20, offset: 6467},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 180, col: 25, offset: 6472},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 1225, col: 7, offset: 48453},
													run: (*parser).callonSection5Title17,
													expr: &oneOrMoreExpr{
														pos: position{line: 1225, col: 7, offset: 48453},
														expr: &choiceExpr{
															pos: position{line: 1225, col: 8, offset: 48454},
															alternatives: []interface{}{
																&actionExpr{
																	pos: position{line: 1205, col: 14, offset: 47940},
																	run: (*parser).callonSection5Title20,
																	expr: &oneOrMoreExpr{
																		pos: position{line: 1205, col: 14, offset: 47940},
																		expr: &charClassMatcher{
																			pos:        position{line: 1205, col: 14, offset: 47940},
																			val:        "[a-zA-Z0-9]",
																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 1225, col: 20, offset: 48466},
																	run: (*parser).callonSection5Title23,
																	expr: &seqExpr{
																		pos: position{line: 1225, col: 21, offset: 48467},
																		exprs: []interface{}{
																			&notExpr{
																				pos: position{line: 1225, col: 21, offset: 48467},
																				expr: &choiceExpr{
																					pos: position{line: 1247, col: 12, offset: 48890},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1247, col: 12, offset: 48890},
																							val:        "\r\n",
																							ignoreCase: false,
																						},
																						&charClassMatcher{
																							pos:        position{line: 1247, col: 21, offset: 48899},
																							val:        "[\\r\\n]",
																							chars:      []rune{'\r', '\n'},
																							ignoreCase: false,
																							inverted:   false,
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 1225, col: 30, offset: 48476},
																				expr: &choiceExpr{
																					pos: position{line: 1243, col: 7, offset: 48832},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1243, col: 7, offset: 48832},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1243, col: 13, offset: 48838},
																							run: (*parser).callonSection5Title32,
																							expr: &litMatcher{
																								pos:        position{line: 1243, col: 13, offset: 48838},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 1225, col: 34, offset: 48480},
																				expr: &litMatcher{
																					pos:        position{line: 1225, col: 35, offset: 48481},
																					val:        "[",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1225, col: 39, offset: 48485},
																				expr: &litMatcher{
																					pos:        position{line: 1225, col: 40, offset: 48486},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1225, col: 44, offset: 48490},
																				expr: &litMatcher{
																					pos:        position{line: 1225, col: 45, offset: 48491},
																					val:        "<<",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1225, col: 50, offset: 48496},
																				expr: &litMatcher{
																					pos:        position{line: 1225, col: 51, offset: 48497},
																					val:        ">>",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1225, col: 56, offset: 48502},
																				expr: &litMatcher{
																					pos:        position{line: 1225, col: 57, offset: 48503},
																					val:        ",",
																					ignoreCase: false,
																				},
																			},
																			&anyMatcher{
																				line: 1225, col: 62, offset: 48508,
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 180, col: 33, offset: 6480},
												val:        "]]",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 180, col: 38, offset: 6485},
												expr: &choiceExpr{
													pos: position{line: 1243, col: 7, offset: 48832},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1243, col: 7, offset: 48832},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1243, col: 13, offset: 48838},
															run: (*parser).callonSection5Title49,
															expr: &litMatcher{
																pos:        position{line: 1243, col: 13, offset: 48838},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1251, col: 8, offset: 48930},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1247, col: 12, offset: 48890},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1247, col: 21, offset: 48899},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1249, col: 8, offset: 48919},
									expr: &anyMatcher{
										line: 1249, col: 9, offset: 48920,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section5Element",
			pos:  position{line: 408, col: 1, offset: 14443},
			expr: &actionExpr{
				pos: position{line: 409, col: 5, offset: 14467},
				run: (*parser).callonSection5Element1,
				expr: &seqExpr{
					pos: position{line: 409, col: 5, offset: 14467},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 409, col: 5, offset: 14467},
							expr: &ruleRefExpr{
								pos:  position{line: 409, col: 6, offset: 14468},
								name: "Section1Title",
							},
						},
						&notExpr{
							pos: position{line: 409, col: 20, offset: 14482},
							expr: &ruleRefExpr{
								pos:  position{line: 409, col: 21, offset: 14483},
								name: "Section2Title",
							},
						},
						&notExpr{
							pos: position{line: 409, col: 35, offset: 14497},
							expr: &ruleRefExpr{
								pos:  position{line: 409, col: 36, offset: 14498},
								name: "Section3Title",
							},
						},
						&notExpr{
							pos: position{line: 409, col: 50, offset: 14512},
							expr: &ruleRefExpr{
								pos:  position{line: 409, col: 51, offset: 14513},
								name: "Section4Title",
							},
						},
						&notExpr{
							pos: position{line: 409, col: 65, offset: 14527},
							expr: &ruleRefExpr{
								pos:  position{line: 409, col: 66, offset: 14528},
								name: "Section5Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 410, col: 5, offset: 14547},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 410, col: 16, offset: 14558},
								expr: &actionExpr{
									pos: position{line: 164, col: 21, offset: 5763},
									run: (*parser).callonSection5Element15,
									expr: &seqExpr{
										pos: position{line: 164, col: 21, offset: 5763},
										exprs: []interface{}{
											&andExpr{
												pos: position{line: 164, col: 21, offset: 5763},
												expr: &charClassMatcher{
													pos:        position{line: 164, col: 23, offset: 5765},
													val:        "[[.#]",
													chars:      []rune{'[', '.', '#'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&labeledExpr{
												pos:   position{line: 165, col: 5, offset: 5853},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 165, col: 11, offset: 5859},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 174, col: 14, offset: 6316},
															run: (*parser).callonSection5Element21,
															expr: &seqExpr{
																pos: position{line: 174, col: 14, offset: 6316},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 174, col: 14, offset: 6316},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 174, col: 19, offset: 6321},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1225, col: 7, offset: 48453},
																			run: (*parser).callonSection5Element25,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1225, col: 7, offset: 48453},
																				expr: &choiceExpr{
																					pos: position{line: 1225, col: 8, offset: 48454},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection5Element28,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1225, col: 20, offset: 48466},
																							run: (*parser).callonSection5Element31,
																							expr: &seqExpr{
																								pos: position{line: 1225, col: 21, offset: 48467},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1225, col: 21, offset: 48467},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 30, offset: 48476},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonSection5Element40,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 34, offset: 48480},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 35, offset: 48481},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 39, offset: 48485},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 40, offset: 48486},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 44, offset: 48490},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 45, offset: 48491},
																											val:        "<<",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 50, offset: 48496},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 51, offset: 48497},
																											val:        ">>",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 56, offset: 48502},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 57, offset: 48503},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1225, col: 62, offset: 48508,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 174, col: 27, offset: 6329},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 5, offset: 6383},
															run: (*parser).callonSection5Element54,
															expr: &seqExpr{
																pos: position{line: 176, col: 5, offset: 6383},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 5, offset: 6383},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 10, offset: 6388},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1225, col: 7, offset: 48453},
																			run: (*parser).callonSection5Element58,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1225, col: 7, offset: 48453},
																				expr: &choiceExpr{
																					pos: position{line: 1225, col: 8, offset: 48454},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection5Element61,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1225, col: 20, offset: 48466},
																							run: (*parser).callonSection5Element64,
																							expr: &seqExpr{
																								pos: position{line: 1225, col: 21, offset: 48467},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1225, col: 21, offset: 48467},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 30, offset: 48476},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonSection5Element73,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 34, offset: 48480},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 35, offset: 48481},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 39, offset: 48485},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 40, offset: 48486},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 44, offset: 48490},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 45, offset: 48491},
																											val:        "<<",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 50, offset: 48496},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 51, offset: 48497},
																											val:        ">>",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 56, offset: 48502},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 57, offset: 48503},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1225, col: 62, offset: 48508,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 18, offset: 6396},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 186, col: 17, offset: 6699},
															run: (*parser).callonSection5Element87,
															expr: &seqExpr{
																pos: position{line: 186, col: 17, offset: 6699},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 186, col: 17, offset: 6699},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 186, col: 21, offset: 6703},
																		expr: &litMatcher{
																			pos:        position{line: 186, col: 22, offset: 6704},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 186, col: 26, offset: 6708},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonSection5Element95,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 186, col: 30, offset: 6712},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 186, col: 37, offset: 6719},
																			run: (*parser).callonSection5Element98,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 186, col: 37, offset: 6719},
																				expr: &choiceExpr{
																					pos: position{line: 186, col: 38, offset: 6720},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection5Element101,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonSection5Element104,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection5Element108,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 186, col: 59, offset: 6741},
																							run: (*parser).callonSection5Element110,
																							expr: &seqExpr{
																								pos: position{line: 186, col: 60, offset: 6742},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 186, col: 60, offset: 6742},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 186, col: 70, offset: 6752,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 196, col: 16, offset: 6990},
															run: (*parser).callonSection5Element117,
															expr: &seqExpr{
																pos: position{line: 196, col: 16, offset: 6990},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 196, col: 16, offset: 6990},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 196, col: 21, offset: 6995},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonSection5Element123,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 196, col: 25, offset: 6999},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 196, col: 31, offset: 7005},
																			run: (*parser).callonSection5Element126,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 196, col: 31, offset: 7005},
																				expr: &choiceExpr{
																					pos: position{line: 196, col: 32, offset: 7006},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection5Element129,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonSection5Element132,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection5Element136,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 196, col: 53, offset: 7027},
																							run: (*parser).callonSection5Element138,
																							expr: &seqExpr{
																								pos: position{line: 196, col: 54, offset: 7028},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 196, col: 54, offset: 7028},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 196, col: 63, offset: 7037},
																										expr: &litMatcher{
																											pos:        position{line: 196, col: 64, offset: 7038},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 196, col: 69, offset: 7043,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 200, col: 4, offset: 7118},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 210, col: 21, offset: 7481},
															run: (*parser).callonSection5Element148,
															expr: &litMatcher{
																pos:        position{line: 210, col: 21, offset: 7481},
																val:        "[source]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 212, col: 5, offset: 7539},
															run: (*parser).callonSection5Element150,
															expr: &seqExpr{
																pos: position{line: 212, col: 5, offset: 7539},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 212, col: 5, offset: 7539},
																		val:        "[source,",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 212, col: 16, offset: 7550},
																		label: "language",
																		expr: &actionExpr{
																			pos: position{line: 212, col: 26, offset: 7560},
																			run: (*parser).callonSection5Element154,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 212, col: 26, offset: 7560},
																				expr: &choiceExpr{
																					pos: position{line: 212, col: 27, offset: 7561},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection5Element157,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonSection5Element160,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection5Element164,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 212, col: 48, offset: 7582},
																							run: (*parser).callonSection5Element166,
																							expr: &seqExpr{
																								pos: position{line: 212, col: 49, offset: 7583},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 212, col: 49, offset: 7583},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 212, col: 58, offset: 7592},
																										expr: &litMatcher{
																											pos:        position{line: 212, col: 59, offset: 7593},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 212, col: 64, offset: 7598,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 216, col: 7, offset: 7688},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 247, col: 20, offset: 8646},
															run: (*parser).callonSection5Element176,
															expr: &seqExpr{
																pos: position{line: 247, col: 20, offset: 8646},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 247, col: 20, offset: 8646},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 24, offset: 8650},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonSection5Element180,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 247, col: 41, offset: 8667},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonSection5Element185,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 45, offset: 8671},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 49, offset: 8675},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 286, col: 16, offset: 9839},
																			run: (*parser).callonSection5Element189,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 286, col: 16, offset: 9839},
																				expr: &choiceExpr{
																					pos: position{line: 286, col: 17, offset: 9840},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection5Element192,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonSection5Element195,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection5Element199,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 286, col: 38, offset: 9861},
																							run: (*parser).callonSection5Element201,
																							expr: &seqExpr{
																								pos: position{line: 286, col: 39, offset: 9862},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 286, col: 39, offset: 9862},
																										expr: &choiceExpr{
																											pos: position{line: 1251, col: 8, offset: 48930},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																												&notExpr{
																													pos: position{line: 1249, col: 8, offset: 48919},
																													expr: &anyMatcher{
																														line: 1249, col: 9, offset: 48920,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 44, offset: 9867},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 45, offset: 9868},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 49, offset: 9872},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 50, offset: 9873},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 286, col: 55, offset: 9878,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 70, offset: 8696},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 74, offset: 8700},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 292, col: 15, offset: 9967},
																			run: (*parser).callonSection5Element216,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 292, col: 15, offset: 9967},
																				expr: &choiceExpr{
																					pos: position{line: 292, col: 16, offset: 9968},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection5Element219,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonSection5Element222,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection5Element226,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&seqExpr{
																							pos: position{line: 292, col: 38, offset: 9990},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 292, col: 38, offset: 9990},
																									expr: &choiceExpr{
																										pos: position{line: 1251, col: 8, offset: 48930},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1247, col: 12, offset: 48890},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1247, col: 21, offset: 48899},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																											&notExpr{
																												pos: position{line: 1249, col: 8, offset: 48919},
																												expr: &anyMatcher{
																													line: 1249, col: 9, offset: 48920,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 292, col: 43, offset: 9995},
																									expr: &litMatcher{
																										pos:        position{line: 292, col: 44, offset: 9996},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 292, col: 48, offset: 10000},
																									expr: &litMatcher{
																										pos:        position{line: 292, col: 49, offset: 10001},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 292, col: 54, offset: 10006,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 93, offset: 8719},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 251, col: 1, offset: 8846},
															run: (*parser).callonSection5Element241,
															expr: &seqExpr{
																pos: position{line: 251, col: 1, offset: 8846},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 251, col: 1, offset: 8846},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 251, col: 5, offset: 8850},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonSection5Element245,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 251, col: 22, offset: 8867},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonSection5Element250,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 251, col: 26, offset: 8871},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 251, col: 30, offset: 8875},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 286, col: 16, offset: 9839},
																			run: (*parser).callonSection5Element254,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 286, col: 16, offset: 9839},
																				expr: &choiceExpr{
																					pos: position{line: 286, col: 17, offset: 9840},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonSection5Element257,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonSection5Element260,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection5Element264,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 286, col: 38, offset: 9861},
																							run: (*parser).callonSection5Element266,
																							expr: &seqExpr{
																								pos: position{line: 286, col: 39, offset: 9862},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 286, col: 39, offset: 9862},
																										expr: &choiceExpr{
																											pos: position{line: 1251, col: 8, offset: 48930},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																												&notExpr{
																													pos: position{line: 1249, col: 8, offset: 48919},
																													expr: &anyMatcher{
																														line: 1249, col: 9, offset: 48920,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 44, offset: 9867},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 45, offset: 9868},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 49, offset: 9872},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 50, offset: 9873},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 286, col: 55, offset: 9878,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 251, col: 51, offset: 8896},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 255, col: 1, offset: 9011},
															run: (*parser).callonSection5Element280,
															expr: &seqExpr{
																pos: position{line: 255, col: 1, offset: 9011},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 255, col: 1, offset: 9011},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 255, col: 5, offset: 9015},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonSection5Element284,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 255, col: 22, offset: 9032},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonSection5Element289,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 255, col: 26, offset: 9036},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 263, col: 20, offset: 9179},
															run: (*parser).callonSection5Element292,
															expr: &seqExpr{
																pos: position{line: 263, col: 20, offset: 9179},
																exprs: []interface{}{
																	&labeledExpr{
																		pos:   position{line: 263, col: 20, offset: 9179},
																		label: "attribute",
																		expr: &choiceExpr{
																			pos: position{line: 263, col: 31, offset: 9190},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 263, col: 31, offset: 9190},
																					run: (*parser).callonSection5Element296,
																					expr: &seqExpr{
																						pos: position{line: 263, col: 31, offset: 9190},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 263, col: 31, offset: 9190},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 35, offset: 9194},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonSection5Element300,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 263, col: 52, offset: 9211},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection5Element305,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 56, offset: 9215},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 60, offset: 9219},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 286, col: 16, offset: 9839},
																									run: (*parser).callonSection5Element309,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 286, col: 16, offset: 9839},
																										expr: &choiceExpr{
																											pos: position{line: 286, col: 17, offset: 9840},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1205, col: 14, offset: 47940},
																													run: (*parser).callonSection5Element312,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1205, col: 14, offset: 47940},
																														expr: &charClassMatcher{
																															pos:        position{line: 1205, col: 14, offset: 47940},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1215, col: 11, offset: 48287},
																													run: (*parser).callonSection5Element315,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1215, col: 11, offset: 48287},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonSection5Element319,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 286, col: 38, offset: 9861},
																													run: (*parser).callonSection5Element321,
																													expr: &seqExpr{
																														pos: position{line: 286, col: 39, offset: 9862},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 286, col: 39, offset: 9862},
																																expr: &choiceExpr{
																																	pos: position{line: 1251, col: 8, offset: 48930},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1247, col: 12, offset: 48890},
																																			val:        "\r\n",
																																			ignoreCase: false,
																																		},
																																		&charClassMatcher{
																																			pos:        position{line: 1247, col: 21, offset: 48899},
																																			val:        "[\\r\\n]",
																																			chars:      []rune{'\r', '\n'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																		&notExpr{
																																			pos: position{line: 1249, col: 8, offset: 48919},
																																			expr: &anyMatcher{
																																				line: 1249, col: 9, offset: 48920,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 44, offset: 9867},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 45, offset: 9868},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 49, offset: 9872},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 50, offset: 9873},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 286, col: 55, offset: 9878,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 81, offset: 9240},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 85, offset: 9244},
																								label: "title",
																								expr: &actionExpr{
																									pos: position{line: 292, col: 15, offset: 9967},
																									run: (*parser).callonSection5Element336,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 292, col: 15, offset: 9967},
																										expr: &choiceExpr{
																											pos: position{line: 292, col: 16, offset: 9968},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1205, col: 14, offset: 47940},
																													run: (*parser).callonSection5Element339,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1205, col: 14, offset: 47940},
																														expr: &charClassMatcher{
																															pos:        position{line: 1205, col: 14, offset: 47940},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1215, col: 11, offset: 48287},
																													run: (*parser).callonSection5Element342,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1215, col: 11, offset: 48287},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonSection5Element346,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&seqExpr{
																													pos: position{line: 292, col: 38, offset: 9990},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 292, col: 38, offset: 9990},
																															expr: &choiceExpr{
																																pos: position{line: 1251, col: 8, offset: 48930},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1247, col: 12, offset: 48890},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1247, col: 21, offset: 48899},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																	&notExpr{
																																		pos: position{line: 1249, col: 8, offset: 48919},
																																		expr: &anyMatcher{
																																			line: 1249, col: 9, offset: 48920,
																																		},
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 292, col: 43, offset: 9995},
																															expr: &litMatcher{
																																pos:        position{line: 292, col: 44, offset: 9996},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 292, col: 48, offset: 10000},
																															expr: &litMatcher{
																																pos:        position{line: 292, col: 49, offset: 10001},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 292, col: 54, offset: 10006,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 104, offset: 9263},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 267, col: 5, offset: 9406},
																					run: (*parser).callonSection5Element361,
																					expr: &seqExpr{
																						pos: position{line: 267, col: 5, offset: 9406},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 267, col: 5, offset: 9406},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 267, col: 9, offset: 9410},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonSection5Element365,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 267, col: 26, offset: 9427},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection5Element370,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 267, col: 30, offset: 9431},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 267, col: 34, offset: 9435},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 286, col: 16, offset: 9839},
																									run: (*parser).callonSection5Element374,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 286, col: 16, offset: 9839},
																										expr: &choiceExpr{
																											pos: position{line: 286, col: 17, offset: 9840},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1205, col: 14, offset: 47940},
																													run: (*parser).callonSection5Element377,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1205, col: 14, offset: 47940},
																														expr: &charClassMatcher{
																															pos:        position{line: 1205, col: 14, offset: 47940},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1215, col: 11, offset: 48287},
																													run: (*parser).callonSection5Element380,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1215, col: 11, offset: 48287},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonSection5Element384,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 286, col: 38, offset: 9861},
																													run: (*parser).callonSection5Element386,
																													expr: &seqExpr{
																														pos: position{line: 286, col: 39, offset: 9862},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 286, col: 39, offset: 9862},
																																expr: &choiceExpr{
																																	pos: position{line: 1251, col: 8, offset: 48930},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1247, col: 12, offset: 48890},
																																			val:        "\r\n",
																																			ignoreCase: false,
																																		},
																																		&charClassMatcher{
																																			pos:        position{line: 1247, col: 21, offset: 48899},
																																			val:        "[\\r\\n]",
																																			chars:      []rune{'\r', '\n'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																		&notExpr{
																																			pos: position{line: 1249, col: 8, offset: 48919},
																																			expr: &anyMatcher{
																																				line: 1249, col: 9, offset: 48920,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 44, offset: 9867},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 45, offset: 9868},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 49, offset: 9872},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 50, offset: 9873},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 286, col: 55, offset: 9878,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 267, col: 55, offset: 9456},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 271, col: 5, offset: 9587},
																					run: (*parser).callonSection5Element400,
																					expr: &seqExpr{
																						pos: position{line: 271, col: 5, offset: 9587},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 271, col: 5, offset: 9587},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 271, col: 9, offset: 9591},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonSection5Element404,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 271, col: 26, offset: 9608},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonSection5Element409,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 271, col: 30, offset: 9612},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&stateCodeExpr{
																		pos: position{line: 275, col: 1, offset: 9688},
																		run: (*parser).callonSection5Element412,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 205, col: 30, offset: 7283},
															run: (*parser).callonSection5Element413,
															expr: &seqExpr{
																pos: position{line: 205, col: 30, offset: 7283},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 205, col: 30, offset: 7283},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 205, col: 34, offset: 7287},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 564, col: 19, offset: 20877},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 564, col: 19, offset: 20877},
																					run: (*parser).callonSection5Element418,
																					expr: &litMatcher{
																						pos:        position{line: 564, col: 19, offset: 20877},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 566, col: 9, offset: 20923},
																					run: (*parser).callonSection5Element420,
																					expr: &litMatcher{
																						pos:        position{line: 566, col: 9, offset: 20923},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 568, col: 9, offset: 20971},
																					run: (*parser).callonSection5Element422,
																					expr: &litMatcher{
																						pos:        position{line: 568, col: 9, offset: 20971},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 570, col: 9, offset: 21029},
																					run: (*parser).callonSection5Element424,
																					expr: &litMatcher{
																						pos:        position{line: 570, col: 9, offset: 21029},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 572, col: 9, offset: 21083},
																					run: (*parser).callonSection5Element426,
																					expr: &litMatcher{
																						pos:        position{line: 572, col: 9, offset: 21083},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 205, col: 53, offset: 7306},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 243, col: 21, offset: 8543},
															run: (*parser).callonSection5Element429,
															expr: &litMatcher{
																pos:        position{line: 243, col: 21, offset: 8543},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 221, col: 19, offset: 7839},
															run: (*parser).callonSection5Element431,
															expr: &seqExpr{
																pos: position{line: 221, col: 19, offset: 7839},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 221, col: 19, offset: 7839},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 221, col: 23, offset: 7843},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonSection5Element437,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 221, col: 27, offset: 7847},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 221, col: 38, offset: 7858},
																			expr: &choiceExpr{
																				pos: position{line: 225, col: 21, offset: 7971},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 225, col: 21, offset: 7971},
																						run: (*parser).callonSection5Element442,
																						expr: &seqExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 225, col: 21, offset: 7971},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										run: (*parser).callonSection5Element445,
																										expr: &seqExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9116},
																														run: (*parser).callonSection5Element448,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9116},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 28, offset: 8242},
																													expr: &actionExpr{
																														pos: position{line: 282, col: 14, offset: 9780},
																														run: (*parser).callonSection5Element451,
																														expr: &litMatcher{
																															pos:        position{line: 282, col: 14, offset: 9780},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 39, offset: 8253},
																													expr: &actionExpr{
																														pos: position{line: 1170, col: 16, offset: 47067},
																														run: (*parser).callonSection5Element454,
																														expr: &litMatcher{
																															pos:        position{line: 1170, col: 16, offset: 47067},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 231, col: 52, offset: 8266},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 231, col: 56, offset: 8270},
																														expr: &choiceExpr{
																															pos: position{line: 231, col: 57, offset: 8271},
																															alternatives: []interface{}{
																																&actionExpr{
																																	pos: position{line: 1205, col: 14, offset: 47940},
																																	run: (*parser).callonSection5Element459,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		expr: &charClassMatcher{
																																			pos:        position{line: 1205, col: 14, offset: 47940},
																																			val:        "[a-zA-Z0-9]",
																																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 1215, col: 11, offset: 48287},
																																	run: (*parser).callonSection5Element462,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		expr: &choiceExpr{
																																			pos: position{line: 1243, col: 7, offset: 48832},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1243, col: 7, offset: 48832},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 1243, col: 13, offset: 48838},
																																					run: (*parser).callonSection5Element466,
																																					expr: &litMatcher{
																																						pos:        position{line: 1243, col: 13, offset: 48838},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 231, col: 78, offset: 8292},
																																	run: (*parser).callonSection5Element468,
																																	expr: &seqExpr{
																																		pos: position{line: 231, col: 79, offset: 8293},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 231, col: 79, offset: 8293},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 80, offset: 8294},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 84, offset: 8298},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 85, offset: 8299},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 89, offset: 8303},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 90, offset: 8304},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 231, col: 95, offset: 8309,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 225, col: 40, offset: 7990},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 225, col: 44, offset: 7994},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 237, col: 19, offset: 8403},
																										run: (*parser).callonSection5Element479,
																										expr: &labeledExpr{
																											pos:   position{line: 237, col: 19, offset: 8403},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 237, col: 25, offset: 8409},
																												expr: &choiceExpr{
																													pos: position{line: 237, col: 26, offset: 8410},
																													alternatives: []interface{}{
																														&actionExpr{
																															pos: position{line: 1205, col: 14, offset: 47940},
																															run: (*parser).callonSection5Element483,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1205, col: 14, offset: 47940},
																																expr: &charClassMatcher{
																																	pos:        position{line: 1205, col: 14, offset: 47940},
																																	val:        "[a-zA-Z0-9]",
																																	ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 1215, col: 11, offset: 48287},
																															run: (*parser).callonSection5Element486,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1215, col: 11, offset: 48287},
																																expr: &choiceExpr{
																																	pos: position{line: 1243, col: 7, offset: 48832},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1243, col: 7, offset: 48832},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 1243, col: 13, offset: 48838},
																																			run: (*parser).callonSection5Element490,
																																			expr: &litMatcher{
																																				pos:        position{line: 1243, col: 13, offset: 48838},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 237, col: 47, offset: 8431},
																															run: (*parser).callonSection5Element492,
																															expr: &seqExpr{
																																pos: position{line: 237, col: 48, offset: 8432},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 237, col: 48, offset: 8432},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 49, offset: 8433},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 237, col: 53, offset: 8437},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 54, offset: 8438},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 237, col: 58, offset: 8442},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 59, offset: 8443},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 237, col: 64, offset: 8448,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 225, col: 67, offset: 8017},
																									expr: &litMatcher{
																										pos:        position{line: 225, col: 67, offset: 8017},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 225, col: 72, offset: 8022},
																									expr: &choiceExpr{
																										pos: position{line: 1243, col: 7, offset: 48832},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1243, col: 7, offset: 48832},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1243, col: 13, offset: 48838},
																												run: (*parser).callonSection5Element506,
																												expr: &litMatcher{
																													pos:        position{line: 1243, col: 13, offset: 48838},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 227, col: 5, offset: 8106},
																						run: (*parser).callonSection5Element508,
																						expr: &seqExpr{
																							pos: position{line: 227, col: 5, offset: 8106},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 227, col: 5, offset: 8106},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										run: (*parser).callonSection5Element511,
																										expr: &seqExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9116},
																														run: (*parser).callonSection5Element514,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9116},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 28, offset: 8242},
																													expr: &actionExpr{
																														pos: position{line: 282, col: 14, offset: 9780},
																														run: (*parser).callonSection5Element517,
																														expr: &litMatcher{
																															pos:        position{line: 282, col: 14, offset: 9780},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 39, offset: 8253},
																													expr: &actionExpr{
																														pos: position{line: 1170, col: 16, offset: 47067},
																														run: (*parser).callonSection5Element520,
																														expr: &litMatcher{
																															pos:        position{line: 1170, col: 16, offset: 47067},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 231, col: 52, offset: 8266},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 231, col: 56, offset: 8270},
																														expr: &choiceExpr{
																															pos: position{line: 231, col: 57, offset: 8271},
																															alternatives: []interface{}{
																																&actionExpr{
																																	pos: position{line: 1205, col: 14, offset: 47940},
																																	run: (*parser).callonSection5Element525,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		expr: &charClassMatcher{
																																			pos:        position{line: 1205, col: 14, offset: 47940},
																																			val:        "[a-zA-Z0-9]",
																																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 1215, col: 11, offset: 48287},
																																	run: (*parser).callonSection5Element528,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		expr: &choiceExpr{
																																			pos: position{line: 1243, col: 7, offset: 48832},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1243, col: 7, offset: 48832},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 1243, col: 13, offset: 48838},
																																					run: (*parser).callonSection5Element532,
																																					expr: &litMatcher{
																																						pos:        position{line: 1243, col: 13, offset: 48838},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 231, col: 78, offset: 8292},
																																	run: (*parser).callonSection5Element534,
																																	expr: &seqExpr{
																																		pos: position{line: 231, col: 79, offset: 8293},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 231, col: 79, offset: 8293},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 80, offset: 8294},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 84, offset: 8298},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 85, offset: 8299},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 89, offset: 8303},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 90, offset: 8304},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 231, col: 95, offset: 8309,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 227, col: 24, offset: 8125},
																									expr: &litMatcher{
																										pos:        position{line: 227, col: 24, offset: 8125},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 227, col: 29, offset: 8130},
																									expr: &choiceExpr{
																										pos: position{line: 1243, col: 7, offset: 48832},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1243, col: 7, offset: 48832},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1243, col: 13, offset: 48838},
																												run: (*parser).callonSection5Element548,
																												expr: &litMatcher{
																													pos:        position{line: 1243, col: 13, offset: 48838},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 221, col: 59, offset: 7879},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 165, col: 170, offset: 6018},
												expr: &choiceExpr{
													pos: position{line: 1243, col: 7, offset: 48832},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1243, col: 7, offset: 48832},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1243, col: 13, offset: 48838},
															run: (*parser).callonSection5Element554,
															expr: &litMatcher{
																pos:        position{line: 1243, col: 13, offset: 48838},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1251, col: 8, offset: 48930},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1247, col: 12, offset: 48890},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1247, col: 21, offset: 48899},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1249, col: 8, offset: 48919},
														expr: &anyMatcher{
															line: 1249, col: 9, offset: 48920,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 411, col: 5, offset: 14583},
							label: "element",
							expr: &ruleRefExpr{
								pos:  position{line: 411, col: 14, offset: 14592},
								name: "DocumentElement",
							},
						},
					},
				},
			},
		},
		{
			name: "TitleElements",
			pos:  position{line: 415, col: 1, offset: 14687},
			expr: &actionExpr{
				pos: position{line: 415, col: 18, offset: 14704},
				run: (*parser).callonTitleElements1,
				expr: &labeledExpr{
					pos:   position{line: 415, col: 18, offset: 14704},
					label: "elements",
					expr: &oneOrMoreExpr{
						pos: position{line: 415, col: 27, offset: 14713},
						expr: &seqExpr{
							pos: position{line: 415, col: 28, offset: 14714},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 415, col: 28, offset: 14714},
									expr: &choiceExpr{
										pos: position{line: 1247, col: 12, offset: 48890},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1247, col: 12, offset: 48890},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1247, col: 21, offset: 48899},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 415, col: 37, offset: 14723},
									expr: &choiceExpr{
										pos: position{line: 1243, col: 7, offset: 48832},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1243, col: 7, offset: 48832},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1243, col: 13, offset: 48838},
												run: (*parser).callonTitleElements12,
												expr: &litMatcher{
													pos:        position{line: 1243, col: 13, offset: 48838},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 415, col: 41, offset: 14727},
									expr: &actionExpr{
										pos: position{line: 180, col: 20, offset: 6467},
										run: (*parser).callonTitleElements15,
										expr: &seqExpr{
											pos: position{line: 180, col: 20, offset: 6467},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 180, col: 20, offset: 6467},
													val:        "[[",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 180, col: 25, offset: 6472},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 1225, col: 7, offset: 48453},
														run: (*parser).callonTitleElements19,
														expr: &oneOrMoreExpr{
															pos: position{line: 1225, col: 7, offset: 48453},
															expr: &choiceExpr{
																pos: position{line: 1225, col: 8, offset: 48454},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 1205, col: 14, offset: 47940},
																		run: (*parser).callonTitleElements22,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1205, col: 14, offset: 47940},
																			expr: &charClassMatcher{
																				pos:        position{line: 1205, col: 14, offset: 47940},
																				val:        "[a-zA-Z0-9]",
																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 1225, col: 20, offset: 48466},
																		run: (*parser).callonTitleElements25,
																		expr: &seqExpr{
																			pos: position{line: 1225, col: 21, offset: 48467},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 1225, col: 21, offset: 48467},
																					expr: &choiceExpr{
																						pos: position{line: 1247, col: 12, offset: 48890},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1247, col: 12, offset: 48890},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 1247, col: 21, offset: 48899},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 30, offset: 48476},
																					expr: &choiceExpr{
																						pos: position{line: 1243, col: 7, offset: 48832},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1243, col: 7, offset: 48832},
																								val:        " ",
																								ignoreCase: false,
																							},
																							&actionExpr{
																								pos: position{line: 1243, col: 13, offset: 48838},
																								run: (*parser).callonTitleElements34,
																								expr: &litMatcher{
																									pos:        position{line: 1243, col: 13, offset: 48838},
																									val:        "\t",
																									ignoreCase: false,
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 34, offset: 48480},
																					expr: &litMatcher{
																						pos:        position{line: 1225, col: 35, offset: 48481},
																						val:        "[",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 39, offset: 48485},
																					expr: &litMatcher{
																						pos:        position{line: 1225, col: 40, offset: 48486},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 44, offset: 48490},
																					expr: &litMatcher{
																						pos:        position{line: 1225, col: 45, offset: 48491},
																						val:        "<<",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 50, offset: 48496},
																					expr: &litMatcher{
																						pos:        position{line: 1225, col: 51, offset: 48497},
																						val:        ">>",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 56, offset: 48502},
																					expr: &litMatcher{
																						pos:        position{line: 1225, col: 57, offset: 48503},
																						val:        ",",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 1225, col: 62, offset: 48508,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 180, col: 33, offset: 6480},
													val:        "]]",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 180, col: 38, offset: 6485},
													expr: &choiceExpr{
														pos: position{line: 1243, col: 7, offset: 48832},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1243, col: 7, offset: 48832},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1243, col: 13, offset: 48838},
																run: (*parser).callonTitleElements51,
																expr: &litMatcher{
																	pos:        position{line: 1243, col: 13, offset: 48838},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&ruleRefExpr{
									pos:  position{line: 415, col: 58, offset: 14744},
									name: "TitleElement",
								},
								&zeroOrMoreExpr{
									pos: position{line: 415, col: 71, offset: 14757},
									expr: &choiceExpr{
										pos: position{line: 1243, col: 7, offset: 48832},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1243, col: 7, offset: 48832},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1243, col: 13, offset: 48838},
												run: (*parser).callonTitleElements57,
												expr: &litMatcher{
													pos:        position{line: 1243, col: 13, offset: 48838},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "TitleElement",
			pos:  position{line: 419, col: 1, offset: 14869},
			expr: &actionExpr{
				pos: position{line: 419, col: 17, offset: 14885},
				run: (*parser).callonTitleElement1,
				expr: &labeledExpr{
					pos:   position{line: 419, col: 17, offset: 14885},
					label: "element",
					expr: &choiceExpr{
						pos: position{line: 419, col: 26, offset: 14894},
						alternatives: []interface{}{
							&actionExpr{
								pos: position{line: 817, col: 19, offset: 33697},
								run: (*parser).callonTitleElement4,
								expr: &seqExpr{
									pos: position{line: 817, col: 19, offset: 33697},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 817, col: 19, offset: 33697},
											val:        "<<",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 817, col: 24, offset: 33702},
											label: "id",
											expr: &actionExpr{
												pos: position{line: 1225, col: 7, offset: 48453},
												run: (*parser).callonTitleElement8,
												expr: &oneOrMoreExpr{
													pos: position{line: 1225, col: 7, offset: 48453},
													expr: &choiceExpr{
														pos: position{line: 1225, col: 8, offset: 48454},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 1205, col: 14, offset: 47940},
																run: (*parser).callonTitleElement11,
																expr: &oneOrMoreExpr{
																	pos: position{line: 1205, col: 14, offset: 47940},
																	expr: &charClassMatcher{
																		pos:        position{line: 1205, col: 14, offset: 47940},
																		val:        "[a-zA-Z0-9]",
																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
															&actionExpr{
																pos: position{line: 1225, col: 20, offset: 48466},
																run: (*parser).callonTitleElement14,
																expr: &seqExpr{
																	pos: position{line: 1225, col: 21, offset: 48467},
																	exprs: []interface{}{
																		&notExpr{
																			pos: position{line: 1225, col: 21, offset: 48467},
																			expr: &choiceExpr{
																				pos: position{line: 1247, col: 12, offset: 48890},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1247, col: 12, offset: 48890},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 1247, col: 21, offset: 48899},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																				},
																			},
																		},
																		&notExpr{
																			pos: position{line: 1225, col: 30, offset: 48476},
																			expr: &choiceExpr{
																				pos: position{line: 1243, col: 7, offset: 48832},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1243, col: 7, offset: 48832},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1243, col: 13, offset: 48838},
																						run: (*parser).callonTitleElement23,
																						expr: &litMatcher{
																							pos:        position{line: 1243, col: 13, offset: 48838},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&notExpr{
																			pos: position{line: 1225, col: 34, offset: 48480},
																			expr: &litMatcher{
																				pos:        position{line: 1225, col: 35, offset: 48481},
																				val:        "[",
																				ignoreCase: false,
																			},
																		},
																		&notExpr{
																			pos: position{line: 1225, col: 39, offset: 48485},
																			expr: &litMatcher{
																				pos:        position{line: 1225, col: 40, offset: 48486},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																		&notExpr{
																			pos: position{line: 1225, col: 44, offset: 48490},
																			expr: &litMatcher{
																				pos:        position{line: 1225, col: 45, offset: 48491},
																				val:        "<<",
																				ignoreCase: false,
																			},
																		},
																		&notExpr{
																			pos: position{line: 1225, col: 50, offset: 48496},
																			expr: &litMatcher{
																				pos:        position{line: 1225, col: 51, offset: 48497},
																				val:        ">>",
																				ignoreCase: false,
																			},
																		},
																		&notExpr{
																			pos: position{line: 1225, col: 56, offset: 48502},
																			expr: &litMatcher{
																				pos:        position{line: 1225, col: 57, offset: 48503},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&anyMatcher{
																			line: 1225, col: 62, offset: 48508,
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 817, col: 32, offset: 33710},
											expr: &choiceExpr{
												pos: position{line: 1243, col: 7, offset: 48832},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1243, col: 7, offset: 48832},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1243, col: 13, offset: 48838},
														run: (*parser).callonTitleElement39,
														expr: &litMatcher{
															pos:        position{line: 1243, col: 13, offset: 48838},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 817, col: 36, offset: 33714},
											val:        ",",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 817, col: 40, offset: 33718},
											label: "label",
											expr: &actionExpr{
												pos: position{line: 823, col: 24, offset: 33920},
												run: (*parser).callonTitleElement43,
												expr: &oneOrMoreExpr{
													pos: position{line: 823, col: 24, offset: 33920},
													expr: &choiceExpr{
														pos: position{line: 823, col: 25, offset: 33921},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 1205, col: 14, offset: 47940},
																run: (*parser).callonTitleElement46,
																expr: &oneOrMoreExpr{
																	pos: position{line: 1205, col: 14, offset: 47940},
																	expr: &charClassMatcher{
																		pos:        position{line: 1205, col: 14, offset: 47940},
																		val:        "[a-zA-Z0-9]",
																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
															&actionExpr{
																pos: position{line: 1215, col: 11, offset: 48287},
																run: (*parser).callonTitleElement49,
																expr: &oneOrMoreExpr{
																	pos: position{line: 1215, col: 11, offset: 48287},
																	expr: &choiceExpr{
																		pos: position{line: 1243, col: 7, offset: 48832},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1243, col: 7, offset: 48832},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1243, col: 13, offset: 48838},
																				run: (*parser).callonTitleElement53,
																				expr: &litMatcher{
																					pos:        position{line: 1243, col: 13, offset: 48838},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 823, col: 46, offset: 33942},
																run: (*parser).callonTitleElement55,
																expr: &seqExpr{
																	pos: position{line: 823, col: 47, offset: 33943},
																	exprs: []interface{}{
																		&notExpr{
																			pos: position{line: 823, col: 47, offset: 33943},
																			expr: &litMatcher{
																				pos:        position{line: 823, col: 48, offset: 33944},
																				val:        ">>",
																				ignoreCase: false,
																			},
																		},
																		&anyMatcher{
																			line: 823, col: 54, offset: 33950,
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 817, col: 68, offset: 33746},
											val:        ">>",
											ignoreCase: false,
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 819, col: 5, offset: 33821},
								run: (*parser).callonTitleElement61,
								expr: &seqExpr{
									pos: position{line: 819, col: 5, offset: 33821},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 819, col: 5, offset: 33821},
											val:        "<<",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 819, col: 10, offset: 33826},
											label: "id",
											expr: &actionExpr{
												pos: position{line: 1225, col: 7, offset: 48453},
												run: (*parser).callonTitleElement65,
												expr: &oneOrMoreExpr{
													pos: position{line: 1225, col: 7, offset: 48453},
													expr: &choiceExpr{
														pos: position{line: 1225, col: 8, offset: 48454},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 1205, col: 14, offset: 47940},
																run: (*parser).callonTitleElement68,
																expr: &oneOrMoreExpr{
																	pos: position{line: 1205, col: 14, offset: 47940},
																	expr: &charClassMatcher{
																		pos:        position{line: 1205, col: 14, offset: 47940},
																		val:        "[a-zA-Z0-9]",
																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
															&actionExpr{
																pos: position{line: 1225, col: 20, offset: 48466},
																run: (*parser).callonTitleElement71,
																expr: &seqExpr{
																	pos: position{line: 1225, col: 21, offset: 48467},
																	exprs: []interface{}{
																		&notExpr{
																			pos: position{line: 1225, col: 21, offset: 48467},
																			expr: &choiceExpr{
																				pos: position{line: 1247, col: 12, offset: 48890},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1247, col: 12, offset: 48890},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 1247, col: 21, offset: 48899},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																				},
																			},
																		},
																		&notExpr{
																			pos: position{line: 1225, col: 30, offset: 48476},
																			expr: &choiceExpr{
																				pos: position{line: 1243, col: 7, offset: 48832},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1243, col: 7, offset: 48832},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1243, col: 13, offset: 48838},
																						run: (*parser).callonTitleElement80,
																						expr: &litMatcher{
																							pos:        position{line: 1243, col: 13, offset: 48838},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&notExpr{
																			pos: position{line: 1225, col: 34, offset: 48480},
																			expr: &litMatcher{
																				pos:        position{line: 1225, col: 35, offset: 48481},
																				val:        "[",
																				ignoreCase: false,
																			},
																		},
																		&notExpr{
																			pos: position{line: 1225, col: 39, offset: 48485},
																			expr: &litMatcher{
																				pos:        position{line: 1225, col: 40, offset: 48486},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																		&notExpr{
																			pos: position{line: 1225, col: 44, offset: 48490},
																			expr: &litMatcher{
																				pos:        position{line: 1225, col: 45, offset: 48491},
																				val:        "<<",
																				ignoreCase: false,
																			},
																		},
																		&notExpr{
																			pos: position{line: 1225, col: 50, offset: 48496},
																			expr: &litMatcher{
																				pos:        position{line: 1225, col: 51, offset: 48497},
																				val:        ">>",
																				ignoreCase: false,
																			},
																		},
																		&notExpr{
																			pos: position{line: 1225, col: 56, offset: 48502},
																			expr: &litMatcher{
																				pos:        position{line: 1225, col: 57, offset: 48503},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&anyMatcher{
																			line: 1225, col: 62, offset: 48508,
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 819, col: 18, offset: 33834},
											val:        ">>",
											ignoreCase: false,
										},
									},
								},
							},
							&ruleRefExpr{
								pos:  position{line: 419, col: 43, offset: 14911},
								name: "Passthrough",
							},
							&actionExpr{
								pos: position{line: 875, col: 16, offset: 35530},
								run: (*parser).callonTitleElement95,
								expr: &seqExpr{
									pos: position{line: 875, col: 16, offset: 35530},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 875, col: 16, offset: 35530},
											val:        "image:",
											ignoreCase: false,
										},
										&notExpr{
											pos: position{line: 875, col: 25, offset: 35539},
											expr: &litMatcher{
												pos:        position{line: 875, col: 26, offset: 35540},
												val:        ":",
												ignoreCase: false,
											},
										},
										&labeledExpr{
											pos:   position{line: 875, col: 30, offset: 35544},
											label: "path",
											expr: &actionExpr{
												pos: position{line: 1219, col: 8, offset: 48334},
												run: (*parser).callonTitleElement101,
												expr: &oneOrMoreExpr{
													pos: position{line: 1219, col: 8, offset: 48334},
													expr: &choiceExpr{
														pos: position{line: 1219, col: 9, offset: 48335},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 1205, col: 14, offset: 47940},
																run: (*parser).callonTitleElement104,
																expr: &oneOrMoreExpr{
																	pos: position{line: 1205, col: 14, offset: 47940},
																	expr: &charClassMatcher{
																		pos:        position{line: 1205, col: 14, offset: 47940},
																		val:        "[a-zA-Z0-9]",
																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
															&actionExpr{
																pos: position{line: 1219, col: 21, offset: 48347},
																run: (*parser).callonTitleElement107,
																expr: &seqExpr{
																	pos: position{line: 1219, col: 22, offset: 48348},
																	exprs: []interface{}{
																		&notExpr{
																			pos: position{line: 1219, col: 22, offset: 48348},
																			expr: &choiceExpr{
																				pos: position{line: 1247, col: 12, offset: 48890},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1247, col: 12, offset: 48890},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 1247, col: 21, offset: 48899},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																				},
																			},
																		},
																		&notExpr{
																			pos: position{line: 1219, col: 31, offset: 48357},
																			expr: &choiceExpr{
																				pos: position{line: 1243, col: 7, offset: 48832},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1243, col: 7, offset: 48832},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1243, col: 13, offset: 48838},
																						run: (*parser).callonTitleElement116,
																						expr: &litMatcher{
																							pos:        position{line: 1243, col: 13, offset: 48838},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&notExpr{
																			pos: position{line: 1219, col: 35, offset: 48361},
																			expr: &litMatcher{
																				pos:        position{line: 1219, col: 36, offset: 48362},
																				val:        "[",
																				ignoreCase: false,
																			},
																		},
																		&notExpr{
																			pos: position{line: 1219, col: 40, offset: 48366},
																			expr: &litMatcher{
																				pos:        position{line: 1219, col: 41, offset: 48367},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																		&anyMatcher{
																			line: 1219, col: 46, offset: 48372,
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 875, col: 41, offset: 35555},
											label: "inlineAttributes",
											expr: &choiceExpr{
												pos: position{line: 880, col: 20, offset: 35812},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 880, col: 20, offset: 35812},
														run: (*parser).callonTitleElement125,
														expr: &seqExpr{
															pos: position{line: 880, col: 20, offset: 35812},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 880, col: 20, offset: 35812},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 880, col: 24, offset: 35816},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 897, col: 19, offset: 36535},
																		run: (*parser).callonTitleElement129,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 897, col: 19, offset: 36535},
																			expr: &choiceExpr{
																				pos: position{line: 897, col: 20, offset: 36536},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 1205, col: 14, offset: 47940},
																						run: (*parser).callonTitleElement132,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							expr: &charClassMatcher{
																								pos:        position{line: 1205, col: 14, offset: 47940},
																								val:        "[a-zA-Z0-9]",
																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 1215, col: 11, offset: 48287},
																						run: (*parser).callonTitleElement135,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							expr: &choiceExpr{
																								pos: position{line: 1243, col: 7, offset: 48832},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1243, col: 7, offset: 48832},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1243, col: 13, offset: 48838},
																										run: (*parser).callonTitleElement139,
																										expr: &litMatcher{
																											pos:        position{line: 1243, col: 13, offset: 48838},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 897, col: 41, offset: 36557},
																						run: (*parser).callonTitleElement141,
																						expr: &seqExpr{
																							pos: position{line: 897, col: 42, offset: 36558},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 897, col: 42, offset: 36558},
																									expr: &litMatcher{
																										pos:        position{line: 897, col: 43, offset: 36559},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 897, col: 47, offset: 36563},
																									expr: &litMatcher{
																										pos:        position{line: 897, col: 48, offset: 36564},
																										val:        "=",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 897, col: 52, offset: 36568},
																									expr: &litMatcher{
																										pos:        position{line: 897, col: 53, offset: 36569},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 897, col: 57, offset: 36573,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 880, col: 45, offset: 35837},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 881, col: 5, offset: 35845},
																	label: "width",
																	expr: &actionExpr{
																		pos: position{line: 897, col: 19, offset: 36535},
																		run: (*parser).callonTitleElement152,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 897, col: 19, offset: 36535},
																			expr: &choiceExpr{
																				pos: position{line: 897, col: 20, offset: 36536},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 1205, col: 14, offset: 47940},
																						run: (*parser).callonTitleElement155,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							expr: &charClassMatcher{
																								pos:        position{line: 1205, col: 14, offset: 47940},
																								val:        "[a-zA-Z0-9]",
																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 1215, col: 11, offset: 48287},
																						run: (*parser).callonTitleElement158,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							expr: &choiceExpr{
																								pos: position{line: 1243, col: 7, offset: 48832},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1243, col: 7, offset: 48832},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1243, col: 13, offset: 48838},
																										run: (*parser).callonTitleElement162,
																										expr: &litMatcher{
																											pos:        position{line: 1243, col: 13, offset: 48838},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 897, col: 41, offset: 36557},
																						run: (*parser).callonTitleElement164,
																						expr: &seqExpr{
																							pos: position{line: 897, col: 42, offset: 36558},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 897, col: 42, offset: 36558},
																									expr: &litMatcher{
																										pos:        position{line: 897, col: 43, offset: 36559},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 897, col: 47, offset: 36563},
																									expr: &litMatcher{
																										pos:        position{line: 897, col: 48, offset: 36564},
																										val:        "=",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 897, col: 52, offset: 36568},
																									expr: &litMatcher{
																										pos:        position{line: 897, col: 53, offset: 36569},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 897, col: 57, offset: 36573,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 881, col: 29, offset: 35869},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 882, col: 5, offset: 35877},
																	label: "height",
																	expr: &actionExpr{
																		pos: position{line: 897, col: 19, offset: 36535},
																		run: (*parser).callonTitleElement175,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 897, col: 19, offset: 36535},
																			expr: &choiceExpr{
																				pos: position{line: 897, col: 20, offset: 36536},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 1205, col: 14, offset: 47940},
																						run: (*parser).callonTitleElement178,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							expr: &charClassMatcher{
																								pos:        position{line: 1205, col: 14, offset: 47940},
																								val:        "[a-zA-Z0-9]",
																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 1215, col: 11, offset: 48287},
																						run: (*parser).callonTitleElement181,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							expr: &choiceExpr{
																								pos: position{line: 1243, col: 7, offset: 48832},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1243, col: 7, offset: 48832},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1243, col: 13, offset: 48838},
																										run: (*parser).callonTitleElement185,
																										expr: &litMatcher{
																											pos:        position{line: 1243, col: 13, offset: 48838},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 897, col: 41, offset: 36557},
																						run: (*parser).callonTitleElement187,
																						expr: &seqExpr{
																							pos: position{line: 897, col: 42, offset: 36558},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 897, col: 42, offset: 36558},
																									expr: &litMatcher{
																										pos:        position{line: 897, col: 43, offset: 36559},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 897, col: 47, offset: 36563},
																									expr: &litMatcher{
																										pos:        position{line: 897, col: 48, offset: 36564},
																										val:        "=",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 897, col: 52, offset: 36568},
																									expr: &litMatcher{
																										pos:        position{line: 897, col: 53, offset: 36569},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 897, col: 57, offset: 36573,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&zeroOrOneExpr{
																	pos: position{line: 882, col: 29, offset: 35901},
																	expr: &litMatcher{
																		pos:        position{line: 882, col: 29, offset: 35901},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&labeledExpr{
																	pos:   position{line: 883, col: 5, offset: 35910},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 883, col: 16, offset: 35921},
																		expr: &choiceExpr{
																			pos: position{line: 225, col: 21, offset: 7971},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 225, col: 21, offset: 7971},
																					run: (*parser).callonTitleElement201,
																					expr: &seqExpr{
																						pos: position{line: 225, col: 21, offset: 7971},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 225, col: 21, offset: 7971},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 231, col: 17, offset: 8231},
																									run: (*parser).callonTitleElement204,
																									expr: &seqExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												expr: &actionExpr{
																													pos: position{line: 259, col: 14, offset: 9116},
																													run: (*parser).callonTitleElement207,
																													expr: &litMatcher{
																														pos:        position{line: 259, col: 14, offset: 9116},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 231, col: 28, offset: 8242},
																												expr: &actionExpr{
																													pos: position{line: 282, col: 14, offset: 9780},
																													run: (*parser).callonTitleElement210,
																													expr: &litMatcher{
																														pos:        position{line: 282, col: 14, offset: 9780},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 231, col: 39, offset: 8253},
																												expr: &actionExpr{
																													pos: position{line: 1170, col: 16, offset: 47067},
																													run: (*parser).callonTitleElement213,
																													expr: &litMatcher{
																														pos:        position{line: 1170, col: 16, offset: 47067},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 231, col: 52, offset: 8266},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 231, col: 56, offset: 8270},
																													expr: &choiceExpr{
																														pos: position{line: 231, col: 57, offset: 8271},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1205, col: 14, offset: 47940},
																																run: (*parser).callonTitleElement218,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1205, col: 14, offset: 47940},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1205, col: 14, offset: 47940},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1215, col: 11, offset: 48287},
																																run: (*parser).callonTitleElement221,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1215, col: 11, offset: 48287},
																																	expr: &choiceExpr{
																																		pos: position{line: 1243, col: 7, offset: 48832},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1243, col: 7, offset: 48832},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1243, col: 13, offset: 48838},
																																				run: (*parser).callonTitleElement225,
																																				expr: &litMatcher{
																																					pos:        position{line: 1243, col: 13, offset: 48838},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 231, col: 78, offset: 8292},
																																run: (*parser).callonTitleElement227,
																																expr: &seqExpr{
																																	pos: position{line: 231, col: 79, offset: 8293},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 80, offset: 8294},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 231, col: 84, offset: 8298},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 85, offset: 8299},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 231, col: 89, offset: 8303},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 90, offset: 8304},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 231, col: 95, offset: 8309,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 225, col: 40, offset: 7990},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 225, col: 44, offset: 7994},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 237, col: 19, offset: 8403},
																									run: (*parser).callonTitleElement238,
																									expr: &labeledExpr{
																										pos:   position{line: 237, col: 19, offset: 8403},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 237, col: 25, offset: 8409},
																											expr: &choiceExpr{
																												pos: position{line: 237, col: 26, offset: 8410},
																												alternatives: []interface{}{
																													&actionExpr{
																														pos: position{line: 1205, col: 14, offset: 47940},
																														run: (*parser).callonTitleElement242,
																														expr: &oneOrMoreExpr{
																															pos: position{line: 1205, col: 14, offset: 47940},
																															expr: &charClassMatcher{
																																pos:        position{line: 1205, col: 14, offset: 47940},
																																val:        "[a-zA-Z0-9]",
																																ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																														},
																													},
																													&actionExpr{
																														pos: position{line: 1215, col: 11, offset: 48287},
																														run: (*parser).callonTitleElement245,
																														expr: &oneOrMoreExpr{
																															pos: position{line: 1215, col: 11, offset: 48287},
																															expr: &choiceExpr{
																																pos: position{line: 1243, col: 7, offset: 48832},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1243, col: 7, offset: 48832},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 1243, col: 13, offset: 48838},
																																		run: (*parser).callonTitleElement249,
																																		expr: &litMatcher{
																																			pos:        position{line: 1243, col: 13, offset: 48838},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&actionExpr{
																														pos: position{line: 237, col: 47, offset: 8431},
																														run: (*parser).callonTitleElement251,
																														expr: &seqExpr{
																															pos: position{line: 237, col: 48, offset: 8432},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 237, col: 48, offset: 8432},
																																	expr: &litMatcher{
																																		pos:        position{line: 237, col: 49, offset: 8433},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 237, col: 53, offset: 8437},
																																	expr: &litMatcher{
																																		pos:        position{line: 237, col: 54, offset: 8438},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 237, col: 58, offset: 8442},
																																	expr: &litMatcher{
																																		pos:        position{line: 237, col: 59, offset: 8443},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 237, col: 64, offset: 8448,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 225, col: 67, offset: 8017},
																								expr: &litMatcher{
																									pos:        position{line: 225, col: 67, offset: 8017},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 225, col: 72, offset: 8022},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonTitleElement265,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 227, col: 5, offset: 8106},
																					run: (*parser).callonTitleElement267,
																					expr: &seqExpr{
																						pos: position{line: 227, col: 5, offset: 8106},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 227, col: 5, offset: 8106},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 231, col: 17, offset: 8231},
																									run: (*parser).callonTitleElement270,
																									expr: &seqExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												expr: &actionExpr{
																													pos: position{line: 259, col: 14, offset: 9116},
																													run: (*parser).callonTitleElement273,
																													expr: &litMatcher{
																														pos:        position{line: 259, col: 14, offset: 9116},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 231, col: 28, offset: 8242},
																												expr: &actionExpr{
																													pos: position{line: 282, col: 14, offset: 9780},
																													run: (*parser).callonTitleElement276,
																													expr: &litMatcher{
																														pos:        position{line: 282, col: 14, offset: 9780},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 231, col: 39, offset: 8253},
																												expr: &actionExpr{
																													pos: position{line: 1170, col: 16, offset: 47067},
																													run: (*parser).callonTitleElement279,
																													expr: &litMatcher{
																														pos:        position{line: 1170, col: 16, offset: 47067},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 231, col: 52, offset: 8266},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 231, col: 56, offset: 8270},
																													expr: &choiceExpr{
																														pos: position{line: 231, col: 57, offset: 8271},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1205, col: 14, offset: 47940},
																																run: (*parser).callonTitleElement284,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1205, col: 14, offset: 47940},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1205, col: 14, offset: 47940},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1215, col: 11, offset: 48287},
																																run: (*parser).callonTitleElement287,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1215, col: 11, offset: 48287},
																																	expr: &choiceExpr{
																																		pos: position{line: 1243, col: 7, offset: 48832},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1243, col: 7, offset: 48832},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1243, col: 13, offset: 48838},
																																				run: (*parser).callonTitleElement291,
																																				expr: &litMatcher{
																																					pos:        position{line: 1243, col: 13, offset: 48838},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 231, col: 78, offset: 8292},
																																run: (*parser).callonTitleElement293,
																																expr: &seqExpr{
																																	pos: position{line: 231, col: 79, offset: 8293},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 80, offset: 8294},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 231, col: 84, offset: 8298},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 85, offset: 8299},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 231, col: 89, offset: 8303},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 90, offset: 8304},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 231, col: 95, offset: 8309,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 227, col: 24, offset: 8125},
																								expr: &litMatcher{
																									pos:        position{line: 227, col: 24, offset: 8125},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 227, col: 29, offset: 8130},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonTitleElement307,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 883, col: 36, offset: 35941},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 885, col: 5, offset: 36039},
														run: (*parser).callonTitleElement310,
														expr: &seqExpr{
															pos: position{line: 885, col: 5, offset: 36039},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 885, col: 5, offset: 36039},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 885, col: 9, offset: 36043},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 897, col: 19, offset: 36535},
																		run: (*parser).callonTitleElement314,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 897, col: 19, offset: 36535},
																			expr: &choiceExpr{
																				pos: position{line: 897, col: 20, offset: 36536},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 1205, col: 14, offset: 47940},
																						run: (*parser).callonTitleElement317,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							expr: &charClassMatcher{
																								pos:        position{line: 1205, col: 14, offset: 47940},
																								val:        "[a-zA-Z0-9]",
																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 1215, col: 11, offset: 48287},
																						run: (*parser).callonTitleElement320,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							expr: &choiceExpr{
																								pos: position{line: 1243, col: 7, offset: 48832},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1243, col: 7, offset: 48832},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1243, col: 13, offset: 48838},
																										run: (*parser).callonTitleElement324,
																										expr: &litMatcher{
																											pos:        position{line: 1243, col: 13, offset: 48838},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 897, col: 41, offset: 36557},
																						run: (*parser).callonTitleElement326,
																						expr: &seqExpr{
																							pos: position{line: 897, col: 42, offset: 36558},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 897, col: 42, offset: 36558},
																									expr: &litMatcher{
																										pos:        position{line: 897, col: 43, offset: 36559},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 897, col: 47, offset: 36563},
																									expr: &litMatcher{
																										pos:        position{line: 897, col: 48, offset: 36564},
																										val:        "=",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 897, col: 52, offset: 36568},
																									expr: &litMatcher{
																										pos:        position{line: 897, col: 53, offset: 36569},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 897, col: 57, offset: 36573,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 885, col: 30, offset: 36064},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 886, col: 5, offset: 36072},
																	label: "width",
																	expr: &actionExpr{
																		pos: position{line: 897, col: 19, offset: 36535},
																		run: (*parser).callonTitleElement337,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 897, col: 19, offset: 36535},
																			expr: &choiceExpr{
																				pos: position{line: 897, col: 20, offset: 36536},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 1205, col: 14, offset: 47940},
																						run: (*parser).callonTitleElement340,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							expr: &charClassMatcher{
																								pos:        position{line: 1205, col: 14, offset: 47940},
																								val:        "[a-zA-Z0-9]",
																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 1215, col: 11, offset: 48287},
																						run: (*parser).callonTitleElement343,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							expr: &choiceExpr{
																								pos: position{line: 1243, col: 7, offset: 48832},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1243, col: 7, offset: 48832},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1243, col: 13, offset: 48838},
																										run: (*parser).callonTitleElement347,
																										expr: &litMatcher{
																											pos:        position{line: 1243, col: 13, offset: 48838},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 897, col: 41, offset: 36557},
																						run: (*parser).callonTitleElement349,
																						expr: &seqExpr{
																							pos: position{line: 897, col: 42, offset: 36558},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 897, col: 42, offset: 36558},
																									expr: &litMatcher{
																										pos:        position{line: 897, col: 43, offset: 36559},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 897, col: 47, offset: 36563},
																									expr: &litMatcher{
																										pos:        position{line: 897, col: 48, offset: 36564},
																										val:        "=",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 897, col: 52, offset: 36568},
																									expr: &litMatcher{
																										pos:        position{line: 897, col: 53, offset: 36569},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 897, col: 57, offset: 36573,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&zeroOrOneExpr{
																	pos: position{line: 886, col: 28, offset: 36095},
																	expr: &litMatcher{
																		pos:        position{line: 886, col: 28, offset: 36095},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&labeledExpr{
																	pos:   position{line: 887, col: 5, offset: 36104},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 887, col: 16, offset: 36115},
																		expr: &choiceExpr{
																			pos: position{line: 225, col: 21, offset: 7971},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 225, col: 21, offset: 7971},
																					run: (*parser).callonTitleElement363,
																					expr: &seqExpr{
																						pos: position{line: 225, col: 21, offset: 7971},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 225, col: 21, offset: 7971},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 231, col: 17, offset: 8231},
																									run: (*parser).callonTitleElement366,
																									expr: &seqExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												expr: &actionExpr{
																													pos: position{line: 259, col: 14, offset: 9116},
																													run: (*parser).callonTitleElement369,
																													expr: &litMatcher{
																														pos:        position{line: 259, col: 14, offset: 9116},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 231, col: 28, offset: 8242},
																												expr: &actionExpr{
																													pos: position{line: 282, col: 14, offset: 9780},
																													run: (*parser).callonTitleElement372,
																													expr: &litMatcher{
																														pos:        position{line: 282, col: 14, offset: 9780},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 231, col: 39, offset: 8253},
																												expr: &actionExpr{
																													pos: position{line: 1170, col: 16, offset: 47067},
																													run: (*parser).callonTitleElement375,
																													expr: &litMatcher{
																														pos:        position{line: 1170, col: 16, offset: 47067},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 231, col: 52, offset: 8266},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 231, col: 56, offset: 8270},
																													expr: &choiceExpr{
																														pos: position{line: 231, col: 57, offset: 8271},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1205, col: 14, offset: 47940},
																																run: (*parser).callonTitleElement380,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1205, col: 14, offset: 47940},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1205, col: 14, offset: 47940},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1215, col: 11, offset: 48287},
																																run: (*parser).callonTitleElement383,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1215, col: 11, offset: 48287},
																																	expr: &choiceExpr{
																																		pos: position{line: 1243, col: 7, offset: 48832},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1243, col: 7, offset: 48832},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1243, col: 13, offset: 48838},
																																				run: (*parser).callonTitleElement387,
																																				expr: &litMatcher{
																																					pos:        position{line: 1243, col: 13, offset: 48838},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 231, col: 78, offset: 8292},
																																run: (*parser).callonTitleElement389,
																																expr: &seqExpr{
																																	pos: position{line: 231, col: 79, offset: 8293},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 80, offset: 8294},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 231, col: 84, offset: 8298},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 85, offset: 8299},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 231, col: 89, offset: 8303},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 90, offset: 8304},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 231, col: 95, offset: 8309,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 225, col: 40, offset: 7990},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 225, col: 44, offset: 7994},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 237, col: 19, offset: 8403},
																									run: (*parser).callonTitleElement400,
																									expr: &labeledExpr{
																										pos:   position{line: 237, col: 19, offset: 8403},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 237, col: 25, offset: 8409},
																											expr: &choiceExpr{
																												pos: position{line: 237, col: 26, offset: 8410},
																												alternatives: []interface{}{
																													&actionExpr{
																														pos: position{line: 1205, col: 14, offset: 47940},
																														run: (*parser).callonTitleElement404,
																														expr: &oneOrMoreExpr{
																															pos: position{line: 1205, col: 14, offset: 47940},
																															expr: &charClassMatcher{
																																pos:        position{line: 1205, col: 14, offset: 47940},
																																val:        "[a-zA-Z0-9]",
																																ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																														},
																													},
																													&actionExpr{
																														pos: position{line: 1215, col: 11, offset: 48287},
																														run: (*parser).callonTitleElement407,
																														expr: &oneOrMoreExpr{
																															pos: position{line: 1215, col: 11, offset: 48287},
																															expr: &choiceExpr{
																																pos: position{line: 1243, col: 7, offset: 48832},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1243, col: 7, offset: 48832},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 1243, col: 13, offset: 48838},
																																		run: (*parser).callonTitleElement411,
																																		expr: &litMatcher{
																																			pos:        position{line: 1243, col: 13, offset: 48838},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&actionExpr{
																														pos: position{line: 237, col: 47, offset: 8431},
																														run: (*parser).callonTitleElement413,
																														expr: &seqExpr{
																															pos: position{line: 237, col: 48, offset: 8432},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 237, col: 48, offset: 8432},
																																	expr: &litMatcher{
																																		pos:        position{line: 237, col: 49, offset: 8433},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 237, col: 53, offset: 8437},
																																	expr: &litMatcher{
																																		pos:        position{line: 237, col: 54, offset: 8438},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 237, col: 58, offset: 8442},
																																	expr: &litMatcher{
																																		pos:        position{line: 237, col: 59, offset: 8443},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 237, col: 64, offset: 8448,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 225, col: 67, offset: 8017},
																								expr: &litMatcher{
																									pos:        position{line: 225, col: 67, offset: 8017},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 225, col: 72, offset: 8022},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonTitleElement427,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 227, col: 5, offset: 8106},
																					run: (*parser).callonTitleElement429,
																					expr: &seqExpr{
																						pos: position{line: 227, col: 5, offset: 8106},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 227, col: 5, offset: 8106},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 231, col: 17, offset: 8231},
																									run: (*parser).callonTitleElement432,
																									expr: &seqExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												expr: &actionExpr{
																													pos: position{line: 259, col: 14, offset: 9116},
																													run: (*parser).callonTitleElement435,
																													expr: &litMatcher{
																														pos:        position{line: 259, col: 14, offset: 9116},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 231, col: 28, offset: 8242},
																												expr: &actionExpr{
																													pos: position{line: 282, col: 14, offset: 9780},
																													run: (*parser).callonTitleElement438,
																													expr: &litMatcher{
																														pos:        position{line: 282, col: 14, offset: 9780},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 231, col: 39, offset: 8253},
																												expr: &actionExpr{
																													pos: position{line: 1170, col: 16, offset: 47067},
																													run: (*parser).callonTitleElement441,
																													expr: &litMatcher{
																														pos:        position{line: 1170, col: 16, offset: 47067},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 231, col: 52, offset: 8266},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 231, col: 56, offset: 8270},
																													expr: &choiceExpr{
																														pos: position{line: 231, col: 57, offset: 8271},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1205, col: 14, offset: 47940},
																																run: (*parser).callonTitleElement446,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1205, col: 14, offset: 47940},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1205, col: 14, offset: 47940},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1215, col: 11, offset: 48287},
																																run: (*parser).callonTitleElement449,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1215, col: 11, offset: 48287},
																																	expr: &choiceExpr{
																																		pos: position{line: 1243, col: 7, offset: 48832},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1243, col: 7, offset: 48832},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1243, col: 13, offset: 48838},
																																				run: (*parser).callonTitleElement453,
																																				expr: &litMatcher{
																																					pos:        position{line: 1243, col: 13, offset: 48838},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 231, col: 78, offset: 8292},
																																run: (*parser).callonTitleElement455,
																																expr: &seqExpr{
																																	pos: position{line: 231, col: 79, offset: 8293},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 80, offset: 8294},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 231, col: 84, offset: 8298},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 85, offset: 8299},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 231, col: 89, offset: 8303},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 90, offset: 8304},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 231, col: 95, offset: 8309,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 227, col: 24, offset: 8125},
																								expr: &litMatcher{
																									pos:        position{line: 227, col: 24, offset: 8125},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 227, col: 29, offset: 8130},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonTitleElement469,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 887, col: 36, offset: 36135},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 889, col: 5, offset: 36230},
														run: (*parser).callonTitleElement472,
														expr: &seqExpr{
															pos: position{line: 889, col: 5, offset: 36230},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 889, col: 5, offset: 36230},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 889, col: 9, offset: 36234},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 897, col: 19, offset: 36535},
																		run: (*parser).callonTitleElement476,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 897, col: 19, offset: 36535},
																			expr: &choiceExpr{
																				pos: position{line: 897, col: 20, offset: 36536},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 1205, col: 14, offset: 47940},
																						run: (*parser).callonTitleElement479,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							expr: &charClassMatcher{
																								pos:        position{line: 1205, col: 14, offset: 47940},
																								val:        "[a-zA-Z0-9]",
																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 1215, col: 11, offset: 48287},
																						run: (*parser).callonTitleElement482,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							expr: &choiceExpr{
																								pos: position{line: 1243, col: 7, offset: 48832},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1243, col: 7, offset: 48832},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1243, col: 13, offset: 48838},
																										run: (*parser).callonTitleElement486,
																										expr: &litMatcher{
																											pos:        position{line: 1243, col: 13, offset: 48838},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 897, col: 41, offset: 36557},
																						run: (*parser).callonTitleElement488,
																						expr: &seqExpr{
																							pos: position{line: 897, col: 42, offset: 36558},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 897, col: 42, offset: 36558},
																									expr: &litMatcher{
																										pos:        position{line: 897, col: 43, offset: 36559},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 897, col: 47, offset: 36563},
																									expr: &litMatcher{
																										pos:        position{line: 897, col: 48, offset: 36564},
																										val:        "=",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 897, col: 52, offset: 36568},
																									expr: &litMatcher{
																										pos:        position{line: 897, col: 53, offset: 36569},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 897, col: 57, offset: 36573,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&zeroOrOneExpr{
																	pos: position{line: 889, col: 30, offset: 36255},
																	expr: &litMatcher{
																		pos:        position{line: 889, col: 30, offset: 36255},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&labeledExpr{
																	pos:   position{line: 890, col: 5, offset: 36264},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 890, col: 16, offset: 36275},
																		expr: &choiceExpr{
																			pos: position{line: 225, col: 21, offset: 7971},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 225, col: 21, offset: 7971},
																					run: (*parser).callonTitleElement502,
																					expr: &seqExpr{
																						pos: position{line: 225, col: 21, offset: 7971},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 225, col: 21, offset: 7971},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 231, col: 17, offset: 8231},
																									run: (*parser).callonTitleElement505,
																									expr: &seqExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												expr: &actionExpr{
																													pos: position{line: 259, col: 14, offset: 9116},
																													run: (*parser).callonTitleElement508,
																													expr: &litMatcher{
																														pos:        position{line: 259, col: 14, offset: 9116},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 231, col: 28, offset: 8242},
																												expr: &actionExpr{
																													pos: position{line: 282, col: 14, offset: 9780},
																													run: (*parser).callonTitleElement511,
																													expr: &litMatcher{
																														pos:        position{line: 282, col: 14, offset: 9780},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 231, col: 39, offset: 8253},
																												expr: &actionExpr{
																													pos: position{line: 1170, col: 16, offset: 47067},
																													run: (*parser).callonTitleElement514,
																													expr: &litMatcher{
																														pos:        position{line: 1170, col: 16, offset: 47067},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 231, col: 52, offset: 8266},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 231, col: 56, offset: 8270},
																													expr: &choiceExpr{
																														pos: position{line: 231, col: 57, offset: 8271},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1205, col: 14, offset: 47940},
																																run: (*parser).callonTitleElement519,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1205, col: 14, offset: 47940},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1205, col: 14, offset: 47940},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1215, col: 11, offset: 48287},
																																run: (*parser).callonTitleElement522,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1215, col: 11, offset: 48287},
																																	expr: &choiceExpr{
																																		pos: position{line: 1243, col: 7, offset: 48832},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1243, col: 7, offset: 48832},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1243, col: 13, offset: 48838},
																																				run: (*parser).callonTitleElement526,
																																				expr: &litMatcher{
																																					pos:        position{line: 1243, col: 13, offset: 48838},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 231, col: 78, offset: 8292},
																																run: (*parser).callonTitleElement528,
																																expr: &seqExpr{
																																	pos: position{line: 231, col: 79, offset: 8293},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 80, offset: 8294},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 231, col: 84, offset: 8298},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 85, offset: 8299},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 231, col: 89, offset: 8303},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 90, offset: 8304},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 231, col: 95, offset: 8309,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 225, col: 40, offset: 7990},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 225, col: 44, offset: 7994},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 237, col: 19, offset: 8403},
																									run: (*parser).callonTitleElement539,
																									expr: &labeledExpr{
																										pos:   position{line: 237, col: 19, offset: 8403},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 237, col: 25, offset: 8409},
																											expr: &choiceExpr{
																												pos: position{line: 237, col: 26, offset: 8410},
																												alternatives: []interface{}{
																													&actionExpr{
																														pos: position{line: 1205, col: 14, offset: 47940},
																														run: (*parser).callonTitleElement543,
																														expr: &oneOrMoreExpr{
																															pos: position{line: 1205, col: 14, offset: 47940},
																															expr: &charClassMatcher{
																																pos:        position{line: 1205, col: 14, offset: 47940},
																																val:        "[a-zA-Z0-9]",
																																ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																														},
																													},
																													&actionExpr{
																														pos: position{line: 1215, col: 11, offset: 48287},
																														run: (*parser).callonTitleElement546,
																														expr: &oneOrMoreExpr{
																															pos: position{line: 1215, col: 11, offset: 48287},
																															expr: &choiceExpr{
																																pos: position{line: 1243, col: 7, offset: 48832},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1243, col: 7, offset: 48832},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 1243, col: 13, offset: 48838},
																																		run: (*parser).callonTitleElement550,
																																		expr: &litMatcher{
																																			pos:        position{line: 1243, col: 13, offset: 48838},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&actionExpr{
																														pos: position{line: 237, col: 47, offset: 8431},
																														run: (*parser).callonTitleElement552,
																														expr: &seqExpr{
																															pos: position{line: 237, col: 48, offset: 8432},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 237, col: 48, offset: 8432},
																																	expr: &litMatcher{
																																		pos:        position{line: 237, col: 49, offset: 8433},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 237, col: 53, offset: 8437},
																																	expr: &litMatcher{
																																		pos:        position{line: 237, col: 54, offset: 8438},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 237, col: 58, offset: 8442},
																																	expr: &litMatcher{
																																		pos:        position{line: 237, col: 59, offset: 8443},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 237, col: 64, offset: 8448,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 225, col: 67, offset: 8017},
																								expr: &litMatcher{
																									pos:        position{line: 225, col: 67, offset: 8017},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 225, col: 72, offset: 8022},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonTitleElement566,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 227, col: 5, offset: 8106},
																					run: (*parser).callonTitleElement568,
																					expr: &seqExpr{
																						pos: position{line: 227, col: 5, offset: 8106},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 227, col: 5, offset: 8106},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 231, col: 17, offset: 8231},
																									run: (*parser).callonTitleElement571,
																									expr: &seqExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												expr: &actionExpr{
																													pos: position{line: 259, col: 14, offset: 9116},
																													run: (*parser).callonTitleElement574,
																													expr: &litMatcher{
																														pos:        position{line: 259, col: 14, offset: 9116},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 231, col: 28, offset: 8242},
																												expr: &actionExpr{
																													pos: position{line: 282, col: 14, offset: 9780},
																													run: (*parser).callonTitleElement577,
																													expr: &litMatcher{
																														pos:        position{line: 282, col: 14, offset: 9780},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 231, col: 39, offset: 8253},
																												expr: &actionExpr{
																													pos: position{line: 1170, col: 16, offset: 47067},
																													run: (*parser).callonTitleElement580,
																													expr: &litMatcher{
																														pos:        position{line: 1170, col: 16, offset: 47067},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 231, col: 52, offset: 8266},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 231, col: 56, offset: 8270},
																													expr: &choiceExpr{
																														pos: position{line: 231, col: 57, offset: 8271},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1205, col: 14, offset: 47940},
																																run: (*parser).callonTitleElement585,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1205, col: 14, offset: 47940},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1205, col: 14, offset: 47940},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1215, col: 11, offset: 48287},
																																run: (*parser).callonTitleElement588,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1215, col: 11, offset: 48287},
																																	expr: &choiceExpr{
																																		pos: position{line: 1243, col: 7, offset: 48832},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1243, col: 7, offset: 48832},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1243, col: 13, offset: 48838},
																																				run: (*parser).callonTitleElement592,
																																				expr: &litMatcher{
																																					pos:        position{line: 1243, col: 13, offset: 48838},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 231, col: 78, offset: 8292},
																																run: (*parser).callonTitleElement594,
																																expr: &seqExpr{
																																	pos: position{line: 231, col: 79, offset: 8293},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 80, offset: 8294},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 231, col: 84, offset: 8298},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 85, offset: 8299},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 231, col: 89, offset: 8303},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 90, offset: 8304},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 231, col: 95, offset: 8309,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 227, col: 24, offset: 8125},
																								expr: &litMatcher{
																									pos:        position{line: 227, col: 24, offset: 8125},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 227, col: 29, offset: 8130},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonTitleElement608,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 890, col: 36, offset: 36295},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 892, col: 5, offset: 36388},
														run: (*parser).callonTitleElement611,
														expr: &seqExpr{
															pos: position{line: 892, col: 5, offset: 36388},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 892, col: 5, offset: 36388},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 892, col: 9, offset: 36392},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 892, col: 20, offset: 36403},
																		expr: &choiceExpr{
																			pos: position{line: 225, col: 21, offset: 7971},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 225, col: 21, offset: 7971},
																					run: (*parser).callonTitleElement617,
																					expr: &seqExpr{
																						pos: position{line: 225, col: 21, offset: 7971},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 225, col: 21, offset: 7971},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 231, col: 17, offset: 8231},
																									run: (*parser).callonTitleElement620,
																									expr: &seqExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												expr: &actionExpr{
																													pos: position{line: 259, col: 14, offset: 9116},
																													run: (*parser).callonTitleElement623,
																													expr: &litMatcher{
																														pos:        position{line: 259, col: 14, offset: 9116},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 231, col: 28, offset: 8242},
																												expr: &actionExpr{
																													pos: position{line: 282, col: 14, offset: 9780},
																													run: (*parser).callonTitleElement626,
																													expr: &litMatcher{
																														pos:        position{line: 282, col: 14, offset: 9780},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 231, col: 39, offset: 8253},
																												expr: &actionExpr{
																													pos: position{line: 1170, col: 16, offset: 47067},
																													run: (*parser).callonTitleElement629,
																													expr: &litMatcher{
																														pos:        position{line: 1170, col: 16, offset: 47067},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 231, col: 52, offset: 8266},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 231, col: 56, offset: 8270},
																													expr: &choiceExpr{
																														pos: position{line: 231, col: 57, offset: 8271},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1205, col: 14, offset: 47940},
																																run: (*parser).callonTitleElement634,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1205, col: 14, offset: 47940},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1205, col: 14, offset: 47940},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1215, col: 11, offset: 48287},
																																run: (*parser).callonTitleElement637,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1215, col: 11, offset: 48287},
																																	expr: &choiceExpr{
																																		pos: position{line: 1243, col: 7, offset: 48832},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1243, col: 7, offset: 48832},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1243, col: 13, offset: 48838},
																																				run: (*parser).callonTitleElement641,
																																				expr: &litMatcher{
																																					pos:        position{line: 1243, col: 13, offset: 48838},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 231, col: 78, offset: 8292},
																																run: (*parser).callonTitleElement643,
																																expr: &seqExpr{
																																	pos: position{line: 231, col: 79, offset: 8293},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 80, offset: 8294},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 231, col: 84, offset: 8298},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 85, offset: 8299},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 231, col: 89, offset: 8303},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 90, offset: 8304},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 231, col: 95, offset: 8309,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 225, col: 40, offset: 7990},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 225, col: 44, offset: 7994},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 237, col: 19, offset: 8403},
																									run: (*parser).callonTitleElement654,
																									expr: &labeledExpr{
																										pos:   position{line: 237, col: 19, offset: 8403},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 237, col: 25, offset: 8409},
																											expr: &choiceExpr{
																												pos: position{line: 237, col: 26, offset: 8410},
																												alternatives: []interface{}{
																													&actionExpr{
																														pos: position{line: 1205, col: 14, offset: 47940},
																														run: (*parser).callonTitleElement658,
																														expr: &oneOrMoreExpr{
																															pos: position{line: 1205, col: 14, offset: 47940},
																															expr: &charClassMatcher{
																																pos:        position{line: 1205, col: 14, offset: 47940},
																																val:        "[a-zA-Z0-9]",
																																ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																														},
																													},
																													&actionExpr{
																														pos: position{line: 1215, col: 11, offset: 48287},
																														run: (*parser).callonTitleElement661,
																														expr: &oneOrMoreExpr{
																															pos: position{line: 1215, col: 11, offset: 48287},
																															expr: &choiceExpr{
																																pos: position{line: 1243, col: 7, offset: 48832},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1243, col: 7, offset: 48832},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 1243, col: 13, offset: 48838},
																																		run: (*parser).callonTitleElement665,
																																		expr: &litMatcher{
																																			pos:        position{line: 1243, col: 13, offset: 48838},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&actionExpr{
																														pos: position{line: 237, col: 47, offset: 8431},
																														run: (*parser).callonTitleElement667,
																														expr: &seqExpr{
																															pos: position{line: 237, col: 48, offset: 8432},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 237, col: 48, offset: 8432},
																																	expr: &litMatcher{
																																		pos:        position{line: 237, col: 49, offset: 8433},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 237, col: 53, offset: 8437},
																																	expr: &litMatcher{
																																		pos:        position{line: 237, col: 54, offset: 8438},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 237, col: 58, offset: 8442},
																																	expr: &litMatcher{
																																		pos:        position{line: 237, col: 59, offset: 8443},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 237, col: 64, offset: 8448,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 225, col: 67, offset: 8017},
																								expr: &litMatcher{
																									pos:        position{line: 225, col: 67, offset: 8017},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 225, col: 72, offset: 8022},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonTitleElement681,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 227, col: 5, offset: 8106},
																					run: (*parser).callonTitleElement683,
																					expr: &seqExpr{
																						pos: position{line: 227, col: 5, offset: 8106},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 227, col: 5, offset: 8106},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 231, col: 17, offset: 8231},
																									run: (*parser).callonTitleElement686,
																									expr: &seqExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												expr: &actionExpr{
																													pos: position{line: 259, col: 14, offset: 9116},
																													run: (*parser).callonTitleElement689,
																													expr: &litMatcher{
																														pos:        position{line: 259, col: 14, offset: 9116},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 231, col: 28, offset: 8242},
																												expr: &actionExpr{
																													pos: position{line: 282, col: 14, offset: 9780},
																													run: (*parser).callonTitleElement692,
																													expr: &litMatcher{
																														pos:        position{line: 282, col: 14, offset: 9780},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 231, col: 39, offset: 8253},
																												expr: &actionExpr{
																													pos: position{line: 1170, col: 16, offset: 47067},
																													run: (*parser).callonTitleElement695,
																													expr: &litMatcher{
																														pos:        position{line: 1170, col: 16, offset: 47067},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 231, col: 52, offset: 8266},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 231, col: 56, offset: 8270},
																													expr: &choiceExpr{
																														pos: position{line: 231, col: 57, offset: 8271},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1205, col: 14, offset: 47940},
																																run: (*parser).callonTitleElement700,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1205, col: 14, offset: 47940},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1205, col: 14, offset: 47940},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1215, col: 11, offset: 48287},
																																run: (*parser).callonTitleElement703,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1215, col: 11, offset: 48287},
																																	expr: &choiceExpr{
																																		pos: position{line: 1243, col: 7, offset: 48832},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1243, col: 7, offset: 48832},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1243, col: 13, offset: 48838},
																																				run: (*parser).callonTitleElement707,
																																				expr: &litMatcher{
																																					pos:        position{line: 1243, col: 13, offset: 48838},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 231, col: 78, offset: 8292},
																																run: (*parser).callonTitleElement709,
																																expr: &seqExpr{
																																	pos: position{line: 231, col: 79, offset: 8293},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 80, offset: 8294},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 231, col: 84, offset: 8298},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 85, offset: 8299},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 231, col: 89, offset: 8303},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 90, offset: 8304},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 231, col: 95, offset: 8309,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 227, col: 24, offset: 8125},
																								expr: &litMatcher{
																									pos:        position{line: 227, col: 24, offset: 8125},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 227, col: 29, offset: 8130},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonTitleElement723,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 892, col: 40, offset: 36423},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 832, col: 9, offset: 34134},
								run: (*parser).callonTitleElement726,
								expr: &labeledExpr{
									pos:   position{line: 832, col: 9, offset: 34134},
									label: "link",
									expr: &choiceExpr{
										pos: position{line: 832, col: 15, offset: 34140},
										alternatives: []interface{}{
											&actionExpr{
												pos: position{line: 847, col: 17, offset: 34592},
												run: (*parser).callonTitleElement729,
												expr: &seqExpr{
													pos: position{line: 847, col: 17, offset: 34592},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 847, col: 17, offset: 34592},
															val:        "link:",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 847, col: 25, offset: 34600},
															label: "url",
															expr: &actionExpr{
																pos: position{line: 851, col: 20, offset: 34769},
																run: (*parser).callonTitleElement733,
																expr: &seqExpr{
																	pos: position{line: 851, col: 20, offset: 34769},
																	exprs: []interface{}{
																		&zeroOrOneExpr{
																			pos: position{line: 851, col: 20, offset: 34769},
																			expr: &choiceExpr{
																				pos: position{line: 1237, col: 15, offset: 48717},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1237, col: 15, offset: 48717},
																						val:        "http://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 1237, col: 27, offset: 48729},
																						val:        "https://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 1237, col: 40, offset: 48742},
																						val:        "ftp://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 1237, col: 51, offset: 48753},
																						val:        "irc://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 1237, col: 62, offset: 48764},
																						val:        "mailto:",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 1219, col: 8, offset: 48334},
																			run: (*parser).callonTitleElement742,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1219, col: 8, offset: 48334},
																				expr: &choiceExpr{
																					pos: position{line: 1219, col: 9, offset: 48335},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonTitleElement745,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1219, col: 21, offset: 48347},
																							run: (*parser).callonTitleElement748,
																							expr: &seqExpr{
																								pos: position{line: 1219, col: 22, offset: 48348},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1219, col: 22, offset: 48348},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1219, col: 31, offset: 48357},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonTitleElement757,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1219, col: 35, offset: 48361},
																										expr: &litMatcher{
																											pos:        position{line: 1219, col: 36, offset: 48362},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1219, col: 40, offset: 48366},
																										expr: &litMatcher{
																											pos:        position{line: 1219, col: 41, offset: 48367},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1219, col: 46, offset: 48372,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&labeledExpr{
															pos:   position{line: 847, col: 47, offset: 34622},
															label: "inlineAttributes",
															expr: &choiceExpr{
																pos: position{line: 855, col: 19, offset: 34839},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 855, col: 19, offset: 34839},
																		run: (*parser).callonTitleElement766,
																		expr: &seqExpr{
																			pos: position{line: 855, col: 19, offset: 34839},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 855, col: 19, offset: 34839},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 855, col: 23, offset: 34843},
																					label: "text",
																					expr: &actionExpr{
																						pos: position{line: 862, col: 22, offset: 35131},
																						run: (*parser).callonTitleElement770,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 862, col: 22, offset: 35131},
																							expr: &choiceExpr{
																								pos: position{line: 862, col: 23, offset: 35132},
																								alternatives: []interface{}{
																									&actionExpr{
																										pos: position{line: 1205, col: 14, offset: 47940},
																										run: (*parser).callonTitleElement773,
																										expr: &oneOrMoreExpr{
																											pos: position{line: 1205, col: 14, offset: 47940},
																											expr: &charClassMatcher{
																												pos:        position{line: 1205, col: 14, offset: 47940},
																												val:        "[a-zA-Z0-9]",
																												ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																									&actionExpr{
																										pos: position{line: 1215, col: 11, offset: 48287},
																										run: (*parser).callonTitleElement776,
																										expr: &oneOrMoreExpr{
																											pos: position{line: 1215, col: 11, offset: 48287},
																											expr: &choiceExpr{
																												pos: position{line: 1243, col: 7, offset: 48832},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1243, col: 7, offset: 48832},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 1243, col: 13, offset: 48838},
																														run: (*parser).callonTitleElement780,
																														expr: &litMatcher{
																															pos:        position{line: 1243, col: 13, offset: 48838},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																									},
																									&actionExpr{
																										pos: position{line: 862, col: 44, offset: 35153},
																										run: (*parser).callonTitleElement782,
																										expr: &seqExpr{
																											pos: position{line: 862, col: 45, offset: 35154},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 862, col: 45, offset: 35154},
																													expr: &litMatcher{
																														pos:        position{line: 862, col: 46, offset: 35155},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 862, col: 50, offset: 35159},
																													expr: &litMatcher{
																														pos:        position{line: 862, col: 51, offset: 35160},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 862, col: 56, offset: 35165,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&labeledExpr{
																					pos:   position{line: 856, col: 9, offset: 34876},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 856, col: 20, offset: 34887},
																						expr: &choiceExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 225, col: 21, offset: 7971},
																									run: (*parser).callonTitleElement792,
																									expr: &seqExpr{
																										pos: position{line: 225, col: 21, offset: 7971},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 225, col: 21, offset: 7971},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													run: (*parser).callonTitleElement795,
																													expr: &seqExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																expr: &actionExpr{
																																	pos: position{line: 259, col: 14, offset: 9116},
																																	run: (*parser).callonTitleElement798,
																																	expr: &litMatcher{
																																		pos:        position{line: 259, col: 14, offset: 9116},
																																		val:        "quote",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 231, col: 28, offset: 8242},
																																expr: &actionExpr{
																																	pos: position{line: 282, col: 14, offset: 9780},
																																	run: (*parser).callonTitleElement801,
																																	expr: &litMatcher{
																																		pos:        position{line: 282, col: 14, offset: 9780},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 231, col: 39, offset: 8253},
																																expr: &actionExpr{
																																	pos: position{line: 1170, col: 16, offset: 47067},
																																	run: (*parser).callonTitleElement804,
																																	expr: &litMatcher{
																																		pos:        position{line: 1170, col: 16, offset: 47067},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 231, col: 52, offset: 8266},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 231, col: 56, offset: 8270},
																																	expr: &choiceExpr{
																																		pos: position{line: 231, col: 57, offset: 8271},
																																		alternatives: []interface{}{
																																			&actionExpr{
																																				pos: position{line: 1205, col: 14, offset: 47940},
																																				run: (*parser).callonTitleElement809,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1205, col: 14, offset: 47940},
																																					expr: &charClassMatcher{
																																						pos:        position{line: 1205, col: 14, offset: 47940},
																																						val:        "[a-zA-Z0-9]",
																																						ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																						ignoreCase: false,
																																						inverted:   false,
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 1215, col: 11, offset: 48287},
																																				run: (*parser).callonTitleElement812,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1215, col: 11, offset: 48287},
																																					expr: &choiceExpr{
																																						pos: position{line: 1243, col: 7, offset: 48832},
																																						alternatives: []interface{}{
																																							&litMatcher{
																																								pos:        position{line: 1243, col: 7, offset: 48832},
																																								val:        " ",
																																								ignoreCase: false,
																																							},
																																							&actionExpr{
																																								pos: position{line: 1243, col: 13, offset: 48838},
																																								run: (*parser).callonTitleElement816,
																																								expr: &litMatcher{
																																									pos:        position{line: 1243, col: 13, offset: 48838},
																																									val:        "\t",
																																									ignoreCase: false,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 231, col: 78, offset: 8292},
																																				run: (*parser).callonTitleElement818,
																																				expr: &seqExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 80, offset: 8294},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 231, col: 84, offset: 8298},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 85, offset: 8299},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 231, col: 89, offset: 8303},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 90, offset: 8304},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 231, col: 95, offset: 8309,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 225, col: 40, offset: 7990},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 225, col: 44, offset: 7994},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 237, col: 19, offset: 8403},
																													run: (*parser).callonTitleElement829,
																													expr: &labeledExpr{
																														pos:   position{line: 237, col: 19, offset: 8403},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 237, col: 25, offset: 8409},
																															expr: &choiceExpr{
																																pos: position{line: 237, col: 26, offset: 8410},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		run: (*parser).callonTitleElement833,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1205, col: 14, offset: 47940},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1205, col: 14, offset: 47940},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		run: (*parser).callonTitleElement836,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1215, col: 11, offset: 48287},
																																			expr: &choiceExpr{
																																				pos: position{line: 1243, col: 7, offset: 48832},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1243, col: 7, offset: 48832},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1243, col: 13, offset: 48838},
																																						run: (*parser).callonTitleElement840,
																																						expr: &litMatcher{
																																							pos:        position{line: 1243, col: 13, offset: 48838},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 237, col: 47, offset: 8431},
																																		run: (*parser).callonTitleElement842,
																																		expr: &seqExpr{
																																			pos: position{line: 237, col: 48, offset: 8432},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 237, col: 48, offset: 8432},
																																					expr: &litMatcher{
																																						pos:        position{line: 237, col: 49, offset: 8433},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 237, col: 53, offset: 8437},
																																					expr: &litMatcher{
																																						pos:        position{line: 237, col: 54, offset: 8438},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 237, col: 58, offset: 8442},
																																					expr: &litMatcher{
																																						pos:        position{line: 237, col: 59, offset: 8443},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 237, col: 64, offset: 8448,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 225, col: 67, offset: 8017},
																												expr: &litMatcher{
																													pos:        position{line: 225, col: 67, offset: 8017},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 225, col: 72, offset: 8022},
																												expr: &choiceExpr{
																													pos: position{line: 1243, col: 7, offset: 48832},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1243, col: 7, offset: 48832},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1243, col: 13, offset: 48838},
																															run: (*parser).callonTitleElement856,
																															expr: &litMatcher{
																																pos:        position{line: 1243, col: 13, offset: 48838},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 227, col: 5, offset: 8106},
																									run: (*parser).callonTitleElement858,
																									expr: &seqExpr{
																										pos: position{line: 227, col: 5, offset: 8106},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 227, col: 5, offset: 8106},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													run: (*parser).callonTitleElement861,
																													expr: &seqExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																expr: &actionExpr{
																																	pos: position{line: 259, col: 14, offset: 9116},
																																	run: (*parser).callonTitleElement864,
																																	expr: &litMatcher{
																																		pos:        position{line: 259, col: 14, offset: 9116},
																																		val:        "quote",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 231, col: 28, offset: 8242},
																																expr: &actionExpr{
																																	pos: position{line: 282, col: 14, offset: 9780},
																																	run: (*parser).callonTitleElement867,
																																	expr: &litMatcher{
																																		pos:        position{line: 282, col: 14, offset: 9780},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 231, col: 39, offset: 8253},
																																expr: &actionExpr{
																																	pos: position{line: 1170, col: 16, offset: 47067},
																																	run: (*parser).callonTitleElement870,
																																	expr: &litMatcher{
																																		pos:        position{line: 1170, col: 16, offset: 47067},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 231, col: 52, offset: 8266},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 231, col: 56, offset: 8270},
																																	expr: &choiceExpr{
																																		pos: position{line: 231, col: 57, offset: 8271},
																																		alternatives: []interface{}{
																																			&actionExpr{
																																				pos: position{line: 1205, col: 14, offset: 47940},
																																				run: (*parser).callonTitleElement875,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1205, col: 14, offset: 47940},
																																					expr: &charClassMatcher{
																																						pos:        position{line: 1205, col: 14, offset: 47940},
																																						val:        "[a-zA-Z0-9]",
																																						ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																						ignoreCase: false,
																																						inverted:   false,
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 1215, col: 11, offset: 48287},
																																				run: (*parser).callonTitleElement878,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1215, col: 11, offset: 48287},
																																					expr: &choiceExpr{
																																						pos: position{line: 1243, col: 7, offset: 48832},
																																						alternatives: []interface{}{
																																							&litMatcher{
																																								pos:        position{line: 1243, col: 7, offset: 48832},
																																								val:        " ",
																																								ignoreCase: false,
																																							},
																																							&actionExpr{
																																								pos: position{line: 1243, col: 13, offset: 48838},
																																								run: (*parser).callonTitleElement882,
																																								expr: &litMatcher{
																																									pos:        position{line: 1243, col: 13, offset: 48838},
																																									val:        "\t",
																																									ignoreCase: false,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 231, col: 78, offset: 8292},
																																				run: (*parser).callonTitleElement884,
																																				expr: &seqExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 80, offset: 8294},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 231, col: 84, offset: 8298},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 85, offset: 8299},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 231, col: 89, offset: 8303},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 90, offset: 8304},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 231, col: 95, offset: 8309,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 227, col: 24, offset: 8125},
																												expr: &litMatcher{
																													pos:        position{line: 227, col: 24, offset: 8125},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 227, col: 29, offset: 8130},
																												expr: &choiceExpr{
																													pos: position{line: 1243, col: 7, offset: 48832},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1243, col: 7, offset: 48832},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1243, col: 13, offset: 48838},
																															run: (*parser).callonTitleElement898,
																															expr: &litMatcher{
																																pos:        position{line: 1243, col: 13, offset: 48838},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 856, col: 40, offset: 34907},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 858, col: 5, offset: 34992},
																		run: (*parser).callonTitleElement901,
																		expr: &seqExpr{
																			pos: position{line: 858, col: 5, offset: 34992},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 858, col: 5, offset: 34992},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 858, col: 9, offset: 34996},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 858, col: 20, offset: 35007},
																						expr: &choiceExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 225, col: 21, offset: 7971},
																									run: (*parser).callonTitleElement907,
																									expr: &seqExpr{
																										pos: position{line: 225, col: 21, offset: 7971},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 225, col: 21, offset: 7971},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													run: (*parser).callonTitleElement910,
																													expr: &seqExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																expr: &actionExpr{
																																	pos: position{line: 259, col: 14, offset: 9116},
																																	run: (*parser).callonTitleElement913,
																																	expr: &litMatcher{
																																		pos:        position{line: 259, col: 14, offset: 9116},
																																		val:        "quote",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 231, col: 28, offset: 8242},
																																expr: &actionExpr{
																																	pos: position{line: 282, col: 14, offset: 9780},
																																	run: (*parser).callonTitleElement916,
																																	expr: &litMatcher{
																																		pos:        position{line: 282, col: 14, offset: 9780},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 231, col: 39, offset: 8253},
																																expr: &actionExpr{
																																	pos: position{line: 1170, col: 16, offset: 47067},
																																	run: (*parser).callonTitleElement919,
																																	expr: &litMatcher{
																																		pos:        position{line: 1170, col: 16, offset: 47067},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 231, col: 52, offset: 8266},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 231, col: 56, offset: 8270},
																																	expr: &choiceExpr{
																																		pos: position{line: 231, col: 57, offset: 8271},
																																		alternatives: []interface{}{
																																			&actionExpr{
																																				pos: position{line: 1205, col: 14, offset: 47940},
																																				run: (*parser).callonTitleElement924,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1205, col: 14, offset: 47940},
																																					expr: &charClassMatcher{
																																						pos:        position{line: 1205, col: 14, offset: 47940},
																																						val:        "[a-zA-Z0-9]",
																																						ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																						ignoreCase: false,
																																						inverted:   false,
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 1215, col: 11, offset: 48287},
																																				run: (*parser).callonTitleElement927,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1215, col: 11, offset: 48287},
																																					expr: &choiceExpr{
																																						pos: position{line: 1243, col: 7, offset: 48832},
																																						alternatives: []interface{}{
																																							&litMatcher{
																																								pos:        position{line: 1243, col: 7, offset: 48832},
																																								val:        " ",
																																								ignoreCase: false,
																																							},
																																							&actionExpr{
																																								pos: position{line: 1243, col: 13, offset: 48838},
																																								run: (*parser).callonTitleElement931,
																																								expr: &litMatcher{
																																									pos:        position{line: 1243, col: 13, offset: 48838},
																																									val:        "\t",
																																									ignoreCase: false,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 231, col: 78, offset: 8292},
																																				run: (*parser).callonTitleElement933,
																																				expr: &seqExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 80, offset: 8294},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 231, col: 84, offset: 8298},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 85, offset: 8299},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 231, col: 89, offset: 8303},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 90, offset: 8304},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 231, col: 95, offset: 8309,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 225, col: 40, offset: 7990},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 225, col: 44, offset: 7994},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 237, col: 19, offset: 8403},
																													run: (*parser).callonTitleElement944,
																													expr: &labeledExpr{
																														pos:   position{line: 237, col: 19, offset: 8403},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 237, col: 25, offset: 8409},
																															expr: &choiceExpr{
																																pos: position{line: 237, col: 26, offset: 8410},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		run: (*parser).callonTitleElement948,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1205, col: 14, offset: 47940},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1205, col: 14, offset: 47940},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		run: (*parser).callonTitleElement951,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1215, col: 11, offset: 48287},
																																			expr: &choiceExpr{
																																				pos: position{line: 1243, col: 7, offset: 48832},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1243, col: 7, offset: 48832},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1243, col: 13, offset: 48838},
																																						run: (*parser).callonTitleElement955,
																																						expr: &litMatcher{
																																							pos:        position{line: 1243, col: 13, offset: 48838},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 237, col: 47, offset: 8431},
																																		run: (*parser).callonTitleElement957,
																																		expr: &seqExpr{
																																			pos: position{line: 237, col: 48, offset: 8432},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 237, col: 48, offset: 8432},
																																					expr: &litMatcher{
																																						pos:        position{line: 237, col: 49, offset: 8433},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 237, col: 53, offset: 8437},
																																					expr: &litMatcher{
																																						pos:        position{line: 237, col: 54, offset: 8438},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 237, col: 58, offset: 8442},
																																					expr: &litMatcher{
																																						pos:        position{line: 237, col: 59, offset: 8443},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 237, col: 64, offset: 8448,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 225, col: 67, offset: 8017},
																												expr: &litMatcher{
																													pos:        position{line: 225, col: 67, offset: 8017},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 225, col: 72, offset: 8022},
																												expr: &choiceExpr{
																													pos: position{line: 1243, col: 7, offset: 48832},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1243, col: 7, offset: 48832},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1243, col: 13, offset: 48838},
																															run: (*parser).callonTitleElement971,
																															expr: &litMatcher{
																																pos:        position{line: 1243, col: 13, offset: 48838},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 227, col: 5, offset: 8106},
																									run: (*parser).callonTitleElement973,
																									expr: &seqExpr{
																										pos: position{line: 227, col: 5, offset: 8106},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 227, col: 5, offset: 8106},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													run: (*parser).callonTitleElement976,
																													expr: &seqExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																expr: &actionExpr{
																																	pos: position{line: 259, col: 14, offset: 9116},
																																	run: (*parser).callonTitleElement979,
																																	expr: &litMatcher{
																																		pos:        position{line: 259, col: 14, offset: 9116},
																																		val:        "quote",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 231, col: 28, offset: 8242},
																																expr: &actionExpr{
																																	pos: position{line: 282, col: 14, offset: 9780},
																																	run: (*parser).callonTitleElement982,
																																	expr: &litMatcher{
																																		pos:        position{line: 282, col: 14, offset: 9780},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 231, col: 39, offset: 8253},
																																expr: &actionExpr{
																																	pos: position{line: 1170, col: 16, offset: 47067},
																																	run: (*parser).callonTitleElement985,
																																	expr: &litMatcher{
																																		pos:        position{line: 1170, col: 16, offset: 47067},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 231, col: 52, offset: 8266},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 231, col: 56, offset: 8270},
																																	expr: &choiceExpr{
																																		pos: position{line: 231, col: 57, offset: 8271},
																																		alternatives: []interface{}{
																																			&actionExpr{
																																				pos: position{line: 1205, col: 14, offset: 47940},
																																				run: (*parser).callonTitleElement990,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1205, col: 14, offset: 47940},
																																					expr: &charClassMatcher{
																																						pos:        position{line: 1205, col: 14, offset: 47940},
																																						val:        "[a-zA-Z0-9]",
																																						ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																						ignoreCase: false,
																																						inverted:   false,
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 1215, col: 11, offset: 48287},
																																				run: (*parser).callonTitleElement993,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1215, col: 11, offset: 48287},
																																					expr: &choiceExpr{
																																						pos: position{line: 1243, col: 7, offset: 48832},
																																						alternatives: []interface{}{
																																							&litMatcher{
																																								pos:        position{line: 1243, col: 7, offset: 48832},
																																								val:        " ",
																																								ignoreCase: false,
																																							},
																																							&actionExpr{
																																								pos: position{line: 1243, col: 13, offset: 48838},
																																								run: (*parser).callonTitleElement997,
																																								expr: &litMatcher{
																																									pos:        position{line: 1243, col: 13, offset: 48838},
																																									val:        "\t",
																																									ignoreCase: false,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 231, col: 78, offset: 8292},
																																				run: (*parser).callonTitleElement999,
																																				expr: &seqExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 80, offset: 8294},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 231, col: 84, offset: 8298},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 85, offset: 8299},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 231, col: 89, offset: 8303},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 90, offset: 8304},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 231, col: 95, offset: 8309,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 227, col: 24, offset: 8125},
																												expr: &litMatcher{
																													pos:        position{line: 227, col: 24, offset: 8125},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 227, col: 29, offset: 8130},
																												expr: &choiceExpr{
																													pos: position{line: 1243, col: 7, offset: 48832},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1243, col: 7, offset: 48832},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1243, col: 13, offset: 48838},
																															run: (*parser).callonTitleElement1013,
																															expr: &litMatcher{
																																pos:        position{line: 1243, col: 13, offset: 48838},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 858, col: 40, offset: 35027},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&actionExpr{
												pos: position{line: 836, col: 17, offset: 34211},
												run: (*parser).callonTitleElement1016,
												expr: &seqExpr{
													pos: position{line: 836, col: 17, offset: 34211},
													exprs: []interface{}{
														&labeledExpr{
															pos:   position{line: 836, col: 17, offset: 34211},
															label: "url",
															expr: &actionExpr{
																pos: position{line: 842, col: 20, offset: 34458},
																run: (*parser).callonTitleElement1019,
																expr: &seqExpr{
																	pos: position{line: 842, col: 20, offset: 34458},
																	exprs: []interface{}{
																		&choiceExpr{
																			pos: position{line: 1237, col: 15, offset: 48717},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1237, col: 15, offset: 48717},
																					val:        "http://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1237, col: 27, offset: 48729},
																					val:        "https://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1237, col: 40, offset: 48742},
																					val:        "ftp://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1237, col: 51, offset: 48753},
																					val:        "irc://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1237, col: 62, offset: 48764},
																					val:        "mailto:",
																					ignoreCase: false,
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 1219, col: 8, offset: 48334},
																			run: (*parser).callonTitleElement1027,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1219, col: 8, offset: 48334},
																				expr: &choiceExpr{
																					pos: position{line: 1219, col: 9, offset: 48335},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonTitleElement1030,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1219, col: 21, offset: 48347},
																							run: (*parser).callonTitleElement1033,
																							expr: &seqExpr{
																								pos: position{line: 1219, col: 22, offset: 48348},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1219, col: 22, offset: 48348},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1219, col: 31, offset: 48357},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonTitleElement1042,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1219, col: 35, offset: 48361},
																										expr: &litMatcher{
																											pos:        position{line: 1219, col: 36, offset: 48362},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1219, col: 40, offset: 48366},
																										expr: &litMatcher{
																											pos:        position{line: 1219, col: 41, offset: 48367},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1219, col: 46, offset: 48372,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&labeledExpr{
															pos:   position{line: 836, col: 39, offset: 34233},
															label: "inlineAttributes",
															expr: &choiceExpr{
																pos: position{line: 855, col: 19, offset: 34839},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 855, col: 19, offset: 34839},
																		run: (*parser).callonTitleElement1051,
																		expr: &seqExpr{
																			pos: position{line: 855, col: 19, offset: 34839},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 855, col: 19, offset: 34839},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 855, col: 23, offset: 34843},
																					label: "text",
																					expr: &actionExpr{
																						pos: position{line: 862, col: 22, offset: 35131},
																						run: (*parser).callonTitleElement1055,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 862, col: 22, offset: 35131},
																							expr: &choiceExpr{
																								pos: position{line: 862, col: 23, offset: 35132},
																								alternatives: []interface{}{
																									&actionExpr{
																										pos: position{line: 1205, col: 14, offset: 47940},
																										run: (*parser).callonTitleElement1058,
																										expr: &oneOrMoreExpr{
																											pos: position{line: 1205, col: 14, offset: 47940},
																											expr: &charClassMatcher{
																												pos:        position{line: 1205, col: 14, offset: 47940},
																												val:        "[a-zA-Z0-9]",
																												ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																									&actionExpr{
																										pos: position{line: 1215, col: 11, offset: 48287},
																										run: (*parser).callonTitleElement1061,
																										expr: &oneOrMoreExpr{
																											pos: position{line: 1215, col: 11, offset: 48287},
																											expr: &choiceExpr{
																												pos: position{line: 1243, col: 7, offset: 48832},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1243, col: 7, offset: 48832},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 1243, col: 13, offset: 48838},
																														run: (*parser).callonTitleElement1065,
																														expr: &litMatcher{
																															pos:        position{line: 1243, col: 13, offset: 48838},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																									},
																									&actionExpr{
																										pos: position{line: 862, col: 44, offset: 35153},
																										run: (*parser).callonTitleElement1067,
																										expr: &seqExpr{
																											pos: position{line: 862, col: 45, offset: 35154},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 862, col: 45, offset: 35154},
																													expr: &litMatcher{
																														pos:        position{line: 862, col: 46, offset: 35155},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 862, col: 50, offset: 35159},
																													expr: &litMatcher{
																														pos:        position{line: 862, col: 51, offset: 35160},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 862, col: 56, offset: 35165,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&labeledExpr{
																					pos:   position{line: 856, col: 9, offset: 34876},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 856, col: 20, offset: 34887},
																						expr: &choiceExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 225, col: 21, offset: 7971},
																									run: (*parser).callonTitleElement1077,
																									expr: &seqExpr{
																										pos: position{line: 225, col: 21, offset: 7971},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 225, col: 21, offset: 7971},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													run: (*parser).callonTitleElement1080,
																													expr: &seqExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																expr: &actionExpr{
																																	pos: position{line: 259, col: 14, offset: 9116},
																																	run: (*parser).callonTitleElement1083,
																																	expr: &litMatcher{
																																		pos:        position{line: 259, col: 14, offset: 9116},
																																		val:        "quote",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 231, col: 28, offset: 8242},
																																expr: &actionExpr{
																																	pos: position{line: 282, col: 14, offset: 9780},
																																	run: (*parser).callonTitleElement1086,
																																	expr: &litMatcher{
																																		pos:        position{line: 282, col: 14, offset: 9780},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 231, col: 39, offset: 8253},
																																expr: &actionExpr{
																																	pos: position{line: 1170, col: 16, offset: 47067},
																																	run: (*parser).callonTitleElement1089,
																																	expr: &litMatcher{
																																		pos:        position{line: 1170, col: 16, offset: 47067},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 231, col: 52, offset: 8266},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 231, col: 56, offset: 8270},
																																	expr: &choiceExpr{
																																		pos: position{line: 231, col: 57, offset: 8271},
																																		alternatives: []interface{}{
																																			&actionExpr{
																																				pos: position{line: 1205, col: 14, offset: 47940},
																																				run: (*parser).callonTitleElement1094,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1205, col: 14, offset: 47940},
																																					expr: &charClassMatcher{
																																						pos:        position{line: 1205, col: 14, offset: 47940},
																																						val:        "[a-zA-Z0-9]",
																																						ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																						ignoreCase: false,
																																						inverted:   false,
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 1215, col: 11, offset: 48287},
																																				run: (*parser).callonTitleElement1097,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1215, col: 11, offset: 48287},
																																					expr: &choiceExpr{
																																						pos: position{line: 1243, col: 7, offset: 48832},
																																						alternatives: []interface{}{
																																							&litMatcher{
																																								pos:        position{line: 1243, col: 7, offset: 48832},
																																								val:        " ",
																																								ignoreCase: false,
																																							},
																																							&actionExpr{
																																								pos: position{line: 1243, col: 13, offset: 48838},
																																								run: (*parser).callonTitleElement1101,
																																								expr: &litMatcher{
																																									pos:        position{line: 1243, col: 13, offset: 48838},
																																									val:        "\t",
																																									ignoreCase: false,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 231, col: 78, offset: 8292},
																																				run: (*parser).callonTitleElement1103,
																																				expr: &seqExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 80, offset: 8294},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 231, col: 84, offset: 8298},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 85, offset: 8299},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 231, col: 89, offset: 8303},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 90, offset: 8304},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 231, col: 95, offset: 8309,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 225, col: 40, offset: 7990},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 225, col: 44, offset: 7994},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 237, col: 19, offset: 8403},
																													run: (*parser).callonTitleElement1114,
																													expr: &labeledExpr{
																														pos:   position{line: 237, col: 19, offset: 8403},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 237, col: 25, offset: 8409},
																															expr: &choiceExpr{
																																pos: position{line: 237, col: 26, offset: 8410},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		run: (*parser).callonTitleElement1118,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1205, col: 14, offset: 47940},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1205, col: 14, offset: 47940},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		run: (*parser).callonTitleElement1121,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1215, col: 11, offset: 48287},
																																			expr: &choiceExpr{
																																				pos: position{line: 1243, col: 7, offset: 48832},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1243, col: 7, offset: 48832},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1243, col: 13, offset: 48838},
																																						run: (*parser).callonTitleElement1125,
																																						expr: &litMatcher{
																																							pos:        position{line: 1243, col: 13, offset: 48838},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 237, col: 47, offset: 8431},
																																		run: (*parser).callonTitleElement1127,
																																		expr: &seqExpr{
																																			pos: position{line: 237, col: 48, offset: 8432},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 237, col: 48, offset: 8432},
																																					expr: &litMatcher{
																																						pos:        position{line: 237, col: 49, offset: 8433},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 237, col: 53, offset: 8437},
																																					expr: &litMatcher{
																																						pos:        position{line: 237, col: 54, offset: 8438},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 237, col: 58, offset: 8442},
																																					expr: &litMatcher{
																																						pos:        position{line: 237, col: 59, offset: 8443},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 237, col: 64, offset: 8448,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 225, col: 67, offset: 8017},
																												expr: &litMatcher{
																													pos:        position{line: 225, col: 67, offset: 8017},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 225, col: 72, offset: 8022},
																												expr: &choiceExpr{
																													pos: position{line: 1243, col: 7, offset: 48832},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1243, col: 7, offset: 48832},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1243, col: 13, offset: 48838},
																															run: (*parser).callonTitleElement1141,
																															expr: &litMatcher{
																																pos:        position{line: 1243, col: 13, offset: 48838},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 227, col: 5, offset: 8106},
																									run: (*parser).callonTitleElement1143,
																									expr: &seqExpr{
																										pos: position{line: 227, col: 5, offset: 8106},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 227, col: 5, offset: 8106},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													run: (*parser).callonTitleElement1146,
																													expr: &seqExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																expr: &actionExpr{
																																	pos: position{line: 259, col: 14, offset: 9116},
																																	run: (*parser).callonTitleElement1149,
																																	expr: &litMatcher{
																																		pos:        position{line: 259, col: 14, offset: 9116},
																																		val:        "quote",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 231, col: 28, offset: 8242},
																																expr: &actionExpr{
																																	pos: position{line: 282, col: 14, offset: 9780},
																																	run: (*parser).callonTitleElement1152,
																																	expr: &litMatcher{
																																		pos:        position{line: 282, col: 14, offset: 9780},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 231, col: 39, offset: 8253},
																																expr: &actionExpr{
																																	pos: position{line: 1170, col: 16, offset: 47067},
																																	run: (*parser).callonTitleElement1155,
																																	expr: &litMatcher{
																																		pos:        position{line: 1170, col: 16, offset: 47067},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 231, col: 52, offset: 8266},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 231, col: 56, offset: 8270},
																																	expr: &choiceExpr{
																																		pos: position{line: 231, col: 57, offset: 8271},
																																		alternatives: []interface{}{
																																			&actionExpr{
																																				pos: position{line: 1205, col: 14, offset: 47940},
																																				run: (*parser).callonTitleElement1160,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1205, col: 14, offset: 47940},
																																					expr: &charClassMatcher{
																																						pos:        position{line: 1205, col: 14, offset: 47940},
																																						val:        "[a-zA-Z0-9]",
																																						ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																						ignoreCase: false,
																																						inverted:   false,
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 1215, col: 11, offset: 48287},
																																				run: (*parser).callonTitleElement1163,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1215, col: 11, offset: 48287},
																																					expr: &choiceExpr{
																																						pos: position{line: 1243, col: 7, offset: 48832},
																																						alternatives: []interface{}{
																																							&litMatcher{
																																								pos:        position{line: 1243, col: 7, offset: 48832},
																																								val:        " ",
																																								ignoreCase: false,
																																							},
																																							&actionExpr{
																																								pos: position{line: 1243, col: 13, offset: 48838},
																																								run: (*parser).callonTitleElement1167,
																																								expr: &litMatcher{
																																									pos:        position{line: 1243, col: 13, offset: 48838},
																																									val:        "\t",
																																									ignoreCase: false,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 231, col: 78, offset: 8292},
																																				run: (*parser).callonTitleElement1169,
																																				expr: &seqExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 80, offset: 8294},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 231, col: 84, offset: 8298},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 85, offset: 8299},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 231, col: 89, offset: 8303},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 90, offset: 8304},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 231, col: 95, offset: 8309,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 227, col: 24, offset: 8125},
																												expr: &litMatcher{
																													pos:        position{line: 227, col: 24, offset: 8125},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 227, col: 29, offset: 8130},
																												expr: &choiceExpr{
																													pos: position{line: 1243, col: 7, offset: 48832},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1243, col: 7, offset: 48832},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1243, col: 13, offset: 48838},
																															run: (*parser).callonTitleElement1183,
																															expr: &litMatcher{
																																pos:        position{line: 1243, col: 13, offset: 48838},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 856, col: 40, offset: 34907},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 858, col: 5, offset: 34992},
																		run: (*parser).callonTitleElement1186,
																		expr: &seqExpr{
																			pos: position{line: 858, col: 5, offset: 34992},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 858, col: 5, offset: 34992},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 858, col: 9, offset: 34996},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 858, col: 20, offset: 35007},
																						expr: &choiceExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 225, col: 21, offset: 7971},
																									run: (*parser).callonTitleElement1192,
																									expr: &seqExpr{
																										pos: position{line: 225, col: 21, offset: 7971},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 225, col: 21, offset: 7971},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													run: (*parser).callonTitleElement1195,
																													expr: &seqExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																expr: &actionExpr{
																																	pos: position{line: 259, col: 14, offset: 9116},
																																	run: (*parser).callonTitleElement1198,
																																	expr: &litMatcher{
																																		pos:        position{line: 259, col: 14, offset: 9116},
																																		val:        "quote",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 231, col: 28, offset: 8242},
																																expr: &actionExpr{
																																	pos: position{line: 282, col: 14, offset: 9780},
																																	run: (*parser).callonTitleElement1201,
																																	expr: &litMatcher{
																																		pos:        position{line: 282, col: 14, offset: 9780},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 231, col: 39, offset: 8253},
																																expr: &actionExpr{
																																	pos: position{line: 1170, col: 16, offset: 47067},
																																	run: (*parser).callonTitleElement1204,
																																	expr: &litMatcher{
																																		pos:        position{line: 1170, col: 16, offset: 47067},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 231, col: 52, offset: 8266},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 231, col: 56, offset: 8270},
																																	expr: &choiceExpr{
																																		pos: position{line: 231, col: 57, offset: 8271},
																																		alternatives: []interface{}{
																																			&actionExpr{
																																				pos: position{line: 1205, col: 14, offset: 47940},
																																				run: (*parser).callonTitleElement1209,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1205, col: 14, offset: 47940},
																																					expr: &charClassMatcher{
																																						pos:        position{line: 1205, col: 14, offset: 47940},
																																						val:        "[a-zA-Z0-9]",
																																						ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																						ignoreCase: false,
																																						inverted:   false,
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 1215, col: 11, offset: 48287},
																																				run: (*parser).callonTitleElement1212,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1215, col: 11, offset: 48287},
																																					expr: &choiceExpr{
																																						pos: position{line: 1243, col: 7, offset: 48832},
																																						alternatives: []interface{}{
																																							&litMatcher{
																																								pos:        position{line: 1243, col: 7, offset: 48832},
																																								val:        " ",
																																								ignoreCase: false,
																																							},
																																							&actionExpr{
																																								pos: position{line: 1243, col: 13, offset: 48838},
																																								run: (*parser).callonTitleElement1216,
																																								expr: &litMatcher{
																																									pos:        position{line: 1243, col: 13, offset: 48838},
																																									val:        "\t",
																																									ignoreCase: false,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 231, col: 78, offset: 8292},
																																				run: (*parser).callonTitleElement1218,
																																				expr: &seqExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 80, offset: 8294},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 231, col: 84, offset: 8298},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 85, offset: 8299},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 231, col: 89, offset: 8303},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 90, offset: 8304},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 231, col: 95, offset: 8309,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 225, col: 40, offset: 7990},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 225, col: 44, offset: 7994},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 237, col: 19, offset: 8403},
																													run: (*parser).callonTitleElement1229,
																													expr: &labeledExpr{
																														pos:   position{line: 237, col: 19, offset: 8403},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 237, col: 25, offset: 8409},
																															expr: &choiceExpr{
																																pos: position{line: 237, col: 26, offset: 8410},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		run: (*parser).callonTitleElement1233,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1205, col: 14, offset: 47940},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1205, col: 14, offset: 47940},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		run: (*parser).callonTitleElement1236,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1215, col: 11, offset: 48287},
																																			expr: &choiceExpr{
																																				pos: position{line: 1243, col: 7, offset: 48832},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1243, col: 7, offset: 48832},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1243, col: 13, offset: 48838},
																																						run: (*parser).callonTitleElement1240,
																																						expr: &litMatcher{
																																							pos:        position{line: 1243, col: 13, offset: 48838},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 237, col: 47, offset: 8431},
																																		run: (*parser).callonTitleElement1242,
																																		expr: &seqExpr{
																																			pos: position{line: 237, col: 48, offset: 8432},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 237, col: 48, offset: 8432},
																																					expr: &litMatcher{
																																						pos:        position{line: 237, col: 49, offset: 8433},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 237, col: 53, offset: 8437},
																																					expr: &litMatcher{
																																						pos:        position{line: 237, col: 54, offset: 8438},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 237, col: 58, offset: 8442},
																																					expr: &litMatcher{
																																						pos:        position{line: 237, col: 59, offset: 8443},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 237, col: 64, offset: 8448,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 225, col: 67, offset: 8017},
																												expr: &litMatcher{
																													pos:        position{line: 225, col: 67, offset: 8017},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 225, col: 72, offset: 8022},
																												expr: &choiceExpr{
																													pos: position{line: 1243, col: 7, offset: 48832},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1243, col: 7, offset: 48832},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1243, col: 13, offset: 48838},
																															run: (*parser).callonTitleElement1256,
																															expr: &litMatcher{
																																pos:        position{line: 1243, col: 13, offset: 48838},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 227, col: 5, offset: 8106},
																									run: (*parser).callonTitleElement1258,
																									expr: &seqExpr{
																										pos: position{line: 227, col: 5, offset: 8106},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 227, col: 5, offset: 8106},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													run: (*parser).callonTitleElement1261,
																													expr: &seqExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																expr: &actionExpr{
																																	pos: position{line: 259, col: 14, offset: 9116},
																																	run: (*parser).callonTitleElement1264,
																																	expr: &litMatcher{
																																		pos:        position{line: 259, col: 14, offset: 9116},
																																		val:        "quote",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 231, col: 28, offset: 8242},
																																expr: &actionExpr{
																																	pos: position{line: 282, col: 14, offset: 9780},
																																	run: (*parser).callonTitleElement1267,
																																	expr: &litMatcher{
																																		pos:        position{line: 282, col: 14, offset: 9780},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 231, col: 39, offset: 8253},
																																expr: &actionExpr{
																																	pos: position{line: 1170, col: 16, offset: 47067},
																																	run: (*parser).callonTitleElement1270,
																																	expr: &litMatcher{
																																		pos:        position{line: 1170, col: 16, offset: 47067},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 231, col: 52, offset: 8266},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 231, col: 56, offset: 8270},
																																	expr: &choiceExpr{
																																		pos: position{line: 231, col: 57, offset: 8271},
																																		alternatives: []interface{}{
																																			&actionExpr{
																																				pos: position{line: 1205, col: 14, offset: 47940},
																																				run: (*parser).callonTitleElement1275,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1205, col: 14, offset: 47940},
																																					expr: &charClassMatcher{
																																						pos:        position{line: 1205, col: 14, offset: 47940},
																																						val:        "[a-zA-Z0-9]",
																																						ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																						ignoreCase: false,
																																						inverted:   false,
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 1215, col: 11, offset: 48287},
																																				run: (*parser).callonTitleElement1278,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1215, col: 11, offset: 48287},
																																					expr: &choiceExpr{
																																						pos: position{line: 1243, col: 7, offset: 48832},
																																						alternatives: []interface{}{
																																							&litMatcher{
																																								pos:        position{line: 1243, col: 7, offset: 48832},
																																								val:        " ",
																																								ignoreCase: false,
																																							},
																																							&actionExpr{
																																								pos: position{line: 1243, col: 13, offset: 48838},
																																								run: (*parser).callonTitleElement1282,
																																								expr: &litMatcher{
																																									pos:        position{line: 1243, col: 13, offset: 48838},
																																									val:        "\t",
																																									ignoreCase: false,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 231, col: 78, offset: 8292},
																																				run: (*parser).callonTitleElement1284,
																																				expr: &seqExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 80, offset: 8294},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 231, col: 84, offset: 8298},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 85, offset: 8299},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 231, col: 89, offset: 8303},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 90, offset: 8304},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 231, col: 95, offset: 8309,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 227, col: 24, offset: 8125},
																												expr: &litMatcher{
																													pos:        position{line: 227, col: 24, offset: 8125},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 227, col: 29, offset: 8130},
																												expr: &choiceExpr{
																													pos: position{line: 1243, col: 7, offset: 48832},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1243, col: 7, offset: 48832},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1243, col: 13, offset: 48838},
																															run: (*parser).callonTitleElement1298,
																															expr: &litMatcher{
																																pos:        position{line: 1243, col: 13, offset: 48838},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 858, col: 40, offset: 35027},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&actionExpr{
												pos: position{line: 838, col: 5, offset: 34362},
												run: (*parser).callonTitleElement1301,
												expr: &labeledExpr{
													pos:   position{line: 838, col: 5, offset: 34362},
													label: "url",
													expr: &actionExpr{
														pos: position{line: 842, col: 20, offset: 34458},
														run: (*parser).callonTitleElement1303,
														expr: &seqExpr{
															pos: position{line: 842, col: 20, offset: 34458},
															exprs: []interface{}{
																&choiceExpr{
																	pos: position{line: 1237, col: 15, offset: 48717},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1237, col: 15, offset: 48717},
																			val:        "http://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 1237, col: 27, offset: 48729},
																			val:        "https://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 1237, col: 40, offset: 48742},
																			val:        "ftp://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 1237, col: 51, offset: 48753},
																			val:        "irc://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 1237, col: 62, offset: 48764},
																			val:        "mailto:",
																			ignoreCase: false,
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 1219, col: 8, offset: 48334},
																	run: (*parser).callonTitleElement1311,
																	expr: &oneOrMoreExpr{
																		pos: position{line: 1219, col: 8, offset: 48334},
																		expr: &choiceExpr{
																			pos: position{line: 1219, col: 9, offset: 48335},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 1205, col: 14, offset: 47940},
																					run: (*parser).callonTitleElement1314,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1205, col: 14, offset: 47940},
																						expr: &charClassMatcher{
																							pos:        position{line: 1205, col: 14, offset: 47940},
																							val:        "[a-zA-Z0-9]",
																							ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																							ignoreCase: false,
																							inverted:   false,
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 1219, col: 21, offset: 48347},
																					run: (*parser).callonTitleElement1317,
																					expr: &seqExpr{
																						pos: position{line: 1219, col: 22, offset: 48348},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 1219, col: 22, offset: 48348},
																								expr: &choiceExpr{
																									pos: position{line: 1247, col: 12, offset: 48890},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1247, col: 12, offset: 48890},
																											val:        "\r\n",
																											ignoreCase: false,
																										},
																										&charClassMatcher{
																											pos:        position{line: 1247, col: 21, offset: 48899},
																											val:        "[\\r\\n]",
																											chars:      []rune{'\r', '\n'},
																											ignoreCase: false,
																											inverted:   false,
																										},
																									},
																								},
																							},
																							&notExpr{
																								pos: position{line: 1219, col: 31, offset: 48357},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonTitleElement1326,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&notExpr{
																								pos: position{line: 1219, col: 35, offset: 48361},
																								expr: &litMatcher{
																									pos:        position{line: 1219, col: 36, offset: 48362},
																									val:        "[",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 1219, col: 40, offset: 48366},
																								expr: &litMatcher{
																									pos:        position{line: 1219, col: 41, offset: 48367},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 1219, col: 46, offset: 48372,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
							&ruleRefExpr{
								pos:  position{line: 419, col: 78, offset: 14946},
								name: "InlineFootnote",
							},
							&actionExpr{
								pos: position{line: 1205, col: 14, offset: 47940},
								run: (*parser).callonTitleElement1334,
								expr: &oneOrMoreExpr{
									pos: position{line: 1205, col: 14, offset: 47940},
									expr: &charClassMatcher{
										pos:        position{line: 1205, col: 14, offset: 47940},
										val:        "[a-zA-Z0-9]",
										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
										ignoreCase: false,
										inverted:   false,
									},
								},
							},
							&oneOrMoreExpr{
								pos: position{line: 419, col: 107, offset: 14975},
								expr: &choiceExpr{
									pos: position{line: 1243, col: 7, offset: 48832},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 1243, col: 7, offset: 48832},
											val:        " ",
											ignoreCase: false,
										},
										&actionExpr{
											pos: position{line: 1243, col: 13, offset: 48838},
											run: (*parser).callonTitleElement1340,
											expr: &litMatcher{
												pos:        position{line: 1243, col: 13, offset: 48838},
												val:        "\t",
												ignoreCase: false,
											},
										},
									},
								},
							},
							&ruleRefExpr{
								pos:  position{line: 419, col: 113, offset: 14981},
								name: "QuotedText",
							},
							&actionExpr{
								pos: position{line: 120, col: 34, offset: 4391},
								run: (*parser).callonTitleElement1343,
								expr: &seqExpr{
									pos: position{line: 120, col: 34, offset: 4391},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 120, col: 34, offset: 4391},
											val:        "{",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 120, col: 38, offset: 4395},
											label: "name",
											expr: &actionExpr{
												pos: position{line: 127, col: 26, offset: 4690},
												run: (*parser).callonTitleElement1347,
												expr: &seqExpr{
													pos: position{line: 127, col: 26, offset: 4690},
													exprs: []interface{}{
														&charClassMatcher{
															pos:        position{line: 127, col: 27, offset: 4691},
															val:        "[_A-Za-z0-9]",
															chars:      []rune{'_'},
															ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
															ignoreCase: false,
															inverted:   false,
														},
														&zeroOrMoreExpr{
															pos: position{line: 127, col: 56, offset: 4720},
															expr: &charClassMatcher{
																pos:        position{line: 127, col: 57, offset: 4721},
																val:        "[-A-Za-z0-9]",
																chars:      []rune{'-'},
																ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																ignoreCase: false,
																inverted:   false,
															},
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 120, col: 67, offset: 4424},
											val:        "}",
											ignoreCase: false,
										},
									},
								},
							},
							&charClassMatcher{
								pos:        position{line: 1203, col: 16, offset: 47904},
								val:        "[()[]]",
								chars:      []rune{'(', ')', '[', ']'},
								ignoreCase: false,
								inverted:   false,
							},
							&actionExpr{
								pos: position{line: 637, col: 14, offset: 23881},
								run: (*parser).callonTitleElement1354,
								expr: &seqExpr{
									pos: position{line: 637, col: 14, offset: 23881},
									exprs: []interface{}{
										&choiceExpr{
											pos: position{line: 1243, col: 7, offset: 48832},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1243, col: 7, offset: 48832},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1243, col: 13, offset: 48838},
													run: (*parser).callonTitleElement1358,
													expr: &litMatcher{
														pos:        position{line: 1243, col: 13, offset: 48838},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 637, col: 17, offset: 23884},
											val:        "+",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 637, col: 21, offset: 23888},
											expr: &choiceExpr{
												pos: position{line: 1243, col: 7, offset: 48832},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1243, col: 7, offset: 48832},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1243, col: 13, offset: 48838},
														run: (*parser).callonTitleElement1364,
														expr: &litMatcher{
															pos:        position{line: 1243, col: 13, offset: 48838},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1251, col: 8, offset: 48930},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1247, col: 12, offset: 48890},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1247, col: 21, offset: 48899},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1249, col: 8, offset: 48919},
													expr: &anyMatcher{
														line: 1249, col: 9, offset: 48920,
													},
												},
											},
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 1209, col: 9, offset: 47997},
								run: (*parser).callonTitleElement1371,
								expr: &choiceExpr{
									pos: position{line: 1209, col: 10, offset: 47998},
									alternatives: []interface{}{
										&actionExpr{
											pos: position{line: 1205, col: 14, offset: 47940},
											run: (*parser).callonTitleElement1373,
											expr: &oneOrMoreExpr{
												pos: position{line: 1205, col: 14, offset: 47940},
												expr: &charClassMatcher{
													pos:        position{line: 1205, col: 14, offset: 47940},
													val:        "[a-zA-Z0-9]",
													ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
													ignoreCase: false,
													inverted:   false,
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 1209, col: 22, offset: 48010},
											expr: &actionExpr{
												pos: position{line: 1209, col: 23, offset: 48011},
												run: (*parser).callonTitleElement1377,
												expr: &seqExpr{
													pos: position{line: 1209, col: 24, offset: 48012},
													exprs: []interface{}{
														&notExpr{
															pos: position{line: 1209, col: 24, offset: 48012},
															expr: &choiceExpr{
																pos: position{line: 1247, col: 12, offset: 48890},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1247, col: 12, offset: 48890},
																		val:        "\r\n",
																		ignoreCase: false,
																	},
																	&charClassMatcher{
																		pos:        position{line: 1247, col: 21, offset: 48899},
																		val:        "[\\r\\n]",
																		chars:      []rune{'\r', '\n'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
														&notExpr{
															pos: position{line: 1209, col: 33, offset: 48021},
															expr: &choiceExpr{
																pos: position{line: 1243, col: 7, offset: 48832},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1243, col: 7, offset: 48832},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1243, col: 13, offset: 48838},
																		run: (*parser).callonTitleElement1386,
																		expr: &litMatcher{
																			pos:        position{line: 1243, col: 13, offset: 48838},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
														&notExpr{
															pos: position{line: 1209, col: 37, offset: 48025},
															expr: &charClassMatcher{
																pos:        position{line: 1203, col: 16, offset: 47904},
																val:        "[()[]]",
																chars:      []rune{'(', ')', '[', ']'},
																ignoreCase: false,
																inverted:   false,
															},
														},
														&notExpr{
															pos: position{line: 1209, col: 50, offset: 48038},
															expr: &litMatcher{
																pos:        position{line: 1209, col: 51, offset: 48039},
																val:        ".",
																ignoreCase: false,
															},
														},
														&notExpr{
															pos: position{line: 1209, col: 55, offset: 48043},
															expr: &choiceExpr{
																pos: position{line: 656, col: 33, offset: 24662},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 656, col: 33, offset: 24662},
																		val:        "^",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 656, col: 39, offset: 24668},
																		run: (*parser).callonTitleElement1395,
																		expr: &litMatcher{
																			pos:        position{line: 656, col: 39, offset: 24668},
																			val:        "~",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
														&anyMatcher{
															line: 1209, col: 86, offset: 48074,
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 1211, col: 7, offset: 48115},
											expr: &litMatcher{
												pos:        position{line: 1211, col: 7, offset: 48115},
												val:        ".",
												ignoreCase: false,
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "List",
			pos:  position{line: 431, col: 1, offset: 15344},
			expr: &actionExpr{
				pos: position{line: 433, col: 5, offset: 15425},
				run: (*parser).callonList1,
				expr: &labeledExpr{
					pos:   position{line: 433, col: 5, offset: 15425},
					label: "elements",
					expr: &ruleRefExpr{
						pos:  position{line: 433, col: 14, offset: 15434},
						name: "ListItems",
					},
				},
			},
		},
		{
			name: "ListItems",
			pos:  position{line: 437, col: 1, offset: 15500},
			expr: &oneOrMoreExpr{
				pos: position{line: 437, col: 14, offset: 15513},
				expr: &choiceExpr{
					pos: position{line: 437, col: 15, offset: 15514},
					alternatives: []interface{}{
						&ruleRefExpr{
							pos:  position{line: 437, col: 15, offset: 15514},
							name: "OrderedListItem",
						},
						&ruleRefExpr{
							pos:  position{line: 437, col: 33, offset: 15532},
							name: "UnorderedListItem",
						},
						&ruleRefExpr{
							pos:  position{line: 437, col: 53, offset: 15552},
							name: "LabeledListItem",
						},
					},
				},
			},
		},
		{
			name: "ListParagraph",
			pos:  position{line: 439, col: 1, offset: 15571},
			expr: &actionExpr{
				pos: position{line: 439, col: 18, offset: 15588},
				run: (*parser).callonListParagraph1,
				expr: &labeledExpr{
					pos:   position{line: 439, col: 18, offset: 15588},
					label: "lines",
					expr: &oneOrMoreExpr{
						pos: position{line: 439, col: 24, offset: 15594},
						expr: &ruleRefExpr{
							pos:  position{line: 439, col: 25, offset: 15595},
							name: "ListParagraphLine",
						},
					},
				},
			},
		},
		{
			name: "ListParagraphLine",
			pos:  position{line: 443, col: 1, offset: 15674},
			expr: &actionExpr{
				pos: position{line: 444, col: 5, offset: 15700},
				run: (*parser).callonListParagraphLine1,
				expr: &seqExpr{
					pos: position{line: 444, col: 5, offset: 15700},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 444, col: 5, offset: 15700},
							expr: &actionExpr{
								pos: position{line: 469, col: 26, offset: 16522},
								run: (*parser).callonListParagraphLine4,
								expr: &seqExpr{
									pos: position{line: 469, col: 26, offset: 16522},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 469, col: 26, offset: 16522},
											expr: &choiceExpr{
												pos: position{line: 1243, col: 7, offset: 48832},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1243, col: 7, offset: 48832},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1243, col: 13, offset: 48838},
														run: (*parser).callonListParagraphLine9,
														expr: &litMatcher{
															pos:        position{line: 1243, col: 13, offset: 48838},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 469, col: 30, offset: 16526},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 471, col: 5, offset: 16581},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 471, col: 5, offset: 16581},
														run: (*parser).callonListParagraphLine13,
														expr: &litMatcher{
															pos:        position{line: 471, col: 5, offset: 16581},
															val:        ".....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 473, col: 9, offset: 16694},
														run: (*parser).callonListParagraphLine15,
														expr: &litMatcher{
															pos:        position{line: 473, col: 9, offset: 16694},
															val:        "....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 475, col: 9, offset: 16805},
														run: (*parser).callonListParagraphLine17,
														expr: &litMatcher{
															pos:        position{line: 475, col: 9, offset: 16805},
															val:        "...",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 477, col: 9, offset: 16914},
														run: (*parser).callonListParagraphLine19,
														expr: &litMatcher{
															pos:        position{line: 477, col: 9, offset: 16914},
															val:        "..",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 479, col: 9, offset: 17021},
														run: (*parser).callonListParagraphLine21,
														expr: &litMatcher{
															pos:        position{line: 479, col: 9, offset: 17021},
															val:        ".",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 482, col: 9, offset: 17148},
														run: (*parser).callonListParagraphLine23,
														expr: &seqExpr{
															pos: position{line: 482, col: 9, offset: 17148},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 482, col: 9, offset: 17148},
																	expr: &charClassMatcher{
																		pos:        position{line: 482, col: 10, offset: 17149},
																		val:        "[0-9]",
																		ranges:     []rune{'0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 482, col: 18, offset: 17157},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 484, col: 9, offset: 17260},
														run: (*parser).callonListParagraphLine28,
														expr: &seqExpr{
															pos: position{line: 484, col: 9, offset: 17260},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 484, col: 10, offset: 17261},
																	val:        "[a-z]",
																	ranges:     []rune{'a', 'z'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&litMatcher{
																	pos:        position{line: 484, col: 17, offset: 17268},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 486, col: 9, offset: 17374},
														run: (*parser).callonListParagraphLine32,
														expr: &seqExpr{
															pos: position{line: 486, col: 9, offset: 17374},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 486, col: 10, offset: 17375},
																	val:        "[A-Z]",
																	ranges:     []rune{'A', 'Z'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&litMatcher{
																	pos:        position{line: 486, col: 17, offset: 17382},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 488, col: 9, offset: 17488},
														run: (*parser).callonListParagraphLine36,
														expr: &seqExpr{
															pos: position{line: 488, col: 9, offset: 17488},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 488, col: 9, offset: 17488},
																	expr: &charClassMatcher{
																		pos:        position{line: 488, col: 10, offset: 17489},
																		val:        "[a-z]",
																		ranges:     []rune{'a', 'z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 488, col: 18, offset: 17497},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 490, col: 9, offset: 17603},
														run: (*parser).callonListParagraphLine41,
														expr: &seqExpr{
															pos: position{line: 490, col: 9, offset: 17603},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 490, col: 9, offset: 17603},
																	expr: &charClassMatcher{
																		pos:        position{line: 490, col: 10, offset: 17604},
																		val:        "[A-Z]",
																		ranges:     []rune{'A', 'Z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 490, col: 18, offset: 17612},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 492, col: 8, offset: 17717},
											expr: &choiceExpr{
												pos: position{line: 1243, col: 7, offset: 48832},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1243, col: 7, offset: 48832},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1243, col: 13, offset: 48838},
														run: (*parser).callonListParagraphLine49,
														expr: &litMatcher{
															pos:        position{line: 1243, col: 13, offset: 48838},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 445, col: 5, offset: 15730},
							expr: &actionExpr{
								pos: position{line: 508, col: 5, offset: 18373},
								run: (*parser).callonListParagraphLine52,
								expr: &seqExpr{
									pos: position{line: 508, col: 5, offset: 18373},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 508, col: 5, offset: 18373},
											expr: &choiceExpr{
												pos: position{line: 1243, col: 7, offset: 48832},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1243, col: 7, offset: 48832},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1243, col: 13, offset: 48838},
														run: (*parser).callonListParagraphLine57,
														expr: &litMatcher{
															pos:        position{line: 1243, col: 13, offset: 48838},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 508, col: 9, offset: 18377},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 509, col: 9, offset: 18394},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 509, col: 9, offset: 18394},
														run: (*parser).callonListParagraphLine61,
														expr: &litMatcher{
															pos:        position{line: 509, col: 9, offset: 18394},
															val:        "*****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 512, col: 11, offset: 18563},
														run: (*parser).callonListParagraphLine63,
														expr: &litMatcher{
															pos:        position{line: 512, col: 11, offset: 18563},
															val:        "****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 515, col: 11, offset: 18732},
														run: (*parser).callonListParagraphLine65,
														expr: &litMatcher{
															pos:        position{line: 515, col: 11, offset: 18732},
															val:        "***",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 518, col: 11, offset: 18901},
														run: (*parser).callonListParagraphLine67,
														expr: &litMatcher{
															pos:        position{line: 518, col: 11, offset: 18901},
															val:        "**",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 521, col: 11, offset: 19067},
														run: (*parser).callonListParagraphLine69,
														expr: &litMatcher{
															pos:        position{line: 521, col: 11, offset: 19067},
															val:        "*",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 524, col: 11, offset: 19231},
														run: (*parser).callonListParagraphLine71,
														expr: &litMatcher{
															pos:        position{line: 524, col: 11, offset: 19231},
															val:        "-",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 526, col: 12, offset: 19378},
											expr: &choiceExpr{
												pos: position{line: 1243, col: 7, offset: 48832},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1243, col: 7, offset: 48832},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1243, col: 13, offset: 48838},
														run: (*parser).callonListParagraphLine76,
														expr: &litMatcher{
															pos:        position{line: 1243, col: 13, offset: 48838},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 446, col: 5, offset: 15762},
							expr: &seqExpr{
								pos: position{line: 446, col: 7, offset: 15764},
								exprs: []interface{}{
									&actionExpr{
										pos: position{line: 541, col: 24, offset: 20060},
										run: (*parser).callonListParagraphLine80,
										expr: &zeroOrMoreExpr{
											pos: position{line: 541, col: 24, offset: 20060},
											expr: &choiceExpr{
												pos: position{line: 541, col: 25, offset: 20061},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 1205, col: 14, offset: 47940},
														run: (*parser).callonListParagraphLine83,
														expr: &oneOrMoreExpr{
															pos: position{line: 1205, col: 14, offset: 47940},
															expr: &charClassMatcher{
																pos:        position{line: 1205, col: 14, offset: 47940},
																val:        "[a-zA-Z0-9]",
																ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																ignoreCase: false,
																inverted:   false,
															},
														},
													},
													&actionExpr{
														pos: position{line: 1215, col: 11, offset: 48287},
														run: (*parser).callonListParagraphLine86,
														expr: &oneOrMoreExpr{
															pos: position{line: 1215, col: 11, offset: 48287},
															expr: &choiceExpr{
																pos: position{line: 1243, col: 7, offset: 48832},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1243, col: 7, offset: 48832},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1243, col: 13, offset: 48838},
																		run: (*parser).callonListParagraphLine90,
																		expr: &litMatcher{
																			pos:        position{line: 1243, col: 13, offset: 48838},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 541, col: 46, offset: 20082},
														run: (*parser).callonListParagraphLine92,
														expr: &seqExpr{
															pos: position{line: 541, col: 47, offset: 20083},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 541, col: 47, offset: 20083},
																	expr: &choiceExpr{
																		pos: position{line: 1247, col: 12, offset: 48890},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1247, col: 12, offset: 48890},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1247, col: 21, offset: 48899},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 541, col: 56, offset: 20092},
																	expr: &litMatcher{
																		pos:        position{line: 541, col: 57, offset: 20093},
																		val:        "::",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 541, col: 63, offset: 20099,
																},
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 548, col: 29, offset: 20280},
										run: (*parser).callonListParagraphLine101,
										expr: &choiceExpr{
											pos: position{line: 548, col: 30, offset: 20281},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 548, col: 30, offset: 20281},
													val:        "::::",
													ignoreCase: false,
												},
												&litMatcher{
													pos:        position{line: 548, col: 39, offset: 20290},
													val:        ":::",
													ignoreCase: false,
												},
												&litMatcher{
													pos:        position{line: 548, col: 47, offset: 20298},
													val:        "::",
													ignoreCase: false,
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 447, col: 5, offset: 15815},
							expr: &actionExpr{
								pos: position{line: 454, col: 25, offset: 15966},
								run: (*parser).callonListParagraphLine107,
								expr: &seqExpr{
									pos: position{line: 454, col: 25, offset: 15966},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 454, col: 25, offset: 15966},
											val:        "+",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 454, col: 29, offset: 15970},
											expr: &choiceExpr{
												pos: position{line: 1243, col: 7, offset: 48832},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1243, col: 7, offset: 48832},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1243, col: 13, offset: 48838},
														run: (*parser).callonListParagraphLine113,
														expr: &litMatcher{
															pos:        position{line: 1243, col: 13, offset: 48838},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1251, col: 8, offset: 48930},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1247, col: 12, offset: 48890},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1247, col: 21, offset: 48899},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1249, col: 8, offset: 48919},
													expr: &anyMatcher{
														line: 1249, col: 9, offset: 48920,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 448, col: 5, offset: 15844},
							expr: &actionExpr{
								pos: position{line: 164, col: 21, offset: 5763},
								run: (*parser).callonListParagraphLine121,
								expr: &seqExpr{
									pos: position{line: 164, col: 21, offset: 5763},
									exprs: []interface{}{
										&andExpr{
											pos: position{line: 164, col: 21, offset: 5763},
											expr: &charClassMatcher{
												pos:        position{line: 164, col: 23, offset: 5765},
												val:        "[[.#]",
												chars:      []rune{'[', '.', '#'},
												ignoreCase: false,
												inverted:   false,
											},
										},
										&labeledExpr{
											pos:   position{line: 165, col: 5, offset: 5853},
											label: "attr",
											expr: &choiceExpr{
												pos: position{line: 165, col: 11, offset: 5859},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 174, col: 14, offset: 6316},
														run: (*parser).callonListParagraphLine127,
														expr: &seqExpr{
															pos: position{line: 174, col: 14, offset: 6316},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 174, col: 14, offset: 6316},
																	val:        "[[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 174, col: 19, offset: 6321},
																	label: "id",
																	expr: &actionExpr{
																		pos: position{line: 1225, col: 7, offset: 48453},
																		run: (*parser).callonListParagraphLine131,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1225, col: 7, offset: 48453},
																			expr: &choiceExpr{
																				pos: position{line: 1225, col: 8, offset: 48454},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 1205, col: 14, offset: 47940},
																						run: (*parser).callonListParagraphLine134,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							expr: &charClassMatcher{
																								pos:        position{line: 1205, col: 14, offset: 47940},
																								val:        "[a-zA-Z0-9]",
																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 1225, col: 20, offset: 48466},
																						run: (*parser).callonListParagraphLine137,
																						expr: &seqExpr{
																							pos: position{line: 1225, col: 21, offset: 48467},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 1225, col: 21, offset: 48467},
																									expr: &choiceExpr{
																										pos: position{line: 1247, col: 12, offset: 48890},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1247, col: 12, offset: 48890},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1247, col: 21, offset: 48899},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1225, col: 30, offset: 48476},
																									expr: &choiceExpr{
																										pos: position{line: 1243, col: 7, offset: 48832},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1243, col: 7, offset: 48832},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1243, col: 13, offset: 48838},
																												run: (*parser).callonListParagraphLine146,
																												expr: &litMatcher{
																													pos:        position{line: 1243, col: 13, offset: 48838},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1225, col: 34, offset: 48480},
																									expr: &litMatcher{
																										pos:        position{line: 1225, col: 35, offset: 48481},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1225, col: 39, offset: 48485},
																									expr: &litMatcher{
																										pos:        position{line: 1225, col: 40, offset: 48486},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1225, col: 44, offset: 48490},
																									expr: &litMatcher{
																										pos:        position{line: 1225, col: 45, offset: 48491},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1225, col: 50, offset: 48496},
																									expr: &litMatcher{
																										pos:        position{line: 1225, col: 51, offset: 48497},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1225, col: 56, offset: 48502},
																									expr: &litMatcher{
																										pos:        position{line: 1225, col: 57, offset: 48503},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 1225, col: 62, offset: 48508,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 174, col: 27, offset: 6329},
																	val:        "]]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 176, col: 5, offset: 6383},
														run: (*parser).callonListParagraphLine160,
														expr: &seqExpr{
															pos: position{line: 176, col: 5, offset: 6383},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 176, col: 5, offset: 6383},
																	val:        "[#",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 176, col: 10, offset: 6388},
																	label: "id",
																	expr: &actionExpr{
																		pos: position{line: 1225, col: 7, offset: 48453},
																		run: (*parser).callonListParagraphLine164,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1225, col: 7, offset: 48453},
																			expr: &choiceExpr{
																				pos: position{line: 1225, col: 8, offset: 48454},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 1205, col: 14, offset: 47940},
																						run: (*parser).callonListParagraphLine167,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							expr: &charClassMatcher{
																								pos:        position{line: 1205, col: 14, offset: 47940},
																								val:        "[a-zA-Z0-9]",
																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 1225, col: 20, offset: 48466},
																						run: (*parser).callonListParagraphLine170,
																						expr: &seqExpr{
																							pos: position{line: 1225, col: 21, offset: 48467},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 1225, col: 21, offset: 48467},
																									expr: &choiceExpr{
																										pos: position{line: 1247, col: 12, offset: 48890},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1247, col: 12, offset: 48890},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1247, col: 21, offset: 48899},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1225, col: 30, offset: 48476},
																									expr: &choiceExpr{
																										pos: position{line: 1243, col: 7, offset: 48832},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1243, col: 7, offset: 48832},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1243, col: 13, offset: 48838},
																												run: (*parser).callonListParagraphLine179,
																												expr: &litMatcher{
																													pos:        position{line: 1243, col: 13, offset: 48838},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1225, col: 34, offset: 48480},
																									expr: &litMatcher{
																										pos:        position{line: 1225, col: 35, offset: 48481},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1225, col: 39, offset: 48485},
																									expr: &litMatcher{
																										pos:        position{line: 1225, col: 40, offset: 48486},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1225, col: 44, offset: 48490},
																									expr: &litMatcher{
																										pos:        position{line: 1225, col: 45, offset: 48491},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1225, col: 50, offset: 48496},
																									expr: &litMatcher{
																										pos:        position{line: 1225, col: 51, offset: 48497},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1225, col: 56, offset: 48502},
																									expr: &litMatcher{
																										pos:        position{line: 1225, col: 57, offset: 48503},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 1225, col: 62, offset: 48508,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 176, col: 18, offset: 6396},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 186, col: 17, offset: 6699},
														run: (*parser).callonListParagraphLine193,
														expr: &seqExpr{
															pos: position{line: 186, col: 17, offset: 6699},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 186, col: 17, offset: 6699},
																	val:        ".",
																	ignoreCase: false,
																},
																&notExpr{
																	pos: position{line: 186, col: 21, offset: 6703},
																	expr: &litMatcher{
																		pos:        position{line: 186, col: 22, offset: 6704},
																		val:        ".",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 186, col: 26, offset: 6708},
																	expr: &choiceExpr{
																		pos: position{line: 1243, col: 7, offset: 48832},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1243, col: 7, offset: 48832},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1243, col: 13, offset: 48838},
																				run: (*parser).callonListParagraphLine201,
																				expr: &litMatcher{
																					pos:        position{line: 1243, col: 13, offset: 48838},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 186, col: 30, offset: 6712},
																	label: "title",
																	expr: &actionExpr{
																		pos: position{line: 186, col: 37, offset: 6719},
																		run: (*parser).callonListParagraphLine204,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 186, col: 37, offset: 6719},
																			expr: &choiceExpr{
																				pos: position{line: 186, col: 38, offset: 6720},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 1205, col: 14, offset: 47940},
																						run: (*parser).callonListParagraphLine207,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							expr: &charClassMatcher{
																								pos:        position{line: 1205, col: 14, offset: 47940},
																								val:        "[a-zA-Z0-9]",
																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 1215, col: 11, offset: 48287},
																						run: (*parser).callonListParagraphLine210,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							expr: &choiceExpr{
																								pos: position{line: 1243, col: 7, offset: 48832},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1243, col: 7, offset: 48832},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1243, col: 13, offset: 48838},
																										run: (*parser).callonListParagraphLine214,
																										expr: &litMatcher{
																											pos:        position{line: 1243, col: 13, offset: 48838},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 186, col: 59, offset: 6741},
																						run: (*parser).callonListParagraphLine216,
																						expr: &seqExpr{
																							pos: position{line: 186, col: 60, offset: 6742},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 186, col: 60, offset: 6742},
																									expr: &choiceExpr{
																										pos: position{line: 1247, col: 12, offset: 48890},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1247, col: 12, offset: 48890},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1247, col: 21, offset: 48899},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&anyMatcher{
																									line: 186, col: 70, offset: 6752,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 196, col: 16, offset: 6990},
														run: (*parser).callonListParagraphLine223,
														expr: &seqExpr{
															pos: position{line: 196, col: 16, offset: 6990},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 196, col: 16, offset: 6990},
																	val:        "[.",
																	ignoreCase: false,
																},
																&notExpr{
																	pos: position{line: 196, col: 21, offset: 6995},
																	expr: &choiceExpr{
																		pos: position{line: 1243, col: 7, offset: 48832},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1243, col: 7, offset: 48832},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1243, col: 13, offset: 48838},
																				run: (*parser).callonListParagraphLine229,
																				expr: &litMatcher{
																					pos:        position{line: 1243, col: 13, offset: 48838},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 196, col: 25, offset: 6999},
																	label: "role",
																	expr: &actionExpr{
																		pos: position{line: 196, col: 31, offset: 7005},
																		run: (*parser).callonListParagraphLine232,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 196, col: 31, offset: 7005},
																			expr: &choiceExpr{
																				pos: position{line: 196, col: 32, offset: 7006},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 1205, col: 14, offset: 47940},
																						run: (*parser).callonListParagraphLine235,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							expr: &charClassMatcher{
																								pos:        position{line: 1205, col: 14, offset: 47940},
																								val:        "[a-zA-Z0-9]",
																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 1215, col: 11, offset: 48287},
																						run: (*parser).callonListParagraphLine238,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							expr: &choiceExpr{
																								pos: position{line: 1243, col: 7, offset: 48832},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1243, col: 7, offset: 48832},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1243, col: 13, offset: 48838},
																										run: (*parser).callonListParagraphLine242,
																										expr: &litMatcher{
																											pos:        position{line: 1243, col: 13, offset: 48838},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 196, col: 53, offset: 7027},
																						run: (*parser).callonListParagraphLine244,
																						expr: &seqExpr{
																							pos: position{line: 196, col: 54, offset: 7028},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 196, col: 54, offset: 7028},
																									expr: &choiceExpr{
																										pos: position{line: 1247, col: 12, offset: 48890},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1247, col: 12, offset: 48890},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1247, col: 21, offset: 48899},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 196, col: 63, offset: 7037},
																									expr: &litMatcher{
																										pos:        position{line: 196, col: 64, offset: 7038},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 196, col: 69, offset: 7043,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 200, col: 4, offset: 7118},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 210, col: 21, offset: 7481},
														run: (*parser).callonListParagraphLine254,
														expr: &litMatcher{
															pos:        position{line: 210, col: 21, offset: 7481},
															val:        "[source]",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 212, col: 5, offset: 7539},
														run: (*parser).callonListParagraphLine256,
														expr: &seqExpr{
															pos: position{line: 212, col: 5, offset: 7539},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 212, col: 5, offset: 7539},
																	val:        "[source,",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 212, col: 16, offset: 7550},
																	label: "language",
																	expr: &actionExpr{
																		pos: position{line: 212, col: 26, offset: 7560},
																		run: (*parser).callonListParagraphLine260,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 212, col: 26, offset: 7560},
																			expr: &choiceExpr{
																				pos: position{line: 212, col: 27, offset: 7561},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 1205, col: 14, offset: 47940},
																						run: (*parser).callonListParagraphLine263,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							expr: &charClassMatcher{
																								pos:        position{line: 1205, col: 14, offset: 47940},
																								val:        "[a-zA-Z0-9]",
																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 1215, col: 11, offset: 48287},
																						run: (*parser).callonListParagraphLine266,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							expr: &choiceExpr{
																								pos: position{line: 1243, col: 7, offset: 48832},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1243, col: 7, offset: 48832},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1243, col: 13, offset: 48838},
																										run: (*parser).callonListParagraphLine270,
																										expr: &litMatcher{
																											pos:        position{line: 1243, col: 13, offset: 48838},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 212, col: 48, offset: 7582},
																						run: (*parser).callonListParagraphLine272,
																						expr: &seqExpr{
																							pos: position{line: 212, col: 49, offset: 7583},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 212, col: 49, offset: 7583},
																									expr: &choiceExpr{
																										pos: position{line: 1247, col: 12, offset: 48890},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1247, col: 12, offset: 48890},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1247, col: 21, offset: 48899},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 212, col: 58, offset: 7592},
																									expr: &litMatcher{
																										pos:        position{line: 212, col: 59, offset: 7593},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 212, col: 64, offset: 7598,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 216, col: 7, offset: 7688},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 247, col: 20, offset: 8646},
														run: (*parser).callonListParagraphLine282,
														expr: &seqExpr{
															pos: position{line: 247, col: 20, offset: 8646},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 247, col: 20, offset: 8646},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 247, col: 24, offset: 8650},
																	label: "kind",
																	expr: &actionExpr{
																		pos: position{line: 259, col: 14, offset: 9116},
																		run: (*parser).callonListParagraphLine286,
																		expr: &litMatcher{
																			pos:        position{line: 259, col: 14, offset: 9116},
																			val:        "quote",
																			ignoreCase: false,
																		},
																	},
																},
																&zeroOrMoreExpr{
																	pos: position{line: 247, col: 41, offset: 8667},
																	expr: &choiceExpr{
																		pos: position{line: 1243, col: 7, offset: 48832},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1243, col: 7, offset: 48832},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1243, col: 13, offset: 48838},
																				run: (*parser).callonListParagraphLine291,
																				expr: &litMatcher{
																					pos:        position{line: 1243, col: 13, offset: 48838},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 247, col: 45, offset: 8671},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 247, col: 49, offset: 8675},
																	label: "author",
																	expr: &actionExpr{
																		pos: position{line: 286, col: 16, offset: 9839},
																		run: (*parser).callonListParagraphLine295,
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 286, col: 16, offset: 9839},
																			expr: &choiceExpr{
																				pos: position{line: 286, col: 17, offset: 9840},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 1205, col: 14, offset: 47940},
																						run: (*parser).callonListParagraphLine298,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							expr: &charClassMatcher{
																								pos:        position{line: 1205, col: 14, offset: 47940},
																								val:        "[a-zA-Z0-9]",
																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 1215, col: 11, offset: 48287},
																						run: (*parser).callonListParagraphLine301,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							expr: &choiceExpr{
																								pos: position{line: 1243, col: 7, offset: 48832},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1243, col: 7, offset: 48832},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1243, col: 13, offset: 48838},
																										run: (*parser).callonListParagraphLine305,
																										expr: &litMatcher{
																											pos:        position{line: 1243, col: 13, offset: 48838},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 286, col: 38, offset: 9861},
																						run: (*parser).callonListParagraphLine307,
																						expr: &seqExpr{
																							pos: position{line: 286, col: 39, offset: 9862},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 286, col: 39, offset: 9862},
																									expr: &choiceExpr{
																										pos: position{line: 1251, col: 8, offset: 48930},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1247, col: 12, offset: 48890},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1247, col: 21, offset: 48899},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																											&notExpr{
																												pos: position{line: 1249, col: 8, offset: 48919},
																												expr: &anyMatcher{
																													line: 1249, col: 9, offset: 48920,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 286, col: 44, offset: 9867},
																									expr: &litMatcher{
																										pos:        position{line: 286, col: 45, offset: 9868},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 286, col: 49, offset: 9872},
																									expr: &litMatcher{
																										pos:        position{line: 286, col: 50, offset: 9873},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 286, col: 55, offset: 9878,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 247, col: 70, offset: 8696},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 247, col: 74, offset: 8700},
																	label: "title",
																	expr: &actionExpr{
																		pos: position{line: 292, col: 15, offset: 9967},
																		run: (*parser).callonListParagraphLine322,
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 292, col: 15, offset: 9967},
																			expr: &choiceExpr{
																				pos: position{line: 292, col: 16, offset: 9968},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 1205, col: 14, offset: 47940},
																						run: (*parser).callonListParagraphLine325,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							expr: &charClassMatcher{
																								pos:        position{line: 1205, col: 14, offset: 47940},
																								val:        "[a-zA-Z0-9]",
																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 1215, col: 11, offset: 48287},
																						run: (*parser).callonListParagraphLine328,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							expr: &choiceExpr{
																								pos: position{line: 1243, col: 7, offset: 48832},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1243, col: 7, offset: 48832},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1243, col: 13, offset: 48838},
																										run: (*parser).callonListParagraphLine332,
																										expr: &litMatcher{
																											pos:        position{line: 1243, col: 13, offset: 48838},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																					&seqExpr{
																						pos: position{line: 292, col: 38, offset: 9990},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 292, col: 38, offset: 9990},
																								expr: &choiceExpr{
																									pos: position{line: 1251, col: 8, offset: 48930},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1247, col: 12, offset: 48890},
																											val:        "\r\n",
																											ignoreCase: false,
																										},
																										&charClassMatcher{
																											pos:        position{line: 1247, col: 21, offset: 48899},
																											val:        "[\\r\\n]",
																											chars:      []rune{'\r', '\n'},
																											ignoreCase: false,
																											inverted:   false,
																										},
																										&notExpr{
																											pos: position{line: 1249, col: 8, offset: 48919},
																											expr: &anyMatcher{
																												line: 1249, col: 9, offset: 48920,
																											},
																										},
																									},
																								},
																							},
																							&notExpr{
																								pos: position{line: 292, col: 43, offset: 9995},
																								expr: &litMatcher{
																									pos:        position{line: 292, col: 44, offset: 9996},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 292, col: 48, offset: 10000},
																								expr: &litMatcher{
																									pos:        position{line: 292, col: 49, offset: 10001},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 292, col: 54, offset: 10006,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 247, col: 93, offset: 8719},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 251, col: 1, offset: 8846},
														run: (*parser).callonListParagraphLine347,
														expr: &seqExpr{
															pos: position{line: 251, col: 1, offset: 8846},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 251, col: 1, offset: 8846},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 251, col: 5, offset: 8850},
																	label: "kind",
																	expr: &actionExpr{
																		pos: position{line: 259, col: 14, offset: 9116},
																		run: (*parser).callonListParagraphLine351,
																		expr: &litMatcher{
																			pos:        position{line: 259, col: 14, offset: 9116},
																			val:        "quote",
																			ignoreCase: false,
																		},
																	},
																},
																&zeroOrMoreExpr{
																	pos: position{line: 251, col: 22, offset: 8867},
																	expr: &choiceExpr{
																		pos: position{line: 1243, col: 7, offset: 48832},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1243, col: 7, offset: 48832},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1243, col: 13, offset: 48838},
																				run: (*parser).callonListParagraphLine356,
																				expr: &litMatcher{
																					pos:        position{line: 1243, col: 13, offset: 48838},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 251, col: 26, offset: 8871},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 251, col: 30, offset: 8875},
																	label: "author",
																	expr: &actionExpr{
																		pos: position{line: 286, col: 16, offset: 9839},
																		run: (*parser).callonListParagraphLine360,
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 286, col: 16, offset: 9839},
																			expr: &choiceExpr{
																				pos: position{line: 286, col: 17, offset: 9840},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 1205, col: 14, offset: 47940},
																						run: (*parser).callonListParagraphLine363,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							expr: &charClassMatcher{
																								pos:        position{line: 1205, col: 14, offset: 47940},
																								val:        "[a-zA-Z0-9]",
																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 1215, col: 11, offset: 48287},
																						run: (*parser).callonListParagraphLine366,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							expr: &choiceExpr{
																								pos: position{line: 1243, col: 7, offset: 48832},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1243, col: 7, offset: 48832},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1243, col: 13, offset: 48838},
																										run: (*parser).callonListParagraphLine370,
																										expr: &litMatcher{
																											pos:        position{line: 1243, col: 13, offset: 48838},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 286, col: 38, offset: 9861},
																						run: (*parser).callonListParagraphLine372,
																						expr: &seqExpr{
																							pos: position{line: 286, col: 39, offset: 9862},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 286, col: 39, offset: 9862},
																									expr: &choiceExpr{
																										pos: position{line: 1251, col: 8, offset: 48930},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1247, col: 12, offset: 48890},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1247, col: 21, offset: 48899},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																											&notExpr{
																												pos: position{line: 1249, col: 8, offset: 48919},
																												expr: &anyMatcher{
																													line: 1249, col: 9, offset: 48920,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 286, col: 44, offset: 9867},
																									expr: &litMatcher{
																										pos:        position{line: 286, col: 45, offset: 9868},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 286, col: 49, offset: 9872},
																									expr: &litMatcher{
																										pos:        position{line: 286, col: 50, offset: 9873},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 286, col: 55, offset: 9878,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 251, col: 51, offset: 8896},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 255, col: 1, offset: 9011},
														run: (*parser).callonListParagraphLine386,
														expr: &seqExpr{
															pos: position{line: 255, col: 1, offset: 9011},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 255, col: 1, offset: 9011},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 255, col: 5, offset: 9015},
																	label: "kind",
																	expr: &actionExpr{
																		pos: position{line: 259, col: 14, offset: 9116},
																		run: (*parser).callonListParagraphLine390,
																		expr: &litMatcher{
																			pos:        position{line: 259, col: 14, offset: 9116},
																			val:        "quote",
																			ignoreCase: false,
																		},
																	},
																},
																&zeroOrMoreExpr{
																	pos: position{line: 255, col: 22, offset: 9032},
																	expr: &choiceExpr{
																		pos: position{line: 1243, col: 7, offset: 48832},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1243, col: 7, offset: 48832},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1243, col: 13, offset: 48838},
																				run: (*parser).callonListParagraphLine395,
																				expr: &litMatcher{
																					pos:        position{line: 1243, col: 13, offset: 48838},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 255, col: 26, offset: 9036},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 263, col: 20, offset: 9179},
														run: (*parser).callonListParagraphLine398,
														expr: &seqExpr{
															pos: position{line: 263, col: 20, offset: 9179},
															exprs: []interface{}{
																&labeledExpr{
																	pos:   position{line: 263, col: 20, offset: 9179},
																	label: "attribute",
																	expr: &choiceExpr{
																		pos: position{line: 263, col: 31, offset: 9190},
																		alternatives: []interface{}{
																			&actionExpr{
																				pos: position{line: 263, col: 31, offset: 9190},
																				run: (*parser).callonListParagraphLine402,
																				expr: &seqExpr{
																					pos: position{line: 263, col: 31, offset: 9190},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 263, col: 31, offset: 9190},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 263, col: 35, offset: 9194},
																							label: "kind",
																							expr: &actionExpr{
																								pos: position{line: 282, col: 14, offset: 9780},
																								run: (*parser).callonListParagraphLine406,
																								expr: &litMatcher{
																									pos:        position{line: 282, col: 14, offset: 9780},
																									val:        "verse",
																									ignoreCase: false,
																								},
																							},
																						},
																						&zeroOrMoreExpr{
																							pos: position{line: 263, col: 52, offset: 9211},
																							expr: &choiceExpr{
																								pos: position{line: 1243, col: 7, offset: 48832},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1243, col: 7, offset: 48832},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1243, col: 13, offset: 48838},
																										run: (*parser).callonListParagraphLine411,
																										expr: &litMatcher{
																											pos:        position{line: 1243, col: 13, offset: 48838},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 263, col: 56, offset: 9215},
																							val:        ",",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 263, col: 60, offset: 9219},
																							label: "author",
																							expr: &actionExpr{
																								pos: position{line: 286, col: 16, offset: 9839},
																								run: (*parser).callonListParagraphLine415,
																								expr: &zeroOrMoreExpr{
																									pos: position{line: 286, col: 16, offset: 9839},
																									expr: &choiceExpr{
																										pos: position{line: 286, col: 17, offset: 9840},
																										alternatives: []interface{}{
																											&actionExpr{
																												pos: position{line: 1205, col: 14, offset: 47940},
																												run: (*parser).callonListParagraphLine418,
																												expr: &oneOrMoreExpr{
																													pos: position{line: 1205, col: 14, offset: 47940},
																													expr: &charClassMatcher{
																														pos:        position{line: 1205, col: 14, offset: 47940},
																														val:        "[a-zA-Z0-9]",
																														ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																											&actionExpr{
																												pos: position{line: 1215, col: 11, offset: 48287},
																												run: (*parser).callonListParagraphLine421,
																												expr: &oneOrMoreExpr{
																													pos: position{line: 1215, col: 11, offset: 48287},
																													expr: &choiceExpr{
																														pos: position{line: 1243, col: 7, offset: 48832},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1243, col: 7, offset: 48832},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1243, col: 13, offset: 48838},
																																run: (*parser).callonListParagraphLine425,
																																expr: &litMatcher{
																																	pos:        position{line: 1243, col: 13, offset: 48838},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																											&actionExpr{
																												pos: position{line: 286, col: 38, offset: 9861},
																												run: (*parser).callonListParagraphLine427,
																												expr: &seqExpr{
																													pos: position{line: 286, col: 39, offset: 9862},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 286, col: 39, offset: 9862},
																															expr: &choiceExpr{
																																pos: position{line: 1251, col: 8, offset: 48930},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1247, col: 12, offset: 48890},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1247, col: 21, offset: 48899},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																	&notExpr{
																																		pos: position{line: 1249, col: 8, offset: 48919},
																																		expr: &anyMatcher{
																																			line: 1249, col: 9, offset: 48920,
																																		},
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 286, col: 44, offset: 9867},
																															expr: &litMatcher{
																																pos:        position{line: 286, col: 45, offset: 9868},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 286, col: 49, offset: 9872},
																															expr: &litMatcher{
																																pos:        position{line: 286, col: 50, offset: 9873},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 286, col: 55, offset: 9878,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 263, col: 81, offset: 9240},
																							val:        ",",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 263, col: 85, offset: 9244},
																							label: "title",
																							expr: &actionExpr{
																								pos: position{line: 292, col: 15, offset: 9967},
																								run: (*parser).callonListParagraphLine442,
																								expr: &zeroOrMoreExpr{
																									pos: position{line: 292, col: 15, offset: 9967},
																									expr: &choiceExpr{
																										pos: position{line: 292, col: 16, offset: 9968},
																										alternatives: []interface{}{
																											&actionExpr{
																												pos: position{line: 1205, col: 14, offset: 47940},
																												run: (*parser).callonListParagraphLine445,
																												expr: &oneOrMoreExpr{
																													pos: position{line: 1205, col: 14, offset: 47940},
																													expr: &charClassMatcher{
																														pos:        position{line: 1205, col: 14, offset: 47940},
																														val:        "[a-zA-Z0-9]",
																														ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																											&actionExpr{
																												pos: position{line: 1215, col: 11, offset: 48287},
																												run: (*parser).callonListParagraphLine448,
																												expr: &oneOrMoreExpr{
																													pos: position{line: 1215, col: 11, offset: 48287},
																													expr: &choiceExpr{
																														pos: position{line: 1243, col: 7, offset: 48832},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1243, col: 7, offset: 48832},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1243, col: 13, offset: 48838},
																																run: (*parser).callonListParagraphLine452,
																																expr: &litMatcher{
																																	pos:        position{line: 1243, col: 13, offset: 48838},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																											&seqExpr{
																												pos: position{line: 292, col: 38, offset: 9990},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 292, col: 38, offset: 9990},
																														expr: &choiceExpr{
																															pos: position{line: 1251, col: 8, offset: 48930},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1247, col: 12, offset: 48890},
																																	val:        "\r\n",
																																	ignoreCase: false,
																																},
																																&charClassMatcher{
																																	pos:        position{line: 1247, col: 21, offset: 48899},
																																	val:        "[\\r\\n]",
																																	chars:      []rune{'\r', '\n'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																																&notExpr{
																																	pos: position{line: 1249, col: 8, offset: 48919},
																																	expr: &anyMatcher{
																																		line: 1249, col: 9, offset: 48920,
																																	},
																																},
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 292, col: 43, offset: 9995},
																														expr: &litMatcher{
																															pos:        position{line: 292, col: 44, offset: 9996},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 292, col: 48, offset: 10000},
																														expr: &litMatcher{
																															pos:        position{line: 292, col: 49, offset: 10001},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 292, col: 54, offset: 10006,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 263, col: 104, offset: 9263},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																			&actionExpr{
																				pos: position{line: 267, col: 5, offset: 9406},
																				run: (*parser).callonListParagraphLine467,
																				expr: &seqExpr{
																					pos: position{line: 267, col: 5, offset: 9406},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 267, col: 5, offset: 9406},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 267, col: 9, offset: 9410},
																							label: "kind",
																							expr: &actionExpr{
																								pos: position{line: 282, col: 14, offset: 9780},
																								run: (*parser).callonListParagraphLine471,
																								expr: &litMatcher{
																									pos:        position{line: 282, col: 14, offset: 9780},
																									val:        "verse",
																									ignoreCase: false,
																								},
																							},
																						},
																						&zeroOrMoreExpr{
																							pos: position{line: 267, col: 26, offset: 9427},
																							expr: &choiceExpr{
																								pos: position{line: 1243, col: 7, offset: 48832},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1243, col: 7, offset: 48832},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1243, col: 13, offset: 48838},
																										run: (*parser).callonListParagraphLine476,
																										expr: &litMatcher{
																											pos:        position{line: 1243, col: 13, offset: 48838},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 267, col: 30, offset: 9431},
																							val:        ",",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 267, col: 34, offset: 9435},
																							label: "author",
																							expr: &actionExpr{
																								pos: position{line: 286, col: 16, offset: 9839},
																								run: (*parser).callonListParagraphLine480,
																								expr: &zeroOrMoreExpr{
																									pos: position{line: 286, col: 16, offset: 9839},
																									expr: &choiceExpr{
																										pos: position{line: 286, col: 17, offset: 9840},
																										alternatives: []interface{}{
																											&actionExpr{
																												pos: position{line: 1205, col: 14, offset: 47940},
																												run: (*parser).callonListParagraphLine483,
																												expr: &oneOrMoreExpr{
																													pos: position{line: 1205, col: 14, offset: 47940},
																													expr: &charClassMatcher{
																														pos:        position{line: 1205, col: 14, offset: 47940},
																														val:        "[a-zA-Z0-9]",
																														ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																											&actionExpr{
																												pos: position{line: 1215, col: 11, offset: 48287},
																												run: (*parser).callonListParagraphLine486,
																												expr: &oneOrMoreExpr{
																													pos: position{line: 1215, col: 11, offset: 48287},
																													expr: &choiceExpr{
																														pos: position{line: 1243, col: 7, offset: 48832},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1243, col: 7, offset: 48832},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1243, col: 13, offset: 48838},
																																run: (*parser).callonListParagraphLine490,
																																expr: &litMatcher{
																																	pos:        position{line: 1243, col: 13, offset: 48838},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																											&actionExpr{
																												pos: position{line: 286, col: 38, offset: 9861},
																												run: (*parser).callonListParagraphLine492,
																												expr: &seqExpr{
																													pos: position{line: 286, col: 39, offset: 9862},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 286, col: 39, offset: 9862},
																															expr: &choiceExpr{
																																pos: position{line: 1251, col: 8, offset: 48930},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1247, col: 12, offset: 48890},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1247, col: 21, offset: 48899},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																	&notExpr{
																																		pos: position{line: 1249, col: 8, offset: 48919},
																																		expr: &anyMatcher{
																																			line: 1249, col: 9, offset: 48920,
																																		},
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 286, col: 44, offset: 9867},
																															expr: &litMatcher{
																																pos:        position{line: 286, col: 45, offset: 9868},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 286, col: 49, offset: 9872},
																															expr: &litMatcher{
																																pos:        position{line: 286, col: 50, offset: 9873},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 286, col: 55, offset: 9878,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 267, col: 55, offset: 9456},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																			&actionExpr{
																				pos: position{line: 271, col: 5, offset: 9587},
																				run: (*parser).callonListParagraphLine506,
																				expr: &seqExpr{
																					pos: position{line: 271, col: 5, offset: 9587},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 271, col: 5, offset: 9587},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 271, col: 9, offset: 9591},
																							label: "kind",
																							expr: &actionExpr{
																								pos: position{line: 282, col: 14, offset: 9780},
																								run: (*parser).callonListParagraphLine510,
																								expr: &litMatcher{
																									pos:        position{line: 282, col: 14, offset: 9780},
																									val:        "verse",
																									ignoreCase: false,
																								},
																							},
																						},
																						&zeroOrMoreExpr{
																							pos: position{line: 271, col: 26, offset: 9608},
																							expr: &choiceExpr{
																								pos: position{line: 1243, col: 7, offset: 48832},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1243, col: 7, offset: 48832},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1243, col: 13, offset: 48838},
																										run: (*parser).callonListParagraphLine515,
																										expr: &litMatcher{
																											pos:        position{line: 1243, col: 13, offset: 48838},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 271, col: 30, offset: 9612},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&stateCodeExpr{
																	pos: position{line: 275, col: 1, offset: 9688},
																	run: (*parser).callonListParagraphLine518,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 205, col: 30, offset: 7283},
														run: (*parser).callonListParagraphLine519,
														expr: &seqExpr{
															pos: position{line: 205, col: 30, offset: 7283},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 205, col: 30, offset: 7283},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 205, col: 34, offset: 7287},
																	label: "k",
																	expr: &choiceExpr{
																		pos: position{line: 564, col: 19, offset: 20877},
																		alternatives: []interface{}{
																			&actionExpr{
																				pos: position{line: 564, col: 19, offset: 20877},
																				run: (*parser).callonListParagraphLine524,
																				expr: &litMatcher{
																					pos:        position{line: 564, col: 19, offset: 20877},
																					val:        "TIP",
																					ignoreCase: false,
																				},
																			},
																			&actionExpr{
																				pos: position{line: 566, col: 9, offset: 20923},
																				run: (*parser).callonListParagraphLine526,
																				expr: &litMatcher{
																					pos:        position{line: 566, col: 9, offset: 20923},
																					val:        "NOTE",
																					ignoreCase: false,
																				},
																			},
																			&actionExpr{
																				pos: position{line: 568, col: 9, offset: 20971},
																				run: (*parser).callonListParagraphLine528,
																				expr: &litMatcher{
																					pos:        position{line: 568, col: 9, offset: 20971},
																					val:        "IMPORTANT",
																					ignoreCase: false,
																				},
																			},
																			&actionExpr{
																				pos: position{line: 570, col: 9, offset: 21029},
																				run: (*parser).callonListParagraphLine530,
																				expr: &litMatcher{
																					pos:        position{line: 570, col: 9, offset: 21029},
																					val:        "WARNING",
																					ignoreCase: false,
																				},
																			},
																			&actionExpr{
																				pos: position{line: 572, col: 9, offset: 21083},
																				run: (*parser).callonListParagraphLine532,
																				expr: &litMatcher{
																					pos:        position{line: 572, col: 9, offset: 21083},
																					val:        "CAUTION",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 205, col: 53, offset: 7306},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 243, col: 21, offset: 8543},
														run: (*parser).callonListParagraphLine535,
														expr: &litMatcher{
															pos:        position{line: 243, col: 21, offset: 8543},
															val:        "[horizontal]",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 221, col: 19, offset: 7839},
														run: (*parser).callonListParagraphLine537,
														expr: &seqExpr{
															pos: position{line: 221, col: 19, offset: 7839},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 221, col: 19, offset: 7839},
																	val:        "[",
																	ignoreCase: false,
																},
																&notExpr{
																	pos: position{line: 221, col: 23, offset: 7843},
																	expr: &choiceExpr{
																		pos: position{line: 1243, col: 7, offset: 48832},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1243, col: 7, offset: 48832},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1243, col: 13, offset: 48838},
																				run: (*parser).callonListParagraphLine543,
																				expr: &litMatcher{
																					pos:        position{line: 1243, col: 13, offset: 48838},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 221, col: 27, offset: 7847},
																	label: "attributes",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 221, col: 38, offset: 7858},
																		expr: &choiceExpr{
																			pos: position{line: 225, col: 21, offset: 7971},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 225, col: 21, offset: 7971},
																					run: (*parser).callonListParagraphLine548,
																					expr: &seqExpr{
																						pos: position{line: 225, col: 21, offset: 7971},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 225, col: 21, offset: 7971},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 231, col: 17, offset: 8231},
																									run: (*parser).callonListParagraphLine551,
																									expr: &seqExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												expr: &actionExpr{
																													pos: position{line: 259, col: 14, offset: 9116},
																													run: (*parser).callonListParagraphLine554,
																													expr: &litMatcher{
																														pos:        position{line: 259, col: 14, offset: 9116},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 231, col: 28, offset: 8242},
																												expr: &actionExpr{
																													pos: position{line: 282, col: 14, offset: 9780},
																													run: (*parser).callonListParagraphLine557,
																													expr: &litMatcher{
																														pos:        position{line: 282, col: 14, offset: 9780},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 231, col: 39, offset: 8253},
																												expr: &actionExpr{
																													pos: position{line: 1170, col: 16, offset: 47067},
																													run: (*parser).callonListParagraphLine560,
																													expr: &litMatcher{
																														pos:        position{line: 1170, col: 16, offset: 47067},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 231, col: 52, offset: 8266},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 231, col: 56, offset: 8270},
																													expr: &choiceExpr{
																														pos: position{line: 231, col: 57, offset: 8271},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1205, col: 14, offset: 47940},
																																run: (*parser).callonListParagraphLine565,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1205, col: 14, offset: 47940},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1205, col: 14, offset: 47940},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1215, col: 11, offset: 48287},
																																run: (*parser).callonListParagraphLine568,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1215, col: 11, offset: 48287},
																																	expr: &choiceExpr{
																																		pos: position{line: 1243, col: 7, offset: 48832},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1243, col: 7, offset: 48832},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1243, col: 13, offset: 48838},
																																				run: (*parser).callonListParagraphLine572,
																																				expr: &litMatcher{
																																					pos:        position{line: 1243, col: 13, offset: 48838},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 231, col: 78, offset: 8292},
																																run: (*parser).callonListParagraphLine574,
																																expr: &seqExpr{
																																	pos: position{line: 231, col: 79, offset: 8293},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 80, offset: 8294},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 231, col: 84, offset: 8298},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 85, offset: 8299},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 231, col: 89, offset: 8303},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 90, offset: 8304},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 231, col: 95, offset: 8309,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 225, col: 40, offset: 7990},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 225, col: 44, offset: 7994},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 237, col: 19, offset: 8403},
																									run: (*parser).callonListParagraphLine585,
																									expr: &labeledExpr{
																										pos:   position{line: 237, col: 19, offset: 8403},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 237, col: 25, offset: 8409},
																											expr: &choiceExpr{
																												pos: position{line: 237, col: 26, offset: 8410},
																												alternatives: []interface{}{
																													&actionExpr{
																														pos: position{line: 1205, col: 14, offset: 47940},
																														run: (*parser).callonListParagraphLine589,
																														expr: &oneOrMoreExpr{
																															pos: position{line: 1205, col: 14, offset: 47940},
																															expr: &charClassMatcher{
																																pos:        position{line: 1205, col: 14, offset: 47940},
																																val:        "[a-zA-Z0-9]",
																																ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																														},
																													},
																													&actionExpr{
																														pos: position{line: 1215, col: 11, offset: 48287},
																														run: (*parser).callonListParagraphLine592,
																														expr: &oneOrMoreExpr{
																															pos: position{line: 1215, col: 11, offset: 48287},
																															expr: &choiceExpr{
																																pos: position{line: 1243, col: 7, offset: 48832},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1243, col: 7, offset: 48832},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 1243, col: 13, offset: 48838},
																																		run: (*parser).callonListParagraphLine596,
																																		expr: &litMatcher{
																																			pos:        position{line: 1243, col: 13, offset: 48838},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&actionExpr{
																														pos: position{line: 237, col: 47, offset: 8431},
																														run: (*parser).callonListParagraphLine598,
																														expr: &seqExpr{
																															pos: position{line: 237, col: 48, offset: 8432},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 237, col: 48, offset: 8432},
																																	expr: &litMatcher{
																																		pos:        position{line: 237, col: 49, offset: 8433},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 237, col: 53, offset: 8437},
																																	expr: &litMatcher{
																																		pos:        position{line: 237, col: 54, offset: 8438},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 237, col: 58, offset: 8442},
																																	expr: &litMatcher{
																																		pos:        position{line: 237, col: 59, offset: 8443},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 237, col: 64, offset: 8448,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 225, col: 67, offset: 8017},
																								expr: &litMatcher{
																									pos:        position{line: 225, col: 67, offset: 8017},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 225, col: 72, offset: 8022},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonListParagraphLine612,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 227, col: 5, offset: 8106},
																					run: (*parser).callonListParagraphLine614,
																					expr: &seqExpr{
																						pos: position{line: 227, col: 5, offset: 8106},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 227, col: 5, offset: 8106},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 231, col: 17, offset: 8231},
																									run: (*parser).callonListParagraphLine617,
																									expr: &seqExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												expr: &actionExpr{
																													pos: position{line: 259, col: 14, offset: 9116},
																													run: (*parser).callonListParagraphLine620,
																													expr: &litMatcher{
																														pos:        position{line: 259, col: 14, offset: 9116},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 231, col: 28, offset: 8242},
																												expr: &actionExpr{
																													pos: position{line: 282, col: 14, offset: 9780},
																													run: (*parser).callonListParagraphLine623,
																													expr: &litMatcher{
																														pos:        position{line: 282, col: 14, offset: 9780},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 231, col: 39, offset: 8253},
																												expr: &actionExpr{
																													pos: position{line: 1170, col: 16, offset: 47067},
																													run: (*parser).callonListParagraphLine626,
																													expr: &litMatcher{
																														pos:        position{line: 1170, col: 16, offset: 47067},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 231, col: 52, offset: 8266},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 231, col: 56, offset: 8270},
																													expr: &choiceExpr{
																														pos: position{line: 231, col: 57, offset: 8271},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1205, col: 14, offset: 47940},
																																run: (*parser).callonListParagraphLine631,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1205, col: 14, offset: 47940},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1205, col: 14, offset: 47940},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1215, col: 11, offset: 48287},
																																run: (*parser).callonListParagraphLine634,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1215, col: 11, offset: 48287},
																																	expr: &choiceExpr{
																																		pos: position{line: 1243, col: 7, offset: 48832},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1243, col: 7, offset: 48832},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1243, col: 13, offset: 48838},
																																				run: (*parser).callonListParagraphLine638,
																																				expr: &litMatcher{
																																					pos:        position{line: 1243, col: 13, offset: 48838},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 231, col: 78, offset: 8292},
																																run: (*parser).callonListParagraphLine640,
																																expr: &seqExpr{
																																	pos: position{line: 231, col: 79, offset: 8293},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 80, offset: 8294},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 231, col: 84, offset: 8298},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 85, offset: 8299},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 231, col: 89, offset: 8303},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 90, offset: 8304},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 231, col: 95, offset: 8309,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 227, col: 24, offset: 8125},
																								expr: &litMatcher{
																									pos:        position{line: 227, col: 24, offset: 8125},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 227, col: 29, offset: 8130},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonListParagraphLine654,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 221, col: 59, offset: 7879},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 165, col: 170, offset: 6018},
											expr: &choiceExpr{
												pos: position{line: 1243, col: 7, offset: 48832},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1243, col: 7, offset: 48832},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1243, col: 13, offset: 48838},
														run: (*parser).callonListParagraphLine660,
														expr: &litMatcher{
															pos:        position{line: 1243, col: 13, offset: 48838},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1251, col: 8, offset: 48930},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1247, col: 12, offset: 48890},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1247, col: 21, offset: 48899},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1249, col: 8, offset: 48919},
													expr: &anyMatcher{
														line: 1249, col: 9, offset: 48920,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 449, col: 5, offset: 15868},
							expr: &choiceExpr{
								pos: position{line: 936, col: 19, offset: 38153},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1120, col: 26, offset: 45059},
										val:        "....",
										ignoreCase: false,
									},
									&seqExpr{
										pos: position{line: 948, col: 25, offset: 38638},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 948, col: 25, offset: 38638},
												val:        "```",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 948, col: 31, offset: 38644},
												expr: &choiceExpr{
													pos: position{line: 1243, col: 7, offset: 48832},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1243, col: 7, offset: 48832},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1243, col: 13, offset: 48838},
															run: (*parser).callonListParagraphLine675,
															expr: &litMatcher{
																pos:        position{line: 1243, col: 13, offset: 48838},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1251, col: 8, offset: 48930},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1247, col: 12, offset: 48890},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1247, col: 21, offset: 48899},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1249, col: 8, offset: 48919},
														expr: &anyMatcher{
															line: 1249, col: 9, offset: 48920,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 959, col: 26, offset: 39117},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 959, col: 26, offset: 39117},
												val:        "----",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 959, col: 33, offset: 39124},
												expr: &choiceExpr{
													pos: position{line: 1243, col: 7, offset: 48832},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1243, col: 7, offset: 48832},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1243, col: 13, offset: 48838},
															run: (*parser).callonListParagraphLine687,
															expr: &litMatcher{
																pos:        position{line: 1243, col: 13, offset: 48838},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1251, col: 8, offset: 48930},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1247, col: 12, offset: 48890},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1247, col: 21, offset: 48899},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1249, col: 8, offset: 48919},
														expr: &anyMatcher{
															line: 1249, col: 9, offset: 48920,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 983, col: 26, offset: 40080},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 983, col: 26, offset: 40080},
												val:        "====",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 983, col: 33, offset: 40087},
												expr: &choiceExpr{
													pos: position{line: 1243, col: 7, offset: 48832},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1243, col: 7, offset: 48832},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1243, col: 13, offset: 48838},
															run: (*parser).callonListParagraphLine699,
															expr: &litMatcher{
																pos:        position{line: 1243, col: 13, offset: 48838},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1251, col: 8, offset: 48930},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1247, col: 12, offset: 48890},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1247, col: 21, offset: 48899},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1249, col: 8, offset: 48919},
														expr: &anyMatcher{
															line: 1249, col: 9, offset: 48920,
														},
													},
												},
											},
										},
									},
									&litMatcher{
										pos:        position{line: 1092, col: 26, offset: 43998},
										val:        "////",
										ignoreCase: false,
									},
									&seqExpr{
										pos: position{line: 1006, col: 24, offset: 40905},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 1006, col: 24, offset: 40905},
												val:        "____",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 1006, col: 31, offset: 40912},
												expr: &choiceExpr{
													pos: position{line: 1243, col: 7, offset: 48832},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1243, col: 7, offset: 48832},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1243, col: 13, offset: 48838},
															run: (*parser).callonListParagraphLine712,
															expr: &litMatcher{
																pos:        position{line: 1243, col: 13, offset: 48838},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1251, col: 8, offset: 48930},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1247, col: 12, offset: 48890},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1247, col: 21, offset: 48899},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1249, col: 8, offset: 48919},
														expr: &anyMatcher{
															line: 1249, col: 9, offset: 48920,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 1050, col: 26, offset: 42506},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 1050, col: 26, offset: 42506},
												val:        "****",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 1050, col: 33, offset: 42513},
												expr: &choiceExpr{
													pos: position{line: 1243, col: 7, offset: 48832},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1243, col: 7, offset: 48832},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1243, col: 13, offset: 48838},
															run: (*parser).callonListParagraphLine724,
															expr: &litMatcher{
																pos:        position{line: 1243, col: 13, offset: 48838},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1251, col: 8, offset: 48930},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1247, col: 12, offset: 48890},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1247, col: 21, offset: 48899},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1249, col: 8, offset: 48919},
														expr: &anyMatcher{
															line: 1249, col: 9, offset: 48920,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 450, col: 5, offset: 15890},
							label: "line",
							expr: &ruleRefExpr{
								pos:  position{line: 450, col: 11, offset: 15896},
								name: "InlineElements",
							},
						},
					},
				},
			},
		},
		{
			name: "ContinuedDocumentElement",
			pos:  position{line: 458, col: 1, offset: 16026},
			expr: &actionExpr{
				pos: position{line: 458, col: 28, offset: 16053},
				run: (*parser).callonContinuedDocumentElement1,
				expr: &seqExpr{
					pos: position{line: 458, col: 28, offset: 16053},
					exprs: []interface{}{
						&actionExpr{
							pos: position{line: 454, col: 25, offset: 15966},
							run: (*parser).callonContinuedDocumentElement3,
							expr: &seqExpr{
								pos: position{line: 454, col: 25, offset: 15966},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 454, col: 25, offset: 15966},
										val:        "+",
										ignoreCase: false,
									},
									&zeroOrMoreExpr{
										pos: position{line: 454, col: 29, offset: 15970},
										expr: &choiceExpr{
											pos: position{line: 1243, col: 7, offset: 48832},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1243, col: 7, offset: 48832},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1243, col: 13, offset: 48838},
													run: (*parser).callonContinuedDocumentElement9,
													expr: &litMatcher{
														pos:        position{line: 1243, col: 13, offset: 48838},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&choiceExpr{
										pos: position{line: 1251, col: 8, offset: 48930},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1247, col: 12, offset: 48890},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1247, col: 21, offset: 48899},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1249, col: 8, offset: 48919},
												expr: &anyMatcher{
													line: 1249, col: 9, offset: 48920,
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 458, col: 49, offset: 16074},
							label: "element",
							expr: &ruleRefExpr{
								pos:  position{line: 458, col: 57, offset: 16082},
								name: "DocumentElement",
							},
						},
					},
				},
			},
		},
		{
			name: "OrderedListItem",
			pos:  position{line: 465, col: 1, offset: 16240},
			expr: &actionExpr{
				pos: position{line: 465, col: 20, offset: 16259},
				run: (*parser).callonOrderedListItem1,
				expr: &seqExpr{
					pos: position{line: 465, col: 20, offset: 16259},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 465, col: 20, offset: 16259},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 465, col: 31, offset: 16270},
								expr: &actionExpr{
									pos: position{line: 164, col: 21, offset: 5763},
									run: (*parser).callonOrderedListItem5,
									expr: &seqExpr{
										pos: position{line: 164, col: 21, offset: 5763},
										exprs: []interface{}{
											&andExpr{
												pos: position{line: 164, col: 21, offset: 5763},
												expr: &charClassMatcher{
													pos:        position{line: 164, col: 23, offset: 5765},
													val:        "[[.#]",
													chars:      []rune{'[', '.', '#'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&labeledExpr{
												pos:   position{line: 165, col: 5, offset: 5853},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 165, col: 11, offset: 5859},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 174, col: 14, offset: 6316},
															run: (*parser).callonOrderedListItem11,
															expr: &seqExpr{
																pos: position{line: 174, col: 14, offset: 6316},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 174, col: 14, offset: 6316},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 174, col: 19, offset: 6321},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1225, col: 7, offset: 48453},
																			run: (*parser).callonOrderedListItem15,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1225, col: 7, offset: 48453},
																				expr: &choiceExpr{
																					pos: position{line: 1225, col: 8, offset: 48454},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonOrderedListItem18,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1225, col: 20, offset: 48466},
																							run: (*parser).callonOrderedListItem21,
																							expr: &seqExpr{
																								pos: position{line: 1225, col: 21, offset: 48467},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1225, col: 21, offset: 48467},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 30, offset: 48476},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonOrderedListItem30,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 34, offset: 48480},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 35, offset: 48481},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 39, offset: 48485},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 40, offset: 48486},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 44, offset: 48490},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 45, offset: 48491},
																											val:        "<<",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 50, offset: 48496},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 51, offset: 48497},
																											val:        ">>",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 56, offset: 48502},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 57, offset: 48503},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1225, col: 62, offset: 48508,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 174, col: 27, offset: 6329},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 5, offset: 6383},
															run: (*parser).callonOrderedListItem44,
															expr: &seqExpr{
																pos: position{line: 176, col: 5, offset: 6383},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 5, offset: 6383},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 10, offset: 6388},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1225, col: 7, offset: 48453},
																			run: (*parser).callonOrderedListItem48,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1225, col: 7, offset: 48453},
																				expr: &choiceExpr{
																					pos: position{line: 1225, col: 8, offset: 48454},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonOrderedListItem51,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1225, col: 20, offset: 48466},
																							run: (*parser).callonOrderedListItem54,
																							expr: &seqExpr{
																								pos: position{line: 1225, col: 21, offset: 48467},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1225, col: 21, offset: 48467},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 30, offset: 48476},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonOrderedListItem63,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 34, offset: 48480},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 35, offset: 48481},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 39, offset: 48485},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 40, offset: 48486},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 44, offset: 48490},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 45, offset: 48491},
																											val:        "<<",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 50, offset: 48496},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 51, offset: 48497},
																											val:        ">>",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1225, col: 56, offset: 48502},
																										expr: &litMatcher{
																											pos:        position{line: 1225, col: 57, offset: 48503},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1225, col: 62, offset: 48508,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 18, offset: 6396},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 186, col: 17, offset: 6699},
															run: (*parser).callonOrderedListItem77,
															expr: &seqExpr{
																pos: position{line: 186, col: 17, offset: 6699},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 186, col: 17, offset: 6699},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 186, col: 21, offset: 6703},
																		expr: &litMatcher{
																			pos:        position{line: 186, col: 22, offset: 6704},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 186, col: 26, offset: 6708},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonOrderedListItem85,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 186, col: 30, offset: 6712},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 186, col: 37, offset: 6719},
																			run: (*parser).callonOrderedListItem88,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 186, col: 37, offset: 6719},
																				expr: &choiceExpr{
																					pos: position{line: 186, col: 38, offset: 6720},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonOrderedListItem91,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonOrderedListItem94,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonOrderedListItem98,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 186, col: 59, offset: 6741},
																							run: (*parser).callonOrderedListItem100,
																							expr: &seqExpr{
																								pos: position{line: 186, col: 60, offset: 6742},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 186, col: 60, offset: 6742},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 186, col: 70, offset: 6752,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 196, col: 16, offset: 6990},
															run: (*parser).callonOrderedListItem107,
															expr: &seqExpr{
																pos: position{line: 196, col: 16, offset: 6990},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 196, col: 16, offset: 6990},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 196, col: 21, offset: 6995},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonOrderedListItem113,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 196, col: 25, offset: 6999},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 196, col: 31, offset: 7005},
																			run: (*parser).callonOrderedListItem116,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 196, col: 31, offset: 7005},
																				expr: &choiceExpr{
																					pos: position{line: 196, col: 32, offset: 7006},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonOrderedListItem119,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonOrderedListItem122,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonOrderedListItem126,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 196, col: 53, offset: 7027},
																							run: (*parser).callonOrderedListItem128,
																							expr: &seqExpr{
																								pos: position{line: 196, col: 54, offset: 7028},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 196, col: 54, offset: 7028},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 196, col: 63, offset: 7037},
																										expr: &litMatcher{
																											pos:        position{line: 196, col: 64, offset: 7038},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 196, col: 69, offset: 7043,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 200, col: 4, offset: 7118},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 210, col: 21, offset: 7481},
															run: (*parser).callonOrderedListItem138,
															expr: &litMatcher{
																pos:        position{line: 210, col: 21, offset: 7481},
																val:        "[source]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 212, col: 5, offset: 7539},
															run: (*parser).callonOrderedListItem140,
															expr: &seqExpr{
																pos: position{line: 212, col: 5, offset: 7539},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 212, col: 5, offset: 7539},
																		val:        "[source,",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 212, col: 16, offset: 7550},
																		label: "language",
																		expr: &actionExpr{
																			pos: position{line: 212, col: 26, offset: 7560},
																			run: (*parser).callonOrderedListItem144,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 212, col: 26, offset: 7560},
																				expr: &choiceExpr{
																					pos: position{line: 212, col: 27, offset: 7561},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonOrderedListItem147,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonOrderedListItem150,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonOrderedListItem154,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 212, col: 48, offset: 7582},
																							run: (*parser).callonOrderedListItem156,
																							expr: &seqExpr{
																								pos: position{line: 212, col: 49, offset: 7583},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 212, col: 49, offset: 7583},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 212, col: 58, offset: 7592},
																										expr: &litMatcher{
																											pos:        position{line: 212, col: 59, offset: 7593},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 212, col: 64, offset: 7598,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 216, col: 7, offset: 7688},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 247, col: 20, offset: 8646},
															run: (*parser).callonOrderedListItem166,
															expr: &seqExpr{
																pos: position{line: 247, col: 20, offset: 8646},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 247, col: 20, offset: 8646},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 24, offset: 8650},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonOrderedListItem170,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 247, col: 41, offset: 8667},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonOrderedListItem175,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 45, offset: 8671},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 49, offset: 8675},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 286, col: 16, offset: 9839},
																			run: (*parser).callonOrderedListItem179,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 286, col: 16, offset: 9839},
																				expr: &choiceExpr{
																					pos: position{line: 286, col: 17, offset: 9840},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonOrderedListItem182,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonOrderedListItem185,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonOrderedListItem189,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 286, col: 38, offset: 9861},
																							run: (*parser).callonOrderedListItem191,
																							expr: &seqExpr{
																								pos: position{line: 286, col: 39, offset: 9862},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 286, col: 39, offset: 9862},
																										expr: &choiceExpr{
																											pos: position{line: 1251, col: 8, offset: 48930},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																												&notExpr{
																													pos: position{line: 1249, col: 8, offset: 48919},
																													expr: &anyMatcher{
																														line: 1249, col: 9, offset: 48920,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 44, offset: 9867},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 45, offset: 9868},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 49, offset: 9872},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 50, offset: 9873},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 286, col: 55, offset: 9878,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 70, offset: 8696},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 74, offset: 8700},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 292, col: 15, offset: 9967},
																			run: (*parser).callonOrderedListItem206,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 292, col: 15, offset: 9967},
																				expr: &choiceExpr{
																					pos: position{line: 292, col: 16, offset: 9968},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonOrderedListItem209,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonOrderedListItem212,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonOrderedListItem216,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&seqExpr{
																							pos: position{line: 292, col: 38, offset: 9990},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 292, col: 38, offset: 9990},
																									expr: &choiceExpr{
																										pos: position{line: 1251, col: 8, offset: 48930},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1247, col: 12, offset: 48890},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1247, col: 21, offset: 48899},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																											&notExpr{
																												pos: position{line: 1249, col: 8, offset: 48919},
																												expr: &anyMatcher{
																													line: 1249, col: 9, offset: 48920,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 292, col: 43, offset: 9995},
																									expr: &litMatcher{
																										pos:        position{line: 292, col: 44, offset: 9996},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 292, col: 48, offset: 10000},
																									expr: &litMatcher{
																										pos:        position{line: 292, col: 49, offset: 10001},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 292, col: 54, offset: 10006,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 93, offset: 8719},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 251, col: 1, offset: 8846},
															run: (*parser).callonOrderedListItem231,
															expr: &seqExpr{
																pos: position{line: 251, col: 1, offset: 8846},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 251, col: 1, offset: 8846},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 251, col: 5, offset: 8850},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonOrderedListItem235,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 251, col: 22, offset: 8867},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonOrderedListItem240,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 251, col: 26, offset: 8871},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 251, col: 30, offset: 8875},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 286, col: 16, offset: 9839},
																			run: (*parser).callonOrderedListItem244,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 286, col: 16, offset: 9839},
																				expr: &choiceExpr{
																					pos: position{line: 286, col: 17, offset: 9840},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonOrderedListItem247,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							run: (*parser).callonOrderedListItem250,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonOrderedListItem254,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 286, col: 38, offset: 9861},
																							run: (*parser).callonOrderedListItem256,
																							expr: &seqExpr{
																								pos: position{line: 286, col: 39, offset: 9862},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 286, col: 39, offset: 9862},
																										expr: &choiceExpr{
																											pos: position{line: 1251, col: 8, offset: 48930},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																												&notExpr{
																													pos: position{line: 1249, col: 8, offset: 48919},
																													expr: &anyMatcher{
																														line: 1249, col: 9, offset: 48920,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 44, offset: 9867},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 45, offset: 9868},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 49, offset: 9872},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 50, offset: 9873},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 286, col: 55, offset: 9878,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 251, col: 51, offset: 8896},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 255, col: 1, offset: 9011},
															run: (*parser).callonOrderedListItem270,
															expr: &seqExpr{
																pos: position{line: 255, col: 1, offset: 9011},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 255, col: 1, offset: 9011},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 255, col: 5, offset: 9015},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonOrderedListItem274,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 255, col: 22, offset: 9032},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonOrderedListItem279,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 255, col: 26, offset: 9036},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 263, col: 20, offset: 9179},
															run: (*parser).callonOrderedListItem282,
															expr: &seqExpr{
																pos: position{line: 263, col: 20, offset: 9179},
																exprs: []interface{}{
																	&labeledExpr{
																		pos:   position{line: 263, col: 20, offset: 9179},
																		label: "attribute",
																		expr: &choiceExpr{
																			pos: position{line: 263, col: 31, offset: 9190},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 263, col: 31, offset: 9190},
																					run: (*parser).callonOrderedListItem286,
																					expr: &seqExpr{
																						pos: position{line: 263, col: 31, offset: 9190},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 263, col: 31, offset: 9190},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 35, offset: 9194},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonOrderedListItem290,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 263, col: 52, offset: 9211},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonOrderedListItem295,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 56, offset: 9215},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 60, offset: 9219},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 286, col: 16, offset: 9839},
																									run: (*parser).callonOrderedListItem299,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 286, col: 16, offset: 9839},
																										expr: &choiceExpr{
																											pos: position{line: 286, col: 17, offset: 9840},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1205, col: 14, offset: 47940},
																													run: (*parser).callonOrderedListItem302,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1205, col: 14, offset: 47940},
																														expr: &charClassMatcher{
																															pos:        position{line: 1205, col: 14, offset: 47940},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1215, col: 11, offset: 48287},
																													run: (*parser).callonOrderedListItem305,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1215, col: 11, offset: 48287},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonOrderedListItem309,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 286, col: 38, offset: 9861},
																													run: (*parser).callonOrderedListItem311,
																													expr: &seqExpr{
																														pos: position{line: 286, col: 39, offset: 9862},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 286, col: 39, offset: 9862},
																																expr: &choiceExpr{
																																	pos: position{line: 1251, col: 8, offset: 48930},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1247, col: 12, offset: 48890},
																																			val:        "\r\n",
																																			ignoreCase: false,
																																		},
																																		&charClassMatcher{
																																			pos:        position{line: 1247, col: 21, offset: 48899},
																																			val:        "[\\r\\n]",
																																			chars:      []rune{'\r', '\n'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																		&notExpr{
																																			pos: position{line: 1249, col: 8, offset: 48919},
																																			expr: &anyMatcher{
																																				line: 1249, col: 9, offset: 48920,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 44, offset: 9867},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 45, offset: 9868},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 49, offset: 9872},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 50, offset: 9873},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 286, col: 55, offset: 9878,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 81, offset: 9240},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 85, offset: 9244},
																								label: "title",
																								expr: &actionExpr{
																									pos: position{line: 292, col: 15, offset: 9967},
																									run: (*parser).callonOrderedListItem326,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 292, col: 15, offset: 9967},
																										expr: &choiceExpr{
																											pos: position{line: 292, col: 16, offset: 9968},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1205, col: 14, offset: 47940},
																													run: (*parser).callonOrderedListItem329,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1205, col: 14, offset: 47940},
																														expr: &charClassMatcher{
																															pos:        position{line: 1205, col: 14, offset: 47940},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1215, col: 11, offset: 48287},
																													run: (*parser).callonOrderedListItem332,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1215, col: 11, offset: 48287},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonOrderedListItem336,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&seqExpr{
																													pos: position{line: 292, col: 38, offset: 9990},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 292, col: 38, offset: 9990},
																															expr: &choiceExpr{
																																pos: position{line: 1251, col: 8, offset: 48930},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1247, col: 12, offset: 48890},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1247, col: 21, offset: 48899},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																	&notExpr{
																																		pos: position{line: 1249, col: 8, offset: 48919},
																																		expr: &anyMatcher{
																																			line: 1249, col: 9, offset: 48920,
																																		},
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 292, col: 43, offset: 9995},
																															expr: &litMatcher{
																																pos:        position{line: 292, col: 44, offset: 9996},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 292, col: 48, offset: 10000},
																															expr: &litMatcher{
																																pos:        position{line: 292, col: 49, offset: 10001},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 292, col: 54, offset: 10006,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 104, offset: 9263},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 267, col: 5, offset: 9406},
																					run: (*parser).callonOrderedListItem351,
																					expr: &seqExpr{
																						pos: position{line: 267, col: 5, offset: 9406},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 267, col: 5, offset: 9406},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 267, col: 9, offset: 9410},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonOrderedListItem355,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 267, col: 26, offset: 9427},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonOrderedListItem360,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 267, col: 30, offset: 9431},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 267, col: 34, offset: 9435},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 286, col: 16, offset: 9839},
																									run: (*parser).callonOrderedListItem364,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 286, col: 16, offset: 9839},
																										expr: &choiceExpr{
																											pos: position{line: 286, col: 17, offset: 9840},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1205, col: 14, offset: 47940},
																													run: (*parser).callonOrderedListItem367,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1205, col: 14, offset: 47940},
																														expr: &charClassMatcher{
																															pos:        position{line: 1205, col: 14, offset: 47940},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1215, col: 11, offset: 48287},
																													run: (*parser).callonOrderedListItem370,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1215, col: 11, offset: 48287},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonOrderedListItem374,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 286, col: 38, offset: 9861},
																													run: (*parser).callonOrderedListItem376,
																													expr: &seqExpr{
																														pos: position{line: 286, col: 39, offset: 9862},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 286, col: 39, offset: 9862},
																																expr: &choiceExpr{
																																	pos: position{line: 1251, col: 8, offset: 48930},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1247, col: 12, offset: 48890},
																																			val:        "\r\n",
																																			ignoreCase: false,
																																		},
																																		&charClassMatcher{
																																			pos:        position{line: 1247, col: 21, offset: 48899},
																																			val:        "[\\r\\n]",
																																			chars:      []rune{'\r', '\n'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																		&notExpr{
																																			pos: position{line: 1249, col: 8, offset: 48919},
																																			expr: &anyMatcher{
																																				line: 1249, col: 9, offset: 48920,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 44, offset: 9867},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 45, offset: 9868},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 49, offset: 9872},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 50, offset: 9873},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 286, col: 55, offset: 9878,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 267, col: 55, offset: 9456},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 271, col: 5, offset: 9587},
																					run: (*parser).callonOrderedListItem390,
																					expr: &seqExpr{
																						pos: position{line: 271, col: 5, offset: 9587},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 271, col: 5, offset: 9587},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 271, col: 9, offset: 9591},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonOrderedListItem394,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 271, col: 26, offset: 9608},
																								expr: &choiceExpr{
																									pos: position{line: 1243, col: 7, offset: 48832},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1243, col: 7, offset: 48832},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1243, col: 13, offset: 48838},
																											run: (*parser).callonOrderedListItem399,
																											expr: &litMatcher{
																												pos:        position{line: 1243, col: 13, offset: 48838},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 271, col: 30, offset: 9612},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&stateCodeExpr{
																		pos: position{line: 275, col: 1, offset: 9688},
																		run: (*parser).callonOrderedListItem402,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 205, col: 30, offset: 7283},
															run: (*parser).callonOrderedListItem403,
															expr: &seqExpr{
																pos: position{line: 205, col: 30, offset: 7283},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 205, col: 30, offset: 7283},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 205, col: 34, offset: 7287},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 564, col: 19, offset: 20877},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 564, col: 19, offset: 20877},
																					run: (*parser).callonOrderedListItem408,
																					expr: &litMatcher{
																						pos:        position{line: 564, col: 19, offset: 20877},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 566, col: 9, offset: 20923},
																					run: (*parser).callonOrderedListItem410,
																					expr: &litMatcher{
																						pos:        position{line: 566, col: 9, offset: 20923},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 568, col: 9, offset: 20971},
																					run: (*parser).callonOrderedListItem412,
																					expr: &litMatcher{
																						pos:        position{line: 568, col: 9, offset: 20971},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 570, col: 9, offset: 21029},
																					run: (*parser).callonOrderedListItem414,
																					expr: &litMatcher{
																						pos:        position{line: 570, col: 9, offset: 21029},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 572, col: 9, offset: 21083},
																					run: (*parser).callonOrderedListItem416,
																					expr: &litMatcher{
																						pos:        position{line: 572, col: 9, offset: 21083},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 205, col: 53, offset: 7306},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 243, col: 21, offset: 8543},
															run: (*parser).callonOrderedListItem419,
															expr: &litMatcher{
																pos:        position{line: 243, col: 21, offset: 8543},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 221, col: 19, offset: 7839},
															run: (*parser).callonOrderedListItem421,
															expr: &seqExpr{
																pos: position{line: 221, col: 19, offset: 7839},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 221, col: 19, offset: 7839},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 221, col: 23, offset: 7843},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonOrderedListItem427,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 221, col: 27, offset: 7847},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 221, col: 38, offset: 7858},
																			expr: &choiceExpr{
																				pos: position{line: 225, col: 21, offset: 7971},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 225, col: 21, offset: 7971},
																						run: (*parser).callonOrderedListItem432,
																						expr: &seqExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 225, col: 21, offset: 7971},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										run: (*parser).callonOrderedListItem435,
																										expr: &seqExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9116},
																														run: (*parser).callonOrderedListItem438,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9116},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 28, offset: 8242},
																													expr: &actionExpr{
																														pos: position{line: 282, col: 14, offset: 9780},
																														run: (*parser).callonOrderedListItem441,
																														expr: &litMatcher{
																															pos:        position{line: 282, col: 14, offset: 9780},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 39, offset: 8253},
																													expr: &actionExpr{
																														pos: position{line: 1170, col: 16, offset: 47067},
																														run: (*parser).callonOrderedListItem444,
																														expr: &litMatcher{
																															pos:        position{line: 1170, col: 16, offset: 47067},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 231, col: 52, offset: 8266},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 231, col: 56, offset: 8270},
																														expr: &choiceExpr{
																															pos: position{line: 231, col: 57, offset: 8271},
																															alternatives: []interface{}{
																																&actionExpr{
																																	pos: position{line: 1205, col: 14, offset: 47940},
																																	run: (*parser).callonOrderedListItem449,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		expr: &charClassMatcher{
																																			pos:        position{line: 1205, col: 14, offset: 47940},
																																			val:        "[a-zA-Z0-9]",
																																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 1215, col: 11, offset: 48287},
																																	run: (*parser).callonOrderedListItem452,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		expr: &choiceExpr{
																																			pos: position{line: 1243, col: 7, offset: 48832},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1243, col: 7, offset: 48832},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 1243, col: 13, offset: 48838},
																																					run: (*parser).callonOrderedListItem456,
																																					expr: &litMatcher{
																																						pos:        position{line: 1243, col: 13, offset: 48838},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 231, col: 78, offset: 8292},
																																	run: (*parser).callonOrderedListItem458,
																																	expr: &seqExpr{
																																		pos: position{line: 231, col: 79, offset: 8293},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 231, col: 79, offset: 8293},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 80, offset: 8294},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 84, offset: 8298},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 85, offset: 8299},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 89, offset: 8303},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 90, offset: 8304},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 231, col: 95, offset: 8309,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 225, col: 40, offset: 7990},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 225, col: 44, offset: 7994},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 237, col: 19, offset: 8403},
																										run: (*parser).callonOrderedListItem469,
																										expr: &labeledExpr{
																											pos:   position{line: 237, col: 19, offset: 8403},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 237, col: 25, offset: 8409},
																												expr: &choiceExpr{
																													pos: position{line: 237, col: 26, offset: 8410},
																													alternatives: []interface{}{
																														&actionExpr{
																															pos: position{line: 1205, col: 14, offset: 47940},
																															run: (*parser).callonOrderedListItem473,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1205, col: 14, offset: 47940},
																																expr: &charClassMatcher{
																																	pos:        position{line: 1205, col: 14, offset: 47940},
																																	val:        "[a-zA-Z0-9]",
																																	ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 1215, col: 11, offset: 48287},
																															run: (*parser).callonOrderedListItem476,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1215, col: 11, offset: 48287},
																																expr: &choiceExpr{
																																	pos: position{line: 1243, col: 7, offset: 48832},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1243, col: 7, offset: 48832},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 1243, col: 13, offset: 48838},
																																			run: (*parser).callonOrderedListItem480,
																																			expr: &litMatcher{
																																				pos:        position{line: 1243, col: 13, offset: 48838},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 237, col: 47, offset: 8431},
																															run: (*parser).callonOrderedListItem482,
																															expr: &seqExpr{
																																pos: position{line: 237, col: 48, offset: 8432},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 237, col: 48, offset: 8432},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 49, offset: 8433},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 237, col: 53, offset: 8437},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 54, offset: 8438},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 237, col: 58, offset: 8442},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 59, offset: 8443},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 237, col: 64, offset: 8448,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 225, col: 67, offset: 8017},
																									expr: &litMatcher{
																										pos:        position{line: 225, col: 67, offset: 8017},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 225, col: 72, offset: 8022},
																									expr: &choiceExpr{
																										pos: position{line: 1243, col: 7, offset: 48832},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1243, col: 7, offset: 48832},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1243, col: 13, offset: 48838},
																												run: (*parser).callonOrderedListItem496,
																												expr: &litMatcher{
																													pos:        position{line: 1243, col: 13, offset: 48838},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 227, col: 5, offset: 8106},
																						run: (*parser).callonOrderedListItem498,
																						expr: &seqExpr{
																							pos: position{line: 227, col: 5, offset: 8106},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 227, col: 5, offset: 8106},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										run: (*parser).callonOrderedListItem501,
																										expr: &seqExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9116},
																														run: (*parser).callonOrderedListItem504,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9116},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 28, offset: 8242},
																													expr: &actionExpr{
																														pos: position{line: 282, col: 14, offset: 9780},
																														run: (*parser).callonOrderedListItem507,
																														expr: &litMatcher{
																															pos:        position{line: 282, col: 14, offset: 9780},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 39, offset: 8253},
																													expr: &actionExpr{
																														pos: position{line: 1170, col: 16, offset: 47067},
																														run: (*parser).callonOrderedListItem510,
																														expr: &litMatcher{
																															pos:        position{line: 1170, col: 16, offset: 47067},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 231, col: 52, offset: 8266},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 231, col: 56, offset: 8270},
																														expr: &choiceExpr{
																															pos: position{line: 231, col: 57, offset: 8271},
																															alternatives: []interface{}{
																																&actionExpr{
																																	pos: position{line: 1205, col: 14, offset: 47940},
																																	run: (*parser).callonOrderedListItem515,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		expr: &charClassMatcher{
																																			pos:        position{line: 1205, col: 14, offset: 47940},
																																			val:        "[a-zA-Z0-9]",
																																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 1215, col: 11, offset: 48287},
																																	run: (*parser).callonOrderedListItem518,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		expr: &choiceExpr{
																																			pos: position{line: 1243, col: 7, offset: 48832},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1243, col: 7, offset: 48832},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 1243, col: 13, offset: 48838},
																																					run: (*parser).callonOrderedListItem522,
																																					expr: &litMatcher{
																																						pos:        position{line: 1243, col: 13, offset: 48838},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 231, col: 78, offset: 8292},
																																	run: (*parser).callonOrderedListItem524,
																																	expr: &seqExpr{
																																		pos: position{line: 231, col: 79, offset: 8293},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 231, col: 79, offset: 8293},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 80, offset: 8294},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 84, offset: 8298},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 85, offset: 8299},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 89, offset: 8303},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 90, offset: 8304},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 231, col: 95, offset: 8309,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 227, col: 24, offset: 8125},
																									expr: &litMatcher{
																										pos:        position{line: 227, col: 24, offset: 8125},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 227, col: 29, offset: 8130},
																									expr: &choiceExpr{
																										pos: position{line: 1243, col: 7, offset: 48832},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1243, col: 7, offset: 48832},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1243, col: 13, offset: 48838},
																												run: (*parser).callonOrderedListItem538,
																												expr: &litMatcher{
																													pos:        position{line: 1243, col: 13, offset: 48838},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 221, col: 59, offset: 7879},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 165, col: 170, offset: 6018},
												expr: &choiceExpr{
													pos: position{line: 1243, col: 7, offset: 48832},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1243, col: 7, offset: 48832},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1243, col: 13, offset: 48838},
															run: (*parser).callonOrderedListItem544,
															expr: &litMatcher{
																pos:        position{line: 1243, col: 13, offset: 48838},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1251, col: 8, offset: 48930},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1247, col: 12, offset: 48890},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1247, col: 21, offset: 48899},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1249, col: 8, offset: 48919},
														expr: &anyMatcher{
															line: 1249, col: 9, offset: 48920,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 465, col: 51, offset: 16290},
							label: "prefix",
							expr: &actionExpr{
								pos: position{line: 469, col: 26, offset: 16522},
								run: (*parser).callonOrderedListItem552,
								expr: &seqExpr{
									pos: position{line: 469, col: 26, offset: 16522},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 469, col: 26, offset: 16522},
											expr: &choiceExpr{
												pos: position{line: 1243, col: 7, offset: 48832},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1243, col: 7, offset: 48832},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1243, col: 13, offset: 48838},
														run: (*parser).callonOrderedListItem557,
														expr: &litMatcher{
															pos:        position{line: 1243, col: 13, offset: 48838},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 469, col: 30, offset: 16526},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 471, col: 5, offset: 16581},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 471, col: 5, offset: 16581},
														run: (*parser).callonOrderedListItem561,
														expr: &litMatcher{
															pos:        position{line: 471, col: 5, offset: 16581},
															val:        ".....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 473, col: 9, offset: 16694},
														run: (*parser).callonOrderedListItem563,
														expr: &litMatcher{
															pos:        position{line: 473, col: 9, offset: 16694},
															val:        "....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 475, col: 9, offset: 16805},
														run: (*parser).callonOrderedListItem565,
														expr: &litMatcher{
															pos:        position{line: 475, col: 9, offset: 16805},
															val:        "...",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 477, col: 9, offset: 16914},
														run: (*parser).callonOrderedListItem567,
														expr: &litMatcher{
															pos:        position{line: 477, col: 9, offset: 16914},
															val:        "..",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 479, col: 9, offset: 17021},
														run: (*parser).callonOrderedListItem569,
														expr: &litMatcher{
															pos:        position{line: 479, col: 9, offset: 17021},
															val:        ".",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 482, col: 9, offset: 17148},
														run: (*parser).callonOrderedListItem571,
														expr: &seqExpr{
															pos: position{line: 482, col: 9, offset: 17148},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 482, col: 9, offset: 17148},
																	expr: &charClassMatcher{
																		pos:        position{line: 482, col: 10, offset: 17149},
																		val:        "[0-9]",
																		ranges:     []rune{'0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 482, col: 18, offset: 17157},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 484, col: 9, offset: 17260},
														run: (*parser).callonOrderedListItem576,
														expr: &seqExpr{
															pos: position{line: 484, col: 9, offset: 17260},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 484, col: 10, offset: 17261},
																	val:        "[a-z]",
																	ranges:     []rune{'a', 'z'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&litMatcher{
																	pos:        position{line: 484, col: 17, offset: 17268},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 486, col: 9, offset: 17374},
														run: (*parser).callonOrderedListItem580,
														expr: &seqExpr{
															pos: position{line: 486, col: 9, offset: 17374},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 486, col: 10, offset: 17375},
																	val:        "[A-Z]",
																	ranges:     []rune{'A', 'Z'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&litMatcher{
																	pos:        position{line: 486, col: 17, offset: 17382},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 488, col: 9, offset: 17488},
														run: (*parser).callonOrderedListItem584,
														expr: &seqExpr{
															pos: position{line: 488, col: 9, offset: 17488},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 488, col: 9, offset: 17488},
																	expr: &charClassMatcher{
																		pos:        position{line: 488, col: 10, offset: 17489},
																		val:        "[a-z]",
																		ranges:     []rune{'a', 'z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 488, col: 18, offset: 17497},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 490, col: 9, offset: 17603},
														run: (*parser).callonOrderedListItem589,
														expr: &seqExpr{
															pos: position{line: 490, col: 9, offset: 17603},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 490, col: 9, offset: 17603},
																	expr: &charClassMatcher{
																		pos:        position{line: 490, col: 10, offset: 17604},
																		val:        "[A-Z]",
																		ranges:     []rune{'A', 'Z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 490, col: 18, offset: 17612},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 492, col: 8, offset: 17717},
											expr: &choiceExpr{
												pos: position{line: 1243, col: 7, offset: 48832},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1243, col: 7, offset: 48832},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1243, col: 13, offset: 48838},
														run: (*parser).callonOrderedListItem597,
														expr: &litMatcher{
															pos:        position{line: 1243, col: 13, offset: 48838},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 465, col: 82, offset: 16321},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 465, col: 91, offset: 16330},
								name: "OrderedListItemContent",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 465, col: 115, offset: 16354},
							expr: &actionExpr{
								pos: position{line: 1194, col: 14, offset: 47708},
								run: (*parser).callonOrderedListItem602,
								expr: &seqExpr{
									pos: position{line: 1194, col: 14, offset: 47708},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 1194, col: 14, offset: 47708},
											expr: &notExpr{
												pos: position{line: 1249, col: 8, offset: 48919},
												expr: &anyMatcher{
													line: 1249, col: 9, offset: 48920,
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 1194, col: 19, offset: 47713},
											expr: &choiceExpr{
												pos: position{line: 1243, col: 7, offset: 48832},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1243, col: 7, offset: 48832},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1243, col: 13, offset: 48838},
														run: (*parser).callonOrderedListItem610,
														expr: &litMatcher{
															pos:        position{line: 1243, col: 13, offset: 48838},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1251, col: 8, offset: 48930},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1247, col: 12, offset: 48890},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1247, col: 21, offset: 48899},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1249, col: 8, offset: 48919},
													expr: &anyMatcher{
														line: 1249, col: 9, offset: 48920,
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "OrderedListItemContent",
			pos:  position{line: 496, col: 1, offset: 17753},
			expr: &actionExpr{
				pos: position{line: 496, col: 27, offset: 17779},
				run: (*parser).callonOrderedListItemContent1,
				expr: &labeledExpr{
					pos:   position{line: 496, col: 27, offset: 17779},
					label: "elements",
					expr: &seqExpr{
						pos: position{line: 496, col: 37, offset: 17789},
						exprs: []interface{}{
							&oneOrMoreExpr{
								pos: position{line: 496, col: 37, offset: 17789},
								expr: &ruleRefExpr{
									pos:  position{line: 496, col: 37, offset: 17789},
									name: "ListParagraph",
								},
							},
							&zeroOrMoreExpr{
								pos: position{line: 496, col: 52, offset: 17804},
								expr: &ruleRefExpr{
									pos:  position{line: 496, col: 52, offset: 17804},
									name: "ContinuedDocumentElement",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "UnorderedListItem",
			pos:  position{line: 503, col: 1, offset: 18133},
			expr: &actionExpr{
				pos: position{line: 503, col: 22, offset: 18154},
				run: (*parser).callonUnorderedListItem1,
				expr: &seqExpr{
					pos: position{line: 503, col: 22, offset: 18154},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 503, col: 22, offset: 18154},
							label: "prefix",
							expr: &actionExpr{
								pos: position{line: 508, col: 5, offset: 18373},
								run: (*parser).callonUnorderedListItem4,
								expr: &seqExpr{
									pos: position{line: 508, col: 5, offset: 18373},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 508, col: 5, offset: 18373},
											expr: &choiceExpr{
												pos: position{line: 1243, col: 7, offset: 48832},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1243, col: 7, offset: 48832},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1243, col: 13, offset: 48838},
														run: (*parser).callonUnorderedListItem9,
														expr: &litMatcher{
															pos:        position{line: 1243, col: 13, offset: 48838},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 508, col: 9, offset: 18377},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 509, col: 9, offset: 18394},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 509, col: 9, offset: 18394},
														run: (*parser).callonUnorderedListItem13,
														expr: &litMatcher{
															pos:        position{line: 509, col: 9, offset: 18394},
															val:        "*****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 512, col: 11, offset: 18563},
														run: (*parser).callonUnorderedListItem15,
														expr: &litMatcher{
															pos:        position{line: 512, col: 11, offset: 18563},
															val:        "****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 515, col: 11, offset: 18732},
														run: (*parser).callonUnorderedListItem17,
														expr: &litMatcher{
															pos:        position{line: 515, col: 11, offset: 18732},
															val:        "***",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 518, col: 11, offset: 18901},
														run: (*parser).callonUnorderedListItem19,
														expr: &litMatcher{
															pos:        position{line: 518, col: 11, offset: 18901},
															val:        "**",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 521, col: 11, offset: 19067},
														run: (*parser).callonUnorderedListItem21,
														expr: &litMatcher{
															pos:        position{line: 521, col: 11, offset: 19067},
															val:        "*",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 524, col: 11, offset: 19231},
														run: (*parser).callonUnorderedListItem23,
														expr: &litMatcher{
															pos:        position{line: 524, col: 11, offset: 19231},
															val:        "-",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 526, col: 12, offset: 19378},
											expr: &choiceExpr{
												pos: position{line: 1243, col: 7, offset: 48832},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1243, col: 7, offset: 48832},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1243, col: 13, offset: 48838},
														run: (*parser).callonUnorderedListItem28,
														expr: &litMatcher{
															pos:        position{line: 1243, col: 13, offset: 48838},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 503, col: 55, offset: 18187},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 503, col: 64, offset: 18196},
								name: "UnorderedListItemContent",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 503, col: 90, offset: 18222},
							expr: &actionExpr{
								pos: position{line: 1194, col: 14, offset: 47708},
								run: (*parser).callonUnorderedListItem33,
								expr: &seqExpr{
									pos: position{line: 1194, col: 14, offset: 47708},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 1194, col: 14, offset: 47708},
											expr: &notExpr{
												pos: position{line: 1249, col: 8, offset: 48919},
												expr: &anyMatcher{
													line: 1249, col: 9, offset: 48920,
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 1194, col: 19, offset: 47713},
											expr: &choiceExpr{
												pos: position{line: 1243, col: 7, offset: 48832},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1243, col: 7, offset: 48832},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1243, col: 13, offset: 48838},
														run: (*parser).callonUnorderedListItem41,
														expr: &litMatcher{
															pos:        position{line: 1243, col: 13, offset: 48838},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1251, col: 8, offset: 48930},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1247, col: 12, offset: 48890},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1247, col: 21, offset: 48899},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1249, col: 8, offset: 48919},
													expr: &anyMatcher{
														line: 1249, col: 9, offset: 48920,
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "UnorderedListItemContent",
			pos:  position{line: 530, col: 1, offset: 19419},
			expr: &actionExpr{
				pos: position{line: 530, col: 29, offset: 19447},
				run: (*parser).callonUnorderedListItemContent1,
				expr: &labeledExpr{
					pos:   position{line: 530, col: 29, offset: 19447},
					label: "elements",
					expr: &seqExpr{
						pos: position{line: 530, col: 39, offset: 19457},
						exprs: []interface{}{
							&oneOrMoreExpr{
								pos: position{line: 530, col: 39, offset: 19457},
								expr: &ruleRefExpr{
									pos:  position{line: 530, col: 39, offset: 19457},
									name: "ListParagraph",
								},
							},
							&zeroOrMoreExpr{
								pos: position{line: 530, col: 54, offset: 19472},
								expr: &ruleRefExpr{
									pos:  position{line: 530, col: 54, offset: 19472},
									name: "ContinuedDocumentElement",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "LabeledListItem",
			pos:  position{line: 537, col: 1, offset: 19799},
			expr: &actionExpr{
				pos: position{line: 537, col: 20, offset: 19818},
				run: (*parser).callonLabeledListItem1,
				expr: &seqExpr{
					pos: position{line: 537, col: 20, offset: 19818},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 537, col: 20, offset: 19818},
							label: "term",
							expr: &actionExpr{
								pos: position{line: 541, col: 24, offset: 20060},
								run: (*parser).callonLabeledListItem4,
								expr: &zeroOrMoreExpr{
									pos: position{line: 541, col: 24, offset: 20060},
									expr: &choiceExpr{
										pos: position{line: 541, col: 25, offset: 20061},
										alternatives: []interface{}{
											&actionExpr{
												pos: position{line: 1205, col: 14, offset: 47940},
												run: (*parser).callonLabeledListItem7,
												expr: &oneOrMoreExpr{
													pos: position{line: 1205, col: 14, offset: 47940},
													expr: &charClassMatcher{
														pos:        position{line: 1205, col: 14, offset: 47940},
														val:        "[a-zA-Z0-9]",
														ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
														ignoreCase: false,
														inverted:   false,
													},
												},
											},
											&actionExpr{
												pos: position{line: 1215, col: 11, offset: 48287},
												run: (*parser).callonLabeledListItem10,
												expr: &oneOrMoreExpr{
													pos: position{line: 1215, col: 11, offset: 48287},
													expr: &choiceExpr{
														pos: position{line: 1243, col: 7, offset: 48832},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1243, col: 7, offset: 48832},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1243, col: 13, offset: 48838},
																run: (*parser).callonLabeledListItem14,
																expr: &litMatcher{
																	pos:        position{line: 1243, col: 13, offset: 48838},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
											&actionExpr{
												pos: position{line: 541, col: 46, offset: 20082},
												run: (*parser).callonLabeledListItem16,
												expr: &seqExpr{
													pos: position{line: 541, col: 47, offset: 20083},
													exprs: []interface{}{
														&notExpr{
															pos: position{line: 541, col: 47, offset: 20083},
															expr: &choiceExpr{
																pos: position{line: 1247, col: 12, offset: 48890},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1247, col: 12, offset: 48890},
																		val:        "\r\n",
																		ignoreCase: false,
																	},
																	&charClassMatcher{
																		pos:        position{line: 1247, col: 21, offset: 48899},
																		val:        "[\\r\\n]",
																		chars:      []rune{'\r', '\n'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
														&notExpr{
															pos: position{line: 541, col: 56, offset: 20092},
															expr: &litMatcher{
																pos:        position{line: 541, col: 57, offset: 20093},
																val:        "::",
																ignoreCase: false,
															},
														},
														&anyMatcher{
															line: 541, col: 63, offset: 20099,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 537, col: 47, offset: 19845},
							label: "separator",
							expr: &actionExpr{
								pos: position{line: 548, col: 29, offset: 20280},
								run: (*parser).callonLabeledListItem26,
								expr: &choiceExpr{
									pos: position{line: 548, col: 30, offset: 20281},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 548, col: 30, offset: 20281},
											val:        "::::",
											ignoreCase: false,
										},
										&litMatcher{
											pos:        position{line: 548, col: 39, offset: 20290},
											val:        ":::",
											ignoreCase: false,
										},
										&litMatcher{
											pos:        position{line: 548, col: 47, offset: 20298},
											val:        "::",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 537, col: 84, offset: 19882},
							label: "description",
							expr: &ruleRefExpr{
								pos:  position{line: 537, col: 97, offset: 19895},
								name: "LabeledListItemDescription",
							},
						},
					},
				},
			},
		},
		{
			name: "LabeledListItemDescription",
			pos:  position{line: 553, col: 1, offset: 20346},
			expr: &choiceExpr{
				pos: position{line: 554, col: 5, offset: 20381},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 554, col: 5, offset: 20381},
						run: (*parser).callonLabeledListItemDescription2,
						expr: &seqExpr{
							pos: position{line: 554, col: 5, offset: 20381},
							exprs: []interface{}{
								&oneOrMoreExpr{
									pos: position{line: 554, col: 5, offset: 20381},
									expr: &choiceExpr{
										pos: position{line: 554, col: 6, offset: 20382},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1243, col: 7, offset: 48832},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1243, col: 13, offset: 48838},
												run: (*parser).callonLabeledListItemDescription7,
												expr: &litMatcher{
													pos:        position{line: 1243, col: 13, offset: 48838},
													val:        "\t",
													ignoreCase: false,
												},
											},
											&litMatcher{
												pos:        position{line: 1247, col: 12, offset: 48890},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1247, col: 21, offset: 48899},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 554, col: 21, offset: 20397},
									label: "elements",
									expr: &zeroOrMoreExpr{
										pos: position{line: 554, col: 30, offset: 20406},
										expr: &choiceExpr{
											pos: position{line: 554, col: 31, offset: 20407},
											alternatives: []interface{}{
												&ruleRefExpr{
													pos:  position{line: 554, col: 31, offset: 20407},
													name: "ListParagraph",
												},
												&ruleRefExpr{
													pos:  position{line: 554, col: 47, offset: 20423},
													name: "ContinuedDocumentElement",
												},
											},
										},
									},
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 556, col: 9, offset: 20637},
						run: (*parser).callonLabeledListItemDescription16,
						expr: &seqExpr{
							pos: position{line: 556, col: 9, offset: 20637},
							exprs: []interface{}{
								&zeroOrMoreExpr{
									pos: position{line: 556, col: 9, offset: 20637},
									expr: &choiceExpr{
										pos: position{line: 1243, col: 7, offset: 48832},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1243, col: 7, offset: 48832},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1243, col: 13, offset: 48838},
												run: (*parser).callonLabeledListItemDescription21,
												expr: &litMatcher{
													pos:        position{line: 1243, col: 13, offset: 48838},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 1251, col: 8, offset: 48930},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 1247, col: 12, offset: 48890},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 1247, col: 21, offset: 48899},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
										&notExpr{
											pos: position{line: 1249, col: 8, offset: 48919},
											expr: &anyMatcher{
												line: 1249, col: 9, offset: 48920,
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Paragraph",
			pos:  position{line: 581, col: 1, offset: 21390},
			expr: &choiceExpr{
				pos: position{line: 583, col: 5, offset: 21437},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 583, col: 5, offset: 21437},
						run: (*parser).callonParagraph2,
						expr: &seqExpr{
							pos: position{line: 583, col: 5, offset: 21437},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 583, col: 5, offset: 21437},
									expr: &seqExpr{
										pos: position{line: 583, col: 7, offset: 21439},
										exprs: []interface{}{
											&oneOrMoreExpr{
												pos: position{line: 583, col: 7, offset: 21439},
												expr: &litMatcher{
													pos:        position{line: 583, col: 7, offset: 21439},
													val:        "=",
													ignoreCase: false,
												},
											},
											&oneOrMoreExpr{
												pos: position{line: 583, col: 12, offset: 21444},
												expr: &choiceExpr{
													pos: position{line: 1243, col: 7, offset: 48832},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1243, col: 7, offset: 48832},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1243, col: 13, offset: 48838},
															run: (*parser).callonParagraph11,
															expr: &litMatcher{
																pos:        position{line: 1243, col: 13, offset: 48838},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 583, col: 16, offset: 21448},
												expr: &choiceExpr{
													pos: position{line: 1247, col: 12, offset: 48890},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1247, col: 12, offset: 48890},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1247, col: 21, offset: 48899},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 583, col: 26, offset: 21458},
									label: "t",
									expr: &choiceExpr{
										pos: position{line: 564, col: 19, offset: 20877},
										alternatives: []interface{}{
											&actionExpr{
												pos: position{line: 564, col: 19, offset: 20877},
												run: (*parser).callonParagraph19,
												expr: &litMatcher{
													pos:        position{line: 564, col: 19, offset: 20877},
													val:        "TIP",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 566, col: 9, offset: 20923},
												run: (*parser).callonParagraph21,
												expr: &litMatcher{
													pos:        position{line: 566, col: 9, offset: 20923},
													val:        "NOTE",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 568, col: 9, offset: 20971},
												run: (*parser).callonParagraph23,
												expr: &litMatcher{
													pos:        position{line: 568, col: 9, offset: 20971},
													val:        "IMPORTANT",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 570, col: 9, offset: 21029},
												run: (*parser).callonParagraph25,
												expr: &litMatcher{
													pos:        position{line: 570, col: 9, offset: 21029},
													val:        "WARNING",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 572, col: 9, offset: 21083},
												run: (*parser).callonParagraph27,
												expr: &litMatcher{
													pos:        position{line: 572, col: 9, offset: 21083},
													val:        "CAUTION",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 583, col: 45, offset: 21477},
									val:        ": ",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 583, col: 50, offset: 21482},
									label: "lines",
									expr: &oneOrMoreExpr{
										pos: position{line: 583, col: 56, offset: 21488},
										expr: &ruleRefExpr{
											pos:  position{line: 583, col: 57, offset: 21489},
											name: "InlineElements",
										},
									},
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 587, col: 5, offset: 21669},
						run: (*parser).callonParagraph33,
						expr: &seqExpr{
							pos: position{line: 587, col: 5, offset: 21669},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 587, col: 5, offset: 21669},
									expr: &seqExpr{
										pos: position{line: 587, col: 7, offset: 21671},
										exprs: []interface{}{
											&oneOrMoreExpr{
												pos: position{line: 587, col: 7, offset: 21671},
												expr: &litMatcher{
													pos:        position{line: 587, col: 7, offset: 21671},
													val:        "=",
													ignoreCase: false,
												},
											},
											&oneOrMoreExpr{
												pos: position{line: 587, col: 12, offset: 21676},
												expr: &choiceExpr{
													pos: position{line: 1243, col: 7, offset: 48832},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1243, col: 7, offset: 48832},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1243, col: 13, offset: 48838},
															run: (*parser).callonParagraph42,
															expr: &litMatcher{
																pos:        position{line: 1243, col: 13, offset: 48838},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 587, col: 16, offset: 21680},
												expr: &choiceExpr{
													pos: position{line: 1247, col: 12, offset: 48890},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1247, col: 12, offset: 48890},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1247, col: 21, offset: 48899},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 587, col: 26, offset: 21690},
									label: "lines",
									expr: &oneOrMoreExpr{
										pos: position{line: 587, col: 32, offset: 21696},
										expr: &ruleRefExpr{
											pos:  position{line: 587, col: 33, offset: 21697},
											name: "InlineElements",
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "VerseParagraph",
			pos:  position{line: 591, col: 1, offset: 21778},
			expr: &actionExpr{
				pos: position{line: 592, col: 5, offset: 21801},
				run: (*parser).callonVerseParagraph1,
				expr: &seqExpr{
					pos: position{line: 592, col: 5, offset: 21801},
					exprs: []interface{}{
						&andCodeExpr{
							pos: position{line: 592, col: 5, offset: 21801},
							run: (*parser).callonVerseParagraph3,
						},
						&labeledExpr{
							pos:   position{line: 596, col: 5, offset: 21893},
							label: "verse",
							expr: &choiceExpr{
								pos: position{line: 598, col: 9, offset: 21942},
								alternatives: []interface{}{
									&actionExpr{
										pos: position{line: 598, col: 9, offset: 21942},
										run: (*parser).callonVerseParagraph6,
										expr: &seqExpr{
											pos: position{line: 598, col: 9, offset: 21942},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 598, col: 9, offset: 21942},
													expr: &seqExpr{
														pos: position{line: 598, col: 11, offset: 21944},
														exprs: []interface{}{
															&oneOrMoreExpr{
																pos: position{line: 598, col: 11, offset: 21944},
																expr: &litMatcher{
																	pos:        position{line: 598, col: 11, offset: 21944},
																	val:        "=",
																	ignoreCase: false,
																},
															},
															&oneOrMoreExpr{
																pos: position{line: 598, col: 16, offset: 21949},
																expr: &choiceExpr{
																	pos: position{line: 1243, col: 7, offset: 48832},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1243, col: 7, offset: 48832},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 1243, col: 13, offset: 48838},
																			run: (*parser).callonVerseParagraph15,
																			expr: &litMatcher{
																				pos:        position{line: 1243, col: 13, offset: 48838},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 598, col: 20, offset: 21953},
																expr: &choiceExpr{
																	pos: position{line: 1247, col: 12, offset: 48890},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1247, col: 12, offset: 48890},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1247, col: 21, offset: 48899},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 598, col: 30, offset: 21963},
													label: "t",
													expr: &choiceExpr{
														pos: position{line: 564, col: 19, offset: 20877},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 564, col: 19, offset: 20877},
																run: (*parser).callonVerseParagraph23,
																expr: &litMatcher{
																	pos:        position{line: 564, col: 19, offset: 20877},
																	val:        "TIP",
																	ignoreCase: false,
																},
															},
															&actionExpr{
																pos: position{line: 566, col: 9, offset: 20923},
																run: (*parser).callonVerseParagraph25,
																expr: &litMatcher{
																	pos:        position{line: 566, col: 9, offset: 20923},
																	val:        "NOTE",
																	ignoreCase: false,
																},
															},
															&actionExpr{
																pos: position{line: 568, col: 9, offset: 20971},
																run: (*parser).callonVerseParagraph27,
																expr: &litMatcher{
																	pos:        position{line: 568, col: 9, offset: 20971},
																	val:        "IMPORTANT",
																	ignoreCase: false,
																},
															},
															&actionExpr{
																pos: position{line: 570, col: 9, offset: 21029},
																run: (*parser).callonVerseParagraph29,
																expr: &litMatcher{
																	pos:        position{line: 570, col: 9, offset: 21029},
																	val:        "WARNING",
																	ignoreCase: false,
																},
															},
															&actionExpr{
																pos: position{line: 572, col: 9, offset: 21083},
																run: (*parser).callonVerseParagraph31,
																expr: &litMatcher{
																	pos:        position{line: 572, col: 9, offset: 21083},
																	val:        "CAUTION",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 598, col: 49, offset: 21982},
													val:        ": ",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 598, col: 54, offset: 21987},
													label: "lines",
													expr: &oneOrMoreExpr{
														pos: position{line: 598, col: 60, offset: 21993},
														expr: &ruleRefExpr{
															pos:  position{line: 598, col: 61, offset: 21994},
															name: "InlineElements",
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 602, col: 9, offset: 22190},
										run: (*parser).callonVerseParagraph37,
										expr: &seqExpr{
											pos: position{line: 602, col: 9, offset: 22190},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 602, col: 9, offset: 22190},
													expr: &seqExpr{
														pos: position{line: 602, col: 11, offset: 22192},
														exprs: []interface{}{
															&oneOrMoreExpr{
																pos: position{line: 602, col: 11, offset: 22192},
																expr: &litMatcher{
																	pos:        position{line: 602, col: 11, offset: 22192},
																	val:        "=",
																	ignoreCase: false,
																},
															},
															&oneOrMoreExpr{
																pos: position{line: 602, col: 16, offset: 22197},
																expr: &choiceExpr{
																	pos: position{line: 1243, col: 7, offset: 48832},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1243, col: 7, offset: 48832},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 1243, col: 13, offset: 48838},
																			run: (*parser).callonVerseParagraph46,
																			expr: &litMatcher{
																				pos:        position{line: 1243, col: 13, offset: 48838},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 602, col: 20, offset: 22201},
																expr: &choiceExpr{
																	pos: position{line: 1247, col: 12, offset: 48890},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1247, col: 12, offset: 48890},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1247, col: 21, offset: 48899},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 602, col: 30, offset: 22211},
													label: "lines",
													expr: &oneOrMoreExpr{
														pos: position{line: 602, col: 36, offset: 22217},
														expr: &ruleRefExpr{
															pos:  position{line: 602, col: 37, offset: 22218},
															name: "InlineElements",
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&stateCodeExpr{
							pos: position{line: 605, col: 7, offset: 22316},
							run: (*parser).callonVerseParagraph55,
						},
					},
				},
			},
		},
		{
			name: "InlineElements",
			pos:  position{line: 612, col: 1, offset: 22408},
			expr: &choiceExpr{
				pos: position{line: 613, col: 5, offset: 22431},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 613, col: 5, offset: 22431},
						run: (*parser).callonInlineElements2,
						expr: &labeledExpr{
							pos:   position{line: 613, col: 5, offset: 22431},
							label: "comment",
							expr: &actionExpr{
								pos: position{line: 1104, col: 22, offset: 44393},
								run: (*parser).callonInlineElements4,
								expr: &seqExpr{
									pos: position{line: 1104, col: 22, offset: 44393},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 1104, col: 22, offset: 44393},
											expr: &litMatcher{
												pos:        position{line: 1092, col: 26, offset: 43998},
												val:        "////",
												ignoreCase: false,
											},
										},
										&litMatcher{
											pos:        position{line: 1104, col: 45, offset: 44416},
											val:        "//",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 1104, col: 50, offset: 44421},
											label: "content",
											expr: &actionExpr{
												pos: position{line: 1108, col: 29, offset: 44549},
												run: (*parser).callonInlineElements10,
												expr: &zeroOrMoreExpr{
													pos: position{line: 1108, col: 29, offset: 44549},
													expr: &choiceExpr{
														pos: position{line: 1108, col: 30, offset: 44550},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 1205, col: 14, offset: 47940},
																run: (*parser).callonInlineElements13,
																expr: &oneOrMoreExpr{
																	pos: position{line: 1205, col: 14, offset: 47940},
																	expr: &charClassMatcher{
																		pos:        position{line: 1205, col: 14, offset: 47940},
																		val:        "[a-zA-Z0-9]",
																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
															&actionExpr{
																pos: position{line: 1215, col: 11, offset: 48287},
																run: (*parser).callonInlineElements16,
																expr: &oneOrMoreExpr{
																	pos: position{line: 1215, col: 11, offset: 48287},
																	expr: &choiceExpr{
																		pos: position{line: 1243, col: 7, offset: 48832},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1243, col: 7, offset: 48832},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1243, col: 13, offset: 48838},
																				run: (*parser).callonInlineElements20,
																				expr: &litMatcher{
																					pos:        position{line: 1243, col: 13, offset: 48838},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 1108, col: 51, offset: 44571},
																run: (*parser).callonInlineElements22,
																expr: &seqExpr{
																	pos: position{line: 1108, col: 52, offset: 44572},
																	exprs: []interface{}{
																		&notExpr{
																			pos: position{line: 1108, col: 52, offset: 44572},
																			expr: &choiceExpr{
																				pos: position{line: 1251, col: 8, offset: 48930},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1247, col: 12, offset: 48890},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 1247, col: 21, offset: 48899},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																					&notExpr{
																						pos: position{line: 1249, col: 8, offset: 48919},
																						expr: &anyMatcher{
																							line: 1249, col: 9, offset: 48920,
																						},
																					},
																				},
																			},
																		},
																		&anyMatcher{
																			line: 1108, col: 58, offset: 44578,
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1251, col: 8, offset: 48930},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1247, col: 12, offset: 48890},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1247, col: 21, offset: 48899},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1249, col: 8, offset: 48919},
													expr: &anyMatcher{
														line: 1249, col: 9, offset: 48920,
													},
												},
											},
										},
									},
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 615, col: 9, offset: 22532},
						run: (*parser).callonInlineElements36,
						expr: &seqExpr{
							pos: position{line: 615, col: 9, offset: 22532},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 615, col: 9, offset: 22532},
									expr: &actionExpr{
										pos: position{line: 1194, col: 14, offset: 47708},
										run: (*parser).callonInlineElements39,
										expr: &seqExpr{
											pos: position{line: 1194, col: 14, offset: 47708},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 1194, col: 14, offset: 47708},
													expr: &notExpr{
														pos: position{line: 1249, col: 8, offset: 48919},
														expr: &anyMatcher{
															line: 1249, col: 9, offset: 48920,
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 1194, col: 19, offset: 47713},
													expr: &choiceExpr{
														pos: position{line: 1243, col: 7, offset: 48832},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1243, col: 7, offset: 48832},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1243, col: 13, offset: 48838},
																run: (*parser).callonInlineElements47,
																expr: &litMatcher{
																	pos:        position{line: 1243, col: 13, offset: 48838},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1251, col: 8, offset: 48930},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1247, col: 12, offset: 48890},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1247, col: 21, offset: 48899},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1249, col: 8, offset: 48919},
															expr: &anyMatcher{
																line: 1249, col: 9, offset: 48920,
															},
														},
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 615, col: 20, offset: 22543},
									expr: &choiceExpr{
										pos: position{line: 936, col: 19, offset: 38153},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1120, col: 26, offset: 45059},
												val:        "....",
												ignoreCase: false,
											},
											&seqExpr{
												pos: position{line: 948, col: 25, offset: 38638},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 948, col: 25, offset: 38638},
														val:        "```",
														ignoreCase: false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 948, col: 31, offset: 38644},
														expr: &choiceExpr{
															pos: position{line: 1243, col: 7, offset: 48832},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1243, col: 7, offset: 48832},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1243, col: 13, offset: 48838},
																	run: (*parser).callonInlineElements62,
																	expr: &litMatcher{
																		pos:        position{line: 1243, col: 13, offset: 48838},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1251, col: 8, offset: 48930},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1247, col: 12, offset: 48890},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1247, col: 21, offset: 48899},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1249, col: 8, offset: 48919},
																expr: &anyMatcher{
																	line: 1249, col: 9, offset: 48920,
																},
															},
														},
													},
												},
											},
											&seqExpr{
												pos: position{line: 959, col: 26, offset: 39117},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 959, col: 26, offset: 39117},
														val:        "----",
														ignoreCase: false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 959, col: 33, offset: 39124},
														expr: &choiceExpr{
															pos: position{line: 1243, col: 7, offset: 48832},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1243, col: 7, offset: 48832},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1243, col: 13, offset: 48838},
																	run: (*parser).callonInlineElements74,
																	expr: &litMatcher{
																		pos:        position{line: 1243, col: 13, offset: 48838},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1251, col: 8, offset: 48930},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1247, col: 12, offset: 48890},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1247, col: 21, offset: 48899},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1249, col: 8, offset: 48919},
																expr: &anyMatcher{
																	line: 1249, col: 9, offset: 48920,
																},
															},
														},
													},
												},
											},
											&seqExpr{
												pos: position{line: 983, col: 26, offset: 40080},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 983, col: 26, offset: 40080},
														val:        "====",
														ignoreCase: false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 983, col: 33, offset: 40087},
														expr: &choiceExpr{
															pos: position{line: 1243, col: 7, offset: 48832},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1243, col: 7, offset: 48832},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1243, col: 13, offset: 48838},
																	run: (*parser).callonInlineElements86,
																	expr: &litMatcher{
																		pos:        position{line: 1243, col: 13, offset: 48838},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1251, col: 8, offset: 48930},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1247, col: 12, offset: 48890},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1247, col: 21, offset: 48899},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1249, col: 8, offset: 48919},
																expr: &anyMatcher{
																	line: 1249, col: 9, offset: 48920,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 1092, col: 26, offset: 43998},
												val:        "////",
												ignoreCase: false,
											},
											&seqExpr{
												pos: position{line: 1006, col: 24, offset: 40905},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 1006, col: 24, offset: 40905},
														val:        "____",
														ignoreCase: false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 1006, col: 31, offset: 40912},
														expr: &choiceExpr{
															pos: position{line: 1243, col: 7, offset: 48832},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1243, col: 7, offset: 48832},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1243, col: 13, offset: 48838},
																	run: (*parser).callonInlineElements99,
																	expr: &litMatcher{
																		pos:        position{line: 1243, col: 13, offset: 48838},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1251, col: 8, offset: 48930},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1247, col: 12, offset: 48890},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1247, col: 21, offset: 48899},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1249, col: 8, offset: 48919},
																expr: &anyMatcher{
																	line: 1249, col: 9, offset: 48920,
																},
															},
														},
													},
												},
											},
											&seqExpr{
												pos: position{line: 1050, col: 26, offset: 42506},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 1050, col: 26, offset: 42506},
														val:        "****",
														ignoreCase: false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 1050, col: 33, offset: 42513},
														expr: &choiceExpr{
															pos: position{line: 1243, col: 7, offset: 48832},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1243, col: 7, offset: 48832},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1243, col: 13, offset: 48838},
																	run: (*parser).callonInlineElements111,
																	expr: &litMatcher{
																		pos:        position{line: 1243, col: 13, offset: 48838},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1251, col: 8, offset: 48930},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1247, col: 12, offset: 48890},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1247, col: 21, offset: 48899},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1249, col: 8, offset: 48919},
																expr: &anyMatcher{
																	line: 1249, col: 9, offset: 48920,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 615, col: 36, offset: 22559},
									label: "elements",
									expr: &oneOrMoreExpr{
										pos: position{line: 615, col: 45, offset: 22568},
										expr: &ruleRefExpr{
											pos:  position{line: 615, col: 46, offset: 22569},
											name: "InlineElement",
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 615, col: 62, offset: 22585},
									label: "linebreak",
									expr: &zeroOrOneExpr{
										pos: position{line: 615, col: 72, offset: 22595},
										expr: &actionExpr{
											pos: position{line: 637, col: 14, offset: 23881},
											run: (*parser).callonInlineElements123,
											expr: &seqExpr{
												pos: position{line: 637, col: 14, offset: 23881},
												exprs: []interface{}{
													&choiceExpr{
														pos: position{line: 1243, col: 7, offset: 48832},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1243, col: 7, offset: 48832},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1243, col: 13, offset: 48838},
																run: (*parser).callonInlineElements127,
																expr: &litMatcher{
																	pos:        position{line: 1243, col: 13, offset: 48838},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
													&litMatcher{
														pos:        position{line: 637, col: 17, offset: 23884},
														val:        "+",
														ignoreCase: false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 637, col: 21, offset: 23888},
														expr: &choiceExpr{
															pos: position{line: 1243, col: 7, offset: 48832},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1243, col: 7, offset: 48832},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1243, col: 13, offset: 48838},
																	run: (*parser).callonInlineElements133,
																	expr: &litMatcher{
																		pos:        position{line: 1243, col: 13, offset: 48838},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1251, col: 8, offset: 48930},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1247, col: 12, offset: 48890},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1247, col: 21, offset: 48899},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1249, col: 8, offset: 48919},
																expr: &anyMatcher{
																	line: 1249, col: 9, offset: 48920,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&zeroOrOneExpr{
									pos: position{line: 615, col: 85, offset: 22608},
									expr: &choiceExpr{
										pos: position{line: 1251, col: 8, offset: 48930},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1247, col: 12, offset: 48890},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1247, col: 21, offset: 48899},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1249, col: 8, offset: 48919},
												expr: &anyMatcher{
													line: 1249, col: 9, offset: 48920,
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "InlineElement",
			pos:  position{line: 619, col: 1, offset: 22742},
			expr: &actionExpr{
				pos: position{line: 619, col: 18, offset: 22759},
				run: (*parser).callonInlineElement1,
				expr: &seqExpr{
					pos: position{line: 619, col: 18, offset: 22759},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 619, col: 18, offset: 22759},
							expr: &choiceExpr{
								pos: position{line: 1251, col: 8, offset: 48930},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1247, col: 12, offset: 48890},
										val:        "\r\n",
										ignoreCase: false,
									},
									&charClassMatcher{
										pos:        position{line: 1247, col: 21, offset: 48899},
										val:        "[\\r\\n]",
										chars:      []rune{'\r', '\n'},
										ignoreCase: false,
										inverted:   false,
									},
									&notExpr{
										pos: position{line: 1249, col: 8, offset: 48919},
										expr: &anyMatcher{
											line: 1249, col: 9, offset: 48920,
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 619, col: 23, offset: 22764},
							expr: &actionExpr{
								pos: position{line: 637, col: 14, offset: 23881},
								run: (*parser).callonInlineElement10,
								expr: &seqExpr{
									pos: position{line: 637, col: 14, offset: 23881},
									exprs: []interface{}{
										&choiceExpr{
											pos: position{line: 1243, col: 7, offset: 48832},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1243, col: 7, offset: 48832},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1243, col: 13, offset: 48838},
													run: (*parser).callonInlineElement14,
													expr: &litMatcher{
														pos:        position{line: 1243, col: 13, offset: 48838},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 637, col: 17, offset: 23884},
											val:        "+",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 637, col: 21, offset: 23888},
											expr: &choiceExpr{
												pos: position{line: 1243, col: 7, offset: 48832},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1243, col: 7, offset: 48832},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1243, col: 13, offset: 48838},
														run: (*parser).callonInlineElement20,
														expr: &litMatcher{
															pos:        position{line: 1243, col: 13, offset: 48838},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1251, col: 8, offset: 48930},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1247, col: 12, offset: 48890},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1247, col: 21, offset: 48899},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1249, col: 8, offset: 48919},
													expr: &anyMatcher{
														line: 1249, col: 9, offset: 48920,
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 619, col: 34, offset: 22775},
							label: "element",
							expr: &choiceExpr{
								pos: position{line: 619, col: 43, offset: 22784},
								alternatives: []interface{}{
									&actionExpr{
										pos: position{line: 875, col: 16, offset: 35530},
										run: (*parser).callonInlineElement29,
										expr: &seqExpr{
											pos: position{line: 875, col: 16, offset: 35530},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 875, col: 16, offset: 35530},
													val:        "image:",
													ignoreCase: false,
												},
												&notExpr{
													pos: position{line: 875, col: 25, offset: 35539},
													expr: &litMatcher{
														pos:        position{line: 875, col: 26, offset: 35540},
														val:        ":",
														ignoreCase: false,
													},
												},
												&labeledExpr{
													pos:   position{line: 875, col: 30, offset: 35544},
													label: "path",
													expr: &actionExpr{
														pos: position{line: 1219, col: 8, offset: 48334},
														run: (*parser).callonInlineElement35,
														expr: &oneOrMoreExpr{
															pos: position{line: 1219, col: 8, offset: 48334},
															expr: &choiceExpr{
																pos: position{line: 1219, col: 9, offset: 48335},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 1205, col: 14, offset: 47940},
																		run: (*parser).callonInlineElement38,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1205, col: 14, offset: 47940},
																			expr: &charClassMatcher{
																				pos:        position{line: 1205, col: 14, offset: 47940},
																				val:        "[a-zA-Z0-9]",
																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 1219, col: 21, offset: 48347},
																		run: (*parser).callonInlineElement41,
																		expr: &seqExpr{
																			pos: position{line: 1219, col: 22, offset: 48348},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 1219, col: 22, offset: 48348},
																					expr: &choiceExpr{
																						pos: position{line: 1247, col: 12, offset: 48890},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1247, col: 12, offset: 48890},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 1247, col: 21, offset: 48899},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1219, col: 31, offset: 48357},
																					expr: &choiceExpr{
																						pos: position{line: 1243, col: 7, offset: 48832},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1243, col: 7, offset: 48832},
																								val:        " ",
																								ignoreCase: false,
																							},
																							&actionExpr{
																								pos: position{line: 1243, col: 13, offset: 48838},
																								run: (*parser).callonInlineElement50,
																								expr: &litMatcher{
																									pos:        position{line: 1243, col: 13, offset: 48838},
																									val:        "\t",
																									ignoreCase: false,
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1219, col: 35, offset: 48361},
																					expr: &litMatcher{
																						pos:        position{line: 1219, col: 36, offset: 48362},
																						val:        "[",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1219, col: 40, offset: 48366},
																					expr: &litMatcher{
																						pos:        position{line: 1219, col: 41, offset: 48367},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 1219, col: 46, offset: 48372,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 875, col: 41, offset: 35555},
													label: "inlineAttributes",
													expr: &choiceExpr{
														pos: position{line: 880, col: 20, offset: 35812},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 880, col: 20, offset: 35812},
																run: (*parser).callonInlineElement59,
																expr: &seqExpr{
																	pos: position{line: 880, col: 20, offset: 35812},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 880, col: 20, offset: 35812},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 880, col: 24, offset: 35816},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 897, col: 19, offset: 36535},
																				run: (*parser).callonInlineElement63,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 897, col: 19, offset: 36535},
																					expr: &choiceExpr{
																						pos: position{line: 897, col: 20, offset: 36536},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								run: (*parser).callonInlineElement66,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1205, col: 14, offset: 47940},
																									expr: &charClassMatcher{
																										pos:        position{line: 1205, col: 14, offset: 47940},
																										val:        "[a-zA-Z0-9]",
																										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								run: (*parser).callonInlineElement69,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1215, col: 11, offset: 48287},
																									expr: &choiceExpr{
																										pos: position{line: 1243, col: 7, offset: 48832},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1243, col: 7, offset: 48832},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1243, col: 13, offset: 48838},
																												run: (*parser).callonInlineElement73,
																												expr: &litMatcher{
																													pos:        position{line: 1243, col: 13, offset: 48838},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 897, col: 41, offset: 36557},
																								run: (*parser).callonInlineElement75,
																								expr: &seqExpr{
																									pos: position{line: 897, col: 42, offset: 36558},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 897, col: 42, offset: 36558},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 43, offset: 36559},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 897, col: 47, offset: 36563},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 48, offset: 36564},
																												val:        "=",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 897, col: 52, offset: 36568},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 53, offset: 36569},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 897, col: 57, offset: 36573,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 880, col: 45, offset: 35837},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 881, col: 5, offset: 35845},
																			label: "width",
																			expr: &actionExpr{
																				pos: position{line: 897, col: 19, offset: 36535},
																				run: (*parser).callonInlineElement86,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 897, col: 19, offset: 36535},
																					expr: &choiceExpr{
																						pos: position{line: 897, col: 20, offset: 36536},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								run: (*parser).callonInlineElement89,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1205, col: 14, offset: 47940},
																									expr: &charClassMatcher{
																										pos:        position{line: 1205, col: 14, offset: 47940},
																										val:        "[a-zA-Z0-9]",
																										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								run: (*parser).callonInlineElement92,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1215, col: 11, offset: 48287},
																									expr: &choiceExpr{
																										pos: position{line: 1243, col: 7, offset: 48832},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1243, col: 7, offset: 48832},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1243, col: 13, offset: 48838},
																												run: (*parser).callonInlineElement96,
																												expr: &litMatcher{
																													pos:        position{line: 1243, col: 13, offset: 48838},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 897, col: 41, offset: 36557},
																								run: (*parser).callonInlineElement98,
																								expr: &seqExpr{
																									pos: position{line: 897, col: 42, offset: 36558},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 897, col: 42, offset: 36558},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 43, offset: 36559},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 897, col: 47, offset: 36563},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 48, offset: 36564},
																												val:        "=",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 897, col: 52, offset: 36568},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 53, offset: 36569},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 897, col: 57, offset: 36573,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 881, col: 29, offset: 35869},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 882, col: 5, offset: 35877},
																			label: "height",
																			expr: &actionExpr{
																				pos: position{line: 897, col: 19, offset: 36535},
																				run: (*parser).callonInlineElement109,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 897, col: 19, offset: 36535},
																					expr: &choiceExpr{
																						pos: position{line: 897, col: 20, offset: 36536},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								run: (*parser).callonInlineElement112,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1205, col: 14, offset: 47940},
																									expr: &charClassMatcher{
																										pos:        position{line: 1205, col: 14, offset: 47940},
																										val:        "[a-zA-Z0-9]",
																										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								run: (*parser).callonInlineElement115,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1215, col: 11, offset: 48287},
																									expr: &choiceExpr{
																										pos: position{line: 1243, col: 7, offset: 48832},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1243, col: 7, offset: 48832},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1243, col: 13, offset: 48838},
																												run: (*parser).callonInlineElement119,
																												expr: &litMatcher{
																													pos:        position{line: 1243, col: 13, offset: 48838},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 897, col: 41, offset: 36557},
																								run: (*parser).callonInlineElement121,
																								expr: &seqExpr{
																									pos: position{line: 897, col: 42, offset: 36558},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 897, col: 42, offset: 36558},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 43, offset: 36559},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 897, col: 47, offset: 36563},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 48, offset: 36564},
																												val:        "=",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 897, col: 52, offset: 36568},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 53, offset: 36569},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 897, col: 57, offset: 36573,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 882, col: 29, offset: 35901},
																			expr: &litMatcher{
																				pos:        position{line: 882, col: 29, offset: 35901},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 883, col: 5, offset: 35910},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 883, col: 16, offset: 35921},
																				expr: &choiceExpr{
																					pos: position{line: 225, col: 21, offset: 7971},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							run: (*parser).callonInlineElement135,
																							expr: &seqExpr{
																								pos: position{line: 225, col: 21, offset: 7971},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 225, col: 21, offset: 7971},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonInlineElement138,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonInlineElement141,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonInlineElement144,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1170, col: 16, offset: 47067},
																															run: (*parser).callonInlineElement147,
																															expr: &litMatcher{
																																pos:        position{line: 1170, col: 16, offset: 47067},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		run: (*parser).callonInlineElement152,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1205, col: 14, offset: 47940},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1205, col: 14, offset: 47940},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		run: (*parser).callonInlineElement155,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1215, col: 11, offset: 48287},
																																			expr: &choiceExpr{
																																				pos: position{line: 1243, col: 7, offset: 48832},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1243, col: 7, offset: 48832},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1243, col: 13, offset: 48838},
																																						run: (*parser).callonInlineElement159,
																																						expr: &litMatcher{
																																							pos:        position{line: 1243, col: 13, offset: 48838},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonInlineElement161,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 225, col: 40, offset: 7990},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 225, col: 44, offset: 7994},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 237, col: 19, offset: 8403},
																											run: (*parser).callonInlineElement172,
																											expr: &labeledExpr{
																												pos:   position{line: 237, col: 19, offset: 8403},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 237, col: 25, offset: 8409},
																													expr: &choiceExpr{
																														pos: position{line: 237, col: 26, offset: 8410},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1205, col: 14, offset: 47940},
																																run: (*parser).callonInlineElement176,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1205, col: 14, offset: 47940},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1205, col: 14, offset: 47940},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1215, col: 11, offset: 48287},
																																run: (*parser).callonInlineElement179,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1215, col: 11, offset: 48287},
																																	expr: &choiceExpr{
																																		pos: position{line: 1243, col: 7, offset: 48832},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1243, col: 7, offset: 48832},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1243, col: 13, offset: 48838},
																																				run: (*parser).callonInlineElement183,
																																				expr: &litMatcher{
																																					pos:        position{line: 1243, col: 13, offset: 48838},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 237, col: 47, offset: 8431},
																																run: (*parser).callonInlineElement185,
																																expr: &seqExpr{
																																	pos: position{line: 237, col: 48, offset: 8432},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 237, col: 48, offset: 8432},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 49, offset: 8433},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 53, offset: 8437},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 54, offset: 8438},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 58, offset: 8442},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 59, offset: 8443},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 237, col: 64, offset: 8448,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 225, col: 67, offset: 8017},
																										expr: &litMatcher{
																											pos:        position{line: 225, col: 67, offset: 8017},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 225, col: 72, offset: 8022},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonInlineElement199,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 227, col: 5, offset: 8106},
																							run: (*parser).callonInlineElement201,
																							expr: &seqExpr{
																								pos: position{line: 227, col: 5, offset: 8106},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 227, col: 5, offset: 8106},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonInlineElement204,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonInlineElement207,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonInlineElement210,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1170, col: 16, offset: 47067},
																															run: (*parser).callonInlineElement213,
																															expr: &litMatcher{
																																pos:        position{line: 1170, col: 16, offset: 47067},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		run: (*parser).callonInlineElement218,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1205, col: 14, offset: 47940},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1205, col: 14, offset: 47940},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		run: (*parser).callonInlineElement221,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1215, col: 11, offset: 48287},
																																			expr: &choiceExpr{
																																				pos: position{line: 1243, col: 7, offset: 48832},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1243, col: 7, offset: 48832},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1243, col: 13, offset: 48838},
																																						run: (*parser).callonInlineElement225,
																																						expr: &litMatcher{
																																							pos:        position{line: 1243, col: 13, offset: 48838},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonInlineElement227,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 227, col: 24, offset: 8125},
																										expr: &litMatcher{
																											pos:        position{line: 227, col: 24, offset: 8125},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 227, col: 29, offset: 8130},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonInlineElement241,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 883, col: 36, offset: 35941},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 885, col: 5, offset: 36039},
																run: (*parser).callonInlineElement244,
																expr: &seqExpr{
																	pos: position{line: 885, col: 5, offset: 36039},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 885, col: 5, offset: 36039},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 885, col: 9, offset: 36043},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 897, col: 19, offset: 36535},
																				run: (*parser).callonInlineElement248,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 897, col: 19, offset: 36535},
																					expr: &choiceExpr{
																						pos: position{line: 897, col: 20, offset: 36536},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								run: (*parser).callonInlineElement251,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1205, col: 14, offset: 47940},
																									expr: &charClassMatcher{
																										pos:        position{line: 1205, col: 14, offset: 47940},
																										val:        "[a-zA-Z0-9]",
																										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								run: (*parser).callonInlineElement254,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1215, col: 11, offset: 48287},
																									expr: &choiceExpr{
																										pos: position{line: 1243, col: 7, offset: 48832},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1243, col: 7, offset: 48832},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1243, col: 13, offset: 48838},
																												run: (*parser).callonInlineElement258,
																												expr: &litMatcher{
																													pos:        position{line: 1243, col: 13, offset: 48838},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 897, col: 41, offset: 36557},
																								run: (*parser).callonInlineElement260,
																								expr: &seqExpr{
																									pos: position{line: 897, col: 42, offset: 36558},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 897, col: 42, offset: 36558},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 43, offset: 36559},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 897, col: 47, offset: 36563},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 48, offset: 36564},
																												val:        "=",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 897, col: 52, offset: 36568},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 53, offset: 36569},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 897, col: 57, offset: 36573,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 885, col: 30, offset: 36064},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 886, col: 5, offset: 36072},
																			label: "width",
																			expr: &actionExpr{
																				pos: position{line: 897, col: 19, offset: 36535},
																				run: (*parser).callonInlineElement271,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 897, col: 19, offset: 36535},
																					expr: &choiceExpr{
																						pos: position{line: 897, col: 20, offset: 36536},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								run: (*parser).callonInlineElement274,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1205, col: 14, offset: 47940},
																									expr: &charClassMatcher{
																										pos:        position{line: 1205, col: 14, offset: 47940},
																										val:        "[a-zA-Z0-9]",
																										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								run: (*parser).callonInlineElement277,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1215, col: 11, offset: 48287},
																									expr: &choiceExpr{
																										pos: position{line: 1243, col: 7, offset: 48832},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1243, col: 7, offset: 48832},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1243, col: 13, offset: 48838},
																												run: (*parser).callonInlineElement281,
																												expr: &litMatcher{
																													pos:        position{line: 1243, col: 13, offset: 48838},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 897, col: 41, offset: 36557},
																								run: (*parser).callonInlineElement283,
																								expr: &seqExpr{
																									pos: position{line: 897, col: 42, offset: 36558},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 897, col: 42, offset: 36558},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 43, offset: 36559},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 897, col: 47, offset: 36563},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 48, offset: 36564},
																												val:        "=",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 897, col: 52, offset: 36568},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 53, offset: 36569},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 897, col: 57, offset: 36573,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 886, col: 28, offset: 36095},
																			expr: &litMatcher{
																				pos:        position{line: 886, col: 28, offset: 36095},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 887, col: 5, offset: 36104},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 887, col: 16, offset: 36115},
																				expr: &choiceExpr{
																					pos: position{line: 225, col: 21, offset: 7971},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							run: (*parser).callonInlineElement297,
																							expr: &seqExpr{
																								pos: position{line: 225, col: 21, offset: 7971},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 225, col: 21, offset: 7971},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonInlineElement300,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonInlineElement303,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonInlineElement306,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1170, col: 16, offset: 47067},
																															run: (*parser).callonInlineElement309,
																															expr: &litMatcher{
																																pos:        position{line: 1170, col: 16, offset: 47067},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		run: (*parser).callonInlineElement314,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1205, col: 14, offset: 47940},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1205, col: 14, offset: 47940},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		run: (*parser).callonInlineElement317,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1215, col: 11, offset: 48287},
																																			expr: &choiceExpr{
																																				pos: position{line: 1243, col: 7, offset: 48832},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1243, col: 7, offset: 48832},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1243, col: 13, offset: 48838},
																																						run: (*parser).callonInlineElement321,
																																						expr: &litMatcher{
																																							pos:        position{line: 1243, col: 13, offset: 48838},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonInlineElement323,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 225, col: 40, offset: 7990},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 225, col: 44, offset: 7994},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 237, col: 19, offset: 8403},
																											run: (*parser).callonInlineElement334,
																											expr: &labeledExpr{
																												pos:   position{line: 237, col: 19, offset: 8403},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 237, col: 25, offset: 8409},
																													expr: &choiceExpr{
																														pos: position{line: 237, col: 26, offset: 8410},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1205, col: 14, offset: 47940},
																																run: (*parser).callonInlineElement338,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1205, col: 14, offset: 47940},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1205, col: 14, offset: 47940},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1215, col: 11, offset: 48287},
																																run: (*parser).callonInlineElement341,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1215, col: 11, offset: 48287},
																																	expr: &choiceExpr{
																																		pos: position{line: 1243, col: 7, offset: 48832},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1243, col: 7, offset: 48832},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1243, col: 13, offset: 48838},
																																				run: (*parser).callonInlineElement345,
																																				expr: &litMatcher{
																																					pos:        position{line: 1243, col: 13, offset: 48838},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 237, col: 47, offset: 8431},
																																run: (*parser).callonInlineElement347,
																																expr: &seqExpr{
																																	pos: position{line: 237, col: 48, offset: 8432},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 237, col: 48, offset: 8432},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 49, offset: 8433},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 53, offset: 8437},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 54, offset: 8438},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 58, offset: 8442},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 59, offset: 8443},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 237, col: 64, offset: 8448,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 225, col: 67, offset: 8017},
																										expr: &litMatcher{
																											pos:        position{line: 225, col: 67, offset: 8017},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 225, col: 72, offset: 8022},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonInlineElement361,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 227, col: 5, offset: 8106},
																							run: (*parser).callonInlineElement363,
																							expr: &seqExpr{
																								pos: position{line: 227, col: 5, offset: 8106},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 227, col: 5, offset: 8106},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonInlineElement366,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonInlineElement369,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonInlineElement372,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1170, col: 16, offset: 47067},
																															run: (*parser).callonInlineElement375,
																															expr: &litMatcher{
																																pos:        position{line: 1170, col: 16, offset: 47067},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		run: (*parser).callonInlineElement380,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1205, col: 14, offset: 47940},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1205, col: 14, offset: 47940},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		run: (*parser).callonInlineElement383,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1215, col: 11, offset: 48287},
																																			expr: &choiceExpr{
																																				pos: position{line: 1243, col: 7, offset: 48832},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1243, col: 7, offset: 48832},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1243, col: 13, offset: 48838},
																																						run: (*parser).callonInlineElement387,
																																						expr: &litMatcher{
																																							pos:        position{line: 1243, col: 13, offset: 48838},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonInlineElement389,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 227, col: 24, offset: 8125},
																										expr: &litMatcher{
																											pos:        position{line: 227, col: 24, offset: 8125},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 227, col: 29, offset: 8130},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonInlineElement403,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 887, col: 36, offset: 36135},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 889, col: 5, offset: 36230},
																run: (*parser).callonInlineElement406,
																expr: &seqExpr{
																	pos: position{line: 889, col: 5, offset: 36230},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 889, col: 5, offset: 36230},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 889, col: 9, offset: 36234},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 897, col: 19, offset: 36535},
																				run: (*parser).callonInlineElement410,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 897, col: 19, offset: 36535},
																					expr: &choiceExpr{
																						pos: position{line: 897, col: 20, offset: 36536},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								run: (*parser).callonInlineElement413,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1205, col: 14, offset: 47940},
																									expr: &charClassMatcher{
																										pos:        position{line: 1205, col: 14, offset: 47940},
																										val:        "[a-zA-Z0-9]",
																										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								run: (*parser).callonInlineElement416,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1215, col: 11, offset: 48287},
																									expr: &choiceExpr{
																										pos: position{line: 1243, col: 7, offset: 48832},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1243, col: 7, offset: 48832},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1243, col: 13, offset: 48838},
																												run: (*parser).callonInlineElement420,
																												expr: &litMatcher{
																													pos:        position{line: 1243, col: 13, offset: 48838},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 897, col: 41, offset: 36557},
																								run: (*parser).callonInlineElement422,
																								expr: &seqExpr{
																									pos: position{line: 897, col: 42, offset: 36558},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 897, col: 42, offset: 36558},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 43, offset: 36559},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 897, col: 47, offset: 36563},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 48, offset: 36564},
																												val:        "=",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 897, col: 52, offset: 36568},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 53, offset: 36569},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 897, col: 57, offset: 36573,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 889, col: 30, offset: 36255},
																			expr: &litMatcher{
																				pos:        position{line: 889, col: 30, offset: 36255},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 890, col: 5, offset: 36264},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 890, col: 16, offset: 36275},
																				expr: &choiceExpr{
																					pos: position{line: 225, col: 21, offset: 7971},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							run: (*parser).callonInlineElement436,
																							expr: &seqExpr{
																								pos: position{line: 225, col: 21, offset: 7971},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 225, col: 21, offset: 7971},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonInlineElement439,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonInlineElement442,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonInlineElement445,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1170, col: 16, offset: 47067},
																															run: (*parser).callonInlineElement448,
																															expr: &litMatcher{
																																pos:        position{line: 1170, col: 16, offset: 47067},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		run: (*parser).callonInlineElement453,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1205, col: 14, offset: 47940},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1205, col: 14, offset: 47940},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		run: (*parser).callonInlineElement456,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1215, col: 11, offset: 48287},
																																			expr: &choiceExpr{
																																				pos: position{line: 1243, col: 7, offset: 48832},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1243, col: 7, offset: 48832},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1243, col: 13, offset: 48838},
																																						run: (*parser).callonInlineElement460,
																																						expr: &litMatcher{
																																							pos:        position{line: 1243, col: 13, offset: 48838},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonInlineElement462,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 225, col: 40, offset: 7990},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 225, col: 44, offset: 7994},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 237, col: 19, offset: 8403},
																											run: (*parser).callonInlineElement473,
																											expr: &labeledExpr{
																												pos:   position{line: 237, col: 19, offset: 8403},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 237, col: 25, offset: 8409},
																													expr: &choiceExpr{
																														pos: position{line: 237, col: 26, offset: 8410},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1205, col: 14, offset: 47940},
																																run: (*parser).callonInlineElement477,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1205, col: 14, offset: 47940},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1205, col: 14, offset: 47940},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1215, col: 11, offset: 48287},
																																run: (*parser).callonInlineElement480,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1215, col: 11, offset: 48287},
																																	expr: &choiceExpr{
																																		pos: position{line: 1243, col: 7, offset: 48832},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1243, col: 7, offset: 48832},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1243, col: 13, offset: 48838},
																																				run: (*parser).callonInlineElement484,
																																				expr: &litMatcher{
																																					pos:        position{line: 1243, col: 13, offset: 48838},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 237, col: 47, offset: 8431},
																																run: (*parser).callonInlineElement486,
																																expr: &seqExpr{
																																	pos: position{line: 237, col: 48, offset: 8432},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 237, col: 48, offset: 8432},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 49, offset: 8433},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 53, offset: 8437},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 54, offset: 8438},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 58, offset: 8442},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 59, offset: 8443},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 237, col: 64, offset: 8448,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 225, col: 67, offset: 8017},
																										expr: &litMatcher{
																											pos:        position{line: 225, col: 67, offset: 8017},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 225, col: 72, offset: 8022},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonInlineElement500,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 227, col: 5, offset: 8106},
																							run: (*parser).callonInlineElement502,
																							expr: &seqExpr{
																								pos: position{line: 227, col: 5, offset: 8106},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 227, col: 5, offset: 8106},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonInlineElement505,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonInlineElement508,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonInlineElement511,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1170, col: 16, offset: 47067},
																															run: (*parser).callonInlineElement514,
																															expr: &litMatcher{
																																pos:        position{line: 1170, col: 16, offset: 47067},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		run: (*parser).callonInlineElement519,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1205, col: 14, offset: 47940},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1205, col: 14, offset: 47940},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		run: (*parser).callonInlineElement522,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1215, col: 11, offset: 48287},
																																			expr: &choiceExpr{
																																				pos: position{line: 1243, col: 7, offset: 48832},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1243, col: 7, offset: 48832},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1243, col: 13, offset: 48838},
																																						run: (*parser).callonInlineElement526,
																																						expr: &litMatcher{
																																							pos:        position{line: 1243, col: 13, offset: 48838},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonInlineElement528,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 227, col: 24, offset: 8125},
																										expr: &litMatcher{
																											pos:        position{line: 227, col: 24, offset: 8125},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 227, col: 29, offset: 8130},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonInlineElement542,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 890, col: 36, offset: 36295},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 892, col: 5, offset: 36388},
																run: (*parser).callonInlineElement545,
																expr: &seqExpr{
																	pos: position{line: 892, col: 5, offset: 36388},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 892, col: 5, offset: 36388},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 892, col: 9, offset: 36392},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 892, col: 20, offset: 36403},
																				expr: &choiceExpr{
																					pos: position{line: 225, col: 21, offset: 7971},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							run: (*parser).callonInlineElement551,
																							expr: &seqExpr{
																								pos: position{line: 225, col: 21, offset: 7971},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 225, col: 21, offset: 7971},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonInlineElement554,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonInlineElement557,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonInlineElement560,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1170, col: 16, offset: 47067},
																															run: (*parser).callonInlineElement563,
																															expr: &litMatcher{
																																pos:        position{line: 1170, col: 16, offset: 47067},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		run: (*parser).callonInlineElement568,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1205, col: 14, offset: 47940},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1205, col: 14, offset: 47940},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		run: (*parser).callonInlineElement571,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1215, col: 11, offset: 48287},
																																			expr: &choiceExpr{
																																				pos: position{line: 1243, col: 7, offset: 48832},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1243, col: 7, offset: 48832},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1243, col: 13, offset: 48838},
																																						run: (*parser).callonInlineElement575,
																																						expr: &litMatcher{
																																							pos:        position{line: 1243, col: 13, offset: 48838},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonInlineElement577,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 225, col: 40, offset: 7990},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 225, col: 44, offset: 7994},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 237, col: 19, offset: 8403},
																											run: (*parser).callonInlineElement588,
																											expr: &labeledExpr{
																												pos:   position{line: 237, col: 19, offset: 8403},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 237, col: 25, offset: 8409},
																													expr: &choiceExpr{
																														pos: position{line: 237, col: 26, offset: 8410},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1205, col: 14, offset: 47940},
																																run: (*parser).callonInlineElement592,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1205, col: 14, offset: 47940},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1205, col: 14, offset: 47940},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1215, col: 11, offset: 48287},
																																run: (*parser).callonInlineElement595,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1215, col: 11, offset: 48287},
																																	expr: &choiceExpr{
																																		pos: position{line: 1243, col: 7, offset: 48832},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1243, col: 7, offset: 48832},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1243, col: 13, offset: 48838},
																																				run: (*parser).callonInlineElement599,
																																				expr: &litMatcher{
																																					pos:        position{line: 1243, col: 13, offset: 48838},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 237, col: 47, offset: 8431},
																																run: (*parser).callonInlineElement601,
																																expr: &seqExpr{
																																	pos: position{line: 237, col: 48, offset: 8432},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 237, col: 48, offset: 8432},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 49, offset: 8433},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 53, offset: 8437},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 54, offset: 8438},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 58, offset: 8442},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 59, offset: 8443},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 237, col: 64, offset: 8448,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 225, col: 67, offset: 8017},
																										expr: &litMatcher{
																											pos:        position{line: 225, col: 67, offset: 8017},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 225, col: 72, offset: 8022},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonInlineElement615,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 227, col: 5, offset: 8106},
																							run: (*parser).callonInlineElement617,
																							expr: &seqExpr{
																								pos: position{line: 227, col: 5, offset: 8106},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 227, col: 5, offset: 8106},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonInlineElement620,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonInlineElement623,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonInlineElement626,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1170, col: 16, offset: 47067},
																															run: (*parser).callonInlineElement629,
																															expr: &litMatcher{
																																pos:        position{line: 1170, col: 16, offset: 47067},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		run: (*parser).callonInlineElement634,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1205, col: 14, offset: 47940},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1205, col: 14, offset: 47940},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		run: (*parser).callonInlineElement637,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1215, col: 11, offset: 48287},
																																			expr: &choiceExpr{
																																				pos: position{line: 1243, col: 7, offset: 48832},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1243, col: 7, offset: 48832},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1243, col: 13, offset: 48838},
																																						run: (*parser).callonInlineElement641,
																																						expr: &litMatcher{
																																							pos:        position{line: 1243, col: 13, offset: 48838},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonInlineElement643,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 227, col: 24, offset: 8125},
																										expr: &litMatcher{
																											pos:        position{line: 227, col: 24, offset: 8125},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 227, col: 29, offset: 8130},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonInlineElement657,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 892, col: 40, offset: 36423},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 832, col: 9, offset: 34134},
										run: (*parser).callonInlineElement660,
										expr: &labeledExpr{
											pos:   position{line: 832, col: 9, offset: 34134},
											label: "link",
											expr: &choiceExpr{
												pos: position{line: 832, col: 15, offset: 34140},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 847, col: 17, offset: 34592},
														run: (*parser).callonInlineElement663,
														expr: &seqExpr{
															pos: position{line: 847, col: 17, offset: 34592},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 847, col: 17, offset: 34592},
																	val:        "link:",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 847, col: 25, offset: 34600},
																	label: "url",
																	expr: &actionExpr{
																		pos: position{line: 851, col: 20, offset: 34769},
																		run: (*parser).callonInlineElement667,
																		expr: &seqExpr{
																			pos: position{line: 851, col: 20, offset: 34769},
																			exprs: []interface{}{
																				&zeroOrOneExpr{
																					pos: position{line: 851, col: 20, offset: 34769},
																					expr: &choiceExpr{
																						pos: position{line: 1237, col: 15, offset: 48717},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1237, col: 15, offset: 48717},
																								val:        "http://",
																								ignoreCase: false,
																							},
																							&litMatcher{
																								pos:        position{line: 1237, col: 27, offset: 48729},
																								val:        "https://",
																								ignoreCase: false,
																							},
																							&litMatcher{
																								pos:        position{line: 1237, col: 40, offset: 48742},
																								val:        "ftp://",
																								ignoreCase: false,
																							},
																							&litMatcher{
																								pos:        position{line: 1237, col: 51, offset: 48753},
																								val:        "irc://",
																								ignoreCase: false,
																							},
																							&litMatcher{
																								pos:        position{line: 1237, col: 62, offset: 48764},
																								val:        "mailto:",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 1219, col: 8, offset: 48334},
																					run: (*parser).callonInlineElement676,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1219, col: 8, offset: 48334},
																						expr: &choiceExpr{
																							pos: position{line: 1219, col: 9, offset: 48335},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 1205, col: 14, offset: 47940},
																									run: (*parser).callonInlineElement679,
																									expr: &oneOrMoreExpr{
																										pos: position{line: 1205, col: 14, offset: 47940},
																										expr: &charClassMatcher{
																											pos:        position{line: 1205, col: 14, offset: 47940},
																											val:        "[a-zA-Z0-9]",
																											ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																											ignoreCase: false,
																											inverted:   false,
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 1219, col: 21, offset: 48347},
																									run: (*parser).callonInlineElement682,
																									expr: &seqExpr{
																										pos: position{line: 1219, col: 22, offset: 48348},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 1219, col: 22, offset: 48348},
																												expr: &choiceExpr{
																													pos: position{line: 1247, col: 12, offset: 48890},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1247, col: 12, offset: 48890},
																															val:        "\r\n",
																															ignoreCase: false,
																														},
																														&charClassMatcher{
																															pos:        position{line: 1247, col: 21, offset: 48899},
																															val:        "[\\r\\n]",
																															chars:      []rune{'\r', '\n'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 1219, col: 31, offset: 48357},
																												expr: &choiceExpr{
																													pos: position{line: 1243, col: 7, offset: 48832},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1243, col: 7, offset: 48832},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1243, col: 13, offset: 48838},
																															run: (*parser).callonInlineElement691,
																															expr: &litMatcher{
																																pos:        position{line: 1243, col: 13, offset: 48838},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 1219, col: 35, offset: 48361},
																												expr: &litMatcher{
																													pos:        position{line: 1219, col: 36, offset: 48362},
																													val:        "[",
																													ignoreCase: false,
																												},
																											},
																											&notExpr{
																												pos: position{line: 1219, col: 40, offset: 48366},
																												expr: &litMatcher{
																													pos:        position{line: 1219, col: 41, offset: 48367},
																													val:        "]",
																													ignoreCase: false,
																												},
																											},
																											&anyMatcher{
																												line: 1219, col: 46, offset: 48372,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 847, col: 47, offset: 34622},
																	label: "inlineAttributes",
																	expr: &choiceExpr{
																		pos: position{line: 855, col: 19, offset: 34839},
																		alternatives: []interface{}{
																			&actionExpr{
																				pos: position{line: 855, col: 19, offset: 34839},
																				run: (*parser).callonInlineElement700,
																				expr: &seqExpr{
																					pos: position{line: 855, col: 19, offset: 34839},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 855, col: 19, offset: 34839},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 855, col: 23, offset: 34843},
																							label: "text",
																							expr: &actionExpr{
																								pos: position{line: 862, col: 22, offset: 35131},
																								run: (*parser).callonInlineElement704,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 862, col: 22, offset: 35131},
																									expr: &choiceExpr{
																										pos: position{line: 862, col: 23, offset: 35132},
																										alternatives: []interface{}{
																											&actionExpr{
																												pos: position{line: 1205, col: 14, offset: 47940},
																												run: (*parser).callonInlineElement707,
																												expr: &oneOrMoreExpr{
																													pos: position{line: 1205, col: 14, offset: 47940},
																													expr: &charClassMatcher{
																														pos:        position{line: 1205, col: 14, offset: 47940},
																														val:        "[a-zA-Z0-9]",
																														ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																											&actionExpr{
																												pos: position{line: 1215, col: 11, offset: 48287},
																												run: (*parser).callonInlineElement710,
																												expr: &oneOrMoreExpr{
																													pos: position{line: 1215, col: 11, offset: 48287},
																													expr: &choiceExpr{
																														pos: position{line: 1243, col: 7, offset: 48832},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1243, col: 7, offset: 48832},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1243, col: 13, offset: 48838},
																																run: (*parser).callonInlineElement714,
																																expr: &litMatcher{
																																	pos:        position{line: 1243, col: 13, offset: 48838},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																											&actionExpr{
																												pos: position{line: 862, col: 44, offset: 35153},
																												run: (*parser).callonInlineElement716,
																												expr: &seqExpr{
																													pos: position{line: 862, col: 45, offset: 35154},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 862, col: 45, offset: 35154},
																															expr: &litMatcher{
																																pos:        position{line: 862, col: 46, offset: 35155},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 862, col: 50, offset: 35159},
																															expr: &litMatcher{
																																pos:        position{line: 862, col: 51, offset: 35160},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 862, col: 56, offset: 35165,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&labeledExpr{
																							pos:   position{line: 856, col: 9, offset: 34876},
																							label: "otherAttrs",
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 856, col: 20, offset: 34887},
																								expr: &choiceExpr{
																									pos: position{line: 225, col: 21, offset: 7971},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 225, col: 21, offset: 7971},
																											run: (*parser).callonInlineElement726,
																											expr: &seqExpr{
																												pos: position{line: 225, col: 21, offset: 7971},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 225, col: 21, offset: 7971},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 231, col: 17, offset: 8231},
																															run: (*parser).callonInlineElement729,
																															expr: &seqExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 231, col: 17, offset: 8231},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9116},
																																			run: (*parser).callonInlineElement732,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9116},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 28, offset: 8242},
																																		expr: &actionExpr{
																																			pos: position{line: 282, col: 14, offset: 9780},
																																			run: (*parser).callonInlineElement735,
																																			expr: &litMatcher{
																																				pos:        position{line: 282, col: 14, offset: 9780},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 39, offset: 8253},
																																		expr: &actionExpr{
																																			pos: position{line: 1170, col: 16, offset: 47067},
																																			run: (*parser).callonInlineElement738,
																																			expr: &litMatcher{
																																				pos:        position{line: 1170, col: 16, offset: 47067},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 231, col: 52, offset: 8266},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 231, col: 56, offset: 8270},
																																			expr: &choiceExpr{
																																				pos: position{line: 231, col: 57, offset: 8271},
																																				alternatives: []interface{}{
																																					&actionExpr{
																																						pos: position{line: 1205, col: 14, offset: 47940},
																																						run: (*parser).callonInlineElement743,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1205, col: 14, offset: 47940},
																																							expr: &charClassMatcher{
																																								pos:        position{line: 1205, col: 14, offset: 47940},
																																								val:        "[a-zA-Z0-9]",
																																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																								ignoreCase: false,
																																								inverted:   false,
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 1215, col: 11, offset: 48287},
																																						run: (*parser).callonInlineElement746,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1215, col: 11, offset: 48287},
																																							expr: &choiceExpr{
																																								pos: position{line: 1243, col: 7, offset: 48832},
																																								alternatives: []interface{}{
																																									&litMatcher{
																																										pos:        position{line: 1243, col: 7, offset: 48832},
																																										val:        " ",
																																										ignoreCase: false,
																																									},
																																									&actionExpr{
																																										pos: position{line: 1243, col: 13, offset: 48838},
																																										run: (*parser).callonInlineElement750,
																																										expr: &litMatcher{
																																											pos:        position{line: 1243, col: 13, offset: 48838},
																																											val:        "\t",
																																											ignoreCase: false,
																																										},
																																									},
																																								},
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 231, col: 78, offset: 8292},
																																						run: (*parser).callonInlineElement752,
																																						expr: &seqExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							exprs: []interface{}{
																																								&notExpr{
																																									pos: position{line: 231, col: 79, offset: 8293},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 80, offset: 8294},
																																										val:        "=",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 84, offset: 8298},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 85, offset: 8299},
																																										val:        ",",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 89, offset: 8303},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 90, offset: 8304},
																																										val:        "]",
																																										ignoreCase: false,
																																									},
																																								},
																																								&anyMatcher{
																																									line: 231, col: 95, offset: 8309,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&litMatcher{
																														pos:        position{line: 225, col: 40, offset: 7990},
																														val:        "=",
																														ignoreCase: false,
																													},
																													&labeledExpr{
																														pos:   position{line: 225, col: 44, offset: 7994},
																														label: "value",
																														expr: &actionExpr{
																															pos: position{line: 237, col: 19, offset: 8403},
																															run: (*parser).callonInlineElement763,
																															expr: &labeledExpr{
																																pos:   position{line: 237, col: 19, offset: 8403},
																																label: "value",
																																expr: &zeroOrMoreExpr{
																																	pos: position{line: 237, col: 25, offset: 8409},
																																	expr: &choiceExpr{
																																		pos: position{line: 237, col: 26, offset: 8410},
																																		alternatives: []interface{}{
																																			&actionExpr{
																																				pos: position{line: 1205, col: 14, offset: 47940},
																																				run: (*parser).callonInlineElement767,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1205, col: 14, offset: 47940},
																																					expr: &charClassMatcher{
																																						pos:        position{line: 1205, col: 14, offset: 47940},
																																						val:        "[a-zA-Z0-9]",
																																						ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																						ignoreCase: false,
																																						inverted:   false,
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 1215, col: 11, offset: 48287},
																																				run: (*parser).callonInlineElement770,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1215, col: 11, offset: 48287},
																																					expr: &choiceExpr{
																																						pos: position{line: 1243, col: 7, offset: 48832},
																																						alternatives: []interface{}{
																																							&litMatcher{
																																								pos:        position{line: 1243, col: 7, offset: 48832},
																																								val:        " ",
																																								ignoreCase: false,
																																							},
																																							&actionExpr{
																																								pos: position{line: 1243, col: 13, offset: 48838},
																																								run: (*parser).callonInlineElement774,
																																								expr: &litMatcher{
																																									pos:        position{line: 1243, col: 13, offset: 48838},
																																									val:        "\t",
																																									ignoreCase: false,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 237, col: 47, offset: 8431},
																																				run: (*parser).callonInlineElement776,
																																				expr: &seqExpr{
																																					pos: position{line: 237, col: 48, offset: 8432},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 237, col: 48, offset: 8432},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 49, offset: 8433},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 237, col: 53, offset: 8437},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 54, offset: 8438},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 237, col: 58, offset: 8442},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 59, offset: 8443},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 237, col: 64, offset: 8448,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 225, col: 67, offset: 8017},
																														expr: &litMatcher{
																															pos:        position{line: 225, col: 67, offset: 8017},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 225, col: 72, offset: 8022},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonInlineElement790,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 227, col: 5, offset: 8106},
																											run: (*parser).callonInlineElement792,
																											expr: &seqExpr{
																												pos: position{line: 227, col: 5, offset: 8106},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 227, col: 5, offset: 8106},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 231, col: 17, offset: 8231},
																															run: (*parser).callonInlineElement795,
																															expr: &seqExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 231, col: 17, offset: 8231},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9116},
																																			run: (*parser).callonInlineElement798,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9116},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 28, offset: 8242},
																																		expr: &actionExpr{
																																			pos: position{line: 282, col: 14, offset: 9780},
																																			run: (*parser).callonInlineElement801,
																																			expr: &litMatcher{
																																				pos:        position{line: 282, col: 14, offset: 9780},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 39, offset: 8253},
																																		expr: &actionExpr{
																																			pos: position{line: 1170, col: 16, offset: 47067},
																																			run: (*parser).callonInlineElement804,
																																			expr: &litMatcher{
																																				pos:        position{line: 1170, col: 16, offset: 47067},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 231, col: 52, offset: 8266},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 231, col: 56, offset: 8270},
																																			expr: &choiceExpr{
																																				pos: position{line: 231, col: 57, offset: 8271},
																																				alternatives: []interface{}{
																																					&actionExpr{
																																						pos: position{line: 1205, col: 14, offset: 47940},
																																						run: (*parser).callonInlineElement809,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1205, col: 14, offset: 47940},
																																							expr: &charClassMatcher{
																																								pos:        position{line: 1205, col: 14, offset: 47940},
																																								val:        "[a-zA-Z0-9]",
																																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																								ignoreCase: false,
																																								inverted:   false,
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 1215, col: 11, offset: 48287},
																																						run: (*parser).callonInlineElement812,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1215, col: 11, offset: 48287},
																																							expr: &choiceExpr{
																																								pos: position{line: 1243, col: 7, offset: 48832},
																																								alternatives: []interface{}{
																																									&litMatcher{
																																										pos:        position{line: 1243, col: 7, offset: 48832},
																																										val:        " ",
																																										ignoreCase: false,
																																									},
																																									&actionExpr{
																																										pos: position{line: 1243, col: 13, offset: 48838},
																																										run: (*parser).callonInlineElement816,
																																										expr: &litMatcher{
																																											pos:        position{line: 1243, col: 13, offset: 48838},
																																											val:        "\t",
																																											ignoreCase: false,
																																										},
																																									},
																																								},
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 231, col: 78, offset: 8292},
																																						run: (*parser).callonInlineElement818,
																																						expr: &seqExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							exprs: []interface{}{
																																								&notExpr{
																																									pos: position{line: 231, col: 79, offset: 8293},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 80, offset: 8294},
																																										val:        "=",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 84, offset: 8298},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 85, offset: 8299},
																																										val:        ",",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 89, offset: 8303},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 90, offset: 8304},
																																										val:        "]",
																																										ignoreCase: false,
																																									},
																																								},
																																								&anyMatcher{
																																									line: 231, col: 95, offset: 8309,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 227, col: 24, offset: 8125},
																														expr: &litMatcher{
																															pos:        position{line: 227, col: 24, offset: 8125},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 227, col: 29, offset: 8130},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonInlineElement832,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 856, col: 40, offset: 34907},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																			&actionExpr{
																				pos: position{line: 858, col: 5, offset: 34992},
																				run: (*parser).callonInlineElement835,
																				expr: &seqExpr{
																					pos: position{line: 858, col: 5, offset: 34992},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 858, col: 5, offset: 34992},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 858, col: 9, offset: 34996},
																							label: "otherAttrs",
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 858, col: 20, offset: 35007},
																								expr: &choiceExpr{
																									pos: position{line: 225, col: 21, offset: 7971},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 225, col: 21, offset: 7971},
																											run: (*parser).callonInlineElement841,
																											expr: &seqExpr{
																												pos: position{line: 225, col: 21, offset: 7971},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 225, col: 21, offset: 7971},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 231, col: 17, offset: 8231},
																															run: (*parser).callonInlineElement844,
																															expr: &seqExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 231, col: 17, offset: 8231},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9116},
																																			run: (*parser).callonInlineElement847,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9116},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 28, offset: 8242},
																																		expr: &actionExpr{
																																			pos: position{line: 282, col: 14, offset: 9780},
																																			run: (*parser).callonInlineElement850,
																																			expr: &litMatcher{
																																				pos:        position{line: 282, col: 14, offset: 9780},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 39, offset: 8253},
																																		expr: &actionExpr{
																																			pos: position{line: 1170, col: 16, offset: 47067},
																																			run: (*parser).callonInlineElement853,
																																			expr: &litMatcher{
																																				pos:        position{line: 1170, col: 16, offset: 47067},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 231, col: 52, offset: 8266},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 231, col: 56, offset: 8270},
																																			expr: &choiceExpr{
																																				pos: position{line: 231, col: 57, offset: 8271},
																																				alternatives: []interface{}{
																																					&actionExpr{
																																						pos: position{line: 1205, col: 14, offset: 47940},
																																						run: (*parser).callonInlineElement858,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1205, col: 14, offset: 47940},
																																							expr: &charClassMatcher{
																																								pos:        position{line: 1205, col: 14, offset: 47940},
																																								val:        "[a-zA-Z0-9]",
																																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																								ignoreCase: false,
																																								inverted:   false,
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 1215, col: 11, offset: 48287},
																																						run: (*parser).callonInlineElement861,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1215, col: 11, offset: 48287},
																																							expr: &choiceExpr{
																																								pos: position{line: 1243, col: 7, offset: 48832},
																																								alternatives: []interface{}{
																																									&litMatcher{
																																										pos:        position{line: 1243, col: 7, offset: 48832},
																																										val:        " ",
																																										ignoreCase: false,
																																									},
																																									&actionExpr{
																																										pos: position{line: 1243, col: 13, offset: 48838},
																																										run: (*parser).callonInlineElement865,
																																										expr: &litMatcher{
																																											pos:        position{line: 1243, col: 13, offset: 48838},
																																											val:        "\t",
																																											ignoreCase: false,
																																										},
																																									},
																																								},
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 231, col: 78, offset: 8292},
																																						run: (*parser).callonInlineElement867,
																																						expr: &seqExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							exprs: []interface{}{
																																								&notExpr{
																																									pos: position{line: 231, col: 79, offset: 8293},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 80, offset: 8294},
																																										val:        "=",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 84, offset: 8298},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 85, offset: 8299},
																																										val:        ",",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 89, offset: 8303},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 90, offset: 8304},
																																										val:        "]",
																																										ignoreCase: false,
																																									},
																																								},
																																								&anyMatcher{
																																									line: 231, col: 95, offset: 8309,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&litMatcher{
																														pos:        position{line: 225, col: 40, offset: 7990},
																														val:        "=",
																														ignoreCase: false,
																													},
																													&labeledExpr{
																														pos:   position{line: 225, col: 44, offset: 7994},
																														label: "value",
																														expr: &actionExpr{
																															pos: position{line: 237, col: 19, offset: 8403},
																															run: (*parser).callonInlineElement878,
																															expr: &labeledExpr{
																																pos:   position{line: 237, col: 19, offset: 8403},
																																label: "value",
																																expr: &zeroOrMoreExpr{
																																	pos: position{line: 237, col: 25, offset: 8409},
																																	expr: &choiceExpr{
																																		pos: position{line: 237, col: 26, offset: 8410},
																																		alternatives: []interface{}{
																																			&actionExpr{
																																				pos: position{line: 1205, col: 14, offset: 47940},
																																				run: (*parser).callonInlineElement882,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1205, col: 14, offset: 47940},
																																					expr: &charClassMatcher{
																																						pos:        position{line: 1205, col: 14, offset: 47940},
																																						val:        "[a-zA-Z0-9]",
																																						ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																						ignoreCase: false,
																																						inverted:   false,
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 1215, col: 11, offset: 48287},
																																				run: (*parser).callonInlineElement885,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1215, col: 11, offset: 48287},
																																					expr: &choiceExpr{
																																						pos: position{line: 1243, col: 7, offset: 48832},
																																						alternatives: []interface{}{
																																							&litMatcher{
																																								pos:        position{line: 1243, col: 7, offset: 48832},
																																								val:        " ",
																																								ignoreCase: false,
																																							},
																																							&actionExpr{
																																								pos: position{line: 1243, col: 13, offset: 48838},
																																								run: (*parser).callonInlineElement889,
																																								expr: &litMatcher{
																																									pos:        position{line: 1243, col: 13, offset: 48838},
																																									val:        "\t",
																																									ignoreCase: false,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 237, col: 47, offset: 8431},
																																				run: (*parser).callonInlineElement891,
																																				expr: &seqExpr{
																																					pos: position{line: 237, col: 48, offset: 8432},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 237, col: 48, offset: 8432},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 49, offset: 8433},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 237, col: 53, offset: 8437},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 54, offset: 8438},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 237, col: 58, offset: 8442},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 59, offset: 8443},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 237, col: 64, offset: 8448,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 225, col: 67, offset: 8017},
																														expr: &litMatcher{
																															pos:        position{line: 225, col: 67, offset: 8017},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 225, col: 72, offset: 8022},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonInlineElement905,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 227, col: 5, offset: 8106},
																											run: (*parser).callonInlineElement907,
																											expr: &seqExpr{
																												pos: position{line: 227, col: 5, offset: 8106},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 227, col: 5, offset: 8106},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 231, col: 17, offset: 8231},
																															run: (*parser).callonInlineElement910,
																															expr: &seqExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 231, col: 17, offset: 8231},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9116},
																																			run: (*parser).callonInlineElement913,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9116},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 28, offset: 8242},
																																		expr: &actionExpr{
																																			pos: position{line: 282, col: 14, offset: 9780},
																																			run: (*parser).callonInlineElement916,
																																			expr: &litMatcher{
																																				pos:        position{line: 282, col: 14, offset: 9780},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 39, offset: 8253},
																																		expr: &actionExpr{
																																			pos: position{line: 1170, col: 16, offset: 47067},
																																			run: (*parser).callonInlineElement919,
																																			expr: &litMatcher{
																																				pos:        position{line: 1170, col: 16, offset: 47067},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 231, col: 52, offset: 8266},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 231, col: 56, offset: 8270},
																																			expr: &choiceExpr{
																																				pos: position{line: 231, col: 57, offset: 8271},
																																				alternatives: []interface{}{
																																					&actionExpr{
																																						pos: position{line: 1205, col: 14, offset: 47940},
																																						run: (*parser).callonInlineElement924,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1205, col: 14, offset: 47940},
																																							expr: &charClassMatcher{
																																								pos:        position{line: 1205, col: 14, offset: 47940},
																																								val:        "[a-zA-Z0-9]",
																																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																								ignoreCase: false,
																																								inverted:   false,
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 1215, col: 11, offset: 48287},
																																						run: (*parser).callonInlineElement927,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1215, col: 11, offset: 48287},
																																							expr: &choiceExpr{
																																								pos: position{line: 1243, col: 7, offset: 48832},
																																								alternatives: []interface{}{
																																									&litMatcher{
																																										pos:        position{line: 1243, col: 7, offset: 48832},
																																										val:        " ",
																																										ignoreCase: false,
																																									},
																																									&actionExpr{
																																										pos: position{line: 1243, col: 13, offset: 48838},
																																										run: (*parser).callonInlineElement931,
																																										expr: &litMatcher{
																																											pos:        position{line: 1243, col: 13, offset: 48838},
																																											val:        "\t",
																																											ignoreCase: false,
																																										},
																																									},
																																								},
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 231, col: 78, offset: 8292},
																																						run: (*parser).callonInlineElement933,
																																						expr: &seqExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							exprs: []interface{}{
																																								&notExpr{
																																									pos: position{line: 231, col: 79, offset: 8293},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 80, offset: 8294},
																																										val:        "=",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 84, offset: 8298},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 85, offset: 8299},
																																										val:        ",",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 89, offset: 8303},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 90, offset: 8304},
																																										val:        "]",
																																										ignoreCase: false,
																																									},
																																								},
																																								&anyMatcher{
																																									line: 231, col: 95, offset: 8309,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 227, col: 24, offset: 8125},
																														expr: &litMatcher{
																															pos:        position{line: 227, col: 24, offset: 8125},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 227, col: 29, offset: 8130},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonInlineElement947,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 858, col: 40, offset: 35027},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 836, col: 17, offset: 34211},
														run: (*parser).callonInlineElement950,
														expr: &seqExpr{
															pos: position{line: 836, col: 17, offset: 34211},
															exprs: []interface{}{
																&labeledExpr{
																	pos:   position{line: 836, col: 17, offset: 34211},
																	label: "url",
																	expr: &actionExpr{
																		pos: position{line: 842, col: 20, offset: 34458},
																		run: (*parser).callonInlineElement953,
																		expr: &seqExpr{
																			pos: position{line: 842, col: 20, offset: 34458},
																			exprs: []interface{}{
																				&choiceExpr{
																					pos: position{line: 1237, col: 15, offset: 48717},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1237, col: 15, offset: 48717},
																							val:        "http://",
																							ignoreCase: false,
																						},
																						&litMatcher{
																							pos:        position{line: 1237, col: 27, offset: 48729},
																							val:        "https://",
																							ignoreCase: false,
																						},
																						&litMatcher{
																							pos:        position{line: 1237, col: 40, offset: 48742},
																							val:        "ftp://",
																							ignoreCase: false,
																						},
																						&litMatcher{
																							pos:        position{line: 1237, col: 51, offset: 48753},
																							val:        "irc://",
																							ignoreCase: false,
																						},
																						&litMatcher{
																							pos:        position{line: 1237, col: 62, offset: 48764},
																							val:        "mailto:",
																							ignoreCase: false,
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 1219, col: 8, offset: 48334},
																					run: (*parser).callonInlineElement961,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1219, col: 8, offset: 48334},
																						expr: &choiceExpr{
																							pos: position{line: 1219, col: 9, offset: 48335},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 1205, col: 14, offset: 47940},
																									run: (*parser).callonInlineElement964,
																									expr: &oneOrMoreExpr{
																										pos: position{line: 1205, col: 14, offset: 47940},
																										expr: &charClassMatcher{
																											pos:        position{line: 1205, col: 14, offset: 47940},
																											val:        "[a-zA-Z0-9]",
																											ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																											ignoreCase: false,
																											inverted:   false,
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 1219, col: 21, offset: 48347},
																									run: (*parser).callonInlineElement967,
																									expr: &seqExpr{
																										pos: position{line: 1219, col: 22, offset: 48348},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 1219, col: 22, offset: 48348},
																												expr: &choiceExpr{
																													pos: position{line: 1247, col: 12, offset: 48890},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1247, col: 12, offset: 48890},
																															val:        "\r\n",
																															ignoreCase: false,
																														},
																														&charClassMatcher{
																															pos:        position{line: 1247, col: 21, offset: 48899},
																															val:        "[\\r\\n]",
																															chars:      []rune{'\r', '\n'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 1219, col: 31, offset: 48357},
																												expr: &choiceExpr{
																													pos: position{line: 1243, col: 7, offset: 48832},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1243, col: 7, offset: 48832},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1243, col: 13, offset: 48838},
																															run: (*parser).callonInlineElement976,
																															expr: &litMatcher{
																																pos:        position{line: 1243, col: 13, offset: 48838},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 1219, col: 35, offset: 48361},
																												expr: &litMatcher{
																													pos:        position{line: 1219, col: 36, offset: 48362},
																													val:        "[",
																													ignoreCase: false,
																												},
																											},
																											&notExpr{
																												pos: position{line: 1219, col: 40, offset: 48366},
																												expr: &litMatcher{
																													pos:        position{line: 1219, col: 41, offset: 48367},
																													val:        "]",
																													ignoreCase: false,
																												},
																											},
																											&anyMatcher{
																												line: 1219, col: 46, offset: 48372,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 836, col: 39, offset: 34233},
																	label: "inlineAttributes",
																	expr: &choiceExpr{
																		pos: position{line: 855, col: 19, offset: 34839},
																		alternatives: []interface{}{
																			&actionExpr{
																				pos: position{line: 855, col: 19, offset: 34839},
																				run: (*parser).callonInlineElement985,
																				expr: &seqExpr{
																					pos: position{line: 855, col: 19, offset: 34839},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 855, col: 19, offset: 34839},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 855, col: 23, offset: 34843},
																							label: "text",
																							expr: &actionExpr{
																								pos: position{line: 862, col: 22, offset: 35131},
																								run: (*parser).callonInlineElement989,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 862, col: 22, offset: 35131},
																									expr: &choiceExpr{
																										pos: position{line: 862, col: 23, offset: 35132},
																										alternatives: []interface{}{
																											&actionExpr{
																												pos: position{line: 1205, col: 14, offset: 47940},
																												run: (*parser).callonInlineElement992,
																												expr: &oneOrMoreExpr{
																													pos: position{line: 1205, col: 14, offset: 47940},
																													expr: &charClassMatcher{
																														pos:        position{line: 1205, col: 14, offset: 47940},
																														val:        "[a-zA-Z0-9]",
																														ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																											&actionExpr{
																												pos: position{line: 1215, col: 11, offset: 48287},
																												run: (*parser).callonInlineElement995,
																												expr: &oneOrMoreExpr{
																													pos: position{line: 1215, col: 11, offset: 48287},
																													expr: &choiceExpr{
																														pos: position{line: 1243, col: 7, offset: 48832},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1243, col: 7, offset: 48832},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1243, col: 13, offset: 48838},
																																run: (*parser).callonInlineElement999,
																																expr: &litMatcher{
																																	pos:        position{line: 1243, col: 13, offset: 48838},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																											&actionExpr{
																												pos: position{line: 862, col: 44, offset: 35153},
																												run: (*parser).callonInlineElement1001,
																												expr: &seqExpr{
																													pos: position{line: 862, col: 45, offset: 35154},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 862, col: 45, offset: 35154},
																															expr: &litMatcher{
																																pos:        position{line: 862, col: 46, offset: 35155},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 862, col: 50, offset: 35159},
																															expr: &litMatcher{
																																pos:        position{line: 862, col: 51, offset: 35160},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 862, col: 56, offset: 35165,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&labeledExpr{
																							pos:   position{line: 856, col: 9, offset: 34876},
																							label: "otherAttrs",
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 856, col: 20, offset: 34887},
																								expr: &choiceExpr{
																									pos: position{line: 225, col: 21, offset: 7971},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 225, col: 21, offset: 7971},
																											run: (*parser).callonInlineElement1011,
																											expr: &seqExpr{
																												pos: position{line: 225, col: 21, offset: 7971},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 225, col: 21, offset: 7971},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 231, col: 17, offset: 8231},
																															run: (*parser).callonInlineElement1014,
																															expr: &seqExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 231, col: 17, offset: 8231},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9116},
																																			run: (*parser).callonInlineElement1017,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9116},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 28, offset: 8242},
																																		expr: &actionExpr{
																																			pos: position{line: 282, col: 14, offset: 9780},
																																			run: (*parser).callonInlineElement1020,
																																			expr: &litMatcher{
																																				pos:        position{line: 282, col: 14, offset: 9780},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 39, offset: 8253},
																																		expr: &actionExpr{
																																			pos: position{line: 1170, col: 16, offset: 47067},
																																			run: (*parser).callonInlineElement1023,
																																			expr: &litMatcher{
																																				pos:        position{line: 1170, col: 16, offset: 47067},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 231, col: 52, offset: 8266},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 231, col: 56, offset: 8270},
																																			expr: &choiceExpr{
																																				pos: position{line: 231, col: 57, offset: 8271},
																																				alternatives: []interface{}{
																																					&actionExpr{
																																						pos: position{line: 1205, col: 14, offset: 47940},
																																						run: (*parser).callonInlineElement1028,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1205, col: 14, offset: 47940},
																																							expr: &charClassMatcher{
																																								pos:        position{line: 1205, col: 14, offset: 47940},
																																								val:        "[a-zA-Z0-9]",
																																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																								ignoreCase: false,
																																								inverted:   false,
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 1215, col: 11, offset: 48287},
																																						run: (*parser).callonInlineElement1031,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1215, col: 11, offset: 48287},
																																							expr: &choiceExpr{
																																								pos: position{line: 1243, col: 7, offset: 48832},
																																								alternatives: []interface{}{
																																									&litMatcher{
																																										pos:        position{line: 1243, col: 7, offset: 48832},
																																										val:        " ",
																																										ignoreCase: false,
																																									},
																																									&actionExpr{
																																										pos: position{line: 1243, col: 13, offset: 48838},
																																										run: (*parser).callonInlineElement1035,
																																										expr: &litMatcher{
																																											pos:        position{line: 1243, col: 13, offset: 48838},
																																											val:        "\t",
																																											ignoreCase: false,
																																										},
																																									},
																																								},
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 231, col: 78, offset: 8292},
																																						run: (*parser).callonInlineElement1037,
																																						expr: &seqExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							exprs: []interface{}{
																																								&notExpr{
																																									pos: position{line: 231, col: 79, offset: 8293},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 80, offset: 8294},
																																										val:        "=",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 84, offset: 8298},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 85, offset: 8299},
																																										val:        ",",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 89, offset: 8303},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 90, offset: 8304},
																																										val:        "]",
																																										ignoreCase: false,
																																									},
																																								},
																																								&anyMatcher{
																																									line: 231, col: 95, offset: 8309,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&litMatcher{
																														pos:        position{line: 225, col: 40, offset: 7990},
																														val:        "=",
																														ignoreCase: false,
																													},
																													&labeledExpr{
																														pos:   position{line: 225, col: 44, offset: 7994},
																														label: "value",
																														expr: &actionExpr{
																															pos: position{line: 237, col: 19, offset: 8403},
																															run: (*parser).callonInlineElement1048,
																															expr: &labeledExpr{
																																pos:   position{line: 237, col: 19, offset: 8403},
																																label: "value",
																																expr: &zeroOrMoreExpr{
																																	pos: position{line: 237, col: 25, offset: 8409},
																																	expr: &choiceExpr{
																																		pos: position{line: 237, col: 26, offset: 8410},
																																		alternatives: []interface{}{
																																			&actionExpr{
																																				pos: position{line: 1205, col: 14, offset: 47940},
																																				run: (*parser).callonInlineElement1052,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1205, col: 14, offset: 47940},
																																					expr: &charClassMatcher{
																																						pos:        position{line: 1205, col: 14, offset: 47940},
																																						val:        "[a-zA-Z0-9]",
																																						ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																						ignoreCase: false,
																																						inverted:   false,
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 1215, col: 11, offset: 48287},
																																				run: (*parser).callonInlineElement1055,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1215, col: 11, offset: 48287},
																																					expr: &choiceExpr{
																																						pos: position{line: 1243, col: 7, offset: 48832},
																																						alternatives: []interface{}{
																																							&litMatcher{
																																								pos:        position{line: 1243, col: 7, offset: 48832},
																																								val:        " ",
																																								ignoreCase: false,
																																							},
																																							&actionExpr{
																																								pos: position{line: 1243, col: 13, offset: 48838},
																																								run: (*parser).callonInlineElement1059,
																																								expr: &litMatcher{
																																									pos:        position{line: 1243, col: 13, offset: 48838},
																																									val:        "\t",
																																									ignoreCase: false,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 237, col: 47, offset: 8431},
																																				run: (*parser).callonInlineElement1061,
																																				expr: &seqExpr{
																																					pos: position{line: 237, col: 48, offset: 8432},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 237, col: 48, offset: 8432},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 49, offset: 8433},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 237, col: 53, offset: 8437},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 54, offset: 8438},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 237, col: 58, offset: 8442},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 59, offset: 8443},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 237, col: 64, offset: 8448,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 225, col: 67, offset: 8017},
																														expr: &litMatcher{
																															pos:        position{line: 225, col: 67, offset: 8017},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 225, col: 72, offset: 8022},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonInlineElement1075,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 227, col: 5, offset: 8106},
																											run: (*parser).callonInlineElement1077,
																											expr: &seqExpr{
																												pos: position{line: 227, col: 5, offset: 8106},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 227, col: 5, offset: 8106},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 231, col: 17, offset: 8231},
																															run: (*parser).callonInlineElement1080,
																															expr: &seqExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 231, col: 17, offset: 8231},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9116},
																																			run: (*parser).callonInlineElement1083,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9116},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 28, offset: 8242},
																																		expr: &actionExpr{
																																			pos: position{line: 282, col: 14, offset: 9780},
																																			run: (*parser).callonInlineElement1086,
																																			expr: &litMatcher{
																																				pos:        position{line: 282, col: 14, offset: 9780},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 39, offset: 8253},
																																		expr: &actionExpr{
																																			pos: position{line: 1170, col: 16, offset: 47067},
																																			run: (*parser).callonInlineElement1089,
																																			expr: &litMatcher{
																																				pos:        position{line: 1170, col: 16, offset: 47067},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 231, col: 52, offset: 8266},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 231, col: 56, offset: 8270},
																																			expr: &choiceExpr{
																																				pos: position{line: 231, col: 57, offset: 8271},
																																				alternatives: []interface{}{
																																					&actionExpr{
																																						pos: position{line: 1205, col: 14, offset: 47940},
																																						run: (*parser).callonInlineElement1094,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1205, col: 14, offset: 47940},
																																							expr: &charClassMatcher{
																																								pos:        position{line: 1205, col: 14, offset: 47940},
																																								val:        "[a-zA-Z0-9]",
																																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																								ignoreCase: false,
																																								inverted:   false,
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 1215, col: 11, offset: 48287},
																																						run: (*parser).callonInlineElement1097,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1215, col: 11, offset: 48287},
																																							expr: &choiceExpr{
																																								pos: position{line: 1243, col: 7, offset: 48832},
																																								alternatives: []interface{}{
																																									&litMatcher{
																																										pos:        position{line: 1243, col: 7, offset: 48832},
																																										val:        " ",
																																										ignoreCase: false,
																																									},
																																									&actionExpr{
																																										pos: position{line: 1243, col: 13, offset: 48838},
																																										run: (*parser).callonInlineElement1101,
																																										expr: &litMatcher{
																																											pos:        position{line: 1243, col: 13, offset: 48838},
																																											val:        "\t",
																																											ignoreCase: false,
																																										},
																																									},
																																								},
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 231, col: 78, offset: 8292},
																																						run: (*parser).callonInlineElement1103,
																																						expr: &seqExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							exprs: []interface{}{
																																								&notExpr{
																																									pos: position{line: 231, col: 79, offset: 8293},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 80, offset: 8294},
																																										val:        "=",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 84, offset: 8298},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 85, offset: 8299},
																																										val:        ",",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 89, offset: 8303},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 90, offset: 8304},
																																										val:        "]",
																																										ignoreCase: false,
																																									},
																																								},
																																								&anyMatcher{
																																									line: 231, col: 95, offset: 8309,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 227, col: 24, offset: 8125},
																														expr: &litMatcher{
																															pos:        position{line: 227, col: 24, offset: 8125},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 227, col: 29, offset: 8130},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonInlineElement1117,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 856, col: 40, offset: 34907},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																			&actionExpr{
																				pos: position{line: 858, col: 5, offset: 34992},
																				run: (*parser).callonInlineElement1120,
																				expr: &seqExpr{
																					pos: position{line: 858, col: 5, offset: 34992},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 858, col: 5, offset: 34992},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 858, col: 9, offset: 34996},
																							label: "otherAttrs",
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 858, col: 20, offset: 35007},
																								expr: &choiceExpr{
																									pos: position{line: 225, col: 21, offset: 7971},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 225, col: 21, offset: 7971},
																											run: (*parser).callonInlineElement1126,
																											expr: &seqExpr{
																												pos: position{line: 225, col: 21, offset: 7971},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 225, col: 21, offset: 7971},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 231, col: 17, offset: 8231},
																															run: (*parser).callonInlineElement1129,
																															expr: &seqExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 231, col: 17, offset: 8231},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9116},
																																			run: (*parser).callonInlineElement1132,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9116},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 28, offset: 8242},
																																		expr: &actionExpr{
																																			pos: position{line: 282, col: 14, offset: 9780},
																																			run: (*parser).callonInlineElement1135,
																																			expr: &litMatcher{
																																				pos:        position{line: 282, col: 14, offset: 9780},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 39, offset: 8253},
																																		expr: &actionExpr{
																																			pos: position{line: 1170, col: 16, offset: 47067},
																																			run: (*parser).callonInlineElement1138,
																																			expr: &litMatcher{
																																				pos:        position{line: 1170, col: 16, offset: 47067},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 231, col: 52, offset: 8266},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 231, col: 56, offset: 8270},
																																			expr: &choiceExpr{
																																				pos: position{line: 231, col: 57, offset: 8271},
																																				alternatives: []interface{}{
																																					&actionExpr{
																																						pos: position{line: 1205, col: 14, offset: 47940},
																																						run: (*parser).callonInlineElement1143,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1205, col: 14, offset: 47940},
																																							expr: &charClassMatcher{
																																								pos:        position{line: 1205, col: 14, offset: 47940},
																																								val:        "[a-zA-Z0-9]",
																																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																								ignoreCase: false,
																																								inverted:   false,
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 1215, col: 11, offset: 48287},
																																						run: (*parser).callonInlineElement1146,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1215, col: 11, offset: 48287},
																																							expr: &choiceExpr{
																																								pos: position{line: 1243, col: 7, offset: 48832},
																																								alternatives: []interface{}{
																																									&litMatcher{
																																										pos:        position{line: 1243, col: 7, offset: 48832},
																																										val:        " ",
																																										ignoreCase: false,
																																									},
																																									&actionExpr{
																																										pos: position{line: 1243, col: 13, offset: 48838},
																																										run: (*parser).callonInlineElement1150,
																																										expr: &litMatcher{
																																											pos:        position{line: 1243, col: 13, offset: 48838},
																																											val:        "\t",
																																											ignoreCase: false,
																																										},
																																									},
																																								},
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 231, col: 78, offset: 8292},
																																						run: (*parser).callonInlineElement1152,
																																						expr: &seqExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							exprs: []interface{}{
																																								&notExpr{
																																									pos: position{line: 231, col: 79, offset: 8293},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 80, offset: 8294},
																																										val:        "=",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 84, offset: 8298},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 85, offset: 8299},
																																										val:        ",",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 89, offset: 8303},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 90, offset: 8304},
																																										val:        "]",
																																										ignoreCase: false,
																																									},
																																								},
																																								&anyMatcher{
																																									line: 231, col: 95, offset: 8309,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&litMatcher{
																														pos:        position{line: 225, col: 40, offset: 7990},
																														val:        "=",
																														ignoreCase: false,
																													},
																													&labeledExpr{
																														pos:   position{line: 225, col: 44, offset: 7994},
																														label: "value",
																														expr: &actionExpr{
																															pos: position{line: 237, col: 19, offset: 8403},
																															run: (*parser).callonInlineElement1163,
																															expr: &labeledExpr{
																																pos:   position{line: 237, col: 19, offset: 8403},
																																label: "value",
																																expr: &zeroOrMoreExpr{
																																	pos: position{line: 237, col: 25, offset: 8409},
																																	expr: &choiceExpr{
																																		pos: position{line: 237, col: 26, offset: 8410},
																																		alternatives: []interface{}{
																																			&actionExpr{
																																				pos: position{line: 1205, col: 14, offset: 47940},
																																				run: (*parser).callonInlineElement1167,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1205, col: 14, offset: 47940},
																																					expr: &charClassMatcher{
																																						pos:        position{line: 1205, col: 14, offset: 47940},
																																						val:        "[a-zA-Z0-9]",
																																						ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																						ignoreCase: false,
																																						inverted:   false,
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 1215, col: 11, offset: 48287},
																																				run: (*parser).callonInlineElement1170,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1215, col: 11, offset: 48287},
																																					expr: &choiceExpr{
																																						pos: position{line: 1243, col: 7, offset: 48832},
																																						alternatives: []interface{}{
																																							&litMatcher{
																																								pos:        position{line: 1243, col: 7, offset: 48832},
																																								val:        " ",
																																								ignoreCase: false,
																																							},
																																							&actionExpr{
																																								pos: position{line: 1243, col: 13, offset: 48838},
																																								run: (*parser).callonInlineElement1174,
																																								expr: &litMatcher{
																																									pos:        position{line: 1243, col: 13, offset: 48838},
																																									val:        "\t",
																																									ignoreCase: false,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 237, col: 47, offset: 8431},
																																				run: (*parser).callonInlineElement1176,
																																				expr: &seqExpr{
																																					pos: position{line: 237, col: 48, offset: 8432},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 237, col: 48, offset: 8432},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 49, offset: 8433},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 237, col: 53, offset: 8437},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 54, offset: 8438},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 237, col: 58, offset: 8442},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 59, offset: 8443},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 237, col: 64, offset: 8448,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 225, col: 67, offset: 8017},
																														expr: &litMatcher{
																															pos:        position{line: 225, col: 67, offset: 8017},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 225, col: 72, offset: 8022},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonInlineElement1190,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 227, col: 5, offset: 8106},
																											run: (*parser).callonInlineElement1192,
																											expr: &seqExpr{
																												pos: position{line: 227, col: 5, offset: 8106},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 227, col: 5, offset: 8106},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 231, col: 17, offset: 8231},
																															run: (*parser).callonInlineElement1195,
																															expr: &seqExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 231, col: 17, offset: 8231},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9116},
																																			run: (*parser).callonInlineElement1198,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9116},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 28, offset: 8242},
																																		expr: &actionExpr{
																																			pos: position{line: 282, col: 14, offset: 9780},
																																			run: (*parser).callonInlineElement1201,
																																			expr: &litMatcher{
																																				pos:        position{line: 282, col: 14, offset: 9780},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 39, offset: 8253},
																																		expr: &actionExpr{
																																			pos: position{line: 1170, col: 16, offset: 47067},
																																			run: (*parser).callonInlineElement1204,
																																			expr: &litMatcher{
																																				pos:        position{line: 1170, col: 16, offset: 47067},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 231, col: 52, offset: 8266},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 231, col: 56, offset: 8270},
																																			expr: &choiceExpr{
																																				pos: position{line: 231, col: 57, offset: 8271},
																																				alternatives: []interface{}{
																																					&actionExpr{
																																						pos: position{line: 1205, col: 14, offset: 47940},
																																						run: (*parser).callonInlineElement1209,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1205, col: 14, offset: 47940},
																																							expr: &charClassMatcher{
																																								pos:        position{line: 1205, col: 14, offset: 47940},
																																								val:        "[a-zA-Z0-9]",
																																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																								ignoreCase: false,
																																								inverted:   false,
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 1215, col: 11, offset: 48287},
																																						run: (*parser).callonInlineElement1212,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1215, col: 11, offset: 48287},
																																							expr: &choiceExpr{
																																								pos: position{line: 1243, col: 7, offset: 48832},
																																								alternatives: []interface{}{
																																									&litMatcher{
																																										pos:        position{line: 1243, col: 7, offset: 48832},
																																										val:        " ",
																																										ignoreCase: false,
																																									},
																																									&actionExpr{
																																										pos: position{line: 1243, col: 13, offset: 48838},
																																										run: (*parser).callonInlineElement1216,
																																										expr: &litMatcher{
																																											pos:        position{line: 1243, col: 13, offset: 48838},
																																											val:        "\t",
																																											ignoreCase: false,
																																										},
																																									},
																																								},
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 231, col: 78, offset: 8292},
																																						run: (*parser).callonInlineElement1218,
																																						expr: &seqExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							exprs: []interface{}{
																																								&notExpr{
																																									pos: position{line: 231, col: 79, offset: 8293},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 80, offset: 8294},
																																										val:        "=",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 84, offset: 8298},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 85, offset: 8299},
																																										val:        ",",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 89, offset: 8303},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 90, offset: 8304},
																																										val:        "]",
																																										ignoreCase: false,
																																									},
																																								},
																																								&anyMatcher{
																																									line: 231, col: 95, offset: 8309,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 227, col: 24, offset: 8125},
																														expr: &litMatcher{
																															pos:        position{line: 227, col: 24, offset: 8125},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 227, col: 29, offset: 8130},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonInlineElement1232,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 858, col: 40, offset: 35027},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 838, col: 5, offset: 34362},
														run: (*parser).callonInlineElement1235,
														expr: &labeledExpr{
															pos:   position{line: 838, col: 5, offset: 34362},
															label: "url",
															expr: &actionExpr{
																pos: position{line: 842, col: 20, offset: 34458},
																run: (*parser).callonInlineElement1237,
																expr: &seqExpr{
																	pos: position{line: 842, col: 20, offset: 34458},
																	exprs: []interface{}{
																		&choiceExpr{
																			pos: position{line: 1237, col: 15, offset: 48717},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1237, col: 15, offset: 48717},
																					val:        "http://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1237, col: 27, offset: 48729},
																					val:        "https://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1237, col: 40, offset: 48742},
																					val:        "ftp://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1237, col: 51, offset: 48753},
																					val:        "irc://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1237, col: 62, offset: 48764},
																					val:        "mailto:",
																					ignoreCase: false,
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 1219, col: 8, offset: 48334},
																			run: (*parser).callonInlineElement1245,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1219, col: 8, offset: 48334},
																				expr: &choiceExpr{
																					pos: position{line: 1219, col: 9, offset: 48335},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonInlineElement1248,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1219, col: 21, offset: 48347},
																							run: (*parser).callonInlineElement1251,
																							expr: &seqExpr{
																								pos: position{line: 1219, col: 22, offset: 48348},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1219, col: 22, offset: 48348},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1219, col: 31, offset: 48357},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonInlineElement1260,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1219, col: 35, offset: 48361},
																										expr: &litMatcher{
																											pos:        position{line: 1219, col: 36, offset: 48362},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1219, col: 40, offset: 48366},
																										expr: &litMatcher{
																											pos:        position{line: 1219, col: 41, offset: 48367},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1219, col: 46, offset: 48372,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 619, col: 64, offset: 22805},
										name: "Passthrough",
									},
									&ruleRefExpr{
										pos:  position{line: 619, col: 78, offset: 22819},
										name: "InlineFootnote",
									},
									&actionExpr{
										pos: position{line: 1205, col: 14, offset: 47940},
										run: (*parser).callonInlineElement1269,
										expr: &oneOrMoreExpr{
											pos: position{line: 1205, col: 14, offset: 47940},
											expr: &charClassMatcher{
												pos:        position{line: 1205, col: 14, offset: 47940},
												val:        "[a-zA-Z0-9]",
												ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
												ignoreCase: false,
												inverted:   false,
											},
										},
									},
									&oneOrMoreExpr{
										pos: position{line: 619, col: 107, offset: 22848},
										expr: &choiceExpr{
											pos: position{line: 1243, col: 7, offset: 48832},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1243, col: 7, offset: 48832},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1243, col: 13, offset: 48838},
													run: (*parser).callonInlineElement1275,
													expr: &litMatcher{
														pos:        position{line: 1243, col: 13, offset: 48838},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 619, col: 113, offset: 22854},
										name: "QuotedText",
									},
									&actionExpr{
										pos: position{line: 817, col: 19, offset: 33697},
										run: (*parser).callonInlineElement1278,
										expr: &seqExpr{
											pos: position{line: 817, col: 19, offset: 33697},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 817, col: 19, offset: 33697},
													val:        "<<",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 817, col: 24, offset: 33702},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 1225, col: 7, offset: 48453},
														run: (*parser).callonInlineElement1282,
														expr: &oneOrMoreExpr{
															pos: position{line: 1225, col: 7, offset: 48453},
															expr: &choiceExpr{
																pos: position{line: 1225, col: 8, offset: 48454},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 1205, col: 14, offset: 47940},
																		run: (*parser).callonInlineElement1285,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1205, col: 14, offset: 47940},
																			expr: &charClassMatcher{
																				pos:        position{line: 1205, col: 14, offset: 47940},
																				val:        "[a-zA-Z0-9]",
																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 1225, col: 20, offset: 48466},
																		run: (*parser).callonInlineElement1288,
																		expr: &seqExpr{
																			pos: position{line: 1225, col: 21, offset: 48467},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 1225, col: 21, offset: 48467},
																					expr: &choiceExpr{
																						pos: position{line: 1247, col: 12, offset: 48890},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1247, col: 12, offset: 48890},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 1247, col: 21, offset: 48899},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 30, offset: 48476},
																					expr: &choiceExpr{
																						pos: position{line: 1243, col: 7, offset: 48832},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1243, col: 7, offset: 48832},
																								val:        " ",
																								ignoreCase: false,
																							},
																							&actionExpr{
																								pos: position{line: 1243, col: 13, offset: 48838},
																								run: (*parser).callonInlineElement1297,
																								expr: &litMatcher{
																									pos:        position{line: 1243, col: 13, offset: 48838},
																									val:        "\t",
																									ignoreCase: false,
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 34, offset: 48480},
																					expr: &litMatcher{
																						pos:        position{line: 1225, col: 35, offset: 48481},
																						val:        "[",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 39, offset: 48485},
																					expr: &litMatcher{
																						pos:        position{line: 1225, col: 40, offset: 48486},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 44, offset: 48490},
																					expr: &litMatcher{
																						pos:        position{line: 1225, col: 45, offset: 48491},
																						val:        "<<",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 50, offset: 48496},
																					expr: &litMatcher{
																						pos:        position{line: 1225, col: 51, offset: 48497},
																						val:        ">>",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 56, offset: 48502},
																					expr: &litMatcher{
																						pos:        position{line: 1225, col: 57, offset: 48503},
																						val:        ",",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 1225, col: 62, offset: 48508,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 817, col: 32, offset: 33710},
													expr: &choiceExpr{
														pos: position{line: 1243, col: 7, offset: 48832},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1243, col: 7, offset: 48832},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1243, col: 13, offset: 48838},
																run: (*parser).callonInlineElement1313,
																expr: &litMatcher{
																	pos:        position{line: 1243, col: 13, offset: 48838},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 817, col: 36, offset: 33714},
													val:        ",",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 817, col: 40, offset: 33718},
													label: "label",
													expr: &actionExpr{
														pos: position{line: 823, col: 24, offset: 33920},
														run: (*parser).callonInlineElement1317,
														expr: &oneOrMoreExpr{
															pos: position{line: 823, col: 24, offset: 33920},
															expr: &choiceExpr{
																pos: position{line: 823, col: 25, offset: 33921},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 1205, col: 14, offset: 47940},
																		run: (*parser).callonInlineElement1320,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1205, col: 14, offset: 47940},
																			expr: &charClassMatcher{
																				pos:        position{line: 1205, col: 14, offset: 47940},
																				val:        "[a-zA-Z0-9]",
																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 1215, col: 11, offset: 48287},
																		run: (*parser).callonInlineElement1323,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1215, col: 11, offset: 48287},
																			expr: &choiceExpr{
																				pos: position{line: 1243, col: 7, offset: 48832},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1243, col: 7, offset: 48832},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1243, col: 13, offset: 48838},
																						run: (*parser).callonInlineElement1327,
																						expr: &litMatcher{
																							pos:        position{line: 1243, col: 13, offset: 48838},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 823, col: 46, offset: 33942},
																		run: (*parser).callonInlineElement1329,
																		expr: &seqExpr{
																			pos: position{line: 823, col: 47, offset: 33943},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 823, col: 47, offset: 33943},
																					expr: &litMatcher{
																						pos:        position{line: 823, col: 48, offset: 33944},
																						val:        ">>",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 823, col: 54, offset: 33950,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 817, col: 68, offset: 33746},
													val:        ">>",
													ignoreCase: false,
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 819, col: 5, offset: 33821},
										run: (*parser).callonInlineElement1335,
										expr: &seqExpr{
											pos: position{line: 819, col: 5, offset: 33821},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 819, col: 5, offset: 33821},
													val:        "<<",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 819, col: 10, offset: 33826},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 1225, col: 7, offset: 48453},
														run: (*parser).callonInlineElement1339,
														expr: &oneOrMoreExpr{
															pos: position{line: 1225, col: 7, offset: 48453},
															expr: &choiceExpr{
																pos: position{line: 1225, col: 8, offset: 48454},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 1205, col: 14, offset: 47940},
																		run: (*parser).callonInlineElement1342,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1205, col: 14, offset: 47940},
																			expr: &charClassMatcher{
																				pos:        position{line: 1205, col: 14, offset: 47940},
																				val:        "[a-zA-Z0-9]",
																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 1225, col: 20, offset: 48466},
																		run: (*parser).callonInlineElement1345,
																		expr: &seqExpr{
																			pos: position{line: 1225, col: 21, offset: 48467},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 1225, col: 21, offset: 48467},
																					expr: &choiceExpr{
																						pos: position{line: 1247, col: 12, offset: 48890},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1247, col: 12, offset: 48890},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 1247, col: 21, offset: 48899},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 30, offset: 48476},
																					expr: &choiceExpr{
																						pos: position{line: 1243, col: 7, offset: 48832},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1243, col: 7, offset: 48832},
																								val:        " ",
																								ignoreCase: false,
																							},
																							&actionExpr{
																								pos: position{line: 1243, col: 13, offset: 48838},
																								run: (*parser).callonInlineElement1354,
																								expr: &litMatcher{
																									pos:        position{line: 1243, col: 13, offset: 48838},
																									val:        "\t",
																									ignoreCase: false,
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 34, offset: 48480},
																					expr: &litMatcher{
																						pos:        position{line: 1225, col: 35, offset: 48481},
																						val:        "[",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 39, offset: 48485},
																					expr: &litMatcher{
																						pos:        position{line: 1225, col: 40, offset: 48486},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 44, offset: 48490},
																					expr: &litMatcher{
																						pos:        position{line: 1225, col: 45, offset: 48491},
																						val:        "<<",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 50, offset: 48496},
																					expr: &litMatcher{
																						pos:        position{line: 1225, col: 51, offset: 48497},
																						val:        ">>",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 56, offset: 48502},
																					expr: &litMatcher{
																						pos:        position{line: 1225, col: 57, offset: 48503},
																						val:        ",",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 1225, col: 62, offset: 48508,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 819, col: 18, offset: 33834},
													val:        ">>",
													ignoreCase: false,
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 120, col: 34, offset: 4391},
										run: (*parser).callonInlineElement1368,
										expr: &seqExpr{
											pos: position{line: 120, col: 34, offset: 4391},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 120, col: 34, offset: 4391},
													val:        "{",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 120, col: 38, offset: 4395},
													label: "name",
													expr: &actionExpr{
														pos: position{line: 127, col: 26, offset: 4690},
														run: (*parser).callonInlineElement1372,
														expr: &seqExpr{
															pos: position{line: 127, col: 26, offset: 4690},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 127, col: 27, offset: 4691},
																	val:        "[_A-Za-z0-9]",
																	chars:      []rune{'_'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 127, col: 56, offset: 4720},
																	expr: &charClassMatcher{
																		pos:        position{line: 127, col: 57, offset: 4721},
																		val:        "[-A-Za-z0-9]",
																		chars:      []rune{'-'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 120, col: 67, offset: 4424},
													val:        "}",
													ignoreCase: false,
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 180, col: 20, offset: 6467},
										run: (*parser).callonInlineElement1378,
										expr: &seqExpr{
											pos: position{line: 180, col: 20, offset: 6467},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 180, col: 20, offset: 6467},
													val:        "[[",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 180, col: 25, offset: 6472},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 1225, col: 7, offset: 48453},
														run: (*parser).callonInlineElement1382,
														expr: &oneOrMoreExpr{
															pos: position{line: 1225, col: 7, offset: 48453},
															expr: &choiceExpr{
																pos: position{line: 1225, col: 8, offset: 48454},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 1205, col: 14, offset: 47940},
																		run: (*parser).callonInlineElement1385,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1205, col: 14, offset: 47940},
																			expr: &charClassMatcher{
																				pos:        position{line: 1205, col: 14, offset: 47940},
																				val:        "[a-zA-Z0-9]",
																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 1225, col: 20, offset: 48466},
																		run: (*parser).callonInlineElement1388,
																		expr: &seqExpr{
																			pos: position{line: 1225, col: 21, offset: 48467},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 1225, col: 21, offset: 48467},
																					expr: &choiceExpr{
																						pos: position{line: 1247, col: 12, offset: 48890},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1247, col: 12, offset: 48890},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 1247, col: 21, offset: 48899},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 30, offset: 48476},
																					expr: &choiceExpr{
																						pos: position{line: 1243, col: 7, offset: 48832},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1243, col: 7, offset: 48832},
																								val:        " ",
																								ignoreCase: false,
																							},
																							&actionExpr{
																								pos: position{line: 1243, col: 13, offset: 48838},
																								run: (*parser).callonInlineElement1397,
																								expr: &litMatcher{
																									pos:        position{line: 1243, col: 13, offset: 48838},
																									val:        "\t",
																									ignoreCase: false,
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 34, offset: 48480},
																					expr: &litMatcher{
																						pos:        position{line: 1225, col: 35, offset: 48481},
																						val:        "[",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 39, offset: 48485},
																					expr: &litMatcher{
																						pos:        position{line: 1225, col: 40, offset: 48486},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 44, offset: 48490},
																					expr: &litMatcher{
																						pos:        position{line: 1225, col: 45, offset: 48491},
																						val:        "<<",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 50, offset: 48496},
																					expr: &litMatcher{
																						pos:        position{line: 1225, col: 51, offset: 48497},
																						val:        ">>",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 56, offset: 48502},
																					expr: &litMatcher{
																						pos:        position{line: 1225, col: 57, offset: 48503},
																						val:        ",",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 1225, col: 62, offset: 48508,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 180, col: 33, offset: 6480},
													val:        "]]",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 180, col: 38, offset: 6485},
													expr: &choiceExpr{
														pos: position{line: 1243, col: 7, offset: 48832},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1243, col: 7, offset: 48832},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1243, col: 13, offset: 48838},
																run: (*parser).callonInlineElement1414,
																expr: &litMatcher{
																	pos:        position{line: 1243, col: 13, offset: 48838},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
									&charClassMatcher{
										pos:        position{line: 1203, col: 16, offset: 47904},
										val:        "[()[]]",
										chars:      []rune{'(', ')', '[', ']'},
										ignoreCase: false,
										inverted:   false,
									},
									&actionExpr{
										pos: position{line: 637, col: 14, offset: 23881},
										run: (*parser).callonInlineElement1417,
										expr: &seqExpr{
											pos: position{line: 637, col: 14, offset: 23881},
											exprs: []interface{}{
												&choiceExpr{
													pos: position{line: 1243, col: 7, offset: 48832},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1243, col: 7, offset: 48832},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1243, col: 13, offset: 48838},
															run: (*parser).callonInlineElement1421,
															expr: &litMatcher{
																pos:        position{line: 1243, col: 13, offset: 48838},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 637, col: 17, offset: 23884},
													val:        "+",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 637, col: 21, offset: 23888},
													expr: &choiceExpr{
														pos: position{line: 1243, col: 7, offset: 48832},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1243, col: 7, offset: 48832},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1243, col: 13, offset: 48838},
																run: (*parser).callonInlineElement1427,
																expr: &litMatcher{
																	pos:        position{line: 1243, col: 13, offset: 48838},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1251, col: 8, offset: 48930},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1247, col: 12, offset: 48890},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1247, col: 21, offset: 48899},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1249, col: 8, offset: 48919},
															expr: &anyMatcher{
																line: 1249, col: 9, offset: 48920,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 1209, col: 9, offset: 47997},
										run: (*parser).callonInlineElement1434,
										expr: &choiceExpr{
											pos: position{line: 1209, col: 10, offset: 47998},
											alternatives: []interface{}{
												&actionExpr{
													pos: position{line: 1205, col: 14, offset: 47940},
													run: (*parser).callonInlineElement1436,
													expr: &oneOrMoreExpr{
														pos: position{line: 1205, col: 14, offset: 47940},
														expr: &charClassMatcher{
															pos:        position{line: 1205, col: 14, offset: 47940},
															val:        "[a-zA-Z0-9]",
															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
												&oneOrMoreExpr{
													pos: position{line: 1209, col: 22, offset: 48010},
													expr: &actionExpr{
														pos: position{line: 1209, col: 23, offset: 48011},
														run: (*parser).callonInlineElement1440,
														expr: &seqExpr{
															pos: position{line: 1209, col: 24, offset: 48012},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 1209, col: 24, offset: 48012},
																	expr: &choiceExpr{
																		pos: position{line: 1247, col: 12, offset: 48890},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1247, col: 12, offset: 48890},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1247, col: 21, offset: 48899},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1209, col: 33, offset: 48021},
																	expr: &choiceExpr{
																		pos: position{line: 1243, col: 7, offset: 48832},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1243, col: 7, offset: 48832},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1243, col: 13, offset: 48838},
																				run: (*parser).callonInlineElement1449,
																				expr: &litMatcher{
																					pos:        position{line: 1243, col: 13, offset: 48838},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1209, col: 37, offset: 48025},
																	expr: &charClassMatcher{
																		pos:        position{line: 1203, col: 16, offset: 47904},
																		val:        "[()[]]",
																		chars:      []rune{'(', ')', '[', ']'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&notExpr{
																	pos: position{line: 1209, col: 50, offset: 48038},
																	expr: &litMatcher{
																		pos:        position{line: 1209, col: 51, offset: 48039},
																		val:        ".",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1209, col: 55, offset: 48043},
																	expr: &choiceExpr{
																		pos: position{line: 656, col: 33, offset: 24662},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 656, col: 33, offset: 24662},
																				val:        "^",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 656, col: 39, offset: 24668},
																				run: (*parser).callonInlineElement1458,
																				expr: &litMatcher{
																					pos:        position{line: 656, col: 39, offset: 24668},
																					val:        "~",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&anyMatcher{
																	line: 1209, col: 86, offset: 48074,
																},
															},
														},
													},
												},
												&oneOrMoreExpr{
													pos: position{line: 1211, col: 7, offset: 48115},
													expr: &litMatcher{
														pos:        position{line: 1211, col: 7, offset: 48115},
														val:        ".",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "InlineElementsWithoutSubtitution",
			pos:  position{line: 626, col: 1, offset: 23215},
			expr: &actionExpr{
				pos: position{line: 626, col: 37, offset: 23251},
				run: (*parser).callonInlineElementsWithoutSubtitution1,
				expr: &seqExpr{
					pos: position{line: 626, col: 37, offset: 23251},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 626, col: 37, offset: 23251},
							expr: &actionExpr{
								pos: position{line: 1194, col: 14, offset: 47708},
								run: (*parser).callonInlineElementsWithoutSubtitution4,
								expr: &seqExpr{
									pos: position{line: 1194, col: 14, offset: 47708},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 1194, col: 14, offset: 47708},
											expr: &notExpr{
												pos: position{line: 1249, col: 8, offset: 48919},
												expr: &anyMatcher{
													line: 1249, col: 9, offset: 48920,
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 1194, col: 19, offset: 47713},
											expr: &choiceExpr{
												pos: position{line: 1243, col: 7, offset: 48832},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1243, col: 7, offset: 48832},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1243, col: 13, offset: 48838},
														run: (*parser).callonInlineElementsWithoutSubtitution12,
														expr: &litMatcher{
															pos:        position{line: 1243, col: 13, offset: 48838},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1251, col: 8, offset: 48930},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1247, col: 12, offset: 48890},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1247, col: 21, offset: 48899},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1249, col: 8, offset: 48919},
													expr: &anyMatcher{
														line: 1249, col: 9, offset: 48920,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 626, col: 48, offset: 23262},
							expr: &choiceExpr{
								pos: position{line: 936, col: 19, offset: 38153},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1120, col: 26, offset: 45059},
										val:        "....",
										ignoreCase: false,
									},
									&seqExpr{
										pos: position{line: 948, col: 25, offset: 38638},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 948, col: 25, offset: 38638},
												val:        "```",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 948, col: 31, offset: 38644},
												expr: &choiceExpr{
													pos: position{line: 1243, col: 7, offset: 48832},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1243, col: 7, offset: 48832},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1243, col: 13, offset: 48838},
															run: (*parser).callonInlineElementsWithoutSubtitution27,
															expr: &litMatcher{
																pos:        position{line: 1243, col: 13, offset: 48838},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1251, col: 8, offset: 48930},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1247, col: 12, offset: 48890},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1247, col: 21, offset: 48899},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1249, col: 8, offset: 48919},
														expr: &anyMatcher{
															line: 1249, col: 9, offset: 48920,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 959, col: 26, offset: 39117},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 959, col: 26, offset: 39117},
												val:        "----",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 959, col: 33, offset: 39124},
												expr: &choiceExpr{
													pos: position{line: 1243, col: 7, offset: 48832},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1243, col: 7, offset: 48832},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1243, col: 13, offset: 48838},
															run: (*parser).callonInlineElementsWithoutSubtitution39,
															expr: &litMatcher{
																pos:        position{line: 1243, col: 13, offset: 48838},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1251, col: 8, offset: 48930},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1247, col: 12, offset: 48890},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1247, col: 21, offset: 48899},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1249, col: 8, offset: 48919},
														expr: &anyMatcher{
															line: 1249, col: 9, offset: 48920,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 983, col: 26, offset: 40080},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 983, col: 26, offset: 40080},
												val:        "====",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 983, col: 33, offset: 40087},
												expr: &choiceExpr{
													pos: position{line: 1243, col: 7, offset: 48832},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1243, col: 7, offset: 48832},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1243, col: 13, offset: 48838},
															run: (*parser).callonInlineElementsWithoutSubtitution51,
															expr: &litMatcher{
																pos:        position{line: 1243, col: 13, offset: 48838},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1251, col: 8, offset: 48930},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1247, col: 12, offset: 48890},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1247, col: 21, offset: 48899},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1249, col: 8, offset: 48919},
														expr: &anyMatcher{
															line: 1249, col: 9, offset: 48920,
														},
													},
												},
											},
										},
									},
									&litMatcher{
										pos:        position{line: 1092, col: 26, offset: 43998},
										val:        "////",
										ignoreCase: false,
									},
									&seqExpr{
										pos: position{line: 1006, col: 24, offset: 40905},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 1006, col: 24, offset: 40905},
												val:        "____",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 1006, col: 31, offset: 40912},
												expr: &choiceExpr{
													pos: position{line: 1243, col: 7, offset: 48832},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1243, col: 7, offset: 48832},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1243, col: 13, offset: 48838},
															run: (*parser).callonInlineElementsWithoutSubtitution64,
															expr: &litMatcher{
																pos:        position{line: 1243, col: 13, offset: 48838},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1251, col: 8, offset: 48930},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1247, col: 12, offset: 48890},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1247, col: 21, offset: 48899},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1249, col: 8, offset: 48919},
														expr: &anyMatcher{
															line: 1249, col: 9, offset: 48920,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 1050, col: 26, offset: 42506},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 1050, col: 26, offset: 42506},
												val:        "****",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 1050, col: 33, offset: 42513},
												expr: &choiceExpr{
													pos: position{line: 1243, col: 7, offset: 48832},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1243, col: 7, offset: 48832},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1243, col: 13, offset: 48838},
															run: (*parser).callonInlineElementsWithoutSubtitution76,
															expr: &litMatcher{
																pos:        position{line: 1243, col: 13, offset: 48838},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1251, col: 8, offset: 48930},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1247, col: 12, offset: 48890},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1247, col: 21, offset: 48899},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1249, col: 8, offset: 48919},
														expr: &anyMatcher{
															line: 1249, col: 9, offset: 48920,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 626, col: 64, offset: 23278},
							label: "elements",
							expr: &oneOrMoreExpr{
								pos: position{line: 626, col: 73, offset: 23287},
								expr: &ruleRefExpr{
									pos:  position{line: 626, col: 74, offset: 23288},
									name: "InlineElementWithoutSubtitution",
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 626, col: 108, offset: 23322},
							label: "linebreak",
							expr: &zeroOrOneExpr{
								pos: position{line: 626, col: 118, offset: 23332},
								expr: &actionExpr{
									pos: position{line: 637, col: 14, offset: 23881},
									run: (*parser).callonInlineElementsWithoutSubtitution88,
									expr: &seqExpr{
										pos: position{line: 637, col: 14, offset: 23881},
										exprs: []interface{}{
											&choiceExpr{
												pos: position{line: 1243, col: 7, offset: 48832},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1243, col: 7, offset: 48832},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1243, col: 13, offset: 48838},
														run: (*parser).callonInlineElementsWithoutSubtitution92,
														expr: &litMatcher{
															pos:        position{line: 1243, col: 13, offset: 48838},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 637, col: 17, offset: 23884},
												val:        "+",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 637, col: 21, offset: 23888},
												expr: &choiceExpr{
													pos: position{line: 1243, col: 7, offset: 48832},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1243, col: 7, offset: 48832},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1243, col: 13, offset: 48838},
															run: (*parser).callonInlineElementsWithoutSubtitution98,
															expr: &litMatcher{
																pos:        position{line: 1243, col: 13, offset: 48838},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1251, col: 8, offset: 48930},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1247, col: 12, offset: 48890},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1247, col: 21, offset: 48899},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1249, col: 8, offset: 48919},
														expr: &anyMatcher{
															line: 1249, col: 9, offset: 48920,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&zeroOrOneExpr{
							pos: position{line: 626, col: 131, offset: 23345},
							expr: &choiceExpr{
								pos: position{line: 1251, col: 8, offset: 48930},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1247, col: 12, offset: 48890},
										val:        "\r\n",
										ignoreCase: false,
									},
									&charClassMatcher{
										pos:        position{line: 1247, col: 21, offset: 48899},
										val:        "[\\r\\n]",
										chars:      []rune{'\r', '\n'},
										ignoreCase: false,
										inverted:   false,
									},
									&notExpr{
										pos: position{line: 1249, col: 8, offset: 48919},
										expr: &anyMatcher{
											line: 1249, col: 9, offset: 48920,
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "InlineElementWithoutSubtitution",
			pos:  position{line: 630, col: 1, offset: 23475},
			expr: &actionExpr{
				pos: position{line: 630, col: 36, offset: 23510},
				run: (*parser).callonInlineElementWithoutSubtitution1,
				expr: &seqExpr{
					pos: position{line: 630, col: 36, offset: 23510},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 630, col: 36, offset: 23510},
							expr: &choiceExpr{
								pos: position{line: 1251, col: 8, offset: 48930},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1247, col: 12, offset: 48890},
										val:        "\r\n",
										ignoreCase: false,
									},
									&charClassMatcher{
										pos:        position{line: 1247, col: 21, offset: 48899},
										val:        "[\\r\\n]",
										chars:      []rune{'\r', '\n'},
										ignoreCase: false,
										inverted:   false,
									},
									&notExpr{
										pos: position{line: 1249, col: 8, offset: 48919},
										expr: &anyMatcher{
											line: 1249, col: 9, offset: 48920,
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 630, col: 41, offset: 23515},
							expr: &actionExpr{
								pos: position{line: 637, col: 14, offset: 23881},
								run: (*parser).callonInlineElementWithoutSubtitution10,
								expr: &seqExpr{
									pos: position{line: 637, col: 14, offset: 23881},
									exprs: []interface{}{
										&choiceExpr{
											pos: position{line: 1243, col: 7, offset: 48832},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1243, col: 7, offset: 48832},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1243, col: 13, offset: 48838},
													run: (*parser).callonInlineElementWithoutSubtitution14,
													expr: &litMatcher{
														pos:        position{line: 1243, col: 13, offset: 48838},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 637, col: 17, offset: 23884},
											val:        "+",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 637, col: 21, offset: 23888},
											expr: &choiceExpr{
												pos: position{line: 1243, col: 7, offset: 48832},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1243, col: 7, offset: 48832},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1243, col: 13, offset: 48838},
														run: (*parser).callonInlineElementWithoutSubtitution20,
														expr: &litMatcher{
															pos:        position{line: 1243, col: 13, offset: 48838},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1251, col: 8, offset: 48930},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1247, col: 12, offset: 48890},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1247, col: 21, offset: 48899},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1249, col: 8, offset: 48919},
													expr: &anyMatcher{
														line: 1249, col: 9, offset: 48920,
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 630, col: 52, offset: 23526},
							label: "element",
							expr: &choiceExpr{
								pos: position{line: 630, col: 61, offset: 23535},
								alternatives: []interface{}{
									&actionExpr{
										pos: position{line: 875, col: 16, offset: 35530},
										run: (*parser).callonInlineElementWithoutSubtitution29,
										expr: &seqExpr{
											pos: position{line: 875, col: 16, offset: 35530},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 875, col: 16, offset: 35530},
													val:        "image:",
													ignoreCase: false,
												},
												&notExpr{
													pos: position{line: 875, col: 25, offset: 35539},
													expr: &litMatcher{
														pos:        position{line: 875, col: 26, offset: 35540},
														val:        ":",
														ignoreCase: false,
													},
												},
												&labeledExpr{
													pos:   position{line: 875, col: 30, offset: 35544},
													label: "path",
													expr: &actionExpr{
														pos: position{line: 1219, col: 8, offset: 48334},
														run: (*parser).callonInlineElementWithoutSubtitution35,
														expr: &oneOrMoreExpr{
															pos: position{line: 1219, col: 8, offset: 48334},
															expr: &choiceExpr{
																pos: position{line: 1219, col: 9, offset: 48335},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 1205, col: 14, offset: 47940},
																		run: (*parser).callonInlineElementWithoutSubtitution38,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1205, col: 14, offset: 47940},
																			expr: &charClassMatcher{
																				pos:        position{line: 1205, col: 14, offset: 47940},
																				val:        "[a-zA-Z0-9]",
																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 1219, col: 21, offset: 48347},
																		run: (*parser).callonInlineElementWithoutSubtitution41,
																		expr: &seqExpr{
																			pos: position{line: 1219, col: 22, offset: 48348},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 1219, col: 22, offset: 48348},
																					expr: &choiceExpr{
																						pos: position{line: 1247, col: 12, offset: 48890},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1247, col: 12, offset: 48890},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 1247, col: 21, offset: 48899},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1219, col: 31, offset: 48357},
																					expr: &choiceExpr{
																						pos: position{line: 1243, col: 7, offset: 48832},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1243, col: 7, offset: 48832},
																								val:        " ",
																								ignoreCase: false,
																							},
																							&actionExpr{
																								pos: position{line: 1243, col: 13, offset: 48838},
																								run: (*parser).callonInlineElementWithoutSubtitution50,
																								expr: &litMatcher{
																									pos:        position{line: 1243, col: 13, offset: 48838},
																									val:        "\t",
																									ignoreCase: false,
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1219, col: 35, offset: 48361},
																					expr: &litMatcher{
																						pos:        position{line: 1219, col: 36, offset: 48362},
																						val:        "[",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1219, col: 40, offset: 48366},
																					expr: &litMatcher{
																						pos:        position{line: 1219, col: 41, offset: 48367},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 1219, col: 46, offset: 48372,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 875, col: 41, offset: 35555},
													label: "inlineAttributes",
													expr: &choiceExpr{
														pos: position{line: 880, col: 20, offset: 35812},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 880, col: 20, offset: 35812},
																run: (*parser).callonInlineElementWithoutSubtitution59,
																expr: &seqExpr{
																	pos: position{line: 880, col: 20, offset: 35812},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 880, col: 20, offset: 35812},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 880, col: 24, offset: 35816},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 897, col: 19, offset: 36535},
																				run: (*parser).callonInlineElementWithoutSubtitution63,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 897, col: 19, offset: 36535},
																					expr: &choiceExpr{
																						pos: position{line: 897, col: 20, offset: 36536},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								run: (*parser).callonInlineElementWithoutSubtitution66,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1205, col: 14, offset: 47940},
																									expr: &charClassMatcher{
																										pos:        position{line: 1205, col: 14, offset: 47940},
																										val:        "[a-zA-Z0-9]",
																										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								run: (*parser).callonInlineElementWithoutSubtitution69,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1215, col: 11, offset: 48287},
																									expr: &choiceExpr{
																										pos: position{line: 1243, col: 7, offset: 48832},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1243, col: 7, offset: 48832},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1243, col: 13, offset: 48838},
																												run: (*parser).callonInlineElementWithoutSubtitution73,
																												expr: &litMatcher{
																													pos:        position{line: 1243, col: 13, offset: 48838},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 897, col: 41, offset: 36557},
																								run: (*parser).callonInlineElementWithoutSubtitution75,
																								expr: &seqExpr{
																									pos: position{line: 897, col: 42, offset: 36558},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 897, col: 42, offset: 36558},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 43, offset: 36559},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 897, col: 47, offset: 36563},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 48, offset: 36564},
																												val:        "=",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 897, col: 52, offset: 36568},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 53, offset: 36569},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 897, col: 57, offset: 36573,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 880, col: 45, offset: 35837},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 881, col: 5, offset: 35845},
																			label: "width",
																			expr: &actionExpr{
																				pos: position{line: 897, col: 19, offset: 36535},
																				run: (*parser).callonInlineElementWithoutSubtitution86,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 897, col: 19, offset: 36535},
																					expr: &choiceExpr{
																						pos: position{line: 897, col: 20, offset: 36536},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								run: (*parser).callonInlineElementWithoutSubtitution89,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1205, col: 14, offset: 47940},
																									expr: &charClassMatcher{
																										pos:        position{line: 1205, col: 14, offset: 47940},
																										val:        "[a-zA-Z0-9]",
																										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								run: (*parser).callonInlineElementWithoutSubtitution92,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1215, col: 11, offset: 48287},
																									expr: &choiceExpr{
																										pos: position{line: 1243, col: 7, offset: 48832},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1243, col: 7, offset: 48832},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1243, col: 13, offset: 48838},
																												run: (*parser).callonInlineElementWithoutSubtitution96,
																												expr: &litMatcher{
																													pos:        position{line: 1243, col: 13, offset: 48838},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 897, col: 41, offset: 36557},
																								run: (*parser).callonInlineElementWithoutSubtitution98,
																								expr: &seqExpr{
																									pos: position{line: 897, col: 42, offset: 36558},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 897, col: 42, offset: 36558},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 43, offset: 36559},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 897, col: 47, offset: 36563},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 48, offset: 36564},
																												val:        "=",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 897, col: 52, offset: 36568},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 53, offset: 36569},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 897, col: 57, offset: 36573,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 881, col: 29, offset: 35869},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 882, col: 5, offset: 35877},
																			label: "height",
																			expr: &actionExpr{
																				pos: position{line: 897, col: 19, offset: 36535},
																				run: (*parser).callonInlineElementWithoutSubtitution109,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 897, col: 19, offset: 36535},
																					expr: &choiceExpr{
																						pos: position{line: 897, col: 20, offset: 36536},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								run: (*parser).callonInlineElementWithoutSubtitution112,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1205, col: 14, offset: 47940},
																									expr: &charClassMatcher{
																										pos:        position{line: 1205, col: 14, offset: 47940},
																										val:        "[a-zA-Z0-9]",
																										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								run: (*parser).callonInlineElementWithoutSubtitution115,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1215, col: 11, offset: 48287},
																									expr: &choiceExpr{
																										pos: position{line: 1243, col: 7, offset: 48832},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1243, col: 7, offset: 48832},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1243, col: 13, offset: 48838},
																												run: (*parser).callonInlineElementWithoutSubtitution119,
																												expr: &litMatcher{
																													pos:        position{line: 1243, col: 13, offset: 48838},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 897, col: 41, offset: 36557},
																								run: (*parser).callonInlineElementWithoutSubtitution121,
																								expr: &seqExpr{
																									pos: position{line: 897, col: 42, offset: 36558},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 897, col: 42, offset: 36558},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 43, offset: 36559},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 897, col: 47, offset: 36563},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 48, offset: 36564},
																												val:        "=",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 897, col: 52, offset: 36568},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 53, offset: 36569},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 897, col: 57, offset: 36573,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 882, col: 29, offset: 35901},
																			expr: &litMatcher{
																				pos:        position{line: 882, col: 29, offset: 35901},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 883, col: 5, offset: 35910},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 883, col: 16, offset: 35921},
																				expr: &choiceExpr{
																					pos: position{line: 225, col: 21, offset: 7971},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							run: (*parser).callonInlineElementWithoutSubtitution135,
																							expr: &seqExpr{
																								pos: position{line: 225, col: 21, offset: 7971},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 225, col: 21, offset: 7971},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonInlineElementWithoutSubtitution138,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonInlineElementWithoutSubtitution141,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonInlineElementWithoutSubtitution144,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1170, col: 16, offset: 47067},
																															run: (*parser).callonInlineElementWithoutSubtitution147,
																															expr: &litMatcher{
																																pos:        position{line: 1170, col: 16, offset: 47067},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		run: (*parser).callonInlineElementWithoutSubtitution152,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1205, col: 14, offset: 47940},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1205, col: 14, offset: 47940},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		run: (*parser).callonInlineElementWithoutSubtitution155,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1215, col: 11, offset: 48287},
																																			expr: &choiceExpr{
																																				pos: position{line: 1243, col: 7, offset: 48832},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1243, col: 7, offset: 48832},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1243, col: 13, offset: 48838},
																																						run: (*parser).callonInlineElementWithoutSubtitution159,
																																						expr: &litMatcher{
																																							pos:        position{line: 1243, col: 13, offset: 48838},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonInlineElementWithoutSubtitution161,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 225, col: 40, offset: 7990},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 225, col: 44, offset: 7994},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 237, col: 19, offset: 8403},
																											run: (*parser).callonInlineElementWithoutSubtitution172,
																											expr: &labeledExpr{
																												pos:   position{line: 237, col: 19, offset: 8403},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 237, col: 25, offset: 8409},
																													expr: &choiceExpr{
																														pos: position{line: 237, col: 26, offset: 8410},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1205, col: 14, offset: 47940},
																																run: (*parser).callonInlineElementWithoutSubtitution176,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1205, col: 14, offset: 47940},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1205, col: 14, offset: 47940},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1215, col: 11, offset: 48287},
																																run: (*parser).callonInlineElementWithoutSubtitution179,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1215, col: 11, offset: 48287},
																																	expr: &choiceExpr{
																																		pos: position{line: 1243, col: 7, offset: 48832},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1243, col: 7, offset: 48832},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1243, col: 13, offset: 48838},
																																				run: (*parser).callonInlineElementWithoutSubtitution183,
																																				expr: &litMatcher{
																																					pos:        position{line: 1243, col: 13, offset: 48838},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 237, col: 47, offset: 8431},
																																run: (*parser).callonInlineElementWithoutSubtitution185,
																																expr: &seqExpr{
																																	pos: position{line: 237, col: 48, offset: 8432},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 237, col: 48, offset: 8432},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 49, offset: 8433},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 53, offset: 8437},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 54, offset: 8438},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 58, offset: 8442},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 59, offset: 8443},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 237, col: 64, offset: 8448,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 225, col: 67, offset: 8017},
																										expr: &litMatcher{
																											pos:        position{line: 225, col: 67, offset: 8017},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 225, col: 72, offset: 8022},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonInlineElementWithoutSubtitution199,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 227, col: 5, offset: 8106},
																							run: (*parser).callonInlineElementWithoutSubtitution201,
																							expr: &seqExpr{
																								pos: position{line: 227, col: 5, offset: 8106},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 227, col: 5, offset: 8106},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonInlineElementWithoutSubtitution204,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonInlineElementWithoutSubtitution207,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonInlineElementWithoutSubtitution210,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1170, col: 16, offset: 47067},
																															run: (*parser).callonInlineElementWithoutSubtitution213,
																															expr: &litMatcher{
																																pos:        position{line: 1170, col: 16, offset: 47067},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		run: (*parser).callonInlineElementWithoutSubtitution218,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1205, col: 14, offset: 47940},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1205, col: 14, offset: 47940},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		run: (*parser).callonInlineElementWithoutSubtitution221,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1215, col: 11, offset: 48287},
																																			expr: &choiceExpr{
																																				pos: position{line: 1243, col: 7, offset: 48832},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1243, col: 7, offset: 48832},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1243, col: 13, offset: 48838},
																																						run: (*parser).callonInlineElementWithoutSubtitution225,
																																						expr: &litMatcher{
																																							pos:        position{line: 1243, col: 13, offset: 48838},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonInlineElementWithoutSubtitution227,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 227, col: 24, offset: 8125},
																										expr: &litMatcher{
																											pos:        position{line: 227, col: 24, offset: 8125},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 227, col: 29, offset: 8130},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonInlineElementWithoutSubtitution241,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 883, col: 36, offset: 35941},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 885, col: 5, offset: 36039},
																run: (*parser).callonInlineElementWithoutSubtitution244,
																expr: &seqExpr{
																	pos: position{line: 885, col: 5, offset: 36039},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 885, col: 5, offset: 36039},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 885, col: 9, offset: 36043},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 897, col: 19, offset: 36535},
																				run: (*parser).callonInlineElementWithoutSubtitution248,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 897, col: 19, offset: 36535},
																					expr: &choiceExpr{
																						pos: position{line: 897, col: 20, offset: 36536},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								run: (*parser).callonInlineElementWithoutSubtitution251,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1205, col: 14, offset: 47940},
																									expr: &charClassMatcher{
																										pos:        position{line: 1205, col: 14, offset: 47940},
																										val:        "[a-zA-Z0-9]",
																										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								run: (*parser).callonInlineElementWithoutSubtitution254,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1215, col: 11, offset: 48287},
																									expr: &choiceExpr{
																										pos: position{line: 1243, col: 7, offset: 48832},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1243, col: 7, offset: 48832},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1243, col: 13, offset: 48838},
																												run: (*parser).callonInlineElementWithoutSubtitution258,
																												expr: &litMatcher{
																													pos:        position{line: 1243, col: 13, offset: 48838},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 897, col: 41, offset: 36557},
																								run: (*parser).callonInlineElementWithoutSubtitution260,
																								expr: &seqExpr{
																									pos: position{line: 897, col: 42, offset: 36558},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 897, col: 42, offset: 36558},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 43, offset: 36559},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 897, col: 47, offset: 36563},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 48, offset: 36564},
																												val:        "=",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 897, col: 52, offset: 36568},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 53, offset: 36569},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 897, col: 57, offset: 36573,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 885, col: 30, offset: 36064},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 886, col: 5, offset: 36072},
																			label: "width",
																			expr: &actionExpr{
																				pos: position{line: 897, col: 19, offset: 36535},
																				run: (*parser).callonInlineElementWithoutSubtitution271,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 897, col: 19, offset: 36535},
																					expr: &choiceExpr{
																						pos: position{line: 897, col: 20, offset: 36536},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								run: (*parser).callonInlineElementWithoutSubtitution274,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1205, col: 14, offset: 47940},
																									expr: &charClassMatcher{
																										pos:        position{line: 1205, col: 14, offset: 47940},
																										val:        "[a-zA-Z0-9]",
																										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								run: (*parser).callonInlineElementWithoutSubtitution277,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1215, col: 11, offset: 48287},
																									expr: &choiceExpr{
																										pos: position{line: 1243, col: 7, offset: 48832},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1243, col: 7, offset: 48832},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1243, col: 13, offset: 48838},
																												run: (*parser).callonInlineElementWithoutSubtitution281,
																												expr: &litMatcher{
																													pos:        position{line: 1243, col: 13, offset: 48838},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 897, col: 41, offset: 36557},
																								run: (*parser).callonInlineElementWithoutSubtitution283,
																								expr: &seqExpr{
																									pos: position{line: 897, col: 42, offset: 36558},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 897, col: 42, offset: 36558},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 43, offset: 36559},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 897, col: 47, offset: 36563},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 48, offset: 36564},
																												val:        "=",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 897, col: 52, offset: 36568},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 53, offset: 36569},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 897, col: 57, offset: 36573,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 886, col: 28, offset: 36095},
																			expr: &litMatcher{
																				pos:        position{line: 886, col: 28, offset: 36095},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 887, col: 5, offset: 36104},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 887, col: 16, offset: 36115},
																				expr: &choiceExpr{
																					pos: position{line: 225, col: 21, offset: 7971},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							run: (*parser).callonInlineElementWithoutSubtitution297,
																							expr: &seqExpr{
																								pos: position{line: 225, col: 21, offset: 7971},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 225, col: 21, offset: 7971},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonInlineElementWithoutSubtitution300,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonInlineElementWithoutSubtitution303,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonInlineElementWithoutSubtitution306,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1170, col: 16, offset: 47067},
																															run: (*parser).callonInlineElementWithoutSubtitution309,
																															expr: &litMatcher{
																																pos:        position{line: 1170, col: 16, offset: 47067},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		run: (*parser).callonInlineElementWithoutSubtitution314,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1205, col: 14, offset: 47940},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1205, col: 14, offset: 47940},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		run: (*parser).callonInlineElementWithoutSubtitution317,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1215, col: 11, offset: 48287},
																																			expr: &choiceExpr{
																																				pos: position{line: 1243, col: 7, offset: 48832},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1243, col: 7, offset: 48832},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1243, col: 13, offset: 48838},
																																						run: (*parser).callonInlineElementWithoutSubtitution321,
																																						expr: &litMatcher{
																																							pos:        position{line: 1243, col: 13, offset: 48838},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonInlineElementWithoutSubtitution323,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 225, col: 40, offset: 7990},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 225, col: 44, offset: 7994},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 237, col: 19, offset: 8403},
																											run: (*parser).callonInlineElementWithoutSubtitution334,
																											expr: &labeledExpr{
																												pos:   position{line: 237, col: 19, offset: 8403},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 237, col: 25, offset: 8409},
																													expr: &choiceExpr{
																														pos: position{line: 237, col: 26, offset: 8410},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1205, col: 14, offset: 47940},
																																run: (*parser).callonInlineElementWithoutSubtitution338,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1205, col: 14, offset: 47940},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1205, col: 14, offset: 47940},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1215, col: 11, offset: 48287},
																																run: (*parser).callonInlineElementWithoutSubtitution341,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1215, col: 11, offset: 48287},
																																	expr: &choiceExpr{
																																		pos: position{line: 1243, col: 7, offset: 48832},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1243, col: 7, offset: 48832},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1243, col: 13, offset: 48838},
																																				run: (*parser).callonInlineElementWithoutSubtitution345,
																																				expr: &litMatcher{
																																					pos:        position{line: 1243, col: 13, offset: 48838},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 237, col: 47, offset: 8431},
																																run: (*parser).callonInlineElementWithoutSubtitution347,
																																expr: &seqExpr{
																																	pos: position{line: 237, col: 48, offset: 8432},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 237, col: 48, offset: 8432},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 49, offset: 8433},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 53, offset: 8437},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 54, offset: 8438},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 58, offset: 8442},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 59, offset: 8443},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 237, col: 64, offset: 8448,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 225, col: 67, offset: 8017},
																										expr: &litMatcher{
																											pos:        position{line: 225, col: 67, offset: 8017},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 225, col: 72, offset: 8022},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonInlineElementWithoutSubtitution361,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 227, col: 5, offset: 8106},
																							run: (*parser).callonInlineElementWithoutSubtitution363,
																							expr: &seqExpr{
																								pos: position{line: 227, col: 5, offset: 8106},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 227, col: 5, offset: 8106},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonInlineElementWithoutSubtitution366,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonInlineElementWithoutSubtitution369,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonInlineElementWithoutSubtitution372,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1170, col: 16, offset: 47067},
																															run: (*parser).callonInlineElementWithoutSubtitution375,
																															expr: &litMatcher{
																																pos:        position{line: 1170, col: 16, offset: 47067},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		run: (*parser).callonInlineElementWithoutSubtitution380,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1205, col: 14, offset: 47940},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1205, col: 14, offset: 47940},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		run: (*parser).callonInlineElementWithoutSubtitution383,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1215, col: 11, offset: 48287},
																																			expr: &choiceExpr{
																																				pos: position{line: 1243, col: 7, offset: 48832},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1243, col: 7, offset: 48832},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1243, col: 13, offset: 48838},
																																						run: (*parser).callonInlineElementWithoutSubtitution387,
																																						expr: &litMatcher{
																																							pos:        position{line: 1243, col: 13, offset: 48838},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonInlineElementWithoutSubtitution389,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 227, col: 24, offset: 8125},
																										expr: &litMatcher{
																											pos:        position{line: 227, col: 24, offset: 8125},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 227, col: 29, offset: 8130},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonInlineElementWithoutSubtitution403,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 887, col: 36, offset: 36135},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 889, col: 5, offset: 36230},
																run: (*parser).callonInlineElementWithoutSubtitution406,
																expr: &seqExpr{
																	pos: position{line: 889, col: 5, offset: 36230},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 889, col: 5, offset: 36230},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 889, col: 9, offset: 36234},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 897, col: 19, offset: 36535},
																				run: (*parser).callonInlineElementWithoutSubtitution410,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 897, col: 19, offset: 36535},
																					expr: &choiceExpr{
																						pos: position{line: 897, col: 20, offset: 36536},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								run: (*parser).callonInlineElementWithoutSubtitution413,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1205, col: 14, offset: 47940},
																									expr: &charClassMatcher{
																										pos:        position{line: 1205, col: 14, offset: 47940},
																										val:        "[a-zA-Z0-9]",
																										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 1215, col: 11, offset: 48287},
																								run: (*parser).callonInlineElementWithoutSubtitution416,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1215, col: 11, offset: 48287},
																									expr: &choiceExpr{
																										pos: position{line: 1243, col: 7, offset: 48832},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1243, col: 7, offset: 48832},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1243, col: 13, offset: 48838},
																												run: (*parser).callonInlineElementWithoutSubtitution420,
																												expr: &litMatcher{
																													pos:        position{line: 1243, col: 13, offset: 48838},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 897, col: 41, offset: 36557},
																								run: (*parser).callonInlineElementWithoutSubtitution422,
																								expr: &seqExpr{
																									pos: position{line: 897, col: 42, offset: 36558},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 897, col: 42, offset: 36558},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 43, offset: 36559},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 897, col: 47, offset: 36563},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 48, offset: 36564},
																												val:        "=",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 897, col: 52, offset: 36568},
																											expr: &litMatcher{
																												pos:        position{line: 897, col: 53, offset: 36569},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 897, col: 57, offset: 36573,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 889, col: 30, offset: 36255},
																			expr: &litMatcher{
																				pos:        position{line: 889, col: 30, offset: 36255},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 890, col: 5, offset: 36264},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 890, col: 16, offset: 36275},
																				expr: &choiceExpr{
																					pos: position{line: 225, col: 21, offset: 7971},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							run: (*parser).callonInlineElementWithoutSubtitution436,
																							expr: &seqExpr{
																								pos: position{line: 225, col: 21, offset: 7971},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 225, col: 21, offset: 7971},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonInlineElementWithoutSubtitution439,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonInlineElementWithoutSubtitution442,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonInlineElementWithoutSubtitution445,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1170, col: 16, offset: 47067},
																															run: (*parser).callonInlineElementWithoutSubtitution448,
																															expr: &litMatcher{
																																pos:        position{line: 1170, col: 16, offset: 47067},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		run: (*parser).callonInlineElementWithoutSubtitution453,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1205, col: 14, offset: 47940},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1205, col: 14, offset: 47940},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		run: (*parser).callonInlineElementWithoutSubtitution456,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1215, col: 11, offset: 48287},
																																			expr: &choiceExpr{
																																				pos: position{line: 1243, col: 7, offset: 48832},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1243, col: 7, offset: 48832},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1243, col: 13, offset: 48838},
																																						run: (*parser).callonInlineElementWithoutSubtitution460,
																																						expr: &litMatcher{
																																							pos:        position{line: 1243, col: 13, offset: 48838},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonInlineElementWithoutSubtitution462,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 225, col: 40, offset: 7990},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 225, col: 44, offset: 7994},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 237, col: 19, offset: 8403},
																											run: (*parser).callonInlineElementWithoutSubtitution473,
																											expr: &labeledExpr{
																												pos:   position{line: 237, col: 19, offset: 8403},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 237, col: 25, offset: 8409},
																													expr: &choiceExpr{
																														pos: position{line: 237, col: 26, offset: 8410},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1205, col: 14, offset: 47940},
																																run: (*parser).callonInlineElementWithoutSubtitution477,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1205, col: 14, offset: 47940},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1205, col: 14, offset: 47940},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1215, col: 11, offset: 48287},
																																run: (*parser).callonInlineElementWithoutSubtitution480,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1215, col: 11, offset: 48287},
																																	expr: &choiceExpr{
																																		pos: position{line: 1243, col: 7, offset: 48832},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1243, col: 7, offset: 48832},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1243, col: 13, offset: 48838},
																																				run: (*parser).callonInlineElementWithoutSubtitution484,
																																				expr: &litMatcher{
																																					pos:        position{line: 1243, col: 13, offset: 48838},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 237, col: 47, offset: 8431},
																																run: (*parser).callonInlineElementWithoutSubtitution486,
																																expr: &seqExpr{
																																	pos: position{line: 237, col: 48, offset: 8432},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 237, col: 48, offset: 8432},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 49, offset: 8433},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 53, offset: 8437},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 54, offset: 8438},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 58, offset: 8442},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 59, offset: 8443},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 237, col: 64, offset: 8448,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 225, col: 67, offset: 8017},
																										expr: &litMatcher{
																											pos:        position{line: 225, col: 67, offset: 8017},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 225, col: 72, offset: 8022},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonInlineElementWithoutSubtitution500,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 227, col: 5, offset: 8106},
																							run: (*parser).callonInlineElementWithoutSubtitution502,
																							expr: &seqExpr{
																								pos: position{line: 227, col: 5, offset: 8106},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 227, col: 5, offset: 8106},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonInlineElementWithoutSubtitution505,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonInlineElementWithoutSubtitution508,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonInlineElementWithoutSubtitution511,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1170, col: 16, offset: 47067},
																															run: (*parser).callonInlineElementWithoutSubtitution514,
																															expr: &litMatcher{
																																pos:        position{line: 1170, col: 16, offset: 47067},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		run: (*parser).callonInlineElementWithoutSubtitution519,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1205, col: 14, offset: 47940},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1205, col: 14, offset: 47940},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		run: (*parser).callonInlineElementWithoutSubtitution522,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1215, col: 11, offset: 48287},
																																			expr: &choiceExpr{
																																				pos: position{line: 1243, col: 7, offset: 48832},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1243, col: 7, offset: 48832},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1243, col: 13, offset: 48838},
																																						run: (*parser).callonInlineElementWithoutSubtitution526,
																																						expr: &litMatcher{
																																							pos:        position{line: 1243, col: 13, offset: 48838},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonInlineElementWithoutSubtitution528,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 227, col: 24, offset: 8125},
																										expr: &litMatcher{
																											pos:        position{line: 227, col: 24, offset: 8125},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 227, col: 29, offset: 8130},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonInlineElementWithoutSubtitution542,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 890, col: 36, offset: 36295},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 892, col: 5, offset: 36388},
																run: (*parser).callonInlineElementWithoutSubtitution545,
																expr: &seqExpr{
																	pos: position{line: 892, col: 5, offset: 36388},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 892, col: 5, offset: 36388},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 892, col: 9, offset: 36392},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 892, col: 20, offset: 36403},
																				expr: &choiceExpr{
																					pos: position{line: 225, col: 21, offset: 7971},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							run: (*parser).callonInlineElementWithoutSubtitution551,
																							expr: &seqExpr{
																								pos: position{line: 225, col: 21, offset: 7971},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 225, col: 21, offset: 7971},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonInlineElementWithoutSubtitution554,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonInlineElementWithoutSubtitution557,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonInlineElementWithoutSubtitution560,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1170, col: 16, offset: 47067},
																															run: (*parser).callonInlineElementWithoutSubtitution563,
																															expr: &litMatcher{
																																pos:        position{line: 1170, col: 16, offset: 47067},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		run: (*parser).callonInlineElementWithoutSubtitution568,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1205, col: 14, offset: 47940},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1205, col: 14, offset: 47940},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		run: (*parser).callonInlineElementWithoutSubtitution571,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1215, col: 11, offset: 48287},
																																			expr: &choiceExpr{
																																				pos: position{line: 1243, col: 7, offset: 48832},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1243, col: 7, offset: 48832},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1243, col: 13, offset: 48838},
																																						run: (*parser).callonInlineElementWithoutSubtitution575,
																																						expr: &litMatcher{
																																							pos:        position{line: 1243, col: 13, offset: 48838},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonInlineElementWithoutSubtitution577,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 225, col: 40, offset: 7990},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 225, col: 44, offset: 7994},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 237, col: 19, offset: 8403},
																											run: (*parser).callonInlineElementWithoutSubtitution588,
																											expr: &labeledExpr{
																												pos:   position{line: 237, col: 19, offset: 8403},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 237, col: 25, offset: 8409},
																													expr: &choiceExpr{
																														pos: position{line: 237, col: 26, offset: 8410},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1205, col: 14, offset: 47940},
																																run: (*parser).callonInlineElementWithoutSubtitution592,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1205, col: 14, offset: 47940},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1205, col: 14, offset: 47940},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1215, col: 11, offset: 48287},
																																run: (*parser).callonInlineElementWithoutSubtitution595,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1215, col: 11, offset: 48287},
																																	expr: &choiceExpr{
																																		pos: position{line: 1243, col: 7, offset: 48832},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1243, col: 7, offset: 48832},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1243, col: 13, offset: 48838},
																																				run: (*parser).callonInlineElementWithoutSubtitution599,
																																				expr: &litMatcher{
																																					pos:        position{line: 1243, col: 13, offset: 48838},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 237, col: 47, offset: 8431},
																																run: (*parser).callonInlineElementWithoutSubtitution601,
																																expr: &seqExpr{
																																	pos: position{line: 237, col: 48, offset: 8432},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 237, col: 48, offset: 8432},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 49, offset: 8433},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 53, offset: 8437},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 54, offset: 8438},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 58, offset: 8442},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 59, offset: 8443},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 237, col: 64, offset: 8448,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 225, col: 67, offset: 8017},
																										expr: &litMatcher{
																											pos:        position{line: 225, col: 67, offset: 8017},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 225, col: 72, offset: 8022},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonInlineElementWithoutSubtitution615,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 227, col: 5, offset: 8106},
																							run: (*parser).callonInlineElementWithoutSubtitution617,
																							expr: &seqExpr{
																								pos: position{line: 227, col: 5, offset: 8106},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 227, col: 5, offset: 8106},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonInlineElementWithoutSubtitution620,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonInlineElementWithoutSubtitution623,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonInlineElementWithoutSubtitution626,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1170, col: 16, offset: 47067},
																															run: (*parser).callonInlineElementWithoutSubtitution629,
																															expr: &litMatcher{
																																pos:        position{line: 1170, col: 16, offset: 47067},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1205, col: 14, offset: 47940},
																																		run: (*parser).callonInlineElementWithoutSubtitution634,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1205, col: 14, offset: 47940},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1205, col: 14, offset: 47940},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1215, col: 11, offset: 48287},
																																		run: (*parser).callonInlineElementWithoutSubtitution637,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1215, col: 11, offset: 48287},
																																			expr: &choiceExpr{
																																				pos: position{line: 1243, col: 7, offset: 48832},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1243, col: 7, offset: 48832},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1243, col: 13, offset: 48838},
																																						run: (*parser).callonInlineElementWithoutSubtitution641,
																																						expr: &litMatcher{
																																							pos:        position{line: 1243, col: 13, offset: 48838},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonInlineElementWithoutSubtitution643,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 227, col: 24, offset: 8125},
																										expr: &litMatcher{
																											pos:        position{line: 227, col: 24, offset: 8125},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 227, col: 29, offset: 8130},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonInlineElementWithoutSubtitution657,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 892, col: 40, offset: 36423},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 832, col: 9, offset: 34134},
										run: (*parser).callonInlineElementWithoutSubtitution660,
										expr: &labeledExpr{
											pos:   position{line: 832, col: 9, offset: 34134},
											label: "link",
											expr: &choiceExpr{
												pos: position{line: 832, col: 15, offset: 34140},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 847, col: 17, offset: 34592},
														run: (*parser).callonInlineElementWithoutSubtitution663,
														expr: &seqExpr{
															pos: position{line: 847, col: 17, offset: 34592},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 847, col: 17, offset: 34592},
																	val:        "link:",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 847, col: 25, offset: 34600},
																	label: "url",
																	expr: &actionExpr{
																		pos: position{line: 851, col: 20, offset: 34769},
																		run: (*parser).callonInlineElementWithoutSubtitution667,
																		expr: &seqExpr{
																			pos: position{line: 851, col: 20, offset: 34769},
																			exprs: []interface{}{
																				&zeroOrOneExpr{
																					pos: position{line: 851, col: 20, offset: 34769},
																					expr: &choiceExpr{
																						pos: position{line: 1237, col: 15, offset: 48717},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1237, col: 15, offset: 48717},
																								val:        "http://",
																								ignoreCase: false,
																							},
																							&litMatcher{
																								pos:        position{line: 1237, col: 27, offset: 48729},
																								val:        "https://",
																								ignoreCase: false,
																							},
																							&litMatcher{
																								pos:        position{line: 1237, col: 40, offset: 48742},
																								val:        "ftp://",
																								ignoreCase: false,
																							},
																							&litMatcher{
																								pos:        position{line: 1237, col: 51, offset: 48753},
																								val:        "irc://",
																								ignoreCase: false,
																							},
																							&litMatcher{
																								pos:        position{line: 1237, col: 62, offset: 48764},
																								val:        "mailto:",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 1219, col: 8, offset: 48334},
																					run: (*parser).callonInlineElementWithoutSubtitution676,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1219, col: 8, offset: 48334},
																						expr: &choiceExpr{
																							pos: position{line: 1219, col: 9, offset: 48335},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 1205, col: 14, offset: 47940},
																									run: (*parser).callonInlineElementWithoutSubtitution679,
																									expr: &oneOrMoreExpr{
																										pos: position{line: 1205, col: 14, offset: 47940},
																										expr: &charClassMatcher{
																											pos:        position{line: 1205, col: 14, offset: 47940},
																											val:        "[a-zA-Z0-9]",
																											ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																											ignoreCase: false,
																											inverted:   false,
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 1219, col: 21, offset: 48347},
																									run: (*parser).callonInlineElementWithoutSubtitution682,
																									expr: &seqExpr{
																										pos: position{line: 1219, col: 22, offset: 48348},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 1219, col: 22, offset: 48348},
																												expr: &choiceExpr{
																													pos: position{line: 1247, col: 12, offset: 48890},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1247, col: 12, offset: 48890},
																															val:        "\r\n",
																															ignoreCase: false,
																														},
																														&charClassMatcher{
																															pos:        position{line: 1247, col: 21, offset: 48899},
																															val:        "[\\r\\n]",
																															chars:      []rune{'\r', '\n'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 1219, col: 31, offset: 48357},
																												expr: &choiceExpr{
																													pos: position{line: 1243, col: 7, offset: 48832},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1243, col: 7, offset: 48832},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1243, col: 13, offset: 48838},
																															run: (*parser).callonInlineElementWithoutSubtitution691,
																															expr: &litMatcher{
																																pos:        position{line: 1243, col: 13, offset: 48838},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 1219, col: 35, offset: 48361},
																												expr: &litMatcher{
																													pos:        position{line: 1219, col: 36, offset: 48362},
																													val:        "[",
																													ignoreCase: false,
																												},
																											},
																											&notExpr{
																												pos: position{line: 1219, col: 40, offset: 48366},
																												expr: &litMatcher{
																													pos:        position{line: 1219, col: 41, offset: 48367},
																													val:        "]",
																													ignoreCase: false,
																												},
																											},
																											&anyMatcher{
																												line: 1219, col: 46, offset: 48372,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 847, col: 47, offset: 34622},
																	label: "inlineAttributes",
																	expr: &choiceExpr{
																		pos: position{line: 855, col: 19, offset: 34839},
																		alternatives: []interface{}{
																			&actionExpr{
																				pos: position{line: 855, col: 19, offset: 34839},
																				run: (*parser).callonInlineElementWithoutSubtitution700,
																				expr: &seqExpr{
																					pos: position{line: 855, col: 19, offset: 34839},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 855, col: 19, offset: 34839},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 855, col: 23, offset: 34843},
																							label: "text",
																							expr: &actionExpr{
																								pos: position{line: 862, col: 22, offset: 35131},
																								run: (*parser).callonInlineElementWithoutSubtitution704,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 862, col: 22, offset: 35131},
																									expr: &choiceExpr{
																										pos: position{line: 862, col: 23, offset: 35132},
																										alternatives: []interface{}{
																											&actionExpr{
																												pos: position{line: 1205, col: 14, offset: 47940},
																												run: (*parser).callonInlineElementWithoutSubtitution707,
																												expr: &oneOrMoreExpr{
																													pos: position{line: 1205, col: 14, offset: 47940},
																													expr: &charClassMatcher{
																														pos:        position{line: 1205, col: 14, offset: 47940},
																														val:        "[a-zA-Z0-9]",
																														ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																											&actionExpr{
																												pos: position{line: 1215, col: 11, offset: 48287},
																												run: (*parser).callonInlineElementWithoutSubtitution710,
																												expr: &oneOrMoreExpr{
																													pos: position{line: 1215, col: 11, offset: 48287},
																													expr: &choiceExpr{
																														pos: position{line: 1243, col: 7, offset: 48832},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1243, col: 7, offset: 48832},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1243, col: 13, offset: 48838},
																																run: (*parser).callonInlineElementWithoutSubtitution714,
																																expr: &litMatcher{
																																	pos:        position{line: 1243, col: 13, offset: 48838},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																											&actionExpr{
																												pos: position{line: 862, col: 44, offset: 35153},
																												run: (*parser).callonInlineElementWithoutSubtitution716,
																												expr: &seqExpr{
																													pos: position{line: 862, col: 45, offset: 35154},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 862, col: 45, offset: 35154},
																															expr: &litMatcher{
																																pos:        position{line: 862, col: 46, offset: 35155},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 862, col: 50, offset: 35159},
																															expr: &litMatcher{
																																pos:        position{line: 862, col: 51, offset: 35160},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 862, col: 56, offset: 35165,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&labeledExpr{
																							pos:   position{line: 856, col: 9, offset: 34876},
																							label: "otherAttrs",
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 856, col: 20, offset: 34887},
																								expr: &choiceExpr{
																									pos: position{line: 225, col: 21, offset: 7971},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 225, col: 21, offset: 7971},
																											run: (*parser).callonInlineElementWithoutSubtitution726,
																											expr: &seqExpr{
																												pos: position{line: 225, col: 21, offset: 7971},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 225, col: 21, offset: 7971},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 231, col: 17, offset: 8231},
																															run: (*parser).callonInlineElementWithoutSubtitution729,
																															expr: &seqExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 231, col: 17, offset: 8231},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9116},
																																			run: (*parser).callonInlineElementWithoutSubtitution732,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9116},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 28, offset: 8242},
																																		expr: &actionExpr{
																																			pos: position{line: 282, col: 14, offset: 9780},
																																			run: (*parser).callonInlineElementWithoutSubtitution735,
																																			expr: &litMatcher{
																																				pos:        position{line: 282, col: 14, offset: 9780},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 39, offset: 8253},
																																		expr: &actionExpr{
																																			pos: position{line: 1170, col: 16, offset: 47067},
																																			run: (*parser).callonInlineElementWithoutSubtitution738,
																																			expr: &litMatcher{
																																				pos:        position{line: 1170, col: 16, offset: 47067},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 231, col: 52, offset: 8266},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 231, col: 56, offset: 8270},
																																			expr: &choiceExpr{
																																				pos: position{line: 231, col: 57, offset: 8271},
																																				alternatives: []interface{}{
																																					&actionExpr{
																																						pos: position{line: 1205, col: 14, offset: 47940},
																																						run: (*parser).callonInlineElementWithoutSubtitution743,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1205, col: 14, offset: 47940},
																																							expr: &charClassMatcher{
																																								pos:        position{line: 1205, col: 14, offset: 47940},
																																								val:        "[a-zA-Z0-9]",
																																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																								ignoreCase: false,
																																								inverted:   false,
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 1215, col: 11, offset: 48287},
																																						run: (*parser).callonInlineElementWithoutSubtitution746,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1215, col: 11, offset: 48287},
																																							expr: &choiceExpr{
																																								pos: position{line: 1243, col: 7, offset: 48832},
																																								alternatives: []interface{}{
																																									&litMatcher{
																																										pos:        position{line: 1243, col: 7, offset: 48832},
																																										val:        " ",
																																										ignoreCase: false,
																																									},
																																									&actionExpr{
																																										pos: position{line: 1243, col: 13, offset: 48838},
																																										run: (*parser).callonInlineElementWithoutSubtitution750,
																																										expr: &litMatcher{
																																											pos:        position{line: 1243, col: 13, offset: 48838},
																																											val:        "\t",
																																											ignoreCase: false,
																																										},
																																									},
																																								},
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 231, col: 78, offset: 8292},
																																						run: (*parser).callonInlineElementWithoutSubtitution752,
																																						expr: &seqExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							exprs: []interface{}{
																																								&notExpr{
																																									pos: position{line: 231, col: 79, offset: 8293},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 80, offset: 8294},
																																										val:        "=",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 84, offset: 8298},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 85, offset: 8299},
																																										val:        ",",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 89, offset: 8303},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 90, offset: 8304},
																																										val:        "]",
																																										ignoreCase: false,
																																									},
																																								},
																																								&anyMatcher{
																																									line: 231, col: 95, offset: 8309,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&litMatcher{
																														pos:        position{line: 225, col: 40, offset: 7990},
																														val:        "=",
																														ignoreCase: false,
																													},
																													&labeledExpr{
																														pos:   position{line: 225, col: 44, offset: 7994},
																														label: "value",
																														expr: &actionExpr{
																															pos: position{line: 237, col: 19, offset: 8403},
																															run: (*parser).callonInlineElementWithoutSubtitution763,
																															expr: &labeledExpr{
																																pos:   position{line: 237, col: 19, offset: 8403},
																																label: "value",
																																expr: &zeroOrMoreExpr{
																																	pos: position{line: 237, col: 25, offset: 8409},
																																	expr: &choiceExpr{
																																		pos: position{line: 237, col: 26, offset: 8410},
																																		alternatives: []interface{}{
																																			&actionExpr{
																																				pos: position{line: 1205, col: 14, offset: 47940},
																																				run: (*parser).callonInlineElementWithoutSubtitution767,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1205, col: 14, offset: 47940},
																																					expr: &charClassMatcher{
																																						pos:        position{line: 1205, col: 14, offset: 47940},
																																						val:        "[a-zA-Z0-9]",
																																						ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																						ignoreCase: false,
																																						inverted:   false,
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 1215, col: 11, offset: 48287},
																																				run: (*parser).callonInlineElementWithoutSubtitution770,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1215, col: 11, offset: 48287},
																																					expr: &choiceExpr{
																																						pos: position{line: 1243, col: 7, offset: 48832},
																																						alternatives: []interface{}{
																																							&litMatcher{
																																								pos:        position{line: 1243, col: 7, offset: 48832},
																																								val:        " ",
																																								ignoreCase: false,
																																							},
																																							&actionExpr{
																																								pos: position{line: 1243, col: 13, offset: 48838},
																																								run: (*parser).callonInlineElementWithoutSubtitution774,
																																								expr: &litMatcher{
																																									pos:        position{line: 1243, col: 13, offset: 48838},
																																									val:        "\t",
																																									ignoreCase: false,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 237, col: 47, offset: 8431},
																																				run: (*parser).callonInlineElementWithoutSubtitution776,
																																				expr: &seqExpr{
																																					pos: position{line: 237, col: 48, offset: 8432},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 237, col: 48, offset: 8432},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 49, offset: 8433},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 237, col: 53, offset: 8437},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 54, offset: 8438},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 237, col: 58, offset: 8442},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 59, offset: 8443},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 237, col: 64, offset: 8448,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 225, col: 67, offset: 8017},
																														expr: &litMatcher{
																															pos:        position{line: 225, col: 67, offset: 8017},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 225, col: 72, offset: 8022},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonInlineElementWithoutSubtitution790,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 227, col: 5, offset: 8106},
																											run: (*parser).callonInlineElementWithoutSubtitution792,
																											expr: &seqExpr{
																												pos: position{line: 227, col: 5, offset: 8106},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 227, col: 5, offset: 8106},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 231, col: 17, offset: 8231},
																															run: (*parser).callonInlineElementWithoutSubtitution795,
																															expr: &seqExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 231, col: 17, offset: 8231},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9116},
																																			run: (*parser).callonInlineElementWithoutSubtitution798,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9116},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 28, offset: 8242},
																																		expr: &actionExpr{
																																			pos: position{line: 282, col: 14, offset: 9780},
																																			run: (*parser).callonInlineElementWithoutSubtitution801,
																																			expr: &litMatcher{
																																				pos:        position{line: 282, col: 14, offset: 9780},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 39, offset: 8253},
																																		expr: &actionExpr{
																																			pos: position{line: 1170, col: 16, offset: 47067},
																																			run: (*parser).callonInlineElementWithoutSubtitution804,
																																			expr: &litMatcher{
																																				pos:        position{line: 1170, col: 16, offset: 47067},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 231, col: 52, offset: 8266},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 231, col: 56, offset: 8270},
																																			expr: &choiceExpr{
																																				pos: position{line: 231, col: 57, offset: 8271},
																																				alternatives: []interface{}{
																																					&actionExpr{
																																						pos: position{line: 1205, col: 14, offset: 47940},
																																						run: (*parser).callonInlineElementWithoutSubtitution809,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1205, col: 14, offset: 47940},
																																							expr: &charClassMatcher{
																																								pos:        position{line: 1205, col: 14, offset: 47940},
																																								val:        "[a-zA-Z0-9]",
																																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																								ignoreCase: false,
																																								inverted:   false,
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 1215, col: 11, offset: 48287},
																																						run: (*parser).callonInlineElementWithoutSubtitution812,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1215, col: 11, offset: 48287},
																																							expr: &choiceExpr{
																																								pos: position{line: 1243, col: 7, offset: 48832},
																																								alternatives: []interface{}{
																																									&litMatcher{
																																										pos:        position{line: 1243, col: 7, offset: 48832},
																																										val:        " ",
																																										ignoreCase: false,
																																									},
																																									&actionExpr{
																																										pos: position{line: 1243, col: 13, offset: 48838},
																																										run: (*parser).callonInlineElementWithoutSubtitution816,
																																										expr: &litMatcher{
																																											pos:        position{line: 1243, col: 13, offset: 48838},
																																											val:        "\t",
																																											ignoreCase: false,
																																										},
																																									},
																																								},
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 231, col: 78, offset: 8292},
																																						run: (*parser).callonInlineElementWithoutSubtitution818,
																																						expr: &seqExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							exprs: []interface{}{
																																								&notExpr{
																																									pos: position{line: 231, col: 79, offset: 8293},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 80, offset: 8294},
																																										val:        "=",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 84, offset: 8298},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 85, offset: 8299},
																																										val:        ",",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 89, offset: 8303},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 90, offset: 8304},
																																										val:        "]",
																																										ignoreCase: false,
																																									},
																																								},
																																								&anyMatcher{
																																									line: 231, col: 95, offset: 8309,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 227, col: 24, offset: 8125},
																														expr: &litMatcher{
																															pos:        position{line: 227, col: 24, offset: 8125},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 227, col: 29, offset: 8130},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonInlineElementWithoutSubtitution832,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 856, col: 40, offset: 34907},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																			&actionExpr{
																				pos: position{line: 858, col: 5, offset: 34992},
																				run: (*parser).callonInlineElementWithoutSubtitution835,
																				expr: &seqExpr{
																					pos: position{line: 858, col: 5, offset: 34992},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 858, col: 5, offset: 34992},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 858, col: 9, offset: 34996},
																							label: "otherAttrs",
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 858, col: 20, offset: 35007},
																								expr: &choiceExpr{
																									pos: position{line: 225, col: 21, offset: 7971},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 225, col: 21, offset: 7971},
																											run: (*parser).callonInlineElementWithoutSubtitution841,
																											expr: &seqExpr{
																												pos: position{line: 225, col: 21, offset: 7971},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 225, col: 21, offset: 7971},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 231, col: 17, offset: 8231},
																															run: (*parser).callonInlineElementWithoutSubtitution844,
																															expr: &seqExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 231, col: 17, offset: 8231},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9116},
																																			run: (*parser).callonInlineElementWithoutSubtitution847,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9116},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 28, offset: 8242},
																																		expr: &actionExpr{
																																			pos: position{line: 282, col: 14, offset: 9780},
																																			run: (*parser).callonInlineElementWithoutSubtitution850,
																																			expr: &litMatcher{
																																				pos:        position{line: 282, col: 14, offset: 9780},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 39, offset: 8253},
																																		expr: &actionExpr{
																																			pos: position{line: 1170, col: 16, offset: 47067},
																																			run: (*parser).callonInlineElementWithoutSubtitution853,
																																			expr: &litMatcher{
																																				pos:        position{line: 1170, col: 16, offset: 47067},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 231, col: 52, offset: 8266},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 231, col: 56, offset: 8270},
																																			expr: &choiceExpr{
																																				pos: position{line: 231, col: 57, offset: 8271},
																																				alternatives: []interface{}{
																																					&actionExpr{
																																						pos: position{line: 1205, col: 14, offset: 47940},
																																						run: (*parser).callonInlineElementWithoutSubtitution858,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1205, col: 14, offset: 47940},
																																							expr: &charClassMatcher{
																																								pos:        position{line: 1205, col: 14, offset: 47940},
																																								val:        "[a-zA-Z0-9]",
																																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																								ignoreCase: false,
																																								inverted:   false,
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 1215, col: 11, offset: 48287},
																																						run: (*parser).callonInlineElementWithoutSubtitution861,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1215, col: 11, offset: 48287},
																																							expr: &choiceExpr{
																																								pos: position{line: 1243, col: 7, offset: 48832},
																																								alternatives: []interface{}{
																																									&litMatcher{
																																										pos:        position{line: 1243, col: 7, offset: 48832},
																																										val:        " ",
																																										ignoreCase: false,
																																									},
																																									&actionExpr{
																																										pos: position{line: 1243, col: 13, offset: 48838},
																																										run: (*parser).callonInlineElementWithoutSubtitution865,
																																										expr: &litMatcher{
																																											pos:        position{line: 1243, col: 13, offset: 48838},
																																											val:        "\t",
																																											ignoreCase: false,
																																										},
																																									},
																																								},
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 231, col: 78, offset: 8292},
																																						run: (*parser).callonInlineElementWithoutSubtitution867,
																																						expr: &seqExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							exprs: []interface{}{
																																								&notExpr{
																																									pos: position{line: 231, col: 79, offset: 8293},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 80, offset: 8294},
																																										val:        "=",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 84, offset: 8298},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 85, offset: 8299},
																																										val:        ",",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 89, offset: 8303},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 90, offset: 8304},
																																										val:        "]",
																																										ignoreCase: false,
																																									},
																																								},
																																								&anyMatcher{
																																									line: 231, col: 95, offset: 8309,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&litMatcher{
																														pos:        position{line: 225, col: 40, offset: 7990},
																														val:        "=",
																														ignoreCase: false,
																													},
																													&labeledExpr{
																														pos:   position{line: 225, col: 44, offset: 7994},
																														label: "value",
																														expr: &actionExpr{
																															pos: position{line: 237, col: 19, offset: 8403},
																															run: (*parser).callonInlineElementWithoutSubtitution878,
																															expr: &labeledExpr{
																																pos:   position{line: 237, col: 19, offset: 8403},
																																label: "value",
																																expr: &zeroOrMoreExpr{
																																	pos: position{line: 237, col: 25, offset: 8409},
																																	expr: &choiceExpr{
																																		pos: position{line: 237, col: 26, offset: 8410},
																																		alternatives: []interface{}{
																																			&actionExpr{
																																				pos: position{line: 1205, col: 14, offset: 47940},
																																				run: (*parser).callonInlineElementWithoutSubtitution882,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1205, col: 14, offset: 47940},
																																					expr: &charClassMatcher{
																																						pos:        position{line: 1205, col: 14, offset: 47940},
																																						val:        "[a-zA-Z0-9]",
																																						ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																						ignoreCase: false,
																																						inverted:   false,
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 1215, col: 11, offset: 48287},
																																				run: (*parser).callonInlineElementWithoutSubtitution885,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1215, col: 11, offset: 48287},
																																					expr: &choiceExpr{
																																						pos: position{line: 1243, col: 7, offset: 48832},
																																						alternatives: []interface{}{
																																							&litMatcher{
																																								pos:        position{line: 1243, col: 7, offset: 48832},
																																								val:        " ",
																																								ignoreCase: false,
																																							},
																																							&actionExpr{
																																								pos: position{line: 1243, col: 13, offset: 48838},
																																								run: (*parser).callonInlineElementWithoutSubtitution889,
																																								expr: &litMatcher{
																																									pos:        position{line: 1243, col: 13, offset: 48838},
																																									val:        "\t",
																																									ignoreCase: false,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 237, col: 47, offset: 8431},
																																				run: (*parser).callonInlineElementWithoutSubtitution891,
																																				expr: &seqExpr{
																																					pos: position{line: 237, col: 48, offset: 8432},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 237, col: 48, offset: 8432},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 49, offset: 8433},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 237, col: 53, offset: 8437},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 54, offset: 8438},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 237, col: 58, offset: 8442},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 59, offset: 8443},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 237, col: 64, offset: 8448,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 225, col: 67, offset: 8017},
																														expr: &litMatcher{
																															pos:        position{line: 225, col: 67, offset: 8017},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 225, col: 72, offset: 8022},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonInlineElementWithoutSubtitution905,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 227, col: 5, offset: 8106},
																											run: (*parser).callonInlineElementWithoutSubtitution907,
																											expr: &seqExpr{
																												pos: position{line: 227, col: 5, offset: 8106},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 227, col: 5, offset: 8106},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 231, col: 17, offset: 8231},
																															run: (*parser).callonInlineElementWithoutSubtitution910,
																															expr: &seqExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 231, col: 17, offset: 8231},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9116},
																																			run: (*parser).callonInlineElementWithoutSubtitution913,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9116},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 28, offset: 8242},
																																		expr: &actionExpr{
																																			pos: position{line: 282, col: 14, offset: 9780},
																																			run: (*parser).callonInlineElementWithoutSubtitution916,
																																			expr: &litMatcher{
																																				pos:        position{line: 282, col: 14, offset: 9780},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 39, offset: 8253},
																																		expr: &actionExpr{
																																			pos: position{line: 1170, col: 16, offset: 47067},
																																			run: (*parser).callonInlineElementWithoutSubtitution919,
																																			expr: &litMatcher{
																																				pos:        position{line: 1170, col: 16, offset: 47067},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 231, col: 52, offset: 8266},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 231, col: 56, offset: 8270},
																																			expr: &choiceExpr{
																																				pos: position{line: 231, col: 57, offset: 8271},
																																				alternatives: []interface{}{
																																					&actionExpr{
																																						pos: position{line: 1205, col: 14, offset: 47940},
																																						run: (*parser).callonInlineElementWithoutSubtitution924,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1205, col: 14, offset: 47940},
																																							expr: &charClassMatcher{
																																								pos:        position{line: 1205, col: 14, offset: 47940},
																																								val:        "[a-zA-Z0-9]",
																																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																								ignoreCase: false,
																																								inverted:   false,
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 1215, col: 11, offset: 48287},
																																						run: (*parser).callonInlineElementWithoutSubtitution927,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1215, col: 11, offset: 48287},
																																							expr: &choiceExpr{
																																								pos: position{line: 1243, col: 7, offset: 48832},
																																								alternatives: []interface{}{
																																									&litMatcher{
																																										pos:        position{line: 1243, col: 7, offset: 48832},
																																										val:        " ",
																																										ignoreCase: false,
																																									},
																																									&actionExpr{
																																										pos: position{line: 1243, col: 13, offset: 48838},
																																										run: (*parser).callonInlineElementWithoutSubtitution931,
																																										expr: &litMatcher{
																																											pos:        position{line: 1243, col: 13, offset: 48838},
																																											val:        "\t",
																																											ignoreCase: false,
																																										},
																																									},
																																								},
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 231, col: 78, offset: 8292},
																																						run: (*parser).callonInlineElementWithoutSubtitution933,
																																						expr: &seqExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							exprs: []interface{}{
																																								&notExpr{
																																									pos: position{line: 231, col: 79, offset: 8293},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 80, offset: 8294},
																																										val:        "=",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 84, offset: 8298},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 85, offset: 8299},
																																										val:        ",",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 89, offset: 8303},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 90, offset: 8304},
																																										val:        "]",
																																										ignoreCase: false,
																																									},
																																								},
																																								&anyMatcher{
																																									line: 231, col: 95, offset: 8309,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 227, col: 24, offset: 8125},
																														expr: &litMatcher{
																															pos:        position{line: 227, col: 24, offset: 8125},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 227, col: 29, offset: 8130},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonInlineElementWithoutSubtitution947,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 858, col: 40, offset: 35027},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 836, col: 17, offset: 34211},
														run: (*parser).callonInlineElementWithoutSubtitution950,
														expr: &seqExpr{
															pos: position{line: 836, col: 17, offset: 34211},
															exprs: []interface{}{
																&labeledExpr{
																	pos:   position{line: 836, col: 17, offset: 34211},
																	label: "url",
																	expr: &actionExpr{
																		pos: position{line: 842, col: 20, offset: 34458},
																		run: (*parser).callonInlineElementWithoutSubtitution953,
																		expr: &seqExpr{
																			pos: position{line: 842, col: 20, offset: 34458},
																			exprs: []interface{}{
																				&choiceExpr{
																					pos: position{line: 1237, col: 15, offset: 48717},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1237, col: 15, offset: 48717},
																							val:        "http://",
																							ignoreCase: false,
																						},
																						&litMatcher{
																							pos:        position{line: 1237, col: 27, offset: 48729},
																							val:        "https://",
																							ignoreCase: false,
																						},
																						&litMatcher{
																							pos:        position{line: 1237, col: 40, offset: 48742},
																							val:        "ftp://",
																							ignoreCase: false,
																						},
																						&litMatcher{
																							pos:        position{line: 1237, col: 51, offset: 48753},
																							val:        "irc://",
																							ignoreCase: false,
																						},
																						&litMatcher{
																							pos:        position{line: 1237, col: 62, offset: 48764},
																							val:        "mailto:",
																							ignoreCase: false,
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 1219, col: 8, offset: 48334},
																					run: (*parser).callonInlineElementWithoutSubtitution961,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1219, col: 8, offset: 48334},
																						expr: &choiceExpr{
																							pos: position{line: 1219, col: 9, offset: 48335},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 1205, col: 14, offset: 47940},
																									run: (*parser).callonInlineElementWithoutSubtitution964,
																									expr: &oneOrMoreExpr{
																										pos: position{line: 1205, col: 14, offset: 47940},
																										expr: &charClassMatcher{
																											pos:        position{line: 1205, col: 14, offset: 47940},
																											val:        "[a-zA-Z0-9]",
																											ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																											ignoreCase: false,
																											inverted:   false,
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 1219, col: 21, offset: 48347},
																									run: (*parser).callonInlineElementWithoutSubtitution967,
																									expr: &seqExpr{
																										pos: position{line: 1219, col: 22, offset: 48348},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 1219, col: 22, offset: 48348},
																												expr: &choiceExpr{
																													pos: position{line: 1247, col: 12, offset: 48890},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1247, col: 12, offset: 48890},
																															val:        "\r\n",
																															ignoreCase: false,
																														},
																														&charClassMatcher{
																															pos:        position{line: 1247, col: 21, offset: 48899},
																															val:        "[\\r\\n]",
																															chars:      []rune{'\r', '\n'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 1219, col: 31, offset: 48357},
																												expr: &choiceExpr{
																													pos: position{line: 1243, col: 7, offset: 48832},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1243, col: 7, offset: 48832},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1243, col: 13, offset: 48838},
																															run: (*parser).callonInlineElementWithoutSubtitution976,
																															expr: &litMatcher{
																																pos:        position{line: 1243, col: 13, offset: 48838},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 1219, col: 35, offset: 48361},
																												expr: &litMatcher{
																													pos:        position{line: 1219, col: 36, offset: 48362},
																													val:        "[",
																													ignoreCase: false,
																												},
																											},
																											&notExpr{
																												pos: position{line: 1219, col: 40, offset: 48366},
																												expr: &litMatcher{
																													pos:        position{line: 1219, col: 41, offset: 48367},
																													val:        "]",
																													ignoreCase: false,
																												},
																											},
																											&anyMatcher{
																												line: 1219, col: 46, offset: 48372,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 836, col: 39, offset: 34233},
																	label: "inlineAttributes",
																	expr: &choiceExpr{
																		pos: position{line: 855, col: 19, offset: 34839},
																		alternatives: []interface{}{
																			&actionExpr{
																				pos: position{line: 855, col: 19, offset: 34839},
																				run: (*parser).callonInlineElementWithoutSubtitution985,
																				expr: &seqExpr{
																					pos: position{line: 855, col: 19, offset: 34839},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 855, col: 19, offset: 34839},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 855, col: 23, offset: 34843},
																							label: "text",
																							expr: &actionExpr{
																								pos: position{line: 862, col: 22, offset: 35131},
																								run: (*parser).callonInlineElementWithoutSubtitution989,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 862, col: 22, offset: 35131},
																									expr: &choiceExpr{
																										pos: position{line: 862, col: 23, offset: 35132},
																										alternatives: []interface{}{
																											&actionExpr{
																												pos: position{line: 1205, col: 14, offset: 47940},
																												run: (*parser).callonInlineElementWithoutSubtitution992,
																												expr: &oneOrMoreExpr{
																													pos: position{line: 1205, col: 14, offset: 47940},
																													expr: &charClassMatcher{
																														pos:        position{line: 1205, col: 14, offset: 47940},
																														val:        "[a-zA-Z0-9]",
																														ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																											&actionExpr{
																												pos: position{line: 1215, col: 11, offset: 48287},
																												run: (*parser).callonInlineElementWithoutSubtitution995,
																												expr: &oneOrMoreExpr{
																													pos: position{line: 1215, col: 11, offset: 48287},
																													expr: &choiceExpr{
																														pos: position{line: 1243, col: 7, offset: 48832},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1243, col: 7, offset: 48832},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1243, col: 13, offset: 48838},
																																run: (*parser).callonInlineElementWithoutSubtitution999,
																																expr: &litMatcher{
																																	pos:        position{line: 1243, col: 13, offset: 48838},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																											&actionExpr{
																												pos: position{line: 862, col: 44, offset: 35153},
																												run: (*parser).callonInlineElementWithoutSubtitution1001,
																												expr: &seqExpr{
																													pos: position{line: 862, col: 45, offset: 35154},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 862, col: 45, offset: 35154},
																															expr: &litMatcher{
																																pos:        position{line: 862, col: 46, offset: 35155},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 862, col: 50, offset: 35159},
																															expr: &litMatcher{
																																pos:        position{line: 862, col: 51, offset: 35160},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 862, col: 56, offset: 35165,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&labeledExpr{
																							pos:   position{line: 856, col: 9, offset: 34876},
																							label: "otherAttrs",
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 856, col: 20, offset: 34887},
																								expr: &choiceExpr{
																									pos: position{line: 225, col: 21, offset: 7971},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 225, col: 21, offset: 7971},
																											run: (*parser).callonInlineElementWithoutSubtitution1011,
																											expr: &seqExpr{
																												pos: position{line: 225, col: 21, offset: 7971},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 225, col: 21, offset: 7971},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 231, col: 17, offset: 8231},
																															run: (*parser).callonInlineElementWithoutSubtitution1014,
																															expr: &seqExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 231, col: 17, offset: 8231},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9116},
																																			run: (*parser).callonInlineElementWithoutSubtitution1017,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9116},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 28, offset: 8242},
																																		expr: &actionExpr{
																																			pos: position{line: 282, col: 14, offset: 9780},
																																			run: (*parser).callonInlineElementWithoutSubtitution1020,
																																			expr: &litMatcher{
																																				pos:        position{line: 282, col: 14, offset: 9780},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 39, offset: 8253},
																																		expr: &actionExpr{
																																			pos: position{line: 1170, col: 16, offset: 47067},
																																			run: (*parser).callonInlineElementWithoutSubtitution1023,
																																			expr: &litMatcher{
																																				pos:        position{line: 1170, col: 16, offset: 47067},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 231, col: 52, offset: 8266},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 231, col: 56, offset: 8270},
																																			expr: &choiceExpr{
																																				pos: position{line: 231, col: 57, offset: 8271},
																																				alternatives: []interface{}{
																																					&actionExpr{
																																						pos: position{line: 1205, col: 14, offset: 47940},
																																						run: (*parser).callonInlineElementWithoutSubtitution1028,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1205, col: 14, offset: 47940},
																																							expr: &charClassMatcher{
																																								pos:        position{line: 1205, col: 14, offset: 47940},
																																								val:        "[a-zA-Z0-9]",
																																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																								ignoreCase: false,
																																								inverted:   false,
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 1215, col: 11, offset: 48287},
																																						run: (*parser).callonInlineElementWithoutSubtitution1031,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1215, col: 11, offset: 48287},
																																							expr: &choiceExpr{
																																								pos: position{line: 1243, col: 7, offset: 48832},
																																								alternatives: []interface{}{
																																									&litMatcher{
																																										pos:        position{line: 1243, col: 7, offset: 48832},
																																										val:        " ",
																																										ignoreCase: false,
																																									},
																																									&actionExpr{
																																										pos: position{line: 1243, col: 13, offset: 48838},
																																										run: (*parser).callonInlineElementWithoutSubtitution1035,
																																										expr: &litMatcher{
																																											pos:        position{line: 1243, col: 13, offset: 48838},
																																											val:        "\t",
																																											ignoreCase: false,
																																										},
																																									},
																																								},
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 231, col: 78, offset: 8292},
																																						run: (*parser).callonInlineElementWithoutSubtitution1037,
																																						expr: &seqExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							exprs: []interface{}{
																																								&notExpr{
																																									pos: position{line: 231, col: 79, offset: 8293},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 80, offset: 8294},
																																										val:        "=",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 84, offset: 8298},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 85, offset: 8299},
																																										val:        ",",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 89, offset: 8303},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 90, offset: 8304},
																																										val:        "]",
																																										ignoreCase: false,
																																									},
																																								},
																																								&anyMatcher{
																																									line: 231, col: 95, offset: 8309,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&litMatcher{
																														pos:        position{line: 225, col: 40, offset: 7990},
																														val:        "=",
																														ignoreCase: false,
																													},
																													&labeledExpr{
																														pos:   position{line: 225, col: 44, offset: 7994},
																														label: "value",
																														expr: &actionExpr{
																															pos: position{line: 237, col: 19, offset: 8403},
																															run: (*parser).callonInlineElementWithoutSubtitution1048,
																															expr: &labeledExpr{
																																pos:   position{line: 237, col: 19, offset: 8403},
																																label: "value",
																																expr: &zeroOrMoreExpr{
																																	pos: position{line: 237, col: 25, offset: 8409},
																																	expr: &choiceExpr{
																																		pos: position{line: 237, col: 26, offset: 8410},
																																		alternatives: []interface{}{
																																			&actionExpr{
																																				pos: position{line: 1205, col: 14, offset: 47940},
																																				run: (*parser).callonInlineElementWithoutSubtitution1052,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1205, col: 14, offset: 47940},
																																					expr: &charClassMatcher{
																																						pos:        position{line: 1205, col: 14, offset: 47940},
																																						val:        "[a-zA-Z0-9]",
																																						ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																						ignoreCase: false,
																																						inverted:   false,
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 1215, col: 11, offset: 48287},
																																				run: (*parser).callonInlineElementWithoutSubtitution1055,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1215, col: 11, offset: 48287},
																																					expr: &choiceExpr{
																																						pos: position{line: 1243, col: 7, offset: 48832},
																																						alternatives: []interface{}{
																																							&litMatcher{
																																								pos:        position{line: 1243, col: 7, offset: 48832},
																																								val:        " ",
																																								ignoreCase: false,
																																							},
																																							&actionExpr{
																																								pos: position{line: 1243, col: 13, offset: 48838},
																																								run: (*parser).callonInlineElementWithoutSubtitution1059,
																																								expr: &litMatcher{
																																									pos:        position{line: 1243, col: 13, offset: 48838},
																																									val:        "\t",
																																									ignoreCase: false,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 237, col: 47, offset: 8431},
																																				run: (*parser).callonInlineElementWithoutSubtitution1061,
																																				expr: &seqExpr{
																																					pos: position{line: 237, col: 48, offset: 8432},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 237, col: 48, offset: 8432},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 49, offset: 8433},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 237, col: 53, offset: 8437},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 54, offset: 8438},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 237, col: 58, offset: 8442},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 59, offset: 8443},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 237, col: 64, offset: 8448,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 225, col: 67, offset: 8017},
																														expr: &litMatcher{
																															pos:        position{line: 225, col: 67, offset: 8017},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 225, col: 72, offset: 8022},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonInlineElementWithoutSubtitution1075,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 227, col: 5, offset: 8106},
																											run: (*parser).callonInlineElementWithoutSubtitution1077,
																											expr: &seqExpr{
																												pos: position{line: 227, col: 5, offset: 8106},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 227, col: 5, offset: 8106},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 231, col: 17, offset: 8231},
																															run: (*parser).callonInlineElementWithoutSubtitution1080,
																															expr: &seqExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 231, col: 17, offset: 8231},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9116},
																																			run: (*parser).callonInlineElementWithoutSubtitution1083,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9116},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 28, offset: 8242},
																																		expr: &actionExpr{
																																			pos: position{line: 282, col: 14, offset: 9780},
																																			run: (*parser).callonInlineElementWithoutSubtitution1086,
																																			expr: &litMatcher{
																																				pos:        position{line: 282, col: 14, offset: 9780},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 39, offset: 8253},
																																		expr: &actionExpr{
																																			pos: position{line: 1170, col: 16, offset: 47067},
																																			run: (*parser).callonInlineElementWithoutSubtitution1089,
																																			expr: &litMatcher{
																																				pos:        position{line: 1170, col: 16, offset: 47067},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 231, col: 52, offset: 8266},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 231, col: 56, offset: 8270},
																																			expr: &choiceExpr{
																																				pos: position{line: 231, col: 57, offset: 8271},
																																				alternatives: []interface{}{
																																					&actionExpr{
																																						pos: position{line: 1205, col: 14, offset: 47940},
																																						run: (*parser).callonInlineElementWithoutSubtitution1094,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1205, col: 14, offset: 47940},
																																							expr: &charClassMatcher{
																																								pos:        position{line: 1205, col: 14, offset: 47940},
																																								val:        "[a-zA-Z0-9]",
																																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																								ignoreCase: false,
																																								inverted:   false,
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 1215, col: 11, offset: 48287},
																																						run: (*parser).callonInlineElementWithoutSubtitution1097,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1215, col: 11, offset: 48287},
																																							expr: &choiceExpr{
																																								pos: position{line: 1243, col: 7, offset: 48832},
																																								alternatives: []interface{}{
																																									&litMatcher{
																																										pos:        position{line: 1243, col: 7, offset: 48832},
																																										val:        " ",
																																										ignoreCase: false,
																																									},
																																									&actionExpr{
																																										pos: position{line: 1243, col: 13, offset: 48838},
																																										run: (*parser).callonInlineElementWithoutSubtitution1101,
																																										expr: &litMatcher{
																																											pos:        position{line: 1243, col: 13, offset: 48838},
																																											val:        "\t",
																																											ignoreCase: false,
																																										},
																																									},
																																								},
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 231, col: 78, offset: 8292},
																																						run: (*parser).callonInlineElementWithoutSubtitution1103,
																																						expr: &seqExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							exprs: []interface{}{
																																								&notExpr{
																																									pos: position{line: 231, col: 79, offset: 8293},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 80, offset: 8294},
																																										val:        "=",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 84, offset: 8298},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 85, offset: 8299},
																																										val:        ",",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 89, offset: 8303},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 90, offset: 8304},
																																										val:        "]",
																																										ignoreCase: false,
																																									},
																																								},
																																								&anyMatcher{
																																									line: 231, col: 95, offset: 8309,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 227, col: 24, offset: 8125},
																														expr: &litMatcher{
																															pos:        position{line: 227, col: 24, offset: 8125},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 227, col: 29, offset: 8130},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonInlineElementWithoutSubtitution1117,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 856, col: 40, offset: 34907},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																			&actionExpr{
																				pos: position{line: 858, col: 5, offset: 34992},
																				run: (*parser).callonInlineElementWithoutSubtitution1120,
																				expr: &seqExpr{
																					pos: position{line: 858, col: 5, offset: 34992},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 858, col: 5, offset: 34992},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 858, col: 9, offset: 34996},
																							label: "otherAttrs",
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 858, col: 20, offset: 35007},
																								expr: &choiceExpr{
																									pos: position{line: 225, col: 21, offset: 7971},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 225, col: 21, offset: 7971},
																											run: (*parser).callonInlineElementWithoutSubtitution1126,
																											expr: &seqExpr{
																												pos: position{line: 225, col: 21, offset: 7971},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 225, col: 21, offset: 7971},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 231, col: 17, offset: 8231},
																															run: (*parser).callonInlineElementWithoutSubtitution1129,
																															expr: &seqExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 231, col: 17, offset: 8231},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9116},
																																			run: (*parser).callonInlineElementWithoutSubtitution1132,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9116},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 28, offset: 8242},
																																		expr: &actionExpr{
																																			pos: position{line: 282, col: 14, offset: 9780},
																																			run: (*parser).callonInlineElementWithoutSubtitution1135,
																																			expr: &litMatcher{
																																				pos:        position{line: 282, col: 14, offset: 9780},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 39, offset: 8253},
																																		expr: &actionExpr{
																																			pos: position{line: 1170, col: 16, offset: 47067},
																																			run: (*parser).callonInlineElementWithoutSubtitution1138,
																																			expr: &litMatcher{
																																				pos:        position{line: 1170, col: 16, offset: 47067},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 231, col: 52, offset: 8266},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 231, col: 56, offset: 8270},
																																			expr: &choiceExpr{
																																				pos: position{line: 231, col: 57, offset: 8271},
																																				alternatives: []interface{}{
																																					&actionExpr{
																																						pos: position{line: 1205, col: 14, offset: 47940},
																																						run: (*parser).callonInlineElementWithoutSubtitution1143,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1205, col: 14, offset: 47940},
																																							expr: &charClassMatcher{
																																								pos:        position{line: 1205, col: 14, offset: 47940},
																																								val:        "[a-zA-Z0-9]",
																																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																								ignoreCase: false,
																																								inverted:   false,
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 1215, col: 11, offset: 48287},
																																						run: (*parser).callonInlineElementWithoutSubtitution1146,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1215, col: 11, offset: 48287},
																																							expr: &choiceExpr{
																																								pos: position{line: 1243, col: 7, offset: 48832},
																																								alternatives: []interface{}{
																																									&litMatcher{
																																										pos:        position{line: 1243, col: 7, offset: 48832},
																																										val:        " ",
																																										ignoreCase: false,
																																									},
																																									&actionExpr{
																																										pos: position{line: 1243, col: 13, offset: 48838},
																																										run: (*parser).callonInlineElementWithoutSubtitution1150,
																																										expr: &litMatcher{
																																											pos:        position{line: 1243, col: 13, offset: 48838},
																																											val:        "\t",
																																											ignoreCase: false,
																																										},
																																									},
																																								},
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 231, col: 78, offset: 8292},
																																						run: (*parser).callonInlineElementWithoutSubtitution1152,
																																						expr: &seqExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							exprs: []interface{}{
																																								&notExpr{
																																									pos: position{line: 231, col: 79, offset: 8293},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 80, offset: 8294},
																																										val:        "=",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 84, offset: 8298},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 85, offset: 8299},
																																										val:        ",",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 89, offset: 8303},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 90, offset: 8304},
																																										val:        "]",
																																										ignoreCase: false,
																																									},
																																								},
																																								&anyMatcher{
																																									line: 231, col: 95, offset: 8309,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&litMatcher{
																														pos:        position{line: 225, col: 40, offset: 7990},
																														val:        "=",
																														ignoreCase: false,
																													},
																													&labeledExpr{
																														pos:   position{line: 225, col: 44, offset: 7994},
																														label: "value",
																														expr: &actionExpr{
																															pos: position{line: 237, col: 19, offset: 8403},
																															run: (*parser).callonInlineElementWithoutSubtitution1163,
																															expr: &labeledExpr{
																																pos:   position{line: 237, col: 19, offset: 8403},
																																label: "value",
																																expr: &zeroOrMoreExpr{
																																	pos: position{line: 237, col: 25, offset: 8409},
																																	expr: &choiceExpr{
																																		pos: position{line: 237, col: 26, offset: 8410},
																																		alternatives: []interface{}{
																																			&actionExpr{
																																				pos: position{line: 1205, col: 14, offset: 47940},
																																				run: (*parser).callonInlineElementWithoutSubtitution1167,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1205, col: 14, offset: 47940},
																																					expr: &charClassMatcher{
																																						pos:        position{line: 1205, col: 14, offset: 47940},
																																						val:        "[a-zA-Z0-9]",
																																						ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																						ignoreCase: false,
																																						inverted:   false,
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 1215, col: 11, offset: 48287},
																																				run: (*parser).callonInlineElementWithoutSubtitution1170,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1215, col: 11, offset: 48287},
																																					expr: &choiceExpr{
																																						pos: position{line: 1243, col: 7, offset: 48832},
																																						alternatives: []interface{}{
																																							&litMatcher{
																																								pos:        position{line: 1243, col: 7, offset: 48832},
																																								val:        " ",
																																								ignoreCase: false,
																																							},
																																							&actionExpr{
																																								pos: position{line: 1243, col: 13, offset: 48838},
																																								run: (*parser).callonInlineElementWithoutSubtitution1174,
																																								expr: &litMatcher{
																																									pos:        position{line: 1243, col: 13, offset: 48838},
																																									val:        "\t",
																																									ignoreCase: false,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 237, col: 47, offset: 8431},
																																				run: (*parser).callonInlineElementWithoutSubtitution1176,
																																				expr: &seqExpr{
																																					pos: position{line: 237, col: 48, offset: 8432},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 237, col: 48, offset: 8432},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 49, offset: 8433},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 237, col: 53, offset: 8437},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 54, offset: 8438},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 237, col: 58, offset: 8442},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 59, offset: 8443},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 237, col: 64, offset: 8448,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 225, col: 67, offset: 8017},
																														expr: &litMatcher{
																															pos:        position{line: 225, col: 67, offset: 8017},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 225, col: 72, offset: 8022},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonInlineElementWithoutSubtitution1190,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 227, col: 5, offset: 8106},
																											run: (*parser).callonInlineElementWithoutSubtitution1192,
																											expr: &seqExpr{
																												pos: position{line: 227, col: 5, offset: 8106},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 227, col: 5, offset: 8106},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 231, col: 17, offset: 8231},
																															run: (*parser).callonInlineElementWithoutSubtitution1195,
																															expr: &seqExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 231, col: 17, offset: 8231},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9116},
																																			run: (*parser).callonInlineElementWithoutSubtitution1198,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9116},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 28, offset: 8242},
																																		expr: &actionExpr{
																																			pos: position{line: 282, col: 14, offset: 9780},
																																			run: (*parser).callonInlineElementWithoutSubtitution1201,
																																			expr: &litMatcher{
																																				pos:        position{line: 282, col: 14, offset: 9780},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 39, offset: 8253},
																																		expr: &actionExpr{
																																			pos: position{line: 1170, col: 16, offset: 47067},
																																			run: (*parser).callonInlineElementWithoutSubtitution1204,
																																			expr: &litMatcher{
																																				pos:        position{line: 1170, col: 16, offset: 47067},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 231, col: 52, offset: 8266},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 231, col: 56, offset: 8270},
																																			expr: &choiceExpr{
																																				pos: position{line: 231, col: 57, offset: 8271},
																																				alternatives: []interface{}{
																																					&actionExpr{
																																						pos: position{line: 1205, col: 14, offset: 47940},
																																						run: (*parser).callonInlineElementWithoutSubtitution1209,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1205, col: 14, offset: 47940},
																																							expr: &charClassMatcher{
																																								pos:        position{line: 1205, col: 14, offset: 47940},
																																								val:        "[a-zA-Z0-9]",
																																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																								ignoreCase: false,
																																								inverted:   false,
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 1215, col: 11, offset: 48287},
																																						run: (*parser).callonInlineElementWithoutSubtitution1212,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1215, col: 11, offset: 48287},
																																							expr: &choiceExpr{
																																								pos: position{line: 1243, col: 7, offset: 48832},
																																								alternatives: []interface{}{
																																									&litMatcher{
																																										pos:        position{line: 1243, col: 7, offset: 48832},
																																										val:        " ",
																																										ignoreCase: false,
																																									},
																																									&actionExpr{
																																										pos: position{line: 1243, col: 13, offset: 48838},
																																										run: (*parser).callonInlineElementWithoutSubtitution1216,
																																										expr: &litMatcher{
																																											pos:        position{line: 1243, col: 13, offset: 48838},
																																											val:        "\t",
																																											ignoreCase: false,
																																										},
																																									},
																																								},
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 231, col: 78, offset: 8292},
																																						run: (*parser).callonInlineElementWithoutSubtitution1218,
																																						expr: &seqExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							exprs: []interface{}{
																																								&notExpr{
																																									pos: position{line: 231, col: 79, offset: 8293},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 80, offset: 8294},
																																										val:        "=",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 84, offset: 8298},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 85, offset: 8299},
																																										val:        ",",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 89, offset: 8303},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 90, offset: 8304},
																																										val:        "]",
																																										ignoreCase: false,
																																									},
																																								},
																																								&anyMatcher{
																																									line: 231, col: 95, offset: 8309,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 227, col: 24, offset: 8125},
																														expr: &litMatcher{
																															pos:        position{line: 227, col: 24, offset: 8125},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 227, col: 29, offset: 8130},
																														expr: &choiceExpr{
																															pos: position{line: 1243, col: 7, offset: 48832},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1243, col: 7, offset: 48832},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1243, col: 13, offset: 48838},
																																	run: (*parser).callonInlineElementWithoutSubtitution1232,
																																	expr: &litMatcher{
																																		pos:        position{line: 1243, col: 13, offset: 48838},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 858, col: 40, offset: 35027},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 838, col: 5, offset: 34362},
														run: (*parser).callonInlineElementWithoutSubtitution1235,
														expr: &labeledExpr{
															pos:   position{line: 838, col: 5, offset: 34362},
															label: "url",
															expr: &actionExpr{
																pos: position{line: 842, col: 20, offset: 34458},
																run: (*parser).callonInlineElementWithoutSubtitution1237,
																expr: &seqExpr{
																	pos: position{line: 842, col: 20, offset: 34458},
																	exprs: []interface{}{
																		&choiceExpr{
																			pos: position{line: 1237, col: 15, offset: 48717},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1237, col: 15, offset: 48717},
																					val:        "http://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1237, col: 27, offset: 48729},
																					val:        "https://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1237, col: 40, offset: 48742},
																					val:        "ftp://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1237, col: 51, offset: 48753},
																					val:        "irc://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1237, col: 62, offset: 48764},
																					val:        "mailto:",
																					ignoreCase: false,
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 1219, col: 8, offset: 48334},
																			run: (*parser).callonInlineElementWithoutSubtitution1245,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1219, col: 8, offset: 48334},
																				expr: &choiceExpr{
																					pos: position{line: 1219, col: 9, offset: 48335},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							run: (*parser).callonInlineElementWithoutSubtitution1248,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1205, col: 14, offset: 47940},
																								expr: &charClassMatcher{
																									pos:        position{line: 1205, col: 14, offset: 47940},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1219, col: 21, offset: 48347},
																							run: (*parser).callonInlineElementWithoutSubtitution1251,
																							expr: &seqExpr{
																								pos: position{line: 1219, col: 22, offset: 48348},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1219, col: 22, offset: 48348},
																										expr: &choiceExpr{
																											pos: position{line: 1247, col: 12, offset: 48890},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1247, col: 12, offset: 48890},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1247, col: 21, offset: 48899},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1219, col: 31, offset: 48357},
																										expr: &choiceExpr{
																											pos: position{line: 1243, col: 7, offset: 48832},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1243, col: 7, offset: 48832},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1243, col: 13, offset: 48838},
																													run: (*parser).callonInlineElementWithoutSubtitution1260,
																													expr: &litMatcher{
																														pos:        position{line: 1243, col: 13, offset: 48838},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1219, col: 35, offset: 48361},
																										expr: &litMatcher{
																											pos:        position{line: 1219, col: 36, offset: 48362},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1219, col: 40, offset: 48366},
																										expr: &litMatcher{
																											pos:        position{line: 1219, col: 41, offset: 48367},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1219, col: 46, offset: 48372,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 630, col: 82, offset: 23556},
										name: "Passthrough",
									},
									&actionExpr{
										pos: position{line: 1205, col: 14, offset: 47940},
										run: (*parser).callonInlineElementWithoutSubtitution1268,
										expr: &oneOrMoreExpr{
											pos: position{line: 1205, col: 14, offset: 47940},
											expr: &charClassMatcher{
												pos:        position{line: 1205, col: 14, offset: 47940},
												val:        "[a-zA-Z0-9]",
												ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
												ignoreCase: false,
												inverted:   false,
											},
										},
									},
									&oneOrMoreExpr{
										pos: position{line: 630, col: 108, offset: 23582},
										expr: &choiceExpr{
											pos: position{line: 1243, col: 7, offset: 48832},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1243, col: 7, offset: 48832},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1243, col: 13, offset: 48838},
													run: (*parser).callonInlineElementWithoutSubtitution1274,
													expr: &litMatcher{
														pos:        position{line: 1243, col: 13, offset: 48838},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 630, col: 114, offset: 23588},
										name: "QuotedText",
									},
									&actionExpr{
										pos: position{line: 817, col: 19, offset: 33697},
										run: (*parser).callonInlineElementWithoutSubtitution1277,
										expr: &seqExpr{
											pos: position{line: 817, col: 19, offset: 33697},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 817, col: 19, offset: 33697},
													val:        "<<",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 817, col: 24, offset: 33702},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 1225, col: 7, offset: 48453},
														run: (*parser).callonInlineElementWithoutSubtitution1281,
														expr: &oneOrMoreExpr{
															pos: position{line: 1225, col: 7, offset: 48453},
															expr: &choiceExpr{
																pos: position{line: 1225, col: 8, offset: 48454},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 1205, col: 14, offset: 47940},
																		run: (*parser).callonInlineElementWithoutSubtitution1284,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1205, col: 14, offset: 47940},
																			expr: &charClassMatcher{
																				pos:        position{line: 1205, col: 14, offset: 47940},
																				val:        "[a-zA-Z0-9]",
																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 1225, col: 20, offset: 48466},
																		run: (*parser).callonInlineElementWithoutSubtitution1287,
																		expr: &seqExpr{
																			pos: position{line: 1225, col: 21, offset: 48467},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 1225, col: 21, offset: 48467},
																					expr: &choiceExpr{
																						pos: position{line: 1247, col: 12, offset: 48890},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1247, col: 12, offset: 48890},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 1247, col: 21, offset: 48899},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 30, offset: 48476},
																					expr: &choiceExpr{
																						pos: position{line: 1243, col: 7, offset: 48832},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1243, col: 7, offset: 48832},
																								val:        " ",
																								ignoreCase: false,
																							},
																							&actionExpr{
																								pos: position{line: 1243, col: 13, offset: 48838},
																								run: (*parser).callonInlineElementWithoutSubtitution1296,
																								expr: &litMatcher{
																									pos:        position{line: 1243, col: 13, offset: 48838},
																									val:        "\t",
																									ignoreCase: false,
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 34, offset: 48480},
																					expr: &litMatcher{
																						pos:        position{line: 1225, col: 35, offset: 48481},
																						val:        "[",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 39, offset: 48485},
																					expr: &litMatcher{
																						pos:        position{line: 1225, col: 40, offset: 48486},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 44, offset: 48490},
																					expr: &litMatcher{
																						pos:        position{line: 1225, col: 45, offset: 48491},
																						val:        "<<",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 50, offset: 48496},
																					expr: &litMatcher{
																						pos:        position{line: 1225, col: 51, offset: 48497},
																						val:        ">>",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 56, offset: 48502},
																					expr: &litMatcher{
																						pos:        position{line: 1225, col: 57, offset: 48503},
																						val:        ",",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 1225, col: 62, offset: 48508,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 817, col: 32, offset: 33710},
													expr: &choiceExpr{
														pos: position{line: 1243, col: 7, offset: 48832},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1243, col: 7, offset: 48832},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1243, col: 13, offset: 48838},
																run: (*parser).callonInlineElementWithoutSubtitution1312,
																expr: &litMatcher{
																	pos:        position{line: 1243, col: 13, offset: 48838},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 817, col: 36, offset: 33714},
													val:        ",",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 817, col: 40, offset: 33718},
													label: "label",
													expr: &actionExpr{
														pos: position{line: 823, col: 24, offset: 33920},
														run: (*parser).callonInlineElementWithoutSubtitution1316,
														expr: &oneOrMoreExpr{
															pos: position{line: 823, col: 24, offset: 33920},
															expr: &choiceExpr{
																pos: position{line: 823, col: 25, offset: 33921},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 1205, col: 14, offset: 47940},
																		run: (*parser).callonInlineElementWithoutSubtitution1319,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1205, col: 14, offset: 47940},
																			expr: &charClassMatcher{
																				pos:        position{line: 1205, col: 14, offset: 47940},
																				val:        "[a-zA-Z0-9]",
																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 1215, col: 11, offset: 48287},
																		run: (*parser).callonInlineElementWithoutSubtitution1322,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1215, col: 11, offset: 48287},
																			expr: &choiceExpr{
																				pos: position{line: 1243, col: 7, offset: 48832},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1243, col: 7, offset: 48832},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1243, col: 13, offset: 48838},
																						run: (*parser).callonInlineElementWithoutSubtitution1326,
																						expr: &litMatcher{
																							pos:        position{line: 1243, col: 13, offset: 48838},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 823, col: 46, offset: 33942},
																		run: (*parser).callonInlineElementWithoutSubtitution1328,
																		expr: &seqExpr{
																			pos: position{line: 823, col: 47, offset: 33943},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 823, col: 47, offset: 33943},
																					expr: &litMatcher{
																						pos:        position{line: 823, col: 48, offset: 33944},
																						val:        ">>",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 823, col: 54, offset: 33950,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 817, col: 68, offset: 33746},
													val:        ">>",
													ignoreCase: false,
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 819, col: 5, offset: 33821},
										run: (*parser).callonInlineElementWithoutSubtitution1334,
										expr: &seqExpr{
											pos: position{line: 819, col: 5, offset: 33821},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 819, col: 5, offset: 33821},
													val:        "<<",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 819, col: 10, offset: 33826},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 1225, col: 7, offset: 48453},
														run: (*parser).callonInlineElementWithoutSubtitution1338,
														expr: &oneOrMoreExpr{
															pos: position{line: 1225, col: 7, offset: 48453},
															expr: &choiceExpr{
																pos: position{line: 1225, col: 8, offset: 48454},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 1205, col: 14, offset: 47940},
																		run: (*parser).callonInlineElementWithoutSubtitution1341,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1205, col: 14, offset: 47940},
																			expr: &charClassMatcher{
																				pos:        position{line: 1205, col: 14, offset: 47940},
																				val:        "[a-zA-Z0-9]",
																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 1225, col: 20, offset: 48466},
																		run: (*parser).callonInlineElementWithoutSubtitution1344,
																		expr: &seqExpr{
																			pos: position{line: 1225, col: 21, offset: 48467},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 1225, col: 21, offset: 48467},
																					expr: &choiceExpr{
																						pos: position{line: 1247, col: 12, offset: 48890},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1247, col: 12, offset: 48890},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 1247, col: 21, offset: 48899},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 30, offset: 48476},
																					expr: &choiceExpr{
																						pos: position{line: 1243, col: 7, offset: 48832},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1243, col: 7, offset: 48832},
																								val:        " ",
																								ignoreCase: false,
																							},
																							&actionExpr{
																								pos: position{line: 1243, col: 13, offset: 48838},
																								run: (*parser).callonInlineElementWithoutSubtitution1353,
																								expr: &litMatcher{
																									pos:        position{line: 1243, col: 13, offset: 48838},
																									val:        "\t",
																									ignoreCase: false,
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 34, offset: 48480},
																					expr: &litMatcher{
																						pos:        position{line: 1225, col: 35, offset: 48481},
																						val:        "[",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 39, offset: 48485},
																					expr: &litMatcher{
																						pos:        position{line: 1225, col: 40, offset: 48486},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 44, offset: 48490},
																					expr: &litMatcher{
																						pos:        position{line: 1225, col: 45, offset: 48491},
																						val:        "<<",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 50, offset: 48496},
																					expr: &litMatcher{
																						pos:        position{line: 1225, col: 51, offset: 48497},
																						val:        ">>",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 56, offset: 48502},
																					expr: &litMatcher{
																						pos:        position{line: 1225, col: 57, offset: 48503},
																						val:        ",",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 1225, col: 62, offset: 48508,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 819, col: 18, offset: 33834},
													val:        ">>",
													ignoreCase: false,
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 180, col: 20, offset: 6467},
										run: (*parser).callonInlineElementWithoutSubtitution1367,
										expr: &seqExpr{
											pos: position{line: 180, col: 20, offset: 6467},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 180, col: 20, offset: 6467},
													val:        "[[",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 180, col: 25, offset: 6472},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 1225, col: 7, offset: 48453},
														run: (*parser).callonInlineElementWithoutSubtitution1371,
														expr: &oneOrMoreExpr{
															pos: position{line: 1225, col: 7, offset: 48453},
															expr: &choiceExpr{
																pos: position{line: 1225, col: 8, offset: 48454},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 1205, col: 14, offset: 47940},
																		run: (*parser).callonInlineElementWithoutSubtitution1374,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1205, col: 14, offset: 47940},
																			expr: &charClassMatcher{
																				pos:        position{line: 1205, col: 14, offset: 47940},
																				val:        "[a-zA-Z0-9]",
																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 1225, col: 20, offset: 48466},
																		run: (*parser).callonInlineElementWithoutSubtitution1377,
																		expr: &seqExpr{
																			pos: position{line: 1225, col: 21, offset: 48467},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 1225, col: 21, offset: 48467},
																					expr: &choiceExpr{
																						pos: position{line: 1247, col: 12, offset: 48890},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1247, col: 12, offset: 48890},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 1247, col: 21, offset: 48899},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 30, offset: 48476},
																					expr: &choiceExpr{
																						pos: position{line: 1243, col: 7, offset: 48832},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1243, col: 7, offset: 48832},
																								val:        " ",
																								ignoreCase: false,
																							},
																							&actionExpr{
																								pos: position{line: 1243, col: 13, offset: 48838},
																								run: (*parser).callonInlineElementWithoutSubtitution1386,
																								expr: &litMatcher{
																									pos:        position{line: 1243, col: 13, offset: 48838},
																									val:        "\t",
																									ignoreCase: false,
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 34, offset: 48480},
																					expr: &litMatcher{
																						pos:        position{line: 1225, col: 35, offset: 48481},
																						val:        "[",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 39, offset: 48485},
																					expr: &litMatcher{
																						pos:        position{line: 1225, col: 40, offset: 48486},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 44, offset: 48490},
																					expr: &litMatcher{
																						pos:        position{line: 1225, col: 45, offset: 48491},
																						val:        "<<",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 50, offset: 48496},
																					expr: &litMatcher{
																						pos:        position{line: 1225, col: 51, offset: 48497},
																						val:        ">>",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 56, offset: 48502},
																					expr: &litMatcher{
																						pos:        position{line: 1225, col: 57, offset: 48503},
																						val:        ",",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 1225, col: 62, offset: 48508,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 180, col: 33, offset: 6480},
													val:        "]]",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 180, col: 38, offset: 6485},
													expr: &choiceExpr{
														pos: position{line: 1243, col: 7, offset: 48832},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1243, col: 7, offset: 48832},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1243, col: 13, offset: 48838},
																run: (*parser).callonInlineElementWithoutSubtitution1403,
																expr: &litMatcher{
																	pos:        position{line: 1243, col: 13, offset: 48838},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
									&charClassMatcher{
										pos:        position{line: 1203, col: 16, offset: 47904},
										val:        "[()[]]",
										chars:      []rune{'(', ')', '[', ']'},
										ignoreCase: false,
										inverted:   false,
									},
									&actionExpr{
										pos: position{line: 1209, col: 9, offset: 47997},
										run: (*parser).callonInlineElementWithoutSubtitution1406,
										expr: &choiceExpr{
											pos: position{line: 1209, col: 10, offset: 47998},
											alternatives: []interface{}{
												&actionExpr{
													pos: position{line: 1205, col: 14, offset: 47940},
													run: (*parser).callonInlineElementWithoutSubtitution1408,
													expr: &oneOrMoreExpr{
														pos: position{line: 1205, col: 14, offset: 47940},
														expr: &charClassMatcher{
															pos:        position{line: 1205, col: 14, offset: 47940},
															val:        "[a-zA-Z0-9]",
															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
												&oneOrMoreExpr{
													pos: position{line: 1209, col: 22, offset: 48010},
													expr: &actionExpr{
														pos: position{line: 1209, col: 23, offset: 48011},
														run: (*parser).callonInlineElementWithoutSubtitution1412,
														expr: &seqExpr{
															pos: position{line: 1209, col: 24, offset: 48012},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 1209, col: 24, offset: 48012},
																	expr: &choiceExpr{
																		pos: position{line: 1247, col: 12, offset: 48890},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1247, col: 12, offset: 48890},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1247, col: 21, offset: 48899},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1209, col: 33, offset: 48021},
																	expr: &choiceExpr{
																		pos: position{line: 1243, col: 7, offset: 48832},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1243, col: 7, offset: 48832},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1243, col: 13, offset: 48838},
																				run: (*parser).callonInlineElementWithoutSubtitution1421,
																				expr: &litMatcher{
																					pos:        position{line: 1243, col: 13, offset: 48838},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1209, col: 37, offset: 48025},
																	expr: &charClassMatcher{
																		pos:        position{line: 1203, col: 16, offset: 47904},
																		val:        "[()[]]",
																		chars:      []rune{'(', ')', '[', ']'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&notExpr{
																	pos: position{line: 1209, col: 50, offset: 48038},
																	expr: &litMatcher{
																		pos:        position{line: 1209, col: 51, offset: 48039},
																		val:        ".",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1209, col: 55, offset: 48043},
																	expr: &choiceExpr{
																		pos: position{line: 656, col: 33, offset: 24662},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 656, col: 33, offset: 24662},
																				val:        "^",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 656, col: 39, offset: 24668},
																				run: (*parser).callonInlineElementWithoutSubtitution1430,
																				expr: &litMatcher{
																					pos:        position{line: 656, col: 39, offset: 24668},
																					val:        "~",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&anyMatcher{
																	line: 1209, col: 86, offset: 48074,
																},
															},
														},
													},
												},
												&oneOrMoreExpr{
													pos: position{line: 1211, col: 7, offset: 48115},
													expr: &litMatcher{
														pos:        position{line: 1211, col: 7, offset: 48115},
														val:        ".",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "QuotedText",
			pos:  position{line: 644, col: 1, offset: 24176},
			expr: &choiceExpr{
				pos: position{line: 644, col: 15, offset: 24190},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 644, col: 15, offset: 24190},
						name: "BoldText",
					},
					&ruleRefExpr{
						pos:  position{line: 645, col: 15, offset: 24214},
						name: "ItalicText",
					},
					&ruleRefExpr{
						pos:  position{line: 646, col: 15, offset: 24240},
						name: "MonospaceText",
					},
					&ruleRefExpr{
						pos:  position{line: 647, col: 15, offset: 24269},
						name: "SubscriptText",
					},
					&ruleRefExpr{
						pos:  position{line: 648, col: 15, offset: 24298},
						name: "SuperscriptText",
					},
					&ruleRefExpr{
						pos:  position{line: 649, col: 15, offset: 24329},
						name: "EscapedBoldText",
					},
					&ruleRefExpr{
						pos:  position{line: 650, col: 15, offset: 24360},
						name: "EscapedItalicText",
					},
					&ruleRefExpr{
						pos:  position{line: 651, col: 15, offset: 24393},
						name: "EscapedMonospaceText",
					},
					&ruleRefExpr{
						pos:  position{line: 652, col: 15, offset: 24429},
						name: "EscapedSubscriptText",
					},
					&ruleRefExpr{
						pos:  position{line: 653, col: 15, offset: 24465},
						name: "EscapedSuperscriptText",
					},
					&litMatcher{
						pos:        position{line: 656, col: 33, offset: 24662},
						val:        "^",
						ignoreCase: false,
					},
					&actionExpr{
						pos: position{line: 656, col: 39, offset: 24668},
						run: (*parser).callonQuotedText13,
						expr: &litMatcher{
							pos:        position{line: 656, col: 39, offset: 24668},
							val:        "~",
							ignoreCase: false,
						},
					},
				},
			},
		},
		{
			name: "BoldText",
			pos:  position{line: 660, col: 1, offset: 24801},
			expr: &choiceExpr{
				pos: position{line: 661, col: 5, offset: 24818},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 661, col: 5, offset: 24818},
						run: (*parser).callonBoldText2,
						expr: &seqExpr{
							pos: position{line: 661, col: 5, offset: 24818},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 661, col: 5, offset: 24818},
									expr: &litMatcher{
										pos:        position{line: 661, col: 6, offset: 24819},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 661, col: 11, offset: 24824},
									val:        "**",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 661, col: 16, offset: 24829},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 661, col: 25, offset: 24838},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 661, col: 44, offset: 24857},
									val:        "**",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 663, col: 9, offset: 24990},
						run: (*parser).callonBoldText10,
						expr: &seqExpr{
							pos: position{line: 663, col: 9, offset: 24990},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 663, col: 9, offset: 24990},
									expr: &litMatcher{
										pos:        position{line: 663, col: 10, offset: 24991},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 663, col: 15, offset: 24996},
									val:        "**",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 663, col: 20, offset: 25001},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 663, col: 29, offset: 25010},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 663, col: 48, offset: 25029},
									val:        "*",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 666, col: 9, offset: 25206},
						run: (*parser).callonBoldText18,
						expr: &seqExpr{
							pos: position{line: 666, col: 9, offset: 25206},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 666, col: 9, offset: 25206},
									expr: &litMatcher{
										pos:        position{line: 666, col: 10, offset: 25207},
										val:        "\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 666, col: 14, offset: 25211},
									val:        "*",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 666, col: 18, offset: 25215},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 666, col: 27, offset: 25224},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 666, col: 46, offset: 25243},
									val:        "*",
									ignoreCase: false,
								},
								&notExpr{
									pos: position{line: 666, col: 50, offset: 25247},
									expr: &charClassMatcher{
										pos:        position{line: 1201, col: 13, offset: 47876},
										val:        "[a-zA-Z0-9]",
										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
										ignoreCase: false,
										inverted:   false,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "EscapedBoldText",
			pos:  position{line: 670, col: 1, offset: 25437},
			expr: &choiceExpr{
				pos: position{line: 671, col: 5, offset: 25461},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 671, col: 5, offset: 25461},
						run: (*parser).callonEscapedBoldText2,
						expr: &seqExpr{
							pos: position{line: 671, col: 5, offset: 25461},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 671, col: 5, offset: 25461},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 684, col: 25, offset: 26261},
										run: (*parser).callonEscapedBoldText5,
										expr: &seqExpr{
											pos: position{line: 684, col: 25, offset: 26261},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 684, col: 25, offset: 26261},
													val:        "\\\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 684, col: 30, offset: 26266},
													expr: &litMatcher{
														pos:        position{line: 684, col: 30, offset: 26266},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 671, col: 40, offset: 25496},
									val:        "**",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 671, col: 45, offset: 25501},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 671, col: 54, offset: 25510},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 671, col: 73, offset: 25529},
									val:        "**",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 673, col: 9, offset: 25685},
						run: (*parser).callonEscapedBoldText14,
						expr: &seqExpr{
							pos: position{line: 673, col: 9, offset: 25685},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 673, col: 9, offset: 25685},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 680, col: 25, offset: 26192},
										run: (*parser).callonEscapedBoldText17,
										expr: &seqExpr{
											pos: position{line: 680, col: 25, offset: 26192},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 680, col: 25, offset: 26192},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 680, col: 29, offset: 26196},
													expr: &litMatcher{
														pos:        position{line: 680, col: 29, offset: 26196},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 673, col: 44, offset: 25720},
									val:        "**",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 673, col: 49, offset: 25725},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 673, col: 58, offset: 25734},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 673, col: 77, offset: 25753},
									val:        "*",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 676, col: 9, offset: 25952},
						run: (*parser).callonEscapedBoldText26,
						expr: &seqExpr{
							pos: position{line: 676, col: 9, offset: 25952},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 676, col: 9, offset: 25952},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 680, col: 25, offset: 26192},
										run: (*parser).callonEscapedBoldText29,
										expr: &seqExpr{
											pos: position{line: 680, col: 25, offset: 26192},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 680, col: 25, offset: 26192},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 680, col: 29, offset: 26196},
													expr: &litMatcher{
														pos:        position{line: 680, col: 29, offset: 26196},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 676, col: 44, offset: 25987},
									val:        "*",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 676, col: 48, offset: 25991},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 676, col: 57, offset: 26000},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 676, col: 76, offset: 26019},
									val:        "*",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "ItalicText",
			pos:  position{line: 688, col: 1, offset: 26307},
			expr: &choiceExpr{
				pos: position{line: 689, col: 5, offset: 26326},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 689, col: 5, offset: 26326},
						run: (*parser).callonItalicText2,
						expr: &seqExpr{
							pos: position{line: 689, col: 5, offset: 26326},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 689, col: 5, offset: 26326},
									expr: &litMatcher{
										pos:        position{line: 689, col: 6, offset: 26327},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 689, col: 11, offset: 26332},
									val:        "__",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 689, col: 16, offset: 26337},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 689, col: 25, offset: 26346},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 689, col: 44, offset: 26365},
									val:        "__",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 691, col: 9, offset: 26454},
						run: (*parser).callonItalicText10,
						expr: &seqExpr{
							pos: position{line: 691, col: 9, offset: 26454},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 691, col: 9, offset: 26454},
									expr: &litMatcher{
										pos:        position{line: 691, col: 10, offset: 26455},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 691, col: 15, offset: 26460},
									val:        "__",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 691, col: 20, offset: 26465},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 691, col: 29, offset: 26474},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 691, col: 48, offset: 26493},
									val:        "_",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 694, col: 9, offset: 26672},
						run: (*parser).callonItalicText18,
						expr: &seqExpr{
							pos: position{line: 694, col: 9, offset: 26672},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 694, col: 9, offset: 26672},
									expr: &litMatcher{
										pos:        position{line: 694, col: 10, offset: 26673},
										val:        "\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 694, col: 14, offset: 26677},
									val:        "_",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 694, col: 18, offset: 26681},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 694, col: 27, offset: 26690},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 694, col: 46, offset: 26709},
									val:        "_",
									ignoreCase: false,
								},
								&notExpr{
									pos: position{line: 694, col: 50, offset: 26713},
									expr: &charClassMatcher{
										pos:        position{line: 1201, col: 13, offset: 47876},
										val:        "[a-zA-Z0-9]",
										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
										ignoreCase: false,
										inverted:   false,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "EscapedItalicText",
			pos:  position{line: 698, col: 1, offset: 26904},
			expr: &choiceExpr{
				pos: position{line: 699, col: 5, offset: 26930},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 699, col: 5, offset: 26930},
						run: (*parser).callonEscapedItalicText2,
						expr: &seqExpr{
							pos: position{line: 699, col: 5, offset: 26930},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 699, col: 5, offset: 26930},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 684, col: 25, offset: 26261},
										run: (*parser).callonEscapedItalicText5,
										expr: &seqExpr{
											pos: position{line: 684, col: 25, offset: 26261},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 684, col: 25, offset: 26261},
													val:        "\\\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 684, col: 30, offset: 26266},
													expr: &litMatcher{
														pos:        position{line: 684, col: 30, offset: 26266},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 699, col: 40, offset: 26965},
									val:        "__",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 699, col: 45, offset: 26970},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 699, col: 54, offset: 26979},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 699, col: 73, offset: 26998},
									val:        "__",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 701, col: 9, offset: 27154},
						run: (*parser).callonEscapedItalicText14,
						expr: &seqExpr{
							pos: position{line: 701, col: 9, offset: 27154},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 701, col: 9, offset: 27154},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 680, col: 25, offset: 26192},
										run: (*parser).callonEscapedItalicText17,
										expr: &seqExpr{
											pos: position{line: 680, col: 25, offset: 26192},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 680, col: 25, offset: 26192},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 680, col: 29, offset: 26196},
													expr: &litMatcher{
														pos:        position{line: 680, col: 29, offset: 26196},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 701, col: 44, offset: 27189},
									val:        "__",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 701, col: 49, offset: 27194},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 701, col: 58, offset: 27203},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 701, col: 77, offset: 27222},
									val:        "_",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 704, col: 9, offset: 27421},
						run: (*parser).callonEscapedItalicText26,
						expr: &seqExpr{
							pos: position{line: 704, col: 9, offset: 27421},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 704, col: 9, offset: 27421},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 680, col: 25, offset: 26192},
										run: (*parser).callonEscapedItalicText29,
										expr: &seqExpr{
											pos: position{line: 680, col: 25, offset: 26192},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 680, col: 25, offset: 26192},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 680, col: 29, offset: 26196},
													expr: &litMatcher{
														pos:        position{line: 680, col: 29, offset: 26196},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 704, col: 44, offset: 27456},
									val:        "_",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 704, col: 48, offset: 27460},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 704, col: 57, offset: 27469},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 704, col: 76, offset: 27488},
									val:        "_",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "MonospaceText",
			pos:  position{line: 708, col: 1, offset: 27637},
			expr: &choiceExpr{
				pos: position{line: 709, col: 5, offset: 27659},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 709, col: 5, offset: 27659},
						run: (*parser).callonMonospaceText2,
						expr: &seqExpr{
							pos: position{line: 709, col: 5, offset: 27659},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 709, col: 5, offset: 27659},
									expr: &litMatcher{
										pos:        position{line: 709, col: 6, offset: 27660},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 709, col: 11, offset: 27665},
									val:        "``",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 709, col: 16, offset: 27670},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 709, col: 25, offset: 27679},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 709, col: 44, offset: 27698},
									val:        "``",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 711, col: 9, offset: 27836},
						run: (*parser).callonMonospaceText10,
						expr: &seqExpr{
							pos: position{line: 711, col: 9, offset: 27836},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 711, col: 9, offset: 27836},
									expr: &litMatcher{
										pos:        position{line: 711, col: 10, offset: 27837},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 711, col: 15, offset: 27842},
									val:        "``",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 711, col: 20, offset: 27847},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 711, col: 29, offset: 27856},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 711, col: 48, offset: 27875},
									val:        "`",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 714, col: 9, offset: 28057},
						run: (*parser).callonMonospaceText18,
						expr: &seqExpr{
							pos: position{line: 714, col: 9, offset: 28057},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 714, col: 9, offset: 28057},
									expr: &litMatcher{
										pos:        position{line: 714, col: 10, offset: 28058},
										val:        "\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 714, col: 14, offset: 28062},
									val:        "`",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 714, col: 18, offset: 28066},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 714, col: 27, offset: 28075},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 714, col: 46, offset: 28094},
									val:        "`",
									ignoreCase: false,
								},
								&notExpr{
									pos: position{line: 714, col: 50, offset: 28098},
									expr: &charClassMatcher{
										pos:        position{line: 1201, col: 13, offset: 47876},
										val:        "[a-zA-Z0-9]",
										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
										ignoreCase: false,
										inverted:   false,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "EscapedMonospaceText",
			pos:  position{line: 718, col: 1, offset: 28292},
			expr: &choiceExpr{
				pos: position{line: 719, col: 5, offset: 28321},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 719, col: 5, offset: 28321},
						run: (*parser).callonEscapedMonospaceText2,
						expr: &seqExpr{
							pos: position{line: 719, col: 5, offset: 28321},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 719, col: 5, offset: 28321},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 684, col: 25, offset: 26261},
										run: (*parser).callonEscapedMonospaceText5,
										expr: &seqExpr{
											pos: position{line: 684, col: 25, offset: 26261},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 684, col: 25, offset: 26261},
													val:        "\\\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 684, col: 30, offset: 26266},
													expr: &litMatcher{
														pos:        position{line: 684, col: 30, offset: 26266},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 719, col: 40, offset: 28356},
									val:        "``",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 719, col: 45, offset: 28361},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 719, col: 54, offset: 28370},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 719, col: 73, offset: 28389},
									val:        "``",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 721, col: 9, offset: 28545},
						run: (*parser).callonEscapedMonospaceText14,
						expr: &seqExpr{
							pos: position{line: 721, col: 9, offset: 28545},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 721, col: 9, offset: 28545},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 680, col: 25, offset: 26192},
										run: (*parser).callonEscapedMonospaceText17,
										expr: &seqExpr{
											pos: position{line: 680, col: 25, offset: 26192},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 680, col: 25, offset: 26192},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 680, col: 29, offset: 26196},
													expr: &litMatcher{
														pos:        position{line: 680, col: 29, offset: 26196},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 721, col: 44, offset: 28580},
									val:        "``",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 721, col: 49, offset: 28585},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 721, col: 58, offset: 28594},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 721, col: 77, offset: 28613},
									val:        "`",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 724, col: 9, offset: 28812},
						run: (*parser).callonEscapedMonospaceText26,
						expr: &seqExpr{
							pos: position{line: 724, col: 9, offset: 28812},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 724, col: 9, offset: 28812},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 680, col: 25, offset: 26192},
										run: (*parser).callonEscapedMonospaceText29,
										expr: &seqExpr{
											pos: position{line: 680, col: 25, offset: 26192},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 680, col: 25, offset: 26192},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 680, col: 29, offset: 26196},
													expr: &litMatcher{
														pos:        position{line: 680, col: 29, offset: 26196},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 724, col: 44, offset: 28847},
									val:        "`",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 724, col: 48, offset: 28851},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 724, col: 57, offset: 28860},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 724, col: 76, offset: 28879},
									val:        "`",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "SubscriptText",
			pos:  position{line: 728, col: 1, offset: 29028},
			expr: &choiceExpr{
				pos: position{line: 729, col: 5, offset: 29050},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 729, col: 5, offset: 29050},
						run: (*parser).callonSubscriptText2,
						expr: &seqExpr{
							pos: position{line: 729, col: 5, offset: 29050},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 729, col: 5, offset: 29050},
									expr: &litMatcher{
										pos:        position{line: 729, col: 6, offset: 29051},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 729, col: 11, offset: 29056},
									val:        "~~",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 729, col: 16, offset: 29061},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 729, col: 25, offset: 29070},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 729, col: 44, offset: 29089},
									val:        "~~",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 731, col: 9, offset: 29227},
						run: (*parser).callonSubscriptText10,
						expr: &seqExpr{
							pos: position{line: 731, col: 9, offset: 29227},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 731, col: 9, offset: 29227},
									expr: &litMatcher{
										pos:        position{line: 731, col: 10, offset: 29228},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 731, col: 15, offset: 29233},
									val:        "~~",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 731, col: 20, offset: 29238},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 731, col: 29, offset: 29247},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 731, col: 48, offset: 29266},
									val:        "~",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 734, col: 9, offset: 29448},
						run: (*parser).callonSubscriptText18,
						expr: &seqExpr{
							pos: position{line: 734, col: 9, offset: 29448},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 734, col: 9, offset: 29448},
									expr: &litMatcher{
										pos:        position{line: 734, col: 10, offset: 29449},
										val:        "\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 734, col: 14, offset: 29453},
									val:        "~",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 734, col: 18, offset: 29457},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 734, col: 27, offset: 29466},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 734, col: 46, offset: 29485},
									val:        "~",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "EscapedSubscriptText",
			pos:  position{line: 738, col: 1, offset: 29673},
			expr: &choiceExpr{
				pos: position{line: 739, col: 5, offset: 29702},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 739, col: 5, offset: 29702},
						run: (*parser).callonEscapedSubscriptText2,
						expr: &seqExpr{
							pos: position{line: 739, col: 5, offset: 29702},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 739, col: 5, offset: 29702},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 684, col: 25, offset: 26261},
										run: (*parser).callonEscapedSubscriptText5,
										expr: &seqExpr{
											pos: position{line: 684, col: 25, offset: 26261},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 684, col: 25, offset: 26261},
													val:        "\\\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 684, col: 30, offset: 26266},
													expr: &litMatcher{
														pos:        position{line: 684, col: 30, offset: 26266},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 739, col: 40, offset: 29737},
									val:        "~~",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 739, col: 45, offset: 29742},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 739, col: 54, offset: 29751},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 739, col: 73, offset: 29770},
									val:        "~~",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 741, col: 9, offset: 29926},
						run: (*parser).callonEscapedSubscriptText14,
						expr: &seqExpr{
							pos: position{line: 741, col: 9, offset: 29926},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 741, col: 9, offset: 29926},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 680, col: 25, offset: 26192},
										run: (*parser).callonEscapedSubscriptText17,
										expr: &seqExpr{
											pos: position{line: 680, col: 25, offset: 26192},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 680, col: 25, offset: 26192},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 680, col: 29, offset: 26196},
													expr: &litMatcher{
														pos:        position{line: 680, col: 29, offset: 26196},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 741, col: 44, offset: 29961},
									val:        "~~",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 741, col: 49, offset: 29966},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 741, col: 58, offset: 29975},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 741, col: 77, offset: 29994},
									val:        "~",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 744, col: 9, offset: 30193},
						run: (*parser).callonEscapedSubscriptText26,
						expr: &seqExpr{
							pos: position{line: 744, col: 9, offset: 30193},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 744, col: 9, offset: 30193},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 680, col: 25, offset: 26192},
										run: (*parser).callonEscapedSubscriptText29,
										expr: &seqExpr{
											pos: position{line: 680, col: 25, offset: 26192},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 680, col: 25, offset: 26192},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 680, col: 29, offset: 26196},
													expr: &litMatcher{
														pos:        position{line: 680, col: 29, offset: 26196},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 744, col: 44, offset: 30228},
									val:        "~",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 744, col: 48, offset: 30232},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 744, col: 57, offset: 30241},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 744, col: 76, offset: 30260},
									val:        "~",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "SuperscriptText",
			pos:  position{line: 748, col: 1, offset: 30409},
			expr: &choiceExpr{
				pos: position{line: 749, col: 5, offset: 30433},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 749, col: 5, offset: 30433},
						run: (*parser).callonSuperscriptText2,
						expr: &seqExpr{
							pos: position{line: 749, col: 5, offset: 30433},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 749, col: 5, offset: 30433},
									expr: &litMatcher{
										pos:        position{line: 749, col: 6, offset: 30434},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 749, col: 11, offset: 30439},
									val:        "^^",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 749, col: 16, offset: 30444},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 749, col: 25, offset: 30453},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 749, col: 44, offset: 30472},
									val:        "^^",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 751, col: 9, offset: 30612},
						run: (*parser).callonSuperscriptText10,
						expr: &seqExpr{
							pos: position{line: 751, col: 9, offset: 30612},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 751, col: 9, offset: 30612},
									expr: &litMatcher{
										pos:        position{line: 751, col: 10, offset: 30613},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 751, col: 15, offset: 30618},
									val:        "^^",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 751, col: 20, offset: 30623},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 751, col: 29, offset: 30632},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 751, col: 48, offset: 30651},
									val:        "^",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 754, col: 9, offset: 30835},
						run: (*parser).callonSuperscriptText18,
						expr: &seqExpr{
							pos: position{line: 754, col: 9, offset: 30835},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 754, col: 9, offset: 30835},
									expr: &litMatcher{
										pos:        position{line: 754, col: 10, offset: 30836},
										val:        "\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 754, col: 14, offset: 30840},
									val:        "^",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 754, col: 18, offset: 30844},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 754, col: 27, offset: 30853},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 754, col: 46, offset: 30872},
									val:        "^",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "EscapedSuperscriptText",
			pos:  position{line: 758, col: 1, offset: 31062},
			expr: &choiceExpr{
				pos: position{line: 759, col: 5, offset: 31093},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 759, col: 5, offset: 31093},
						run: (*parser).callonEscapedSuperscriptText2,
						expr: &seqExpr{
							pos: position{line: 759, col: 5, offset: 31093},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 759, col: 5, offset: 31093},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 684, col: 25, offset: 26261},
										run: (*parser).callonEscapedSuperscriptText5,
										expr: &seqExpr{
											pos: position{line: 684, col: 25, offset: 26261},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 684, col: 25, offset: 26261},
													val:        "\\\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 684, col: 30, offset: 26266},
													expr: &litMatcher{
														pos:        position{line: 684, col: 30, offset: 26266},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 759, col: 40, offset: 31128},
									val:        "^^",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 759, col: 45, offset: 31133},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 759, col: 54, offset: 31142},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 759, col: 73, offset: 31161},
									val:        "^^",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 761, col: 9, offset: 31317},
						run: (*parser).callonEscapedSuperscriptText14,
						expr: &seqExpr{
							pos: position{line: 761, col: 9, offset: 31317},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 761, col: 9, offset: 31317},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 680, col: 25, offset: 26192},
										run: (*parser).callonEscapedSuperscriptText17,
										expr: &seqExpr{
											pos: position{line: 680, col: 25, offset: 26192},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 680, col: 25, offset: 26192},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 680, col: 29, offset: 26196},
													expr: &litMatcher{
														pos:        position{line: 680, col: 29, offset: 26196},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 761, col: 44, offset: 31352},
									val:        "^^",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 761, col: 49, offset: 31357},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 761, col: 58, offset: 31366},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 761, col: 77, offset: 31385},
									val:        "^",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 764, col: 9, offset: 31584},
						run: (*parser).callonEscapedSuperscriptText26,
						expr: &seqExpr{
							pos: position{line: 764, col: 9, offset: 31584},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 764, col: 9, offset: 31584},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 680, col: 25, offset: 26192},
										run: (*parser).callonEscapedSuperscriptText29,
										expr: &seqExpr{
											pos: position{line: 680, col: 25, offset: 26192},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 680, col: 25, offset: 26192},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 680, col: 29, offset: 26196},
													expr: &litMatcher{
														pos:        position{line: 680, col: 29, offset: 26196},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 764, col: 44, offset: 31619},
									val:        "^",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 764, col: 48, offset: 31623},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 764, col: 57, offset: 31632},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 764, col: 76, offset: 31651},
									val:        "^",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "QuotedTextContent",
			pos:  position{line: 768, col: 1, offset: 31800},
			expr: &seqExpr{
				pos: position{line: 768, col: 22, offset: 31821},
				exprs: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 768, col: 22, offset: 31821},
						name: "QuotedTextContentElement",
					},
					&zeroOrMoreExpr{
						pos: position{line: 768, col: 47, offset: 31846},
						expr: &seqExpr{
							pos: position{line: 768, col: 48, offset: 31847},
							exprs: []interface{}{
								&oneOrMoreExpr{
									pos: position{line: 768, col: 48, offset: 31847},
									expr: &choiceExpr{
										pos: position{line: 1243, col: 7, offset: 48832},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1243, col: 7, offset: 48832},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1243, col: 13, offset: 48838},
												run: (*parser).callonQuotedTextContent8,
												expr: &litMatcher{
													pos:        position{line: 1243, col: 13, offset: 48838},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&ruleRefExpr{
									pos:  position{line: 768, col: 52, offset: 31851},
									name: "QuotedTextContentElement",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "QuotedTextContentElement",
			pos:  position{line: 770, col: 1, offset: 31879},
			expr: &choiceExpr{
				pos: position{line: 770, col: 29, offset: 31907},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 770, col: 29, offset: 31907},
						name: "QuotedText",
					},
					&actionExpr{
						pos: position{line: 772, col: 19, offset: 32084},
						run: (*parser).callonQuotedTextContentElement3,
						expr: &oneOrMoreExpr{
							pos: position{line: 772, col: 19, offset: 32084},
							expr: &choiceExpr{
								pos: position{line: 772, col: 20, offset: 32085},
								alternatives: []interface{}{
									&actionExpr{
										pos: position{line: 1205, col: 14, offset: 47940},
										run: (*parser).callonQuotedTextContentElement6,
										expr: &oneOrMoreExpr{
											pos: position{line: 1205, col: 14, offset: 47940},
											expr: &charClassMatcher{
												pos:        position{line: 1205, col: 14, offset: 47940},
												val:        "[a-zA-Z0-9]",
												ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
												ignoreCase: false,
												inverted:   false,
											},
										},
									},
									&actionExpr{
										pos: position{line: 772, col: 32, offset: 32097},
										run: (*parser).callonQuotedTextContentElement9,
										expr: &seqExpr{
											pos: position{line: 772, col: 33, offset: 32098},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 772, col: 33, offset: 32098},
													expr: &choiceExpr{
														pos: position{line: 1247, col: 12, offset: 48890},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1247, col: 12, offset: 48890},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1247, col: 21, offset: 48899},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
														},
													},
												},
												&notExpr{
													pos: position{line: 772, col: 42, offset: 32107},
													expr: &choiceExpr{
														pos: position{line: 1243, col: 7, offset: 48832},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1243, col: 7, offset: 48832},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1243, col: 13, offset: 48838},
																run: (*parser).callonQuotedTextContentElement18,
																expr: &litMatcher{
																	pos:        position{line: 1243, col: 13, offset: 48838},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&notExpr{
													pos: position{line: 772, col: 46, offset: 32111},
													expr: &litMatcher{
														pos:        position{line: 772, col: 47, offset: 32112},
														val:        "*",
														ignoreCase: false,
													},
												},
												&notExpr{
													pos: position{line: 772, col: 51, offset: 32116},
													expr: &litMatcher{
														pos:        position{line: 772, col: 52, offset: 32117},
														val:        "_",
														ignoreCase: false,
													},
												},
												&notExpr{
													pos: position{line: 772, col: 56, offset: 32121},
													expr: &litMatcher{
														pos:        position{line: 772, col: 57, offset: 32122},
														val:        "`",
														ignoreCase: false,
													},
												},
												&notExpr{
													pos: position{line: 772, col: 61, offset: 32126},
													expr: &litMatcher{
														pos:        position{line: 772, col: 62, offset: 32127},
														val:        "~",
														ignoreCase: false,
													},
												},
												&notExpr{
													pos: position{line: 772, col: 66, offset: 32131},
													expr: &litMatcher{
														pos:        position{line: 772, col: 67, offset: 32132},
														val:        "^",
														ignoreCase: false,
													},
												},
												&anyMatcher{
													line: 772, col: 71, offset: 32136,
												},
											},
										},
									},
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 778, col: 29, offset: 32281},
						run: (*parser).callonQuotedTextContentElement31,
						expr: &oneOrMoreExpr{
							pos: position{line: 778, col: 29, offset: 32281},
							expr: &choiceExpr{
								pos: position{line: 778, col: 30, offset: 32282},
								alternatives: []interface{}{
									&actionExpr{
										pos: position{line: 1205, col: 14, offset: 47940},
										run: (*parser).callonQuotedTextContentElement34,
										expr: &oneOrMoreExpr{
											pos: position{line: 1205, col: 14, offset: 47940},
											expr: &charClassMatcher{
												pos:        position{line: 1205, col: 14, offset: 47940},
												val:        "[a-zA-Z0-9]",
												ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
												ignoreCase: false,
												inverted:   false,
											},
										},
									},
									&actionExpr{
										pos: position{line: 778, col: 42, offset: 32294},
										run: (*parser).callonQuotedTextContentElement37,
										expr: &seqExpr{
											pos: position{line: 778, col: 43, offset: 32295},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 778, col: 43, offset: 32295},
													expr: &choiceExpr{
														pos: position{line: 1247, col: 12, offset: 48890},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1247, col: 12, offset: 48890},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1247, col: 21, offset: 48899},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
														},
													},
												},
												&notExpr{
													pos: position{line: 778, col: 52, offset: 32304},
													expr: &choiceExpr{
														pos: position{line: 1243, col: 7, offset: 48832},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1243, col: 7, offset: 48832},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1243, col: 13, offset: 48838},
																run: (*parser).callonQuotedTextContentElement46,
																expr: &litMatcher{
																	pos:        position{line: 1243, col: 13, offset: 48838},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&anyMatcher{
													line: 778, col: 56, offset: 32308,
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Passthrough",
			pos:  position{line: 790, col: 1, offset: 32667},
			expr: &choiceExpr{
				pos: position{line: 790, col: 16, offset: 32682},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 798, col: 26, offset: 32982},
						run: (*parser).callonPassthrough2,
						expr: &seqExpr{
							pos: position{line: 798, col: 26, offset: 32982},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 798, col: 26, offset: 32982},
									val:        "+++",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 798, col: 32, offset: 32988},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 798, col: 40, offset: 32996},
										expr: &choiceExpr{
											pos: position{line: 798, col: 41, offset: 32997},
											alternatives: []interface{}{
												&actionExpr{
													pos: position{line: 1205, col: 14, offset: 47940},
													run: (*parser).callonPassthrough8,
													expr: &oneOrMoreExpr{
														pos: position{line: 1205, col: 14, offset: 47940},
														expr: &charClassMatcher{
															pos:        position{line: 1205, col: 14, offset: 47940},
															val:        "[a-zA-Z0-9]",
															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
												&actionExpr{
													pos: position{line: 1215, col: 11, offset: 48287},
													run: (*parser).callonPassthrough11,
													expr: &oneOrMoreExpr{
														pos: position{line: 1215, col: 11, offset: 48287},
														expr: &choiceExpr{
															pos: position{line: 1243, col: 7, offset: 48832},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1243, col: 7, offset: 48832},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1243, col: 13, offset: 48838},
																	run: (*parser).callonPassthrough15,
																	expr: &litMatcher{
																		pos:        position{line: 1243, col: 13, offset: 48838},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
												&actionExpr{
													pos: position{line: 798, col: 62, offset: 33018},
													run: (*parser).callonPassthrough17,
													expr: &seqExpr{
														pos: position{line: 798, col: 63, offset: 33019},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 798, col: 63, offset: 33019},
																expr: &litMatcher{
																	pos:        position{line: 798, col: 64, offset: 33020},
																	val:        "+++",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 798, col: 70, offset: 33026,
															},
														},
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 800, col: 5, offset: 33066},
									val:        "+++",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 792, col: 26, offset: 32773},
						run: (*parser).callonPassthrough23,
						expr: &seqExpr{
							pos: position{line: 792, col: 26, offset: 32773},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 792, col: 26, offset: 32773},
									val:        "+",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 792, col: 30, offset: 32777},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 792, col: 38, offset: 32785},
										expr: &choiceExpr{
											pos: position{line: 792, col: 39, offset: 32786},
											alternatives: []interface{}{
												&actionExpr{
													pos: position{line: 1205, col: 14, offset: 47940},
													run: (*parser).callonPassthrough29,
													expr: &oneOrMoreExpr{
														pos: position{line: 1205, col: 14, offset: 47940},
														expr: &charClassMatcher{
															pos:        position{line: 1205, col: 14, offset: 47940},
															val:        "[a-zA-Z0-9]",
															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
												&actionExpr{
													pos: position{line: 1215, col: 11, offset: 48287},
													run: (*parser).callonPassthrough32,
													expr: &oneOrMoreExpr{
														pos: position{line: 1215, col: 11, offset: 48287},
														expr: &choiceExpr{
															pos: position{line: 1243, col: 7, offset: 48832},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1243, col: 7, offset: 48832},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1243, col: 13, offset: 48838},
																	run: (*parser).callonPassthrough36,
																	expr: &litMatcher{
																		pos:        position{line: 1243, col: 13, offset: 48838},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
												&actionExpr{
													pos: position{line: 792, col: 60, offset: 32807},
													run: (*parser).callonPassthrough38,
													expr: &seqExpr{
														pos: position{line: 792, col: 61, offset: 32808},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 792, col: 61, offset: 32808},
																expr: &choiceExpr{
																	pos: position{line: 1247, col: 12, offset: 48890},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1247, col: 12, offset: 48890},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1247, col: 21, offset: 48899},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 792, col: 70, offset: 32817},
																expr: &litMatcher{
																	pos:        position{line: 792, col: 71, offset: 32818},
																	val:        "+",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 792, col: 75, offset: 32822,
															},
														},
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 794, col: 5, offset: 32862},
									val:        "+",
									ignoreCase: false,
								},
							},
						},
					},
					&ruleRefExpr{
						pos:  position{line: 790, col: 64, offset: 32730},
						name: "PassthroughMacro",
					},
				},
			},
		},
		{
			name: "PassthroughMacro",
			pos:  position{line: 804, col: 1, offset: 33163},
			expr: &choiceExpr{
				pos: position{line: 804, col: 21, offset: 33183},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 804, col: 21, offset: 33183},
						run: (*parser).callonPassthroughMacro2,
						expr: &seqExpr{
							pos: position{line: 804, col: 21, offset: 33183},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 804, col: 21, offset: 33183},
									val:        "pass:[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 804, col: 30, offset: 33192},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 804, col: 38, offset: 33200},
										expr: &choiceExpr{
											pos: position{line: 810, col: 31, offset: 33500},
											alternatives: []interface{}{
												&actionExpr{
													pos: position{line: 1205, col: 14, offset: 47940},
													run: (*parser).callonPassthroughMacro8,
													expr: &oneOrMoreExpr{
														pos: position{line: 1205, col: 14, offset: 47940},
														expr: &charClassMatcher{
															pos:        position{line: 1205, col: 14, offset: 47940},
															val:        "[a-zA-Z0-9]",
															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
												&actionExpr{
													pos: position{line: 1215, col: 11, offset: 48287},
													run: (*parser).callonPassthroughMacro11,
													expr: &oneOrMoreExpr{
														pos: position{line: 1215, col: 11, offset: 48287},
														expr: &choiceExpr{
															pos: position{line: 1243, col: 7, offset: 48832},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1243, col: 7, offset: 48832},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1243, col: 13, offset: 48838},
																	run: (*parser).callonPassthroughMacro15,
																	expr: &litMatcher{
																		pos:        position{line: 1243, col: 13, offset: 48838},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
												&actionExpr{
													pos: position{line: 810, col: 52, offset: 33521},
													run: (*parser).callonPassthroughMacro17,
													expr: &seqExpr{
														pos: position{line: 810, col: 53, offset: 33522},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 810, col: 53, offset: 33522},
																expr: &litMatcher{
																	pos:        position{line: 810, col: 54, offset: 33523},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 810, col: 59, offset: 33528,
															},
														},
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 804, col: 67, offset: 33229},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 806, col: 5, offset: 33320},
						run: (*parser).callonPassthroughMacro23,
						expr: &seqExpr{
							pos: position{line: 806, col: 5, offset: 33320},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 806, col: 5, offset: 33320},
									val:        "pass:q[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 806, col: 15, offset: 33330},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 806, col: 23, offset: 33338},
										expr: &choiceExpr{
											pos: position{line: 806, col: 24, offset: 33339},
											alternatives: []interface{}{
												&ruleRefExpr{
													pos:  position{line: 806, col: 24, offset: 33339},
													name: "QuotedText",
												},
												&actionExpr{
													pos: position{line: 1205, col: 14, offset: 47940},
													run: (*parser).callonPassthroughMacro30,
													expr: &oneOrMoreExpr{
														pos: position{line: 1205, col: 14, offset: 47940},
														expr: &charClassMatcher{
															pos:        position{line: 1205, col: 14, offset: 47940},
															val:        "[a-zA-Z0-9]",
															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
												&actionExpr{
													pos: position{line: 1215, col: 11, offset: 48287},
													run: (*parser).callonPassthroughMacro33,
													expr: &oneOrMoreExpr{
														pos: position{line: 1215, col: 11, offset: 48287},
														expr: &choiceExpr{
															pos: position{line: 1243, col: 7, offset: 48832},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1243, col: 7, offset: 48832},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1243, col: 13, offset: 48838},
																	run: (*parser).callonPassthroughMacro37,
																	expr: &litMatcher{
																		pos:        position{line: 1243, col: 13, offset: 48838},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
												&actionExpr{
													pos: position{line: 810, col: 52, offset: 33521},
													run: (*parser).callonPassthroughMacro39,
													expr: &seqExpr{
														pos: position{line: 810, col: 53, offset: 33522},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 810, col: 53, offset: 33522},
																expr: &litMatcher{
																	pos:        position{line: 810, col: 54, offset: 33523},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 810, col: 59, offset: 33528,
															},
														},
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 806, col: 65, offset: 33380},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "InlineFootnote",
			pos:  position{line: 906, col: 1, offset: 36916},
			expr: &choiceExpr{
				pos: position{line: 906, col: 19, offset: 36934},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 906, col: 19, offset: 36934},
						run: (*parser).callonInlineFootnote2,
						expr: &seqExpr{
							pos: position{line: 906, col: 19, offset: 36934},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 906, col: 19, offset: 36934},
									val:        "footnote:[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 906, col: 32, offset: 36947},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 906, col: 41, offset: 36956},
										name: "FootnoteContent",
									},
								},
								&litMatcher{
									pos:        position{line: 906, col: 58, offset: 36973},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 908, col: 5, offset: 37048},
						run: (*parser).callonInlineFootnote8,
						expr: &seqExpr{
							pos: position{line: 908, col: 5, offset: 37048},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 908, col: 5, offset: 37048},
									val:        "footnoteref:[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 908, col: 21, offset: 37064},
									label: "ref",
									expr: &actionExpr{
										pos: position{line: 914, col: 16, offset: 37361},
										run: (*parser).callonInlineFootnote12,
										expr: &zeroOrMoreExpr{
											pos: position{line: 914, col: 16, offset: 37361},
											expr: &choiceExpr{
												pos: position{line: 914, col: 17, offset: 37362},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 1205, col: 14, offset: 47940},
														run: (*parser).callonInlineFootnote15,
														expr: &oneOrMoreExpr{
															pos: position{line: 1205, col: 14, offset: 47940},
															expr: &charClassMatcher{
																pos:        position{line: 1205, col: 14, offset: 47940},
																val:        "[a-zA-Z0-9]",
																ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																ignoreCase: false,
																inverted:   false,
															},
														},
													},
													&actionExpr{
														pos: position{line: 1215, col: 11, offset: 48287},
														run: (*parser).callonInlineFootnote18,
														expr: &oneOrMoreExpr{
															pos: position{line: 1215, col: 11, offset: 48287},
															expr: &choiceExpr{
																pos: position{line: 1243, col: 7, offset: 48832},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1243, col: 7, offset: 48832},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1243, col: 13, offset: 48838},
																		run: (*parser).callonInlineFootnote22,
																		expr: &litMatcher{
																			pos:        position{line: 1243, col: 13, offset: 48838},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 914, col: 38, offset: 37383},
														run: (*parser).callonInlineFootnote24,
														expr: &seqExpr{
															pos: position{line: 914, col: 39, offset: 37384},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 914, col: 39, offset: 37384},
																	expr: &litMatcher{
																		pos:        position{line: 914, col: 40, offset: 37385},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 914, col: 44, offset: 37389},
																	expr: &litMatcher{
																		pos:        position{line: 914, col: 45, offset: 37390},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 914, col: 49, offset: 37394},
																	expr: &choiceExpr{
																		pos: position{line: 1251, col: 8, offset: 48930},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1247, col: 12, offset: 48890},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1247, col: 21, offset: 48899},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																			&notExpr{
																				pos: position{line: 1249, col: 8, offset: 48919},
																				expr: &anyMatcher{
																					line: 1249, col: 9, offset: 48920,
																				},
																			},
																		},
																	},
																},
																&anyMatcher{
																	line: 914, col: 55, offset: 37400,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 908, col: 39, offset: 37082},
									val:        ",",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 908, col: 43, offset: 37086},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 908, col: 52, offset: 37095},
										name: "FootnoteContent",
									},
								},
								&litMatcher{
									pos:        position{line: 908, col: 69, offset: 37112},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 910, col: 5, offset: 37197},
						run: (*parser).callonInlineFootnote41,
						expr: &seqExpr{
							pos: position{line: 910, col: 5, offset: 37197},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 910, col: 5, offset: 37197},
									val:        "footnoteref:[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 910, col: 21, offset: 37213},
									label: "ref",
									expr: &actionExpr{
										pos: position{line: 914, col: 16, offset: 37361},
										run: (*parser).callonInlineFootnote45,
										expr: &zeroOrMoreExpr{
											pos: position{line: 914, col: 16, offset: 37361},
											expr: &choiceExpr{
												pos: position{line: 914, col: 17, offset: 37362},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 1205, col: 14, offset: 47940},
														run: (*parser).callonInlineFootnote48,
														expr: &oneOrMoreExpr{
															pos: position{line: 1205, col: 14, offset: 47940},
															expr: &charClassMatcher{
																pos:        position{line: 1205, col: 14, offset: 47940},
																val:        "[a-zA-Z0-9]",
																ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																ignoreCase: false,
																inverted:   false,
															},
														},
													},
													&actionExpr{
														pos: position{line: 1215, col: 11, offset: 48287},
														run: (*parser).callonInlineFootnote51,
														expr: &oneOrMoreExpr{
															pos: position{line: 1215, col: 11, offset: 48287},
															expr: &choiceExpr{
																pos: position{line: 1243, col: 7, offset: 48832},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1243, col: 7, offset: 48832},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1243, col: 13, offset: 48838},
																		run: (*parser).callonInlineFootnote55,
																		expr: &litMatcher{
																			pos:        position{line: 1243, col: 13, offset: 48838},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 914, col: 38, offset: 37383},
														run: (*parser).callonInlineFootnote57,
														expr: &seqExpr{
															pos: position{line: 914, col: 39, offset: 37384},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 914, col: 39, offset: 37384},
																	expr: &litMatcher{
																		pos:        position{line: 914, col: 40, offset: 37385},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 914, col: 44, offset: 37389},
																	expr: &litMatcher{
																		pos:        position{line: 914, col: 45, offset: 37390},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 914, col: 49, offset: 37394},
																	expr: &choiceExpr{
																		pos: position{line: 1251, col: 8, offset: 48930},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1247, col: 12, offset: 48890},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1247, col: 21, offset: 48899},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																			&notExpr{
																				pos: position{line: 1249, col: 8, offset: 48919},
																				expr: &anyMatcher{
																					line: 1249, col: 9, offset: 48920,
																				},
																			},
																		},
																	},
																},
																&anyMatcher{
																	line: 914, col: 55, offset: 37400,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 910, col: 39, offset: 37231},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "FootnoteContent",
			pos:  position{line: 920, col: 1, offset: 37519},
			expr: &actionExpr{
				pos: position{line: 920, col: 20, offset: 37538},
				run: (*parser).callonFootnoteContent1,
				expr: &labeledExpr{
					pos:   position{line: 920, col: 20, offset: 37538},
					label: "elements",
					expr: &oneOrMoreExpr{
						pos: position{line: 920, col: 29, offset: 37547},
						expr: &seqExpr{
							pos: position{line: 920, col: 30, offset: 37548},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 920, col: 30, offset: 37548},
									expr: &litMatcher{
										pos:        position{line: 920, col: 31, offset: 37549},
										val:        "]",
										ignoreCase: false,
									},
								},
								&notExpr{
									pos: position{line: 920, col: 35, offset: 37553},
									expr: &choiceExpr{
										pos: position{line: 1251, col: 8, offset: 48930},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1247, col: 12, offset: 48890},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1247, col: 21, offset: 48899},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1249, col: 8, offset: 48919},
												expr: &anyMatcher{
													line: 1249, col: 9, offset: 48920,
												},
											},
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 920, col: 40, offset: 37558},
									expr: &choiceExpr{
										pos: position{line: 1243, col: 7, offset: 48832},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1243, col: 7, offset: 48832},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1243, col: 13, offset: 48838},
												run: (*parser).callonFootnoteContent16,
												expr: &litMatcher{
													pos:        position{line: 1243, col: 13, offset: 48838},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 920, col: 44, offset: 37562},
									expr: &actionExpr{
										pos: position{line: 180, col: 20, offset: 6467},
										run: (*parser).callonFootnoteContent19,
										expr: &seqExpr{
											pos: position{line: 180, col: 20, offset: 6467},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 180, col: 20, offset: 6467},
													val:        "[[",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 180, col: 25, offset: 6472},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 1225, col: 7, offset: 48453},
														run: (*parser).callonFootnoteContent23,
														expr: &oneOrMoreExpr{
															pos: position{line: 1225, col: 7, offset: 48453},
															expr: &choiceExpr{
																pos: position{line: 1225, col: 8, offset: 48454},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 1205, col: 14, offset: 47940},
																		run: (*parser).callonFootnoteContent26,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1205, col: 14, offset: 47940},
																			expr: &charClassMatcher{
																				pos:        position{line: 1205, col: 14, offset: 47940},
																				val:        "[a-zA-Z0-9]",
																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 1225, col: 20, offset: 48466},
																		run: (*parser).callonFootnoteContent29,
																		expr: &seqExpr{
																			pos: position{line: 1225, col: 21, offset: 48467},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 1225, col: 21, offset: 48467},
																					expr: &choiceExpr{
																						pos: position{line: 1247, col: 12, offset: 48890},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1247, col: 12, offset: 48890},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 1247, col: 21, offset: 48899},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 30, offset: 48476},
																					expr: &choiceExpr{
																						pos: position{line: 1243, col: 7, offset: 48832},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1243, col: 7, offset: 48832},
																								val:        " ",
																								ignoreCase: false,
																							},
																							&actionExpr{
																								pos: position{line: 1243, col: 13, offset: 48838},
																								run: (*parser).callonFootnoteContent38,
																								expr: &litMatcher{
																									pos:        position{line: 1243, col: 13, offset: 48838},
																									val:        "\t",
																									ignoreCase: false,
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 34, offset: 48480},
																					expr: &litMatcher{
																						pos:        position{line: 1225, col: 35, offset: 48481},
																						val:        "[",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 39, offset: 48485},
																					expr: &litMatcher{
																						pos:        position{line: 1225, col: 40, offset: 48486},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 44, offset: 48490},
																					expr: &litMatcher{
																						pos:        position{line: 1225, col: 45, offset: 48491},
																						val:        "<<",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 50, offset: 48496},
																					expr: &litMatcher{
																						pos:        position{line: 1225, col: 51, offset: 48497},
																						val:        ">>",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1225, col: 56, offset: 48502},
																					expr: &litMatcher{
																						pos:        position{line: 1225, col: 57, offset: 48503},
																						val:        ",",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 1225, col: 62, offset: 48508,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 180, col: 33, offset: 6480},
													val:        "]]",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 180, col: 38, offset: 6485},
													expr: &choiceExpr{
														pos: position{line: 1243, col: 7, offset: 48832},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1243, col: 7, offset: 48832},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1243, col: 13, offset: 48838},
																run: (*parser).callonFootnoteContent55,
																expr: &litMatcher{
																	pos:        position{line: 1243, col: 13, offset: 48838},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&ruleRefExpr{
									pos:  position{line: 920, col: 61, offset: 37579},
									name: "InlineElement",
								},
								&zeroOrMoreExpr{
									pos: position{line: 920, col: 75, offset: 37593},
									expr: &choiceExpr{
										pos: position{line: 1243, col: 7, offset: 48832},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1243, col: 7, offset: 48832},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1243, col: 13, offset: 48838},
												run: (*parser).callonFootnoteContent61,
												expr: &litMatcher{
													pos:        position{line: 1243, col: 13, offset: 48838},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "DelimitedBlock",
			pos:  position{line: 928, col: 1, offset: 37916},
			expr: &choiceExpr{
				pos: position{line: 928, col: 19, offset: 37934},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 928, col: 19, offset: 37934},
						name: "FencedBlock",
					},
					&actionExpr{
						pos: position{line: 962, col: 17, offset: 39184},
						run: (*parser).callonDelimitedBlock3,
						expr: &seqExpr{
							pos: position{line: 962, col: 17, offset: 39184},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 959, col: 26, offset: 39117},
									val:        "----",
									ignoreCase: false,
								},
								&zeroOrMoreExpr{
									pos: position{line: 959, col: 33, offset: 39124},
									expr: &choiceExpr{
										pos: position{line: 1243, col: 7, offset: 48832},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1243, col: 7, offset: 48832},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1243, col: 13, offset: 48838},
												run: (*parser).callonDelimitedBlock9,
												expr: &litMatcher{
													pos:        position{line: 1243, col: 13, offset: 48838},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 1251, col: 8, offset: 48930},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 1247, col: 12, offset: 48890},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 1247, col: 21, offset: 48899},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
										&notExpr{
											pos: position{line: 1249, col: 8, offset: 48919},
											expr: &anyMatcher{
												line: 1249, col: 9, offset: 48920,
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 962, col: 39, offset: 39206},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 962, col: 47, offset: 39214},
										expr: &actionExpr{
											pos: position{line: 966, col: 24, offset: 39384},
											run: (*parser).callonDelimitedBlock18,
											expr: &labeledExpr{
												pos:   position{line: 966, col: 24, offset: 39384},
												label: "lines",
												expr: &oneOrMoreExpr{
													pos: position{line: 966, col: 30, offset: 39390},
													expr: &actionExpr{
														pos: position{line: 970, col: 21, offset: 39493},
														run: (*parser).callonDelimitedBlock21,
														expr: &seqExpr{
															pos: position{line: 970, col: 21, offset: 39493},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 970, col: 21, offset: 39493},
																	expr: &seqExpr{
																		pos: position{line: 959, col: 26, offset: 39117},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 959, col: 26, offset: 39117},
																				val:        "----",
																				ignoreCase: false,
																			},
																			&zeroOrMoreExpr{
																				pos: position{line: 959, col: 33, offset: 39124},
																				expr: &choiceExpr{
																					pos: position{line: 1243, col: 7, offset: 48832},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1243, col: 7, offset: 48832},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1243, col: 13, offset: 48838},
																							run: (*parser).callonDelimitedBlock29,
																							expr: &litMatcher{
																								pos:        position{line: 1243, col: 13, offset: 48838},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&choiceExpr{
																				pos: position{line: 1251, col: 8, offset: 48930},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1247, col: 12, offset: 48890},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 1247, col: 21, offset: 48899},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																					&notExpr{
																						pos: position{line: 1249, col: 8, offset: 48919},
																						expr: &anyMatcher{
																							line: 1249, col: 9, offset: 48920,
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 970, col: 44, offset: 39516},
																	expr: &notExpr{
																		pos: position{line: 1249, col: 8, offset: 48919},
																		expr: &anyMatcher{
																			line: 1249, col: 9, offset: 48920,
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 970, col: 49, offset: 39521},
																	label: "line",
																	expr: &actionExpr{
																		pos: position{line: 974, col: 28, offset: 39632},
																		run: (*parser).callonDelimitedBlock40,
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 974, col: 28, offset: 39632},
																			expr: &choiceExpr{
																				pos: position{line: 974, col: 29, offset: 39633},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 1205, col: 14, offset: 47940},
																						run: (*parser).callonDelimitedBlock43,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1205, col: 14, offset: 47940},
																							expr: &charClassMatcher{
																								pos:        position{line: 1205, col: 14, offset: 47940},
																								val:        "[a-zA-Z0-9]",
																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 1215, col: 11, offset: 48287},
																						run: (*parser).callonDelimitedBlock46,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1215, col: 11, offset: 48287},
																							expr: &choiceExpr{
																								pos: position{line: 1243, col: 7, offset: 48832},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1243, col: 7, offset: 48832},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1243, col: 13, offset: 48838},
																										run: (*parser).callonDelimitedBlock50,
																										expr: &litMatcher{
																											pos:        position{line: 1243, col: 13, offset: 48838},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 974, col: 50, offset: 39654},
																						run: (*parser).callonDelimitedBlock52,
																						expr: &seqExpr{
																							pos: position{line: 974, col: 51, offset: 39655},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 974, col: 51, offset: 39655},
																									expr: &seqExpr{
																										pos: position{line: 959, col: 26, offset: 39117},
																										exprs: []interface{}{
																											&litMatcher{
																												pos:        position{line: 959, col: 26, offset: 39117},
																												val:        "----",
																												ignoreCase: false,
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 959, col: 33, offset: 39124},
																												expr: &choiceExpr{
																													pos: position{line: 1243, col: 7, offset: 48832},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1243, col: 7, offset: 48832},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1243, col: 13, offset: 48838},
																															run: (*parser).callonDelimitedBlock60,
																															expr: &litMatcher{
																																pos:        position{line: 1243, col: 13, offset: 48838},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																											&choiceExpr{
																												pos: position{line: 1251, col: 8, offset: 48930},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1247, col: 12, offset: 48890},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1247, col: 21, offset: 48899},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1249, col: 8, offset: 48919},
																														expr: &anyMatcher{
																															line: 1249, col: 9, offset: 48920,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 974, col: 74, offset: 39678},
																									expr: &choiceExpr{
																										pos: position{line: 1251, col: 8, offset: 48930},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1247, col: 12, offset: 48890},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1247, col: 21, offset: 48899},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																											&notExpr{
																												pos: position{line: 1249, col: 8, offset: 48919},
																												expr: &anyMatcher{
																													line: 1249, col: 9, offset: 48920,
																												},
																											},
																										},
																									},
																								},
																								&anyMatcher{
																									line: 974, col: 80, offset: 39684,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1251, col: 8, offset: 48930},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1247, col: 12, offset: 48890},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1247, col: 21, offset: 48899},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1249, col: 8, offset: 48919},
																			expr: &anyMatcher{
																				line: 1249, col: 9, offset: 48920,
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 962, col: 71, offset: 39238},
									alternatives: []interface{}{
										&seqExpr{
											pos: position{line: 959, col: 26, offset: 39117},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 959, col: 26, offset: 39117},
													val:        "----",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 959, col: 33, offset: 39124},
													expr: &choiceExpr{
														pos: position{line: 1243, col: 7, offset: 48832},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1243, col: 7, offset: 48832},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1243, col: 13, offset: 48838},
																run: (*parser).callonDelimitedBlock85,
																expr: &litMatcher{
																	pos:        position{line: 1243, col: 13, offset: 48838},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1251, col: 8, offset: 48930},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1247, col: 12, offset: 48890},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1247, col: 21, offset: 48899},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1249, col: 8, offset: 48919},
															expr: &anyMatcher{
																line: 1249, col: 9, offset: 48920,
															},
														},
													},
												},
											},
										},
										&notExpr{
											pos: position{line: 1249, col: 8, offset: 48919},
											expr: &anyMatcher{
												line: 1249, col: 9, offset: 48920,
											},
										},
									},
								},
							},
						},
					},
					&ruleRefExpr{
						pos:  position{line: 930, col: 19, offset: 37997},
						name: "ExampleBlock",
					},
					&actionExpr{
						pos: position{line: 1094, col: 17, offset: 44022},
						run: (*parser).callonDelimitedBlock95,
						expr: &seqExpr{
							pos: position{line: 1094, col: 17, offset: 44022},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 1092, col: 26, offset: 43998},
									val:        "////",
									ignoreCase: false,
								},
								&zeroOrMoreExpr{
									pos: position{line: 1094, col: 39, offset: 44044},
									expr: &choiceExpr{
										pos: position{line: 1243, col: 7, offset: 48832},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1243, col: 7, offset: 48832},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1243, col: 13, offset: 48838},
												run: (*parser).callonDelimitedBlock101,
												expr: &litMatcher{
													pos:        position{line: 1243, col: 13, offset: 48838},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 1247, col: 12, offset: 48890},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 1247, col: 12, offset: 48890},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 1247, col: 21, offset: 48899},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 1094, col: 51, offset: 44056},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 1094, col: 59, offset: 44064},
										expr: &actionExpr{
											pos: position{line: 1098, col: 21, offset: 44241},
											run: (*parser).callonDelimitedBlock108,
											expr: &seqExpr{
												pos: position{line: 1098, col: 21, offset: 44241},
												exprs: []interface{}{
													&zeroOrMoreExpr{
														pos: position{line: 1098, col: 21, offset: 44241},
														expr: &choiceExpr{
															pos: position{line: 1098, col: 22, offset: 44242},
															alternatives: []interface{}{
																&actionExpr{
																	pos: position{line: 1205, col: 14, offset: 47940},
																	run: (*parser).callonDelimitedBlock112,
																	expr: &oneOrMoreExpr{
																		pos: position{line: 1205, col: 14, offset: 47940},
																		expr: &charClassMatcher{
																			pos:        position{line: 1205, col: 14, offset: 47940},
																			val:        "[a-zA-Z0-9]",
																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 1215, col: 11, offset: 48287},
																	run: (*parser).callonDelimitedBlock115,
																	expr: &oneOrMoreExpr{
																		pos: position{line: 1215, col: 11, offset: 48287},
																		expr: &choiceExpr{
																			pos: position{line: 1243, col: 7, offset: 48832},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1243, col: 7, offset: 48832},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1243, col: 13, offset: 48838},
																					run: (*parser).callonDelimitedBlock119,
																					expr: &litMatcher{
																						pos:        position{line: 1243, col: 13, offset: 48838},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 1098, col: 43, offset: 44263},
																	run: (*parser).callonDelimitedBlock121,
																	expr: &seqExpr{
																		pos: position{line: 1098, col: 44, offset: 44264},
																		exprs: []interface{}{
																			&notExpr{
																				pos: position{line: 1098, col: 44, offset: 44264},
																				expr: &litMatcher{
																					pos:        position{line: 1092, col: 26, offset: 43998},
																					val:        "////",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1098, col: 67, offset: 44287},
																				expr: &choiceExpr{
																					pos: position{line: 1251, col: 8, offset: 48930},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1247, col: 12, offset: 48890},
																							val:        "\r\n",
																							ignoreCase: false,
																						},
																						&charClassMatcher{
																							pos:        position{line: 1247, col: 21, offset: 48899},
																							val:        "[\\r\\n]",
																							chars:      []rune{'\r', '\n'},
																							ignoreCase: false,
																							inverted:   false,
																						},
																						&notExpr{
																							pos: position{line: 1249, col: 8, offset: 48919},
																							expr: &anyMatcher{
																								line: 1249, col: 9, offset: 48920,
																							},
																						},
																					},
																				},
																			},
																			&anyMatcher{
																				line: 1098, col: 73, offset: 44293,
																			},
																		},
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1251, col: 8, offset: 48930},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1247, col: 12, offset: 48890},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1247, col: 21, offset: 48899},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1249, col: 8, offset: 48919},
																expr: &anyMatcher{
																	line: 1249, col: 9, offset: 48920,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 1094, col: 81, offset: 44086},
									alternatives: []interface{}{
										&seqExpr{
											pos: position{line: 1094, col: 82, offset: 44087},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 1092, col: 26, offset: 43998},
													val:        "////",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 1094, col: 104, offset: 44109},
													expr: &choiceExpr{
														pos: position{line: 1243, col: 7, offset: 48832},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1243, col: 7, offset: 48832},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1243, col: 13, offset: 48838},
																run: (*parser).callonDelimitedBlock143,
																expr: &litMatcher{
																	pos:        position{line: 1243, col: 13, offset: 48838},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1251, col: 8, offset: 48930},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1247, col: 12, offset: 48890},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1247, col: 21, offset: 48899},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1249, col: 8, offset: 48919},
															expr: &anyMatcher{
																line: 1249, col: 9, offset: 48920,
															},
														},
													},
												},
											},
										},
										&notExpr{
											pos: position{line: 1249, col: 8, offset: 48919},
											expr: &anyMatcher{
												line: 1249, col: 9, offset: 48920,
											},
										},
									},
								},
							},
						},
					},
					&ruleRefExpr{
						pos:  position{line: 932, col: 19, offset: 38061},
						name: "VerseBlock",
					},
					&ruleRefExpr{
						pos:  position{line: 933, col: 19, offset: 38091},
						name: "QuoteBlock",
					},
					&ruleRefExpr{
						pos:  position{line: 934, col: 19, offset: 38121},
						name: "SidebarBlock",
					},
				},
			},
		},
		{
			name: "FencedBlock",
			pos:  position{line: 950, col: 1, offset: 38653},
			expr: &actionExpr{
				pos: position{line: 950, col: 16, offset: 38668},
				run: (*parser).callonFencedBlock1,
				expr: &seqExpr{
					pos: position{line: 950, col: 16, offset: 38668},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 948, col: 25, offset: 38638},
							val:        "```",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 948, col: 31, offset: 38644},
							expr: &choiceExpr{
								pos: position{line: 1243, col: 7, offset: 48832},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1243, col: 7, offset: 48832},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1243, col: 13, offset: 48838},
										run: (*parser).callonFencedBlock7,
										expr: &litMatcher{
											pos:        position{line: 1243, col: 13, offset: 48838},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1251, col: 8, offset: 48930},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1247, col: 12, offset: 48890},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1247, col: 21, offset: 48899},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1249, col: 8, offset: 48919},
									expr: &anyMatcher{
										line: 1249, col: 9, offset: 48920,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 950, col: 37, offset: 38689},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 950, col: 45, offset: 38697},
								expr: &ruleRefExpr{
									pos:  position{line: 950, col: 46, offset: 38698},
									name: "FencedBlockContent",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 950, col: 68, offset: 38720},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 948, col: 25, offset: 38638},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 948, col: 25, offset: 38638},
											val:        "```",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 948, col: 31, offset: 38644},
											expr: &choiceExpr{
												pos: position{line: 1243, col: 7, offset: 48832},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1243, col: 7, offset: 48832},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1243, col: 13, offset: 48838},
														run: (*parser).callonFencedBlock23,
														expr: &litMatcher{
															pos:        position{line: 1243, col: 13, offset: 48838},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1251, col: 8, offset: 48930},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1247, col: 12, offset: 48890},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1247, col: 21, offset: 48899},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1249, col: 8, offset: 48919},
													expr: &anyMatcher{
														line: 1249, col: 9, offset: 48920,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 1249, col: 8, offset: 48919},
									expr: &anyMatcher{
										line: 1249, col: 9, offset: 48920,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "FencedBlockContent",
			pos:  position{line: 954, col: 1, offset: 38839},
			expr: &choiceExpr{
				pos: position{line: 954, col: 23, offset: 38861},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 954, col: 23, offset: 38861},
						name: "List",
					},
					&ruleRefExpr{
						pos:  position{line: 954, col: 30, offset: 38868},
						name: "BlockParagraph",
					},
					&actionExpr{
						pos: position{line: 1194, col: 14, offset: 47708},
						run: (*parser).callonFencedBlockContent4,
						expr: &seqExpr{
							pos: position{line: 1194, col: 14, offset: 47708},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 1194, col: 14, offset: 47708},
									expr: &notExpr{
										pos: position{line: 1249, col: 8, offset: 48919},
										expr: &anyMatcher{
											line: 1249, col: 9, offset: 48920,
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 1194, col: 19, offset: 47713},
									expr: &choiceExpr{
										pos: position{line: 1243, col: 7, offset: 48832},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1243, col: 7, offset: 48832},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1243, col: 13, offset: 48838},
												run: (*parser).callonFencedBlockContent12,
												expr: &litMatcher{
													pos:        position{line: 1243, col: 13, offset: 48838},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 1251, col: 8, offset: 48930},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 1247, col: 12, offset: 48890},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 1247, col: 21, offset: 48899},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
										&notExpr{
											pos: position{line: 1249, col: 8, offset: 48919},
											expr: &anyMatcher{
												line: 1249, col: 9, offset: 48920,
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "ExampleBlock",
			pos:  position{line: 985, col: 1, offset: 40096},
			expr: &actionExpr{
				pos: position{line: 985, col: 17, offset: 40112},
				run: (*parser).callonExampleBlock1,
				expr: &seqExpr{
					pos: position{line: 985, col: 17, offset: 40112},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 983, col: 26, offset: 40080},
							val:        "====",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 983, col: 33, offset: 40087},
							expr: &choiceExpr{
								pos: position{line: 1243, col: 7, offset: 48832},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1243, col: 7, offset: 48832},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1243, col: 13, offset: 48838},
										run: (*parser).callonExampleBlock7,
										expr: &litMatcher{
											pos:        position{line: 1243, col: 13, offset: 48838},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1251, col: 8, offset: 48930},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1247, col: 12, offset: 48890},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1247, col: 21, offset: 48899},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1249, col: 8, offset: 48919},
									expr: &anyMatcher{
										line: 1249, col: 9, offset: 48920,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 985, col: 39, offset: 40134},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 985, col: 47, offset: 40142},
								expr: &choiceExpr{
									pos: position{line: 985, col: 48, offset: 40143},
									alternatives: []interface{}{
										&ruleRefExpr{
											pos:  position{line: 985, col: 48, offset: 40143},
											name: "List",
										},
										&ruleRefExpr{
											pos:  position{line: 985, col: 55, offset: 40150},
											name: "BlockParagraph",
										},
										&actionExpr{
											pos: position{line: 1194, col: 14, offset: 47708},
											run: (*parser).callonExampleBlock19,
											expr: &seqExpr{
												pos: position{line: 1194, col: 14, offset: 47708},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 1194, col: 14, offset: 47708},
														expr: &notExpr{
															pos: position{line: 1249, col: 8, offset: 48919},
															expr: &anyMatcher{
																line: 1249, col: 9, offset: 48920,
															},
														},
													},
													&zeroOrMoreExpr{
														pos: position{line: 1194, col: 19, offset: 47713},
														expr: &choiceExpr{
															pos: position{line: 1243, col: 7, offset: 48832},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1243, col: 7, offset: 48832},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1243, col: 13, offset: 48838},
																	run: (*parser).callonExampleBlock27,
																	expr: &litMatcher{
																		pos:        position{line: 1243, col: 13, offset: 48838},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1251, col: 8, offset: 48930},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1247, col: 12, offset: 48890},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1247, col: 21, offset: 48899},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1249, col: 8, offset: 48919},
																expr: &anyMatcher{
																	line: 1249, col: 9, offset: 48920,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 985, col: 86, offset: 40181},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 983, col: 26, offset: 40080},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 983, col: 26, offset: 40080},
											val:        "====",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 983, col: 33, offset: 40087},
											expr: &choiceExpr{
												pos: position{line: 1243, col: 7, offset: 48832},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1243, col: 7, offset: 48832},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1243, col: 13, offset: 48838},
														run: (*parser).callonExampleBlock40,
														expr: &litMatcher{
															pos:        position{line: 1243, col: 13, offset: 48838},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1251, col: 8, offset: 48930},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1247, col: 12, offset: 48890},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1247, col: 21, offset: 48899},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1249, col: 8, offset: 48919},
													expr: &anyMatcher{
														line: 1249, col: 9, offset: 48920,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 1249, col: 8, offset: 48919},
									expr: &anyMatcher{
										line: 1249, col: 9, offset: 48920,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "BlockParagraph",
			pos:  position{line: 990, col: 1, offset: 40320},
			expr: &actionExpr{
				pos: position{line: 990, col: 20, offset: 40339},
				run: (*parser).callonBlockParagraph1,
				expr: &labeledExpr{
					pos:   position{line: 990, col: 20, offset: 40339},
					label: "lines",
					expr: &oneOrMoreExpr{
						pos: position{line: 990, col: 26, offset: 40345},
						expr: &ruleRefExpr{
							pos:  position{line: 990, col: 27, offset: 40346},
							name: "BlockParagraphLine",
						},
					},
				},
			},
		},
		{
			name: "BlockParagraphLine",
			pos:  position{line: 994, col: 1, offset: 40431},
			expr: &actionExpr{
				pos: position{line: 994, col: 23, offset: 40453},
				run: (*parser).callonBlockParagraphLine1,
				expr: &seqExpr{
					pos: position{line: 994, col: 23, offset: 40453},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 994, col: 23, offset: 40453},
							expr: &actionExpr{
								pos: position{line: 469, col: 26, offset: 16522},
								run: (*parser).callonBlockParagraphLine4,
								expr: &seqExpr{
									pos: position{line: 469, col: 26, offset: 16522},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 469, col: 26, offset: 16522},
											expr: &choiceExpr{
												pos: position{line: 1243, col: 7, offset: 48832},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1243, col: 7, offset: 48832},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1243, col: 13, offset: 48838},
														run: (*parser).callonBlockParagraphLine9,
														expr: &litMatcher{
															pos:        position{line: 1243, col: 13, offset: 48838},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 469, col: 30, offset: 16526},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 471, col: 5, offset: 16581},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 471, col: 5, offset: 16581},
														run: (*parser).callonBlockParagraphLine13,
														expr: &litMatcher{
															pos:        position{line: 471, col: 5, offset: 16581},
															val:        ".....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 473, col: 9, offset: 16694},
														run: (*parser).callonBlockParagraphLine15,
														expr: &litMatcher{
															pos:        position{line: 473, col: 9, offset: 16694},
															val:        "....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 475, col: 9, offset: 16805},
														run: (*parser).callonBlockParagraphLine17,
														expr: &litMatcher{
															pos:        position{line: 475, col: 9, offset: 16805},
															val:        "...",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 477, col: 9, offset: 16914},
														run: (*parser).callonBlockParagraphLine19,
														expr: &litMatcher{
															pos:        position{line: 477, col: 9, offset: 16914},
															val:        "..",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 479, col: 9, offset: 17021},
														run: (*parser).callonBlockParagraphLine21,
														expr: &litMatcher{
															pos:        position{line: 479, col: 9, offset: 17021},
															val:        ".",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 482, col: 9, offset: 17148},
														run: (*parser).callonBlockParagraphLine23,
														expr: &seqExpr{
															pos: position{line: 482, col: 9, offset: 17148},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 482, col: 9, offset: 17148},
																	expr: &charClassMatcher{
																		pos:        position{line: 482, col: 10, offset: 17149},
																		val:        "[0-9]",
																		ranges:     []rune{'0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 482, col: 18, offset: 17157},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 484, col: 9, offset: 17260},
														run: (*parser).callonBlockParagraphLine28,
														expr: &seqExpr{
															pos: position{line: 484, col: 9, offset: 17260},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 484, col: 10, offset: 17261},
																	val:        "[a-z]",
																	ranges:     []rune{'a', 'z'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&litMatcher{
																	pos:        position{line: 484, col: 17, offset: 17268},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 486, col: 9, offset: 17374},
														run: (*parser).callonBlockParagraphLine32,
														expr: &seqExpr{
															pos: position{line: 486, col: 9, offset: 17374},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 486, col: 10, offset: 17375},
																	val:        "[A-Z]",
																	ranges:     []rune{'A', 'Z'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&litMatcher{
																	pos:        position{line: 486, col: 17, offset: 17382},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 488, col: 9, offset: 17488},
														run: (*parser).callonBlockParagraphLine36,
														expr: &seqExpr{
															pos: position{line: 488, col: 9, offset: 17488},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 488, col: 9, offset: 17488},
																	expr: &charClassMatcher{
																		pos:        position{line: 488, col: 10, offset: 17489},
																		val:        "[a-z]",
																		ranges:     []rune{'a', 'z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 488, col: 18, offset: 17497},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 490, col: 9, offset: 17603},
														run: (*parser).callonBlockParagraphLine41,
														expr: &seqExpr{
															pos: position{line: 490, col: 9, offset: 17603},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 490, col: 9, offset: 17603},
																	expr: &charClassMatcher{
																		pos:        position{line: 490, col: 10, offset: 17604},
																		val:        "[A-Z]",
																		ranges:     []rune{'A', 'Z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 490, col: 18, offset: 17612},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 492, col: 8, offset: 17717},
											expr: &choiceExpr{
												pos: position{line: 1243, col: 7, offset: 48832},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1243, col: 7, offset: 48832},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1243, col: 13, offset: 48838},
														run: (*parser).callonBlockParagraphLine49,
														expr: &litMatcher{
															pos:        position{line: 1243, col: 13, offset: 48838},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 995, col: 9, offset: 40487},
							expr: &actionExpr{
								pos: position{line: 508, col: 5, offset: 18373},
								run: (*parser).callonBlockParagraphLine52,
								expr: &seqExpr{
									pos: position{line: 508, col: 5, offset: 18373},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 508, col: 5, offset: 18373},
											expr: &choiceExpr{
												pos: position{line: 1243, col: 7, offset: 48832},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1243, col: 7, offset: 48832},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1243, col: 13, offset: 48838},
														run: (*parser).callonBlockParagraphLine57,
														expr: &litMatcher{
															pos:        position{line: 1243, col: 13, offset: 48838},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 508, col: 9, offset: 18377},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 509, col: 9, offset: 18394},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 509, col: 9, offset: 18394},
														run: (*parser).callonBlockParagraphLine61,
														expr: &litMatcher{
															pos:        position{line: 509, col: 9, offset: 18394},
															val:        "*****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 512, col: 11, offset: 18563},
														run: (*parser).callonBlockParagraphLine63,
														expr: &litMatcher{
															pos:        position{line: 512, col: 11, offset: 18563},
															val:        "****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 515, col: 11, offset: 18732},
														run: (*parser).callonBlockParagraphLine65,
														expr: &litMatcher{
															pos:        position{line: 515, col: 11, offset: 18732},
															val:        "***",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 518, col: 11, offset: 18901},
														run: (*parser).callonBlockParagraphLine67,
														expr: &litMatcher{
															pos:        position{line: 518, col: 11, offset: 18901},
															val:        "**",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 521, col: 11, offset: 19067},
														run: (*parser).callonBlockParagraphLine69,
														expr: &litMatcher{
															pos:        position{line: 521, col: 11, offset: 19067},
															val:        "*",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 524, col: 11, offset: 19231},
														run: (*parser).callonBlockParagraphLine71,
														expr: &litMatcher{
															pos:        position{line: 524, col: 11, offset: 19231},
															val:        "-",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 526, col: 12, offset: 19378},
											expr: &choiceExpr{
												pos: position{line: 1243, col: 7, offset: 48832},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1243, col: 7, offset: 48832},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1243, col: 13, offset: 48838},
														run: (*parser).callonBlockParagraphLine76,
														expr: &litMatcher{
															pos:        position{line: 1243, col: 13, offset: 48838},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 996, col: 9, offset: 40523},
							expr: &seqExpr{
								pos: position{line: 996, col: 11, offset: 40525},
								exprs: []interface{}{
									&actionExpr{
										pos: position{line: 541, col: 24, offset: 20060},
										run: (*parser).callonBlockParagraphLine80,
										expr: &zeroOrMoreExpr{
											pos: position{line: 541, col: 24, offset: 20060},
											expr: &choiceExpr{
												pos: position{line: 541, col: 25, offset: 20061},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 1205, col: 14, offset: 47940},
														run: (*parser).callonBlockParagraphLine83,
														expr: &oneOrMoreExpr{
															pos: position{line: 1205, col: 14, offset: 47940},
															expr: &charClassMatcher{
																pos:        position{line: 1205, col: 14, offset: 47940},
																val:        "[a-zA-Z0-9]",
																ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																ignoreCase: false,
																inverted:   false,
															},
														},
													},
													&actionExpr{
														pos: position{line: 1215, col: 11, offset: 48287},
														run: (*parser).callonBlockParagraphLine86,
														expr: &oneOrMoreExpr{
															pos: position{line: 1215, col: 11, offset: 48287},
															expr: &choiceExpr{
																pos: position{line: 1243, col: 7, offset: 48832},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1243, col: 7, offset: 48832},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1243, col: 13, offset: 48838},
																		run: (*parser).callonBlockParagraphLine90,
																		expr: &litMatcher{
																			pos:        position{line: 1243, col: 13, offset: 48838},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 541, col: 46, offset: 20082},
														run: (*parser).callonBlockParagraphLine92,
														expr: &seqExpr{
															pos: position{line: 541, col: 47, offset: 20083},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 541, col: 47, offset: 20083},
																	expr: &choiceExpr{
																		pos: position{line: 1247, col: 12, offset: 48890},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1247, col: 12, offset: 48890},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1247, col: 21, offset: 48899},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 541, col: 56, offset: 20092},
																	expr: &litMatcher{
																		pos:        position{line: 541, col: 57, offset: 20093},
																		val:        "::",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 541, col: 63, offset: 20099,
																},
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 548, col: 29, offset: 20280},
										run: (*parser).callonBlockParagraphLine101,
										expr: &choiceExpr{
											pos: position{line: 548, col: 30, offset: 20281},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 548, col: 30, offset: 20281},
													val:        "::::",
													ignoreCase: false,
												},
												&litMatcher{
													pos:        position{line: 548, col: 39, offset: 20290},
													val:        ":::",
													ignoreCase: false,
												},
												&litMatcher{
													pos:        position{line: 548, col: 47, offset: 20298},
													val:        "::",
													ignoreCase: false,
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 997, col: 9, offset: 40580},
							expr: &actionExpr{
								pos: position{line: 454, col: 25, offset: 15966},
								run: (*parser).callonBlockParagraphLine107,
								expr: &seqExpr{
									pos: position{line: 454, col: 25, offset: 15966},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 454, col: 25, offset: 15966},
											val:        "+",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 454, col: 29, offset: 15970},
											expr: &choiceExpr{
												pos: position{line: 1243, col: 7, offset: 48832},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1243, col: 7, offset: 48832},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1243, col: 13, offset: 48838},
														run: (*parser).callonBlockParagraphLine113,
														expr: &litMatcher{
															pos:        position{line: 1243, col: 13, offset: 48838},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1251, col: 8, offset: 48930},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1247, col: 12, offset: 48890},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1247, col: 21, offset: 48899},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1249, col: 8, offset: 48919},
													expr: &anyMatcher{
														line: 1249, col: 9, offset: 48920,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 998, col: 9, offset: 40613},
							expr: &choiceExpr{
								pos: position{line: 936, col: 19, offset: 38153},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1120, col: 26, offset: 45059},
										val:        "....",
										ignoreCase: false,
									},
									&seqExpr{
										pos: position{line: 948, col: 25, offset: 38638},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 948, col: 25, offset: 38638},
												val:        "```",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 948, col: 31, offset: 38644},
												expr: &choiceExpr{
													pos: position{line: 1243, col: 7, offset: 48832},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1243, col: 7, offset: 48832},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1243, col: 13, offset: 48838},
															run: (*parser).callonBlockParagraphLine128,
															expr: &litMatcher{
																pos:        position{line: 1243, col: 13, offset: 48838},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1251, col: 8, offset: 48930},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1247, col: 12, offset: 48890},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1247, col: 21, offset: 48899},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1249, col: 8, offset: 48919},
														expr: &anyMatcher{
															line: 1249, col: 9, offset: 48920,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 959, col: 26, offset: 39117},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 959, col: 26, offset: 39117},
												val:        "----",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 959, col: 33, offset: 39124},
												expr: &choiceExpr{
													pos: position{line: 1243, col: 7, offset: 48832},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1243, col: 7, offset: 48832},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1243, col: 13, offset: 48838},
															run: (*parser).callonBlockParagraphLine140,
															expr: &litMatcher{
																pos:        position{line: 1243, col: 13, offset: 48838},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1251, col: 8, offset: 48930},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1247, col: 12, offset: 48890},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1247, col: 21, offset: 48899},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1249, col: 8, offset: 48919},
														expr: &anyMatcher{
															line: 1249, col: 9, offset: 48920,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 983, col: 26, offset: 40080},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 983, col: 26, offset: 40080},
												val:        "====",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 983, col: 33, offset: 40087},
												expr: &choiceExpr{
													pos: position{line: 1243, col: 7, offset: 48832},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1243, col: 7, offset: 48832},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1243, col: 13, offset: 48838},
															run: (*parser).callonBlockParagraphLine152,
															expr: &litMatcher{
																pos:        position{line: 1243, col: 13, offset: 48838},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1251, col: 8, offset: 48930},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1247, col: 12, offset: 48890},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1247, col: 21, offset: 48899},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1249, col: 8, offset: 48919},
														expr: &anyMatcher{
															line: 1249, col: 9, offset: 48920,
														},
													},
												},
											},
										},
									},
									&litMatcher{
										pos:        position{line: 1092, col: 26, offset: 43998},
										val:        "////",
										ignoreCase: false,
									},
									&seqExpr{
										pos: position{line: 1006, col: 24, offset: 40905},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 1006, col: 24, offset: 40905},
												val:        "____",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 1006, col: 31, offset: 40912},
												expr: &choiceExpr{
													pos: position{line: 1243, col: 7, offset: 48832},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1243, col: 7, offset: 48832},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1243, col: 13, offset: 48838},
															run: (*parser).callonBlockParagraphLine165,
															expr: &litMatcher{
																pos:        position{line: 1243, col: 13, offset: 48838},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1251, col: 8, offset: 48930},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1247, col: 12, offset: 48890},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1247, col: 21, offset: 48899},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1249, col: 8, offset: 48919},
														expr: &anyMatcher{
															line: 1249, col: 9, offset: 48920,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 1050, col: 26, offset: 42506},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 1050, col: 26, offset: 42506},
												val:        "****",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 1050, col: 33, offset: 42513},
												expr: &choiceExpr{
													pos: position{line: 1243, col: 7, offset: 48832},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1243, col: 7, offset: 48832},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1243, col: 13, offset: 48838},
															run: (*parser).callonBlockParagraphLine177,
															expr: &litMatcher{
																pos:        position{line: 1243, col: 13, offset: 48838},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1251, col: 8, offset: 48930},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1247, col: 12, offset: 48890},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1247, col: 21, offset: 48899},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1249, col: 8, offset: 48919},
														expr: &anyMatcher{
															line: 1249, col: 9, offset: 48920,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 999, col: 9, offset: 40640},
							label: "line",
							expr: &ruleRefExpr{
								pos:  position{line: 999, col: 15, offset: 40646},
								name: "InlineElements",
							},
						},
					},
				},
			},
		},
		{
			name: "QuoteBlock",
			pos:  position{line: 1008, col: 1, offset: 40946},
			expr: &actionExpr{
				pos: position{line: 1008, col: 15, offset: 40960},
				run: (*parser).callonQuoteBlock1,
				expr: &seqExpr{
					pos: position{line: 1008, col: 15, offset: 40960},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 1006, col: 24, offset: 40905},
							val:        "____",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 1006, col: 31, offset: 40912},
							expr: &choiceExpr{
								pos: position{line: 1243, col: 7, offset: 48832},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1243, col: 7, offset: 48832},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1243, col: 13, offset: 48838},
										run: (*parser).callonQuoteBlock7,
										expr: &litMatcher{
											pos:        position{line: 1243, col: 13, offset: 48838},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1251, col: 8, offset: 48930},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1247, col: 12, offset: 48890},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1247, col: 21, offset: 48899},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1249, col: 8, offset: 48919},
									expr: &anyMatcher{
										line: 1249, col: 9, offset: 48920,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 1008, col: 35, offset: 40980},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 1008, col: 43, offset: 40988},
								expr: &ruleRefExpr{
									pos:  position{line: 1008, col: 44, offset: 40989},
									name: "QuoteBlockElement",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1008, col: 65, offset: 41010},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 1006, col: 24, offset: 40905},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 1006, col: 24, offset: 40905},
											val:        "____",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 1006, col: 31, offset: 40912},
											expr: &choiceExpr{
												pos: position{line: 1243, col: 7, offset: 48832},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1243, col: 7, offset: 48832},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1243, col: 13, offset: 48838},
														run: (*parser).callonQuoteBlock23,
														expr: &litMatcher{
															pos:        position{line: 1243, col: 13, offset: 48838},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1251, col: 8, offset: 48930},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1247, col: 12, offset: 48890},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1247, col: 21, offset: 48899},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1249, col: 8, offset: 48919},
													expr: &anyMatcher{
														line: 1249, col: 9, offset: 48920,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 1249, col: 8, offset: 48919},
									expr: &anyMatcher{
										line: 1249, col: 9, offset: 48920,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "QuoteBlockElement",
			pos:  position{line: 1012, col: 1, offset: 41127},
			expr: &actionExpr{
				pos: position{line: 1013, col: 5, offset: 41153},
				run: (*parser).callonQuoteBlockElement1,
				expr: &seqExpr{
					pos: position{line: 1013, col: 5, offset: 41153},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 1013, col: 5, offset: 41153},
							expr: &seqExpr{
								pos: position{line: 1006, col: 24, offset: 40905},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 1006, col: 24, offset: 40905},
										val:        "____",
										ignoreCase: false,
									},
									&zeroOrMoreExpr{
										pos: position{line: 1006, col: 31, offset: 40912},
										expr: &choiceExpr{
											pos: position{line: 1243, col: 7, offset: 48832},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1243, col: 7, offset: 48832},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1243, col: 13, offset: 48838},
													run: (*parser).callonQuoteBlockElement9,
													expr: &litMatcher{
														pos:        position{line: 1243, col: 13, offset: 48838},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&choiceExpr{
										pos: position{line: 1251, col: 8, offset: 48930},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1247, col: 12, offset: 48890},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1247, col: 21, offset: 48899},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1249, col: 8, offset: 48919},
												expr: &anyMatcher{
													line: 1249, col: 9, offset: 48920,
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 1013, col: 26, offset: 41174},
							expr: &notExpr{
								pos: position{line: 1249, col: 8, offset: 48919},
								expr: &anyMatcher{
									line: 1249, col: 9, offset: 48920,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 1013, col: 31, offset: 41179},
							label: "element",
							expr: &ruleRefExpr{
								pos:  position{line: 1013, col: 40, offset: 41188},
								name: "DocumentElement",
							},
						},
					},
				},
			},
		},
		{
			name: "VerseBlock",
			pos:  position{line: 1022, col: 1, offset: 41486},
			expr: &actionExpr{
				pos: position{line: 1022, col: 15, offset: 41500},
				run: (*parser).callonVerseBlock1,
				expr: &seqExpr{
					pos: position{line: 1022, col: 15, offset: 41500},
					exprs: []interface{}{
						&andCodeExpr{
							pos: position{line: 1022, col: 15, offset: 41500},
							run: (*parser).callonVerseBlock3,
						},
						&labeledExpr{
							pos:   position{line: 1026, col: 1, offset: 41576},
							label: "verse",
							expr: &actionExpr{
								pos: position{line: 1026, col: 8, offset: 41583},
								run: (*parser).callonVerseBlock5,
								expr: &seqExpr{
									pos: position{line: 1026, col: 8, offset: 41583},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 1006, col: 24, offset: 40905},
											val:        "____",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 1006, col: 31, offset: 40912},
											expr: &choiceExpr{
												pos: position{line: 1243, col: 7, offset: 48832},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1243, col: 7, offset: 48832},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1243, col: 13, offset: 48838},
														run: (*parser).callonVerseBlock11,
														expr: &litMatcher{
															pos:        position{line: 1243, col: 13, offset: 48838},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1251, col: 8, offset: 48930},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1247, col: 12, offset: 48890},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1247, col: 21, offset: 48899},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1249, col: 8, offset: 48919},
													expr: &anyMatcher{
														line: 1249, col: 9, offset: 48920,
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 1026, col: 28, offset: 41603},
											label: "content",
											expr: &zeroOrMoreExpr{
												pos: position{line: 1026, col: 36, offset: 41611},
												expr: &ruleRefExpr{
													pos:  position{line: 1026, col: 37, offset: 41612},
													name: "VerseBlockContent",
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1026, col: 58, offset: 41633},
											alternatives: []interface{}{
												&seqExpr{
													pos: position{line: 1006, col: 24, offset: 40905},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 1006, col: 24, offset: 40905},
															val:        "____",
															ignoreCase: false,
														},
														&zeroOrMoreExpr{
															pos: position{line: 1006, col: 31, offset: 40912},
															expr: &choiceExpr{
																pos: position{line: 1243, col: 7, offset: 48832},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1243, col: 7, offset: 48832},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1243, col: 13, offset: 48838},
																		run: (*parser).callonVerseBlock27,
																		expr: &litMatcher{
																			pos:        position{line: 1243, col: 13, offset: 48838},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
														&choiceExpr{
															pos: position{line: 1251, col: 8, offset: 48930},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1247, col: 12, offset: 48890},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1247, col: 21, offset: 48899},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&notExpr{
																	pos: position{line: 1249, col: 8, offset: 48919},
																	expr: &anyMatcher{
																		line: 1249, col: 9, offset: 48920,
																	},
																},
															},
														},
													},
												},
												&notExpr{
													pos: position{line: 1249, col: 8, offset: 48919},
													expr: &anyMatcher{
														line: 1249, col: 9, offset: 48920,
													},
												},
											},
										},
									},
								},
							},
						},
						&stateCodeExpr{
							pos: position{line: 1028, col: 4, offset: 41750},
							run: (*parser).callonVerseBlock36,
						},
					},
				},
			},
		},
		{
			name: "VerseBlockContent",
			pos:  position{line: 1035, col: 1, offset: 41826},
			expr: &actionExpr{
				pos: position{line: 1035, col: 22, offset: 41847},
				run: (*parser).callonVerseBlockContent1,
				expr: &labeledExpr{
					pos:   position{line: 1035, col: 22, offset: 41847},
					label: "lines",
					expr: &oneOrMoreExpr{
						pos: position{line: 1035, col: 28, offset: 41853},
						expr: &ruleRefExpr{
							pos:  position{line: 1035, col: 29, offset: 41854},
							name: "VerseBlockLine",
						},
					},
				},
			},
		},
		{
			name: "VerseBlockLine",
			pos:  position{line: 1039, col: 1, offset: 41934},
			expr: &actionExpr{
				pos: position{line: 1039, col: 19, offset: 41952},
				run: (*parser).callonVerseBlockLine1,
				expr: &seqExpr{
					pos: position{line: 1039, col: 19, offset: 41952},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 1039, col: 19, offset: 41952},
							expr: &seqExpr{
								pos: position{line: 1006, col: 24, offset: 40905},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 1006, col: 24, offset: 40905},
										val:        "____",
										ignoreCase: false,
									},
									&zeroOrMoreExpr{
										pos: position{line: 1006, col: 31, offset: 40912},
										expr: &choiceExpr{
											pos: position{line: 1243, col: 7, offset: 48832},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1243, col: 7, offset: 48832},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1243, col: 13, offset: 48838},
													run: (*parser).callonVerseBlockLine9,
													expr: &litMatcher{
														pos:        position{line: 1243, col: 13, offset: 48838},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&choiceExpr{
										pos: position{line: 1251, col: 8, offset: 48930},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1247, col: 12, offset: 48890},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1247, col: 21, offset: 48899},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1249, col: 8, offset: 48919},
												expr: &anyMatcher{
													line: 1249, col: 9, offset: 48920,
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 1039, col: 40, offset: 41973},
							expr: &notExpr{
								pos: position{line: 1249, col: 8, offset: 48919},
								expr: &anyMatcher{
									line: 1249, col: 9, offset: 48920,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 1039, col: 45, offset: 41978},
							label: "line",
							expr: &ruleRefExpr{
								pos:  position{line: 1039, col: 51, offset: 41984},
								name: "VerseBlockLineContent",
							},
						},
						&choiceExpr{
							pos: position{line: 1251, col: 8, offset: 48930},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1247, col: 12, offset: 48890},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1247, col: 21, offset: 48899},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1249, col: 8, offset: 48919},
									expr: &anyMatcher{
										line: 1249, col: 9, offset: 48920,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "VerseBlockLineContent",
			pos:  position{line: 1043, col: 1, offset: 42060},
			expr: &actionExpr{
				pos: position{line: 1043, col: 26, offset: 42085},
				run: (*parser).callonVerseBlockLineContent1,
				expr: &labeledExpr{
					pos:   position{line: 1043, col: 26, offset: 42085},
					label: "elements",
					expr: &zeroOrMoreExpr{
						pos: position{line: 1043, col: 35, offset: 42094},
						expr: &seqExpr{
							pos: position{line: 1043, col: 36, offset: 42095},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 1043, col: 36, offset: 42095},
									expr: &seqExpr{
										pos: position{line: 1006, col: 24, offset: 40905},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 1006, col: 24, offset: 40905},
												val:        "____",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 1006, col: 31, offset: 40912},
												expr: &choiceExpr{
													pos: position{line: 1243, col: 7, offset: 48832},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1243, col: 7, offset: 48832},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1243, col: 13, offset: 48838},
															run: (*parser).callonVerseBlockLineContent11,
															expr: &litMatcher{
																pos:        position{line: 1243, col: 13, offset: 48838},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1251, col: 8, offset: 48930},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1247, col: 12, offset: 48890},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1247, col: 21, offset: 48899},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1249, col: 8, offset: 48919},
														expr: &anyMatcher{
															line: 1249, col: 9, offset: 48920,
														},
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 1043, col: 57, offset: 42116},
									expr: &choiceExpr{
										pos: position{line: 1251, col: 8, offset: 48930},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1247, col: 12, offset: 48890},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1247, col: 21, offset: 48899},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1249, col: 8, offset: 48919},
												expr: &anyMatcher{
													line: 1249, col: 9, offset: 48920,
												},
											},
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 1043, col: 62, offset: 42121},
									expr: &choiceExpr{
										pos: position{line: 1243, col: 7, offset: 48832},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1243, col: 7, offset: 48832},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1243, col: 13, offset: 48838},
												run: (*parser).callonVerseBlockLineContent27,
												expr: &litMatcher{
													pos:        position{line: 1243, col: 13, offset: 48838},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&ruleRefExpr{
									pos:  position{line: 1043, col: 66, offset: 42125},
									name: "InlineElement",
								},
								&zeroOrMoreExpr{
									pos: position{line: 1043, col: 80, offset: 42139},
									expr: &choiceExpr{
										pos: position{line: 1243, col: 7, offset: 48832},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1243, col: 7, offset: 48832},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1243, col: 13, offset: 48838},
												run: (*parser).callonVerseBlockLineContent33,
												expr: &litMatcher{
													pos:        position{line: 1243, col: 13, offset: 48838},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "SidebarBlock",
			pos:  position{line: 1052, col: 1, offset: 42522},
			expr: &actionExpr{
				pos: position{line: 1052, col: 17, offset: 42538},
				run: (*parser).callonSidebarBlock1,
				expr: &seqExpr{
					pos: position{line: 1052, col: 17, offset: 42538},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 1050, col: 26, offset: 42506},
							val:        "****",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 1050, col: 33, offset: 42513},
							expr: &choiceExpr{
								pos: position{line: 1243, col: 7, offset: 48832},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1243, col: 7, offset: 48832},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1243, col: 13, offset: 48838},
										run: (*parser).callonSidebarBlock7,
										expr: &litMatcher{
											pos:        position{line: 1243, col: 13, offset: 48838},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1251, col: 8, offset: 48930},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1247, col: 12, offset: 48890},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1247, col: 21, offset: 48899},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1249, col: 8, offset: 48919},
									expr: &anyMatcher{
										line: 1249, col: 9, offset: 48920,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 1052, col: 39, offset: 42560},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 1052, col: 47, offset: 42568},
								expr: &ruleRefExpr{
									pos:  position{line: 1052, col: 48, offset: 42569},
									name: "SidebarBlockContent",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1052, col: 72, offset: 42593},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 1050, col: 26, offset: 42506},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 1050, col: 26, offset: 42506},
											val:        "****",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 1050, col: 33, offset: 42513},
											expr: &choiceExpr{
												pos: position{line: 1243, col: 7, offset: 48832},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1243, col: 7, offset: 48832},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1243, col: 13, offset: 48838},
														run: (*parser).callonSidebarBlock23,
														expr: &litMatcher{
															pos:        position{line: 1243, col: 13, offset: 48838},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1251, col: 8, offset: 48930},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1247, col: 12, offset: 48890},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1247, col: 21, offset: 48899},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1249, col: 8, offset: 48919},
													expr: &anyMatcher{
														line: 1249, col: 9, offset: 48920,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 1249, col: 8, offset: 48919},
									expr: &anyMatcher{
										line: 1249, col: 9, offset: 48920,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "SidebarBlockContent",
			pos:  position{line: 1056, col: 1, offset: 42714},
			expr: &choiceExpr{
				pos: position{line: 1056, col: 24, offset: 42737},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 1056, col: 24, offset: 42737},
						name: "List",
					},
					&ruleRefExpr{
						pos:  position{line: 1056, col: 31, offset: 42744},
						name: "BlockParagraph",
					},
					&actionExpr{
						pos: position{line: 1194, col: 14, offset: 47708},
						run: (*parser).callonSidebarBlockContent4,
						expr: &seqExpr{
							pos: position{line: 1194, col: 14, offset: 47708},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 1194, col: 14, offset: 47708},
									expr: &notExpr{
										pos: position{line: 1249, col: 8, offset: 48919},
										expr: &anyMatcher{
											line: 1249, col: 9, offset: 48920,
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 1194, col: 19, offset: 47713},
									expr: &choiceExpr{
										pos: position{line: 1243, col: 7, offset: 48832},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1243, col: 7, offset: 48832},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1243, col: 13, offset: 48838},
												run: (*parser).callonSidebarBlockContent12,
												expr: &litMatcher{
													pos:        position{line: 1243, col: 13, offset: 48838},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 1251, col: 8, offset: 48930},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 1247, col: 12, offset: 48890},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 1247, col: 21, offset: 48899},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
										&notExpr{
											pos: position{line: 1249, col: 8, offset: 48919},
											expr: &anyMatcher{
												line: 1249, col: 9, offset: 48920,
											},
										},
									},
								},
							},
						},
					},
					&ruleRefExpr{
						pos:  position{line: 1056, col: 60, offset: 42773},
						name: "NonSidebarBlock",
					},
				},
			},
		},
		{
			name: "NonSidebarBlock",
			pos:  position{line: 1058, col: 1, offset: 42790},
			expr: &actionExpr{
				pos: position{line: 1058, col: 20, offset: 42809},
				run: (*parser).callonNonSidebarBlock1,
				expr: &seqExpr{
					pos: position{line: 1058, col: 20, offset: 42809},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 1058, col: 20, offset: 42809},
							expr: &ruleRefExpr{
								pos:  position{line: 1058, col: 21, offset: 42810},
								name: "SidebarBlock",
							},
						},
						&labeledExpr{
							pos:   position{line: 1058, col: 34, offset: 42823},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 1058, col: 43, offset: 42832},
								name: "DelimitedBlock",
							},
						},
					},
				},
			},
		},
		{
			name: "Table",
			pos:  position{line: 1065, col: 1, offset: 43065},
			expr: &actionExpr{
				pos: position{line: 1065, col: 10, offset: 43074},
				run: (*parser).callonTable1,
				expr: &seqExpr{
					pos: position{line: 1065, col: 10, offset: 43074},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 1074, col: 19, offset: 43316},
							val:        "|===",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 1074, col: 26, offset: 43323},
							expr: &choiceExpr{
								pos: position{line: 1243, col: 7, offset: 48832},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1243, col: 7, offset: 48832},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1243, col: 13, offset: 48838},
										run: (*parser).callonTable7,
										expr: &litMatcher{
											pos:        position{line: 1243, col: 13, offset: 48838},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1251, col: 8, offset: 48930},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1247, col: 12, offset: 48890},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1247, col: 21, offset: 48899},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1249, col: 8, offset: 48919},
									expr: &anyMatcher{
										line: 1249, col: 9, offset: 48920,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 1066, col: 5, offset: 43093},
							label: "header",
							expr: &zeroOrOneExpr{
								pos: position{line: 1066, col: 12, offset: 43100},
								expr: &ruleRefExpr{
									pos:  position{line: 1066, col: 13, offset: 43101},
									name: "TableLineHeader",
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 1067, col: 5, offset: 43123},
							label: "lines",
							expr: &zeroOrMoreExpr{
								pos: position{line: 1067, col: 11, offset: 43129},
								expr: &ruleRefExpr{
									pos:  position{line: 1067, col: 12, offset: 43130},
									name: "TableLine",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1068, col: 6, offset: 43147},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 1074, col: 19, offset: 43316},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 1074, col: 19, offset: 43316},
											val:        "|===",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 1074, col: 26, offset: 43323},
											expr: &choiceExpr{
												pos: position{line: 1243, col: 7, offset: 48832},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1243, col: 7, offset: 48832},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1243, col: 13, offset: 48838},
														run: (*parser).callonTable26,
														expr: &litMatcher{
															pos:        position{line: 1243, col: 13, offset: 48838},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1251, col: 8, offset: 48930},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1247, col: 12, offset: 48890},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1247, col: 21, offset: 48899},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1249, col: 8, offset: 48919},
													expr: &anyMatcher{
														line: 1249, col: 9, offset: 48920,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 1249, col: 8, offset: 48919},
									expr: &anyMatcher{
										line: 1249, col: 9, offset: 48920,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "TableLineHeader",
			pos:  position{line: 1077, col: 1, offset: 43395},
			expr: &actionExpr{
				pos: position{line: 1077, col: 20, offset: 43414},
				run: (*parser).callonTableLineHeader1,
				expr: &seqExpr{
					pos: position{line: 1077, col: 20, offset: 43414},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 1077, col: 20, offset: 43414},
							expr: &seqExpr{
								pos: position{line: 1074, col: 19, offset: 43316},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 1074, col: 19, offset: 43316},
										val:        "|===",
										ignoreCase: false,
									},
									&zeroOrMoreExpr{
										pos: position{line: 1074, col: 26, offset: 43323},
										expr: &choiceExpr{
											pos: position{line: 1243, col: 7, offset: 48832},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1243, col: 7, offset: 48832},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1243, col: 13, offset: 48838},
													run: (*parser).callonTableLineHeader9,
													expr: &litMatcher{
														pos:        position{line: 1243, col: 13, offset: 48838},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&choiceExpr{
										pos: position{line: 1251, col: 8, offset: 48930},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1247, col: 12, offset: 48890},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1247, col: 21, offset: 48899},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1249, col: 8, offset: 48919},
												expr: &anyMatcher{
													line: 1249, col: 9, offset: 48920,
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 1077, col: 36, offset: 43430},
							label: "cells",
							expr: &oneOrMoreExpr{
								pos: position{line: 1077, col: 42, offset: 43436},
								expr: &ruleRefExpr{
									pos:  position{line: 1077, col: 43, offset: 43437},
									name: "TableCell",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1251, col: 8, offset: 48930},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1247, col: 12, offset: 48890},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1247, col: 21, offset: 48899},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1249, col: 8, offset: 48919},
									expr: &anyMatcher{
										line: 1249, col: 9, offset: 48920,
									},
								},
							},
						},
						&actionExpr{
							pos: position{line: 1194, col: 14, offset: 47708},
							run: (*parser).callonTableLineHeader24,
							expr: &seqExpr{
								pos: position{line: 1194, col: 14, offset: 47708},
								exprs: []interface{}{
									&notExpr{
										pos: position{line: 1194, col: 14, offset: 47708},
										expr: &notExpr{
											pos: position{line: 1249, col: 8, offset: 48919},
											expr: &anyMatcher{
												line: 1249, col: 9, offset: 48920,
											},
										},
									},
									&zeroOrMoreExpr{
										pos: position{line: 1194, col: 19, offset: 47713},
										expr: &choiceExpr{
											pos: position{line: 1243, col: 7, offset: 48832},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1243, col: 7, offset: 48832},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1243, col: 13, offset: 48838},
													run: (*parser).callonTableLineHeader32,
													expr: &litMatcher{
														pos:        position{line: 1243, col: 13, offset: 48838},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&choiceExpr{
										pos: position{line: 1251, col: 8, offset: 48930},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1247, col: 12, offset: 48890},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1247, col: 21, offset: 48899},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1249, col: 8, offset: 48919},
												expr: &anyMatcher{
													line: 1249, col: 9, offset: 48920,
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "TableLine",
			pos:  position{line: 1081, col: 1, offset: 43521},
			expr: &actionExpr{
				pos: position{line: 1081, col: 14, offset: 43534},
				run: (*parser).callonTableLine1,
				expr: &seqExpr{
					pos: position{line: 1081, col: 14, offset: 43534},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 1081, col: 14, offset: 43534},
							expr: &seqExpr{
								pos: position{line: 1074, col: 19, offset: 43316},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 1074, col: 19, offset: 43316},
										val:        "|===",
										ignoreCase: false,
									},
									&zeroOrMoreExpr{
										pos: position{line: 1074, col: 26, offset: 43323},
										expr: &choiceExpr{
											pos: position{line: 1243, col: 7, offset: 48832},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1243, col: 7, offset: 48832},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1243, col: 13, offset: 48838},
													run: (*parser).callonTableLine9,
													expr: &litMatcher{
														pos:        position{line: 1243, col: 13, offset: 48838},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&choiceExpr{
										pos: position{line: 1251, col: 8, offset: 48930},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1247, col: 12, offset: 48890},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1247, col: 21, offset: 48899},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1249, col: 8, offset: 48919},
												expr: &anyMatcher{
													line: 1249, col: 9, offset: 48920,
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 1081, col: 30, offset: 43550},
							label: "cells",
							expr: &oneOrMoreExpr{
								pos: position{line: 1081, col: 36, offset: 43556},
								expr: &ruleRefExpr{
									pos:  position{line: 1081, col: 37, offset: 43557},
									name: "TableCell",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1251, col: 8, offset: 48930},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1247, col: 12, offset: 48890},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1247, col: 21, offset: 48899},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1249, col: 8, offset: 48919},
									expr: &anyMatcher{
										line: 1249, col: 9, offset: 48920,
									},
								},
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 1081, col: 53, offset: 43573},
							expr: &actionExpr{
								pos: position{line: 1194, col: 14, offset: 47708},
								run: (*parser).callonTableLine25,
								expr: &seqExpr{
									pos: position{line: 1194, col: 14, offset: 47708},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 1194, col: 14, offset: 47708},
											expr: &notExpr{
												pos: position{line: 1249, col: 8, offset: 48919},
												expr: &anyMatcher{
													line: 1249, col: 9, offset: 48920,
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 1194, col: 19, offset: 47713},
											expr: &choiceExpr{
												pos: position{line: 1243, col: 7, offset: 48832},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1243, col: 7, offset: 48832},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1243, col: 13, offset: 48838},
														run: (*parser).callonTableLine33,
														expr: &litMatcher{
															pos:        position{line: 1243, col: 13, offset: 48838},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1251, col: 8, offset: 48930},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1247, col: 12, offset: 48890},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1247, col: 21, offset: 48899},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1249, col: 8, offset: 48919},
													expr: &anyMatcher{
														line: 1249, col: 9, offset: 48920,
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "TableCell",
			pos:  position{line: 1085, col: 1, offset: 43642},
			expr: &actionExpr{
				pos: position{line: 1085, col: 14, offset: 43655},
				run: (*parser).callonTableCell1,
				expr: &seqExpr{
					pos: position{line: 1085, col: 14, offset: 43655},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 1072, col: 23, offset: 43289},
							val:        "|",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 1072, col: 27, offset: 43293},
							expr: &choiceExpr{
								pos: position{line: 1243, col: 7, offset: 48832},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1243, col: 7, offset: 48832},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1243, col: 13, offset: 48838},
										run: (*parser).callonTableCell7,
										expr: &litMatcher{
											pos:        position{line: 1243, col: 13, offset: 48838},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 1085, col: 33, offset: 43674},
							label: "elements",
							expr: &oneOrMoreExpr{
								pos: position{line: 1085, col: 42, offset: 43683},
								expr: &seqExpr{
									pos: position{line: 1085, col: 43, offset: 43684},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 1085, col: 43, offset: 43684},
											expr: &seqExpr{
												pos: position{line: 1072, col: 23, offset: 43289},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 1072, col: 23, offset: 43289},
														val:        "|",
														ignoreCase: false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 1072, col: 27, offset: 43293},
														expr: &choiceExpr{
															pos: position{line: 1243, col: 7, offset: 48832},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1243, col: 7, offset: 48832},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1243, col: 13, offset: 48838},
																	run: (*parser).callonTableCell18,
																	expr: &litMatcher{
																		pos:        position{line: 1243, col: 13, offset: 48838},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
										},
										&notExpr{
											pos: position{line: 1085, col: 63, offset: 43704},
											expr: &choiceExpr{
												pos: position{line: 1251, col: 8, offset: 48930},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1247, col: 12, offset: 48890},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1247, col: 21, offset: 48899},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1249, col: 8, offset: 48919},
														expr: &anyMatcher{
															line: 1249, col: 9, offset: 48920,
														},
													},
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 1085, col: 68, offset: 43709},
											expr: &choiceExpr{
												pos: position{line: 1243, col: 7, offset: 48832},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1243, col: 7, offset: 48832},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1243, col: 13, offset: 48838},
														run: (*parser).callonTableCell29,
														expr: &litMatcher{
															pos:        position{line: 1243, col: 13, offset: 48838},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&ruleRefExpr{
											pos:  position{line: 1085, col: 72, offset: 43713},
											name: "InlineElement",
										},
										&zeroOrMoreExpr{
											pos: position{line: 1085, col: 86, offset: 43727},
											expr: &choiceExpr{
												pos: position{line: 1243, col: 7, offset: 48832},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1243, col: 7, offset: 48832},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1243, col: 13, offset: 48838},
														run: (*parser).callonTableCell35,
														expr: &litMatcher{
															pos:        position{line: 1243, col: 13, offset: 48838},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Alphanums",
			pos:  position{line: 1205, col: 1, offset: 47927},
			expr: &actionExpr{
				pos: position{line: 1205, col: 14, offset: 47940},
				run: (*parser).callonAlphanums1,
				expr: &oneOrMoreExpr{
					pos: position{line: 1205, col: 14, offset: 47940},
					expr: &charClassMatcher{
						pos:        position{line: 1205, col: 14, offset: 47940},
						val:        "[a-zA-Z0-9]",
						ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
						ignoreCase: false,
						inverted:   false,
					},
				},
			},
		},
		{
			name: "WS",
			pos:  position{line: 1243, col: 1, offset: 48826},
			expr: &choiceExpr{
				pos: position{line: 1243, col: 7, offset: 48832},
				alternatives: []interface{}{
					&litMatcher{
						pos:        position{line: 1243, col: 7, offset: 48832},
						val:        " ",
						ignoreCase: false,
					},
					&actionExpr{
						pos: position{line: 1243, col: 13, offset: 48838},
						run: (*parser).callonWS3,
						expr: &litMatcher{
							pos:        position{line: 1243, col: 13, offset: 48838},
							val:        "\t",
							ignoreCase: false,
						},
					},
				},
			},
		},
		{
			name: "NEWLINE",
			pos:  position{line: 1247, col: 1, offset: 48879},
			expr: &choiceExpr{
				pos: position{line: 1247, col: 12, offset: 48890},
				alternatives: []interface{}{
					&litMatcher{
						pos:        position{line: 1247, col: 12, offset: 48890},
						val:        "\r\n",
						ignoreCase: false,
					},
					&charClassMatcher{
						pos:        position{line: 1247, col: 21, offset: 48899},
						val:        "[\\r\\n]",
						chars:      []rune{'\r', '\n'},
						ignoreCase: false,
						inverted:   false,
					},
				},
			},
		},
	},
}

func (c *current) onDocument1(frontMatter, documentHeader, blocks interface{}) (interface{}, error) {
	return types.NewDocument(frontMatter, documentHeader, blocks.([]interface{}))
}

func (p *parser) callonDocument1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocument1(stack["frontMatter"], stack["documentHeader"], stack["blocks"])
}

func (c *current) onDocumentBlock18() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock18()
}

func (c *current) onDocumentBlock30() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock30() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock30()
}

func (c *current) onDocumentBlock21() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock21()
}

func (c *current) onDocumentBlock15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock15()
}

func (c *current) onDocumentBlock11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDocumentBlock11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock11(stack["id"])
}

func (c *current) onDocumentBlock51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock51()
}

func (c *current) onDocumentBlock63() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock63()
}

func (c *current) onDocumentBlock54() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock54() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock54()
}

func (c *current) onDocumentBlock48() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock48() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock48()
}

func (c *current) onDocumentBlock44(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDocumentBlock44() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock44(stack["id"])
}

func (c *current) onDocumentBlock85() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock85() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock85()
}

func (c *current) onDocumentBlock91() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock91() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock91()
}

func (c *current) onDocumentBlock98() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock98() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock98()
}

func (c *current) onDocumentBlock94() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock94() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock94()
}

func (c *current) onDocumentBlock100() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock100() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock100()
}

func (c *current) onDocumentBlock88() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock88() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock88()
}

func (c *current) onDocumentBlock77(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonDocumentBlock77() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock77(stack["title"])
}

func (c *current) onDocumentBlock113() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock113()
}

func (c *current) onDocumentBlock119() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock119()
}

func (c *current) onDocumentBlock126() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock126() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock126()
}

func (c *current) onDocumentBlock122() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock122()
}

func (c *current) onDocumentBlock128() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock128() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock128()
}

func (c *current) onDocumentBlock116() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock116()
}

func (c *current) onDocumentBlock107(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonDocumentBlock107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock107(stack["role"])
}

func (c *current) onDocumentBlock138() (interface{}, error) {
	return types.NewSourceAttributes("")
}

func (p *parser) callonDocumentBlock138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock138()
}

func (c *current) onDocumentBlock147() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock147() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock147()
}

func (c *current) onDocumentBlock154() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock154() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock154()
}

func (c *current) onDocumentBlock150() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock150() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock150()
}

func (c *current) onDocumentBlock156() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonDocumentBlock156() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock156()
}

func (c *current) onDocumentBlock144() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonDocumentBlock144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock144()
}

func (c *current) onDocumentBlock140(language interface{}) (interface{}, error) {
	return types.NewSourceAttributes(language.(string))
}

func (p *parser) callonDocumentBlock140() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock140(stack["language"])
}

func (c *current) onDocumentBlock170() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock170() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock170()
}

func (c *current) onDocumentBlock175() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock175() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock175()
}

func (c *current) onDocumentBlock182() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock182() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock182()
}

func (c *current) onDocumentBlock189() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock189() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock189()
}

func (c *current) onDocumentBlock185() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock185() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock185()
}

func (c *current) onDocumentBlock191() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock191() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock191()
}

func (c *current) onDocumentBlock179() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock179()
}

func (c *current) onDocumentBlock209() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock209() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock209()
}

func (c *current) onDocumentBlock216() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock216() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock216()
}

func (c *current) onDocumentBlock212() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock212() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock212()
}

func (c *current) onDocumentBlock206() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock206() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock206()
}

func (c *current) onDocumentBlock166(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))
}

func (p *parser) callonDocumentBlock166() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock166(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onDocumentBlock235() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock235() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock235()
}

func (c *current) onDocumentBlock240() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock240() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock240()
}

func (c *current) onDocumentBlock247() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock247() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock247()
}

func (c *current) onDocumentBlock254() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock254() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock254()
}

func (c *current) onDocumentBlock250() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock250() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock250()
}

func (c *current) onDocumentBlock256() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock256() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock256()
}

func (c *current) onDocumentBlock244() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock244() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock244()
}

func (c *current) onDocumentBlock231(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")
}

func (p *parser) callonDocumentBlock231() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock231(stack["kind"], stack["author"])
}

func (c *current) onDocumentBlock274() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock274() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock274()
}

func (c *current) onDocumentBlock279() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock279() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock279()
}

func (c *current) onDocumentBlock270(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")
}

func (p *parser) callonDocumentBlock270() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock270(stack["kind"])
}

func (c *current) onDocumentBlock290() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock290() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock290()
}

func (c *current) onDocumentBlock295() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock295() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock295()
}

func (c *current) onDocumentBlock302() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock302() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock302()
}

func (c *current) onDocumentBlock309() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock309() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock309()
}

func (c *current) onDocumentBlock305() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock305() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock305()
}

func (c *current) onDocumentBlock311() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock311() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock311()
}

func (c *current) onDocumentBlock299() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock299() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock299()
}

func (c *current) onDocumentBlock329() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock329() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock329()
}

func (c *current) onDocumentBlock336() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock336() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock336()
}

func (c *current) onDocumentBlock332() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock332() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock332()
}

func (c *current) onDocumentBlock326() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock326() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock326()
}

func (c *current) onDocumentBlock286(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonDocumentBlock286() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock286(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onDocumentBlock355() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock355() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock355()
}

func (c *current) onDocumentBlock360() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock360() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock360()
}

func (c *current) onDocumentBlock367() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock367() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock367()
}

func (c *current) onDocumentBlock374() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock374() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock374()
}

func (c *current) onDocumentBlock370() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock370() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock370()
}

func (c *current) onDocumentBlock376() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock376() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock376()
}

func (c *current) onDocumentBlock364() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock364() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock364()
}

func (c *current) onDocumentBlock351(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonDocumentBlock351() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock351(stack["kind"], stack["author"])
}

func (c *current) onDocumentBlock394() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock394() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock394()
}

func (c *current) onDocumentBlock399() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock399() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock399()
}

func (c *current) onDocumentBlock390(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonDocumentBlock390() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock390(stack["kind"])
}

func (c *current) onDocumentBlock402(attribute interface{}) error {
	c.state["verse"] = true
	return nil
}

func (p *parser) callonDocumentBlock402() error {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock402(stack["attribute"])
}

func (c *current) onDocumentBlock282(attribute interface{}) (interface{}, error) {
	return attribute, nil
}

func (p *parser) callonDocumentBlock282() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock282(stack["attribute"])
}

func (c *current) onDocumentBlock408() (interface{}, error) {
	return types.Tip, nil

}

func (p *parser) callonDocumentBlock408() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock408()
}

func (c *current) onDocumentBlock410() (interface{}, error) {
	return types.Note, nil

}

func (p *parser) callonDocumentBlock410() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock410()
}

func (c *current) onDocumentBlock412() (interface{}, error) {
	return types.Important, nil

}

func (p *parser) callonDocumentBlock412() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock412()
}

func (c *current) onDocumentBlock414() (interface{}, error) {
	return types.Warning, nil

}

func (p *parser) callonDocumentBlock414() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock414()
}

func (c *current) onDocumentBlock416() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonDocumentBlock416() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock416()
}

func (c *current) onDocumentBlock403(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonDocumentBlock403() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock403(stack["k"])
}

func (c *current) onDocumentBlock419() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonDocumentBlock419() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock419()
}

func (c *current) onDocumentBlock427() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock427() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock427()
}

func (c *current) onDocumentBlock438() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock438() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock438()
}

func (c *current) onDocumentBlock441() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock441() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock441()
}

func (c *current) onDocumentBlock444() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock444() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock444()
}

func (c *current) onDocumentBlock449() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock449() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock449()
}

func (c *current) onDocumentBlock456() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock456() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock456()
}

func (c *current) onDocumentBlock452() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock452() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock452()
}

func (c *current) onDocumentBlock458() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock458() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock458()
}

func (c *current) onDocumentBlock435(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock435() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock435(stack["key"])
}

func (c *current) onDocumentBlock473() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock473() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock473()
}

func (c *current) onDocumentBlock480() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock480() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock480()
}

func (c *current) onDocumentBlock476() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock476() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock476()
}

func (c *current) onDocumentBlock482() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock482() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock482()
}

func (c *current) onDocumentBlock469(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock469() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock469(stack["value"])
}

func (c *current) onDocumentBlock496() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock496() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock496()
}

func (c *current) onDocumentBlock432(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentBlock432() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock432(stack["key"], stack["value"])
}

func (c *current) onDocumentBlock504() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock504() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock504()
}

func (c *current) onDocumentBlock507() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock507() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock507()
}

func (c *current) onDocumentBlock510() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock510() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock510()
}

func (c *current) onDocumentBlock515() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock515() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock515()
}

func (c *current) onDocumentBlock522() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock522() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock522()
}

func (c *current) onDocumentBlock518() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock518() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock518()
}

func (c *current) onDocumentBlock524() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock524() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock524()
}

func (c *current) onDocumentBlock501(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock501() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock501(stack["key"])
}

func (c *current) onDocumentBlock538() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock538() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock538()
}

func (c *current) onDocumentBlock498(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentBlock498() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock498(stack["key"])
}

func (c *current) onDocumentBlock421(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonDocumentBlock421() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock421(stack["attributes"])
}

func (c *current) onDocumentBlock544() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock544() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock544()
}

func (c *current) onDocumentBlock5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonDocumentBlock5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock5(stack["attr"])
}

func (c *current) onDocumentBlock1(attributes, block interface{}) (interface{}, error) {
	return types.WithAttributes(block, attributes.([]interface{}))
}

func (p *parser) callonDocumentBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1(stack["attributes"], stack["block"])
}

func (c *current) onFrontMatter13() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFrontMatter13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFrontMatter13()
}

func (c *current) onFrontMatter20() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFrontMatter20() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFrontMatter20()
}

func (c *current) onFrontMatter16() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFrontMatter16() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFrontMatter16()
}

func (c *current) onFrontMatter22() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFrontMatter22() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFrontMatter22()
}

func (c *current) onFrontMatter10() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFrontMatter10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFrontMatter10()
}

func (c *current) onFrontMatter1(content interface{}) (interface{}, error) {
	return types.NewYamlFrontMatter(content.(string))
}

func (p *parser) callonFrontMatter1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFrontMatter1(stack["content"])
}

func (c *current) onDocumentHeader13() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader13()
}

func (c *current) onDocumentHeader24() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader24() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader24()
}

func (c *current) onDocumentHeader31() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader31() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader31()
}

func (c *current) onDocumentHeader47() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader47() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader47()
}

func (c *current) onDocumentHeader34() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader34() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader34()
}

func (c *current) onDocumentHeader53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader53()
}

func (c *current) onDocumentHeader27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader27()
}

func (c *current) onDocumentHeader61() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader61() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader61()
}

func (c *current) onDocumentHeader77() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader77() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader77()
}

func (c *current) onDocumentHeader64() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader64() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader64()
}

func (c *current) onDocumentHeader83() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader83() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader83()
}

func (c *current) onDocumentHeader57() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader57() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader57()
}

func (c *current) onDocumentHeader91() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader91() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader91()
}

func (c *current) onDocumentHeader107() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader107()
}

func (c *current) onDocumentHeader94() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader94() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader94()
}

func (c *current) onDocumentHeader113() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader113()
}

func (c *current) onDocumentHeader87() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader87() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader87()
}

func (c *current) onDocumentHeader123() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader123() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader123()
}

func (c *current) onDocumentHeader126() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader126() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader126()
}

func (c *current) onDocumentHeader117(email interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader117(stack["email"])
}

func (c *current) onDocumentHeader141() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader141()
}

func (c *current) onDocumentHeader148() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader148() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader148()
}

func (c *current) onDocumentHeader19(namePart1, namePart2, namePart3, email interface{}) (interface{}, error) {
	return types.NewDocumentAuthor(namePart1, namePart2, namePart3, email)
}

func (p *parser) callonDocumentHeader19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader19(stack["namePart1"], stack["namePart2"], stack["namePart3"], stack["email"])
}

func (c *current) onDocumentHeader8(authors interface{}) (interface{}, error) {
	return types.NewDocumentAuthors(authors.([]interface{}))
}

func (p *parser) callonDocumentHeader8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader8(stack["authors"])
}

func (c *current) onDocumentHeader160() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader160() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader160()
}

func (c *current) onDocumentHeader169() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader169() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader169()
}

func (c *current) onDocumentHeader176() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader176()
}

func (c *current) onDocumentHeader192() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader192() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader192()
}

func (c *current) onDocumentHeader179() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader179()
}

func (c *current) onDocumentHeader198() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader198()
}

func (c *current) onDocumentHeader172() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader172() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader172()
}

func (c *current) onDocumentHeader286() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader286() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader286()
}

func (c *current) onDocumentHeader293() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader293() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader293()
}

func (c *current) onDocumentHeader164(namePart1, namePart2, namePart3, email interface{}) (interface{}, error) {
	return types.NewDocumentAuthor(namePart1, namePart2, namePart3, email)
}

func (p *parser) callonDocumentHeader164() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader164(stack["namePart1"], stack["namePart2"], stack["namePart3"], stack["email"])
}

func (c *current) onDocumentHeader155(author interface{}) (interface{}, error) {
	return []types.DocumentAuthor{author.(types.DocumentAuthor)}, nil
}

func (p *parser) callonDocumentHeader155() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader155(stack["author"])
}

func (c *current) onDocumentHeader302() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader302() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader302()
}

func (c *current) onDocumentHeader312() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader312() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader312()
}

func (c *current) onDocumentHeader316() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader316() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader316()
}

func (c *current) onDocumentHeader323() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader323() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader323()
}

func (c *current) onDocumentHeader319() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader319() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader319()
}

func (c *current) onDocumentHeader325() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader325() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader325()
}

func (c *current) onDocumentHeader309() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader309() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader309()
}

func (c *current) onDocumentHeader342() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader342() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader342()
}

func (c *current) onDocumentHeader346() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader346() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader346()
}

func (c *current) onDocumentHeader353() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader353() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader353()
}

func (c *current) onDocumentHeader349() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader349() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader349()
}

func (c *current) onDocumentHeader370() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader370() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader370()
}

func (c *current) onDocumentHeader338() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader338() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader338()
}

func (c *current) onDocumentHeader381() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader381() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader381()
}

func (c *current) onDocumentHeader388() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader388() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader388()
}

func (c *current) onDocumentHeader384() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader384() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader384()
}

func (c *current) onDocumentHeader390() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader390() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader390()
}

func (c *current) onDocumentHeader378() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader378() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader378()
}

func (c *current) onDocumentHeader408() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader408() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader408()
}

func (c *current) onDocumentHeader415() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader415() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader415()
}

func (c *current) onDocumentHeader411() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader411() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader411()
}

func (c *current) onDocumentHeader417() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader417() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader417()
}

func (c *current) onDocumentHeader405() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader405() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader405()
}

func (c *current) onDocumentHeader297(revnumber, revdate, revremark interface{}) (interface{}, error) {
	return types.NewDocumentRevision(revnumber, revdate, revremark)
}

func (p *parser) callonDocumentHeader297() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader297(stack["revnumber"], stack["revdate"], stack["revremark"])
}

func (c *current) onDocumentHeader438() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader438() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader438()
}

func (c *current) onDocumentHeader447() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader447() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader447()
}

func (c *current) onDocumentHeader434(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeDeclaration(name.(string), nil)
}

func (p *parser) callonDocumentHeader434() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader434(stack["name"])
}

func (c *current) onDocumentHeader458() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader458() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader458()
}

func (c *current) onDocumentHeader467() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader467() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader467()
}

func (c *current) onDocumentHeader473() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader473() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader473()
}

func (c *current) onDocumentHeader480() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader480() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader480()
}

func (c *current) onDocumentHeader476() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader476() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader476()
}

func (c *current) onDocumentHeader482() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader482() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader482()
}

func (c *current) onDocumentHeader470() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader470() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader470()
}

func (c *current) onDocumentHeader454(name, value interface{}) (interface{}, error) {
	return types.NewDocumentAttributeDeclaration(name.(string), value)
}

func (p *parser) callonDocumentHeader454() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader454(stack["name"], stack["value"])
}

func (c *current) onDocumentHeader1(header, authors, revision, otherAttributes interface{}) (interface{}, error) {

	return types.NewDocumentHeader(header, authors, revision, otherAttributes.([]interface{}))
}

func (p *parser) callonDocumentHeader1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader1(stack["header"], stack["authors"], stack["revision"], stack["otherAttributes"])
}

func (c *current) onDocumentElement16() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement16() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement16()
}

func (c *current) onDocumentElement8() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonDocumentElement8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement8()
}

func (c *current) onDocumentElement27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement27()
}

func (c *current) onDocumentElement36() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement36() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement36()
}

func (c *current) onDocumentElement23(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeDeclaration(name.(string), nil)
}

func (p *parser) callonDocumentElement23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement23(stack["name"])
}

func (c *current) onDocumentElement47() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement47() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement47()
}

func (c *current) onDocumentElement56() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement56() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement56()
}

func (c *current) onDocumentElement62() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement62() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement62()
}

func (c *current) onDocumentElement69() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement69() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement69()
}

func (c *current) onDocumentElement65() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement65() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement65()
}

func (c *current) onDocumentElement71() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement71()
}

func (c *current) onDocumentElement59() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement59() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement59()
}

func (c *current) onDocumentElement43(name, value interface{}) (interface{}, error) {
	return types.NewDocumentAttributeDeclaration(name.(string), value)
}

func (p *parser) callonDocumentElement43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement43(stack["name"], stack["value"])
}

func (c *current) onDocumentElement87() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement87() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement87()
}

func (c *current) onDocumentElement96() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement96() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement96()
}

func (c *current) onDocumentElement83(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeReset(name.(string))
}

func (p *parser) callonDocumentElement83() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement83(stack["name"])
}

func (c *current) onDocumentElement107() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement107()
}

func (c *current) onDocumentElement116() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement116()
}

func (c *current) onDocumentElement103(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeReset(name.(string))
}

func (p *parser) callonDocumentElement103() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement103(stack["name"])
}

func (c *current) onDocumentElement137() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement137() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement137()
}

func (c *current) onDocumentElement149() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement149() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement149()
}

func (c *current) onDocumentElement140() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement140() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement140()
}

func (c *current) onDocumentElement134() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement134() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement134()
}

func (c *current) onDocumentElement165() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement165() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement165()
}

func (c *current) onDocumentElement172() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement172() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement172()
}

func (c *current) onDocumentElement168() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement168() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement168()
}

func (c *current) onDocumentElement174() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement174() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement174()
}

func (c *current) onDocumentElement162() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentElement162() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement162()
}

func (c *current) onDocumentElement188() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement188() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement188()
}

func (c *current) onDocumentElement195() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement195() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement195()
}

func (c *current) onDocumentElement191() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement191() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement191()
}

func (c *current) onDocumentElement197() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement197() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement197()
}

func (c *current) onDocumentElement185() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentElement185() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement185()
}

func (c *current) onDocumentElement211() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement211() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement211()
}

func (c *current) onDocumentElement218() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement218() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement218()
}

func (c *current) onDocumentElement214() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement214() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement214()
}

func (c *current) onDocumentElement220() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement220() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement220()
}

func (c *current) onDocumentElement208() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentElement208() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement208()
}

func (c *current) onDocumentElement240() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement240() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement240()
}

func (c *current) onDocumentElement243() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement243() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement243()
}

func (c *current) onDocumentElement246() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement246() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement246()
}

func (c *current) onDocumentElement251() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement251() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement251()
}

func (c *current) onDocumentElement258() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement258() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement258()
}

func (c *current) onDocumentElement254() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement254() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement254()
}

func (c *current) onDocumentElement260() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement260() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement260()
}

func (c *current) onDocumentElement237(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement237() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement237(stack["key"])
}

func (c *current) onDocumentElement275() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement275() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement275()
}

func (c *current) onDocumentElement282() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement282() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement282()
}

func (c *current) onDocumentElement278() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement278() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement278()
}

func (c *current) onDocumentElement284() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement284() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement284()
}

func (c *current) onDocumentElement271(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement271() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement271(stack["value"])
}

func (c *current) onDocumentElement298() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement298() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement298()
}

func (c *current) onDocumentElement234(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentElement234() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement234(stack["key"], stack["value"])
}

func (c *current) onDocumentElement306() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement306() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement306()
}

func (c *current) onDocumentElement309() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement309() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement309()
}

func (c *current) onDocumentElement312() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement312() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement312()
}

func (c *current) onDocumentElement317() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement317() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement317()
}

func (c *current) onDocumentElement324() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement324() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement324()
}

func (c *current) onDocumentElement320() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement320() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement320()
}

func (c *current) onDocumentElement326() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement326() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement326()
}

func (c *current) onDocumentElement303(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement303() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement303(stack["key"])
}

func (c *current) onDocumentElement340() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement340() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement340()
}

func (c *current) onDocumentElement300(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentElement300() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement300(stack["key"])
}

func (c *current) onDocumentElement158(alt, width, height, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, height, otherAttrs.([]interface{}))
}

func (p *parser) callonDocumentElement158() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement158(stack["alt"], stack["width"], stack["height"], stack["otherAttrs"])
}

func (c *current) onDocumentElement350() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement350() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement350()
}

func (c *current) onDocumentElement357() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement357() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement357()
}

func (c *current) onDocumentElement353() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement353() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement353()
}

func (c *current) onDocumentElement359() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement359() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement359()
}

func (c *current) onDocumentElement347() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentElement347() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement347()
}

func (c *current) onDocumentElement373() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement373() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement373()
}

func (c *current) onDocumentElement380() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement380() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement380()
}

func (c *current) onDocumentElement376() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement376() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement376()
}

func (c *current) onDocumentElement382() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement382() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement382()
}

func (c *current) onDocumentElement370() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentElement370() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement370()
}

func (c *current) onDocumentElement402() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement402() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement402()
}

func (c *current) onDocumentElement405() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement405() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement405()
}

func (c *current) onDocumentElement408() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement408() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement408()
}

func (c *current) onDocumentElement413() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement413() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement413()
}

func (c *current) onDocumentElement420() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement420() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement420()
}

func (c *current) onDocumentElement416() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement416() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement416()
}

func (c *current) onDocumentElement422() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement422() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement422()
}

func (c *current) onDocumentElement399(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement399() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement399(stack["key"])
}

func (c *current) onDocumentElement437() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement437() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement437()
}

func (c *current) onDocumentElement444() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement444() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement444()
}

func (c *current) onDocumentElement440() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement440() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement440()
}

func (c *current) onDocumentElement446() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement446() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement446()
}

func (c *current) onDocumentElement433(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement433() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement433(stack["value"])
}

func (c *current) onDocumentElement460() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement460() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement460()
}

func (c *current) onDocumentElement396(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentElement396() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement396(stack["key"], stack["value"])
}

func (c *current) onDocumentElement468() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement468() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement468()
}

func (c *current) onDocumentElement471() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement471() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement471()
}

func (c *current) onDocumentElement474() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement474() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement474()
}

func (c *current) onDocumentElement479() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement479() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement479()
}

func (c *current) onDocumentElement486() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement486() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement486()
}

func (c *current) onDocumentElement482() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement482() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement482()
}

func (c *current) onDocumentElement488() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement488() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement488()
}

func (c *current) onDocumentElement465(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement465() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement465(stack["key"])
}

func (c *current) onDocumentElement502() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement502() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement502()
}

func (c *current) onDocumentElement462(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentElement462() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement462(stack["key"])
}

func (c *current) onDocumentElement343(alt, width, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, nil, otherAttrs.([]interface{}))
}

func (p *parser) callonDocumentElement343() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement343(stack["alt"], stack["width"], stack["otherAttrs"])
}

func (c *current) onDocumentElement512() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement512() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement512()
}

func (c *current) onDocumentElement519() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement519() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement519()
}

func (c *current) onDocumentElement515() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement515() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement515()
}

func (c *current) onDocumentElement521() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement521() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement521()
}

func (c *current) onDocumentElement509() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentElement509() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement509()
}

func (c *current) onDocumentElement541() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement541() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement541()
}

func (c *current) onDocumentElement544() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement544() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement544()
}

func (c *current) onDocumentElement547() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement547() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement547()
}

func (c *current) onDocumentElement552() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement552() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement552()
}

func (c *current) onDocumentElement559() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement559() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement559()
}

func (c *current) onDocumentElement555() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement555() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement555()
}

func (c *current) onDocumentElement561() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement561() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement561()
}

func (c *current) onDocumentElement538(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement538() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement538(stack["key"])
}

func (c *current) onDocumentElement576() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement576() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement576()
}

func (c *current) onDocumentElement583() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement583() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement583()
}

func (c *current) onDocumentElement579() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement579() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement579()
}

func (c *current) onDocumentElement585() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement585() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement585()
}

func (c *current) onDocumentElement572(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement572() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement572(stack["value"])
}

func (c *current) onDocumentElement599() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement599() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement599()
}

func (c *current) onDocumentElement535(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentElement535() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement535(stack["key"], stack["value"])
}

func (c *current) onDocumentElement607() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement607() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement607()
}

func (c *current) onDocumentElement610() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement610() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement610()
}

func (c *current) onDocumentElement613() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement613() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement613()
}

func (c *current) onDocumentElement618() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement618() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement618()
}

func (c *current) onDocumentElement625() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement625() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement625()
}

func (c *current) onDocumentElement621() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement621() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement621()
}

func (c *current) onDocumentElement627() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement627() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement627()
}

func (c *current) onDocumentElement604(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement604() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement604(stack["key"])
}

func (c *current) onDocumentElement641() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement641() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement641()
}

func (c *current) onDocumentElement601(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentElement601() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement601(stack["key"])
}

func (c *current) onDocumentElement505(alt, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, nil, nil, otherAttrs.([]interface{}))
}

func (p *parser) callonDocumentElement505() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement505(stack["alt"], stack["otherAttrs"])
}

func (c *current) onDocumentElement656() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement656() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement656()
}

func (c *current) onDocumentElement659() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement659() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement659()
}

func (c *current) onDocumentElement662() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement662() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement662()
}

func (c *current) onDocumentElement667() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement667() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement667()
}

func (c *current) onDocumentElement674() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement674() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement674()
}

func (c *current) onDocumentElement670() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement670() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement670()
}

func (c *current) onDocumentElement676() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement676() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement676()
}

func (c *current) onDocumentElement653(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement653() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement653(stack["key"])
}

func (c *current) onDocumentElement691() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement691() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement691()
}

func (c *current) onDocumentElement698() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement698() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement698()
}

func (c *current) onDocumentElement694() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement694() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement694()
}

func (c *current) onDocumentElement700() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement700() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement700()
}

func (c *current) onDocumentElement687(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement687() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement687(stack["value"])
}

func (c *current) onDocumentElement714() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement714() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement714()
}

func (c *current) onDocumentElement650(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentElement650() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement650(stack["key"], stack["value"])
}

func (c *current) onDocumentElement722() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement722() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement722()
}

func (c *current) onDocumentElement725() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement725() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement725()
}

func (c *current) onDocumentElement728() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement728() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement728()
}

func (c *current) onDocumentElement733() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement733() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement733()
}

func (c *current) onDocumentElement740() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement740() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement740()
}

func (c *current) onDocumentElement736() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement736() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement736()
}

func (c *current) onDocumentElement742() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement742() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement742()
}

func (c *current) onDocumentElement719(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement719() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement719(stack["key"])
}

func (c *current) onDocumentElement756() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement756() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement756()
}

func (c *current) onDocumentElement716(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentElement716() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement716(stack["key"])
}

func (c *current) onDocumentElement644(otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(nil, nil, nil, otherAttrs.([]interface{}))
}

func (p *parser) callonDocumentElement644() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement644(stack["otherAttrs"])
}

func (c *current) onDocumentElement762() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement762() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement762()
}

func (c *current) onDocumentElement130(path, inlineAttributes interface{}) (interface{}, error) {
	return types.NewImageBlock(path.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonDocumentElement130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement130(stack["path"], stack["inlineAttributes"])
}

func (c *current) onDocumentElement776() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement776() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement776()
}

func (c *current) onDocumentElement796() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement796() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement796()
}

func (c *current) onDocumentElement810() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement810() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement810()
}

func (c *current) onDocumentElement817() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement817() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement817()
}

func (c *current) onDocumentElement813() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement813() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement813()
}

func (c *current) onDocumentElement827() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement827() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement827()
}

func (c *current) onDocumentElement819() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement819() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement819()
}

func (c *current) onDocumentElement807() (interface{}, error) {
	// skip EOL in line content, and stop when quote block delimiter is encountered
	return types.NewInlineElements(string(c.text))
}

func (p *parser) callonDocumentElement807() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement807()
}

func (c *current) onDocumentElement788(line interface{}) (interface{}, error) {
	return line.(types.InlineElements), nil
}

func (p *parser) callonDocumentElement788() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement788(stack["line"])
}

func (c *current) onDocumentElement785(lines interface{}) (interface{}, error) {
	return types.NewParagraph(lines.([]interface{}), nil)
}

func (p *parser) callonDocumentElement785() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement785(stack["lines"])
}

func (c *current) onDocumentElement852() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement852() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement852()
}

func (c *current) onDocumentElement770(content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Listing, content.([]interface{}), types.None)
}

func (p *parser) callonDocumentElement770() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement770(stack["content"])
}

func (c *current) onDocumentElement868() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement868() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement868()
}

func (c *current) onDocumentElement879() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement879() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement879()
}

func (c *current) onDocumentElement886() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement886() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement886()
}

func (c *current) onDocumentElement882() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement882() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement882()
}

func (c *current) onDocumentElement888() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement888() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement888()
}

func (c *current) onDocumentElement875() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement875() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement875()
}

func (c *current) onDocumentElement910() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement910() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement910()
}

func (c *current) onDocumentElement862(content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Comment, content.([]interface{}), types.Verbatim)
}

func (p *parser) callonDocumentElement862() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement862(stack["content"])
}

func (c *current) onDocumentElement932() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement932() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement932()
}

func (c *current) onDocumentElement936() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement936() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement936()
}

func (c *current) onDocumentElement943() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement943() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement943()
}

func (c *current) onDocumentElement939() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement939() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement939()
}

func (c *current) onDocumentElement945() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonDocumentElement945() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement945()
}

func (c *current) onDocumentElement928() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonDocumentElement928() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement928()
}

func (c *current) onDocumentElement972() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement972() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement972()
}

func (c *current) onDocumentElement964() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonDocumentElement964() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement964()
}

func (c *current) onDocumentElement983() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement983() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement983()
}

func (c *current) onDocumentElement990() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement990() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement990()
}

func (c *current) onDocumentElement986() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement986() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement986()
}

func (c *current) onDocumentElement992() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonDocumentElement992() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement992()
}

func (c *current) onDocumentElement980() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonDocumentElement980() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement980()
}

func (c *current) onDocumentElement961(otherLine interface{}) (interface{}, error) {
	return otherLine, nil // do not include the trailing 'EOL'

}

func (p *parser) callonDocumentElement961() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement961(stack["otherLine"])
}

func (c *current) onDocumentElement925(firstLine, otherLines interface{}) (interface{}, error) {

	return append([]interface{}{firstLine}, otherLines.([]interface{})...), nil
}

func (p *parser) callonDocumentElement925() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement925(stack["firstLine"], stack["otherLines"])
}

func (c *current) onDocumentElement923(lines interface{}) (interface{}, error) {
	return types.NewLiteralBlock(types.LiteralBlockWithSpacesOnFirstLine, lines.([]interface{}))
}

func (p *parser) callonDocumentElement923() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement923(stack["lines"])
}

func (c *current) onDocumentElement1012() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1012() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1012()
}

func (c *current) onDocumentElement1027() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1027() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1027()
}

func (c *current) onDocumentElement1034() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1034() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1034()
}

func (c *current) onDocumentElement1030() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1030() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1030()
}

func (c *current) onDocumentElement1036() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonDocumentElement1036() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1036()
}

func (c *current) onDocumentElement1024() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonDocumentElement1024() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1024()
}

func (c *current) onDocumentElement1021(line interface{}) (interface{}, error) {

	return line, nil // do not include the trailing 'EOL'
}

func (p *parser) callonDocumentElement1021() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1021(stack["line"])
}

func (c *current) onDocumentElement1018(lines interface{}) (interface{}, error) {
	return lines.([]interface{}), nil
}

func (p *parser) callonDocumentElement1018() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1018(stack["lines"])
}

func (c *current) onDocumentElement1058() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1058() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1058()
}

func (c *current) onDocumentElement1006(lines interface{}) (interface{}, error) {
	return types.NewLiteralBlock(types.LiteralBlockWithDelimiter, lines.([]interface{}))
}

func (p *parser) callonDocumentElement1006() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1006(stack["lines"])
}

func (c *current) onDocumentElement1077() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1077() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1077()
}

func (c *current) onDocumentElement1071() (interface{}, error) {
	return types.NewLiteralAttribute()
}

func (p *parser) callonDocumentElement1071() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1071()
}

func (c *current) onDocumentElement1096() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1096() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1096()
}

func (c *current) onDocumentElement1108() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1108() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1108()
}

func (c *current) onDocumentElement1099() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1099() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1099()
}

func (c *current) onDocumentElement1093() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1093() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1093()
}

func (c *current) onDocumentElement1089(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDocumentElement1089() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1089(stack["id"])
}

func (c *current) onDocumentElement1129() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1129()
}

func (c *current) onDocumentElement1141() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1141()
}

func (c *current) onDocumentElement1132() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1132() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1132()
}

func (c *current) onDocumentElement1126() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1126() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1126()
}

func (c *current) onDocumentElement1122(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDocumentElement1122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1122(stack["id"])
}

func (c *current) onDocumentElement1163() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1163() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1163()
}

func (c *current) onDocumentElement1169() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1169() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1169()
}

func (c *current) onDocumentElement1176() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1176()
}

func (c *current) onDocumentElement1172() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1172() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1172()
}

func (c *current) onDocumentElement1178() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1178() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1178()
}

func (c *current) onDocumentElement1166() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1166() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1166()
}

func (c *current) onDocumentElement1155(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonDocumentElement1155() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1155(stack["title"])
}

func (c *current) onDocumentElement1191() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1191() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1191()
}

func (c *current) onDocumentElement1197() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1197() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1197()
}

func (c *current) onDocumentElement1204() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1204() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1204()
}

func (c *current) onDocumentElement1200() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1200() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1200()
}

func (c *current) onDocumentElement1206() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1206() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1206()
}

func (c *current) onDocumentElement1194() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1194() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1194()
}

func (c *current) onDocumentElement1185(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonDocumentElement1185() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1185(stack["role"])
}

func (c *current) onDocumentElement1216() (interface{}, error) {
	return types.NewSourceAttributes("")
}

func (p *parser) callonDocumentElement1216() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1216()
}

func (c *current) onDocumentElement1225() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1225() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1225()
}

func (c *current) onDocumentElement1232() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1232() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1232()
}

func (c *current) onDocumentElement1228() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1228() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1228()
}

func (c *current) onDocumentElement1234() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonDocumentElement1234() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1234()
}

func (c *current) onDocumentElement1222() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonDocumentElement1222() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1222()
}

func (c *current) onDocumentElement1218(language interface{}) (interface{}, error) {
	return types.NewSourceAttributes(language.(string))
}

func (p *parser) callonDocumentElement1218() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1218(stack["language"])
}

func (c *current) onDocumentElement1248() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1248() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1248()
}

func (c *current) onDocumentElement1253() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1253() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1253()
}

func (c *current) onDocumentElement1260() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1260() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1260()
}

func (c *current) onDocumentElement1267() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1267() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1267()
}

func (c *current) onDocumentElement1263() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1263() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1263()
}

func (c *current) onDocumentElement1269() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1269() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1269()
}

func (c *current) onDocumentElement1257() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1257() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1257()
}

func (c *current) onDocumentElement1287() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1287() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1287()
}

func (c *current) onDocumentElement1294() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1294() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1294()
}

func (c *current) onDocumentElement1290() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1290() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1290()
}

func (c *current) onDocumentElement1284() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1284() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1284()
}

func (c *current) onDocumentElement1244(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))
}

func (p *parser) callonDocumentElement1244() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1244(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onDocumentElement1313() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1313() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1313()
}

func (c *current) onDocumentElement1318() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1318() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1318()
}

func (c *current) onDocumentElement1325() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1325() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1325()
}

func (c *current) onDocumentElement1332() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1332() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1332()
}

func (c *current) onDocumentElement1328() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1328() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1328()
}

func (c *current) onDocumentElement1334() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1334() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1334()
}

func (c *current) onDocumentElement1322() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1322() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1322()
}

func (c *current) onDocumentElement1309(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")
}

func (p *parser) callonDocumentElement1309() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1309(stack["kind"], stack["author"])
}

func (c *current) onDocumentElement1352() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1352() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1352()
}

func (c *current) onDocumentElement1357() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1357() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1357()
}

func (c *current) onDocumentElement1348(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")
}

func (p *parser) callonDocumentElement1348() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1348(stack["kind"])
}

func (c *current) onDocumentElement1368() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1368() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1368()
}

func (c *current) onDocumentElement1373() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1373() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1373()
}

func (c *current) onDocumentElement1380() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1380() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1380()
}

func (c *current) onDocumentElement1387() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1387() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1387()
}

func (c *current) onDocumentElement1383() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1383() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1383()
}

func (c *current) onDocumentElement1389() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1389() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1389()
}

func (c *current) onDocumentElement1377() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1377() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1377()
}

func (c *current) onDocumentElement1407() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1407() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1407()
}

func (c *current) onDocumentElement1414() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1414() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1414()
}

func (c *current) onDocumentElement1410() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1410() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1410()
}

func (c *current) onDocumentElement1404() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1404() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1404()
}

func (c *current) onDocumentElement1364(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonDocumentElement1364() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1364(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onDocumentElement1433() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1433() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1433()
}

func (c *current) onDocumentElement1438() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1438() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1438()
}

func (c *current) onDocumentElement1445() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1445() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1445()
}

func (c *current) onDocumentElement1452() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1452() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1452()
}

func (c *current) onDocumentElement1448() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1448() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1448()
}

func (c *current) onDocumentElement1454() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1454() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1454()
}

func (c *current) onDocumentElement1442() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1442() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1442()
}

func (c *current) onDocumentElement1429(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonDocumentElement1429() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1429(stack["kind"], stack["author"])
}

func (c *current) onDocumentElement1472() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1472() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1472()
}

func (c *current) onDocumentElement1477() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1477() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1477()
}

func (c *current) onDocumentElement1468(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonDocumentElement1468() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1468(stack["kind"])
}

func (c *current) onDocumentElement1480(attribute interface{}) error {
	c.state["verse"] = true
	return nil
}

func (p *parser) callonDocumentElement1480() error {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1480(stack["attribute"])
}

func (c *current) onDocumentElement1360(attribute interface{}) (interface{}, error) {
	return attribute, nil
}

func (p *parser) callonDocumentElement1360() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1360(stack["attribute"])
}

func (c *current) onDocumentElement1486() (interface{}, error) {
	return types.Tip, nil

}

func (p *parser) callonDocumentElement1486() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1486()
}

func (c *current) onDocumentElement1488() (interface{}, error) {
	return types.Note, nil

}

func (p *parser) callonDocumentElement1488() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1488()
}

func (c *current) onDocumentElement1490() (interface{}, error) {
	return types.Important, nil

}

func (p *parser) callonDocumentElement1490() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1490()
}

func (c *current) onDocumentElement1492() (interface{}, error) {
	return types.Warning, nil

}

func (p *parser) callonDocumentElement1492() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1492()
}

func (c *current) onDocumentElement1494() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonDocumentElement1494() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1494()
}

func (c *current) onDocumentElement1481(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonDocumentElement1481() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1481(stack["k"])
}

func (c *current) onDocumentElement1497() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonDocumentElement1497() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1497()
}

func (c *current) onDocumentElement1505() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1505() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1505()
}

func (c *current) onDocumentElement1516() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1516() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1516()
}

func (c *current) onDocumentElement1519() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1519() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1519()
}

func (c *current) onDocumentElement1522() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1522() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1522()
}

func (c *current) onDocumentElement1527() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1527() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1527()
}

func (c *current) onDocumentElement1534() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1534() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1534()
}

func (c *current) onDocumentElement1530() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1530() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1530()
}

func (c *current) onDocumentElement1536() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1536() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1536()
}

func (c *current) onDocumentElement1513(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1513() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1513(stack["key"])
}

func (c *current) onDocumentElement1551() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1551() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1551()
}

func (c *current) onDocumentElement1558() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1558() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1558()
}

func (c *current) onDocumentElement1554() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1554() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1554()
}

func (c *current) onDocumentElement1560() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1560() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1560()
}

func (c *current) onDocumentElement1547(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1547() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1547(stack["value"])
}

func (c *current) onDocumentElement1574() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1574() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1574()
}

func (c *current) onDocumentElement1510(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentElement1510() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1510(stack["key"], stack["value"])
}

func (c *current) onDocumentElement1582() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1582() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1582()
}

func (c *current) onDocumentElement1585() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1585() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1585()
}

func (c *current) onDocumentElement1588() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1588() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1588()
}

func (c *current) onDocumentElement1593() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1593() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1593()
}

func (c *current) onDocumentElement1600() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1600() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1600()
}

func (c *current) onDocumentElement1596() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1596() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1596()
}

func (c *current) onDocumentElement1602() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1602() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1602()
}

func (c *current) onDocumentElement1579(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1579() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1579(stack["key"])
}

func (c *current) onDocumentElement1616() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1616() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1616()
}

func (c *current) onDocumentElement1576(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentElement1576() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1576(stack["key"])
}

func (c *current) onDocumentElement1499(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonDocumentElement1499() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1499(stack["attributes"])
}

func (c *current) onDocumentElement1622() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1622() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1622()
}

func (c *current) onDocumentElement1083(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonDocumentElement1083() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1083(stack["attr"])
}

func (c *current) onDocumentElement1647() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1647() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1647()
}

func (c *current) onDocumentElement1639() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonDocumentElement1639() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1639()
}

func (c *current) onDocumentElement1656() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1656() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1656()
}

func (c *current) onDocumentElement1663() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1663() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1663()
}

func (c *current) onDocumentElement1659() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1659() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1659()
}

func (c *current) onDocumentElement1665() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1665() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1665()
}

func (c *current) onDocumentElement1636() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1636() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1636()
}

func (c *current) onDocumentElement1633(line interface{}) (interface{}, error) {
	return line, nil // do not include the trailing 'EOL'
}

func (p *parser) callonDocumentElement1633() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1633(stack["line"])
}

func (c *current) onDocumentElement1630(lines interface{}) (interface{}, error) {

	return lines.([]interface{}), nil
}

func (p *parser) callonDocumentElement1630() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1630(stack["lines"])
}

func (c *current) onDocumentElement1067(attributes, lines interface{}) (interface{}, error) {
	return types.NewLiteralBlock(types.LiteralBlockWithAttribute, lines.([]interface{}), attributes.([]interface{}))
}

func (p *parser) callonDocumentElement1067() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1067(stack["attributes"], stack["lines"])
}

func (c *current) onDocumentElement1(element interface{}) (interface{}, error) {
	return element, nil
}

func (p *parser) callonDocumentElement1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1(stack["element"])
}

func (c *current) onQuoteAttributes6() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes6() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes6()
}

func (c *current) onQuoteAttributes11() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes11()
}

func (c *current) onQuoteAttributes18() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes18()
}

func (c *current) onQuoteAttributes25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes25()
}

func (c *current) onQuoteAttributes21() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes21()
}

func (c *current) onQuoteAttributes27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes27()
}

func (c *current) onQuoteAttributes15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes15()
}

func (c *current) onQuoteAttributes45() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes45() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes45()
}

func (c *current) onQuoteAttributes52() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes52() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes52()
}

func (c *current) onQuoteAttributes48() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes48() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes48()
}

func (c *current) onQuoteAttributes42() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes42() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes42()
}

func (c *current) onQuoteAttributes2(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))
}

func (p *parser) callonQuoteAttributes2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes2(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onQuoteAttributes71() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes71()
}

func (c *current) onQuoteAttributes76() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes76() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes76()
}

func (c *current) onQuoteAttributes83() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes83() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes83()
}

func (c *current) onQuoteAttributes90() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes90() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes90()
}

func (c *current) onQuoteAttributes86() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes86()
}

func (c *current) onQuoteAttributes92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes92()
}

func (c *current) onQuoteAttributes80() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes80() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes80()
}

func (c *current) onQuoteAttributes67(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")
}

func (p *parser) callonQuoteAttributes67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes67(stack["kind"], stack["author"])
}

func (c *current) onQuoteAttributes110() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes110() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes110()
}

func (c *current) onQuoteAttributes115() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes115()
}

func (c *current) onQuoteAttributes106(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")
}

func (p *parser) callonQuoteAttributes106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes106(stack["kind"])
}

func (c *current) onVerseAttributes9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes9()
}

func (c *current) onVerseAttributes14() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes14()
}

func (c *current) onVerseAttributes21() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes21()
}

func (c *current) onVerseAttributes28() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes28() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes28()
}

func (c *current) onVerseAttributes24() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes24() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes24()
}

func (c *current) onVerseAttributes30() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes30() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes30()
}

func (c *current) onVerseAttributes18() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes18()
}

func (c *current) onVerseAttributes48() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes48() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes48()
}

func (c *current) onVerseAttributes55() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes55() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes55()
}

func (c *current) onVerseAttributes51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes51()
}

func (c *current) onVerseAttributes45() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes45() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes45()
}

func (c *current) onVerseAttributes5(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonVerseAttributes5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes5(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onVerseAttributes74() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes74() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes74()
}

func (c *current) onVerseAttributes79() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes79() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes79()
}

func (c *current) onVerseAttributes86() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes86()
}

func (c *current) onVerseAttributes93() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes93() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes93()
}

func (c *current) onVerseAttributes89() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes89() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes89()
}

func (c *current) onVerseAttributes95() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes95()
}

func (c *current) onVerseAttributes83() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes83() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes83()
}

func (c *current) onVerseAttributes70(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonVerseAttributes70() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes70(stack["kind"], stack["author"])
}

func (c *current) onVerseAttributes113() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes113()
}

func (c *current) onVerseAttributes118() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes118() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes118()
}

func (c *current) onVerseAttributes109(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonVerseAttributes109() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes109(stack["kind"])
}

func (c *current) onVerseAttributes121(attribute interface{}) error {
	c.state["verse"] = true
	return nil
}

func (p *parser) callonVerseAttributes121() error {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes121(stack["attribute"])
}

func (c *current) onVerseAttributes1(attribute interface{}) (interface{}, error) {
	return attribute, nil
}

func (p *parser) callonVerseAttributes1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes1(stack["attribute"])
}

func (c *current) onSection1(section interface{}) (interface{}, error) {
	return section, nil
}

func (p *parser) callonSection1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1(stack["section"])
}

func (c *current) onSection01(header, elements interface{}) (interface{}, error) {
	return types.NewSection(0, header.(types.SectionTitle), elements.([]interface{}))
}

func (p *parser) callonSection01() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection01(stack["header"], stack["elements"])
}

func (c *current) onSection0Title7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title7()
}

func (c *current) onSection0Title20() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title20() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title20()
}

func (c *current) onSection0Title32() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title32() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title32()
}

func (c *current) onSection0Title23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title23()
}

func (c *current) onSection0Title17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title17()
}

func (c *current) onSection0Title49() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title49()
}

func (c *current) onSection0Title13(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonSection0Title13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title13(stack["id"])
}

func (c *current) onSection0Title1(elements, id interface{}) (interface{}, error) {

	return types.NewSectionTitle(elements.(types.InlineElements), id.([]interface{}))
}

func (p *parser) callonSection0Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title1(stack["elements"], stack["id"])
}

func (c *current) onSection0TitleWithAttributes18() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes18()
}

func (c *current) onSection0TitleWithAttributes30() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes30() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes30()
}

func (c *current) onSection0TitleWithAttributes21() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes21()
}

func (c *current) onSection0TitleWithAttributes15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes15()
}

func (c *current) onSection0TitleWithAttributes11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection0TitleWithAttributes11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes11(stack["id"])
}

func (c *current) onSection0TitleWithAttributes51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes51()
}

func (c *current) onSection0TitleWithAttributes63() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes63()
}

func (c *current) onSection0TitleWithAttributes54() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes54() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes54()
}

func (c *current) onSection0TitleWithAttributes48() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes48() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes48()
}

func (c *current) onSection0TitleWithAttributes44(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection0TitleWithAttributes44() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes44(stack["id"])
}

func (c *current) onSection0TitleWithAttributes85() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes85() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes85()
}

func (c *current) onSection0TitleWithAttributes91() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes91() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes91()
}

func (c *current) onSection0TitleWithAttributes98() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes98() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes98()
}

func (c *current) onSection0TitleWithAttributes94() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes94() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes94()
}

func (c *current) onSection0TitleWithAttributes100() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes100() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes100()
}

func (c *current) onSection0TitleWithAttributes88() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes88() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes88()
}

func (c *current) onSection0TitleWithAttributes77(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection0TitleWithAttributes77() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes77(stack["title"])
}

func (c *current) onSection0TitleWithAttributes113() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes113()
}

func (c *current) onSection0TitleWithAttributes119() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes119()
}

func (c *current) onSection0TitleWithAttributes126() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes126() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes126()
}

func (c *current) onSection0TitleWithAttributes122() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes122()
}

func (c *current) onSection0TitleWithAttributes128() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes128() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes128()
}

func (c *current) onSection0TitleWithAttributes116() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes116()
}

func (c *current) onSection0TitleWithAttributes107(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection0TitleWithAttributes107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes107(stack["role"])
}

func (c *current) onSection0TitleWithAttributes138() (interface{}, error) {
	return types.NewSourceAttributes("")
}

func (p *parser) callonSection0TitleWithAttributes138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes138()
}

func (c *current) onSection0TitleWithAttributes147() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes147() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes147()
}

func (c *current) onSection0TitleWithAttributes154() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes154() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes154()
}

func (c *current) onSection0TitleWithAttributes150() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes150() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes150()
}

func (c *current) onSection0TitleWithAttributes156() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection0TitleWithAttributes156() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes156()
}

func (c *current) onSection0TitleWithAttributes144() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection0TitleWithAttributes144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes144()
}

func (c *current) onSection0TitleWithAttributes140(language interface{}) (interface{}, error) {
	return types.NewSourceAttributes(language.(string))
}

func (p *parser) callonSection0TitleWithAttributes140() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes140(stack["language"])
}

func (c *current) onSection0TitleWithAttributes170() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes170() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes170()
}

func (c *current) onSection0TitleWithAttributes175() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes175() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes175()
}

func (c *current) onSection0TitleWithAttributes182() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes182() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes182()
}

func (c *current) onSection0TitleWithAttributes189() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes189() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes189()
}

func (c *current) onSection0TitleWithAttributes185() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes185() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes185()
}

func (c *current) onSection0TitleWithAttributes191() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes191() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes191()
}

func (c *current) onSection0TitleWithAttributes179() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes179()
}

func (c *current) onSection0TitleWithAttributes209() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes209() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes209()
}

func (c *current) onSection0TitleWithAttributes216() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes216() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes216()
}

func (c *current) onSection0TitleWithAttributes212() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes212() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes212()
}

func (c *current) onSection0TitleWithAttributes206() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes206() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes206()
}

func (c *current) onSection0TitleWithAttributes166(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))
}

func (p *parser) callonSection0TitleWithAttributes166() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes166(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onSection0TitleWithAttributes235() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes235() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes235()
}

func (c *current) onSection0TitleWithAttributes240() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes240() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes240()
}

func (c *current) onSection0TitleWithAttributes247() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes247() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes247()
}

func (c *current) onSection0TitleWithAttributes254() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes254() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes254()
}

func (c *current) onSection0TitleWithAttributes250() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes250() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes250()
}

func (c *current) onSection0TitleWithAttributes256() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes256() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes256()
}

func (c *current) onSection0TitleWithAttributes244() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes244() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes244()
}

func (c *current) onSection0TitleWithAttributes231(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")
}

func (p *parser) callonSection0TitleWithAttributes231() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes231(stack["kind"], stack["author"])
}

func (c *current) onSection0TitleWithAttributes274() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes274() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes274()
}

func (c *current) onSection0TitleWithAttributes279() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes279() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes279()
}

func (c *current) onSection0TitleWithAttributes270(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")
}

func (p *parser) callonSection0TitleWithAttributes270() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes270(stack["kind"])
}

func (c *current) onSection0TitleWithAttributes290() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes290() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes290()
}

func (c *current) onSection0TitleWithAttributes295() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes295() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes295()
}

func (c *current) onSection0TitleWithAttributes302() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes302() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes302()
}

func (c *current) onSection0TitleWithAttributes309() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes309() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes309()
}

func (c *current) onSection0TitleWithAttributes305() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes305() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes305()
}

func (c *current) onSection0TitleWithAttributes311() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes311() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes311()
}

func (c *current) onSection0TitleWithAttributes299() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes299() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes299()
}

func (c *current) onSection0TitleWithAttributes329() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes329() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes329()
}

func (c *current) onSection0TitleWithAttributes336() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes336() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes336()
}

func (c *current) onSection0TitleWithAttributes332() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes332() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes332()
}

func (c *current) onSection0TitleWithAttributes326() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes326() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes326()
}

func (c *current) onSection0TitleWithAttributes286(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonSection0TitleWithAttributes286() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes286(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onSection0TitleWithAttributes355() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes355() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes355()
}

func (c *current) onSection0TitleWithAttributes360() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes360() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes360()
}

func (c *current) onSection0TitleWithAttributes367() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes367() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes367()
}

func (c *current) onSection0TitleWithAttributes374() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes374() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes374()
}

func (c *current) onSection0TitleWithAttributes370() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes370() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes370()
}

func (c *current) onSection0TitleWithAttributes376() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes376() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes376()
}

func (c *current) onSection0TitleWithAttributes364() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes364() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes364()
}

func (c *current) onSection0TitleWithAttributes351(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonSection0TitleWithAttributes351() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes351(stack["kind"], stack["author"])
}

func (c *current) onSection0TitleWithAttributes394() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes394() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes394()
}

func (c *current) onSection0TitleWithAttributes399() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes399() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes399()
}

func (c *current) onSection0TitleWithAttributes390(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonSection0TitleWithAttributes390() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes390(stack["kind"])
}

func (c *current) onSection0TitleWithAttributes402(attribute interface{}) error {
	c.state["verse"] = true
	return nil
}

func (p *parser) callonSection0TitleWithAttributes402() error {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes402(stack["attribute"])
}

func (c *current) onSection0TitleWithAttributes282(attribute interface{}) (interface{}, error) {
	return attribute, nil
}

func (p *parser) callonSection0TitleWithAttributes282() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes282(stack["attribute"])
}

func (c *current) onSection0TitleWithAttributes408() (interface{}, error) {
	return types.Tip, nil

}

func (p *parser) callonSection0TitleWithAttributes408() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes408()
}

func (c *current) onSection0TitleWithAttributes410() (interface{}, error) {
	return types.Note, nil

}

func (p *parser) callonSection0TitleWithAttributes410() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes410()
}

func (c *current) onSection0TitleWithAttributes412() (interface{}, error) {
	return types.Important, nil

}

func (p *parser) callonSection0TitleWithAttributes412() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes412()
}

func (c *current) onSection0TitleWithAttributes414() (interface{}, error) {
	return types.Warning, nil

}

func (p *parser) callonSection0TitleWithAttributes414() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes414()
}

func (c *current) onSection0TitleWithAttributes416() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection0TitleWithAttributes416() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes416()
}

func (c *current) onSection0TitleWithAttributes403(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection0TitleWithAttributes403() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes403(stack["k"])
}

func (c *current) onSection0TitleWithAttributes419() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection0TitleWithAttributes419() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes419()
}

func (c *current) onSection0TitleWithAttributes427() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes427() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes427()
}

func (c *current) onSection0TitleWithAttributes438() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes438() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes438()
}

func (c *current) onSection0TitleWithAttributes441() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes441() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes441()
}

func (c *current) onSection0TitleWithAttributes444() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes444() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes444()
}

func (c *current) onSection0TitleWithAttributes449() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes449() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes449()
}

func (c *current) onSection0TitleWithAttributes456() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes456() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes456()
}

func (c *current) onSection0TitleWithAttributes452() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes452() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes452()
}

func (c *current) onSection0TitleWithAttributes458() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes458() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes458()
}

func (c *current) onSection0TitleWithAttributes435(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes435() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes435(stack["key"])
}

func (c *current) onSection0TitleWithAttributes473() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes473() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes473()
}

func (c *current) onSection0TitleWithAttributes480() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes480() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes480()
}

func (c *current) onSection0TitleWithAttributes476() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes476() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes476()
}

func (c *current) onSection0TitleWithAttributes482() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes482() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes482()
}

func (c *current) onSection0TitleWithAttributes469(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes469() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes469(stack["value"])
}

func (c *current) onSection0TitleWithAttributes496() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes496() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes496()
}

func (c *current) onSection0TitleWithAttributes432(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection0TitleWithAttributes432() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes432(stack["key"], stack["value"])
}

func (c *current) onSection0TitleWithAttributes504() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes504() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes504()
}

func (c *current) onSection0TitleWithAttributes507() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes507() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes507()
}

func (c *current) onSection0TitleWithAttributes510() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes510() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes510()
}

func (c *current) onSection0TitleWithAttributes515() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes515() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes515()
}

func (c *current) onSection0TitleWithAttributes522() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes522() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes522()
}

func (c *current) onSection0TitleWithAttributes518() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes518() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes518()
}

func (c *current) onSection0TitleWithAttributes524() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes524() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes524()
}

func (c *current) onSection0TitleWithAttributes501(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes501() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes501(stack["key"])
}

func (c *current) onSection0TitleWithAttributes538() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes538() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes538()
}

func (c *current) onSection0TitleWithAttributes498(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection0TitleWithAttributes498() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes498(stack["key"])
}

func (c *current) onSection0TitleWithAttributes421(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection0TitleWithAttributes421() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes421(stack["attributes"])
}

func (c *current) onSection0TitleWithAttributes544() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes544() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes544()
}

func (c *current) onSection0TitleWithAttributes5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection0TitleWithAttributes5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes5(stack["attr"])
}

func (c *current) onSection0TitleWithAttributes1(attributes, title interface{}) (interface{}, error) {
	return types.WithAttributes(title, attributes.([]interface{}))
}

func (p *parser) callonSection0TitleWithAttributes1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes1(stack["attributes"], stack["title"])
}

func (c *current) onSection0Element9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element9()
}

func (c *current) onSection0Element26() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element26()
}

func (c *current) onSection0Element38() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element38() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element38()
}

func (c *current) onSection0Element29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element29()
}

func (c *current) onSection0Element23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element23()
}

func (c *current) onSection0Element19(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection0Element19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element19(stack["id"])
}

func (c *current) onSection0Element59() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element59() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element59()
}

func (c *current) onSection0Element71() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element71()
}

func (c *current) onSection0Element62() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element62() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element62()
}

func (c *current) onSection0Element56() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element56() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element56()
}

func (c *current) onSection0Element52(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection0Element52() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element52(stack["id"])
}

func (c *current) onSection0Element93() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element93() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element93()
}

func (c *current) onSection0Element99() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element99() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element99()
}

func (c *current) onSection0Element106() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element106()
}

func (c *current) onSection0Element102() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element102()
}

func (c *current) onSection0Element108() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element108() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element108()
}

func (c *current) onSection0Element96() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element96() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element96()
}

func (c *current) onSection0Element85(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection0Element85() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element85(stack["title"])
}

func (c *current) onSection0Element121() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element121()
}

func (c *current) onSection0Element127() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element127() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element127()
}

func (c *current) onSection0Element134() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element134() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element134()
}

func (c *current) onSection0Element130() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element130()
}

func (c *current) onSection0Element136() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element136() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element136()
}

func (c *current) onSection0Element124() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element124()
}

func (c *current) onSection0Element115(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection0Element115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element115(stack["role"])
}

func (c *current) onSection0Element146() (interface{}, error) {
	return types.NewSourceAttributes("")
}

func (p *parser) callonSection0Element146() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element146()
}

func (c *current) onSection0Element155() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element155() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element155()
}

func (c *current) onSection0Element162() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element162() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element162()
}

func (c *current) onSection0Element158() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element158() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element158()
}

func (c *current) onSection0Element164() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection0Element164() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element164()
}

func (c *current) onSection0Element152() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection0Element152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element152()
}

func (c *current) onSection0Element148(language interface{}) (interface{}, error) {
	return types.NewSourceAttributes(language.(string))
}

func (p *parser) callonSection0Element148() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element148(stack["language"])
}

func (c *current) onSection0Element178() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element178() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element178()
}

func (c *current) onSection0Element183() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element183() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element183()
}

func (c *current) onSection0Element190() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element190() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element190()
}

func (c *current) onSection0Element197() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element197() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element197()
}

func (c *current) onSection0Element193() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element193() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element193()
}

func (c *current) onSection0Element199() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element199() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element199()
}

func (c *current) onSection0Element187() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element187() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element187()
}

func (c *current) onSection0Element217() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element217() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element217()
}

func (c *current) onSection0Element224() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element224() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element224()
}

func (c *current) onSection0Element220() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element220() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element220()
}

func (c *current) onSection0Element214() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element214() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element214()
}

func (c *current) onSection0Element174(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))
}

func (p *parser) callonSection0Element174() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element174(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onSection0Element243() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element243() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element243()
}

func (c *current) onSection0Element248() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element248() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element248()
}

func (c *current) onSection0Element255() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element255() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element255()
}

func (c *current) onSection0Element262() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element262() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element262()
}

func (c *current) onSection0Element258() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element258() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element258()
}

func (c *current) onSection0Element264() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element264() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element264()
}

func (c *current) onSection0Element252() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element252() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element252()
}

func (c *current) onSection0Element239(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")
}

func (p *parser) callonSection0Element239() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element239(stack["kind"], stack["author"])
}

func (c *current) onSection0Element282() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element282() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element282()
}

func (c *current) onSection0Element287() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element287() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element287()
}

func (c *current) onSection0Element278(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")
}

func (p *parser) callonSection0Element278() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element278(stack["kind"])
}

func (c *current) onSection0Element298() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element298() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element298()
}

func (c *current) onSection0Element303() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element303() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element303()
}

func (c *current) onSection0Element310() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element310() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element310()
}

func (c *current) onSection0Element317() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element317() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element317()
}

func (c *current) onSection0Element313() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element313() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element313()
}

func (c *current) onSection0Element319() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element319() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element319()
}

func (c *current) onSection0Element307() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element307() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element307()
}

func (c *current) onSection0Element337() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element337() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element337()
}

func (c *current) onSection0Element344() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element344() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element344()
}

func (c *current) onSection0Element340() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element340() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element340()
}

func (c *current) onSection0Element334() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element334() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element334()
}

func (c *current) onSection0Element294(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonSection0Element294() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element294(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onSection0Element363() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element363() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element363()
}

func (c *current) onSection0Element368() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element368() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element368()
}

func (c *current) onSection0Element375() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element375() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element375()
}

func (c *current) onSection0Element382() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element382() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element382()
}

func (c *current) onSection0Element378() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element378() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element378()
}

func (c *current) onSection0Element384() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element384() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element384()
}

func (c *current) onSection0Element372() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element372() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element372()
}

func (c *current) onSection0Element359(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonSection0Element359() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element359(stack["kind"], stack["author"])
}

func (c *current) onSection0Element402() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element402() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element402()
}

func (c *current) onSection0Element407() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element407() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element407()
}

func (c *current) onSection0Element398(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonSection0Element398() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element398(stack["kind"])
}

func (c *current) onSection0Element410(attribute interface{}) error {
	c.state["verse"] = true
	return nil
}

func (p *parser) callonSection0Element410() error {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element410(stack["attribute"])
}

func (c *current) onSection0Element290(attribute interface{}) (interface{}, error) {
	return attribute, nil
}

func (p *parser) callonSection0Element290() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element290(stack["attribute"])
}

func (c *current) onSection0Element416() (interface{}, error) {
	return types.Tip, nil

}

func (p *parser) callonSection0Element416() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element416()
}

func (c *current) onSection0Element418() (interface{}, error) {
	return types.Note, nil

}

func (p *parser) callonSection0Element418() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element418()
}

func (c *current) onSection0Element420() (interface{}, error) {
	return types.Important, nil

}

func (p *parser) callonSection0Element420() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element420()
}

func (c *current) onSection0Element422() (interface{}, error) {
	return types.Warning, nil

}

func (p *parser) callonSection0Element422() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element422()
}

func (c *current) onSection0Element424() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection0Element424() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element424()
}

func (c *current) onSection0Element411(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection0Element411() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element411(stack["k"])
}

func (c *current) onSection0Element427() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection0Element427() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element427()
}

func (c *current) onSection0Element435() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element435() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element435()
}

func (c *current) onSection0Element446() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element446() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element446()
}

func (c *current) onSection0Element449() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element449() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element449()
}

func (c *current) onSection0Element452() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element452() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element452()
}

func (c *current) onSection0Element457() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element457() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element457()
}

func (c *current) onSection0Element464() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element464() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element464()
}

func (c *current) onSection0Element460() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element460() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element460()
}

func (c *current) onSection0Element466() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element466() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element466()
}

func (c *current) onSection0Element443(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element443() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element443(stack["key"])
}

func (c *current) onSection0Element481() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element481() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element481()
}

func (c *current) onSection0Element488() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element488() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element488()
}

func (c *current) onSection0Element484() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element484() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element484()
}

func (c *current) onSection0Element490() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element490() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element490()
}

func (c *current) onSection0Element477(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element477() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element477(stack["value"])
}

func (c *current) onSection0Element504() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element504() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element504()
}

func (c *current) onSection0Element440(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection0Element440() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element440(stack["key"], stack["value"])
}

func (c *current) onSection0Element512() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element512() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element512()
}

func (c *current) onSection0Element515() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element515() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element515()
}

func (c *current) onSection0Element518() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element518() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element518()
}

func (c *current) onSection0Element523() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element523() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element523()
}

func (c *current) onSection0Element530() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element530() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element530()
}

func (c *current) onSection0Element526() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element526() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element526()
}

func (c *current) onSection0Element532() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element532() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element532()
}

func (c *current) onSection0Element509(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element509() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element509(stack["key"])
}

func (c *current) onSection0Element546() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element546() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element546()
}

func (c *current) onSection0Element506(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection0Element506() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element506(stack["key"])
}

func (c *current) onSection0Element429(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection0Element429() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element429(stack["attributes"])
}

func (c *current) onSection0Element552() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element552() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element552()
}

func (c *current) onSection0Element13(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection0Element13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element13(stack["attr"])
}

func (c *current) onSection0Element1(attributes, element interface{}) (interface{}, error) {
	return types.WithAttributes(element, attributes.([]interface{}))
}

func (p *parser) callonSection0Element1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element1(stack["attributes"], stack["element"])
}

func (c *current) onSection11(header, elements interface{}) (interface{}, error) {
	return types.NewSection(1, header.(types.SectionTitle), elements.([]interface{}))
}

func (p *parser) callonSection11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection11(stack["header"], stack["elements"])
}

func (c *current) onSection1Title7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title7()
}

func (c *current) onSection1Title20() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title20() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title20()
}

func (c *current) onSection1Title32() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title32() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title32()
}

func (c *current) onSection1Title23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title23()
}

func (c *current) onSection1Title17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title17()
}

func (c *current) onSection1Title49() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title49()
}

func (c *current) onSection1Title13(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonSection1Title13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title13(stack["id"])
}

func (c *current) onSection1Title1(elements, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(elements.(types.InlineElements), id.([]interface{}))
}

func (p *parser) callonSection1Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title1(stack["elements"], stack["id"])
}

func (c *current) onSection1Element9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element9()
}

func (c *current) onSection1Element26() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element26()
}

func (c *current) onSection1Element38() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element38() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element38()
}

func (c *current) onSection1Element29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element29()
}

func (c *current) onSection1Element23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element23()
}

func (c *current) onSection1Element19(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection1Element19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element19(stack["id"])
}

func (c *current) onSection1Element59() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element59() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element59()
}

func (c *current) onSection1Element71() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element71()
}

func (c *current) onSection1Element62() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element62() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element62()
}

func (c *current) onSection1Element56() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element56() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element56()
}

func (c *current) onSection1Element52(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection1Element52() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element52(stack["id"])
}

func (c *current) onSection1Element93() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element93() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element93()
}

func (c *current) onSection1Element99() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element99() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element99()
}

func (c *current) onSection1Element106() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element106()
}

func (c *current) onSection1Element102() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element102()
}

func (c *current) onSection1Element108() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element108() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element108()
}

func (c *current) onSection1Element96() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element96() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element96()
}

func (c *current) onSection1Element85(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection1Element85() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element85(stack["title"])
}

func (c *current) onSection1Element121() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element121()
}

func (c *current) onSection1Element127() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element127() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element127()
}

func (c *current) onSection1Element134() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element134() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element134()
}

func (c *current) onSection1Element130() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element130()
}

func (c *current) onSection1Element136() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element136() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element136()
}

func (c *current) onSection1Element124() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element124()
}

func (c *current) onSection1Element115(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection1Element115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element115(stack["role"])
}

func (c *current) onSection1Element146() (interface{}, error) {
	return types.NewSourceAttributes("")
}

func (p *parser) callonSection1Element146() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element146()
}

func (c *current) onSection1Element155() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element155() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element155()
}

func (c *current) onSection1Element162() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element162() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element162()
}

func (c *current) onSection1Element158() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element158() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element158()
}

func (c *current) onSection1Element164() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection1Element164() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element164()
}

func (c *current) onSection1Element152() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection1Element152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element152()
}

func (c *current) onSection1Element148(language interface{}) (interface{}, error) {
	return types.NewSourceAttributes(language.(string))
}

func (p *parser) callonSection1Element148() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element148(stack["language"])
}

func (c *current) onSection1Element178() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element178() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element178()
}

func (c *current) onSection1Element183() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element183() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element183()
}

func (c *current) onSection1Element190() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element190() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element190()
}

func (c *current) onSection1Element197() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element197() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element197()
}

func (c *current) onSection1Element193() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element193() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element193()
}

func (c *current) onSection1Element199() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element199() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element199()
}

func (c *current) onSection1Element187() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element187() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element187()
}

func (c *current) onSection1Element217() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element217() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element217()
}

func (c *current) onSection1Element224() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element224() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element224()
}

func (c *current) onSection1Element220() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element220() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element220()
}

func (c *current) onSection1Element214() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element214() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element214()
}

func (c *current) onSection1Element174(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))
}

func (p *parser) callonSection1Element174() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element174(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onSection1Element243() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element243() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element243()
}

func (c *current) onSection1Element248() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element248() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element248()
}

func (c *current) onSection1Element255() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element255() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element255()
}

func (c *current) onSection1Element262() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element262() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element262()
}

func (c *current) onSection1Element258() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element258() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element258()
}

func (c *current) onSection1Element264() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element264() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element264()
}

func (c *current) onSection1Element252() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element252() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element252()
}

func (c *current) onSection1Element239(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")
}

func (p *parser) callonSection1Element239() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element239(stack["kind"], stack["author"])
}

func (c *current) onSection1Element282() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element282() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element282()
}

func (c *current) onSection1Element287() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element287() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element287()
}

func (c *current) onSection1Element278(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")
}

func (p *parser) callonSection1Element278() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element278(stack["kind"])
}

func (c *current) onSection1Element298() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element298() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element298()
}

func (c *current) onSection1Element303() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element303() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element303()
}

func (c *current) onSection1Element310() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element310() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element310()
}

func (c *current) onSection1Element317() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element317() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element317()
}

func (c *current) onSection1Element313() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element313() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element313()
}

func (c *current) onSection1Element319() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element319() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element319()
}

func (c *current) onSection1Element307() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element307() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element307()
}

func (c *current) onSection1Element337() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element337() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element337()
}

func (c *current) onSection1Element344() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element344() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element344()
}

func (c *current) onSection1Element340() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element340() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element340()
}

func (c *current) onSection1Element334() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element334() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element334()
}

func (c *current) onSection1Element294(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonSection1Element294() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element294(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onSection1Element363() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element363() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element363()
}

func (c *current) onSection1Element368() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element368() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element368()
}

func (c *current) onSection1Element375() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element375() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element375()
}

func (c *current) onSection1Element382() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element382() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element382()
}

func (c *current) onSection1Element378() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element378() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element378()
}

func (c *current) onSection1Element384() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element384() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element384()
}

func (c *current) onSection1Element372() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element372() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element372()
}

func (c *current) onSection1Element359(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonSection1Element359() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element359(stack["kind"], stack["author"])
}

func (c *current) onSection1Element402() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element402() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element402()
}

func (c *current) onSection1Element407() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element407() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element407()
}

func (c *current) onSection1Element398(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonSection1Element398() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element398(stack["kind"])
}

func (c *current) onSection1Element410(attribute interface{}) error {
	c.state["verse"] = true
	return nil
}

func (p *parser) callonSection1Element410() error {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element410(stack["attribute"])
}

func (c *current) onSection1Element290(attribute interface{}) (interface{}, error) {
	return attribute, nil
}

func (p *parser) callonSection1Element290() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element290(stack["attribute"])
}

func (c *current) onSection1Element416() (interface{}, error) {
	return types.Tip, nil

}

func (p *parser) callonSection1Element416() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element416()
}

func (c *current) onSection1Element418() (interface{}, error) {
	return types.Note, nil

}

func (p *parser) callonSection1Element418() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element418()
}

func (c *current) onSection1Element420() (interface{}, error) {
	return types.Important, nil

}

func (p *parser) callonSection1Element420() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element420()
}

func (c *current) onSection1Element422() (interface{}, error) {
	return types.Warning, nil

}

func (p *parser) callonSection1Element422() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element422()
}

func (c *current) onSection1Element424() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection1Element424() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element424()
}

func (c *current) onSection1Element411(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection1Element411() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element411(stack["k"])
}

func (c *current) onSection1Element427() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection1Element427() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element427()
}

func (c *current) onSection1Element435() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element435() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element435()
}

func (c *current) onSection1Element446() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element446() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element446()
}

func (c *current) onSection1Element449() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element449() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element449()
}

func (c *current) onSection1Element452() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element452() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element452()
}

func (c *current) onSection1Element457() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element457() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element457()
}

func (c *current) onSection1Element464() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element464() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element464()
}

func (c *current) onSection1Element460() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element460() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element460()
}

func (c *current) onSection1Element466() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element466() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element466()
}

func (c *current) onSection1Element443(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element443() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element443(stack["key"])
}

func (c *current) onSection1Element481() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element481() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element481()
}

func (c *current) onSection1Element488() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element488() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element488()
}

func (c *current) onSection1Element484() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element484() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element484()
}

func (c *current) onSection1Element490() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element490() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element490()
}

func (c *current) onSection1Element477(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element477() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element477(stack["value"])
}

func (c *current) onSection1Element504() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element504() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element504()
}

func (c *current) onSection1Element440(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection1Element440() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element440(stack["key"], stack["value"])
}

func (c *current) onSection1Element512() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element512() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element512()
}

func (c *current) onSection1Element515() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element515() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element515()
}

func (c *current) onSection1Element518() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element518() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element518()
}

func (c *current) onSection1Element523() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element523() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element523()
}

func (c *current) onSection1Element530() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element530() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element530()
}

func (c *current) onSection1Element526() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element526() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element526()
}

func (c *current) onSection1Element532() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element532() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element532()
}

func (c *current) onSection1Element509(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element509() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element509(stack["key"])
}

func (c *current) onSection1Element546() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element546() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element546()
}

func (c *current) onSection1Element506(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection1Element506() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element506(stack["key"])
}

func (c *current) onSection1Element429(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection1Element429() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element429(stack["attributes"])
}

func (c *current) onSection1Element552() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element552() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element552()
}

func (c *current) onSection1Element13(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection1Element13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element13(stack["attr"])
}

func (c *current) onSection1Element1(attributes, element interface{}) (interface{}, error) {
	return types.WithAttributes(element, attributes.([]interface{}))
}

func (p *parser) callonSection1Element1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element1(stack["attributes"], stack["element"])
}

func (c *current) onSection21(header, elements interface{}) (interface{}, error) {
	return types.NewSection(2, header.(types.SectionTitle), elements.([]interface{}))
}

func (p *parser) callonSection21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection21(stack["header"], stack["elements"])
}

func (c *current) onSection2Title7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title7()
}

func (c *current) onSection2Title20() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title20() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title20()
}

func (c *current) onSection2Title32() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title32() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title32()
}

func (c *current) onSection2Title23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title23()
}

func (c *current) onSection2Title17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title17()
}

func (c *current) onSection2Title49() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title49()
}

func (c *current) onSection2Title13(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonSection2Title13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title13(stack["id"])
}

func (c *current) onSection2Title1(elements, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(elements.(types.InlineElements), id.([]interface{}))
}

func (p *parser) callonSection2Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title1(stack["elements"], stack["id"])
}

func (c *current) onSection2Element9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element9()
}

func (c *current) onSection2Element17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element17()
}

func (c *current) onSection2Element34() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element34() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element34()
}

func (c *current) onSection2Element46() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element46() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element46()
}

func (c *current) onSection2Element37() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element37()
}

func (c *current) onSection2Element31() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element31() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element31()
}

func (c *current) onSection2Element27(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection2Element27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element27(stack["id"])
}

func (c *current) onSection2Element67() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element67()
}

func (c *current) onSection2Element79() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element79() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element79()
}

func (c *current) onSection2Element70() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element70() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element70()
}

func (c *current) onSection2Element64() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element64() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element64()
}

func (c *current) onSection2Element60(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection2Element60() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element60(stack["id"])
}

func (c *current) onSection2Element101() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element101() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element101()
}

func (c *current) onSection2Element107() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element107()
}

func (c *current) onSection2Element114() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element114() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element114()
}

func (c *current) onSection2Element110() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element110() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element110()
}

func (c *current) onSection2Element116() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element116()
}

func (c *current) onSection2Element104() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element104() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element104()
}

func (c *current) onSection2Element93(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection2Element93() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element93(stack["title"])
}

func (c *current) onSection2Element129() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element129()
}

func (c *current) onSection2Element135() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element135()
}

func (c *current) onSection2Element142() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element142() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element142()
}

func (c *current) onSection2Element138() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element138()
}

func (c *current) onSection2Element144() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element144()
}

func (c *current) onSection2Element132() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element132() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element132()
}

func (c *current) onSection2Element123(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection2Element123() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element123(stack["role"])
}

func (c *current) onSection2Element154() (interface{}, error) {
	return types.NewSourceAttributes("")
}

func (p *parser) callonSection2Element154() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element154()
}

func (c *current) onSection2Element163() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element163() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element163()
}

func (c *current) onSection2Element170() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element170() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element170()
}

func (c *current) onSection2Element166() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element166() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element166()
}

func (c *current) onSection2Element172() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection2Element172() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element172()
}

func (c *current) onSection2Element160() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection2Element160() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element160()
}

func (c *current) onSection2Element156(language interface{}) (interface{}, error) {
	return types.NewSourceAttributes(language.(string))
}

func (p *parser) callonSection2Element156() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element156(stack["language"])
}

func (c *current) onSection2Element186() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element186() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element186()
}

func (c *current) onSection2Element191() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element191() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element191()
}

func (c *current) onSection2Element198() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element198()
}

func (c *current) onSection2Element205() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element205() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element205()
}

func (c *current) onSection2Element201() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element201() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element201()
}

func (c *current) onSection2Element207() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element207() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element207()
}

func (c *current) onSection2Element195() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element195() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element195()
}

func (c *current) onSection2Element225() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element225() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element225()
}

func (c *current) onSection2Element232() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element232() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element232()
}

func (c *current) onSection2Element228() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element228() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element228()
}

func (c *current) onSection2Element222() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element222() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element222()
}

func (c *current) onSection2Element182(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))
}

func (p *parser) callonSection2Element182() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element182(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onSection2Element251() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element251() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element251()
}

func (c *current) onSection2Element256() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element256() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element256()
}

func (c *current) onSection2Element263() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element263() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element263()
}

func (c *current) onSection2Element270() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element270() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element270()
}

func (c *current) onSection2Element266() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element266() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element266()
}

func (c *current) onSection2Element272() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element272() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element272()
}

func (c *current) onSection2Element260() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element260() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element260()
}

func (c *current) onSection2Element247(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")
}

func (p *parser) callonSection2Element247() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element247(stack["kind"], stack["author"])
}

func (c *current) onSection2Element290() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element290() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element290()
}

func (c *current) onSection2Element295() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element295() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element295()
}

func (c *current) onSection2Element286(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")
}

func (p *parser) callonSection2Element286() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element286(stack["kind"])
}

func (c *current) onSection2Element306() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element306() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element306()
}

func (c *current) onSection2Element311() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element311() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element311()
}

func (c *current) onSection2Element318() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element318() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element318()
}

func (c *current) onSection2Element325() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element325() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element325()
}

func (c *current) onSection2Element321() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element321() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element321()
}

func (c *current) onSection2Element327() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element327() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element327()
}

func (c *current) onSection2Element315() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element315() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element315()
}

func (c *current) onSection2Element345() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element345() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element345()
}

func (c *current) onSection2Element352() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element352() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element352()
}

func (c *current) onSection2Element348() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element348() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element348()
}

func (c *current) onSection2Element342() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element342() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element342()
}

func (c *current) onSection2Element302(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonSection2Element302() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element302(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onSection2Element371() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element371() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element371()
}

func (c *current) onSection2Element376() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element376() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element376()
}

func (c *current) onSection2Element383() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element383() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element383()
}

func (c *current) onSection2Element390() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element390() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element390()
}

func (c *current) onSection2Element386() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element386() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element386()
}

func (c *current) onSection2Element392() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element392() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element392()
}

func (c *current) onSection2Element380() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element380() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element380()
}

func (c *current) onSection2Element367(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonSection2Element367() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element367(stack["kind"], stack["author"])
}

func (c *current) onSection2Element410() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element410() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element410()
}

func (c *current) onSection2Element415() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element415() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element415()
}

func (c *current) onSection2Element406(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonSection2Element406() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element406(stack["kind"])
}

func (c *current) onSection2Element418(attribute interface{}) error {
	c.state["verse"] = true
	return nil
}

func (p *parser) callonSection2Element418() error {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element418(stack["attribute"])
}

func (c *current) onSection2Element298(attribute interface{}) (interface{}, error) {
	return attribute, nil
}

func (p *parser) callonSection2Element298() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element298(stack["attribute"])
}

func (c *current) onSection2Element424() (interface{}, error) {
	return types.Tip, nil

}

func (p *parser) callonSection2Element424() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element424()
}

func (c *current) onSection2Element426() (interface{}, error) {
	return types.Note, nil

}

func (p *parser) callonSection2Element426() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element426()
}

func (c *current) onSection2Element428() (interface{}, error) {
	return types.Important, nil

}

func (p *parser) callonSection2Element428() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element428()
}

func (c *current) onSection2Element430() (interface{}, error) {
	return types.Warning, nil

}

func (p *parser) callonSection2Element430() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element430()
}

func (c *current) onSection2Element432() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection2Element432() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element432()
}

func (c *current) onSection2Element419(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection2Element419() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element419(stack["k"])
}

func (c *current) onSection2Element435() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection2Element435() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element435()
}

func (c *current) onSection2Element443() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element443() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element443()
}

func (c *current) onSection2Element454() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element454() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element454()
}

func (c *current) onSection2Element457() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element457() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element457()
}

func (c *current) onSection2Element460() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element460() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element460()
}

func (c *current) onSection2Element465() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element465() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element465()
}

func (c *current) onSection2Element472() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element472() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element472()
}

func (c *current) onSection2Element468() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element468() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element468()
}

func (c *current) onSection2Element474() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element474() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element474()
}

func (c *current) onSection2Element451(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element451() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element451(stack["key"])
}

func (c *current) onSection2Element489() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element489() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element489()
}

func (c *current) onSection2Element496() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element496() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element496()
}

func (c *current) onSection2Element492() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element492() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element492()
}

func (c *current) onSection2Element498() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element498() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element498()
}

func (c *current) onSection2Element485(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element485() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element485(stack["value"])
}

func (c *current) onSection2Element512() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element512() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element512()
}

func (c *current) onSection2Element448(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection2Element448() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element448(stack["key"], stack["value"])
}

func (c *current) onSection2Element520() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element520() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element520()
}

func (c *current) onSection2Element523() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element523() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element523()
}

func (c *current) onSection2Element526() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element526() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element526()
}

func (c *current) onSection2Element531() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element531() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element531()
}

func (c *current) onSection2Element538() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element538() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element538()
}

func (c *current) onSection2Element534() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element534() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element534()
}

func (c *current) onSection2Element540() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element540() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element540()
}

func (c *current) onSection2Element517(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element517() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element517(stack["key"])
}

func (c *current) onSection2Element554() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element554() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element554()
}

func (c *current) onSection2Element514(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection2Element514() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element514(stack["key"])
}

func (c *current) onSection2Element437(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection2Element437() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element437(stack["attributes"])
}

func (c *current) onSection2Element560() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element560() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element560()
}

func (c *current) onSection2Element21(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection2Element21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element21(stack["attr"])
}

func (c *current) onSection2Element1(attributes, element interface{}) (interface{}, error) {
	return types.WithAttributes(element, attributes.([]interface{}))
}

func (p *parser) callonSection2Element1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element1(stack["attributes"], stack["element"])
}

func (c *current) onSection31(header, elements interface{}) (interface{}, error) {
	return types.NewSection(3, header.(types.SectionTitle), elements.([]interface{}))
}

func (p *parser) callonSection31() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection31(stack["header"], stack["elements"])
}

func (c *current) onSection3Title7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title7()
}

func (c *current) onSection3Title20() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title20() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title20()
}

func (c *current) onSection3Title32() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title32() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title32()
}

func (c *current) onSection3Title23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title23()
}

func (c *current) onSection3Title17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title17()
}

func (c *current) onSection3Title49() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title49()
}

func (c *current) onSection3Title13(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonSection3Title13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title13(stack["id"])
}

func (c *current) onSection3Title1(elements, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(elements.(types.InlineElements), id.([]interface{}))
}

func (p *parser) callonSection3Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title1(stack["elements"], stack["id"])
}

func (c *current) onSection3Element9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element9()
}

func (c *current) onSection3Element17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element17()
}

func (c *current) onSection3Element25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element25()
}

func (c *current) onSection3Element42() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element42() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element42()
}

func (c *current) onSection3Element54() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element54() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element54()
}

func (c *current) onSection3Element45() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element45() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element45()
}

func (c *current) onSection3Element39() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element39()
}

func (c *current) onSection3Element35(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection3Element35() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element35(stack["id"])
}

func (c *current) onSection3Element75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element75()
}

func (c *current) onSection3Element87() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element87() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element87()
}

func (c *current) onSection3Element78() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element78()
}

func (c *current) onSection3Element72() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element72() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element72()
}

func (c *current) onSection3Element68(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection3Element68() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element68(stack["id"])
}

func (c *current) onSection3Element109() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element109() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element109()
}

func (c *current) onSection3Element115() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element115()
}

func (c *current) onSection3Element122() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element122()
}

func (c *current) onSection3Element118() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element118() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element118()
}

func (c *current) onSection3Element124() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element124()
}

func (c *current) onSection3Element112() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element112() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element112()
}

func (c *current) onSection3Element101(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection3Element101() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element101(stack["title"])
}

func (c *current) onSection3Element137() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element137() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element137()
}

func (c *current) onSection3Element143() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element143() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element143()
}

func (c *current) onSection3Element150() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element150() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element150()
}

func (c *current) onSection3Element146() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element146() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element146()
}

func (c *current) onSection3Element152() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element152()
}

func (c *current) onSection3Element140() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element140() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element140()
}

func (c *current) onSection3Element131(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection3Element131() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element131(stack["role"])
}

func (c *current) onSection3Element162() (interface{}, error) {
	return types.NewSourceAttributes("")
}

func (p *parser) callonSection3Element162() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element162()
}

func (c *current) onSection3Element171() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element171() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element171()
}

func (c *current) onSection3Element178() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element178() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element178()
}

func (c *current) onSection3Element174() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element174() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element174()
}

func (c *current) onSection3Element180() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection3Element180() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element180()
}

func (c *current) onSection3Element168() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection3Element168() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element168()
}

func (c *current) onSection3Element164(language interface{}) (interface{}, error) {
	return types.NewSourceAttributes(language.(string))
}

func (p *parser) callonSection3Element164() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element164(stack["language"])
}

func (c *current) onSection3Element194() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element194() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element194()
}

func (c *current) onSection3Element199() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element199() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element199()
}

func (c *current) onSection3Element206() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element206() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element206()
}

func (c *current) onSection3Element213() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element213() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element213()
}

func (c *current) onSection3Element209() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element209() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element209()
}

func (c *current) onSection3Element215() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element215() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element215()
}

func (c *current) onSection3Element203() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element203() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element203()
}

func (c *current) onSection3Element233() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element233() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element233()
}

func (c *current) onSection3Element240() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element240() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element240()
}

func (c *current) onSection3Element236() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element236() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element236()
}

func (c *current) onSection3Element230() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element230() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element230()
}

func (c *current) onSection3Element190(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))
}

func (p *parser) callonSection3Element190() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element190(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onSection3Element259() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element259() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element259()
}

func (c *current) onSection3Element264() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element264() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element264()
}

func (c *current) onSection3Element271() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element271() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element271()
}

func (c *current) onSection3Element278() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element278() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element278()
}

func (c *current) onSection3Element274() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element274() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element274()
}

func (c *current) onSection3Element280() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element280() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element280()
}

func (c *current) onSection3Element268() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element268() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element268()
}

func (c *current) onSection3Element255(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")
}

func (p *parser) callonSection3Element255() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element255(stack["kind"], stack["author"])
}

func (c *current) onSection3Element298() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element298() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element298()
}

func (c *current) onSection3Element303() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element303() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element303()
}

func (c *current) onSection3Element294(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")
}

func (p *parser) callonSection3Element294() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element294(stack["kind"])
}

func (c *current) onSection3Element314() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element314() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element314()
}

func (c *current) onSection3Element319() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element319() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element319()
}

func (c *current) onSection3Element326() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element326() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element326()
}

func (c *current) onSection3Element333() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element333() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element333()
}

func (c *current) onSection3Element329() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element329() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element329()
}

func (c *current) onSection3Element335() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element335() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element335()
}

func (c *current) onSection3Element323() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element323() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element323()
}

func (c *current) onSection3Element353() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element353() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element353()
}

func (c *current) onSection3Element360() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element360() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element360()
}

func (c *current) onSection3Element356() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element356() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element356()
}

func (c *current) onSection3Element350() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element350() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element350()
}

func (c *current) onSection3Element310(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonSection3Element310() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element310(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onSection3Element379() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element379() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element379()
}

func (c *current) onSection3Element384() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element384() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element384()
}

func (c *current) onSection3Element391() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element391() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element391()
}

func (c *current) onSection3Element398() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element398() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element398()
}

func (c *current) onSection3Element394() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element394() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element394()
}

func (c *current) onSection3Element400() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element400() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element400()
}

func (c *current) onSection3Element388() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element388() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element388()
}

func (c *current) onSection3Element375(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonSection3Element375() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element375(stack["kind"], stack["author"])
}

func (c *current) onSection3Element418() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element418() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element418()
}

func (c *current) onSection3Element423() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element423() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element423()
}

func (c *current) onSection3Element414(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonSection3Element414() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element414(stack["kind"])
}

func (c *current) onSection3Element426(attribute interface{}) error {
	c.state["verse"] = true
	return nil
}

func (p *parser) callonSection3Element426() error {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element426(stack["attribute"])
}

func (c *current) onSection3Element306(attribute interface{}) (interface{}, error) {
	return attribute, nil
}

func (p *parser) callonSection3Element306() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element306(stack["attribute"])
}

func (c *current) onSection3Element432() (interface{}, error) {
	return types.Tip, nil

}

func (p *parser) callonSection3Element432() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element432()
}

func (c *current) onSection3Element434() (interface{}, error) {
	return types.Note, nil

}

func (p *parser) callonSection3Element434() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element434()
}

func (c *current) onSection3Element436() (interface{}, error) {
	return types.Important, nil

}

func (p *parser) callonSection3Element436() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element436()
}

func (c *current) onSection3Element438() (interface{}, error) {
	return types.Warning, nil

}

func (p *parser) callonSection3Element438() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element438()
}

func (c *current) onSection3Element440() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection3Element440() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element440()
}

func (c *current) onSection3Element427(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection3Element427() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element427(stack["k"])
}

func (c *current) onSection3Element443() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection3Element443() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element443()
}

func (c *current) onSection3Element451() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element451() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element451()
}

func (c *current) onSection3Element462() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element462() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element462()
}

func (c *current) onSection3Element465() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element465() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element465()
}

func (c *current) onSection3Element468() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element468() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element468()
}

func (c *current) onSection3Element473() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element473() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element473()
}

func (c *current) onSection3Element480() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element480() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element480()
}

func (c *current) onSection3Element476() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element476() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element476()
}

func (c *current) onSection3Element482() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element482() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element482()
}

func (c *current) onSection3Element459(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element459() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element459(stack["key"])
}

func (c *current) onSection3Element497() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element497() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element497()
}

func (c *current) onSection3Element504() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element504() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element504()
}

func (c *current) onSection3Element500() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element500() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element500()
}

func (c *current) onSection3Element506() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element506() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element506()
}

func (c *current) onSection3Element493(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element493() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element493(stack["value"])
}

func (c *current) onSection3Element520() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element520() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element520()
}

func (c *current) onSection3Element456(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection3Element456() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element456(stack["key"], stack["value"])
}

func (c *current) onSection3Element528() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element528() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element528()
}

func (c *current) onSection3Element531() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element531() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element531()
}

func (c *current) onSection3Element534() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element534() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element534()
}

func (c *current) onSection3Element539() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element539() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element539()
}

func (c *current) onSection3Element546() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element546() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element546()
}

func (c *current) onSection3Element542() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element542() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element542()
}

func (c *current) onSection3Element548() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element548() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element548()
}

func (c *current) onSection3Element525(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element525() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element525(stack["key"])
}

func (c *current) onSection3Element562() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element562() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element562()
}

func (c *current) onSection3Element522(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection3Element522() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element522(stack["key"])
}

func (c *current) onSection3Element445(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection3Element445() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element445(stack["attributes"])
}

func (c *current) onSection3Element568() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element568() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element568()
}

func (c *current) onSection3Element29(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection3Element29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element29(stack["attr"])
}

func (c *current) onSection3Element1(attributes, element interface{}) (interface{}, error) {
	return types.WithAttributes(element, attributes.([]interface{}))
}

func (p *parser) callonSection3Element1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element1(stack["attributes"], stack["element"])
}

func (c *current) onSection41(header, elements interface{}) (interface{}, error) {
	return types.NewSection(4, header.(types.SectionTitle), elements.([]interface{}))
}

func (p *parser) callonSection41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection41(stack["header"], stack["elements"])
}

func (c *current) onSection4Title7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title7()
}

func (c *current) onSection4Title20() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title20() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title20()
}

func (c *current) onSection4Title32() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title32() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title32()
}

func (c *current) onSection4Title23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title23()
}

func (c *current) onSection4Title17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title17()
}

func (c *current) onSection4Title49() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title49()
}

func (c *current) onSection4Title13(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonSection4Title13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title13(stack["id"])
}

func (c *current) onSection4Title1(elements, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(elements.(types.InlineElements), id.([]interface{}))
}

func (p *parser) callonSection4Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title1(stack["elements"], stack["id"])
}

func (c *current) onSection4Element9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element9()
}

func (c *current) onSection4Element17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element17()
}

func (c *current) onSection4Element25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element25()
}

func (c *current) onSection4Element33() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element33()
}

func (c *current) onSection4Element50() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element50() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element50()
}

func (c *current) onSection4Element62() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element62() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element62()
}

func (c *current) onSection4Element53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element53()
}

func (c *current) onSection4Element47() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element47() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element47()
}

func (c *current) onSection4Element43(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection4Element43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element43(stack["id"])
}

func (c *current) onSection4Element83() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element83() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element83()
}

func (c *current) onSection4Element95() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element95()
}

func (c *current) onSection4Element86() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element86()
}

func (c *current) onSection4Element80() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element80() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element80()
}

func (c *current) onSection4Element76(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection4Element76() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element76(stack["id"])
}

func (c *current) onSection4Element117() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element117()
}

func (c *current) onSection4Element123() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element123() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element123()
}

func (c *current) onSection4Element130() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element130()
}

func (c *current) onSection4Element126() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element126() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element126()
}

func (c *current) onSection4Element132() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element132() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element132()
}

func (c *current) onSection4Element120() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element120() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element120()
}

func (c *current) onSection4Element109(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection4Element109() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element109(stack["title"])
}

func (c *current) onSection4Element145() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element145() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element145()
}

func (c *current) onSection4Element151() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element151() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element151()
}

func (c *current) onSection4Element158() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element158() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element158()
}

func (c *current) onSection4Element154() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element154() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element154()
}

func (c *current) onSection4Element160() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element160() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element160()
}

func (c *current) onSection4Element148() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element148() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element148()
}

func (c *current) onSection4Element139(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection4Element139() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element139(stack["role"])
}

func (c *current) onSection4Element170() (interface{}, error) {
	return types.NewSourceAttributes("")
}

func (p *parser) callonSection4Element170() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element170()
}

func (c *current) onSection4Element179() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element179()
}

func (c *current) onSection4Element186() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element186() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element186()
}

func (c *current) onSection4Element182() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element182() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element182()
}

func (c *current) onSection4Element188() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection4Element188() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element188()
}

func (c *current) onSection4Element176() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection4Element176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element176()
}

func (c *current) onSection4Element172(language interface{}) (interface{}, error) {
	return types.NewSourceAttributes(language.(string))
}

func (p *parser) callonSection4Element172() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element172(stack["language"])
}

func (c *current) onSection4Element202() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element202() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element202()
}

func (c *current) onSection4Element207() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element207() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element207()
}

func (c *current) onSection4Element214() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element214() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element214()
}

func (c *current) onSection4Element221() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element221() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element221()
}

func (c *current) onSection4Element217() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element217() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element217()
}

func (c *current) onSection4Element223() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element223() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element223()
}

func (c *current) onSection4Element211() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element211() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element211()
}

func (c *current) onSection4Element241() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element241() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element241()
}

func (c *current) onSection4Element248() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element248() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element248()
}

func (c *current) onSection4Element244() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element244() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element244()
}

func (c *current) onSection4Element238() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element238() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element238()
}

func (c *current) onSection4Element198(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))
}

func (p *parser) callonSection4Element198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element198(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onSection4Element267() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element267() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element267()
}

func (c *current) onSection4Element272() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element272() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element272()
}

func (c *current) onSection4Element279() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element279() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element279()
}

func (c *current) onSection4Element286() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element286() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element286()
}

func (c *current) onSection4Element282() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element282() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element282()
}

func (c *current) onSection4Element288() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element288() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element288()
}

func (c *current) onSection4Element276() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element276() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element276()
}

func (c *current) onSection4Element263(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")
}

func (p *parser) callonSection4Element263() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element263(stack["kind"], stack["author"])
}

func (c *current) onSection4Element306() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element306() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element306()
}

func (c *current) onSection4Element311() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element311() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element311()
}

func (c *current) onSection4Element302(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")
}

func (p *parser) callonSection4Element302() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element302(stack["kind"])
}

func (c *current) onSection4Element322() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element322() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element322()
}

func (c *current) onSection4Element327() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element327() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element327()
}

func (c *current) onSection4Element334() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element334() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element334()
}

func (c *current) onSection4Element341() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element341() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element341()
}

func (c *current) onSection4Element337() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element337() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element337()
}

func (c *current) onSection4Element343() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element343() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element343()
}

func (c *current) onSection4Element331() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element331() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element331()
}

func (c *current) onSection4Element361() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element361() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element361()
}

func (c *current) onSection4Element368() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element368() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element368()
}

func (c *current) onSection4Element364() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element364() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element364()
}

func (c *current) onSection4Element358() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element358() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element358()
}

func (c *current) onSection4Element318(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonSection4Element318() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element318(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onSection4Element387() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element387() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element387()
}

func (c *current) onSection4Element392() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element392() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element392()
}

func (c *current) onSection4Element399() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element399() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element399()
}

func (c *current) onSection4Element406() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element406() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element406()
}

func (c *current) onSection4Element402() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element402() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element402()
}

func (c *current) onSection4Element408() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element408() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element408()
}

func (c *current) onSection4Element396() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element396() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element396()
}

func (c *current) onSection4Element383(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonSection4Element383() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element383(stack["kind"], stack["author"])
}

func (c *current) onSection4Element426() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element426() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element426()
}

func (c *current) onSection4Element431() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element431() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element431()
}

func (c *current) onSection4Element422(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonSection4Element422() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element422(stack["kind"])
}

func (c *current) onSection4Element434(attribute interface{}) error {
	c.state["verse"] = true
	return nil
}

func (p *parser) callonSection4Element434() error {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element434(stack["attribute"])
}

func (c *current) onSection4Element314(attribute interface{}) (interface{}, error) {
	return attribute, nil
}

func (p *parser) callonSection4Element314() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element314(stack["attribute"])
}

func (c *current) onSection4Element440() (interface{}, error) {
	return types.Tip, nil

}

func (p *parser) callonSection4Element440() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element440()
}

func (c *current) onSection4Element442() (interface{}, error) {
	return types.Note, nil

}

func (p *parser) callonSection4Element442() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element442()
}

func (c *current) onSection4Element444() (interface{}, error) {
	return types.Important, nil

}

func (p *parser) callonSection4Element444() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element444()
}

func (c *current) onSection4Element446() (interface{}, error) {
	return types.Warning, nil

}

func (p *parser) callonSection4Element446() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element446()
}

func (c *current) onSection4Element448() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection4Element448() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element448()
}

func (c *current) onSection4Element435(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection4Element435() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element435(stack["k"])
}

func (c *current) onSection4Element451() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection4Element451() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element451()
}

func (c *current) onSection4Element459() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element459() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element459()
}

func (c *current) onSection4Element470() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element470() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element470()
}

func (c *current) onSection4Element473() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element473() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element473()
}

func (c *current) onSection4Element476() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element476() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element476()
}

func (c *current) onSection4Element481() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element481() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element481()
}

func (c *current) onSection4Element488() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element488() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element488()
}

func (c *current) onSection4Element484() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element484() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element484()
}

func (c *current) onSection4Element490() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element490() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element490()
}

func (c *current) onSection4Element467(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element467() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element467(stack["key"])
}

func (c *current) onSection4Element505() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element505() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element505()
}

func (c *current) onSection4Element512() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element512() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element512()
}

func (c *current) onSection4Element508() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element508() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element508()
}

func (c *current) onSection4Element514() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element514() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element514()
}

func (c *current) onSection4Element501(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element501() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element501(stack["value"])
}

func (c *current) onSection4Element528() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element528() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element528()
}

func (c *current) onSection4Element464(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection4Element464() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element464(stack["key"], stack["value"])
}

func (c *current) onSection4Element536() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element536() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element536()
}

func (c *current) onSection4Element539() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element539() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element539()
}

func (c *current) onSection4Element542() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element542() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element542()
}

func (c *current) onSection4Element547() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element547() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element547()
}

func (c *current) onSection4Element554() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element554() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element554()
}

func (c *current) onSection4Element550() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element550() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element550()
}

func (c *current) onSection4Element556() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element556() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element556()
}

func (c *current) onSection4Element533(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element533() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element533(stack["key"])
}

func (c *current) onSection4Element570() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element570() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element570()
}

func (c *current) onSection4Element530(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection4Element530() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element530(stack["key"])
}

func (c *current) onSection4Element453(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection4Element453() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element453(stack["attributes"])
}

func (c *current) onSection4Element576() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element576() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element576()
}

func (c *current) onSection4Element37(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection4Element37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element37(stack["attr"])
}

func (c *current) onSection4Element1(attributes, element interface{}) (interface{}, error) {
	return types.WithAttributes(element, attributes.([]interface{}))
}

func (p *parser) callonSection4Element1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element1(stack["attributes"], stack["element"])
}

func (c *current) onSection51(header, elements interface{}) (interface{}, error) {
	return types.NewSection(5, header.(types.SectionTitle), elements.([]interface{}))
}

func (p *parser) callonSection51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection51(stack["header"], stack["elements"])
}

func (c *current) onSection5Title7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title7()
}

func (c *current) onSection5Title20() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title20() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title20()
}

func (c *current) onSection5Title32() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title32() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title32()
}

func (c *current) onSection5Title23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title23()
}

func (c *current) onSection5Title17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title17()
}

func (c *current) onSection5Title49() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title49()
}

func (c *current) onSection5Title13(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonSection5Title13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title13(stack["id"])
}

func (c *current) onSection5Title1(elements, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(elements.(types.InlineElements), id.([]interface{}))
}

func (p *parser) callonSection5Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title1(stack["elements"], stack["id"])
}

func (c *current) onSection5Element28() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element28() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element28()
}

func (c *current) onSection5Element40() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element40() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element40()
}

func (c *current) onSection5Element31() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element31() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element31()
}

func (c *current) onSection5Element25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element25()
}

func (c *current) onSection5Element21(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection5Element21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element21(stack["id"])
}

func (c *current) onSection5Element61() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element61() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element61()
}

func (c *current) onSection5Element73() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element73() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element73()
}

func (c *current) onSection5Element64() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element64() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element64()
}

func (c *current) onSection5Element58() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element58() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element58()
}

func (c *current) onSection5Element54(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection5Element54() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element54(stack["id"])
}

func (c *current) onSection5Element95() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element95()
}

func (c *current) onSection5Element101() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element101() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element101()
}

func (c *current) onSection5Element108() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element108() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element108()
}

func (c *current) onSection5Element104() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element104() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element104()
}

func (c *current) onSection5Element110() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element110() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element110()
}

func (c *current) onSection5Element98() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element98() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element98()
}

func (c *current) onSection5Element87(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection5Element87() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element87(stack["title"])
}

func (c *current) onSection5Element123() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element123() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element123()
}

func (c *current) onSection5Element129() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element129()
}

func (c *current) onSection5Element136() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element136() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element136()
}

func (c *current) onSection5Element132() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element132() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element132()
}

func (c *current) onSection5Element138() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element138()
}

func (c *current) onSection5Element126() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element126() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element126()
}

func (c *current) onSection5Element117(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection5Element117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element117(stack["role"])
}

func (c *current) onSection5Element148() (interface{}, error) {
	return types.NewSourceAttributes("")
}

func (p *parser) callonSection5Element148() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element148()
}

func (c *current) onSection5Element157() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element157() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element157()
}

func (c *current) onSection5Element164() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element164() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element164()
}

func (c *current) onSection5Element160() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element160() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element160()
}

func (c *current) onSection5Element166() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection5Element166() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element166()
}

func (c *current) onSection5Element154() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection5Element154() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element154()
}

func (c *current) onSection5Element150(language interface{}) (interface{}, error) {
	return types.NewSourceAttributes(language.(string))
}

func (p *parser) callonSection5Element150() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element150(stack["language"])
}

func (c *current) onSection5Element180() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element180() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element180()
}

func (c *current) onSection5Element185() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element185() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element185()
}

func (c *current) onSection5Element192() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element192() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element192()
}

func (c *current) onSection5Element199() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element199() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element199()
}

func (c *current) onSection5Element195() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element195() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element195()
}

func (c *current) onSection5Element201() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element201() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element201()
}

func (c *current) onSection5Element189() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element189() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element189()
}

func (c *current) onSection5Element219() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element219() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element219()
}

func (c *current) onSection5Element226() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element226() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element226()
}

func (c *current) onSection5Element222() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element222() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element222()
}

func (c *current) onSection5Element216() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element216() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element216()
}

func (c *current) onSection5Element176(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))
}

func (p *parser) callonSection5Element176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element176(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onSection5Element245() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element245() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element245()
}

func (c *current) onSection5Element250() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element250() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element250()
}

func (c *current) onSection5Element257() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element257() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element257()
}

func (c *current) onSection5Element264() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element264() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element264()
}

func (c *current) onSection5Element260() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element260() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element260()
}

func (c *current) onSection5Element266() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element266() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element266()
}

func (c *current) onSection5Element254() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element254() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element254()
}

func (c *current) onSection5Element241(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")
}

func (p *parser) callonSection5Element241() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element241(stack["kind"], stack["author"])
}

func (c *current) onSection5Element284() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element284() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element284()
}

func (c *current) onSection5Element289() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element289() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element289()
}

func (c *current) onSection5Element280(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")
}

func (p *parser) callonSection5Element280() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element280(stack["kind"])
}

func (c *current) onSection5Element300() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element300() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element300()
}

func (c *current) onSection5Element305() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element305() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element305()
}

func (c *current) onSection5Element312() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element312() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element312()
}

func (c *current) onSection5Element319() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element319() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element319()
}

func (c *current) onSection5Element315() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element315() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element315()
}

func (c *current) onSection5Element321() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element321() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element321()
}

func (c *current) onSection5Element309() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element309() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element309()
}

func (c *current) onSection5Element339() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element339() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element339()
}

func (c *current) onSection5Element346() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element346() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element346()
}

func (c *current) onSection5Element342() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element342() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element342()
}

func (c *current) onSection5Element336() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element336() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element336()
}

func (c *current) onSection5Element296(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonSection5Element296() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element296(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onSection5Element365() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element365() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element365()
}

func (c *current) onSection5Element370() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element370() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element370()
}

func (c *current) onSection5Element377() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element377() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element377()
}

func (c *current) onSection5Element384() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element384() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element384()
}

func (c *current) onSection5Element380() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element380() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element380()
}

func (c *current) onSection5Element386() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element386() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element386()
}

func (c *current) onSection5Element374() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element374() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element374()
}

func (c *current) onSection5Element361(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonSection5Element361() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element361(stack["kind"], stack["author"])
}

func (c *current) onSection5Element404() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element404() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element404()
}

func (c *current) onSection5Element409() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element409() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element409()
}

func (c *current) onSection5Element400(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonSection5Element400() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element400(stack["kind"])
}

func (c *current) onSection5Element412(attribute interface{}) error {
	c.state["verse"] = true
	return nil
}

func (p *parser) callonSection5Element412() error {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element412(stack["attribute"])
}

func (c *current) onSection5Element292(attribute interface{}) (interface{}, error) {
	return attribute, nil
}

func (p *parser) callonSection5Element292() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element292(stack["attribute"])
}

func (c *current) onSection5Element418() (interface{}, error) {
	return types.Tip, nil

}

func (p *parser) callonSection5Element418() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element418()
}

func (c *current) onSection5Element420() (interface{}, error) {
	return types.Note, nil

}

func (p *parser) callonSection5Element420() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element420()
}

func (c *current) onSection5Element422() (interface{}, error) {
	return types.Important, nil

}

func (p *parser) callonSection5Element422() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element422()
}

func (c *current) onSection5Element424() (interface{}, error) {
	return types.Warning, nil

}

func (p *parser) callonSection5Element424() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element424()
}

func (c *current) onSection5Element426() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection5Element426() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element426()
}

func (c *current) onSection5Element413(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection5Element413() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element413(stack["k"])
}

func (c *current) onSection5Element429() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection5Element429() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element429()
}

func (c *current) onSection5Element437() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element437() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element437()
}

func (c *current) onSection5Element448() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element448() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element448()
}

func (c *current) onSection5Element451() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element451() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element451()
}

func (c *current) onSection5Element454() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element454() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element454()
}

func (c *current) onSection5Element459() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element459() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element459()
}

func (c *current) onSection5Element466() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element466() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element466()
}

func (c *current) onSection5Element462() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element462() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element462()
}

func (c *current) onSection5Element468() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element468() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element468()
}

func (c *current) onSection5Element445(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element445() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element445(stack["key"])
}

func (c *current) onSection5Element483() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element483() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element483()
}

func (c *current) onSection5Element490() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element490() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element490()
}

func (c *current) onSection5Element486() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element486() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element486()
}

func (c *current) onSection5Element492() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element492() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element492()
}

func (c *current) onSection5Element479(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element479() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element479(stack["value"])
}

func (c *current) onSection5Element506() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element506() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element506()
}

func (c *current) onSection5Element442(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection5Element442() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element442(stack["key"], stack["value"])
}

func (c *current) onSection5Element514() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element514() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element514()
}

func (c *current) onSection5Element517() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element517() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element517()
}

func (c *current) onSection5Element520() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element520() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element520()
}

func (c *current) onSection5Element525() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element525() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element525()
}

func (c *current) onSection5Element532() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element532() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element532()
}

func (c *current) onSection5Element528() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element528() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element528()
}

func (c *current) onSection5Element534() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element534() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element534()
}

func (c *current) onSection5Element511(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element511() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element511(stack["key"])
}

func (c *current) onSection5Element548() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element548() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element548()
}

func (c *current) onSection5Element508(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection5Element508() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element508(stack["key"])
}

func (c *current) onSection5Element431(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection5Element431() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element431(stack["attributes"])
}

func (c *current) onSection5Element554() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element554() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element554()
}

func (c *current) onSection5Element15(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection5Element15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element15(stack["attr"])
}

func (c *current) onSection5Element1(attributes, element interface{}) (interface{}, error) {
	return types.WithAttributes(element, attributes.([]interface{}))
}

func (p *parser) callonSection5Element1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element1(stack["attributes"], stack["element"])
}

func (c *current) onTitleElements12() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements12()
}

func (c *current) onTitleElements22() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements22() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements22()
}

func (c *current) onTitleElements34() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements34() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements34()
}

func (c *current) onTitleElements25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements25()
}

func (c *current) onTitleElements19() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements19()
}

func (c *current) onTitleElements51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements51()
}

func (c *current) onTitleElements15(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonTitleElements15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements15(stack["id"])
}

func (c *current) onTitleElements57() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements57() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements57()
}

func (c *current) onTitleElements1(elements interface{}) (interface{}, error) {
	// absorbs heading and trailing spaces
	return types.NewInlineElements(elements.([]interface{}))
}

func (p *parser) callonTitleElements1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements1(stack["elements"])
}

func (c *current) onTitleElement11() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement11()
}

func (c *current) onTitleElement23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement23()
}

func (c *current) onTitleElement14() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement14()
}

func (c *current) onTitleElement8() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement8()
}

func (c *current) onTitleElement39() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement39()
}

func (c *current) onTitleElement46() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement46() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement46()
}

func (c *current) onTitleElement53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement53()
}

func (c *current) onTitleElement49() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement49()
}

func (c *current) onTitleElement55() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement55() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement55()
}

func (c *current) onTitleElement43() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement43()
}

func (c *current) onTitleElement4(id, label interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string), label.(string))
}

func (p *parser) callonTitleElement4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement4(stack["id"], stack["label"])
}

func (c *current) onTitleElement68() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement68() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement68()
}

func (c *current) onTitleElement80() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement80() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement80()
}

func (c *current) onTitleElement71() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement71()
}

func (c *current) onTitleElement65() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement65() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement65()
}

func (c *current) onTitleElement61(id interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string), nil)
}

func (p *parser) callonTitleElement61() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement61(stack["id"])
}

func (c *current) onTitleElement104() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement104() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement104()
}

func (c *current) onTitleElement116() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement116()
}

func (c *current) onTitleElement107() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement107()
}

func (c *current) onTitleElement101() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement101() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement101()
}

func (c *current) onTitleElement132() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement132() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement132()
}

func (c *current) onTitleElement139() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement139() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement139()
}

func (c *current) onTitleElement135() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement135()
}

func (c *current) onTitleElement141() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement141()
}

func (c *current) onTitleElement129() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement129()
}

func (c *current) onTitleElement155() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement155() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement155()
}

func (c *current) onTitleElement162() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement162() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement162()
}

func (c *current) onTitleElement158() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement158() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement158()
}

func (c *current) onTitleElement164() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement164() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement164()
}

func (c *current) onTitleElement152() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement152()
}

func (c *current) onTitleElement178() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement178() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement178()
}

func (c *current) onTitleElement185() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement185() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement185()
}

func (c *current) onTitleElement181() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement181() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement181()
}

func (c *current) onTitleElement187() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement187() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement187()
}

func (c *current) onTitleElement175() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement175() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement175()
}

func (c *current) onTitleElement207() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement207() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement207()
}

func (c *current) onTitleElement210() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement210() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement210()
}

func (c *current) onTitleElement213() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement213() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement213()
}

func (c *current) onTitleElement218() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement218() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement218()
}

func (c *current) onTitleElement225() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement225() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement225()
}

func (c *current) onTitleElement221() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement221() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement221()
}

func (c *current) onTitleElement227() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement227() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement227()
}

func (c *current) onTitleElement204(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement204() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement204(stack["key"])
}

func (c *current) onTitleElement242() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement242() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement242()
}

func (c *current) onTitleElement249() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement249() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement249()
}

func (c *current) onTitleElement245() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement245() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement245()
}

func (c *current) onTitleElement251() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement251() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement251()
}

func (c *current) onTitleElement238(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement238() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement238(stack["value"])
}

func (c *current) onTitleElement265() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement265() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement265()
}

func (c *current) onTitleElement201(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement201() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement201(stack["key"], stack["value"])
}

func (c *current) onTitleElement273() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement273() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement273()
}

func (c *current) onTitleElement276() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement276() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement276()
}

func (c *current) onTitleElement279() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement279() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement279()
}

func (c *current) onTitleElement284() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement284() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement284()
}

func (c *current) onTitleElement291() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement291() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement291()
}

func (c *current) onTitleElement287() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement287() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement287()
}

func (c *current) onTitleElement293() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement293() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement293()
}

func (c *current) onTitleElement270(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement270() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement270(stack["key"])
}

func (c *current) onTitleElement307() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement307() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement307()
}

func (c *current) onTitleElement267(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement267() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement267(stack["key"])
}

func (c *current) onTitleElement125(alt, width, height, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, height, otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement125() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement125(stack["alt"], stack["width"], stack["height"], stack["otherAttrs"])
}

func (c *current) onTitleElement317() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement317() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement317()
}

func (c *current) onTitleElement324() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement324() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement324()
}

func (c *current) onTitleElement320() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement320() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement320()
}

func (c *current) onTitleElement326() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement326() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement326()
}

func (c *current) onTitleElement314() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement314() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement314()
}

func (c *current) onTitleElement340() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement340() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement340()
}

func (c *current) onTitleElement347() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement347() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement347()
}

func (c *current) onTitleElement343() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement343() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement343()
}

func (c *current) onTitleElement349() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement349() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement349()
}

func (c *current) onTitleElement337() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement337() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement337()
}

func (c *current) onTitleElement369() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement369() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement369()
}

func (c *current) onTitleElement372() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement372() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement372()
}

func (c *current) onTitleElement375() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement375() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement375()
}

func (c *current) onTitleElement380() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement380() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement380()
}

func (c *current) onTitleElement387() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement387() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement387()
}

func (c *current) onTitleElement383() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement383() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement383()
}

func (c *current) onTitleElement389() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement389() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement389()
}

func (c *current) onTitleElement366(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement366() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement366(stack["key"])
}

func (c *current) onTitleElement404() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement404() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement404()
}

func (c *current) onTitleElement411() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement411() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement411()
}

func (c *current) onTitleElement407() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement407() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement407()
}

func (c *current) onTitleElement413() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement413() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement413()
}

func (c *current) onTitleElement400(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement400() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement400(stack["value"])
}

func (c *current) onTitleElement427() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement427() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement427()
}

func (c *current) onTitleElement363(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement363() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement363(stack["key"], stack["value"])
}

func (c *current) onTitleElement435() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement435() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement435()
}

func (c *current) onTitleElement438() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement438() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement438()
}

func (c *current) onTitleElement441() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement441() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement441()
}

func (c *current) onTitleElement446() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement446() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement446()
}

func (c *current) onTitleElement453() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement453() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement453()
}

func (c *current) onTitleElement449() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement449() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement449()
}

func (c *current) onTitleElement455() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement455() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement455()
}

func (c *current) onTitleElement432(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement432() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement432(stack["key"])
}

func (c *current) onTitleElement469() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement469() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement469()
}

func (c *current) onTitleElement429(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement429() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement429(stack["key"])
}

func (c *current) onTitleElement310(alt, width, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, nil, otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement310() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement310(stack["alt"], stack["width"], stack["otherAttrs"])
}

func (c *current) onTitleElement479() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement479() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement479()
}

func (c *current) onTitleElement486() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement486() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement486()
}

func (c *current) onTitleElement482() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement482() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement482()
}

func (c *current) onTitleElement488() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement488() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement488()
}

func (c *current) onTitleElement476() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement476() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement476()
}

func (c *current) onTitleElement508() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement508() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement508()
}

func (c *current) onTitleElement511() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement511() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement511()
}

func (c *current) onTitleElement514() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement514() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement514()
}

func (c *current) onTitleElement519() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement519() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement519()
}

func (c *current) onTitleElement526() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement526() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement526()
}

func (c *current) onTitleElement522() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement522() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement522()
}

func (c *current) onTitleElement528() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement528() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement528()
}

func (c *current) onTitleElement505(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement505() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement505(stack["key"])
}

func (c *current) onTitleElement543() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement543() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement543()
}

func (c *current) onTitleElement550() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement550() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement550()
}

func (c *current) onTitleElement546() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement546() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement546()
}

func (c *current) onTitleElement552() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement552() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement552()
}

func (c *current) onTitleElement539(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement539() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement539(stack["value"])
}

func (c *current) onTitleElement566() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement566() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement566()
}

func (c *current) onTitleElement502(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement502() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement502(stack["key"], stack["value"])
}

func (c *current) onTitleElement574() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement574() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement574()
}

func (c *current) onTitleElement577() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement577() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement577()
}

func (c *current) onTitleElement580() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement580() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement580()
}

func (c *current) onTitleElement585() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement585() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement585()
}

func (c *current) onTitleElement592() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement592() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement592()
}

func (c *current) onTitleElement588() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement588() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement588()
}

func (c *current) onTitleElement594() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement594() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement594()
}

func (c *current) onTitleElement571(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement571() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement571(stack["key"])
}

func (c *current) onTitleElement608() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement608() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement608()
}

func (c *current) onTitleElement568(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement568() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement568(stack["key"])
}

func (c *current) onTitleElement472(alt, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, nil, nil, otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement472() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement472(stack["alt"], stack["otherAttrs"])
}

func (c *current) onTitleElement623() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement623() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement623()
}

func (c *current) onTitleElement626() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement626() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement626()
}

func (c *current) onTitleElement629() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement629() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement629()
}

func (c *current) onTitleElement634() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement634() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement634()
}

func (c *current) onTitleElement641() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement641() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement641()
}

func (c *current) onTitleElement637() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement637() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement637()
}

func (c *current) onTitleElement643() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement643() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement643()
}

func (c *current) onTitleElement620(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement620() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement620(stack["key"])
}

func (c *current) onTitleElement658() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement658() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement658()
}

func (c *current) onTitleElement665() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement665() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement665()
}

func (c *current) onTitleElement661() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement661() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement661()
}

func (c *current) onTitleElement667() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement667() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement667()
}

func (c *current) onTitleElement654(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement654() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement654(stack["value"])
}

func (c *current) onTitleElement681() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement681() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement681()
}

func (c *current) onTitleElement617(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement617() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement617(stack["key"], stack["value"])
}

func (c *current) onTitleElement689() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement689() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement689()
}

func (c *current) onTitleElement692() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement692() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement692()
}

func (c *current) onTitleElement695() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement695() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement695()
}

func (c *current) onTitleElement700() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement700() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement700()
}

func (c *current) onTitleElement707() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement707() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement707()
}

func (c *current) onTitleElement703() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement703() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement703()
}

func (c *current) onTitleElement709() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement709() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement709()
}

func (c *current) onTitleElement686(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement686() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement686(stack["key"])
}

func (c *current) onTitleElement723() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement723() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement723()
}

func (c *current) onTitleElement683(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement683() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement683(stack["key"])
}

func (c *current) onTitleElement611(otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(nil, nil, nil, otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement611() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement611(stack["otherAttrs"])
}

func (c *current) onTitleElement95(path, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineImage(path.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonTitleElement95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement95(stack["path"], stack["inlineAttributes"])
}

func (c *current) onTitleElement745() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement745() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement745()
}

func (c *current) onTitleElement757() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement757() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement757()
}

func (c *current) onTitleElement748() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement748() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement748()
}

func (c *current) onTitleElement742() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement742() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement742()
}

func (c *current) onTitleElement733() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement733() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement733()
}

func (c *current) onTitleElement773() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement773() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement773()
}

func (c *current) onTitleElement780() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement780() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement780()
}

func (c *current) onTitleElement776() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement776() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement776()
}

func (c *current) onTitleElement782() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement782() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement782()
}

func (c *current) onTitleElement770() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement770() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement770()
}

func (c *current) onTitleElement798() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement798() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement798()
}

func (c *current) onTitleElement801() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement801() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement801()
}

func (c *current) onTitleElement804() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement804() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement804()
}

func (c *current) onTitleElement809() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement809() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement809()
}

func (c *current) onTitleElement816() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement816() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement816()
}

func (c *current) onTitleElement812() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement812() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement812()
}

func (c *current) onTitleElement818() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement818() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement818()
}

func (c *current) onTitleElement795(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement795() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement795(stack["key"])
}

func (c *current) onTitleElement833() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement833() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement833()
}

func (c *current) onTitleElement840() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement840() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement840()
}

func (c *current) onTitleElement836() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement836() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement836()
}

func (c *current) onTitleElement842() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement842() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement842()
}

func (c *current) onTitleElement829(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement829() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement829(stack["value"])
}

func (c *current) onTitleElement856() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement856() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement856()
}

func (c *current) onTitleElement792(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement792() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement792(stack["key"], stack["value"])
}

func (c *current) onTitleElement864() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement864() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement864()
}

func (c *current) onTitleElement867() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement867() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement867()
}

func (c *current) onTitleElement870() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement870() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement870()
}

func (c *current) onTitleElement875() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement875() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement875()
}

func (c *current) onTitleElement882() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement882() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement882()
}

func (c *current) onTitleElement878() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement878() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement878()
}

func (c *current) onTitleElement884() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement884() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement884()
}

func (c *current) onTitleElement861(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement861() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement861(stack["key"])
}

func (c *current) onTitleElement898() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement898() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement898()
}

func (c *current) onTitleElement858(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement858() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement858(stack["key"])
}

func (c *current) onTitleElement766(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement766() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement766(stack["text"], stack["otherAttrs"])
}

func (c *current) onTitleElement913() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement913() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement913()
}

func (c *current) onTitleElement916() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement916() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement916()
}

func (c *current) onTitleElement919() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement919() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement919()
}

func (c *current) onTitleElement924() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement924() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement924()
}

func (c *current) onTitleElement931() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement931() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement931()
}

func (c *current) onTitleElement927() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement927() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement927()
}

func (c *current) onTitleElement933() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement933() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement933()
}

func (c *current) onTitleElement910(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement910() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement910(stack["key"])
}

func (c *current) onTitleElement948() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement948() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement948()
}

func (c *current) onTitleElement955() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement955() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement955()
}

func (c *current) onTitleElement951() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement951() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement951()
}

func (c *current) onTitleElement957() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement957() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement957()
}

func (c *current) onTitleElement944(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement944() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement944(stack["value"])
}

func (c *current) onTitleElement971() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement971() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement971()
}

func (c *current) onTitleElement907(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement907() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement907(stack["key"], stack["value"])
}

func (c *current) onTitleElement979() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement979() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement979()
}

func (c *current) onTitleElement982() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement982() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement982()
}

func (c *current) onTitleElement985() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement985() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement985()
}

func (c *current) onTitleElement990() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement990() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement990()
}

func (c *current) onTitleElement997() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement997() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement997()
}

func (c *current) onTitleElement993() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement993() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement993()
}

func (c *current) onTitleElement999() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement999() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement999()
}

func (c *current) onTitleElement976(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement976() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement976(stack["key"])
}

func (c *current) onTitleElement1013() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1013() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1013()
}

func (c *current) onTitleElement973(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement973() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement973(stack["key"])
}

func (c *current) onTitleElement901(otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement901() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement901(stack["otherAttrs"])
}

func (c *current) onTitleElement729(url, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonTitleElement729() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement729(stack["url"], stack["inlineAttributes"])
}

func (c *current) onTitleElement1030() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1030() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1030()
}

func (c *current) onTitleElement1042() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1042() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1042()
}

func (c *current) onTitleElement1033() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1033() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1033()
}

func (c *current) onTitleElement1027() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1027() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1027()
}

func (c *current) onTitleElement1019() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1019() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1019()
}

func (c *current) onTitleElement1058() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1058() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1058()
}

func (c *current) onTitleElement1065() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1065() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1065()
}

func (c *current) onTitleElement1061() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1061() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1061()
}

func (c *current) onTitleElement1067() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1067() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1067()
}

func (c *current) onTitleElement1055() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1055() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1055()
}

func (c *current) onTitleElement1083() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1083() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1083()
}

func (c *current) onTitleElement1086() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1086() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1086()
}

func (c *current) onTitleElement1089() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1089() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1089()
}

func (c *current) onTitleElement1094() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1094() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1094()
}

func (c *current) onTitleElement1101() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1101() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1101()
}

func (c *current) onTitleElement1097() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1097() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1097()
}

func (c *current) onTitleElement1103() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1103() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1103()
}

func (c *current) onTitleElement1080(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1080() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1080(stack["key"])
}

func (c *current) onTitleElement1118() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1118() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1118()
}

func (c *current) onTitleElement1125() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1125() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1125()
}

func (c *current) onTitleElement1121() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1121()
}

func (c *current) onTitleElement1127() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1127() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1127()
}

func (c *current) onTitleElement1114(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1114() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1114(stack["value"])
}

func (c *current) onTitleElement1141() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1141()
}

func (c *current) onTitleElement1077(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement1077() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1077(stack["key"], stack["value"])
}

func (c *current) onTitleElement1149() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1149() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1149()
}

func (c *current) onTitleElement1152() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1152()
}

func (c *current) onTitleElement1155() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1155() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1155()
}

func (c *current) onTitleElement1160() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1160() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1160()
}

func (c *current) onTitleElement1167() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1167()
}

func (c *current) onTitleElement1163() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1163() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1163()
}

func (c *current) onTitleElement1169() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1169() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1169()
}

func (c *current) onTitleElement1146(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1146() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1146(stack["key"])
}

func (c *current) onTitleElement1183() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1183() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1183()
}

func (c *current) onTitleElement1143(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement1143() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1143(stack["key"])
}

func (c *current) onTitleElement1051(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement1051() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1051(stack["text"], stack["otherAttrs"])
}

func (c *current) onTitleElement1198() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1198()
}

func (c *current) onTitleElement1201() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1201() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1201()
}

func (c *current) onTitleElement1204() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1204() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1204()
}

func (c *current) onTitleElement1209() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1209() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1209()
}

func (c *current) onTitleElement1216() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1216() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1216()
}

func (c *current) onTitleElement1212() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1212() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1212()
}

func (c *current) onTitleElement1218() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1218() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1218()
}

func (c *current) onTitleElement1195(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1195() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1195(stack["key"])
}

func (c *current) onTitleElement1233() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1233() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1233()
}

func (c *current) onTitleElement1240() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1240() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1240()
}

func (c *current) onTitleElement1236() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1236() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1236()
}

func (c *current) onTitleElement1242() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1242() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1242()
}

func (c *current) onTitleElement1229(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1229() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1229(stack["value"])
}

func (c *current) onTitleElement1256() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1256() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1256()
}

func (c *current) onTitleElement1192(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement1192() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1192(stack["key"], stack["value"])
}

func (c *current) onTitleElement1264() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1264() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1264()
}

func (c *current) onTitleElement1267() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1267() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1267()
}

func (c *current) onTitleElement1270() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1270() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1270()
}

func (c *current) onTitleElement1275() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1275() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1275()
}

func (c *current) onTitleElement1282() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1282() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1282()
}

func (c *current) onTitleElement1278() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1278() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1278()
}

func (c *current) onTitleElement1284() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1284() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1284()
}

func (c *current) onTitleElement1261(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1261() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1261(stack["key"])
}

func (c *current) onTitleElement1298() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1298() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1298()
}

func (c *current) onTitleElement1258(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement1258() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1258(stack["key"])
}

func (c *current) onTitleElement1186(otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement1186() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1186(stack["otherAttrs"])
}

func (c *current) onTitleElement1016(url, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonTitleElement1016() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1016(stack["url"], stack["inlineAttributes"])
}

func (c *current) onTitleElement1314() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1314() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1314()
}

func (c *current) onTitleElement1326() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1326() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1326()
}

func (c *current) onTitleElement1317() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1317() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1317()
}

func (c *current) onTitleElement1311() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1311() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1311()
}

func (c *current) onTitleElement1303() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1303() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1303()
}

func (c *current) onTitleElement1301(url interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), nil)
}

func (p *parser) callonTitleElement1301() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1301(stack["url"])
}

func (c *current) onTitleElement726(link interface{}) (interface{}, error) {
	return link, nil
}

func (p *parser) callonTitleElement726() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement726(stack["link"])
}

func (c *current) onTitleElement1334() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1334() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1334()
}

func (c *current) onTitleElement1340() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1340() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1340()
}

func (c *current) onTitleElement1347() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1347() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1347()
}

func (c *current) onTitleElement1343(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeSubstitution(name.(string))
}

func (p *parser) callonTitleElement1343() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1343(stack["name"])
}

func (c *current) onTitleElement1358() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1358() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1358()
}

func (c *current) onTitleElement1364() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1364() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1364()
}

func (c *current) onTitleElement1354() (interface{}, error) {
	return types.NewLineBreak()
}

func (p *parser) callonTitleElement1354() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1354()
}

func (c *current) onTitleElement1373() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1373() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1373()
}

func (c *current) onTitleElement1386() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1386() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1386()
}

func (c *current) onTitleElement1395() (interface{}, error) {
	// rule used withn `words` to detect superscript or subscript portions, eg in math formulae.
	return string(c.text), nil
}

func (p *parser) callonTitleElement1395() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1395()
}

func (c *current) onTitleElement1377() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1377() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1377()
}

func (c *current) onTitleElement1371() (interface{}, error) {
	// word cannot contain parenthesis. Dots and ellipsis are treated as independent words (but will be combined afterwards)
	return string(c.text), nil
}

func (p *parser) callonTitleElement1371() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1371()
}

func (c *current) onTitleElement1(element interface{}) (interface{}, error) {
	return element, nil
}

func (p *parser) callonTitleElement1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1(stack["element"])
}

func (c *current) onList1(elements interface{}) (interface{}, error) {
	return types.NewList(elements.([]interface{}))
}

func (p *parser) callonList1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList1(stack["elements"])
}

func (c *current) onListParagraph1(lines interface{}) (interface{}, error) {
	return types.NewParagraph(lines.([]interface{}))
}

func (p *parser) callonListParagraph1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph1(stack["lines"])
}

func (c *current) onListParagraphLine9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine9()
}

func (c *current) onListParagraphLine13() (interface{}, error) {
	// numbering style: "....."
	return types.NewOrderedListItemPrefix(types.UpperRoman, 5)

}

func (p *parser) callonListParagraphLine13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine13()
}

func (c *current) onListParagraphLine15() (interface{}, error) {
	// numbering style: "...."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 4)

}

func (p *parser) callonListParagraphLine15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine15()
}

func (c *current) onListParagraphLine17() (interface{}, error) {
	// numbering style: "..."
	return types.NewOrderedListItemPrefix(types.LowerRoman, 3)

}

func (p *parser) callonListParagraphLine17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine17()
}

func (c *current) onListParagraphLine19() (interface{}, error) {
	// numbering style: ".."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 2)

}

func (p *parser) callonListParagraphLine19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine19()
}

func (c *current) onListParagraphLine21() (interface{}, error) {
	// numbering style: "."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)
	// explicit numbering

}

func (p *parser) callonListParagraphLine21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine21()
}

func (c *current) onListParagraphLine23() (interface{}, error) {
	// numbering style: "1."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)

}

func (p *parser) callonListParagraphLine23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine23()
}

func (c *current) onListParagraphLine28() (interface{}, error) {
	// numbering style: "a."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 1)

}

func (p *parser) callonListParagraphLine28() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine28()
}

func (c *current) onListParagraphLine32() (interface{}, error) {
	// numbering style: "A."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 1)

}

func (p *parser) callonListParagraphLine32() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine32()
}

func (c *current) onListParagraphLine36() (interface{}, error) {
	// numbering style: "i)"
	return types.NewOrderedListItemPrefix(types.LowerRoman, 1)

}

func (p *parser) callonListParagraphLine36() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine36()
}

func (c *current) onListParagraphLine41() (interface{}, error) {
	// numbering style: "I)"
	return types.NewOrderedListItemPrefix(types.UpperRoman, 1)

}

func (p *parser) callonListParagraphLine41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine41()
}

func (c *current) onListParagraphLine49() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine49()
}

func (c *current) onListParagraphLine4(prefix interface{}) (interface{}, error) {
	return prefix, nil
}

func (p *parser) callonListParagraphLine4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine4(stack["prefix"])
}

func (c *current) onListParagraphLine57() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine57() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine57()
}

func (c *current) onListParagraphLine61() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FiveAsterisks, 5)

}

func (p *parser) callonListParagraphLine61() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine61()
}

func (c *current) onListParagraphLine63() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FourAsterisks, 4)

}

func (p *parser) callonListParagraphLine63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine63()
}

func (c *current) onListParagraphLine65() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.ThreeAsterisks, 3)

}

func (p *parser) callonListParagraphLine65() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine65()
}

func (c *current) onListParagraphLine67() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.TwoAsterisks, 2)

}

func (p *parser) callonListParagraphLine67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine67()
}

func (c *current) onListParagraphLine69() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.OneAsterisk, 1)

}

func (p *parser) callonListParagraphLine69() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine69()
}

func (c *current) onListParagraphLine71() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.Dash, 1)

}

func (p *parser) callonListParagraphLine71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine71()
}

func (c *current) onListParagraphLine76() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine76() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine76()
}

func (c *current) onListParagraphLine52(prefix interface{}) (interface{}, error) {
	return prefix, nil
}

func (p *parser) callonListParagraphLine52() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine52(stack["prefix"])
}

func (c *current) onListParagraphLine83() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine83() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine83()
}

func (c *current) onListParagraphLine90() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine90() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine90()
}

func (c *current) onListParagraphLine86() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine86()
}

func (c *current) onListParagraphLine92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine92()
}

func (c *current) onListParagraphLine80() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine80() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine80()
}

func (c *current) onListParagraphLine101() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine101() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine101()
}

func (c *current) onListParagraphLine113() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine113()
}

func (c *current) onListParagraphLine107() (interface{}, error) {
	return types.NewListItemContinuation()
}

func (p *parser) callonListParagraphLine107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine107()
}

func (c *current) onListParagraphLine134() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine134() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine134()
}

func (c *current) onListParagraphLine146() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine146() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine146()
}

func (c *current) onListParagraphLine137() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine137() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine137()
}

func (c *current) onListParagraphLine131() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine131() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine131()
}

func (c *current) onListParagraphLine127(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonListParagraphLine127() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine127(stack["id"])
}

func (c *current) onListParagraphLine167() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine167()
}

func (c *current) onListParagraphLine179() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine179()
}

func (c *current) onListParagraphLine170() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine170() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine170()
}

func (c *current) onListParagraphLine164() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine164() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine164()
}

func (c *current) onListParagraphLine160(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonListParagraphLine160() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine160(stack["id"])
}

func (c *current) onListParagraphLine201() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine201() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine201()
}

func (c *current) onListParagraphLine207() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine207() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine207()
}

func (c *current) onListParagraphLine214() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine214() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine214()
}

func (c *current) onListParagraphLine210() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine210() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine210()
}

func (c *current) onListParagraphLine216() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine216() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine216()
}

func (c *current) onListParagraphLine204() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine204() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine204()
}

func (c *current) onListParagraphLine193(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonListParagraphLine193() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine193(stack["title"])
}

func (c *current) onListParagraphLine229() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine229() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine229()
}

func (c *current) onListParagraphLine235() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine235() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine235()
}

func (c *current) onListParagraphLine242() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine242() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine242()
}

func (c *current) onListParagraphLine238() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine238() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine238()
}

func (c *current) onListParagraphLine244() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine244() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine244()
}

func (c *current) onListParagraphLine232() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine232() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine232()
}

func (c *current) onListParagraphLine223(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonListParagraphLine223() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine223(stack["role"])
}

func (c *current) onListParagraphLine254() (interface{}, error) {
	return types.NewSourceAttributes("")
}

func (p *parser) callonListParagraphLine254() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine254()
}

func (c *current) onListParagraphLine263() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine263() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine263()
}

func (c *current) onListParagraphLine270() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine270() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine270()
}

func (c *current) onListParagraphLine266() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine266() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine266()
}

func (c *current) onListParagraphLine272() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonListParagraphLine272() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine272()
}

func (c *current) onListParagraphLine260() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonListParagraphLine260() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine260()
}

func (c *current) onListParagraphLine256(language interface{}) (interface{}, error) {
	return types.NewSourceAttributes(language.(string))
}

func (p *parser) callonListParagraphLine256() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine256(stack["language"])
}

func (c *current) onListParagraphLine286() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine286() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine286()
}

func (c *current) onListParagraphLine291() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine291() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine291()
}

func (c *current) onListParagraphLine298() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine298() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine298()
}

func (c *current) onListParagraphLine305() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine305() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine305()
}

func (c *current) onListParagraphLine301() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine301() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine301()
}

func (c *current) onListParagraphLine307() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine307() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine307()
}

func (c *current) onListParagraphLine295() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine295() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine295()
}

func (c *current) onListParagraphLine325() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine325() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine325()
}

func (c *current) onListParagraphLine332() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine332() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine332()
}

func (c *current) onListParagraphLine328() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine328() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine328()
}

func (c *current) onListParagraphLine322() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine322() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine322()
}

func (c *current) onListParagraphLine282(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))
}

func (p *parser) callonListParagraphLine282() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine282(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onListParagraphLine351() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine351() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine351()
}

func (c *current) onListParagraphLine356() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine356() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine356()
}

func (c *current) onListParagraphLine363() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine363() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine363()
}

func (c *current) onListParagraphLine370() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine370() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine370()
}

func (c *current) onListParagraphLine366() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine366() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine366()
}

func (c *current) onListParagraphLine372() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine372() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine372()
}

func (c *current) onListParagraphLine360() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine360() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine360()
}

func (c *current) onListParagraphLine347(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")
}

func (p *parser) callonListParagraphLine347() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine347(stack["kind"], stack["author"])
}

func (c *current) onListParagraphLine390() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine390() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine390()
}

func (c *current) onListParagraphLine395() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine395() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine395()
}

func (c *current) onListParagraphLine386(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")
}

func (p *parser) callonListParagraphLine386() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine386(stack["kind"])
}

func (c *current) onListParagraphLine406() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine406() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine406()
}

func (c *current) onListParagraphLine411() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine411() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine411()
}

func (c *current) onListParagraphLine418() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine418() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine418()
}

func (c *current) onListParagraphLine425() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine425() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine425()
}

func (c *current) onListParagraphLine421() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine421() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine421()
}

func (c *current) onListParagraphLine427() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine427() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine427()
}

func (c *current) onListParagraphLine415() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine415() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine415()
}

func (c *current) onListParagraphLine445() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine445() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine445()
}

func (c *current) onListParagraphLine452() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine452() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine452()
}

func (c *current) onListParagraphLine448() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine448() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine448()
}

func (c *current) onListParagraphLine442() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine442() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine442()
}

func (c *current) onListParagraphLine402(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonListParagraphLine402() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine402(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onListParagraphLine471() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine471() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine471()
}

func (c *current) onListParagraphLine476() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine476() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine476()
}

func (c *current) onListParagraphLine483() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine483() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine483()
}

func (c *current) onListParagraphLine490() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine490() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine490()
}

func (c *current) onListParagraphLine486() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine486() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine486()
}

func (c *current) onListParagraphLine492() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine492() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine492()
}

func (c *current) onListParagraphLine480() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine480() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine480()
}

func (c *current) onListParagraphLine467(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonListParagraphLine467() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine467(stack["kind"], stack["author"])
}

func (c *current) onListParagraphLine510() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine510() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine510()
}

func (c *current) onListParagraphLine515() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine515() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine515()
}

func (c *current) onListParagraphLine506(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonListParagraphLine506() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine506(stack["kind"])
}

func (c *current) onListParagraphLine518(attribute interface{}) error {
	c.state["verse"] = true
	return nil
}

func (p *parser) callonListParagraphLine518() error {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine518(stack["attribute"])
}

func (c *current) onListParagraphLine398(attribute interface{}) (interface{}, error) {
	return attribute, nil
}

func (p *parser) callonListParagraphLine398() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine398(stack["attribute"])
}

func (c *current) onListParagraphLine524() (interface{}, error) {
	return types.Tip, nil

}

func (p *parser) callonListParagraphLine524() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine524()
}

func (c *current) onListParagraphLine526() (interface{}, error) {
	return types.Note, nil

}

func (p *parser) callonListParagraphLine526() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine526()
}

func (c *current) onListParagraphLine528() (interface{}, error) {
	return types.Important, nil

}

func (p *parser) callonListParagraphLine528() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine528()
}

func (c *current) onListParagraphLine530() (interface{}, error) {
	return types.Warning, nil

}

func (p *parser) callonListParagraphLine530() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine530()
}

func (c *current) onListParagraphLine532() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonListParagraphLine532() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine532()
}

func (c *current) onListParagraphLine519(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonListParagraphLine519() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine519(stack["k"])
}

func (c *current) onListParagraphLine535() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonListParagraphLine535() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine535()
}

func (c *current) onListParagraphLine543() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine543() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine543()
}

func (c *current) onListParagraphLine554() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine554() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine554()
}

func (c *current) onListParagraphLine557() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine557() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine557()
}

func (c *current) onListParagraphLine560() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine560() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine560()
}

func (c *current) onListParagraphLine565() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine565() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine565()
}

func (c *current) onListParagraphLine572() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine572() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine572()
}

func (c *current) onListParagraphLine568() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine568() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine568()
}

func (c *current) onListParagraphLine574() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine574() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine574()
}

func (c *current) onListParagraphLine551(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine551() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine551(stack["key"])
}

func (c *current) onListParagraphLine589() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine589() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine589()
}

func (c *current) onListParagraphLine596() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine596() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine596()
}

func (c *current) onListParagraphLine592() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine592() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine592()
}

func (c *current) onListParagraphLine598() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine598() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine598()
}

func (c *current) onListParagraphLine585(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine585() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine585(stack["value"])
}

func (c *current) onListParagraphLine612() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine612() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine612()
}

func (c *current) onListParagraphLine548(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonListParagraphLine548() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine548(stack["key"], stack["value"])
}

func (c *current) onListParagraphLine620() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine620() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine620()
}

func (c *current) onListParagraphLine623() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine623() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine623()
}

func (c *current) onListParagraphLine626() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine626() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine626()
}

func (c *current) onListParagraphLine631() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine631() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine631()
}

func (c *current) onListParagraphLine638() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine638() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine638()
}

func (c *current) onListParagraphLine634() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine634() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine634()
}

func (c *current) onListParagraphLine640() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine640() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine640()
}

func (c *current) onListParagraphLine617(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine617() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine617(stack["key"])
}

func (c *current) onListParagraphLine654() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine654() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine654()
}

func (c *current) onListParagraphLine614(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonListParagraphLine614() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine614(stack["key"])
}

func (c *current) onListParagraphLine537(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonListParagraphLine537() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine537(stack["attributes"])
}

func (c *current) onListParagraphLine660() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine660() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine660()
}

func (c *current) onListParagraphLine121(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonListParagraphLine121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine121(stack["attr"])
}

func (c *current) onListParagraphLine675() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine675() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine675()
}

func (c *current) onListParagraphLine687() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine687() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine687()
}

func (c *current) onListParagraphLine699() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine699() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine699()
}

func (c *current) onListParagraphLine712() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine712() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine712()
}

func (c *current) onListParagraphLine724() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine724() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine724()
}

func (c *current) onListParagraphLine1(line interface{}) (interface{}, error) {
	return line, nil
}

func (p *parser) callonListParagraphLine1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine1(stack["line"])
}

func (c *current) onContinuedDocumentElement9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonContinuedDocumentElement9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onContinuedDocumentElement9()
}

func (c *current) onContinuedDocumentElement3() (interface{}, error) {
	return types.NewListItemContinuation()
}

func (p *parser) callonContinuedDocumentElement3() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onContinuedDocumentElement3()
}

func (c *current) onContinuedDocumentElement1(element interface{}) (interface{}, error) {
	return element, nil
}

func (p *parser) callonContinuedDocumentElement1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onContinuedDocumentElement1(stack["element"])
}

func (c *current) onOrderedListItem18() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem18()
}

func (c *current) onOrderedListItem30() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem30() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem30()
}

func (c *current) onOrderedListItem21() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem21()
}

func (c *current) onOrderedListItem15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem15()
}

func (c *current) onOrderedListItem11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonOrderedListItem11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem11(stack["id"])
}

func (c *current) onOrderedListItem51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem51()
}

func (c *current) onOrderedListItem63() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem63()
}

func (c *current) onOrderedListItem54() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem54() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem54()
}

func (c *current) onOrderedListItem48() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem48() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem48()
}

func (c *current) onOrderedListItem44(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonOrderedListItem44() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem44(stack["id"])
}

func (c *current) onOrderedListItem85() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem85() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem85()
}

func (c *current) onOrderedListItem91() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem91() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem91()
}

func (c *current) onOrderedListItem98() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem98() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem98()
}

func (c *current) onOrderedListItem94() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem94() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem94()
}

func (c *current) onOrderedListItem100() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem100() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem100()
}

func (c *current) onOrderedListItem88() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem88() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem88()
}

func (c *current) onOrderedListItem77(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonOrderedListItem77() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem77(stack["title"])
}

func (c *current) onOrderedListItem113() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem113()
}

func (c *current) onOrderedListItem119() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem119()
}

func (c *current) onOrderedListItem126() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem126() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem126()
}

func (c *current) onOrderedListItem122() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem122()
}

func (c *current) onOrderedListItem128() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem128() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem128()
}

func (c *current) onOrderedListItem116() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem116()
}

func (c *current) onOrderedListItem107(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonOrderedListItem107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem107(stack["role"])
}

func (c *current) onOrderedListItem138() (interface{}, error) {
	return types.NewSourceAttributes("")
}

func (p *parser) callonOrderedListItem138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem138()
}

func (c *current) onOrderedListItem147() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem147() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem147()
}

func (c *current) onOrderedListItem154() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem154() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem154()
}

func (c *current) onOrderedListItem150() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem150() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem150()
}

func (c *current) onOrderedListItem156() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonOrderedListItem156() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem156()
}

func (c *current) onOrderedListItem144() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonOrderedListItem144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem144()
}

func (c *current) onOrderedListItem140(language interface{}) (interface{}, error) {
	return types.NewSourceAttributes(language.(string))
}

func (p *parser) callonOrderedListItem140() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem140(stack["language"])
}

func (c *current) onOrderedListItem170() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem170() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem170()
}

func (c *current) onOrderedListItem175() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem175() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem175()
}

func (c *current) onOrderedListItem182() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem182() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem182()
}

func (c *current) onOrderedListItem189() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem189() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem189()
}

func (c *current) onOrderedListItem185() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem185() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem185()
}

func (c *current) onOrderedListItem191() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem191() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem191()
}

func (c *current) onOrderedListItem179() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem179()
}

func (c *current) onOrderedListItem209() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem209() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem209()
}

func (c *current) onOrderedListItem216() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem216() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem216()
}

func (c *current) onOrderedListItem212() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem212() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem212()
}

func (c *current) onOrderedListItem206() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem206() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem206()
}

func (c *current) onOrderedListItem166(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))
}

func (p *parser) callonOrderedListItem166() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem166(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onOrderedListItem235() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem235() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem235()
}

func (c *current) onOrderedListItem240() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem240() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem240()
}

func (c *current) onOrderedListItem247() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem247() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem247()
}

func (c *current) onOrderedListItem254() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem254() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem254()
}

func (c *current) onOrderedListItem250() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem250() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem250()
}

func (c *current) onOrderedListItem256() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem256() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem256()
}

func (c *current) onOrderedListItem244() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem244() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem244()
}

func (c *current) onOrderedListItem231(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")
}

func (p *parser) callonOrderedListItem231() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem231(stack["kind"], stack["author"])
}

func (c *current) onOrderedListItem274() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem274() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem274()
}

func (c *current) onOrderedListItem279() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem279() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem279()
}

func (c *current) onOrderedListItem270(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")
}

func (p *parser) callonOrderedListItem270() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem270(stack["kind"])
}

func (c *current) onOrderedListItem290() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem290() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem290()
}

func (c *current) onOrderedListItem295() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem295() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem295()
}

func (c *current) onOrderedListItem302() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem302() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem302()
}

func (c *current) onOrderedListItem309() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem309() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem309()
}

func (c *current) onOrderedListItem305() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem305() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem305()
}

func (c *current) onOrderedListItem311() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem311() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem311()
}

func (c *current) onOrderedListItem299() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem299() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem299()
}

func (c *current) onOrderedListItem329() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem329() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem329()
}

func (c *current) onOrderedListItem336() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem336() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem336()
}

func (c *current) onOrderedListItem332() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem332() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem332()
}

func (c *current) onOrderedListItem326() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem326() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem326()
}

func (c *current) onOrderedListItem286(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonOrderedListItem286() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem286(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onOrderedListItem355() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem355() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem355()
}

func (c *current) onOrderedListItem360() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem360() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem360()
}

func (c *current) onOrderedListItem367() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem367() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem367()
}

func (c *current) onOrderedListItem374() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem374() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem374()
}

func (c *current) onOrderedListItem370() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem370() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem370()
}

func (c *current) onOrderedListItem376() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem376() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem376()
}

func (c *current) onOrderedListItem364() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem364() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem364()
}

func (c *current) onOrderedListItem351(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonOrderedListItem351() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem351(stack["kind"], stack["author"])
}

func (c *current) onOrderedListItem394() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem394() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem394()
}

func (c *current) onOrderedListItem399() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem399() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem399()
}

func (c *current) onOrderedListItem390(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonOrderedListItem390() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem390(stack["kind"])
}

func (c *current) onOrderedListItem402(attribute interface{}) error {
	c.state["verse"] = true
	return nil
}

func (p *parser) callonOrderedListItem402() error {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem402(stack["attribute"])
}

func (c *current) onOrderedListItem282(attribute interface{}) (interface{}, error) {
	return attribute, nil
}

func (p *parser) callonOrderedListItem282() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem282(stack["attribute"])
}

func (c *current) onOrderedListItem408() (interface{}, error) {
	return types.Tip, nil

}

func (p *parser) callonOrderedListItem408() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem408()
}

func (c *current) onOrderedListItem410() (interface{}, error) {
	return types.Note, nil

}

func (p *parser) callonOrderedListItem410() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem410()
}

func (c *current) onOrderedListItem412() (interface{}, error) {
	return types.Important, nil

}

func (p *parser) callonOrderedListItem412() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem412()
}

func (c *current) onOrderedListItem414() (interface{}, error) {
	return types.Warning, nil

}

func (p *parser) callonOrderedListItem414() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem414()
}

func (c *current) onOrderedListItem416() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonOrderedListItem416() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem416()
}

func (c *current) onOrderedListItem403(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonOrderedListItem403() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem403(stack["k"])
}

func (c *current) onOrderedListItem419() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonOrderedListItem419() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem419()
}

func (c *current) onOrderedListItem427() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem427() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem427()
}

func (c *current) onOrderedListItem438() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem438() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem438()
}

func (c *current) onOrderedListItem441() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem441() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem441()
}

func (c *current) onOrderedListItem444() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem444() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem444()
}

func (c *current) onOrderedListItem449() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem449() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem449()
}

func (c *current) onOrderedListItem456() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem456() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem456()
}

func (c *current) onOrderedListItem452() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem452() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem452()
}

func (c *current) onOrderedListItem458() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem458() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem458()
}

func (c *current) onOrderedListItem435(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem435() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem435(stack["key"])
}

func (c *current) onOrderedListItem473() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem473() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem473()
}

func (c *current) onOrderedListItem480() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem480() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem480()
}

func (c *current) onOrderedListItem476() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem476() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem476()
}

func (c *current) onOrderedListItem482() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem482() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem482()
}

func (c *current) onOrderedListItem469(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem469() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem469(stack["value"])
}

func (c *current) onOrderedListItem496() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem496() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem496()
}

func (c *current) onOrderedListItem432(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonOrderedListItem432() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem432(stack["key"], stack["value"])
}

func (c *current) onOrderedListItem504() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem504() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem504()
}

func (c *current) onOrderedListItem507() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem507() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem507()
}

func (c *current) onOrderedListItem510() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem510() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem510()
}

func (c *current) onOrderedListItem515() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem515() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem515()
}

func (c *current) onOrderedListItem522() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem522() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem522()
}

func (c *current) onOrderedListItem518() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem518() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem518()
}

func (c *current) onOrderedListItem524() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem524() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem524()
}

func (c *current) onOrderedListItem501(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem501() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem501(stack["key"])
}

func (c *current) onOrderedListItem538() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem538() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem538()
}

func (c *current) onOrderedListItem498(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonOrderedListItem498() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem498(stack["key"])
}

func (c *current) onOrderedListItem421(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonOrderedListItem421() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem421(stack["attributes"])
}

func (c *current) onOrderedListItem544() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem544() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem544()
}

func (c *current) onOrderedListItem5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonOrderedListItem5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem5(stack["attr"])
}

func (c *current) onOrderedListItem557() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem557() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem557()
}

func (c *current) onOrderedListItem561() (interface{}, error) {
	// numbering style: "....."
	return types.NewOrderedListItemPrefix(types.UpperRoman, 5)

}

func (p *parser) callonOrderedListItem561() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem561()
}

func (c *current) onOrderedListItem563() (interface{}, error) {
	// numbering style: "...."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 4)

}

func (p *parser) callonOrderedListItem563() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem563()
}

func (c *current) onOrderedListItem565() (interface{}, error) {
	// numbering style: "..."
	return types.NewOrderedListItemPrefix(types.LowerRoman, 3)

}

func (p *parser) callonOrderedListItem565() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem565()
}

func (c *current) onOrderedListItem567() (interface{}, error) {
	// numbering style: ".."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 2)

}

func (p *parser) callonOrderedListItem567() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem567()
}

func (c *current) onOrderedListItem569() (interface{}, error) {
	// numbering style: "."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)
	// explicit numbering

}

func (p *parser) callonOrderedListItem569() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem569()
}

func (c *current) onOrderedListItem571() (interface{}, error) {
	// numbering style: "1."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)

}

func (p *parser) callonOrderedListItem571() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem571()
}

func (c *current) onOrderedListItem576() (interface{}, error) {
	// numbering style: "a."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 1)

}

func (p *parser) callonOrderedListItem576() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem576()
}

func (c *current) onOrderedListItem580() (interface{}, error) {
	// numbering style: "A."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 1)

}

func (p *parser) callonOrderedListItem580() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem580()
}

func (c *current) onOrderedListItem584() (interface{}, error) {
	// numbering style: "i)"
	return types.NewOrderedListItemPrefix(types.LowerRoman, 1)

}

func (p *parser) callonOrderedListItem584() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem584()
}

func (c *current) onOrderedListItem589() (interface{}, error) {
	// numbering style: "I)"
	return types.NewOrderedListItemPrefix(types.UpperRoman, 1)

}

func (p *parser) callonOrderedListItem589() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem589()
}

func (c *current) onOrderedListItem597() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem597() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem597()
}

func (c *current) onOrderedListItem552(prefix interface{}) (interface{}, error) {
	return prefix, nil
}

func (p *parser) callonOrderedListItem552() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem552(stack["prefix"])
}

func (c *current) onOrderedListItem610() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem610() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem610()
}

func (c *current) onOrderedListItem602() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonOrderedListItem602() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem602()
}

func (c *current) onOrderedListItem1(attributes, prefix, content interface{}) (interface{}, error) {
	return types.NewOrderedListItem(prefix.(types.OrderedListItemPrefix), content.([]interface{}), attributes.([]interface{}))
}

func (p *parser) callonOrderedListItem1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem1(stack["attributes"], stack["prefix"], stack["content"])
}

func (c *current) onOrderedListItemContent1(elements interface{}) (interface{}, error) {
	// Another list or a literal paragraph immediately following a list item will be implicitly included in the list item
	return types.NewListItemContent(elements.([]interface{}))
}

func (p *parser) callonOrderedListItemContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItemContent1(stack["elements"])
}

func (c *current) onUnorderedListItem9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonUnorderedListItem9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem9()
}

func (c *current) onUnorderedListItem13() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FiveAsterisks, 5)

}

func (p *parser) callonUnorderedListItem13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem13()
}

func (c *current) onUnorderedListItem15() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FourAsterisks, 4)

}

func (p *parser) callonUnorderedListItem15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem15()
}

func (c *current) onUnorderedListItem17() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.ThreeAsterisks, 3)

}

func (p *parser) callonUnorderedListItem17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem17()
}

func (c *current) onUnorderedListItem19() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.TwoAsterisks, 2)

}

func (p *parser) callonUnorderedListItem19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem19()
}

func (c *current) onUnorderedListItem21() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.OneAsterisk, 1)

}

func (p *parser) callonUnorderedListItem21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem21()
}

func (c *current) onUnorderedListItem23() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.Dash, 1)

}

func (p *parser) callonUnorderedListItem23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem23()
}

func (c *current) onUnorderedListItem28() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonUnorderedListItem28() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem28()
}

func (c *current) onUnorderedListItem4(prefix interface{}) (interface{}, error) {
	return prefix, nil
}

func (p *parser) callonUnorderedListItem4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem4(stack["prefix"])
}

func (c *current) onUnorderedListItem41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonUnorderedListItem41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem41()
}

func (c *current) onUnorderedListItem33() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonUnorderedListItem33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem33()
}

func (c *current) onUnorderedListItem1(prefix, content interface{}) (interface{}, error) {
	return types.NewUnorderedListItem(prefix.(types.UnorderedListItemPrefix), content.([]interface{}))
}

func (p *parser) callonUnorderedListItem1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem1(stack["prefix"], stack["content"])
}

func (c *current) onUnorderedListItemContent1(elements interface{}) (interface{}, error) {
	// Another list or a literal paragraph immediately following a list item will be implicitly included in the list item
	return types.NewListItemContent(elements.([]interface{}))
}

func (p *parser) callonUnorderedListItemContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItemContent1(stack["elements"])
}

func (c *current) onLabeledListItem7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItem7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem7()
}

func (c *current) onLabeledListItem14() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItem14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem14()
}

func (c *current) onLabeledListItem10() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItem10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem10()
}

func (c *current) onLabeledListItem16() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItem16() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem16()
}

func (c *current) onLabeledListItem4() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItem4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem4()
}

func (c *current) onLabeledListItem26() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItem26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem26()
}

func (c *current) onLabeledListItem1(term, separator, description interface{}) (interface{}, error) {
	return types.NewLabeledListItem(len(separator.(string))-1, term.(string), description.([]interface{}))
}

func (p *parser) callonLabeledListItem1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem1(stack["term"], stack["separator"], stack["description"])
}

func (c *current) onLabeledListItemDescription7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItemDescription7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItemDescription7()
}

func (c *current) onLabeledListItemDescription2(elements interface{}) (interface{}, error) {
	// TODO: replace with (ListParagraph+ ContinuedDocumentElement*) and use a single rule for all item contents ?
	return types.NewListItemContent(elements.([]interface{}))

}

func (p *parser) callonLabeledListItemDescription2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItemDescription2(stack["elements"])
}

func (c *current) onLabeledListItemDescription21() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItemDescription21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItemDescription21()
}

func (c *current) onLabeledListItemDescription16() (interface{}, error) {
	// here, WS is optional since there is no description afterwards
	return []interface{}{}, nil
}

func (p *parser) callonLabeledListItemDescription16() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItemDescription16()
}

func (c *current) onParagraph11() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph11()
}

func (c *current) onParagraph19() (interface{}, error) {
	return types.Tip, nil

}

func (p *parser) callonParagraph19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph19()
}

func (c *current) onParagraph21() (interface{}, error) {
	return types.Note, nil

}

func (p *parser) callonParagraph21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph21()
}

func (c *current) onParagraph23() (interface{}, error) {
	return types.Important, nil

}

func (p *parser) callonParagraph23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph23()
}

func (c *current) onParagraph25() (interface{}, error) {
	return types.Warning, nil

}

func (p *parser) callonParagraph25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph25()
}

func (c *current) onParagraph27() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph27()
}

func (c *current) onParagraph2(t, lines interface{}) (interface{}, error) {

	return types.NewAdmonitionParagraph(lines.([]interface{}), t.(types.AdmonitionKind))

}

func (p *parser) callonParagraph2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph2(stack["t"], stack["lines"])
}

func (c *current) onParagraph42() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph42() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph42()
}

func (c *current) onParagraph33(lines interface{}) (interface{}, error) {

	return types.NewParagraph(lines.([]interface{}))
}

func (p *parser) callonParagraph33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph33(stack["lines"])
}

func (c *current) onVerseParagraph3() (bool, error) {
	verse, ok := c.state["verse"].(bool)
	return ok && verse, nil

}

func (p *parser) callonVerseParagraph3() (bool, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseParagraph3()
}

func (c *current) onVerseParagraph15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseParagraph15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseParagraph15()
}

func (c *current) onVerseParagraph23() (interface{}, error) {
	return types.Tip, nil

}

func (p *parser) callonVerseParagraph23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseParagraph23()
}

func (c *current) onVerseParagraph25() (interface{}, error) {
	return types.Note, nil

}

func (p *parser) callonVerseParagraph25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseParagraph25()
}

func (c *current) onVerseParagraph27() (interface{}, error) {
	return types.Important, nil

}

func (p *parser) callonVerseParagraph27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseParagraph27()
}

func (c *current) onVerseParagraph29() (interface{}, error) {
	return types.Warning, nil

}

func (p *parser) callonVerseParagraph29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseParagraph29()
}

func (c *current) onVerseParagraph31() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonVerseParagraph31() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseParagraph31()
}

func (c *current) onVerseParagraph6(t, lines interface{}) (interface{}, error) {

	return types.NewAdmonitionParagraph(lines.([]interface{}), t.(types.AdmonitionKind))

}

func (p *parser) callonVerseParagraph6() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseParagraph6(stack["t"], stack["lines"])
}

func (c *current) onVerseParagraph46() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseParagraph46() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseParagraph46()
}

func (c *current) onVerseParagraph37(lines interface{}) (interface{}, error) {

	return types.NewParagraph(lines.([]interface{}))

}

func (p *parser) callonVerseParagraph37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseParagraph37(stack["lines"])
}

func (c *current) onVerseParagraph55(verse interface{}) error {
	c.state["verse"] = false
	return nil

}

func (p *parser) callonVerseParagraph55() error {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseParagraph55(stack["verse"])
}

func (c *current) onVerseParagraph1(verse interface{}) (interface{}, error) {
	return verse, nil
}

func (p *parser) callonVerseParagraph1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseParagraph1(stack["verse"])
}

func (c *current) onInlineElements13() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements13()
}

func (c *current) onInlineElements20() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements20() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements20()
}

func (c *current) onInlineElements16() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements16() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements16()
}

func (c *current) onInlineElements22() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements22() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements22()
}

func (c *current) onInlineElements10() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements10()
}

func (c *current) onInlineElements4(content interface{}) (interface{}, error) {
	return types.NewSingleLineComment(content.(string))
}

func (p *parser) callonInlineElements4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements4(stack["content"])
}

func (c *current) onInlineElements2(comment interface{}) (interface{}, error) {
	return types.NewInlineElements([]interface{}{comment})

}

func (p *parser) callonInlineElements2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements2(stack["comment"])
}

func (c *current) onInlineElements47() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements47() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements47()
}

func (c *current) onInlineElements39() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonInlineElements39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements39()
}

func (c *current) onInlineElements62() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements62() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements62()
}

func (c *current) onInlineElements74() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements74() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements74()
}

func (c *current) onInlineElements86() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements86()
}

func (c *current) onInlineElements99() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements99() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements99()
}

func (c *current) onInlineElements111() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements111()
}

func (c *current) onInlineElements127() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements127() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements127()
}

func (c *current) onInlineElements133() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements133() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements133()
}

func (c *current) onInlineElements123() (interface{}, error) {
	return types.NewLineBreak()
}

func (p *parser) callonInlineElements123() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements123()
}

func (c *current) onInlineElements36(elements, linebreak interface{}) (interface{}, error) {
	// absorbs heading and trailing spaces
	return types.NewInlineElements(append(elements.([]interface{}), linebreak))
}

func (p *parser) callonInlineElements36() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements36(stack["elements"], stack["linebreak"])
}

func (c *current) onInlineElement14() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement14()
}

func (c *current) onInlineElement20() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement20() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement20()
}

func (c *current) onInlineElement10() (interface{}, error) {
	return types.NewLineBreak()
}

func (p *parser) callonInlineElement10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement10()
}

func (c *current) onInlineElement38() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement38() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement38()
}

func (c *current) onInlineElement50() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement50() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement50()
}

func (c *current) onInlineElement41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement41()
}

func (c *current) onInlineElement35() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement35() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement35()
}

func (c *current) onInlineElement66() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement66() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement66()
}

func (c *current) onInlineElement73() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement73() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement73()
}

func (c *current) onInlineElement69() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement69() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement69()
}

func (c *current) onInlineElement75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement75()
}

func (c *current) onInlineElement63() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement63()
}

func (c *current) onInlineElement89() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement89() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement89()
}

func (c *current) onInlineElement96() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement96() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement96()
}

func (c *current) onInlineElement92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement92()
}

func (c *current) onInlineElement98() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement98() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement98()
}

func (c *current) onInlineElement86() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement86()
}

func (c *current) onInlineElement112() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement112() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement112()
}

func (c *current) onInlineElement119() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement119()
}

func (c *current) onInlineElement115() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement115()
}

func (c *current) onInlineElement121() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement121()
}

func (c *current) onInlineElement109() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement109() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement109()
}

func (c *current) onInlineElement141() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement141()
}

func (c *current) onInlineElement144() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement144()
}

func (c *current) onInlineElement147() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement147() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement147()
}

func (c *current) onInlineElement152() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement152()
}

func (c *current) onInlineElement159() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement159() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement159()
}

func (c *current) onInlineElement155() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement155() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement155()
}

func (c *current) onInlineElement161() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement161() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement161()
}

func (c *current) onInlineElement138(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement138(stack["key"])
}

func (c *current) onInlineElement176() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement176()
}

func (c *current) onInlineElement183() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement183() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement183()
}

func (c *current) onInlineElement179() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement179()
}

func (c *current) onInlineElement185() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement185() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement185()
}

func (c *current) onInlineElement172(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement172() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement172(stack["value"])
}

func (c *current) onInlineElement199() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement199() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement199()
}

func (c *current) onInlineElement135(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement135(stack["key"], stack["value"])
}

func (c *current) onInlineElement207() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement207() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement207()
}

func (c *current) onInlineElement210() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement210() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement210()
}

func (c *current) onInlineElement213() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement213() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement213()
}

func (c *current) onInlineElement218() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement218() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement218()
}

func (c *current) onInlineElement225() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement225() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement225()
}

func (c *current) onInlineElement221() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement221() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement221()
}

func (c *current) onInlineElement227() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement227() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement227()
}

func (c *current) onInlineElement204(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement204() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement204(stack["key"])
}

func (c *current) onInlineElement241() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement241() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement241()
}

func (c *current) onInlineElement201(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement201() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement201(stack["key"])
}

func (c *current) onInlineElement59(alt, width, height, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, height, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement59() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement59(stack["alt"], stack["width"], stack["height"], stack["otherAttrs"])
}

func (c *current) onInlineElement251() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement251() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement251()
}

func (c *current) onInlineElement258() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement258() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement258()
}

func (c *current) onInlineElement254() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement254() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement254()
}

func (c *current) onInlineElement260() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement260() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement260()
}

func (c *current) onInlineElement248() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement248() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement248()
}

func (c *current) onInlineElement274() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement274() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement274()
}

func (c *current) onInlineElement281() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement281() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement281()
}

func (c *current) onInlineElement277() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement277() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement277()
}

func (c *current) onInlineElement283() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement283() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement283()
}

func (c *current) onInlineElement271() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement271() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement271()
}

func (c *current) onInlineElement303() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement303() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement303()
}

func (c *current) onInlineElement306() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement306() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement306()
}

func (c *current) onInlineElement309() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement309() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement309()
}

func (c *current) onInlineElement314() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement314() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement314()
}

func (c *current) onInlineElement321() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement321() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement321()
}

func (c *current) onInlineElement317() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement317() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement317()
}

func (c *current) onInlineElement323() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement323() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement323()
}

func (c *current) onInlineElement300(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement300() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement300(stack["key"])
}

func (c *current) onInlineElement338() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement338() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement338()
}

func (c *current) onInlineElement345() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement345() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement345()
}

func (c *current) onInlineElement341() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement341() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement341()
}

func (c *current) onInlineElement347() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement347() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement347()
}

func (c *current) onInlineElement334(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement334() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement334(stack["value"])
}

func (c *current) onInlineElement361() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement361() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement361()
}

func (c *current) onInlineElement297(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement297() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement297(stack["key"], stack["value"])
}

func (c *current) onInlineElement369() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement369() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement369()
}

func (c *current) onInlineElement372() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement372() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement372()
}

func (c *current) onInlineElement375() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement375() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement375()
}

func (c *current) onInlineElement380() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement380() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement380()
}

func (c *current) onInlineElement387() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement387() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement387()
}

func (c *current) onInlineElement383() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement383() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement383()
}

func (c *current) onInlineElement389() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement389() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement389()
}

func (c *current) onInlineElement366(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement366() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement366(stack["key"])
}

func (c *current) onInlineElement403() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement403() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement403()
}

func (c *current) onInlineElement363(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement363() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement363(stack["key"])
}

func (c *current) onInlineElement244(alt, width, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement244() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement244(stack["alt"], stack["width"], stack["otherAttrs"])
}

func (c *current) onInlineElement413() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement413() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement413()
}

func (c *current) onInlineElement420() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement420() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement420()
}

func (c *current) onInlineElement416() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement416() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement416()
}

func (c *current) onInlineElement422() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement422() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement422()
}

func (c *current) onInlineElement410() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement410() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement410()
}

func (c *current) onInlineElement442() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement442() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement442()
}

func (c *current) onInlineElement445() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement445() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement445()
}

func (c *current) onInlineElement448() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement448() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement448()
}

func (c *current) onInlineElement453() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement453() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement453()
}

func (c *current) onInlineElement460() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement460() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement460()
}

func (c *current) onInlineElement456() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement456() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement456()
}

func (c *current) onInlineElement462() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement462() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement462()
}

func (c *current) onInlineElement439(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement439() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement439(stack["key"])
}

func (c *current) onInlineElement477() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement477() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement477()
}

func (c *current) onInlineElement484() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement484() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement484()
}

func (c *current) onInlineElement480() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement480() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement480()
}

func (c *current) onInlineElement486() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement486() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement486()
}

func (c *current) onInlineElement473(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement473() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement473(stack["value"])
}

func (c *current) onInlineElement500() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement500() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement500()
}

func (c *current) onInlineElement436(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement436() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement436(stack["key"], stack["value"])
}

func (c *current) onInlineElement508() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement508() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement508()
}

func (c *current) onInlineElement511() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement511() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement511()
}

func (c *current) onInlineElement514() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement514() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement514()
}

func (c *current) onInlineElement519() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement519() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement519()
}

func (c *current) onInlineElement526() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement526() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement526()
}

func (c *current) onInlineElement522() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement522() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement522()
}

func (c *current) onInlineElement528() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement528() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement528()
}

func (c *current) onInlineElement505(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement505() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement505(stack["key"])
}

func (c *current) onInlineElement542() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement542() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement542()
}

func (c *current) onInlineElement502(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement502() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement502(stack["key"])
}

func (c *current) onInlineElement406(alt, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, nil, nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement406() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement406(stack["alt"], stack["otherAttrs"])
}

func (c *current) onInlineElement557() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement557() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement557()
}

func (c *current) onInlineElement560() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement560() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement560()
}

func (c *current) onInlineElement563() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement563() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement563()
}

func (c *current) onInlineElement568() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement568() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement568()
}

func (c *current) onInlineElement575() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement575() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement575()
}

func (c *current) onInlineElement571() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement571() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement571()
}

func (c *current) onInlineElement577() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement577() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement577()
}

func (c *current) onInlineElement554(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement554() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement554(stack["key"])
}

func (c *current) onInlineElement592() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement592() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement592()
}

func (c *current) onInlineElement599() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement599() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement599()
}

func (c *current) onInlineElement595() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement595() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement595()
}

func (c *current) onInlineElement601() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement601() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement601()
}

func (c *current) onInlineElement588(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement588() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement588(stack["value"])
}

func (c *current) onInlineElement615() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement615() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement615()
}

func (c *current) onInlineElement551(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement551() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement551(stack["key"], stack["value"])
}

func (c *current) onInlineElement623() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement623() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement623()
}

func (c *current) onInlineElement626() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement626() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement626()
}

func (c *current) onInlineElement629() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement629() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement629()
}

func (c *current) onInlineElement634() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement634() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement634()
}

func (c *current) onInlineElement641() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement641() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement641()
}

func (c *current) onInlineElement637() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement637() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement637()
}

func (c *current) onInlineElement643() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement643() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement643()
}

func (c *current) onInlineElement620(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement620() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement620(stack["key"])
}

func (c *current) onInlineElement657() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement657() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement657()
}

func (c *current) onInlineElement617(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement617() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement617(stack["key"])
}

func (c *current) onInlineElement545(otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(nil, nil, nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement545() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement545(stack["otherAttrs"])
}

func (c *current) onInlineElement29(path, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineImage(path.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElement29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement29(stack["path"], stack["inlineAttributes"])
}

func (c *current) onInlineElement679() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement679() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement679()
}

func (c *current) onInlineElement691() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement691() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement691()
}

func (c *current) onInlineElement682() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement682() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement682()
}

func (c *current) onInlineElement676() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement676() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement676()
}

func (c *current) onInlineElement667() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement667() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement667()
}

func (c *current) onInlineElement707() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement707() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement707()
}

func (c *current) onInlineElement714() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement714() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement714()
}

func (c *current) onInlineElement710() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement710() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement710()
}

func (c *current) onInlineElement716() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement716() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement716()
}

func (c *current) onInlineElement704() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement704() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement704()
}

func (c *current) onInlineElement732() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement732() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement732()
}

func (c *current) onInlineElement735() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement735() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement735()
}

func (c *current) onInlineElement738() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement738() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement738()
}

func (c *current) onInlineElement743() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement743() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement743()
}

func (c *current) onInlineElement750() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement750() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement750()
}

func (c *current) onInlineElement746() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement746() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement746()
}

func (c *current) onInlineElement752() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement752() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement752()
}

func (c *current) onInlineElement729(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement729() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement729(stack["key"])
}

func (c *current) onInlineElement767() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement767() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement767()
}

func (c *current) onInlineElement774() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement774() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement774()
}

func (c *current) onInlineElement770() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement770() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement770()
}

func (c *current) onInlineElement776() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement776() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement776()
}

func (c *current) onInlineElement763(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement763() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement763(stack["value"])
}

func (c *current) onInlineElement790() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement790() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement790()
}

func (c *current) onInlineElement726(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement726() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement726(stack["key"], stack["value"])
}

func (c *current) onInlineElement798() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement798() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement798()
}

func (c *current) onInlineElement801() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement801() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement801()
}

func (c *current) onInlineElement804() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement804() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement804()
}

func (c *current) onInlineElement809() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement809() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement809()
}

func (c *current) onInlineElement816() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement816() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement816()
}

func (c *current) onInlineElement812() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement812() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement812()
}

func (c *current) onInlineElement818() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement818() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement818()
}

func (c *current) onInlineElement795(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement795() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement795(stack["key"])
}

func (c *current) onInlineElement832() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement832() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement832()
}

func (c *current) onInlineElement792(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement792() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement792(stack["key"])
}

func (c *current) onInlineElement700(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement700() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement700(stack["text"], stack["otherAttrs"])
}

func (c *current) onInlineElement847() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement847() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement847()
}

func (c *current) onInlineElement850() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement850() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement850()
}

func (c *current) onInlineElement853() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement853() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement853()
}

func (c *current) onInlineElement858() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement858() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement858()
}

func (c *current) onInlineElement865() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement865() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement865()
}

func (c *current) onInlineElement861() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement861() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement861()
}

func (c *current) onInlineElement867() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement867() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement867()
}

func (c *current) onInlineElement844(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement844() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement844(stack["key"])
}

func (c *current) onInlineElement882() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement882() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement882()
}

func (c *current) onInlineElement889() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement889() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement889()
}

func (c *current) onInlineElement885() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement885() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement885()
}

func (c *current) onInlineElement891() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement891() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement891()
}

func (c *current) onInlineElement878(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement878() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement878(stack["value"])
}

func (c *current) onInlineElement905() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement905() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement905()
}

func (c *current) onInlineElement841(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement841() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement841(stack["key"], stack["value"])
}

func (c *current) onInlineElement913() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement913() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement913()
}

func (c *current) onInlineElement916() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement916() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement916()
}

func (c *current) onInlineElement919() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement919() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement919()
}

func (c *current) onInlineElement924() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement924() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement924()
}

func (c *current) onInlineElement931() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement931() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement931()
}

func (c *current) onInlineElement927() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement927() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement927()
}

func (c *current) onInlineElement933() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement933() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement933()
}

func (c *current) onInlineElement910(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement910() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement910(stack["key"])
}

func (c *current) onInlineElement947() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement947() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement947()
}

func (c *current) onInlineElement907(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement907() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement907(stack["key"])
}

func (c *current) onInlineElement835(otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement835() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement835(stack["otherAttrs"])
}

func (c *current) onInlineElement663(url, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElement663() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement663(stack["url"], stack["inlineAttributes"])
}

func (c *current) onInlineElement964() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement964() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement964()
}

func (c *current) onInlineElement976() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement976() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement976()
}

func (c *current) onInlineElement967() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement967() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement967()
}

func (c *current) onInlineElement961() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement961() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement961()
}

func (c *current) onInlineElement953() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement953() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement953()
}

func (c *current) onInlineElement992() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement992() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement992()
}

func (c *current) onInlineElement999() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement999() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement999()
}

func (c *current) onInlineElement995() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement995() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement995()
}

func (c *current) onInlineElement1001() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1001() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1001()
}

func (c *current) onInlineElement989() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement989() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement989()
}

func (c *current) onInlineElement1017() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1017() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1017()
}

func (c *current) onInlineElement1020() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1020() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1020()
}

func (c *current) onInlineElement1023() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1023() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1023()
}

func (c *current) onInlineElement1028() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1028() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1028()
}

func (c *current) onInlineElement1035() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1035() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1035()
}

func (c *current) onInlineElement1031() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1031() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1031()
}

func (c *current) onInlineElement1037() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1037() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1037()
}

func (c *current) onInlineElement1014(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1014() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1014(stack["key"])
}

func (c *current) onInlineElement1052() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1052() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1052()
}

func (c *current) onInlineElement1059() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1059() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1059()
}

func (c *current) onInlineElement1055() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1055() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1055()
}

func (c *current) onInlineElement1061() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1061() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1061()
}

func (c *current) onInlineElement1048(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1048() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1048(stack["value"])
}

func (c *current) onInlineElement1075() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1075() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1075()
}

func (c *current) onInlineElement1011(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement1011() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1011(stack["key"], stack["value"])
}

func (c *current) onInlineElement1083() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1083() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1083()
}

func (c *current) onInlineElement1086() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1086() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1086()
}

func (c *current) onInlineElement1089() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1089() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1089()
}

func (c *current) onInlineElement1094() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1094() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1094()
}

func (c *current) onInlineElement1101() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1101() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1101()
}

func (c *current) onInlineElement1097() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1097() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1097()
}

func (c *current) onInlineElement1103() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1103() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1103()
}

func (c *current) onInlineElement1080(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1080() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1080(stack["key"])
}

func (c *current) onInlineElement1117() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1117()
}

func (c *current) onInlineElement1077(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement1077() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1077(stack["key"])
}

func (c *current) onInlineElement985(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement985() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement985(stack["text"], stack["otherAttrs"])
}

func (c *current) onInlineElement1132() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1132() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1132()
}

func (c *current) onInlineElement1135() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1135()
}

func (c *current) onInlineElement1138() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1138()
}

func (c *current) onInlineElement1143() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1143() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1143()
}

func (c *current) onInlineElement1150() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1150() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1150()
}

func (c *current) onInlineElement1146() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1146() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1146()
}

func (c *current) onInlineElement1152() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1152()
}

func (c *current) onInlineElement1129(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1129(stack["key"])
}

func (c *current) onInlineElement1167() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1167()
}

func (c *current) onInlineElement1174() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1174() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1174()
}

func (c *current) onInlineElement1170() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1170() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1170()
}

func (c *current) onInlineElement1176() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1176()
}

func (c *current) onInlineElement1163(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1163() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1163(stack["value"])
}

func (c *current) onInlineElement1190() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1190() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1190()
}

func (c *current) onInlineElement1126(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement1126() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1126(stack["key"], stack["value"])
}

func (c *current) onInlineElement1198() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1198()
}

func (c *current) onInlineElement1201() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1201() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1201()
}

func (c *current) onInlineElement1204() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1204() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1204()
}

func (c *current) onInlineElement1209() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1209() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1209()
}

func (c *current) onInlineElement1216() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1216() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1216()
}

func (c *current) onInlineElement1212() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1212() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1212()
}

func (c *current) onInlineElement1218() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1218() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1218()
}

func (c *current) onInlineElement1195(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1195() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1195(stack["key"])
}

func (c *current) onInlineElement1232() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1232() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1232()
}

func (c *current) onInlineElement1192(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement1192() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1192(stack["key"])
}

func (c *current) onInlineElement1120(otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement1120() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1120(stack["otherAttrs"])
}

func (c *current) onInlineElement950(url, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElement950() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement950(stack["url"], stack["inlineAttributes"])
}

func (c *current) onInlineElement1248() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1248() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1248()
}

func (c *current) onInlineElement1260() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1260() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1260()
}

func (c *current) onInlineElement1251() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1251() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1251()
}

func (c *current) onInlineElement1245() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1245() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1245()
}

func (c *current) onInlineElement1237() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1237() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1237()
}

func (c *current) onInlineElement1235(url interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), nil)
}

func (p *parser) callonInlineElement1235() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1235(stack["url"])
}

func (c *current) onInlineElement660(link interface{}) (interface{}, error) {
	return link, nil
}

func (p *parser) callonInlineElement660() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement660(stack["link"])
}

func (c *current) onInlineElement1269() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1269() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1269()
}

func (c *current) onInlineElement1275() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1275() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1275()
}

func (c *current) onInlineElement1285() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1285() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1285()
}

func (c *current) onInlineElement1297() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1297() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1297()
}

func (c *current) onInlineElement1288() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1288() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1288()
}

func (c *current) onInlineElement1282() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1282() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1282()
}

func (c *current) onInlineElement1313() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1313() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1313()
}

func (c *current) onInlineElement1320() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1320() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1320()
}

func (c *current) onInlineElement1327() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1327() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1327()
}

func (c *current) onInlineElement1323() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1323() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1323()
}

func (c *current) onInlineElement1329() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1329() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1329()
}

func (c *current) onInlineElement1317() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1317() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1317()
}

func (c *current) onInlineElement1278(id, label interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string), label.(string))
}

func (p *parser) callonInlineElement1278() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1278(stack["id"], stack["label"])
}

func (c *current) onInlineElement1342() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1342() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1342()
}

func (c *current) onInlineElement1354() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1354() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1354()
}

func (c *current) onInlineElement1345() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1345() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1345()
}

func (c *current) onInlineElement1339() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1339() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1339()
}

func (c *current) onInlineElement1335(id interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string), nil)
}

func (p *parser) callonInlineElement1335() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1335(stack["id"])
}

func (c *current) onInlineElement1372() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1372() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1372()
}

func (c *current) onInlineElement1368(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeSubstitution(name.(string))
}

func (p *parser) callonInlineElement1368() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1368(stack["name"])
}

func (c *current) onInlineElement1385() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1385() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1385()
}

func (c *current) onInlineElement1397() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1397() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1397()
}

func (c *current) onInlineElement1388() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1388() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1388()
}

func (c *current) onInlineElement1382() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1382() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1382()
}

func (c *current) onInlineElement1414() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1414() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1414()
}

func (c *current) onInlineElement1378(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonInlineElement1378() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1378(stack["id"])
}

func (c *current) onInlineElement1421() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1421() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1421()
}

func (c *current) onInlineElement1427() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1427() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1427()
}

func (c *current) onInlineElement1417() (interface{}, error) {
	return types.NewLineBreak()
}

func (p *parser) callonInlineElement1417() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1417()
}

func (c *current) onInlineElement1436() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1436() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1436()
}

func (c *current) onInlineElement1449() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1449() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1449()
}

func (c *current) onInlineElement1458() (interface{}, error) {
	// rule used withn `words` to detect superscript or subscript portions, eg in math formulae.
	return string(c.text), nil
}

func (p *parser) callonInlineElement1458() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1458()
}

func (c *current) onInlineElement1440() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1440() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1440()
}

func (c *current) onInlineElement1434() (interface{}, error) {
	// word cannot contain parenthesis. Dots and ellipsis are treated as independent words (but will be combined afterwards)
	return string(c.text), nil
}

func (p *parser) callonInlineElement1434() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1434()
}

func (c *current) onInlineElement1(element interface{}) (interface{}, error) {
	return element, nil
}

func (p *parser) callonInlineElement1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1(stack["element"])
}

func (c *current) onInlineElementsWithoutSubtitution12() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution12()
}

func (c *current) onInlineElementsWithoutSubtitution4() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonInlineElementsWithoutSubtitution4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution4()
}

func (c *current) onInlineElementsWithoutSubtitution27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution27()
}

func (c *current) onInlineElementsWithoutSubtitution39() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution39()
}

func (c *current) onInlineElementsWithoutSubtitution51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution51()
}

func (c *current) onInlineElementsWithoutSubtitution64() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution64() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution64()
}

func (c *current) onInlineElementsWithoutSubtitution76() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution76() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution76()
}

func (c *current) onInlineElementsWithoutSubtitution92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution92()
}

func (c *current) onInlineElementsWithoutSubtitution98() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution98() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution98()
}

func (c *current) onInlineElementsWithoutSubtitution88() (interface{}, error) {
	return types.NewLineBreak()
}

func (p *parser) callonInlineElementsWithoutSubtitution88() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution88()
}

func (c *current) onInlineElementsWithoutSubtitution1(elements, linebreak interface{}) (interface{}, error) {
	// absorbs heading and trailing spaces
	return types.NewInlineElements(append(elements.([]interface{}), linebreak))
}

func (p *parser) callonInlineElementsWithoutSubtitution1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution1(stack["elements"], stack["linebreak"])
}

func (c *current) onInlineElementWithoutSubtitution14() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution14()
}

func (c *current) onInlineElementWithoutSubtitution20() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution20() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution20()
}

func (c *current) onInlineElementWithoutSubtitution10() (interface{}, error) {
	return types.NewLineBreak()
}

func (p *parser) callonInlineElementWithoutSubtitution10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution10()
}

func (c *current) onInlineElementWithoutSubtitution38() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution38() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution38()
}

func (c *current) onInlineElementWithoutSubtitution50() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution50() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution50()
}

func (c *current) onInlineElementWithoutSubtitution41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution41()
}

func (c *current) onInlineElementWithoutSubtitution35() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution35() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution35()
}

func (c *current) onInlineElementWithoutSubtitution66() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution66() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution66()
}

func (c *current) onInlineElementWithoutSubtitution73() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution73() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution73()
}

func (c *current) onInlineElementWithoutSubtitution69() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution69() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution69()
}

func (c *current) onInlineElementWithoutSubtitution75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution75()
}

func (c *current) onInlineElementWithoutSubtitution63() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution63()
}

func (c *current) onInlineElementWithoutSubtitution89() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution89() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution89()
}

func (c *current) onInlineElementWithoutSubtitution96() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution96() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution96()
}

func (c *current) onInlineElementWithoutSubtitution92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution92()
}

func (c *current) onInlineElementWithoutSubtitution98() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution98() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution98()
}

func (c *current) onInlineElementWithoutSubtitution86() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution86()
}

func (c *current) onInlineElementWithoutSubtitution112() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution112() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution112()
}

func (c *current) onInlineElementWithoutSubtitution119() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution119()
}

func (c *current) onInlineElementWithoutSubtitution115() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution115()
}

func (c *current) onInlineElementWithoutSubtitution121() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution121()
}

func (c *current) onInlineElementWithoutSubtitution109() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution109() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution109()
}

func (c *current) onInlineElementWithoutSubtitution141() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution141()
}

func (c *current) onInlineElementWithoutSubtitution144() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution144()
}

func (c *current) onInlineElementWithoutSubtitution147() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution147() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution147()
}

func (c *current) onInlineElementWithoutSubtitution152() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution152()
}

func (c *current) onInlineElementWithoutSubtitution159() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution159() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution159()
}

func (c *current) onInlineElementWithoutSubtitution155() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution155() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution155()
}

func (c *current) onInlineElementWithoutSubtitution161() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution161() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution161()
}

func (c *current) onInlineElementWithoutSubtitution138(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution138(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution176() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution176()
}

func (c *current) onInlineElementWithoutSubtitution183() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution183() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution183()
}

func (c *current) onInlineElementWithoutSubtitution179() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution179()
}

func (c *current) onInlineElementWithoutSubtitution185() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution185() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution185()
}

func (c *current) onInlineElementWithoutSubtitution172(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution172() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution172(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution199() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution199() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution199()
}

func (c *current) onInlineElementWithoutSubtitution135(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution135(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution207() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution207() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution207()
}

func (c *current) onInlineElementWithoutSubtitution210() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution210() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution210()
}

func (c *current) onInlineElementWithoutSubtitution213() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution213() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution213()
}

func (c *current) onInlineElementWithoutSubtitution218() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution218() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution218()
}

func (c *current) onInlineElementWithoutSubtitution225() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution225() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution225()
}

func (c *current) onInlineElementWithoutSubtitution221() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution221() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution221()
}

func (c *current) onInlineElementWithoutSubtitution227() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution227() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution227()
}

func (c *current) onInlineElementWithoutSubtitution204(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution204() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution204(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution241() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution241() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution241()
}

func (c *current) onInlineElementWithoutSubtitution201(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution201() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution201(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution59(alt, width, height, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, height, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElementWithoutSubtitution59() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution59(stack["alt"], stack["width"], stack["height"], stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution251() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution251() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution251()
}

func (c *current) onInlineElementWithoutSubtitution258() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution258() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution258()
}

func (c *current) onInlineElementWithoutSubtitution254() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution254() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution254()
}

func (c *current) onInlineElementWithoutSubtitution260() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution260() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution260()
}

func (c *current) onInlineElementWithoutSubtitution248() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution248() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution248()
}

func (c *current) onInlineElementWithoutSubtitution274() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution274() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution274()
}

func (c *current) onInlineElementWithoutSubtitution281() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution281() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution281()
}

func (c *current) onInlineElementWithoutSubtitution277() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution277() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution277()
}

func (c *current) onInlineElementWithoutSubtitution283() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution283() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution283()
}

func (c *current) onInlineElementWithoutSubtitution271() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution271() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution271()
}

func (c *current) onInlineElementWithoutSubtitution303() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution303() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution303()
}

func (c *current) onInlineElementWithoutSubtitution306() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution306() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution306()
}

func (c *current) onInlineElementWithoutSubtitution309() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution309() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution309()
}

func (c *current) onInlineElementWithoutSubtitution314() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution314() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution314()
}

func (c *current) onInlineElementWithoutSubtitution321() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution321() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution321()
}

func (c *current) onInlineElementWithoutSubtitution317() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution317() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution317()
}

func (c *current) onInlineElementWithoutSubtitution323() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution323() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution323()
}

func (c *current) onInlineElementWithoutSubtitution300(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution300() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution300(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution338() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution338() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution338()
}

func (c *current) onInlineElementWithoutSubtitution345() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution345() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution345()
}

func (c *current) onInlineElementWithoutSubtitution341() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution341() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution341()
}

func (c *current) onInlineElementWithoutSubtitution347() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution347() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution347()
}

func (c *current) onInlineElementWithoutSubtitution334(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution334() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution334(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution361() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution361() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution361()
}

func (c *current) onInlineElementWithoutSubtitution297(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution297() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution297(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution369() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution369() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution369()
}

func (c *current) onInlineElementWithoutSubtitution372() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution372() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution372()
}

func (c *current) onInlineElementWithoutSubtitution375() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution375() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution375()
}

func (c *current) onInlineElementWithoutSubtitution380() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution380() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution380()
}

func (c *current) onInlineElementWithoutSubtitution387() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution387() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution387()
}

func (c *current) onInlineElementWithoutSubtitution383() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution383() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution383()
}

func (c *current) onInlineElementWithoutSubtitution389() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution389() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution389()
}

func (c *current) onInlineElementWithoutSubtitution366(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution366() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution366(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution403() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution403() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution403()
}

func (c *current) onInlineElementWithoutSubtitution363(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution363() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution363(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution244(alt, width, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElementWithoutSubtitution244() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution244(stack["alt"], stack["width"], stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution413() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution413() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution413()
}

func (c *current) onInlineElementWithoutSubtitution420() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution420() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution420()
}

func (c *current) onInlineElementWithoutSubtitution416() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution416() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution416()
}

func (c *current) onInlineElementWithoutSubtitution422() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution422() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution422()
}

func (c *current) onInlineElementWithoutSubtitution410() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution410() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution410()
}

func (c *current) onInlineElementWithoutSubtitution442() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution442() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution442()
}

func (c *current) onInlineElementWithoutSubtitution445() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution445() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution445()
}

func (c *current) onInlineElementWithoutSubtitution448() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution448() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution448()
}

func (c *current) onInlineElementWithoutSubtitution453() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution453() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution453()
}

func (c *current) onInlineElementWithoutSubtitution460() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution460() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution460()
}

func (c *current) onInlineElementWithoutSubtitution456() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution456() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution456()
}

func (c *current) onInlineElementWithoutSubtitution462() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution462() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution462()
}

func (c *current) onInlineElementWithoutSubtitution439(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution439() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution439(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution477() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution477() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution477()
}

func (c *current) onInlineElementWithoutSubtitution484() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution484() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution484()
}

func (c *current) onInlineElementWithoutSubtitution480() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution480() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution480()
}

func (c *current) onInlineElementWithoutSubtitution486() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution486() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution486()
}

func (c *current) onInlineElementWithoutSubtitution473(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution473() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution473(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution500() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution500() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution500()
}

func (c *current) onInlineElementWithoutSubtitution436(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution436() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution436(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution508() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution508() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution508()
}

func (c *current) onInlineElementWithoutSubtitution511() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution511() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution511()
}

func (c *current) onInlineElementWithoutSubtitution514() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution514() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution514()
}

func (c *current) onInlineElementWithoutSubtitution519() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution519() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution519()
}

func (c *current) onInlineElementWithoutSubtitution526() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution526() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution526()
}

func (c *current) onInlineElementWithoutSubtitution522() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution522() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution522()
}

func (c *current) onInlineElementWithoutSubtitution528() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution528() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution528()
}

func (c *current) onInlineElementWithoutSubtitution505(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution505() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution505(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution542() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution542() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution542()
}

func (c *current) onInlineElementWithoutSubtitution502(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution502() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution502(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution406(alt, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, nil, nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElementWithoutSubtitution406() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution406(stack["alt"], stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution557() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution557() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution557()
}

func (c *current) onInlineElementWithoutSubtitution560() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution560() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution560()
}

func (c *current) onInlineElementWithoutSubtitution563() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution563() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution563()
}

func (c *current) onInlineElementWithoutSubtitution568() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution568() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution568()
}

func (c *current) onInlineElementWithoutSubtitution575() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution575() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution575()
}

func (c *current) onInlineElementWithoutSubtitution571() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution571() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution571()
}

func (c *current) onInlineElementWithoutSubtitution577() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution577() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution577()
}

func (c *current) onInlineElementWithoutSubtitution554(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution554() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution554(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution592() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution592() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution592()
}

func (c *current) onInlineElementWithoutSubtitution599() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution599() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution599()
}

func (c *current) onInlineElementWithoutSubtitution595() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution595() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution595()
}

func (c *current) onInlineElementWithoutSubtitution601() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution601() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution601()
}

func (c *current) onInlineElementWithoutSubtitution588(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution588() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution588(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution615() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution615() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution615()
}

func (c *current) onInlineElementWithoutSubtitution551(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution551() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution551(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution623() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution623() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution623()
}

func (c *current) onInlineElementWithoutSubtitution626() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution626() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution626()
}

func (c *current) onInlineElementWithoutSubtitution629() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution629() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution629()
}

func (c *current) onInlineElementWithoutSubtitution634() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution634() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution634()
}

func (c *current) onInlineElementWithoutSubtitution641() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution641() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution641()
}

func (c *current) onInlineElementWithoutSubtitution637() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution637() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution637()
}

func (c *current) onInlineElementWithoutSubtitution643() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution643() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution643()
}

func (c *current) onInlineElementWithoutSubtitution620(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution620() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution620(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution657() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution657() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution657()
}

func (c *current) onInlineElementWithoutSubtitution617(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution617() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution617(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution545(otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(nil, nil, nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElementWithoutSubtitution545() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution545(stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution29(path, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineImage(path.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElementWithoutSubtitution29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution29(stack["path"], stack["inlineAttributes"])
}

func (c *current) onInlineElementWithoutSubtitution679() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution679() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution679()
}

func (c *current) onInlineElementWithoutSubtitution691() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution691() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution691()
}

func (c *current) onInlineElementWithoutSubtitution682() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution682() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution682()
}

func (c *current) onInlineElementWithoutSubtitution676() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution676() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution676()
}

func (c *current) onInlineElementWithoutSubtitution667() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution667() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution667()
}

func (c *current) onInlineElementWithoutSubtitution707() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution707() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution707()
}

func (c *current) onInlineElementWithoutSubtitution714() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution714() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution714()
}

func (c *current) onInlineElementWithoutSubtitution710() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution710() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution710()
}

func (c *current) onInlineElementWithoutSubtitution716() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution716() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution716()
}

func (c *current) onInlineElementWithoutSubtitution704() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution704() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution704()
}

func (c *current) onInlineElementWithoutSubtitution732() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution732() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution732()
}

func (c *current) onInlineElementWithoutSubtitution735() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution735() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution735()
}

func (c *current) onInlineElementWithoutSubtitution738() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution738() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution738()
}

func (c *current) onInlineElementWithoutSubtitution743() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution743() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution743()
}

func (c *current) onInlineElementWithoutSubtitution750() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution750() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution750()
}

func (c *current) onInlineElementWithoutSubtitution746() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution746() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution746()
}

func (c *current) onInlineElementWithoutSubtitution752() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution752() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution752()
}

func (c *current) onInlineElementWithoutSubtitution729(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution729() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution729(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution767() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution767() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution767()
}

func (c *current) onInlineElementWithoutSubtitution774() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution774() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution774()
}

func (c *current) onInlineElementWithoutSubtitution770() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution770() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution770()
}

func (c *current) onInlineElementWithoutSubtitution776() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution776() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution776()
}

func (c *current) onInlineElementWithoutSubtitution763(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution763() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution763(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution790() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution790() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution790()
}

func (c *current) onInlineElementWithoutSubtitution726(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution726() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution726(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution798() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution798() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution798()
}

func (c *current) onInlineElementWithoutSubtitution801() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution801() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution801()
}

func (c *current) onInlineElementWithoutSubtitution804() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution804() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution804()
}

func (c *current) onInlineElementWithoutSubtitution809() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution809() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution809()
}

func (c *current) onInlineElementWithoutSubtitution816() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution816() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution816()
}

func (c *current) onInlineElementWithoutSubtitution812() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution812() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution812()
}

func (c *current) onInlineElementWithoutSubtitution818() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution818() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution818()
}

func (c *current) onInlineElementWithoutSubtitution795(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution795() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution795(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution832() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution832() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution832()
}

func (c *current) onInlineElementWithoutSubtitution792(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution792() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution792(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution700(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElementWithoutSubtitution700() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution700(stack["text"], stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution847() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution847() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution847()
}

func (c *current) onInlineElementWithoutSubtitution850() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution850() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution850()
}

func (c *current) onInlineElementWithoutSubtitution853() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution853() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution853()
}

func (c *current) onInlineElementWithoutSubtitution858() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution858() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution858()
}

func (c *current) onInlineElementWithoutSubtitution865() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution865() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution865()
}

func (c *current) onInlineElementWithoutSubtitution861() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution861() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution861()
}

func (c *current) onInlineElementWithoutSubtitution867() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution867() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution867()
}

func (c *current) onInlineElementWithoutSubtitution844(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution844() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution844(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution882() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution882() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution882()
}

func (c *current) onInlineElementWithoutSubtitution889() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution889() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution889()
}

func (c *current) onInlineElementWithoutSubtitution885() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution885() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution885()
}

func (c *current) onInlineElementWithoutSubtitution891() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution891() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution891()
}

func (c *current) onInlineElementWithoutSubtitution878(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution878() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution878(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution905() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution905() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution905()
}

func (c *current) onInlineElementWithoutSubtitution841(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution841() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution841(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution913() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution913() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution913()
}

func (c *current) onInlineElementWithoutSubtitution916() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution916() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution916()
}

func (c *current) onInlineElementWithoutSubtitution919() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution919() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution919()
}

func (c *current) onInlineElementWithoutSubtitution924() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution924() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution924()
}

func (c *current) onInlineElementWithoutSubtitution931() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution931() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution931()
}

func (c *current) onInlineElementWithoutSubtitution927() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution927() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution927()
}

func (c *current) onInlineElementWithoutSubtitution933() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution933() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution933()
}

func (c *current) onInlineElementWithoutSubtitution910(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution910() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution910(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution947() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution947() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution947()
}

func (c *current) onInlineElementWithoutSubtitution907(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution907() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution907(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution835(otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElementWithoutSubtitution835() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution835(stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution663(url, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElementWithoutSubtitution663() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution663(stack["url"], stack["inlineAttributes"])
}

func (c *current) onInlineElementWithoutSubtitution964() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution964() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution964()
}

func (c *current) onInlineElementWithoutSubtitution976() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution976() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution976()
}

func (c *current) onInlineElementWithoutSubtitution967() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution967() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution967()
}

func (c *current) onInlineElementWithoutSubtitution961() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution961() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution961()
}

func (c *current) onInlineElementWithoutSubtitution953() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution953() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution953()
}

func (c *current) onInlineElementWithoutSubtitution992() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution992() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution992()
}

func (c *current) onInlineElementWithoutSubtitution999() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution999() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution999()
}

func (c *current) onInlineElementWithoutSubtitution995() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution995() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution995()
}

func (c *current) onInlineElementWithoutSubtitution1001() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1001() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1001()
}

func (c *current) onInlineElementWithoutSubtitution989() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution989() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution989()
}

func (c *current) onInlineElementWithoutSubtitution1017() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1017() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1017()
}

func (c *current) onInlineElementWithoutSubtitution1020() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1020() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1020()
}

func (c *current) onInlineElementWithoutSubtitution1023() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1023() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1023()
}

func (c *current) onInlineElementWithoutSubtitution1028() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1028() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1028()
}

func (c *current) onInlineElementWithoutSubtitution1035() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1035() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1035()
}

func (c *current) onInlineElementWithoutSubtitution1031() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1031() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1031()
}

func (c *current) onInlineElementWithoutSubtitution1037() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1037() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1037()
}

func (c *current) onInlineElementWithoutSubtitution1014(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1014() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1014(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution1052() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1052() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1052()
}

func (c *current) onInlineElementWithoutSubtitution1059() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1059() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1059()
}

func (c *current) onInlineElementWithoutSubtitution1055() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1055() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1055()
}

func (c *current) onInlineElementWithoutSubtitution1061() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1061() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1061()
}

func (c *current) onInlineElementWithoutSubtitution1048(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1048() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1048(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution1075() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1075() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1075()
}

func (c *current) onInlineElementWithoutSubtitution1011(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution1011() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1011(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution1083() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1083() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1083()
}

func (c *current) onInlineElementWithoutSubtitution1086() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1086() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1086()
}

func (c *current) onInlineElementWithoutSubtitution1089() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1089() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1089()
}

func (c *current) onInlineElementWithoutSubtitution1094() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1094() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1094()
}

func (c *current) onInlineElementWithoutSubtitution1101() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1101() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1101()
}

func (c *current) onInlineElementWithoutSubtitution1097() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1097() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1097()
}

func (c *current) onInlineElementWithoutSubtitution1103() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1103() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1103()
}

func (c *current) onInlineElementWithoutSubtitution1080(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1080() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1080(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution1117() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1117()
}

func (c *current) onInlineElementWithoutSubtitution1077(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution1077() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1077(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution985(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElementWithoutSubtitution985() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution985(stack["text"], stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution1132() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1132() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1132()
}

func (c *current) onInlineElementWithoutSubtitution1135() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1135()
}

func (c *current) onInlineElementWithoutSubtitution1138() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1138()
}

func (c *current) onInlineElementWithoutSubtitution1143() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1143() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1143()
}

func (c *current) onInlineElementWithoutSubtitution1150() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1150() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1150()
}

func (c *current) onInlineElementWithoutSubtitution1146() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1146() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1146()
}

func (c *current) onInlineElementWithoutSubtitution1152() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1152()
}

func (c *current) onInlineElementWithoutSubtitution1129(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1129(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution1167() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1167()
}

func (c *current) onInlineElementWithoutSubtitution1174() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1174() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1174()
}

func (c *current) onInlineElementWithoutSubtitution1170() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1170() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1170()
}

func (c *current) onInlineElementWithoutSubtitution1176() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1176()
}

func (c *current) onInlineElementWithoutSubtitution1163(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1163() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1163(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution1190() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1190() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1190()
}

func (c *current) onInlineElementWithoutSubtitution1126(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution1126() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1126(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution1198() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1198()
}

func (c *current) onInlineElementWithoutSubtitution1201() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1201() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1201()
}

func (c *current) onInlineElementWithoutSubtitution1204() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1204() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1204()
}

func (c *current) onInlineElementWithoutSubtitution1209() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1209() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1209()
}

func (c *current) onInlineElementWithoutSubtitution1216() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1216() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1216()
}

func (c *current) onInlineElementWithoutSubtitution1212() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1212() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1212()
}

func (c *current) onInlineElementWithoutSubtitution1218() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1218() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1218()
}

func (c *current) onInlineElementWithoutSubtitution1195(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1195() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1195(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution1232() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1232() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1232()
}

func (c *current) onInlineElementWithoutSubtitution1192(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution1192() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1192(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution1120(otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElementWithoutSubtitution1120() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1120(stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution950(url, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElementWithoutSubtitution950() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution950(stack["url"], stack["inlineAttributes"])
}

func (c *current) onInlineElementWithoutSubtitution1248() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1248() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1248()
}

func (c *current) onInlineElementWithoutSubtitution1260() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1260() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1260()
}

func (c *current) onInlineElementWithoutSubtitution1251() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1251() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1251()
}

func (c *current) onInlineElementWithoutSubtitution1245() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1245() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1245()
}

func (c *current) onInlineElementWithoutSubtitution1237() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1237() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1237()
}

func (c *current) onInlineElementWithoutSubtitution1235(url interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution1235() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1235(stack["url"])
}

func (c *current) onInlineElementWithoutSubtitution660(link interface{}) (interface{}, error) {
	return link, nil
}

func (p *parser) callonInlineElementWithoutSubtitution660() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution660(stack["link"])
}

func (c *current) onInlineElementWithoutSubtitution1268() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1268() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1268()
}

func (c *current) onInlineElementWithoutSubtitution1274() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1274() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1274()
}

func (c *current) onInlineElementWithoutSubtitution1284() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1284() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1284()
}

func (c *current) onInlineElementWithoutSubtitution1296() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1296() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1296()
}

func (c *current) onInlineElementWithoutSubtitution1287() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1287() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1287()
}

func (c *current) onInlineElementWithoutSubtitution1281() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1281() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1281()
}

func (c *current) onInlineElementWithoutSubtitution1312() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1312() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1312()
}

func (c *current) onInlineElementWithoutSubtitution1319() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1319() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1319()
}

func (c *current) onInlineElementWithoutSubtitution1326() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1326() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1326()
}

func (c *current) onInlineElementWithoutSubtitution1322() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1322() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1322()
}

func (c *current) onInlineElementWithoutSubtitution1328() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1328() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1328()
}

func (c *current) onInlineElementWithoutSubtitution1316() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1316() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1316()
}

func (c *current) onInlineElementWithoutSubtitution1277(id, label interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string), label.(string))
}

func (p *parser) callonInlineElementWithoutSubtitution1277() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1277(stack["id"], stack["label"])
}

func (c *current) onInlineElementWithoutSubtitution1341() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1341() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1341()
}

func (c *current) onInlineElementWithoutSubtitution1353() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1353() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1353()
}

func (c *current) onInlineElementWithoutSubtitution1344() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1344() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1344()
}

func (c *current) onInlineElementWithoutSubtitution1338() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1338() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1338()
}

func (c *current) onInlineElementWithoutSubtitution1334(id interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution1334() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1334(stack["id"])
}

func (c *current) onInlineElementWithoutSubtitution1374() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1374() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1374()
}

func (c *current) onInlineElementWithoutSubtitution1386() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1386() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1386()
}

func (c *current) onInlineElementWithoutSubtitution1377() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1377() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1377()
}

func (c *current) onInlineElementWithoutSubtitution1371() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1371() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1371()
}

func (c *current) onInlineElementWithoutSubtitution1403() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1403() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1403()
}

func (c *current) onInlineElementWithoutSubtitution1367(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonInlineElementWithoutSubtitution1367() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1367(stack["id"])
}

func (c *current) onInlineElementWithoutSubtitution1408() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1408() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1408()
}

func (c *current) onInlineElementWithoutSubtitution1421() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1421() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1421()
}

func (c *current) onInlineElementWithoutSubtitution1430() (interface{}, error) {
	// rule used withn `words` to detect superscript or subscript portions, eg in math formulae.
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1430() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1430()
}

func (c *current) onInlineElementWithoutSubtitution1412() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1412() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1412()
}

func (c *current) onInlineElementWithoutSubtitution1406() (interface{}, error) {
	// word cannot contain parenthesis. Dots and ellipsis are treated as independent words (but will be combined afterwards)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1406() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1406()
}

func (c *current) onInlineElementWithoutSubtitution1(element interface{}) (interface{}, error) {
	return element, nil
}

func (p *parser) callonInlineElementWithoutSubtitution1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1(stack["element"])
}

func (c *current) onQuotedText13() (interface{}, error) {
	// rule used withn `words` to detect superscript or subscript portions, eg in math formulae.
	return string(c.text), nil
}

func (p *parser) callonQuotedText13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedText13()
}

func (c *current) onBoldText2(content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewQuotedText(types.Bold, content.([]interface{}))

}

func (p *parser) callonBoldText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBoldText2(stack["content"])
}

func (c *current) onBoldText10(content interface{}) (interface{}, error) {
	// unbalanced `**` vs `*` punctuation
	result := append([]interface{}{"*"}, content.([]interface{}))
	return types.NewQuotedText(types.Bold, result)

}

func (p *parser) callonBoldText10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBoldText10(stack["content"])
}

func (c *current) onBoldText18(content interface{}) (interface{}, error) {
	// single punctuation cannot be followed by a character (needs '**' to emphazise a portion of a word)
	return types.NewQuotedText(types.Bold, content.([]interface{}))
}

func (p *parser) callonBoldText18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBoldText18(stack["content"])
}

func (c *current) onEscapedBoldText5() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedBoldText5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText5()
}

func (c *current) onEscapedBoldText2(backslashes, content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewEscapedQuotedText(backslashes.(string), "**", content.([]interface{}))

}

func (p *parser) callonEscapedBoldText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText2(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedBoldText17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedBoldText17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText17()
}

func (c *current) onEscapedBoldText14(backslashes, content interface{}) (interface{}, error) {
	// unbalanced `**` vs `*` punctuation
	result := append([]interface{}{"*"}, content.([]interface{}))
	return types.NewEscapedQuotedText(backslashes.(string), "*", result)

}

func (p *parser) callonEscapedBoldText14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText14(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedBoldText29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedBoldText29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText29()
}

func (c *current) onEscapedBoldText26(backslashes, content interface{}) (interface{}, error) {
	// simple punctuation must be evaluated last
	return types.NewEscapedQuotedText(backslashes.(string), "*", content.([]interface{}))
}

func (p *parser) callonEscapedBoldText26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText26(stack["backslashes"], stack["content"])
}

func (c *current) onItalicText2(content interface{}) (interface{}, error) {
	return types.NewQuotedText(types.Italic, content.([]interface{}))

}

func (p *parser) callonItalicText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onItalicText2(stack["content"])
}

func (c *current) onItalicText10(content interface{}) (interface{}, error) {
	// unbalanced `__` vs `_` punctuation
	result := append([]interface{}{"_"}, content.([]interface{}))
	return types.NewQuotedText(types.Italic, result)

}

func (p *parser) callonItalicText10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onItalicText10(stack["content"])
}

func (c *current) onItalicText18(content interface{}) (interface{}, error) {
	// single punctuation cannot be followed by a character (needs '__' to emphazise a portion of a word)
	return types.NewQuotedText(types.Italic, content.([]interface{}))
}

func (p *parser) callonItalicText18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onItalicText18(stack["content"])
}

func (c *current) onEscapedItalicText5() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedItalicText5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText5()
}

func (c *current) onEscapedItalicText2(backslashes, content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewEscapedQuotedText(backslashes.(string), "__", content.([]interface{}))

}

func (p *parser) callonEscapedItalicText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText2(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedItalicText17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedItalicText17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText17()
}

func (c *current) onEscapedItalicText14(backslashes, content interface{}) (interface{}, error) {
	// unbalanced `__` vs `_` punctuation
	result := append([]interface{}{"_"}, content.([]interface{}))
	return types.NewEscapedQuotedText(backslashes.(string), "_", result)

}

func (p *parser) callonEscapedItalicText14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText14(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedItalicText29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedItalicText29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText29()
}

func (c *current) onEscapedItalicText26(backslashes, content interface{}) (interface{}, error) {
	// simple punctuation must be evaluated last
	return types.NewEscapedQuotedText(backslashes.(string), "_", content.([]interface{}))
}

func (p *parser) callonEscapedItalicText26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText26(stack["backslashes"], stack["content"])
}

func (c *current) onMonospaceText2(content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewQuotedText(types.Monospace, content.([]interface{}))

}

func (p *parser) callonMonospaceText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMonospaceText2(stack["content"])
}

func (c *current) onMonospaceText10(content interface{}) (interface{}, error) {
	// unbalanced "``" vs "`" punctuation
	result := append([]interface{}{"`"}, content.([]interface{}))
	return types.NewQuotedText(types.Monospace, result)

}

func (p *parser) callonMonospaceText10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMonospaceText10(stack["content"])
}

func (c *current) onMonospaceText18(content interface{}) (interface{}, error) {
	// single punctuation cannot be followed by a character (needs '``' to emphazise a portion of a word)
	return types.NewQuotedText(types.Monospace, content.([]interface{}))
}

func (p *parser) callonMonospaceText18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMonospaceText18(stack["content"])
}

func (c *current) onEscapedMonospaceText5() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedMonospaceText5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText5()
}

func (c *current) onEscapedMonospaceText2(backslashes, content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewEscapedQuotedText(backslashes.(string), "``", content.([]interface{}))

}

func (p *parser) callonEscapedMonospaceText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText2(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedMonospaceText17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedMonospaceText17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText17()
}

func (c *current) onEscapedMonospaceText14(backslashes, content interface{}) (interface{}, error) {
	// unbalanced "``" vs "`" punctuation
	result := append([]interface{}{"`"}, content.([]interface{}))
	return types.NewEscapedQuotedText(backslashes.(string), "`", result)

}

func (p *parser) callonEscapedMonospaceText14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText14(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedMonospaceText29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedMonospaceText29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText29()
}

func (c *current) onEscapedMonospaceText26(backslashes, content interface{}) (interface{}, error) {
	// simple punctuation must be evaluated last
	return types.NewEscapedQuotedText(backslashes.(string), "`", content.([]interface{}))
}

func (p *parser) callonEscapedMonospaceText26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText26(stack["backslashes"], stack["content"])
}

func (c *current) onSubscriptText2(content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewQuotedText(types.Subscript, content.([]interface{}))

}

func (p *parser) callonSubscriptText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSubscriptText2(stack["content"])
}

func (c *current) onSubscriptText10(content interface{}) (interface{}, error) {
	// unbalanced "~~" vs "~" punctuation
	result := append([]interface{}{"~"}, content.([]interface{}))
	return types.NewQuotedText(types.Subscript, result)

}

func (p *parser) callonSubscriptText10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSubscriptText10(stack["content"])
}

func (c *current) onSubscriptText18(content interface{}) (interface{}, error) {
	// single punctuation cannot be followed by a character (needs '~~' to emphazise a portion of a word)
	return types.NewQuotedText(types.Subscript, content.([]interface{}))
}

func (p *parser) callonSubscriptText18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSubscriptText18(stack["content"])
}

func (c *current) onEscapedSubscriptText5() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedSubscriptText5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSubscriptText5()
}

func (c *current) onEscapedSubscriptText2(backslashes, content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewEscapedQuotedText(backslashes.(string), "~~", content.([]interface{}))

}

func (p *parser) callonEscapedSubscriptText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSubscriptText2(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedSubscriptText17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedSubscriptText17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSubscriptText17()
}

func (c *current) onEscapedSubscriptText14(backslashes, content interface{}) (interface{}, error) {
	// unbalanced "~~" vs "~" punctuation
	result := append([]interface{}{"~"}, content.([]interface{}))
	return types.NewEscapedQuotedText(backslashes.(string), "~", result)

}

func (p *parser) callonEscapedSubscriptText14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSubscriptText14(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedSubscriptText29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedSubscriptText29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSubscriptText29()
}

func (c *current) onEscapedSubscriptText26(backslashes, content interface{}) (interface{}, error) {
	// simple punctuation must be evaluated last
	return types.NewEscapedQuotedText(backslashes.(string), "~", content.([]interface{}))
}

func (p *parser) callonEscapedSubscriptText26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSubscriptText26(stack["backslashes"], stack["content"])
}

func (c *current) onSuperscriptText2(content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewQuotedText(types.Superscript, content.([]interface{}))

}

func (p *parser) callonSuperscriptText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSuperscriptText2(stack["content"])
}

func (c *current) onSuperscriptText10(content interface{}) (interface{}, error) {
	// unbalanced "^^" vs "^" punctuation
	result := append([]interface{}{"^"}, content.([]interface{}))
	return types.NewQuotedText(types.Superscript, result)

}

func (p *parser) callonSuperscriptText10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSuperscriptText10(stack["content"])
}

func (c *current) onSuperscriptText18(content interface{}) (interface{}, error) {
	// single punctuation cannot be followed by a character (needs '**' to emphazise a portion of a word)
	return types.NewQuotedText(types.Superscript, content.([]interface{}))
}

func (p *parser) callonSuperscriptText18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSuperscriptText18(stack["content"])
}

func (c *current) onEscapedSuperscriptText5() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedSuperscriptText5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSuperscriptText5()
}

func (c *current) onEscapedSuperscriptText2(backslashes, content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewEscapedQuotedText(backslashes.(string), "^^", content.([]interface{}))

}

func (p *parser) callonEscapedSuperscriptText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSuperscriptText2(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedSuperscriptText17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedSuperscriptText17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSuperscriptText17()
}

func (c *current) onEscapedSuperscriptText14(backslashes, content interface{}) (interface{}, error) {
	// unbalanced "^^" vs "^" punctuation
	result := append([]interface{}{"^"}, content.([]interface{}))
	return types.NewEscapedQuotedText(backslashes.(string), "^", result)

}

func (p *parser) callonEscapedSuperscriptText14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSuperscriptText14(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedSuperscriptText29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedSuperscriptText29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSuperscriptText29()
}

func (c *current) onEscapedSuperscriptText26(backslashes, content interface{}) (interface{}, error) {
	// simple punctuation must be evaluated last
	return types.NewEscapedQuotedText(backslashes.(string), "^", content.([]interface{}))
}

func (p *parser) callonEscapedSuperscriptText26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSuperscriptText26(stack["backslashes"], stack["content"])
}

func (c *current) onQuotedTextContent8() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuotedTextContent8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContent8()
}

func (c *current) onQuotedTextContentElement6() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuotedTextContentElement6() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContentElement6()
}

func (c *current) onQuotedTextContentElement18() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuotedTextContentElement18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContentElement18()
}

func (c *current) onQuotedTextContentElement9() (interface{}, error) {

	return string(c.text), nil // cannot have "*", "_", "`", "~" or "^" within
}

func (p *parser) callonQuotedTextContentElement9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContentElement9()
}

func (c *current) onQuotedTextContentElement3() (interface{}, error) {

	return c.text, nil
}

func (p *parser) callonQuotedTextContentElement3() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContentElement3()
}

func (c *current) onQuotedTextContentElement34() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuotedTextContentElement34() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContentElement34()
}

func (c *current) onQuotedTextContentElement46() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuotedTextContentElement46() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContentElement46()
}

func (c *current) onQuotedTextContentElement37() (interface{}, error) {

	return string(c.text), nil // cannot have "*", "_", "`", "~" or "^" within
}

func (p *parser) callonQuotedTextContentElement37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContentElement37()
}

func (c *current) onQuotedTextContentElement31() (interface{}, error) {

	return c.text, nil
}

func (p *parser) callonQuotedTextContentElement31() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContentElement31()
}

func (c *current) onPassthrough8() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonPassthrough8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthrough8()
}

func (c *current) onPassthrough15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonPassthrough15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthrough15()
}

func (c *current) onPassthrough11() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonPassthrough11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthrough11()
}

func (c *current) onPassthrough17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonPassthrough17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthrough17()
}

func (c *current) onPassthrough2(content interface{}) (interface{}, error) {
	return types.NewPassthrough(types.TriplePlusPassthrough, content.([]interface{}))
}

func (p *parser) callonPassthrough2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthrough2(stack["content"])
}

func (c *current) onPassthrough29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonPassthrough29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthrough29()
}

func (c *current) onPassthrough36() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonPassthrough36() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthrough36()
}

func (c *current) onPassthrough32() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonPassthrough32() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthrough32()
}

func (c *current) onPassthrough38() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonPassthrough38() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthrough38()
}

func (c *current) onPassthrough23(content interface{}) (interface{}, error) {
	return types.NewPassthrough(types.SinglePlusPassthrough, content.([]interface{}))
}

func (p *parser) callonPassthrough23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthrough23(stack["content"])
}

func (c *current) onPassthroughMacro8() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonPassthroughMacro8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthroughMacro8()
}

func (c *current) onPassthroughMacro15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonPassthroughMacro15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthroughMacro15()
}

func (c *current) onPassthroughMacro11() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonPassthroughMacro11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthroughMacro11()
}

func (c *current) onPassthroughMacro17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonPassthroughMacro17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthroughMacro17()
}

func (c *current) onPassthroughMacro2(content interface{}) (interface{}, error) {
	return types.NewPassthrough(types.PassthroughMacro, content.([]interface{}))
}

func (p *parser) callonPassthroughMacro2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthroughMacro2(stack["content"])
}

func (c *current) onPassthroughMacro30() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonPassthroughMacro30() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthroughMacro30()
}

func (c *current) onPassthroughMacro37() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonPassthroughMacro37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthroughMacro37()
}

func (c *current) onPassthroughMacro33() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonPassthroughMacro33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthroughMacro33()
}

func (c *current) onPassthroughMacro39() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonPassthroughMacro39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthroughMacro39()
}

func (c *current) onPassthroughMacro23(content interface{}) (interface{}, error) {
	return types.NewPassthrough(types.PassthroughMacro, content.([]interface{}))
}

func (p *parser) callonPassthroughMacro23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthroughMacro23(stack["content"])
}

func (c *current) onInlineFootnote2(content interface{}) (interface{}, error) {
	return types.NewFootnote("", content.(types.InlineElements))
}

func (p *parser) callonInlineFootnote2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote2(stack["content"])
}

func (c *current) onInlineFootnote15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineFootnote15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote15()
}

func (c *current) onInlineFootnote22() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineFootnote22() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote22()
}

func (c *current) onInlineFootnote18() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineFootnote18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote18()
}

func (c *current) onInlineFootnote24() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineFootnote24() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote24()
}

func (c *current) onInlineFootnote12() (interface{}, error) {
	// footnote ID not may span multiple lines
	return string(c.text), nil
}

func (p *parser) callonInlineFootnote12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote12()
}

func (c *current) onInlineFootnote8(ref, content interface{}) (interface{}, error) {
	return types.NewFootnote(ref.(string), content.(types.InlineElements))
}

func (p *parser) callonInlineFootnote8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote8(stack["ref"], stack["content"])
}

func (c *current) onInlineFootnote48() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineFootnote48() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote48()
}

func (c *current) onInlineFootnote55() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineFootnote55() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote55()
}

func (c *current) onInlineFootnote51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineFootnote51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote51()
}

func (c *current) onInlineFootnote57() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineFootnote57() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote57()
}

func (c *current) onInlineFootnote45() (interface{}, error) {
	// footnote ID not may span multiple lines
	return string(c.text), nil
}

func (p *parser) callonInlineFootnote45() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote45()
}

func (c *current) onInlineFootnote41(ref interface{}) (interface{}, error) {
	return types.NewFootnote(ref.(string), types.InlineElements{}) // foot note referring to another note
}

func (p *parser) callonInlineFootnote41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote41(stack["ref"])
}

func (c *current) onFootnoteContent16() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFootnoteContent16() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent16()
}

func (c *current) onFootnoteContent26() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFootnoteContent26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent26()
}

func (c *current) onFootnoteContent38() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFootnoteContent38() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent38()
}

func (c *current) onFootnoteContent29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFootnoteContent29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent29()
}

func (c *current) onFootnoteContent23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFootnoteContent23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent23()
}

func (c *current) onFootnoteContent55() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFootnoteContent55() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent55()
}

func (c *current) onFootnoteContent19(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonFootnoteContent19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent19(stack["id"])
}

func (c *current) onFootnoteContent61() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFootnoteContent61() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent61()
}

func (c *current) onFootnoteContent1(elements interface{}) (interface{}, error) {
	// footnote content may span multiple lines
	return types.NewInlineElements(elements.([]interface{}))

}

func (p *parser) callonFootnoteContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent1(stack["elements"])
}

func (c *current) onDelimitedBlock9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock9()
}

func (c *current) onDelimitedBlock29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock29()
}

func (c *current) onDelimitedBlock43() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock43()
}

func (c *current) onDelimitedBlock50() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock50() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock50()
}

func (c *current) onDelimitedBlock46() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock46() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock46()
}

func (c *current) onDelimitedBlock60() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock60() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock60()
}

func (c *current) onDelimitedBlock52() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock52() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock52()
}

func (c *current) onDelimitedBlock40() (interface{}, error) {
	// skip EOL in line content, and stop when quote block delimiter is encountered
	return types.NewInlineElements(string(c.text))
}

func (p *parser) callonDelimitedBlock40() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock40()
}

func (c *current) onDelimitedBlock21(line interface{}) (interface{}, error) {
	return line.(types.InlineElements), nil
}

func (p *parser) callonDelimitedBlock21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock21(stack["line"])
}

func (c *current) onDelimitedBlock18(lines interface{}) (interface{}, error) {
	return types.NewParagraph(lines.([]interface{}), nil)
}

func (p *parser) callonDelimitedBlock18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock18(stack["lines"])
}

func (c *current) onDelimitedBlock85() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock85() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock85()
}

func (c *current) onDelimitedBlock3(content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Listing, content.([]interface{}), types.None)
}

func (p *parser) callonDelimitedBlock3() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock3(stack["content"])
}

func (c *current) onDelimitedBlock101() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock101() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock101()
}

func (c *current) onDelimitedBlock112() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock112() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock112()
}

func (c *current) onDelimitedBlock119() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock119()
}

func (c *current) onDelimitedBlock115() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock115()
}

func (c *current) onDelimitedBlock121() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock121()
}

func (c *current) onDelimitedBlock108() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock108() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock108()
}

func (c *current) onDelimitedBlock143() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock143() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock143()
}

func (c *current) onDelimitedBlock95(content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Comment, content.([]interface{}), types.Verbatim)
}

func (p *parser) callonDelimitedBlock95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock95(stack["content"])
}

func (c *current) onFencedBlock7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock7()
}

func (c *current) onFencedBlock23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock23()
}

func (c *current) onFencedBlock1(content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Fenced, content.([]interface{}), types.None)
}

func (p *parser) callonFencedBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock1(stack["content"])
}

func (c *current) onFencedBlockContent12() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlockContent12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlockContent12()
}

func (c *current) onFencedBlockContent4() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonFencedBlockContent4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlockContent4()
}

func (c *current) onExampleBlock7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock7()
}

func (c *current) onExampleBlock27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock27()
}

func (c *current) onExampleBlock19() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonExampleBlock19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock19()
}

func (c *current) onExampleBlock40() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock40() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock40()
}

func (c *current) onExampleBlock1(content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Example, content.([]interface{}), types.None)
}

func (p *parser) callonExampleBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock1(stack["content"])
}

func (c *current) onBlockParagraph1(lines interface{}) (interface{}, error) {
	return types.NewParagraph(lines.([]interface{}), nil)
}

func (p *parser) callonBlockParagraph1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraph1(stack["lines"])
}

func (c *current) onBlockParagraphLine9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine9()
}

func (c *current) onBlockParagraphLine13() (interface{}, error) {
	// numbering style: "....."
	return types.NewOrderedListItemPrefix(types.UpperRoman, 5)

}

func (p *parser) callonBlockParagraphLine13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine13()
}

func (c *current) onBlockParagraphLine15() (interface{}, error) {
	// numbering style: "...."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 4)

}

func (p *parser) callonBlockParagraphLine15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine15()
}

func (c *current) onBlockParagraphLine17() (interface{}, error) {
	// numbering style: "..."
	return types.NewOrderedListItemPrefix(types.LowerRoman, 3)

}

func (p *parser) callonBlockParagraphLine17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine17()
}

func (c *current) onBlockParagraphLine19() (interface{}, error) {
	// numbering style: ".."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 2)

}

func (p *parser) callonBlockParagraphLine19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine19()
}

func (c *current) onBlockParagraphLine21() (interface{}, error) {
	// numbering style: "."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)
	// explicit numbering

}

func (p *parser) callonBlockParagraphLine21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine21()
}

func (c *current) onBlockParagraphLine23() (interface{}, error) {
	// numbering style: "1."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)

}

func (p *parser) callonBlockParagraphLine23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine23()
}

func (c *current) onBlockParagraphLine28() (interface{}, error) {
	// numbering style: "a."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 1)

}

func (p *parser) callonBlockParagraphLine28() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine28()
}

func (c *current) onBlockParagraphLine32() (interface{}, error) {
	// numbering style: "A."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 1)

}

func (p *parser) callonBlockParagraphLine32() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine32()
}

func (c *current) onBlockParagraphLine36() (interface{}, error) {
	// numbering style: "i)"
	return types.NewOrderedListItemPrefix(types.LowerRoman, 1)

}

func (p *parser) callonBlockParagraphLine36() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine36()
}

func (c *current) onBlockParagraphLine41() (interface{}, error) {
	// numbering style: "I)"
	return types.NewOrderedListItemPrefix(types.UpperRoman, 1)

}

func (p *parser) callonBlockParagraphLine41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine41()
}

func (c *current) onBlockParagraphLine49() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine49()
}

func (c *current) onBlockParagraphLine4(prefix interface{}) (interface{}, error) {
	return prefix, nil
}

func (p *parser) callonBlockParagraphLine4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine4(stack["prefix"])
}

func (c *current) onBlockParagraphLine57() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine57() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine57()
}

func (c *current) onBlockParagraphLine61() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FiveAsterisks, 5)

}

func (p *parser) callonBlockParagraphLine61() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine61()
}

func (c *current) onBlockParagraphLine63() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FourAsterisks, 4)

}

func (p *parser) callonBlockParagraphLine63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine63()
}

func (c *current) onBlockParagraphLine65() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.ThreeAsterisks, 3)

}

func (p *parser) callonBlockParagraphLine65() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine65()
}

func (c *current) onBlockParagraphLine67() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.TwoAsterisks, 2)

}

func (p *parser) callonBlockParagraphLine67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine67()
}

func (c *current) onBlockParagraphLine69() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.OneAsterisk, 1)

}

func (p *parser) callonBlockParagraphLine69() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine69()
}

func (c *current) onBlockParagraphLine71() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.Dash, 1)

}

func (p *parser) callonBlockParagraphLine71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine71()
}

func (c *current) onBlockParagraphLine76() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine76() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine76()
}

func (c *current) onBlockParagraphLine52(prefix interface{}) (interface{}, error) {
	return prefix, nil
}

func (p *parser) callonBlockParagraphLine52() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine52(stack["prefix"])
}

func (c *current) onBlockParagraphLine83() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine83() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine83()
}

func (c *current) onBlockParagraphLine90() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine90() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine90()
}

func (c *current) onBlockParagraphLine86() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine86()
}

func (c *current) onBlockParagraphLine92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine92()
}

func (c *current) onBlockParagraphLine80() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine80() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine80()
}

func (c *current) onBlockParagraphLine101() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine101() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine101()
}

func (c *current) onBlockParagraphLine113() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine113()
}

func (c *current) onBlockParagraphLine107() (interface{}, error) {
	return types.NewListItemContinuation()
}

func (p *parser) callonBlockParagraphLine107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine107()
}

func (c *current) onBlockParagraphLine128() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine128() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine128()
}

func (c *current) onBlockParagraphLine140() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine140() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine140()
}

func (c *current) onBlockParagraphLine152() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine152()
}

func (c *current) onBlockParagraphLine165() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine165() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine165()
}

func (c *current) onBlockParagraphLine177() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine177() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine177()
}

func (c *current) onBlockParagraphLine1(line interface{}) (interface{}, error) {
	return line, nil
}

func (p *parser) callonBlockParagraphLine1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine1(stack["line"])
}

func (c *current) onQuoteBlock7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock7()
}

func (c *current) onQuoteBlock23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock23()
}

func (c *current) onQuoteBlock1(content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Quote, content.([]interface{}), types.None)
}

func (p *parser) callonQuoteBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock1(stack["content"])
}

func (c *current) onQuoteBlockElement9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlockElement9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlockElement9()
}

func (c *current) onQuoteBlockElement1(element interface{}) (interface{}, error) {
	return element, nil

}

func (p *parser) callonQuoteBlockElement1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlockElement1(stack["element"])
}

func (c *current) onVerseBlock3() (bool, error) {
	verse, ok := c.state["verse"].(bool)
	return ok && verse, nil
}

func (p *parser) callonVerseBlock3() (bool, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock3()
}

func (c *current) onVerseBlock11() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock11()
}

func (c *current) onVerseBlock27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock27()
}

func (c *current) onVerseBlock5(content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Verse, content.([]interface{}), types.None)
}

func (p *parser) callonVerseBlock5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock5(stack["content"])
}

func (c *current) onVerseBlock36(verse interface{}) error {
	c.state["verse"] = false
	return nil
}

func (p *parser) callonVerseBlock36() error {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock36(stack["verse"])
}

func (c *current) onVerseBlock1(verse interface{}) (interface{}, error) {
	return verse, nil
}

func (p *parser) callonVerseBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock1(stack["verse"])
}

func (c *current) onVerseBlockContent1(lines interface{}) (interface{}, error) {
	return types.NewParagraph(lines.([]interface{}), nil)
}

func (p *parser) callonVerseBlockContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockContent1(stack["lines"])
}

func (c *current) onVerseBlockLine9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlockLine9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLine9()
}

func (c *current) onVerseBlockLine1(line interface{}) (interface{}, error) {
	return line.(types.InlineElements), nil
}

func (p *parser) callonVerseBlockLine1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLine1(stack["line"])
}

func (c *current) onVerseBlockLineContent11() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlockLineContent11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLineContent11()
}

func (c *current) onVerseBlockLineContent27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlockLineContent27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLineContent27()
}

func (c *current) onVerseBlockLineContent33() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlockLineContent33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLineContent33()
}

func (c *current) onVerseBlockLineContent1(elements interface{}) (interface{}, error) {
	// skip EOL in line content, and stop when quote block delimiter is encountered
	return types.NewInlineElements(elements.([]interface{}))
}

func (p *parser) callonVerseBlockLineContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLineContent1(stack["elements"])
}

func (c *current) onSidebarBlock7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock7()
}

func (c *current) onSidebarBlock23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock23()
}

func (c *current) onSidebarBlock1(content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Sidebar, content.([]interface{}), types.None)
}

func (p *parser) callonSidebarBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock1(stack["content"])
}

func (c *current) onSidebarBlockContent12() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlockContent12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlockContent12()
}

func (c *current) onSidebarBlockContent4() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonSidebarBlockContent4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlockContent4()
}

func (c *current) onNonSidebarBlock1(content interface{}) (interface{}, error) {
	return content, nil
}

func (p *parser) callonNonSidebarBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onNonSidebarBlock1(stack["content"])
}

func (c *current) onTable7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable7()
}

func (c *current) onTable26() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable26()
}

func (c *current) onTable1(header, lines interface{}) (interface{}, error) {
	// end delimiter or end of file
	return types.NewTable(header, lines.([]interface{}))
}

func (p *parser) callonTable1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable1(stack["header"], stack["lines"])
}

func (c *current) onTableLineHeader9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableLineHeader9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLineHeader9()
}

func (c *current) onTableLineHeader32() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableLineHeader32() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLineHeader32()
}

func (c *current) onTableLineHeader24(cells interface{}) (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonTableLineHeader24() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLineHeader24(stack["cells"])
}

func (c *current) onTableLineHeader1(cells interface{}) (interface{}, error) {
	return types.NewTableLine(cells.([]interface{}))
}

func (p *parser) callonTableLineHeader1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLineHeader1(stack["cells"])
}

func (c *current) onTableLine9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableLine9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLine9()
}

func (c *current) onTableLine33() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableLine33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLine33()
}

func (c *current) onTableLine25() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonTableLine25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLine25()
}

func (c *current) onTableLine1(cells interface{}) (interface{}, error) {
	return types.NewTableLine(cells.([]interface{}))
}

func (p *parser) callonTableLine1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLine1(stack["cells"])
}

func (c *current) onTableCell7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableCell7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell7()
}

func (c *current) onTableCell18() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableCell18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell18()
}

func (c *current) onTableCell29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableCell29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell29()
}

func (c *current) onTableCell35() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableCell35() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell35()
}

func (c *current) onTableCell1(elements interface{}) (interface{}, error) {
	return types.NewInlineElements(elements)
}

func (p *parser) callonTableCell1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell1(stack["elements"])
}

func (c *current) onAlphanums1() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonAlphanums1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onAlphanums1()
}

func (c *current) onWS3() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonWS3() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onWS3()
}

var (
	// errNoRule is returned when the grammar to parse has no rule.
	errNoRule = errors.New("grammar has no rule")

	// errInvalidEntrypoint is returned when the specified entrypoint rule
	// does not exit.
	errInvalidEntrypoint = errors.New("invalid entrypoint")

	// errInvalidEncoding is returned when the source is not properly
	// utf8-encoded.
	errInvalidEncoding = errors.New("invalid encoding")

	// errMaxExprCnt is used to signal that the maximum number of
	// expressions have been parsed.
	errMaxExprCnt = errors.New("max number of expresssions parsed")
)

// Option is a function that can set an option on the parser. It returns
// the previous setting as an Option.
type Option func(*parser) Option

// MaxExpressions creates an Option to stop parsing after the provided
// number of expressions have been parsed, if the value is 0 then the parser will
// parse for as many steps as needed (possibly an infinite number).
//
// The default for maxExprCnt is 0.
func MaxExpressions(maxExprCnt uint64) Option {
	return func(p *parser) Option {
		oldMaxExprCnt := p.maxExprCnt
		p.maxExprCnt = maxExprCnt
		return MaxExpressions(oldMaxExprCnt)
	}
}

// Entrypoint creates an Option to set the rule name to use as entrypoint.
// The rule name must have been specified in the -alternate-entrypoints
// if generating the parser with the -optimize-grammar flag, otherwise
// it may have been optimized out. Passing an empty string sets the
// entrypoint to the first rule in the grammar.
//
// The default is to start parsing at the first rule in the grammar.
func Entrypoint(ruleName string) Option {
	return func(p *parser) Option {
		oldEntrypoint := p.entrypoint
		p.entrypoint = ruleName
		if ruleName == "" {
			p.entrypoint = g.rules[0].name
		}
		return Entrypoint(oldEntrypoint)
	}
}

// Statistics adds a user provided Stats struct to the parser to allow
// the user to process the results after the parsing has finished.
// Also the key for the "no match" counter is set.
//
// Example usage:
//
//     input := "input"
//     stats := Stats{}
//     _, err := Parse("input-file", []byte(input), Statistics(&stats, "no match"))
//     if err != nil {
//         log.Panicln(err)
//     }
//     b, err := json.MarshalIndent(stats.ChoiceAltCnt, "", "  ")
//     if err != nil {
//         log.Panicln(err)
//     }
//     fmt.Println(string(b))
//
func Statistics(stats *Stats, choiceNoMatch string) Option {
	return func(p *parser) Option {
		oldStats := p.Stats
		p.Stats = stats
		oldChoiceNoMatch := p.choiceNoMatch
		p.choiceNoMatch = choiceNoMatch
		if p.Stats.ChoiceAltCnt == nil {
			p.Stats.ChoiceAltCnt = make(map[string]map[string]int)
		}
		return Statistics(oldStats, oldChoiceNoMatch)
	}
}

// Debug creates an Option to set the debug flag to b. When set to true,
// debugging information is printed to stdout while parsing.
//
// The default is false.
func Debug(b bool) Option {
	return func(p *parser) Option {
		old := p.debug
		p.debug = b
		return Debug(old)
	}
}

// Memoize creates an Option to set the memoize flag to b. When set to true,
// the parser will cache all results so each expression is evaluated only
// once. This guarantees linear parsing time even for pathological cases,
// at the expense of more memory and slower times for typical cases.
//
// The default is false.
func Memoize(b bool) Option {
	return func(p *parser) Option {
		old := p.memoize
		p.memoize = b
		return Memoize(old)
	}
}

// AllowInvalidUTF8 creates an Option to allow invalid UTF-8 bytes.
// Every invalid UTF-8 byte is treated as a utf8.RuneError (U+FFFD)
// by character class matchers and is matched by the any matcher.
// The returned matched value, c.text and c.offset are NOT affected.
//
// The default is false.
func AllowInvalidUTF8(b bool) Option {
	return func(p *parser) Option {
		old := p.allowInvalidUTF8
		p.allowInvalidUTF8 = b
		return AllowInvalidUTF8(old)
	}
}

// Recover creates an Option to set the recover flag to b. When set to
// true, this causes the parser to recover from panics and convert it
// to an error. Setting it to false can be useful while debugging to
// access the full stack trace.
//
// The default is true.
func Recover(b bool) Option {
	return func(p *parser) Option {
		old := p.recover
		p.recover = b
		return Recover(old)
	}
}

// GlobalStore creates an Option to set a key to a certain value in
// the globalStore.
func GlobalStore(key string, value interface{}) Option {
	return func(p *parser) Option {
		old := p.cur.globalStore[key]
		p.cur.globalStore[key] = value
		return GlobalStore(key, old)
	}
}

// InitState creates an Option to set a key to a certain value in
// the global "state" store.
func InitState(key string, value interface{}) Option {
	return func(p *parser) Option {
		old := p.cur.state[key]
		p.cur.state[key] = value
		return InitState(key, old)
	}
}

// ParseFile parses the file identified by filename.
func ParseFile(filename string, opts ...Option) (i interface{}, err error) {
	f, err := os.Open(filename)
	if err != nil {
		return nil, err
	}
	defer func() {
		if closeErr := f.Close(); closeErr != nil {
			err = closeErr
		}
	}()
	return ParseReader(filename, f, opts...)
}

// ParseReader parses the data from r using filename as information in the
// error messages.
func ParseReader(filename string, r io.Reader, opts ...Option) (interface{}, error) {
	b, err := ioutil.ReadAll(r)
	if err != nil {
		return nil, err
	}

	return Parse(filename, b, opts...)
}

// Parse parses the data from b using filename as information in the
// error messages.
func Parse(filename string, b []byte, opts ...Option) (interface{}, error) {
	return newParser(filename, b, opts...).parse(g)
}

// position records a position in the text.
type position struct {
	line, col, offset int
}

func (p position) String() string {
	return fmt.Sprintf("%d:%d [%d]", p.line, p.col, p.offset)
}

// savepoint stores all state required to go back to this point in the
// parser.
type savepoint struct {
	position
	rn rune
	w  int
}

type current struct {
	pos  position // start position of the match
	text []byte   // raw text of the match

	// state is a store for arbitrary key,value pairs that the user wants to be
	// tied to the backtracking of the parser.
	// This is always rolled back if a parsing rule fails.
	state storeDict

	// globalStore is a general store for the user to store arbitrary key-value
	// pairs that they need to manage and that they do not want tied to the
	// backtracking of the parser. This is only modified by the user and never
	// rolled back by the parser. It is always up to the user to keep this in a
	// consistent state.
	globalStore storeDict
}

type storeDict map[string]interface{}

// the AST types...

type grammar struct {
	pos   position
	rules []*rule
}

type rule struct {
	pos         position
	name        string
	displayName string
	expr        interface{}
}

type choiceExpr struct {
	pos          position
	alternatives []interface{}
}

type actionExpr struct {
	pos  position
	expr interface{}
	run  func(*parser) (interface{}, error)
}

type recoveryExpr struct {
	pos          position
	expr         interface{}
	recoverExpr  interface{}
	failureLabel []string
}

type seqExpr struct {
	pos   position
	exprs []interface{}
}

type throwExpr struct {
	pos   position
	label string
}

type labeledExpr struct {
	pos   position
	label string
	expr  interface{}
}

type expr struct {
	pos  position
	expr interface{}
}

type andExpr expr
type notExpr expr
type zeroOrOneExpr expr
type zeroOrMoreExpr expr
type oneOrMoreExpr expr

type ruleRefExpr struct {
	pos  position
	name string
}

type stateCodeExpr struct {
	pos position
	run func(*parser) error
}

type andCodeExpr struct {
	pos position
	run func(*parser) (bool, error)
}

type notCodeExpr struct {
	pos position
	run func(*parser) (bool, error)
}

type litMatcher struct {
	pos        position
	val        string
	ignoreCase bool
}

type charClassMatcher struct {
	pos             position
	val             string
	basicLatinChars [128]bool
	chars           []rune
	ranges          []rune
	classes         []*unicode.RangeTable
	ignoreCase      bool
	inverted        bool
}

type anyMatcher position

// errList cumulates the errors found by the parser.
type errList []error

func (e *errList) add(err error) {
	*e = append(*e, err)
}

func (e errList) err() error {
	if len(e) == 0 {
		return nil
	}
	e.dedupe()
	return e
}

func (e *errList) dedupe() {
	var cleaned []error
	set := make(map[string]bool)
	for _, err := range *e {
		if msg := err.Error(); !set[msg] {
			set[msg] = true
			cleaned = append(cleaned, err)
		}
	}
	*e = cleaned
}

func (e errList) Error() string {
	switch len(e) {
	case 0:
		return ""
	case 1:
		return e[0].Error()
	default:
		var buf bytes.Buffer

		for i, err := range e {
			if i > 0 {
				buf.WriteRune('\n')
			}
			buf.WriteString(err.Error())
		}
		return buf.String()
	}
}

// parserError wraps an error with a prefix indicating the rule in which
// the error occurred. The original error is stored in the Inner field.
type parserError struct {
	Inner    error
	pos      position
	prefix   string
	expected []string
}

// Error returns the error message.
func (p *parserError) Error() string {
	return p.prefix + ": " + p.Inner.Error()
}

// newParser creates a parser with the specified input source and options.
func newParser(filename string, b []byte, opts ...Option) *parser {
	stats := Stats{
		ChoiceAltCnt: make(map[string]map[string]int),
	}

	p := &parser{
		filename: filename,
		errs:     new(errList),
		data:     b,
		pt:       savepoint{position: position{line: 1}},
		recover:  true,
		cur: current{
			state:       make(storeDict),
			globalStore: make(storeDict),
		},
		maxFailPos:      position{col: 1, line: 1},
		maxFailExpected: make([]string, 0, 20),
		Stats:           &stats,
		// start rule is rule [0] unless an alternate entrypoint is specified
		entrypoint: g.rules[0].name,
	}
	p.setOptions(opts)

	if p.maxExprCnt == 0 {
		p.maxExprCnt = math.MaxUint64
	}

	return p
}

// setOptions applies the options to the parser.
func (p *parser) setOptions(opts []Option) {
	for _, opt := range opts {
		opt(p)
	}
}

type resultTuple struct {
	v   interface{}
	b   bool
	end savepoint
}

const choiceNoMatch = -1

// Stats stores some statistics, gathered during parsing
type Stats struct {
	// ExprCnt counts the number of expressions processed during parsing
	// This value is compared to the maximum number of expressions allowed
	// (set by the MaxExpressions option).
	ExprCnt uint64

	// ChoiceAltCnt is used to count for each ordered choice expression,
	// which alternative is used how may times.
	// These numbers allow to optimize the order of the ordered choice expression
	// to increase the performance of the parser
	//
	// The outer key of ChoiceAltCnt is composed of the name of the rule as well
	// as the line and the column of the ordered choice.
	// The inner key of ChoiceAltCnt is the number (one-based) of the matching alternative.
	// For each alternative the number of matches are counted. If an ordered choice does not
	// match, a special counter is incremented. The name of this counter is set with
	// the parser option Statistics.
	// For an alternative to be included in ChoiceAltCnt, it has to match at least once.
	ChoiceAltCnt map[string]map[string]int
}

type parser struct {
	filename string
	pt       savepoint
	cur      current

	data []byte
	errs *errList

	depth   int
	recover bool
	debug   bool

	memoize bool
	// memoization table for the packrat algorithm:
	// map[offset in source] map[expression or rule] {value, match}
	memo map[int]map[interface{}]resultTuple

	// rules table, maps the rule identifier to the rule node
	rules map[string]*rule
	// variables stack, map of label to value
	vstack []map[string]interface{}
	// rule stack, allows identification of the current rule in errors
	rstack []*rule

	// parse fail
	maxFailPos            position
	maxFailExpected       []string
	maxFailInvertExpected bool

	// max number of expressions to be parsed
	maxExprCnt uint64
	// entrypoint for the parser
	entrypoint string

	allowInvalidUTF8 bool

	*Stats

	choiceNoMatch string
	// recovery expression stack, keeps track of the currently available recovery expression, these are traversed in reverse
	recoveryStack []map[string]interface{}
}

// push a variable set on the vstack.
func (p *parser) pushV() {
	if cap(p.vstack) == len(p.vstack) {
		// create new empty slot in the stack
		p.vstack = append(p.vstack, nil)
	} else {
		// slice to 1 more
		p.vstack = p.vstack[:len(p.vstack)+1]
	}

	// get the last args set
	m := p.vstack[len(p.vstack)-1]
	if m != nil && len(m) == 0 {
		// empty map, all good
		return
	}

	m = make(map[string]interface{})
	p.vstack[len(p.vstack)-1] = m
}

// pop a variable set from the vstack.
func (p *parser) popV() {
	// if the map is not empty, clear it
	m := p.vstack[len(p.vstack)-1]
	if len(m) > 0 {
		// GC that map
		p.vstack[len(p.vstack)-1] = nil
	}
	p.vstack = p.vstack[:len(p.vstack)-1]
}

// push a recovery expression with its labels to the recoveryStack
func (p *parser) pushRecovery(labels []string, expr interface{}) {
	if cap(p.recoveryStack) == len(p.recoveryStack) {
		// create new empty slot in the stack
		p.recoveryStack = append(p.recoveryStack, nil)
	} else {
		// slice to 1 more
		p.recoveryStack = p.recoveryStack[:len(p.recoveryStack)+1]
	}

	m := make(map[string]interface{}, len(labels))
	for _, fl := range labels {
		m[fl] = expr
	}
	p.recoveryStack[len(p.recoveryStack)-1] = m
}

// pop a recovery expression from the recoveryStack
func (p *parser) popRecovery() {
	// GC that map
	p.recoveryStack[len(p.recoveryStack)-1] = nil

	p.recoveryStack = p.recoveryStack[:len(p.recoveryStack)-1]
}

func (p *parser) print(prefix, s string) string {
	if !p.debug {
		return s
	}

	fmt.Printf("%s %d:%d:%d: %s [%#U]\n",
		prefix, p.pt.line, p.pt.col, p.pt.offset, s, p.pt.rn)
	return s
}

func (p *parser) in(s string) string {
	p.depth++
	return p.print(strings.Repeat(" ", p.depth)+">", s)
}

func (p *parser) out(s string) string {
	p.depth--
	return p.print(strings.Repeat(" ", p.depth)+"<", s)
}

func (p *parser) addErr(err error) {
	p.addErrAt(err, p.pt.position, []string{})
}

func (p *parser) addErrAt(err error, pos position, expected []string) {
	var buf bytes.Buffer
	if p.filename != "" {
		buf.WriteString(p.filename)
	}
	if buf.Len() > 0 {
		buf.WriteString(":")
	}
	buf.WriteString(fmt.Sprintf("%d:%d (%d)", pos.line, pos.col, pos.offset))
	if len(p.rstack) > 0 {
		if buf.Len() > 0 {
			buf.WriteString(": ")
		}
		rule := p.rstack[len(p.rstack)-1]
		if rule.displayName != "" {
			buf.WriteString("rule " + rule.displayName)
		} else {
			buf.WriteString("rule " + rule.name)
		}
	}
	pe := &parserError{Inner: err, pos: pos, prefix: buf.String(), expected: expected}
	p.errs.add(pe)
}

func (p *parser) failAt(fail bool, pos position, want string) {
	// process fail if parsing fails and not inverted or parsing succeeds and invert is set
	if fail == p.maxFailInvertExpected {
		if pos.offset < p.maxFailPos.offset {
			return
		}

		if pos.offset > p.maxFailPos.offset {
			p.maxFailPos = pos
			p.maxFailExpected = p.maxFailExpected[:0]
		}

		if p.maxFailInvertExpected {
			want = "!" + want
		}
		p.maxFailExpected = append(p.maxFailExpected, want)
	}
}

// read advances the parser to the next rune.
func (p *parser) read() {
	p.pt.offset += p.pt.w
	rn, n := utf8.DecodeRune(p.data[p.pt.offset:])
	p.pt.rn = rn
	p.pt.w = n
	p.pt.col++
	if rn == '\n' {
		p.pt.line++
		p.pt.col = 0
	}

	if rn == utf8.RuneError && n == 1 { // see utf8.DecodeRune
		if !p.allowInvalidUTF8 {
			p.addErr(errInvalidEncoding)
		}
	}
}

// restore parser position to the savepoint pt.
func (p *parser) restore(pt savepoint) {
	if p.debug {
		defer p.out(p.in("restore"))
	}
	if pt.offset == p.pt.offset {
		return
	}
	p.pt = pt
}

// Cloner is implemented by any value that has a Clone method, which returns a
// copy of the value. This is mainly used for types which are not passed by
// value (e.g map, slice, chan) or structs that contain such types.
//
// This is used in conjunction with the global state feature to create proper
// copies of the state to allow the parser to properly restore the state in
// the case of backtracking.
type Cloner interface {
	Clone() interface{}
}

// clone and return parser current state.
func (p *parser) cloneState() storeDict {
	if p.debug {
		defer p.out(p.in("cloneState"))
	}

	state := make(storeDict, len(p.cur.state))
	for k, v := range p.cur.state {
		if c, ok := v.(Cloner); ok {
			state[k] = c.Clone()
		} else {
			state[k] = v
		}
	}
	return state
}

// restore parser current state to the state storeDict.
// every restoreState should applied only one time for every cloned state
func (p *parser) restoreState(state storeDict) {
	if p.debug {
		defer p.out(p.in("restoreState"))
	}
	p.cur.state = state
}

// get the slice of bytes from the savepoint start to the current position.
func (p *parser) sliceFrom(start savepoint) []byte {
	return p.data[start.position.offset:p.pt.position.offset]
}

func (p *parser) getMemoized(node interface{}) (resultTuple, bool) {
	if len(p.memo) == 0 {
		return resultTuple{}, false
	}
	m := p.memo[p.pt.offset]
	if len(m) == 0 {
		return resultTuple{}, false
	}
	res, ok := m[node]
	return res, ok
}

func (p *parser) setMemoized(pt savepoint, node interface{}, tuple resultTuple) {
	if p.memo == nil {
		p.memo = make(map[int]map[interface{}]resultTuple)
	}
	m := p.memo[pt.offset]
	if m == nil {
		m = make(map[interface{}]resultTuple)
		p.memo[pt.offset] = m
	}
	m[node] = tuple
}

func (p *parser) buildRulesTable(g *grammar) {
	p.rules = make(map[string]*rule, len(g.rules))
	for _, r := range g.rules {
		p.rules[r.name] = r
	}
}

func (p *parser) parse(g *grammar) (val interface{}, err error) {
	if len(g.rules) == 0 {
		p.addErr(errNoRule)
		return nil, p.errs.err()
	}

	// TODO : not super critical but this could be generated
	p.buildRulesTable(g)

	if p.recover {
		// panic can be used in action code to stop parsing immediately
		// and return the panic as an error.
		defer func() {
			if e := recover(); e != nil {
				if p.debug {
					defer p.out(p.in("panic handler"))
				}
				val = nil
				switch e := e.(type) {
				case error:
					p.addErr(e)
				default:
					p.addErr(fmt.Errorf("%v", e))
				}
				err = p.errs.err()
			}
		}()
	}

	startRule, ok := p.rules[p.entrypoint]
	if !ok {
		p.addErr(errInvalidEntrypoint)
		return nil, p.errs.err()
	}

	p.read() // advance to first rune
	val, ok = p.parseRule(startRule)
	if !ok {
		if len(*p.errs) == 0 {
			// If parsing fails, but no errors have been recorded, the expected values
			// for the farthest parser position are returned as error.
			maxFailExpectedMap := make(map[string]struct{}, len(p.maxFailExpected))
			for _, v := range p.maxFailExpected {
				maxFailExpectedMap[v] = struct{}{}
			}
			expected := make([]string, 0, len(maxFailExpectedMap))
			eof := false
			if _, ok := maxFailExpectedMap["!."]; ok {
				delete(maxFailExpectedMap, "!.")
				eof = true
			}
			for k := range maxFailExpectedMap {
				expected = append(expected, k)
			}
			sort.Strings(expected)
			if eof {
				expected = append(expected, "EOF")
			}
			p.addErrAt(errors.New("no match found, expected: "+listJoin(expected, ", ", "or")), p.maxFailPos, expected)
		}

		return nil, p.errs.err()
	}
	return val, p.errs.err()
}

func listJoin(list []string, sep string, lastSep string) string {
	switch len(list) {
	case 0:
		return ""
	case 1:
		return list[0]
	default:
		return fmt.Sprintf("%s %s %s", strings.Join(list[:len(list)-1], sep), lastSep, list[len(list)-1])
	}
}

func (p *parser) parseRule(rule *rule) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseRule " + rule.name))
	}

	if p.memoize {
		res, ok := p.getMemoized(rule)
		if ok {
			p.restore(res.end)
			return res.v, res.b
		}
	}

	start := p.pt
	p.rstack = append(p.rstack, rule)
	p.pushV()
	val, ok := p.parseExpr(rule.expr)
	p.popV()
	p.rstack = p.rstack[:len(p.rstack)-1]
	if ok && p.debug {
		p.print(strings.Repeat(" ", p.depth)+"MATCH", string(p.sliceFrom(start)))
	}

	if p.memoize {
		p.setMemoized(start, rule, resultTuple{val, ok, p.pt})
	}
	return val, ok
}

func (p *parser) parseExpr(expr interface{}) (interface{}, bool) {
	var pt savepoint

	if p.memoize {
		res, ok := p.getMemoized(expr)
		if ok {
			p.restore(res.end)
			return res.v, res.b
		}
		pt = p.pt
	}

	p.ExprCnt++
	if p.ExprCnt > p.maxExprCnt {
		panic(errMaxExprCnt)
	}

	var val interface{}
	var ok bool
	switch expr := expr.(type) {
	case *actionExpr:
		val, ok = p.parseActionExpr(expr)
	case *andCodeExpr:
		val, ok = p.parseAndCodeExpr(expr)
	case *andExpr:
		val, ok = p.parseAndExpr(expr)
	case *anyMatcher:
		val, ok = p.parseAnyMatcher(expr)
	case *charClassMatcher:
		val, ok = p.parseCharClassMatcher(expr)
	case *choiceExpr:
		val, ok = p.parseChoiceExpr(expr)
	case *labeledExpr:
		val, ok = p.parseLabeledExpr(expr)
	case *litMatcher:
		val, ok = p.parseLitMatcher(expr)
	case *notCodeExpr:
		val, ok = p.parseNotCodeExpr(expr)
	case *notExpr:
		val, ok = p.parseNotExpr(expr)
	case *oneOrMoreExpr:
		val, ok = p.parseOneOrMoreExpr(expr)
	case *recoveryExpr:
		val, ok = p.parseRecoveryExpr(expr)
	case *ruleRefExpr:
		val, ok = p.parseRuleRefExpr(expr)
	case *seqExpr:
		val, ok = p.parseSeqExpr(expr)
	case *stateCodeExpr:
		val, ok = p.parseStateCodeExpr(expr)
	case *throwExpr:
		val, ok = p.parseThrowExpr(expr)
	case *zeroOrMoreExpr:
		val, ok = p.parseZeroOrMoreExpr(expr)
	case *zeroOrOneExpr:
		val, ok = p.parseZeroOrOneExpr(expr)
	default:
		panic(fmt.Sprintf("unknown expression type %T", expr))
	}
	if p.memoize {
		p.setMemoized(pt, expr, resultTuple{val, ok, p.pt})
	}
	return val, ok
}

func (p *parser) parseActionExpr(act *actionExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseActionExpr"))
	}

	start := p.pt
	val, ok := p.parseExpr(act.expr)
	if ok {
		p.cur.pos = start.position
		p.cur.text = p.sliceFrom(start)
		state := p.cloneState()
		actVal, err := act.run(p)
		if err != nil {
			p.addErrAt(err, start.position, []string{})
		}
		p.restoreState(state)

		val = actVal
	}
	if ok && p.debug {
		p.print(strings.Repeat(" ", p.depth)+"MATCH", string(p.sliceFrom(start)))
	}
	return val, ok
}

func (p *parser) parseAndCodeExpr(and *andCodeExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseAndCodeExpr"))
	}

	state := p.cloneState()

	ok, err := and.run(p)
	if err != nil {
		p.addErr(err)
	}
	p.restoreState(state)

	return nil, ok
}

func (p *parser) parseAndExpr(and *andExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseAndExpr"))
	}

	pt := p.pt
	state := p.cloneState()
	p.pushV()
	_, ok := p.parseExpr(and.expr)
	p.popV()
	p.restoreState(state)
	p.restore(pt)

	return nil, ok
}

func (p *parser) parseAnyMatcher(any *anyMatcher) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseAnyMatcher"))
	}

	if p.pt.rn == utf8.RuneError && p.pt.w == 0 {
		// EOF - see utf8.DecodeRune
		p.failAt(false, p.pt.position, ".")
		return nil, false
	}
	start := p.pt
	p.read()
	p.failAt(true, start.position, ".")
	return p.sliceFrom(start), true
}

func (p *parser) parseCharClassMatcher(chr *charClassMatcher) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseCharClassMatcher"))
	}

	cur := p.pt.rn
	start := p.pt

	// can't match EOF
	if cur == utf8.RuneError && p.pt.w == 0 { // see utf8.DecodeRune
		p.failAt(false, start.position, chr.val)
		return nil, false
	}

	if chr.ignoreCase {
		cur = unicode.ToLower(cur)
	}

	// try to match in the list of available chars
	for _, rn := range chr.chars {
		if rn == cur {
			if chr.inverted {
				p.failAt(false, start.position, chr.val)
				return nil, false
			}
			p.read()
			p.failAt(true, start.position, chr.val)
			return p.sliceFrom(start), true
		}
	}

	// try to match in the list of ranges
	for i := 0; i < len(chr.ranges); i += 2 {
		if cur >= chr.ranges[i] && cur <= chr.ranges[i+1] {
			if chr.inverted {
				p.failAt(false, start.position, chr.val)
				return nil, false
			}
			p.read()
			p.failAt(true, start.position, chr.val)
			return p.sliceFrom(start), true
		}
	}

	// try to match in the list of Unicode classes
	for _, cl := range chr.classes {
		if unicode.Is(cl, cur) {
			if chr.inverted {
				p.failAt(false, start.position, chr.val)
				return nil, false
			}
			p.read()
			p.failAt(true, start.position, chr.val)
			return p.sliceFrom(start), true
		}
	}

	if chr.inverted {
		p.read()
		p.failAt(true, start.position, chr.val)
		return p.sliceFrom(start), true
	}
	p.failAt(false, start.position, chr.val)
	return nil, false
}

func (p *parser) incChoiceAltCnt(ch *choiceExpr, altI int) {
	choiceIdent := fmt.Sprintf("%s %d:%d", p.rstack[len(p.rstack)-1].name, ch.pos.line, ch.pos.col)
	m := p.ChoiceAltCnt[choiceIdent]
	if m == nil {
		m = make(map[string]int)
		p.ChoiceAltCnt[choiceIdent] = m
	}
	// We increment altI by 1, so the keys do not start at 0
	alt := strconv.Itoa(altI + 1)
	if altI == choiceNoMatch {
		alt = p.choiceNoMatch
	}
	m[alt]++
}

func (p *parser) parseChoiceExpr(ch *choiceExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseChoiceExpr"))
	}

	for altI, alt := range ch.alternatives {
		// dummy assignment to prevent compile error if optimized
		_ = altI

		state := p.cloneState()

		p.pushV()
		val, ok := p.parseExpr(alt)
		p.popV()
		if ok {
			p.incChoiceAltCnt(ch, altI)
			return val, ok
		}
		p.restoreState(state)
	}
	p.incChoiceAltCnt(ch, choiceNoMatch)
	return nil, false
}

func (p *parser) parseLabeledExpr(lab *labeledExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseLabeledExpr"))
	}

	p.pushV()
	val, ok := p.parseExpr(lab.expr)
	p.popV()
	if ok && lab.label != "" {
		m := p.vstack[len(p.vstack)-1]
		m[lab.label] = val
	}
	return val, ok
}

func (p *parser) parseLitMatcher(lit *litMatcher) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseLitMatcher"))
	}

	ignoreCase := ""
	if lit.ignoreCase {
		ignoreCase = "i"
	}
	val := fmt.Sprintf("%q%s", lit.val, ignoreCase)
	start := p.pt
	for _, want := range lit.val {
		cur := p.pt.rn
		if lit.ignoreCase {
			cur = unicode.ToLower(cur)
		}
		if cur != want {
			p.failAt(false, start.position, val)
			p.restore(start)
			return nil, false
		}
		p.read()
	}
	p.failAt(true, start.position, val)
	return p.sliceFrom(start), true
}

func (p *parser) parseNotCodeExpr(not *notCodeExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseNotCodeExpr"))
	}

	state := p.cloneState()

	ok, err := not.run(p)
	if err != nil {
		p.addErr(err)
	}
	p.restoreState(state)

	return nil, !ok
}

func (p *parser) parseNotExpr(not *notExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseNotExpr"))
	}

	pt := p.pt
	state := p.cloneState()
	p.pushV()
	p.maxFailInvertExpected = !p.maxFailInvertExpected
	_, ok := p.parseExpr(not.expr)
	p.maxFailInvertExpected = !p.maxFailInvertExpected
	p.popV()
	p.restoreState(state)
	p.restore(pt)

	return nil, !ok
}

func (p *parser) parseOneOrMoreExpr(expr *oneOrMoreExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseOneOrMoreExpr"))
	}

	var vals []interface{}

	for {
		p.pushV()
		val, ok := p.parseExpr(expr.expr)
		p.popV()
		if !ok {
			if len(vals) == 0 {
				// did not match once, no match
				return nil, false
			}
			return vals, true
		}
		vals = append(vals, val)
	}
}

func (p *parser) parseRecoveryExpr(recover *recoveryExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseRecoveryExpr (" + strings.Join(recover.failureLabel, ",") + ")"))
	}

	p.pushRecovery(recover.failureLabel, recover.recoverExpr)
	val, ok := p.parseExpr(recover.expr)
	p.popRecovery()

	return val, ok
}

func (p *parser) parseRuleRefExpr(ref *ruleRefExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseRuleRefExpr " + ref.name))
	}

	if ref.name == "" {
		panic(fmt.Sprintf("%s: invalid rule: missing name", ref.pos))
	}

	rule := p.rules[ref.name]
	if rule == nil {
		p.addErr(fmt.Errorf("undefined rule: %s", ref.name))
		return nil, false
	}
	return p.parseRule(rule)
}

func (p *parser) parseSeqExpr(seq *seqExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseSeqExpr"))
	}

	vals := make([]interface{}, 0, len(seq.exprs))

	pt := p.pt
	state := p.cloneState()
	for _, expr := range seq.exprs {
		val, ok := p.parseExpr(expr)
		if !ok {
			p.restoreState(state)
			p.restore(pt)
			return nil, false
		}
		vals = append(vals, val)
	}
	return vals, true
}

func (p *parser) parseStateCodeExpr(state *stateCodeExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseStateCodeExpr"))
	}

	err := state.run(p)
	if err != nil {
		p.addErr(err)
	}
	return nil, true
}

func (p *parser) parseThrowExpr(expr *throwExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseThrowExpr"))
	}

	for i := len(p.recoveryStack) - 1; i >= 0; i-- {
		if recoverExpr, ok := p.recoveryStack[i][expr.label]; ok {
			if val, ok := p.parseExpr(recoverExpr); ok {
				return val, ok
			}
		}
	}

	return nil, false
}

func (p *parser) parseZeroOrMoreExpr(expr *zeroOrMoreExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseZeroOrMoreExpr"))
	}

	var vals []interface{}

	for {
		p.pushV()
		val, ok := p.parseExpr(expr.expr)
		p.popV()
		if !ok {
			return vals, true
		}
		vals = append(vals, val)
	}
}

func (p *parser) parseZeroOrOneExpr(expr *zeroOrOneExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseZeroOrOneExpr"))
	}

	p.pushV()
	val, _ := p.parseExpr(expr.expr)
	p.popV()
	// whether it matched or not, consider it a match
	return val, true
}
