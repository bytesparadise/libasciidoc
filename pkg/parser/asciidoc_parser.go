// Code generated by pigeon; DO NOT EDIT.

package parser

import (
	"bytes"
	"errors"
	"fmt"
	"io"
	"io/ioutil"
	"math"
	"os"
	"sort"
	"strconv"
	"strings"
	"unicode"
	"unicode/utf8"

	"github.com/bytesparadise/libasciidoc/pkg/types"
)

// *****************************************************************************************
// This file is generated after its sibling `asciidoc-grammar.peg` file. DO NOT MODIFY !
// *****************************************************************************************

var g = &grammar{
	rules: []*rule{
		{
			name: "Document",
			pos:  position{line: 18, col: 1, offset: 504},
			expr: &actionExpr{
				pos: position{line: 18, col: 13, offset: 516},
				run: (*parser).callonDocument1,
				expr: &seqExpr{
					pos: position{line: 18, col: 13, offset: 516},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 18, col: 13, offset: 516},
							label: "frontMatter",
							expr: &zeroOrOneExpr{
								pos: position{line: 18, col: 26, offset: 529},
								expr: &ruleRefExpr{
									pos:  position{line: 18, col: 26, offset: 529},
									name: "FrontMatter",
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 18, col: 40, offset: 543},
							label: "documentHeader",
							expr: &zeroOrOneExpr{
								pos: position{line: 18, col: 56, offset: 559},
								expr: &ruleRefExpr{
									pos:  position{line: 18, col: 56, offset: 559},
									name: "DocumentHeader",
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 18, col: 73, offset: 576},
							label: "blocks",
							expr: &zeroOrMoreExpr{
								pos: position{line: 18, col: 80, offset: 583},
								expr: &choiceExpr{
									pos: position{line: 18, col: 81, offset: 584},
									alternatives: []interface{}{
										&ruleRefExpr{
											pos:  position{line: 18, col: 81, offset: 584},
											name: "Section",
										},
										&ruleRefExpr{
											pos:  position{line: 18, col: 91, offset: 594},
											name: "DocumentBlock",
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 953, col: 8, offset: 37893},
							expr: &anyMatcher{
								line: 953, col: 9, offset: 37894,
							},
						},
					},
				},
			},
		},
		{
			name: "DocumentBlock",
			pos:  position{line: 22, col: 1, offset: 698},
			expr: &actionExpr{
				pos: position{line: 22, col: 18, offset: 715},
				run: (*parser).callonDocumentBlock1,
				expr: &seqExpr{
					pos: position{line: 22, col: 18, offset: 715},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 22, col: 18, offset: 715},
							expr: &notExpr{
								pos: position{line: 953, col: 8, offset: 37893},
								expr: &anyMatcher{
									line: 953, col: 9, offset: 37894,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 23, col: 5, offset: 793},
							label: "block",
							expr: &choiceExpr{
								pos: position{line: 23, col: 12, offset: 800},
								alternatives: []interface{}{
									&actionExpr{
										pos: position{line: 914, col: 14, offset: 37155},
										run: (*parser).callonDocumentBlock8,
										expr: &seqExpr{
											pos: position{line: 914, col: 14, offset: 37155},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 914, col: 14, offset: 37155},
													expr: &notExpr{
														pos: position{line: 953, col: 8, offset: 37893},
														expr: &anyMatcher{
															line: 953, col: 9, offset: 37894,
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 914, col: 19, offset: 37160},
													expr: &choiceExpr{
														pos: position{line: 947, col: 7, offset: 37802},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 947, col: 7, offset: 37802},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 947, col: 13, offset: 37808},
																run: (*parser).callonDocumentBlock16,
																expr: &litMatcher{
																	pos:        position{line: 947, col: 13, offset: 37808},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 955, col: 8, offset: 37904},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 951, col: 12, offset: 37864},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 951, col: 21, offset: 37873},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 953, col: 8, offset: 37893},
															expr: &anyMatcher{
																line: 953, col: 9, offset: 37894,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 97, col: 33, offset: 3679},
										run: (*parser).callonDocumentBlock23,
										expr: &seqExpr{
											pos: position{line: 97, col: 33, offset: 3679},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 97, col: 33, offset: 3679},
													val:        ":",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 97, col: 37, offset: 3683},
													label: "name",
													expr: &actionExpr{
														pos: position{line: 121, col: 26, offset: 4726},
														run: (*parser).callonDocumentBlock27,
														expr: &seqExpr{
															pos: position{line: 121, col: 26, offset: 4726},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 121, col: 27, offset: 4727},
																	val:        "[_A-Za-z0-9]",
																	chars:      []rune{'_'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 121, col: 56, offset: 4756},
																	expr: &charClassMatcher{
																		pos:        position{line: 121, col: 57, offset: 4757},
																		val:        "[-A-Za-z0-9]",
																		chars:      []rune{'-'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 97, col: 66, offset: 3712},
													val:        ":",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 97, col: 70, offset: 3716},
													expr: &choiceExpr{
														pos: position{line: 947, col: 7, offset: 37802},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 947, col: 7, offset: 37802},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 947, col: 13, offset: 37808},
																run: (*parser).callonDocumentBlock36,
																expr: &litMatcher{
																	pos:        position{line: 947, col: 13, offset: 37808},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 955, col: 8, offset: 37904},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 951, col: 12, offset: 37864},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 951, col: 21, offset: 37873},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 953, col: 8, offset: 37893},
															expr: &anyMatcher{
																line: 953, col: 9, offset: 37894,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 99, col: 5, offset: 3799},
										run: (*parser).callonDocumentBlock43,
										expr: &seqExpr{
											pos: position{line: 99, col: 5, offset: 3799},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 99, col: 5, offset: 3799},
													val:        ":",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 99, col: 9, offset: 3803},
													label: "name",
													expr: &actionExpr{
														pos: position{line: 121, col: 26, offset: 4726},
														run: (*parser).callonDocumentBlock47,
														expr: &seqExpr{
															pos: position{line: 121, col: 26, offset: 4726},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 121, col: 27, offset: 4727},
																	val:        "[_A-Za-z0-9]",
																	chars:      []rune{'_'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 121, col: 56, offset: 4756},
																	expr: &charClassMatcher{
																		pos:        position{line: 121, col: 57, offset: 4757},
																		val:        "[-A-Za-z0-9]",
																		chars:      []rune{'-'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 99, col: 38, offset: 3832},
													val:        ":",
													ignoreCase: false,
												},
												&oneOrMoreExpr{
													pos: position{line: 99, col: 42, offset: 3836},
													expr: &choiceExpr{
														pos: position{line: 947, col: 7, offset: 37802},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 947, col: 7, offset: 37802},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 947, col: 13, offset: 37808},
																run: (*parser).callonDocumentBlock56,
																expr: &litMatcher{
																	pos:        position{line: 947, col: 13, offset: 37808},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 99, col: 46, offset: 3840},
													label: "value",
													expr: &actionExpr{
														pos: position{line: 125, col: 27, offset: 4849},
														run: (*parser).callonDocumentBlock59,
														expr: &zeroOrMoreExpr{
															pos: position{line: 125, col: 27, offset: 4849},
															expr: &seqExpr{
																pos: position{line: 125, col: 28, offset: 4850},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 125, col: 28, offset: 4850},
																		expr: &choiceExpr{
																			pos: position{line: 951, col: 12, offset: 37864},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 951, col: 12, offset: 37864},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 951, col: 21, offset: 37873},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&anyMatcher{
																		line: 125, col: 37, offset: 4859,
																	},
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 955, col: 8, offset: 37904},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 951, col: 12, offset: 37864},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 951, col: 21, offset: 37873},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 953, col: 8, offset: 37893},
															expr: &anyMatcher{
																line: 953, col: 9, offset: 37894,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 106, col: 53, offset: 4128},
										run: (*parser).callonDocumentBlock72,
										expr: &seqExpr{
											pos: position{line: 106, col: 53, offset: 4128},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 106, col: 53, offset: 4128},
													val:        ":!",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 106, col: 58, offset: 4133},
													label: "name",
													expr: &actionExpr{
														pos: position{line: 121, col: 26, offset: 4726},
														run: (*parser).callonDocumentBlock76,
														expr: &seqExpr{
															pos: position{line: 121, col: 26, offset: 4726},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 121, col: 27, offset: 4727},
																	val:        "[_A-Za-z0-9]",
																	chars:      []rune{'_'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 121, col: 56, offset: 4756},
																	expr: &charClassMatcher{
																		pos:        position{line: 121, col: 57, offset: 4757},
																		val:        "[-A-Za-z0-9]",
																		chars:      []rune{'-'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 106, col: 87, offset: 4162},
													val:        ":",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 106, col: 91, offset: 4166},
													expr: &choiceExpr{
														pos: position{line: 947, col: 7, offset: 37802},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 947, col: 7, offset: 37802},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 947, col: 13, offset: 37808},
																run: (*parser).callonDocumentBlock85,
																expr: &litMatcher{
																	pos:        position{line: 947, col: 13, offset: 37808},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 955, col: 8, offset: 37904},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 951, col: 12, offset: 37864},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 951, col: 21, offset: 37873},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 953, col: 8, offset: 37893},
															expr: &anyMatcher{
																line: 953, col: 9, offset: 37894,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 110, col: 49, offset: 4285},
										run: (*parser).callonDocumentBlock92,
										expr: &seqExpr{
											pos: position{line: 110, col: 49, offset: 4285},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 110, col: 49, offset: 4285},
													val:        ":",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 110, col: 53, offset: 4289},
													label: "name",
													expr: &actionExpr{
														pos: position{line: 121, col: 26, offset: 4726},
														run: (*parser).callonDocumentBlock96,
														expr: &seqExpr{
															pos: position{line: 121, col: 26, offset: 4726},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 121, col: 27, offset: 4727},
																	val:        "[_A-Za-z0-9]",
																	chars:      []rune{'_'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 121, col: 56, offset: 4756},
																	expr: &charClassMatcher{
																		pos:        position{line: 121, col: 57, offset: 4757},
																		val:        "[-A-Za-z0-9]",
																		chars:      []rune{'-'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 110, col: 82, offset: 4318},
													val:        "!:",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 110, col: 87, offset: 4323},
													expr: &choiceExpr{
														pos: position{line: 947, col: 7, offset: 37802},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 947, col: 7, offset: 37802},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 947, col: 13, offset: 37808},
																run: (*parser).callonDocumentBlock105,
																expr: &litMatcher{
																	pos:        position{line: 947, col: 13, offset: 37808},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 955, col: 8, offset: 37904},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 951, col: 12, offset: 37864},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 951, col: 21, offset: 37873},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 953, col: 8, offset: 37893},
															expr: &anyMatcher{
																line: 953, col: 9, offset: 37894,
															},
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 131, col: 25, offset: 5035},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 131, col: 25, offset: 5035},
												val:        "toc::[]",
												ignoreCase: false,
											},
											&choiceExpr{
												pos: position{line: 951, col: 12, offset: 37864},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 951, col: 12, offset: 37864},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 951, col: 21, offset: 37873},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 23, col: 103, offset: 891},
										name: "List",
									},
									&actionExpr{
										pos: position{line: 689, col: 15, offset: 28340},
										run: (*parser).callonDocumentBlock118,
										expr: &seqExpr{
											pos: position{line: 689, col: 15, offset: 28340},
											exprs: []interface{}{
												&labeledExpr{
													pos:   position{line: 689, col: 15, offset: 28340},
													label: "attributes",
													expr: &zeroOrMoreExpr{
														pos: position{line: 689, col: 26, offset: 28351},
														expr: &actionExpr{
															pos: position{line: 136, col: 21, offset: 5188},
															run: (*parser).callonDocumentBlock122,
															expr: &seqExpr{
																pos: position{line: 136, col: 21, offset: 5188},
																exprs: []interface{}{
																	&labeledExpr{
																		pos:   position{line: 136, col: 21, offset: 5188},
																		label: "attr",
																		expr: &choiceExpr{
																			pos: position{line: 136, col: 27, offset: 5194},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 145, col: 14, offset: 5645},
																					run: (*parser).callonDocumentBlock126,
																					expr: &labeledExpr{
																						pos:   position{line: 145, col: 14, offset: 5645},
																						label: "id",
																						expr: &actionExpr{
																							pos: position{line: 151, col: 20, offset: 5775},
																							run: (*parser).callonDocumentBlock128,
																							expr: &seqExpr{
																								pos: position{line: 151, col: 20, offset: 5775},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 151, col: 20, offset: 5775},
																										val:        "[[",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 151, col: 25, offset: 5780},
																										label: "id",
																										expr: &actionExpr{
																											pos: position{line: 933, col: 7, offset: 37526},
																											run: (*parser).callonDocumentBlock132,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 933, col: 7, offset: 37526},
																												expr: &seqExpr{
																													pos: position{line: 933, col: 8, offset: 37527},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 933, col: 8, offset: 37527},
																															expr: &choiceExpr{
																																pos: position{line: 951, col: 12, offset: 37864},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 951, col: 12, offset: 37864},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 951, col: 21, offset: 37873},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 933, col: 17, offset: 37536},
																															expr: &choiceExpr{
																																pos: position{line: 947, col: 7, offset: 37802},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 947, col: 7, offset: 37802},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 947, col: 13, offset: 37808},
																																		run: (*parser).callonDocumentBlock142,
																																		expr: &litMatcher{
																																			pos:        position{line: 947, col: 13, offset: 37808},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 933, col: 21, offset: 37540},
																															expr: &litMatcher{
																																pos:        position{line: 933, col: 22, offset: 37541},
																																val:        "[",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 933, col: 26, offset: 37545},
																															expr: &litMatcher{
																																pos:        position{line: 933, col: 27, offset: 37546},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 933, col: 31, offset: 37550},
																															expr: &litMatcher{
																																pos:        position{line: 933, col: 32, offset: 37551},
																																val:        "<<",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 933, col: 37, offset: 37556},
																															expr: &litMatcher{
																																pos:        position{line: 933, col: 38, offset: 37557},
																																val:        ">>",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 933, col: 42, offset: 37561,
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 151, col: 33, offset: 5788},
																										val:        "]]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 147, col: 5, offset: 5691},
																					run: (*parser).callonDocumentBlock154,
																					expr: &seqExpr{
																						pos: position{line: 147, col: 5, offset: 5691},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 147, col: 5, offset: 5691},
																								val:        "[#",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 147, col: 10, offset: 5696},
																								label: "id",
																								expr: &actionExpr{
																									pos: position{line: 933, col: 7, offset: 37526},
																									run: (*parser).callonDocumentBlock158,
																									expr: &oneOrMoreExpr{
																										pos: position{line: 933, col: 7, offset: 37526},
																										expr: &seqExpr{
																											pos: position{line: 933, col: 8, offset: 37527},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 933, col: 8, offset: 37527},
																													expr: &choiceExpr{
																														pos: position{line: 951, col: 12, offset: 37864},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 951, col: 12, offset: 37864},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 951, col: 21, offset: 37873},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 933, col: 17, offset: 37536},
																													expr: &choiceExpr{
																														pos: position{line: 947, col: 7, offset: 37802},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 947, col: 7, offset: 37802},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 947, col: 13, offset: 37808},
																																run: (*parser).callonDocumentBlock168,
																																expr: &litMatcher{
																																	pos:        position{line: 947, col: 13, offset: 37808},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 933, col: 21, offset: 37540},
																													expr: &litMatcher{
																														pos:        position{line: 933, col: 22, offset: 37541},
																														val:        "[",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 933, col: 26, offset: 37545},
																													expr: &litMatcher{
																														pos:        position{line: 933, col: 27, offset: 37546},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 933, col: 31, offset: 37550},
																													expr: &litMatcher{
																														pos:        position{line: 933, col: 32, offset: 37551},
																														val:        "<<",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 933, col: 37, offset: 37556},
																													expr: &litMatcher{
																														pos:        position{line: 933, col: 38, offset: 37557},
																														val:        ">>",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 933, col: 42, offset: 37561,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 147, col: 18, offset: 5704},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 157, col: 17, offset: 5997},
																					run: (*parser).callonDocumentBlock180,
																					expr: &seqExpr{
																						pos: position{line: 157, col: 17, offset: 5997},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 157, col: 17, offset: 5997},
																								val:        ".",
																								ignoreCase: false,
																							},
																							&notExpr{
																								pos: position{line: 157, col: 21, offset: 6001},
																								expr: &litMatcher{
																									pos:        position{line: 157, col: 22, offset: 6002},
																									val:        ".",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 157, col: 26, offset: 6006},
																								expr: &choiceExpr{
																									pos: position{line: 947, col: 7, offset: 37802},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 947, col: 7, offset: 37802},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 947, col: 13, offset: 37808},
																											run: (*parser).callonDocumentBlock188,
																											expr: &litMatcher{
																												pos:        position{line: 947, col: 13, offset: 37808},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&labeledExpr{
																								pos:   position{line: 157, col: 30, offset: 6010},
																								label: "title",
																								expr: &actionExpr{
																									pos: position{line: 161, col: 24, offset: 6115},
																									run: (*parser).callonDocumentBlock191,
																									expr: &oneOrMoreExpr{
																										pos: position{line: 161, col: 24, offset: 6115},
																										expr: &seqExpr{
																											pos: position{line: 161, col: 25, offset: 6116},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 161, col: 25, offset: 6116},
																													expr: &choiceExpr{
																														pos: position{line: 951, col: 12, offset: 37864},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 951, col: 12, offset: 37864},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 951, col: 21, offset: 37873},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																														},
																													},
																												},
																												&anyMatcher{
																													line: 161, col: 34, offset: 6125,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 167, col: 16, offset: 6274},
																					run: (*parser).callonDocumentBlock199,
																					expr: &seqExpr{
																						pos: position{line: 167, col: 16, offset: 6274},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 167, col: 16, offset: 6274},
																								val:        "[.",
																								ignoreCase: false,
																							},
																							&notExpr{
																								pos: position{line: 167, col: 21, offset: 6279},
																								expr: &choiceExpr{
																									pos: position{line: 947, col: 7, offset: 37802},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 947, col: 7, offset: 37802},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 947, col: 13, offset: 37808},
																											run: (*parser).callonDocumentBlock205,
																											expr: &litMatcher{
																												pos:        position{line: 947, col: 13, offset: 37808},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&labeledExpr{
																								pos:   position{line: 167, col: 25, offset: 6283},
																								label: "role",
																								expr: &actionExpr{
																									pos: position{line: 171, col: 23, offset: 6387},
																									run: (*parser).callonDocumentBlock208,
																									expr: &oneOrMoreExpr{
																										pos: position{line: 171, col: 23, offset: 6387},
																										expr: &seqExpr{
																											pos: position{line: 171, col: 24, offset: 6388},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 171, col: 24, offset: 6388},
																													expr: &choiceExpr{
																														pos: position{line: 951, col: 12, offset: 37864},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 951, col: 12, offset: 37864},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 951, col: 21, offset: 37873},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 171, col: 33, offset: 6397},
																													expr: &litMatcher{
																														pos:        position{line: 171, col: 34, offset: 6398},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 171, col: 38, offset: 6402,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 167, col: 51, offset: 6309},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 176, col: 30, offset: 6551},
																					run: (*parser).callonDocumentBlock219,
																					expr: &seqExpr{
																						pos: position{line: 176, col: 30, offset: 6551},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 176, col: 30, offset: 6551},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 176, col: 34, offset: 6555},
																								label: "k",
																								expr: &choiceExpr{
																									pos: position{line: 494, col: 19, offset: 19202},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 494, col: 19, offset: 19202},
																											run: (*parser).callonDocumentBlock224,
																											expr: &litMatcher{
																												pos:        position{line: 494, col: 19, offset: 19202},
																												val:        "TIP",
																												ignoreCase: false,
																											},
																										},
																										&actionExpr{
																											pos: position{line: 496, col: 5, offset: 19240},
																											run: (*parser).callonDocumentBlock226,
																											expr: &litMatcher{
																												pos:        position{line: 496, col: 5, offset: 19240},
																												val:        "NOTE",
																												ignoreCase: false,
																											},
																										},
																										&actionExpr{
																											pos: position{line: 498, col: 5, offset: 19280},
																											run: (*parser).callonDocumentBlock228,
																											expr: &litMatcher{
																												pos:        position{line: 498, col: 5, offset: 19280},
																												val:        "IMPORTANT",
																												ignoreCase: false,
																											},
																										},
																										&actionExpr{
																											pos: position{line: 500, col: 5, offset: 19330},
																											run: (*parser).callonDocumentBlock230,
																											expr: &litMatcher{
																												pos:        position{line: 500, col: 5, offset: 19330},
																												val:        "WARNING",
																												ignoreCase: false,
																											},
																										},
																										&actionExpr{
																											pos: position{line: 502, col: 5, offset: 19376},
																											run: (*parser).callonDocumentBlock232,
																											expr: &litMatcher{
																												pos:        position{line: 502, col: 5, offset: 19376},
																												val:        "CAUTION",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 176, col: 53, offset: 6574},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 199, col: 21, offset: 7299},
																					run: (*parser).callonDocumentBlock235,
																					expr: &litMatcher{
																						pos:        position{line: 199, col: 21, offset: 7299},
																						val:        "[horizontal]",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 181, col: 19, offset: 6735},
																					run: (*parser).callonDocumentBlock237,
																					expr: &seqExpr{
																						pos: position{line: 181, col: 19, offset: 6735},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 181, col: 19, offset: 6735},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&notExpr{
																								pos: position{line: 181, col: 23, offset: 6739},
																								expr: &choiceExpr{
																									pos: position{line: 947, col: 7, offset: 37802},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 947, col: 7, offset: 37802},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 947, col: 13, offset: 37808},
																											run: (*parser).callonDocumentBlock243,
																											expr: &litMatcher{
																												pos:        position{line: 947, col: 13, offset: 37808},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&labeledExpr{
																								pos:   position{line: 181, col: 27, offset: 6743},
																								label: "attributes",
																								expr: &zeroOrMoreExpr{
																									pos: position{line: 181, col: 38, offset: 6754},
																									expr: &choiceExpr{
																										pos: position{line: 185, col: 21, offset: 6867},
																										alternatives: []interface{}{
																											&actionExpr{
																												pos: position{line: 185, col: 21, offset: 6867},
																												run: (*parser).callonDocumentBlock248,
																												expr: &seqExpr{
																													pos: position{line: 185, col: 21, offset: 6867},
																													exprs: []interface{}{
																														&labeledExpr{
																															pos:   position{line: 185, col: 21, offset: 6867},
																															label: "key",
																															expr: &actionExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																run: (*parser).callonDocumentBlock251,
																																expr: &seqExpr{
																																	pos: position{line: 191, col: 17, offset: 7127},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 191, col: 17, offset: 7127},
																																			expr: &actionExpr{
																																				pos: position{line: 231, col: 14, offset: 8648},
																																				run: (*parser).callonDocumentBlock254,
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 14, offset: 8648},
																																					val:        "verse",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																		&labeledExpr{
																																			pos:   position{line: 191, col: 28, offset: 7138},
																																			label: "key",
																																			expr: &oneOrMoreExpr{
																																				pos: position{line: 191, col: 32, offset: 7142},
																																				expr: &seqExpr{
																																					pos: position{line: 191, col: 33, offset: 7143},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 191, col: 33, offset: 7143},
																																							expr: &litMatcher{
																																								pos:        position{line: 191, col: 34, offset: 7144},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 191, col: 38, offset: 7148},
																																							expr: &litMatcher{
																																								pos:        position{line: 191, col: 39, offset: 7149},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 191, col: 43, offset: 7153},
																																							expr: &litMatcher{
																																								pos:        position{line: 191, col: 44, offset: 7154},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 191, col: 48, offset: 7158,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&litMatcher{
																															pos:        position{line: 185, col: 40, offset: 6886},
																															val:        "=",
																															ignoreCase: false,
																														},
																														&labeledExpr{
																															pos:   position{line: 185, col: 44, offset: 6890},
																															label: "value",
																															expr: &actionExpr{
																																pos: position{line: 195, col: 19, offset: 7217},
																																run: (*parser).callonDocumentBlock268,
																																expr: &labeledExpr{
																																	pos:   position{line: 195, col: 19, offset: 7217},
																																	label: "value",
																																	expr: &zeroOrMoreExpr{
																																		pos: position{line: 195, col: 25, offset: 7223},
																																		expr: &seqExpr{
																																			pos: position{line: 195, col: 26, offset: 7224},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 195, col: 26, offset: 7224},
																																					expr: &litMatcher{
																																						pos:        position{line: 195, col: 27, offset: 7225},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 195, col: 31, offset: 7229},
																																					expr: &litMatcher{
																																						pos:        position{line: 195, col: 32, offset: 7230},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 195, col: 36, offset: 7234},
																																					expr: &litMatcher{
																																						pos:        position{line: 195, col: 37, offset: 7235},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 195, col: 41, offset: 7239,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&zeroOrOneExpr{
																															pos: position{line: 185, col: 67, offset: 6913},
																															expr: &litMatcher{
																																pos:        position{line: 185, col: 67, offset: 6913},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&zeroOrMoreExpr{
																															pos: position{line: 185, col: 72, offset: 6918},
																															expr: &choiceExpr{
																																pos: position{line: 947, col: 7, offset: 37802},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 947, col: 7, offset: 37802},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 947, col: 13, offset: 37808},
																																		run: (*parser).callonDocumentBlock284,
																																		expr: &litMatcher{
																																			pos:        position{line: 947, col: 13, offset: 37808},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&actionExpr{
																												pos: position{line: 187, col: 5, offset: 7002},
																												run: (*parser).callonDocumentBlock286,
																												expr: &seqExpr{
																													pos: position{line: 187, col: 5, offset: 7002},
																													exprs: []interface{}{
																														&labeledExpr{
																															pos:   position{line: 187, col: 5, offset: 7002},
																															label: "key",
																															expr: &actionExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																run: (*parser).callonDocumentBlock289,
																																expr: &seqExpr{
																																	pos: position{line: 191, col: 17, offset: 7127},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 191, col: 17, offset: 7127},
																																			expr: &actionExpr{
																																				pos: position{line: 231, col: 14, offset: 8648},
																																				run: (*parser).callonDocumentBlock292,
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 14, offset: 8648},
																																					val:        "verse",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																		&labeledExpr{
																																			pos:   position{line: 191, col: 28, offset: 7138},
																																			label: "key",
																																			expr: &oneOrMoreExpr{
																																				pos: position{line: 191, col: 32, offset: 7142},
																																				expr: &seqExpr{
																																					pos: position{line: 191, col: 33, offset: 7143},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 191, col: 33, offset: 7143},
																																							expr: &litMatcher{
																																								pos:        position{line: 191, col: 34, offset: 7144},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 191, col: 38, offset: 7148},
																																							expr: &litMatcher{
																																								pos:        position{line: 191, col: 39, offset: 7149},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 191, col: 43, offset: 7153},
																																							expr: &litMatcher{
																																								pos:        position{line: 191, col: 44, offset: 7154},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 191, col: 48, offset: 7158,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&zeroOrOneExpr{
																															pos: position{line: 187, col: 24, offset: 7021},
																															expr: &litMatcher{
																																pos:        position{line: 187, col: 24, offset: 7021},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&zeroOrMoreExpr{
																															pos: position{line: 187, col: 29, offset: 7026},
																															expr: &choiceExpr{
																																pos: position{line: 947, col: 7, offset: 37802},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 947, col: 7, offset: 37802},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 947, col: 13, offset: 37808},
																																		run: (*parser).callonDocumentBlock309,
																																		expr: &litMatcher{
																																			pos:        position{line: 947, col: 13, offset: 37808},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 181, col: 59, offset: 6775},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 136, col: 131, offset: 5298},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonDocumentBlock315,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&choiceExpr{
																		pos: position{line: 955, col: 8, offset: 37904},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 951, col: 12, offset: 37864},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 951, col: 21, offset: 37873},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																			&notExpr{
																				pos: position{line: 953, col: 8, offset: 37893},
																				expr: &anyMatcher{
																					line: 953, col: 9, offset: 37894,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 689, col: 46, offset: 28371},
													val:        "image::",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 689, col: 56, offset: 28381},
													label: "path",
													expr: &actionExpr{
														pos: position{line: 929, col: 8, offset: 37456},
														run: (*parser).callonDocumentBlock324,
														expr: &oneOrMoreExpr{
															pos: position{line: 929, col: 8, offset: 37456},
															expr: &seqExpr{
																pos: position{line: 929, col: 9, offset: 37457},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 929, col: 9, offset: 37457},
																		expr: &choiceExpr{
																			pos: position{line: 951, col: 12, offset: 37864},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 951, col: 12, offset: 37864},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 951, col: 21, offset: 37873},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 929, col: 18, offset: 37466},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonDocumentBlock334,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 929, col: 22, offset: 37470},
																		expr: &litMatcher{
																			pos:        position{line: 929, col: 23, offset: 37471},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 929, col: 27, offset: 37475},
																		expr: &litMatcher{
																			pos:        position{line: 929, col: 28, offset: 37476},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 929, col: 32, offset: 37480,
																	},
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 689, col: 67, offset: 28392},
													label: "inlineAttributes",
													expr: &choiceExpr{
														pos: position{line: 698, col: 20, offset: 28843},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 698, col: 20, offset: 28843},
																run: (*parser).callonDocumentBlock343,
																expr: &seqExpr{
																	pos: position{line: 698, col: 20, offset: 28843},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 698, col: 20, offset: 28843},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 698, col: 24, offset: 28847},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 715, col: 19, offset: 29622},
																				run: (*parser).callonDocumentBlock347,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 715, col: 19, offset: 29622},
																					expr: &seqExpr{
																						pos: position{line: 715, col: 20, offset: 29623},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 715, col: 20, offset: 29623},
																								expr: &litMatcher{
																									pos:        position{line: 715, col: 21, offset: 29624},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 715, col: 25, offset: 29628},
																								expr: &litMatcher{
																									pos:        position{line: 715, col: 26, offset: 29629},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 715, col: 30, offset: 29633},
																								expr: &litMatcher{
																									pos:        position{line: 715, col: 31, offset: 29634},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 715, col: 35, offset: 29638,
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 698, col: 45, offset: 28868},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 699, col: 9, offset: 28880},
																			label: "width",
																			expr: &actionExpr{
																				pos: position{line: 715, col: 19, offset: 29622},
																				run: (*parser).callonDocumentBlock359,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 715, col: 19, offset: 29622},
																					expr: &seqExpr{
																						pos: position{line: 715, col: 20, offset: 29623},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 715, col: 20, offset: 29623},
																								expr: &litMatcher{
																									pos:        position{line: 715, col: 21, offset: 29624},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 715, col: 25, offset: 29628},
																								expr: &litMatcher{
																									pos:        position{line: 715, col: 26, offset: 29629},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 715, col: 30, offset: 29633},
																								expr: &litMatcher{
																									pos:        position{line: 715, col: 31, offset: 29634},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 715, col: 35, offset: 29638,
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 699, col: 33, offset: 28904},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 700, col: 9, offset: 28916},
																			label: "height",
																			expr: &actionExpr{
																				pos: position{line: 715, col: 19, offset: 29622},
																				run: (*parser).callonDocumentBlock371,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 715, col: 19, offset: 29622},
																					expr: &seqExpr{
																						pos: position{line: 715, col: 20, offset: 29623},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 715, col: 20, offset: 29623},
																								expr: &litMatcher{
																									pos:        position{line: 715, col: 21, offset: 29624},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 715, col: 25, offset: 29628},
																								expr: &litMatcher{
																									pos:        position{line: 715, col: 26, offset: 29629},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 715, col: 30, offset: 29633},
																								expr: &litMatcher{
																									pos:        position{line: 715, col: 31, offset: 29634},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 715, col: 35, offset: 29638,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 700, col: 33, offset: 28940},
																			expr: &litMatcher{
																				pos:        position{line: 700, col: 33, offset: 28940},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 701, col: 9, offset: 28953},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 701, col: 20, offset: 28964},
																				expr: &choiceExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							run: (*parser).callonDocumentBlock386,
																							expr: &seqExpr{
																								pos: position{line: 185, col: 21, offset: 6867},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 185, col: 21, offset: 6867},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											run: (*parser).callonDocumentBlock389,
																											expr: &seqExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														expr: &actionExpr{
																															pos: position{line: 231, col: 14, offset: 8648},
																															run: (*parser).callonDocumentBlock392,
																															expr: &litMatcher{
																																pos:        position{line: 231, col: 14, offset: 8648},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 191, col: 28, offset: 7138},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 191, col: 32, offset: 7142},
																															expr: &seqExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 34, offset: 7144},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 38, offset: 7148},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 39, offset: 7149},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 43, offset: 7153},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 44, offset: 7154},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 191, col: 48, offset: 7158,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 185, col: 40, offset: 6886},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 185, col: 44, offset: 6890},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 195, col: 19, offset: 7217},
																											run: (*parser).callonDocumentBlock406,
																											expr: &labeledExpr{
																												pos:   position{line: 195, col: 19, offset: 7217},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 195, col: 25, offset: 7223},
																													expr: &seqExpr{
																														pos: position{line: 195, col: 26, offset: 7224},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 195, col: 26, offset: 7224},
																																expr: &litMatcher{
																																	pos:        position{line: 195, col: 27, offset: 7225},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 195, col: 31, offset: 7229},
																																expr: &litMatcher{
																																	pos:        position{line: 195, col: 32, offset: 7230},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 195, col: 36, offset: 7234},
																																expr: &litMatcher{
																																	pos:        position{line: 195, col: 37, offset: 7235},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 195, col: 41, offset: 7239,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 185, col: 67, offset: 6913},
																										expr: &litMatcher{
																											pos:        position{line: 185, col: 67, offset: 6913},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 185, col: 72, offset: 6918},
																										expr: &choiceExpr{
																											pos: position{line: 947, col: 7, offset: 37802},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 947, col: 7, offset: 37802},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 947, col: 13, offset: 37808},
																													run: (*parser).callonDocumentBlock422,
																													expr: &litMatcher{
																														pos:        position{line: 947, col: 13, offset: 37808},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							run: (*parser).callonDocumentBlock424,
																							expr: &seqExpr{
																								pos: position{line: 187, col: 5, offset: 7002},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 187, col: 5, offset: 7002},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											run: (*parser).callonDocumentBlock427,
																											expr: &seqExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														expr: &actionExpr{
																															pos: position{line: 231, col: 14, offset: 8648},
																															run: (*parser).callonDocumentBlock430,
																															expr: &litMatcher{
																																pos:        position{line: 231, col: 14, offset: 8648},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 191, col: 28, offset: 7138},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 191, col: 32, offset: 7142},
																															expr: &seqExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 34, offset: 7144},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 38, offset: 7148},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 39, offset: 7149},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 43, offset: 7153},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 44, offset: 7154},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 191, col: 48, offset: 7158,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 187, col: 24, offset: 7021},
																										expr: &litMatcher{
																											pos:        position{line: 187, col: 24, offset: 7021},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 187, col: 29, offset: 7026},
																										expr: &choiceExpr{
																											pos: position{line: 947, col: 7, offset: 37802},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 947, col: 7, offset: 37802},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 947, col: 13, offset: 37808},
																													run: (*parser).callonDocumentBlock447,
																													expr: &litMatcher{
																														pos:        position{line: 947, col: 13, offset: 37808},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 701, col: 40, offset: 28984},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 703, col: 9, offset: 29090},
																run: (*parser).callonDocumentBlock450,
																expr: &seqExpr{
																	pos: position{line: 703, col: 9, offset: 29090},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 703, col: 9, offset: 29090},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 703, col: 13, offset: 29094},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 715, col: 19, offset: 29622},
																				run: (*parser).callonDocumentBlock454,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 715, col: 19, offset: 29622},
																					expr: &seqExpr{
																						pos: position{line: 715, col: 20, offset: 29623},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 715, col: 20, offset: 29623},
																								expr: &litMatcher{
																									pos:        position{line: 715, col: 21, offset: 29624},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 715, col: 25, offset: 29628},
																								expr: &litMatcher{
																									pos:        position{line: 715, col: 26, offset: 29629},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 715, col: 30, offset: 29633},
																								expr: &litMatcher{
																									pos:        position{line: 715, col: 31, offset: 29634},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 715, col: 35, offset: 29638,
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 703, col: 34, offset: 29115},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 704, col: 9, offset: 29127},
																			label: "width",
																			expr: &actionExpr{
																				pos: position{line: 715, col: 19, offset: 29622},
																				run: (*parser).callonDocumentBlock466,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 715, col: 19, offset: 29622},
																					expr: &seqExpr{
																						pos: position{line: 715, col: 20, offset: 29623},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 715, col: 20, offset: 29623},
																								expr: &litMatcher{
																									pos:        position{line: 715, col: 21, offset: 29624},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 715, col: 25, offset: 29628},
																								expr: &litMatcher{
																									pos:        position{line: 715, col: 26, offset: 29629},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 715, col: 30, offset: 29633},
																								expr: &litMatcher{
																									pos:        position{line: 715, col: 31, offset: 29634},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 715, col: 35, offset: 29638,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 704, col: 32, offset: 29150},
																			expr: &litMatcher{
																				pos:        position{line: 704, col: 32, offset: 29150},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 705, col: 9, offset: 29163},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 705, col: 20, offset: 29174},
																				expr: &choiceExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							run: (*parser).callonDocumentBlock481,
																							expr: &seqExpr{
																								pos: position{line: 185, col: 21, offset: 6867},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 185, col: 21, offset: 6867},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											run: (*parser).callonDocumentBlock484,
																											expr: &seqExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														expr: &actionExpr{
																															pos: position{line: 231, col: 14, offset: 8648},
																															run: (*parser).callonDocumentBlock487,
																															expr: &litMatcher{
																																pos:        position{line: 231, col: 14, offset: 8648},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 191, col: 28, offset: 7138},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 191, col: 32, offset: 7142},
																															expr: &seqExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 34, offset: 7144},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 38, offset: 7148},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 39, offset: 7149},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 43, offset: 7153},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 44, offset: 7154},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 191, col: 48, offset: 7158,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 185, col: 40, offset: 6886},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 185, col: 44, offset: 6890},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 195, col: 19, offset: 7217},
																											run: (*parser).callonDocumentBlock501,
																											expr: &labeledExpr{
																												pos:   position{line: 195, col: 19, offset: 7217},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 195, col: 25, offset: 7223},
																													expr: &seqExpr{
																														pos: position{line: 195, col: 26, offset: 7224},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 195, col: 26, offset: 7224},
																																expr: &litMatcher{
																																	pos:        position{line: 195, col: 27, offset: 7225},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 195, col: 31, offset: 7229},
																																expr: &litMatcher{
																																	pos:        position{line: 195, col: 32, offset: 7230},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 195, col: 36, offset: 7234},
																																expr: &litMatcher{
																																	pos:        position{line: 195, col: 37, offset: 7235},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 195, col: 41, offset: 7239,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 185, col: 67, offset: 6913},
																										expr: &litMatcher{
																											pos:        position{line: 185, col: 67, offset: 6913},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 185, col: 72, offset: 6918},
																										expr: &choiceExpr{
																											pos: position{line: 947, col: 7, offset: 37802},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 947, col: 7, offset: 37802},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 947, col: 13, offset: 37808},
																													run: (*parser).callonDocumentBlock517,
																													expr: &litMatcher{
																														pos:        position{line: 947, col: 13, offset: 37808},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							run: (*parser).callonDocumentBlock519,
																							expr: &seqExpr{
																								pos: position{line: 187, col: 5, offset: 7002},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 187, col: 5, offset: 7002},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											run: (*parser).callonDocumentBlock522,
																											expr: &seqExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														expr: &actionExpr{
																															pos: position{line: 231, col: 14, offset: 8648},
																															run: (*parser).callonDocumentBlock525,
																															expr: &litMatcher{
																																pos:        position{line: 231, col: 14, offset: 8648},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 191, col: 28, offset: 7138},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 191, col: 32, offset: 7142},
																															expr: &seqExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 34, offset: 7144},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 38, offset: 7148},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 39, offset: 7149},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 43, offset: 7153},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 44, offset: 7154},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 191, col: 48, offset: 7158,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 187, col: 24, offset: 7021},
																										expr: &litMatcher{
																											pos:        position{line: 187, col: 24, offset: 7021},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 187, col: 29, offset: 7026},
																										expr: &choiceExpr{
																											pos: position{line: 947, col: 7, offset: 37802},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 947, col: 7, offset: 37802},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 947, col: 13, offset: 37808},
																													run: (*parser).callonDocumentBlock542,
																													expr: &litMatcher{
																														pos:        position{line: 947, col: 13, offset: 37808},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 705, col: 40, offset: 29194},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 707, col: 9, offset: 29297},
																run: (*parser).callonDocumentBlock545,
																expr: &seqExpr{
																	pos: position{line: 707, col: 9, offset: 29297},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 707, col: 9, offset: 29297},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 707, col: 13, offset: 29301},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 715, col: 19, offset: 29622},
																				run: (*parser).callonDocumentBlock549,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 715, col: 19, offset: 29622},
																					expr: &seqExpr{
																						pos: position{line: 715, col: 20, offset: 29623},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 715, col: 20, offset: 29623},
																								expr: &litMatcher{
																									pos:        position{line: 715, col: 21, offset: 29624},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 715, col: 25, offset: 29628},
																								expr: &litMatcher{
																									pos:        position{line: 715, col: 26, offset: 29629},
																									val:        "=",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 715, col: 30, offset: 29633},
																								expr: &litMatcher{
																									pos:        position{line: 715, col: 31, offset: 29634},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 715, col: 35, offset: 29638,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 707, col: 34, offset: 29322},
																			expr: &litMatcher{
																				pos:        position{line: 707, col: 34, offset: 29322},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 708, col: 9, offset: 29335},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 708, col: 20, offset: 29346},
																				expr: &choiceExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							run: (*parser).callonDocumentBlock564,
																							expr: &seqExpr{
																								pos: position{line: 185, col: 21, offset: 6867},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 185, col: 21, offset: 6867},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											run: (*parser).callonDocumentBlock567,
																											expr: &seqExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														expr: &actionExpr{
																															pos: position{line: 231, col: 14, offset: 8648},
																															run: (*parser).callonDocumentBlock570,
																															expr: &litMatcher{
																																pos:        position{line: 231, col: 14, offset: 8648},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 191, col: 28, offset: 7138},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 191, col: 32, offset: 7142},
																															expr: &seqExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 34, offset: 7144},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 38, offset: 7148},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 39, offset: 7149},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 43, offset: 7153},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 44, offset: 7154},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 191, col: 48, offset: 7158,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 185, col: 40, offset: 6886},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 185, col: 44, offset: 6890},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 195, col: 19, offset: 7217},
																											run: (*parser).callonDocumentBlock584,
																											expr: &labeledExpr{
																												pos:   position{line: 195, col: 19, offset: 7217},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 195, col: 25, offset: 7223},
																													expr: &seqExpr{
																														pos: position{line: 195, col: 26, offset: 7224},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 195, col: 26, offset: 7224},
																																expr: &litMatcher{
																																	pos:        position{line: 195, col: 27, offset: 7225},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 195, col: 31, offset: 7229},
																																expr: &litMatcher{
																																	pos:        position{line: 195, col: 32, offset: 7230},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 195, col: 36, offset: 7234},
																																expr: &litMatcher{
																																	pos:        position{line: 195, col: 37, offset: 7235},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 195, col: 41, offset: 7239,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 185, col: 67, offset: 6913},
																										expr: &litMatcher{
																											pos:        position{line: 185, col: 67, offset: 6913},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 185, col: 72, offset: 6918},
																										expr: &choiceExpr{
																											pos: position{line: 947, col: 7, offset: 37802},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 947, col: 7, offset: 37802},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 947, col: 13, offset: 37808},
																													run: (*parser).callonDocumentBlock600,
																													expr: &litMatcher{
																														pos:        position{line: 947, col: 13, offset: 37808},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							run: (*parser).callonDocumentBlock602,
																							expr: &seqExpr{
																								pos: position{line: 187, col: 5, offset: 7002},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 187, col: 5, offset: 7002},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											run: (*parser).callonDocumentBlock605,
																											expr: &seqExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														expr: &actionExpr{
																															pos: position{line: 231, col: 14, offset: 8648},
																															run: (*parser).callonDocumentBlock608,
																															expr: &litMatcher{
																																pos:        position{line: 231, col: 14, offset: 8648},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 191, col: 28, offset: 7138},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 191, col: 32, offset: 7142},
																															expr: &seqExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 34, offset: 7144},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 38, offset: 7148},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 39, offset: 7149},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 43, offset: 7153},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 44, offset: 7154},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 191, col: 48, offset: 7158,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 187, col: 24, offset: 7021},
																										expr: &litMatcher{
																											pos:        position{line: 187, col: 24, offset: 7021},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 187, col: 29, offset: 7026},
																										expr: &choiceExpr{
																											pos: position{line: 947, col: 7, offset: 37802},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 947, col: 7, offset: 37802},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 947, col: 13, offset: 37808},
																													run: (*parser).callonDocumentBlock625,
																													expr: &litMatcher{
																														pos:        position{line: 947, col: 13, offset: 37808},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 708, col: 40, offset: 29366},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 710, col: 9, offset: 29467},
																run: (*parser).callonDocumentBlock628,
																expr: &seqExpr{
																	pos: position{line: 710, col: 9, offset: 29467},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 710, col: 9, offset: 29467},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 710, col: 13, offset: 29471},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 710, col: 24, offset: 29482},
																				expr: &choiceExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							run: (*parser).callonDocumentBlock634,
																							expr: &seqExpr{
																								pos: position{line: 185, col: 21, offset: 6867},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 185, col: 21, offset: 6867},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											run: (*parser).callonDocumentBlock637,
																											expr: &seqExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														expr: &actionExpr{
																															pos: position{line: 231, col: 14, offset: 8648},
																															run: (*parser).callonDocumentBlock640,
																															expr: &litMatcher{
																																pos:        position{line: 231, col: 14, offset: 8648},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 191, col: 28, offset: 7138},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 191, col: 32, offset: 7142},
																															expr: &seqExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 34, offset: 7144},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 38, offset: 7148},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 39, offset: 7149},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 43, offset: 7153},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 44, offset: 7154},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 191, col: 48, offset: 7158,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 185, col: 40, offset: 6886},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 185, col: 44, offset: 6890},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 195, col: 19, offset: 7217},
																											run: (*parser).callonDocumentBlock654,
																											expr: &labeledExpr{
																												pos:   position{line: 195, col: 19, offset: 7217},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 195, col: 25, offset: 7223},
																													expr: &seqExpr{
																														pos: position{line: 195, col: 26, offset: 7224},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 195, col: 26, offset: 7224},
																																expr: &litMatcher{
																																	pos:        position{line: 195, col: 27, offset: 7225},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 195, col: 31, offset: 7229},
																																expr: &litMatcher{
																																	pos:        position{line: 195, col: 32, offset: 7230},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 195, col: 36, offset: 7234},
																																expr: &litMatcher{
																																	pos:        position{line: 195, col: 37, offset: 7235},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 195, col: 41, offset: 7239,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 185, col: 67, offset: 6913},
																										expr: &litMatcher{
																											pos:        position{line: 185, col: 67, offset: 6913},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 185, col: 72, offset: 6918},
																										expr: &choiceExpr{
																											pos: position{line: 947, col: 7, offset: 37802},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 947, col: 7, offset: 37802},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 947, col: 13, offset: 37808},
																													run: (*parser).callonDocumentBlock670,
																													expr: &litMatcher{
																														pos:        position{line: 947, col: 13, offset: 37808},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							run: (*parser).callonDocumentBlock672,
																							expr: &seqExpr{
																								pos: position{line: 187, col: 5, offset: 7002},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 187, col: 5, offset: 7002},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											run: (*parser).callonDocumentBlock675,
																											expr: &seqExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														expr: &actionExpr{
																															pos: position{line: 231, col: 14, offset: 8648},
																															run: (*parser).callonDocumentBlock678,
																															expr: &litMatcher{
																																pos:        position{line: 231, col: 14, offset: 8648},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 191, col: 28, offset: 7138},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 191, col: 32, offset: 7142},
																															expr: &seqExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 34, offset: 7144},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 38, offset: 7148},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 39, offset: 7149},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 191, col: 43, offset: 7153},
																																		expr: &litMatcher{
																																			pos:        position{line: 191, col: 44, offset: 7154},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 191, col: 48, offset: 7158,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 187, col: 24, offset: 7021},
																										expr: &litMatcher{
																											pos:        position{line: 187, col: 24, offset: 7021},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 187, col: 29, offset: 7026},
																										expr: &choiceExpr{
																											pos: position{line: 947, col: 7, offset: 37802},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 947, col: 7, offset: 37802},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 947, col: 13, offset: 37808},
																													run: (*parser).callonDocumentBlock695,
																													expr: &litMatcher{
																														pos:        position{line: 947, col: 13, offset: 37808},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 710, col: 44, offset: 29502},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 689, col: 102, offset: 28427},
													expr: &choiceExpr{
														pos: position{line: 947, col: 7, offset: 37802},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 947, col: 7, offset: 37802},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 947, col: 13, offset: 37808},
																run: (*parser).callonDocumentBlock701,
																expr: &litMatcher{
																	pos:        position{line: 947, col: 13, offset: 37808},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 955, col: 8, offset: 37904},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 951, col: 12, offset: 37864},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 951, col: 21, offset: 37873},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 953, col: 8, offset: 37893},
															expr: &anyMatcher{
																line: 953, col: 9, offset: 37894,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 881, col: 24, offset: 35962},
										run: (*parser).callonDocumentBlock708,
										expr: &seqExpr{
											pos: position{line: 881, col: 24, offset: 35962},
											exprs: []interface{}{
												&labeledExpr{
													pos:   position{line: 881, col: 24, offset: 35962},
													label: "content",
													expr: &actionExpr{
														pos: position{line: 886, col: 31, offset: 36165},
														run: (*parser).callonDocumentBlock711,
														expr: &seqExpr{
															pos: position{line: 886, col: 31, offset: 36165},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 886, col: 31, offset: 36165},
																	expr: &choiceExpr{
																		pos: position{line: 947, col: 7, offset: 37802},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 947, col: 7, offset: 37802},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 947, col: 13, offset: 37808},
																				run: (*parser).callonDocumentBlock716,
																				expr: &litMatcher{
																					pos:        position{line: 947, col: 13, offset: 37808},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 886, col: 35, offset: 36169},
																	expr: &choiceExpr{
																		pos: position{line: 951, col: 12, offset: 37864},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 951, col: 12, offset: 37864},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 951, col: 21, offset: 37873},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&oneOrMoreExpr{
																	pos: position{line: 886, col: 44, offset: 36178},
																	expr: &seqExpr{
																		pos: position{line: 886, col: 45, offset: 36179},
																		exprs: []interface{}{
																			&notExpr{
																				pos: position{line: 886, col: 45, offset: 36179},
																				expr: &seqExpr{
																					pos: position{line: 886, col: 47, offset: 36181},
																					exprs: []interface{}{
																						&choiceExpr{
																							pos: position{line: 951, col: 12, offset: 37864},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 951, col: 12, offset: 37864},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 951, col: 21, offset: 37873},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 914, col: 14, offset: 37155},
																							run: (*parser).callonDocumentBlock729,
																							expr: &seqExpr{
																								pos: position{line: 914, col: 14, offset: 37155},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 914, col: 14, offset: 37155},
																										expr: &notExpr{
																											pos: position{line: 953, col: 8, offset: 37893},
																											expr: &anyMatcher{
																												line: 953, col: 9, offset: 37894,
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 914, col: 19, offset: 37160},
																										expr: &choiceExpr{
																											pos: position{line: 947, col: 7, offset: 37802},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 947, col: 7, offset: 37802},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 947, col: 13, offset: 37808},
																													run: (*parser).callonDocumentBlock737,
																													expr: &litMatcher{
																														pos:        position{line: 947, col: 13, offset: 37808},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&choiceExpr{
																										pos: position{line: 955, col: 8, offset: 37904},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 951, col: 12, offset: 37864},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 951, col: 21, offset: 37873},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																											&notExpr{
																												pos: position{line: 953, col: 8, offset: 37893},
																												expr: &anyMatcher{
																													line: 953, col: 9, offset: 37894,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																			&anyMatcher{
																				line: 886, col: 66, offset: 36200,
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 955, col: 8, offset: 37904},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 951, col: 12, offset: 37864},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 951, col: 21, offset: 37873},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 953, col: 8, offset: 37893},
															expr: &anyMatcher{
																line: 953, col: 9, offset: 37894,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 891, col: 39, offset: 36334},
										run: (*parser).callonDocumentBlock750,
										expr: &seqExpr{
											pos: position{line: 891, col: 39, offset: 36334},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 899, col: 26, offset: 36632},
													val:        "....",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 891, col: 61, offset: 36356},
													expr: &choiceExpr{
														pos: position{line: 947, col: 7, offset: 37802},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 947, col: 7, offset: 37802},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 947, col: 13, offset: 37808},
																run: (*parser).callonDocumentBlock756,
																expr: &litMatcher{
																	pos:        position{line: 947, col: 13, offset: 37808},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 951, col: 12, offset: 37864},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 951, col: 12, offset: 37864},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 951, col: 21, offset: 37873},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 891, col: 73, offset: 36368},
													label: "content",
													expr: &actionExpr{
														pos: position{line: 895, col: 37, offset: 36543},
														run: (*parser).callonDocumentBlock762,
														expr: &zeroOrMoreExpr{
															pos: position{line: 895, col: 37, offset: 36543},
															expr: &seqExpr{
																pos: position{line: 895, col: 38, offset: 36544},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 895, col: 38, offset: 36544},
																		expr: &litMatcher{
																			pos:        position{line: 899, col: 26, offset: 36632},
																			val:        "....",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 895, col: 61, offset: 36567,
																	},
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 891, col: 117, offset: 36412},
													alternatives: []interface{}{
														&seqExpr{
															pos: position{line: 891, col: 118, offset: 36413},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 899, col: 26, offset: 36632},
																	val:        "....",
																	ignoreCase: false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 891, col: 140, offset: 36435},
																	expr: &choiceExpr{
																		pos: position{line: 947, col: 7, offset: 37802},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 947, col: 7, offset: 37802},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 947, col: 13, offset: 37808},
																				run: (*parser).callonDocumentBlock774,
																				expr: &litMatcher{
																					pos:        position{line: 947, col: 13, offset: 37808},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 955, col: 8, offset: 37904},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 951, col: 12, offset: 37864},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 951, col: 21, offset: 37873},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 953, col: 8, offset: 37893},
																			expr: &anyMatcher{
																				line: 953, col: 9, offset: 37894,
																			},
																		},
																	},
																},
															},
														},
														&notExpr{
															pos: position{line: 953, col: 8, offset: 37893},
															expr: &anyMatcher{
																line: 953, col: 9, offset: 37894,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 902, col: 34, offset: 36727},
										run: (*parser).callonDocumentBlock783,
										expr: &seqExpr{
											pos: position{line: 902, col: 34, offset: 36727},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 902, col: 34, offset: 36727},
													val:        "[literal]",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 902, col: 46, offset: 36739},
													expr: &choiceExpr{
														pos: position{line: 947, col: 7, offset: 37802},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 947, col: 7, offset: 37802},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 947, col: 13, offset: 37808},
																run: (*parser).callonDocumentBlock789,
																expr: &litMatcher{
																	pos:        position{line: 947, col: 13, offset: 37808},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 951, col: 12, offset: 37864},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 951, col: 12, offset: 37864},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 951, col: 21, offset: 37873},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 902, col: 58, offset: 36751},
													label: "content",
													expr: &actionExpr{
														pos: position{line: 907, col: 41, offset: 36974},
														run: (*parser).callonDocumentBlock795,
														expr: &oneOrMoreExpr{
															pos: position{line: 907, col: 41, offset: 36974},
															expr: &seqExpr{
																pos: position{line: 907, col: 42, offset: 36975},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 907, col: 42, offset: 36975},
																		expr: &seqExpr{
																			pos: position{line: 907, col: 44, offset: 36977},
																			exprs: []interface{}{
																				&choiceExpr{
																					pos: position{line: 951, col: 12, offset: 37864},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 951, col: 12, offset: 37864},
																							val:        "\r\n",
																							ignoreCase: false,
																						},
																						&charClassMatcher{
																							pos:        position{line: 951, col: 21, offset: 37873},
																							val:        "[\\r\\n]",
																							chars:      []rune{'\r', '\n'},
																							ignoreCase: false,
																							inverted:   false,
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 914, col: 14, offset: 37155},
																					run: (*parser).callonDocumentBlock803,
																					expr: &seqExpr{
																						pos: position{line: 914, col: 14, offset: 37155},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 914, col: 14, offset: 37155},
																								expr: &notExpr{
																									pos: position{line: 953, col: 8, offset: 37893},
																									expr: &anyMatcher{
																										line: 953, col: 9, offset: 37894,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 914, col: 19, offset: 37160},
																								expr: &choiceExpr{
																									pos: position{line: 947, col: 7, offset: 37802},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 947, col: 7, offset: 37802},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 947, col: 13, offset: 37808},
																											run: (*parser).callonDocumentBlock811,
																											expr: &litMatcher{
																												pos:        position{line: 947, col: 13, offset: 37808},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&choiceExpr{
																								pos: position{line: 955, col: 8, offset: 37904},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 953, col: 8, offset: 37893},
																										expr: &anyMatcher{
																											line: 953, col: 9, offset: 37894,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&anyMatcher{
																		line: 907, col: 63, offset: 36996,
																	},
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 955, col: 8, offset: 37904},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 951, col: 12, offset: 37864},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 951, col: 21, offset: 37873},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 953, col: 8, offset: 37893},
															expr: &anyMatcher{
																line: 953, col: 9, offset: 37894,
															},
														},
													},
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 23, col: 138, offset: 926},
										name: "DelimitedBlock",
									},
									&ruleRefExpr{
										pos:  position{line: 23, col: 155, offset: 943},
										name: "Table",
									},
									&ruleRefExpr{
										pos:  position{line: 23, col: 163, offset: 951},
										name: "Paragraph",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "FrontMatter",
			pos:  position{line: 30, col: 1, offset: 1159},
			expr: &ruleRefExpr{
				pos:  position{line: 30, col: 16, offset: 1174},
				name: "YamlFrontMatter",
			},
		},
		{
			name: "FrontMatter",
			pos:  position{line: 32, col: 1, offset: 1192},
			expr: &actionExpr{
				pos: position{line: 32, col: 16, offset: 1207},
				run: (*parser).callonFrontMatter1,
				expr: &seqExpr{
					pos: position{line: 32, col: 16, offset: 1207},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 36, col: 26, offset: 1366},
							val:        "---",
							ignoreCase: false,
						},
						&choiceExpr{
							pos: position{line: 955, col: 8, offset: 37904},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 951, col: 12, offset: 37864},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 951, col: 21, offset: 37873},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 953, col: 8, offset: 37893},
									expr: &anyMatcher{
										line: 953, col: 9, offset: 37894,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 32, col: 37, offset: 1228},
							label: "content",
							expr: &actionExpr{
								pos: position{line: 38, col: 27, offset: 1403},
								run: (*parser).callonFrontMatter10,
								expr: &zeroOrMoreExpr{
									pos: position{line: 38, col: 27, offset: 1403},
									expr: &seqExpr{
										pos: position{line: 38, col: 28, offset: 1404},
										exprs: []interface{}{
											&notExpr{
												pos: position{line: 38, col: 28, offset: 1404},
												expr: &seqExpr{
													pos: position{line: 36, col: 26, offset: 1366},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 36, col: 26, offset: 1366},
															val:        "---",
															ignoreCase: false,
														},
														&choiceExpr{
															pos: position{line: 955, col: 8, offset: 37904},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 951, col: 12, offset: 37864},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 951, col: 21, offset: 37873},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&notExpr{
																	pos: position{line: 953, col: 8, offset: 37893},
																	expr: &anyMatcher{
																		line: 953, col: 9, offset: 37894,
																	},
																},
															},
														},
													},
												},
											},
											&anyMatcher{
												line: 38, col: 50, offset: 1426,
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 36, col: 26, offset: 1366},
							val:        "---",
							ignoreCase: false,
						},
						&choiceExpr{
							pos: position{line: 955, col: 8, offset: 37904},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 951, col: 12, offset: 37864},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 951, col: 21, offset: 37873},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 953, col: 8, offset: 37893},
									expr: &anyMatcher{
										line: 953, col: 9, offset: 37894,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "DocumentHeader",
			pos:  position{line: 46, col: 1, offset: 1650},
			expr: &actionExpr{
				pos: position{line: 46, col: 19, offset: 1668},
				run: (*parser).callonDocumentHeader1,
				expr: &seqExpr{
					pos: position{line: 46, col: 19, offset: 1668},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 46, col: 19, offset: 1668},
							label: "header",
							expr: &ruleRefExpr{
								pos:  position{line: 46, col: 27, offset: 1676},
								name: "Section0Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 46, col: 42, offset: 1691},
							label: "authors",
							expr: &zeroOrOneExpr{
								pos: position{line: 46, col: 51, offset: 1700},
								expr: &choiceExpr{
									pos: position{line: 50, col: 20, offset: 1914},
									alternatives: []interface{}{
										&actionExpr{
											pos: position{line: 52, col: 30, offset: 2001},
											run: (*parser).callonDocumentHeader8,
											expr: &seqExpr{
												pos: position{line: 52, col: 30, offset: 2001},
												exprs: []interface{}{
													&zeroOrMoreExpr{
														pos: position{line: 52, col: 30, offset: 2001},
														expr: &choiceExpr{
															pos: position{line: 947, col: 7, offset: 37802},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 947, col: 7, offset: 37802},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 947, col: 13, offset: 37808},
																	run: (*parser).callonDocumentHeader13,
																	expr: &litMatcher{
																		pos:        position{line: 947, col: 13, offset: 37808},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&notExpr{
														pos: position{line: 52, col: 34, offset: 2005},
														expr: &litMatcher{
															pos:        position{line: 52, col: 35, offset: 2006},
															val:        ":",
															ignoreCase: false,
														},
													},
													&labeledExpr{
														pos:   position{line: 52, col: 39, offset: 2010},
														label: "authors",
														expr: &oneOrMoreExpr{
															pos: position{line: 52, col: 48, offset: 2019},
															expr: &actionExpr{
																pos: position{line: 60, col: 19, offset: 2270},
																run: (*parser).callonDocumentHeader19,
																expr: &seqExpr{
																	pos: position{line: 60, col: 19, offset: 2270},
																	exprs: []interface{}{
																		&zeroOrMoreExpr{
																			pos: position{line: 60, col: 19, offset: 2270},
																			expr: &choiceExpr{
																				pos: position{line: 947, col: 7, offset: 37802},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 947, col: 7, offset: 37802},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 947, col: 13, offset: 37808},
																						run: (*parser).callonDocumentHeader24,
																						expr: &litMatcher{
																							pos:        position{line: 947, col: 13, offset: 37808},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 60, col: 23, offset: 2274},
																			label: "namePart1",
																			expr: &actionExpr{
																				pos: position{line: 65, col: 27, offset: 2610},
																				run: (*parser).callonDocumentHeader27,
																				expr: &seqExpr{
																					pos: position{line: 65, col: 27, offset: 2610},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 65, col: 27, offset: 2610},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 28, offset: 2611},
																								val:        "<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 65, col: 32, offset: 2615},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 33, offset: 2616},
																								val:        ";",
																								ignoreCase: false,
																							},
																						},
																						&oneOrMoreExpr{
																							pos: position{line: 65, col: 37, offset: 2620},
																							expr: &seqExpr{
																								pos: position{line: 65, col: 38, offset: 2621},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 65, col: 38, offset: 2621},
																										expr: &choiceExpr{
																											pos: position{line: 951, col: 12, offset: 37864},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 951, col: 12, offset: 37864},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 951, col: 21, offset: 37873},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 65, col: 47, offset: 2630},
																										expr: &choiceExpr{
																											pos: position{line: 947, col: 7, offset: 37802},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 947, col: 7, offset: 37802},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 947, col: 13, offset: 37808},
																													run: (*parser).callonDocumentHeader42,
																													expr: &litMatcher{
																														pos:        position{line: 947, col: 13, offset: 37808},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 65, col: 51, offset: 2634,
																									},
																								},
																							},
																						},
																						&zeroOrMoreExpr{
																							pos: position{line: 65, col: 55, offset: 2638},
																							expr: &choiceExpr{
																								pos: position{line: 947, col: 7, offset: 37802},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 947, col: 7, offset: 37802},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 947, col: 13, offset: 37808},
																										run: (*parser).callonDocumentHeader48,
																										expr: &litMatcher{
																											pos:        position{line: 947, col: 13, offset: 37808},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 60, col: 58, offset: 2309},
																			label: "namePart2",
																			expr: &zeroOrOneExpr{
																				pos: position{line: 60, col: 68, offset: 2319},
																				expr: &actionExpr{
																					pos: position{line: 65, col: 27, offset: 2610},
																					run: (*parser).callonDocumentHeader52,
																					expr: &seqExpr{
																						pos: position{line: 65, col: 27, offset: 2610},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 65, col: 27, offset: 2610},
																								expr: &litMatcher{
																									pos:        position{line: 65, col: 28, offset: 2611},
																									val:        "<",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 65, col: 32, offset: 2615},
																								expr: &litMatcher{
																									pos:        position{line: 65, col: 33, offset: 2616},
																									val:        ";",
																									ignoreCase: false,
																								},
																							},
																							&oneOrMoreExpr{
																								pos: position{line: 65, col: 37, offset: 2620},
																								expr: &seqExpr{
																									pos: position{line: 65, col: 38, offset: 2621},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 65, col: 38, offset: 2621},
																											expr: &choiceExpr{
																												pos: position{line: 951, col: 12, offset: 37864},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 951, col: 12, offset: 37864},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 951, col: 21, offset: 37873},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 65, col: 47, offset: 2630},
																											expr: &choiceExpr{
																												pos: position{line: 947, col: 7, offset: 37802},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 947, col: 7, offset: 37802},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 947, col: 13, offset: 37808},
																														run: (*parser).callonDocumentHeader67,
																														expr: &litMatcher{
																															pos:        position{line: 947, col: 13, offset: 37808},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&anyMatcher{
																											line: 65, col: 51, offset: 2634,
																										},
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 65, col: 55, offset: 2638},
																								expr: &choiceExpr{
																									pos: position{line: 947, col: 7, offset: 37802},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 947, col: 7, offset: 37802},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 947, col: 13, offset: 37808},
																											run: (*parser).callonDocumentHeader73,
																											expr: &litMatcher{
																												pos:        position{line: 947, col: 13, offset: 37808},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 60, col: 94, offset: 2345},
																			label: "namePart3",
																			expr: &zeroOrOneExpr{
																				pos: position{line: 60, col: 104, offset: 2355},
																				expr: &actionExpr{
																					pos: position{line: 65, col: 27, offset: 2610},
																					run: (*parser).callonDocumentHeader77,
																					expr: &seqExpr{
																						pos: position{line: 65, col: 27, offset: 2610},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 65, col: 27, offset: 2610},
																								expr: &litMatcher{
																									pos:        position{line: 65, col: 28, offset: 2611},
																									val:        "<",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 65, col: 32, offset: 2615},
																								expr: &litMatcher{
																									pos:        position{line: 65, col: 33, offset: 2616},
																									val:        ";",
																									ignoreCase: false,
																								},
																							},
																							&oneOrMoreExpr{
																								pos: position{line: 65, col: 37, offset: 2620},
																								expr: &seqExpr{
																									pos: position{line: 65, col: 38, offset: 2621},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 65, col: 38, offset: 2621},
																											expr: &choiceExpr{
																												pos: position{line: 951, col: 12, offset: 37864},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 951, col: 12, offset: 37864},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 951, col: 21, offset: 37873},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 65, col: 47, offset: 2630},
																											expr: &choiceExpr{
																												pos: position{line: 947, col: 7, offset: 37802},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 947, col: 7, offset: 37802},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 947, col: 13, offset: 37808},
																														run: (*parser).callonDocumentHeader92,
																														expr: &litMatcher{
																															pos:        position{line: 947, col: 13, offset: 37808},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&anyMatcher{
																											line: 65, col: 51, offset: 2634,
																										},
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 65, col: 55, offset: 2638},
																								expr: &choiceExpr{
																									pos: position{line: 947, col: 7, offset: 37802},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 947, col: 7, offset: 37802},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 947, col: 13, offset: 37808},
																											run: (*parser).callonDocumentHeader98,
																											expr: &litMatcher{
																												pos:        position{line: 947, col: 13, offset: 37808},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 60, col: 130, offset: 2381},
																			label: "email",
																			expr: &zeroOrOneExpr{
																				pos: position{line: 60, col: 136, offset: 2387},
																				expr: &actionExpr{
																					pos: position{line: 69, col: 24, offset: 2701},
																					run: (*parser).callonDocumentHeader102,
																					expr: &seqExpr{
																						pos: position{line: 69, col: 24, offset: 2701},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 69, col: 24, offset: 2701},
																								val:        "<",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 69, col: 28, offset: 2705},
																								label: "email",
																								expr: &oneOrMoreExpr{
																									pos: position{line: 69, col: 34, offset: 2711},
																									expr: &seqExpr{
																										pos: position{line: 69, col: 35, offset: 2712},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 69, col: 35, offset: 2712},
																												expr: &litMatcher{
																													pos:        position{line: 69, col: 36, offset: 2713},
																													val:        ">",
																													ignoreCase: false,
																												},
																											},
																											&notExpr{
																												pos: position{line: 69, col: 40, offset: 2717},
																												expr: &choiceExpr{
																													pos: position{line: 955, col: 8, offset: 37904},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 951, col: 12, offset: 37864},
																															val:        "\r\n",
																															ignoreCase: false,
																														},
																														&charClassMatcher{
																															pos:        position{line: 951, col: 21, offset: 37873},
																															val:        "[\\r\\n]",
																															chars:      []rune{'\r', '\n'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																														&notExpr{
																															pos: position{line: 953, col: 8, offset: 37893},
																															expr: &anyMatcher{
																																line: 953, col: 9, offset: 37894,
																															},
																														},
																													},
																												},
																											},
																											&anyMatcher{
																												line: 69, col: 45, offset: 2722,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 69, col: 49, offset: 2726},
																								val:        ">",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 60, col: 159, offset: 2410},
																			expr: &choiceExpr{
																				pos: position{line: 947, col: 7, offset: 37802},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 947, col: 7, offset: 37802},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 947, col: 13, offset: 37808},
																						run: (*parser).callonDocumentHeader121,
																						expr: &litMatcher{
																							pos:        position{line: 947, col: 13, offset: 37808},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 60, col: 163, offset: 2414},
																			expr: &litMatcher{
																				pos:        position{line: 60, col: 163, offset: 2414},
																				val:        ";",
																				ignoreCase: false,
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 60, col: 168, offset: 2419},
																			expr: &choiceExpr{
																				pos: position{line: 947, col: 7, offset: 37802},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 947, col: 7, offset: 37802},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 947, col: 13, offset: 37808},
																						run: (*parser).callonDocumentHeader128,
																						expr: &litMatcher{
																							pos:        position{line: 947, col: 13, offset: 37808},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 955, col: 8, offset: 37904},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 951, col: 12, offset: 37864},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 951, col: 21, offset: 37873},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 953, col: 8, offset: 37893},
																expr: &anyMatcher{
																	line: 953, col: 9, offset: 37894,
																},
															},
														},
													},
												},
											},
										},
										&actionExpr{
											pos: position{line: 56, col: 33, offset: 2138},
											run: (*parser).callonDocumentHeader135,
											expr: &seqExpr{
												pos: position{line: 56, col: 33, offset: 2138},
												exprs: []interface{}{
													&zeroOrMoreExpr{
														pos: position{line: 56, col: 33, offset: 2138},
														expr: &choiceExpr{
															pos: position{line: 947, col: 7, offset: 37802},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 947, col: 7, offset: 37802},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 947, col: 13, offset: 37808},
																	run: (*parser).callonDocumentHeader140,
																	expr: &litMatcher{
																		pos:        position{line: 947, col: 13, offset: 37808},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&litMatcher{
														pos:        position{line: 56, col: 37, offset: 2142},
														val:        ":author:",
														ignoreCase: false,
													},
													&labeledExpr{
														pos:   position{line: 56, col: 48, offset: 2153},
														label: "author",
														expr: &actionExpr{
															pos: position{line: 60, col: 19, offset: 2270},
															run: (*parser).callonDocumentHeader144,
															expr: &seqExpr{
																pos: position{line: 60, col: 19, offset: 2270},
																exprs: []interface{}{
																	&zeroOrMoreExpr{
																		pos: position{line: 60, col: 19, offset: 2270},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonDocumentHeader149,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 60, col: 23, offset: 2274},
																		label: "namePart1",
																		expr: &actionExpr{
																			pos: position{line: 65, col: 27, offset: 2610},
																			run: (*parser).callonDocumentHeader152,
																			expr: &seqExpr{
																				pos: position{line: 65, col: 27, offset: 2610},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 65, col: 27, offset: 2610},
																						expr: &litMatcher{
																							pos:        position{line: 65, col: 28, offset: 2611},
																							val:        "<",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 65, col: 32, offset: 2615},
																						expr: &litMatcher{
																							pos:        position{line: 65, col: 33, offset: 2616},
																							val:        ";",
																							ignoreCase: false,
																						},
																					},
																					&oneOrMoreExpr{
																						pos: position{line: 65, col: 37, offset: 2620},
																						expr: &seqExpr{
																							pos: position{line: 65, col: 38, offset: 2621},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 65, col: 38, offset: 2621},
																									expr: &choiceExpr{
																										pos: position{line: 951, col: 12, offset: 37864},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 951, col: 12, offset: 37864},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 951, col: 21, offset: 37873},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 65, col: 47, offset: 2630},
																									expr: &choiceExpr{
																										pos: position{line: 947, col: 7, offset: 37802},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 947, col: 7, offset: 37802},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 947, col: 13, offset: 37808},
																												run: (*parser).callonDocumentHeader167,
																												expr: &litMatcher{
																													pos:        position{line: 947, col: 13, offset: 37808},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&anyMatcher{
																									line: 65, col: 51, offset: 2634,
																								},
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 65, col: 55, offset: 2638},
																						expr: &choiceExpr{
																							pos: position{line: 947, col: 7, offset: 37802},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 947, col: 7, offset: 37802},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 947, col: 13, offset: 37808},
																									run: (*parser).callonDocumentHeader173,
																									expr: &litMatcher{
																										pos:        position{line: 947, col: 13, offset: 37808},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 60, col: 58, offset: 2309},
																		label: "namePart2",
																		expr: &zeroOrOneExpr{
																			pos: position{line: 60, col: 68, offset: 2319},
																			expr: &actionExpr{
																				pos: position{line: 65, col: 27, offset: 2610},
																				run: (*parser).callonDocumentHeader52,
																				expr: &seqExpr{
																					pos: position{line: 65, col: 27, offset: 2610},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 65, col: 27, offset: 2610},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 28, offset: 2611},
																								val:        "<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 65, col: 32, offset: 2615},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 33, offset: 2616},
																								val:        ";",
																								ignoreCase: false,
																							},
																						},
																						&oneOrMoreExpr{
																							pos: position{line: 65, col: 37, offset: 2620},
																							expr: &seqExpr{
																								pos: position{line: 65, col: 38, offset: 2621},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 65, col: 38, offset: 2621},
																										expr: &choiceExpr{
																											pos: position{line: 951, col: 12, offset: 37864},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 951, col: 12, offset: 37864},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 951, col: 21, offset: 37873},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 65, col: 47, offset: 2630},
																										expr: &choiceExpr{
																											pos: position{line: 947, col: 7, offset: 37802},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 947, col: 7, offset: 37802},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 947, col: 13, offset: 37808},
																													run: (*parser).callonDocumentHeader67,
																													expr: &litMatcher{
																														pos:        position{line: 947, col: 13, offset: 37808},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 65, col: 51, offset: 2634,
																									},
																								},
																							},
																						},
																						&zeroOrMoreExpr{
																							pos: position{line: 65, col: 55, offset: 2638},
																							expr: &choiceExpr{
																								pos: position{line: 947, col: 7, offset: 37802},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 947, col: 7, offset: 37802},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 947, col: 13, offset: 37808},
																										run: (*parser).callonDocumentHeader73,
																										expr: &litMatcher{
																											pos:        position{line: 947, col: 13, offset: 37808},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 60, col: 94, offset: 2345},
																		label: "namePart3",
																		expr: &zeroOrOneExpr{
																			pos: position{line: 60, col: 104, offset: 2355},
																			expr: &actionExpr{
																				pos: position{line: 65, col: 27, offset: 2610},
																				run: (*parser).callonDocumentHeader77,
																				expr: &seqExpr{
																					pos: position{line: 65, col: 27, offset: 2610},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 65, col: 27, offset: 2610},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 28, offset: 2611},
																								val:        "<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 65, col: 32, offset: 2615},
																							expr: &litMatcher{
																								pos:        position{line: 65, col: 33, offset: 2616},
																								val:        ";",
																								ignoreCase: false,
																							},
																						},
																						&oneOrMoreExpr{
																							pos: position{line: 65, col: 37, offset: 2620},
																							expr: &seqExpr{
																								pos: position{line: 65, col: 38, offset: 2621},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 65, col: 38, offset: 2621},
																										expr: &choiceExpr{
																											pos: position{line: 951, col: 12, offset: 37864},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 951, col: 12, offset: 37864},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 951, col: 21, offset: 37873},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 65, col: 47, offset: 2630},
																										expr: &choiceExpr{
																											pos: position{line: 947, col: 7, offset: 37802},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 947, col: 7, offset: 37802},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 947, col: 13, offset: 37808},
																													run: (*parser).callonDocumentHeader92,
																													expr: &litMatcher{
																														pos:        position{line: 947, col: 13, offset: 37808},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 65, col: 51, offset: 2634,
																									},
																								},
																							},
																						},
																						&zeroOrMoreExpr{
																							pos: position{line: 65, col: 55, offset: 2638},
																							expr: &choiceExpr{
																								pos: position{line: 947, col: 7, offset: 37802},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 947, col: 7, offset: 37802},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 947, col: 13, offset: 37808},
																										run: (*parser).callonDocumentHeader98,
																										expr: &litMatcher{
																											pos:        position{line: 947, col: 13, offset: 37808},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 60, col: 130, offset: 2381},
																		label: "email",
																		expr: &zeroOrOneExpr{
																			pos: position{line: 60, col: 136, offset: 2387},
																			expr: &actionExpr{
																				pos: position{line: 69, col: 24, offset: 2701},
																				run: (*parser).callonDocumentHeader102,
																				expr: &seqExpr{
																					pos: position{line: 69, col: 24, offset: 2701},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 69, col: 24, offset: 2701},
																							val:        "<",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 69, col: 28, offset: 2705},
																							label: "email",
																							expr: &oneOrMoreExpr{
																								pos: position{line: 69, col: 34, offset: 2711},
																								expr: &seqExpr{
																									pos: position{line: 69, col: 35, offset: 2712},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 69, col: 35, offset: 2712},
																											expr: &litMatcher{
																												pos:        position{line: 69, col: 36, offset: 2713},
																												val:        ">",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 69, col: 40, offset: 2717},
																											expr: &choiceExpr{
																												pos: position{line: 955, col: 8, offset: 37904},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 951, col: 12, offset: 37864},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 951, col: 21, offset: 37873},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 953, col: 8, offset: 37893},
																														expr: &anyMatcher{
																															line: 953, col: 9, offset: 37894,
																														},
																													},
																												},
																											},
																										},
																										&anyMatcher{
																											line: 69, col: 45, offset: 2722,
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 69, col: 49, offset: 2726},
																							val:        ">",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 60, col: 159, offset: 2410},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonDocumentHeader246,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&zeroOrOneExpr{
																		pos: position{line: 60, col: 163, offset: 2414},
																		expr: &litMatcher{
																			pos:        position{line: 60, col: 163, offset: 2414},
																			val:        ";",
																			ignoreCase: false,
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 60, col: 168, offset: 2419},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonDocumentHeader253,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 46, col: 69, offset: 1718},
							label: "revision",
							expr: &zeroOrOneExpr{
								pos: position{line: 46, col: 79, offset: 1728},
								expr: &actionExpr{
									pos: position{line: 75, col: 21, offset: 2916},
									run: (*parser).callonDocumentHeader257,
									expr: &seqExpr{
										pos: position{line: 75, col: 21, offset: 2916},
										exprs: []interface{}{
											&zeroOrMoreExpr{
												pos: position{line: 75, col: 21, offset: 2916},
												expr: &choiceExpr{
													pos: position{line: 947, col: 7, offset: 37802},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 947, col: 7, offset: 37802},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 947, col: 13, offset: 37808},
															run: (*parser).callonDocumentHeader262,
															expr: &litMatcher{
																pos:        position{line: 947, col: 13, offset: 37808},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 75, col: 25, offset: 2920},
												expr: &litMatcher{
													pos:        position{line: 75, col: 26, offset: 2921},
													val:        ":",
													ignoreCase: false,
												},
											},
											&labeledExpr{
												pos:   position{line: 75, col: 30, offset: 2925},
												label: "revnumber",
												expr: &zeroOrOneExpr{
													pos: position{line: 75, col: 40, offset: 2935},
													expr: &choiceExpr{
														pos: position{line: 80, col: 27, offset: 3238},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 80, col: 27, offset: 3238},
																run: (*parser).callonDocumentHeader269,
																expr: &seqExpr{
																	pos: position{line: 80, col: 27, offset: 3238},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 80, col: 27, offset: 3238},
																			val:        "v",
																			ignoreCase: true,
																		},
																		&actionExpr{
																			pos: position{line: 943, col: 10, offset: 37754},
																			run: (*parser).callonDocumentHeader272,
																			expr: &charClassMatcher{
																				pos:        position{line: 943, col: 10, offset: 37754},
																				val:        "[0-9]",
																				ranges:     []rune{'0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 80, col: 39, offset: 3250},
																			expr: &seqExpr{
																				pos: position{line: 80, col: 40, offset: 3251},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 80, col: 40, offset: 3251},
																						expr: &choiceExpr{
																							pos: position{line: 955, col: 8, offset: 37904},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 951, col: 12, offset: 37864},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 951, col: 21, offset: 37873},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 953, col: 8, offset: 37893},
																									expr: &anyMatcher{
																										line: 953, col: 9, offset: 37894,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 80, col: 45, offset: 3256},
																						expr: &litMatcher{
																							pos:        position{line: 80, col: 46, offset: 3257},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 80, col: 50, offset: 3261},
																						expr: &litMatcher{
																							pos:        position{line: 80, col: 51, offset: 3262},
																							val:        ":",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 80, col: 55, offset: 3266,
																					},
																				},
																			},
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 82, col: 5, offset: 3307},
																run: (*parser).callonDocumentHeader287,
																expr: &seqExpr{
																	pos: position{line: 82, col: 5, offset: 3307},
																	exprs: []interface{}{
																		&zeroOrOneExpr{
																			pos: position{line: 82, col: 5, offset: 3307},
																			expr: &litMatcher{
																				pos:        position{line: 82, col: 5, offset: 3307},
																				val:        "v",
																				ignoreCase: true,
																			},
																		},
																		&actionExpr{
																			pos: position{line: 943, col: 10, offset: 37754},
																			run: (*parser).callonDocumentHeader291,
																			expr: &charClassMatcher{
																				pos:        position{line: 943, col: 10, offset: 37754},
																				val:        "[0-9]",
																				ranges:     []rune{'0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 82, col: 18, offset: 3320},
																			expr: &seqExpr{
																				pos: position{line: 82, col: 19, offset: 3321},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 82, col: 19, offset: 3321},
																						expr: &choiceExpr{
																							pos: position{line: 955, col: 8, offset: 37904},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 951, col: 12, offset: 37864},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 951, col: 21, offset: 37873},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 953, col: 8, offset: 37893},
																									expr: &anyMatcher{
																										line: 953, col: 9, offset: 37894,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 82, col: 24, offset: 3326},
																						expr: &litMatcher{
																							pos:        position{line: 82, col: 25, offset: 3327},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 82, col: 29, offset: 3331},
																						expr: &litMatcher{
																							pos:        position{line: 82, col: 30, offset: 3332},
																							val:        ":",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 82, col: 34, offset: 3336,
																					},
																				},
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 82, col: 38, offset: 3340},
																			expr: &choiceExpr{
																				pos: position{line: 947, col: 7, offset: 37802},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 947, col: 7, offset: 37802},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 947, col: 13, offset: 37808},
																						run: (*parser).callonDocumentHeader309,
																						expr: &litMatcher{
																							pos:        position{line: 947, col: 13, offset: 37808},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&andExpr{
																			pos: position{line: 82, col: 42, offset: 3344},
																			expr: &litMatcher{
																				pos:        position{line: 82, col: 43, offset: 3345},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrOneExpr{
												pos: position{line: 75, col: 66, offset: 2961},
												expr: &litMatcher{
													pos:        position{line: 75, col: 66, offset: 2961},
													val:        ",",
													ignoreCase: false,
												},
											},
											&labeledExpr{
												pos:   position{line: 75, col: 71, offset: 2966},
												label: "revdate",
												expr: &zeroOrOneExpr{
													pos: position{line: 75, col: 79, offset: 2974},
													expr: &actionExpr{
														pos: position{line: 86, col: 25, offset: 3409},
														run: (*parser).callonDocumentHeader317,
														expr: &zeroOrMoreExpr{
															pos: position{line: 86, col: 25, offset: 3409},
															expr: &seqExpr{
																pos: position{line: 86, col: 26, offset: 3410},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 86, col: 26, offset: 3410},
																		expr: &choiceExpr{
																			pos: position{line: 955, col: 8, offset: 37904},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 951, col: 12, offset: 37864},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 951, col: 21, offset: 37873},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																				&notExpr{
																					pos: position{line: 953, col: 8, offset: 37893},
																					expr: &anyMatcher{
																						line: 953, col: 9, offset: 37894,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 86, col: 31, offset: 3415},
																		expr: &litMatcher{
																			pos:        position{line: 86, col: 32, offset: 3416},
																			val:        ":",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 86, col: 36, offset: 3420,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrOneExpr{
												pos: position{line: 75, col: 103, offset: 2998},
												expr: &litMatcher{
													pos:        position{line: 75, col: 103, offset: 2998},
													val:        ":",
													ignoreCase: false,
												},
											},
											&labeledExpr{
												pos:   position{line: 75, col: 108, offset: 3003},
												label: "revremark",
												expr: &zeroOrOneExpr{
													pos: position{line: 75, col: 118, offset: 3013},
													expr: &actionExpr{
														pos: position{line: 90, col: 27, offset: 3486},
														run: (*parser).callonDocumentHeader333,
														expr: &zeroOrMoreExpr{
															pos: position{line: 90, col: 27, offset: 3486},
															expr: &seqExpr{
																pos: position{line: 90, col: 28, offset: 3487},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 90, col: 28, offset: 3487},
																		expr: &choiceExpr{
																			pos: position{line: 955, col: 8, offset: 37904},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 951, col: 12, offset: 37864},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 951, col: 21, offset: 37873},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																				&notExpr{
																					pos: position{line: 953, col: 8, offset: 37893},
																					expr: &anyMatcher{
																						line: 953, col: 9, offset: 37894,
																					},
																				},
																			},
																		},
																	},
																	&anyMatcher{
																		line: 90, col: 33, offset: 3492,
																	},
																},
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 955, col: 8, offset: 37904},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 951, col: 12, offset: 37864},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 951, col: 21, offset: 37873},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 953, col: 8, offset: 37893},
														expr: &anyMatcher{
															line: 953, col: 9, offset: 37894,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 46, col: 98, offset: 1747},
							label: "otherAttributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 46, col: 115, offset: 1764},
								expr: &choiceExpr{
									pos: position{line: 97, col: 33, offset: 3679},
									alternatives: []interface{}{
										&actionExpr{
											pos: position{line: 97, col: 33, offset: 3679},
											run: (*parser).callonDocumentHeader351,
											expr: &seqExpr{
												pos: position{line: 97, col: 33, offset: 3679},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 97, col: 33, offset: 3679},
														val:        ":",
														ignoreCase: false,
													},
													&labeledExpr{
														pos:   position{line: 97, col: 37, offset: 3683},
														label: "name",
														expr: &actionExpr{
															pos: position{line: 121, col: 26, offset: 4726},
															run: (*parser).callonDocumentHeader355,
															expr: &seqExpr{
																pos: position{line: 121, col: 26, offset: 4726},
																exprs: []interface{}{
																	&charClassMatcher{
																		pos:        position{line: 121, col: 27, offset: 4727},
																		val:        "[_A-Za-z0-9]",
																		chars:      []rune{'_'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 121, col: 56, offset: 4756},
																		expr: &charClassMatcher{
																			pos:        position{line: 121, col: 57, offset: 4757},
																			val:        "[-A-Za-z0-9]",
																			chars:      []rune{'-'},
																			ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
														},
													},
													&litMatcher{
														pos:        position{line: 97, col: 66, offset: 3712},
														val:        ":",
														ignoreCase: false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 97, col: 70, offset: 3716},
														expr: &choiceExpr{
															pos: position{line: 947, col: 7, offset: 37802},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 947, col: 7, offset: 37802},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 947, col: 13, offset: 37808},
																	run: (*parser).callonDocumentHeader364,
																	expr: &litMatcher{
																		pos:        position{line: 947, col: 13, offset: 37808},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 955, col: 8, offset: 37904},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 951, col: 12, offset: 37864},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 951, col: 21, offset: 37873},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 953, col: 8, offset: 37893},
																expr: &anyMatcher{
																	line: 953, col: 9, offset: 37894,
																},
															},
														},
													},
												},
											},
										},
										&actionExpr{
											pos: position{line: 99, col: 5, offset: 3799},
											run: (*parser).callonDocumentHeader371,
											expr: &seqExpr{
												pos: position{line: 99, col: 5, offset: 3799},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 99, col: 5, offset: 3799},
														val:        ":",
														ignoreCase: false,
													},
													&labeledExpr{
														pos:   position{line: 99, col: 9, offset: 3803},
														label: "name",
														expr: &actionExpr{
															pos: position{line: 121, col: 26, offset: 4726},
															run: (*parser).callonDocumentHeader375,
															expr: &seqExpr{
																pos: position{line: 121, col: 26, offset: 4726},
																exprs: []interface{}{
																	&charClassMatcher{
																		pos:        position{line: 121, col: 27, offset: 4727},
																		val:        "[_A-Za-z0-9]",
																		chars:      []rune{'_'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 121, col: 56, offset: 4756},
																		expr: &charClassMatcher{
																			pos:        position{line: 121, col: 57, offset: 4757},
																			val:        "[-A-Za-z0-9]",
																			chars:      []rune{'-'},
																			ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
														},
													},
													&litMatcher{
														pos:        position{line: 99, col: 38, offset: 3832},
														val:        ":",
														ignoreCase: false,
													},
													&oneOrMoreExpr{
														pos: position{line: 99, col: 42, offset: 3836},
														expr: &choiceExpr{
															pos: position{line: 947, col: 7, offset: 37802},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 947, col: 7, offset: 37802},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 947, col: 13, offset: 37808},
																	run: (*parser).callonDocumentHeader384,
																	expr: &litMatcher{
																		pos:        position{line: 947, col: 13, offset: 37808},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&labeledExpr{
														pos:   position{line: 99, col: 46, offset: 3840},
														label: "value",
														expr: &actionExpr{
															pos: position{line: 125, col: 27, offset: 4849},
															run: (*parser).callonDocumentHeader387,
															expr: &zeroOrMoreExpr{
																pos: position{line: 125, col: 27, offset: 4849},
																expr: &seqExpr{
																	pos: position{line: 125, col: 28, offset: 4850},
																	exprs: []interface{}{
																		&notExpr{
																			pos: position{line: 125, col: 28, offset: 4850},
																			expr: &choiceExpr{
																				pos: position{line: 951, col: 12, offset: 37864},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 951, col: 12, offset: 37864},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 951, col: 21, offset: 37873},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																				},
																			},
																		},
																		&anyMatcher{
																			line: 125, col: 37, offset: 4859,
																		},
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 955, col: 8, offset: 37904},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 951, col: 12, offset: 37864},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 951, col: 21, offset: 37873},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 953, col: 8, offset: 37893},
																expr: &anyMatcher{
																	line: 953, col: 9, offset: 37894,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section",
			pos:  position{line: 246, col: 1, offset: 8937},
			expr: &actionExpr{
				pos: position{line: 246, col: 12, offset: 8948},
				run: (*parser).callonSection1,
				expr: &seqExpr{
					pos: position{line: 246, col: 12, offset: 8948},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 246, col: 12, offset: 8948},
							expr: &notExpr{
								pos: position{line: 953, col: 8, offset: 37893},
								expr: &anyMatcher{
									line: 953, col: 9, offset: 37894,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 247, col: 5, offset: 9019},
							label: "section",
							expr: &choiceExpr{
								pos: position{line: 247, col: 14, offset: 9028},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 247, col: 14, offset: 9028},
										name: "Section0",
									},
									&ruleRefExpr{
										pos:  position{line: 247, col: 25, offset: 9039},
										name: "Section1",
									},
									&ruleRefExpr{
										pos:  position{line: 247, col: 36, offset: 9050},
										name: "Section2",
									},
									&ruleRefExpr{
										pos:  position{line: 247, col: 47, offset: 9061},
										name: "Section3",
									},
									&ruleRefExpr{
										pos:  position{line: 247, col: 58, offset: 9072},
										name: "Section4",
									},
									&ruleRefExpr{
										pos:  position{line: 247, col: 69, offset: 9083},
										name: "Section5",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section0",
			pos:  position{line: 253, col: 1, offset: 9164},
			expr: &actionExpr{
				pos: position{line: 253, col: 13, offset: 9176},
				run: (*parser).callonSection01,
				expr: &seqExpr{
					pos: position{line: 253, col: 13, offset: 9176},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 253, col: 13, offset: 9176},
							expr: &notExpr{
								pos: position{line: 953, col: 8, offset: 37893},
								expr: &anyMatcher{
									line: 953, col: 9, offset: 37894,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 254, col: 5, offset: 9247},
							label: "section",
							expr: &actionExpr{
								pos: position{line: 254, col: 14, offset: 9256},
								run: (*parser).callonSection07,
								expr: &seqExpr{
									pos: position{line: 254, col: 14, offset: 9256},
									exprs: []interface{}{
										&labeledExpr{
											pos:   position{line: 254, col: 14, offset: 9256},
											label: "header",
											expr: &ruleRefExpr{
												pos:  position{line: 254, col: 22, offset: 9264},
												name: "Section0Title",
											},
										},
										&labeledExpr{
											pos:   position{line: 254, col: 37, offset: 9279},
											label: "elements",
											expr: &zeroOrMoreExpr{
												pos: position{line: 254, col: 47, offset: 9289},
												expr: &ruleRefExpr{
													pos:  position{line: 254, col: 47, offset: 9289},
													name: "Section0Block",
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section0Title",
			pos:  position{line: 262, col: 1, offset: 9473},
			expr: &actionExpr{
				pos: position{line: 262, col: 18, offset: 9490},
				run: (*parser).callonSection0Title1,
				expr: &seqExpr{
					pos: position{line: 262, col: 18, offset: 9490},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 262, col: 18, offset: 9490},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 262, col: 29, offset: 9501},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5188},
									run: (*parser).callonSection0Title5,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5188},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5188},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5194},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 145, col: 14, offset: 5645},
															run: (*parser).callonSection0Title9,
															expr: &labeledExpr{
																pos:   position{line: 145, col: 14, offset: 5645},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 151, col: 20, offset: 5775},
																	run: (*parser).callonSection0Title11,
																	expr: &seqExpr{
																		pos: position{line: 151, col: 20, offset: 5775},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 151, col: 20, offset: 5775},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 151, col: 25, offset: 5780},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 933, col: 7, offset: 37526},
																					run: (*parser).callonSection0Title15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 933, col: 7, offset: 37526},
																						expr: &seqExpr{
																							pos: position{line: 933, col: 8, offset: 37527},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 933, col: 8, offset: 37527},
																									expr: &choiceExpr{
																										pos: position{line: 951, col: 12, offset: 37864},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 951, col: 12, offset: 37864},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 951, col: 21, offset: 37873},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 17, offset: 37536},
																									expr: &choiceExpr{
																										pos: position{line: 947, col: 7, offset: 37802},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 947, col: 7, offset: 37802},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 947, col: 13, offset: 37808},
																												run: (*parser).callonSection0Title25,
																												expr: &litMatcher{
																													pos:        position{line: 947, col: 13, offset: 37808},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 21, offset: 37540},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 22, offset: 37541},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 26, offset: 37545},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 27, offset: 37546},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 31, offset: 37550},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 32, offset: 37551},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 37, offset: 37556},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 38, offset: 37557},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 933, col: 42, offset: 37561,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 151, col: 33, offset: 5788},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 5, offset: 5691},
															run: (*parser).callonSection0Title37,
															expr: &seqExpr{
																pos: position{line: 147, col: 5, offset: 5691},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 5, offset: 5691},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 10, offset: 5696},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 933, col: 7, offset: 37526},
																			run: (*parser).callonSection0Title41,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 933, col: 7, offset: 37526},
																				expr: &seqExpr{
																					pos: position{line: 933, col: 8, offset: 37527},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 933, col: 8, offset: 37527},
																							expr: &choiceExpr{
																								pos: position{line: 951, col: 12, offset: 37864},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 17, offset: 37536},
																							expr: &choiceExpr{
																								pos: position{line: 947, col: 7, offset: 37802},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 947, col: 7, offset: 37802},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 947, col: 13, offset: 37808},
																										run: (*parser).callonSection0Title51,
																										expr: &litMatcher{
																											pos:        position{line: 947, col: 13, offset: 37808},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 21, offset: 37540},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 22, offset: 37541},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 26, offset: 37545},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 27, offset: 37546},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 31, offset: 37550},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 32, offset: 37551},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 37, offset: 37556},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 38, offset: 37557},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 933, col: 42, offset: 37561,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 18, offset: 5704},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 17, offset: 5997},
															run: (*parser).callonSection0Title63,
															expr: &seqExpr{
																pos: position{line: 157, col: 17, offset: 5997},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 17, offset: 5997},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 21, offset: 6001},
																		expr: &litMatcher{
																			pos:        position{line: 157, col: 22, offset: 6002},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 157, col: 26, offset: 6006},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonSection0Title71,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 30, offset: 6010},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 161, col: 24, offset: 6115},
																			run: (*parser).callonSection0Title74,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 161, col: 24, offset: 6115},
																				expr: &seqExpr{
																					pos: position{line: 161, col: 25, offset: 6116},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 161, col: 25, offset: 6116},
																							expr: &choiceExpr{
																								pos: position{line: 951, col: 12, offset: 37864},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 161, col: 34, offset: 6125,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 167, col: 16, offset: 6274},
															run: (*parser).callonSection0Title82,
															expr: &seqExpr{
																pos: position{line: 167, col: 16, offset: 6274},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 167, col: 16, offset: 6274},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 167, col: 21, offset: 6279},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonSection0Title88,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 167, col: 25, offset: 6283},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 171, col: 23, offset: 6387},
																			run: (*parser).callonSection0Title91,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 171, col: 23, offset: 6387},
																				expr: &seqExpr{
																					pos: position{line: 171, col: 24, offset: 6388},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 171, col: 24, offset: 6388},
																							expr: &choiceExpr{
																								pos: position{line: 951, col: 12, offset: 37864},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 171, col: 33, offset: 6397},
																							expr: &litMatcher{
																								pos:        position{line: 171, col: 34, offset: 6398},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 171, col: 38, offset: 6402,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 167, col: 51, offset: 6309},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 30, offset: 6551},
															run: (*parser).callonSection0Title102,
															expr: &seqExpr{
																pos: position{line: 176, col: 30, offset: 6551},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 30, offset: 6551},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 34, offset: 6555},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 494, col: 19, offset: 19202},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 494, col: 19, offset: 19202},
																					run: (*parser).callonSection0Title107,
																					expr: &litMatcher{
																						pos:        position{line: 494, col: 19, offset: 19202},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 496, col: 5, offset: 19240},
																					run: (*parser).callonSection0Title109,
																					expr: &litMatcher{
																						pos:        position{line: 496, col: 5, offset: 19240},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 498, col: 5, offset: 19280},
																					run: (*parser).callonSection0Title111,
																					expr: &litMatcher{
																						pos:        position{line: 498, col: 5, offset: 19280},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 500, col: 5, offset: 19330},
																					run: (*parser).callonSection0Title113,
																					expr: &litMatcher{
																						pos:        position{line: 500, col: 5, offset: 19330},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 502, col: 5, offset: 19376},
																					run: (*parser).callonSection0Title115,
																					expr: &litMatcher{
																						pos:        position{line: 502, col: 5, offset: 19376},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 53, offset: 6574},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 199, col: 21, offset: 7299},
															run: (*parser).callonSection0Title118,
															expr: &litMatcher{
																pos:        position{line: 199, col: 21, offset: 7299},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 19, offset: 6735},
															run: (*parser).callonSection0Title120,
															expr: &seqExpr{
																pos: position{line: 181, col: 19, offset: 6735},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 19, offset: 6735},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 23, offset: 6739},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonSection0Title126,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 27, offset: 6743},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 181, col: 38, offset: 6754},
																			expr: &choiceExpr{
																				pos: position{line: 185, col: 21, offset: 6867},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						run: (*parser).callonSection0Title131,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 21, offset: 6867},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonSection0Title134,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonSection0Title137,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 185, col: 40, offset: 6886},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 185, col: 44, offset: 6890},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 195, col: 19, offset: 7217},
																										run: (*parser).callonSection0Title151,
																										expr: &labeledExpr{
																											pos:   position{line: 195, col: 19, offset: 7217},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 195, col: 25, offset: 7223},
																												expr: &seqExpr{
																													pos: position{line: 195, col: 26, offset: 7224},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 195, col: 26, offset: 7224},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 27, offset: 7225},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 31, offset: 7229},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 32, offset: 7230},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 36, offset: 7234},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 37, offset: 7235},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 195, col: 41, offset: 7239,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 67, offset: 6913},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 67, offset: 6913},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 72, offset: 6918},
																									expr: &choiceExpr{
																										pos: position{line: 947, col: 7, offset: 37802},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 947, col: 7, offset: 37802},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 947, col: 13, offset: 37808},
																												run: (*parser).callonSection0Title167,
																												expr: &litMatcher{
																													pos:        position{line: 947, col: 13, offset: 37808},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						run: (*parser).callonSection0Title169,
																						expr: &seqExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 187, col: 5, offset: 7002},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonSection0Title172,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonSection0Title175,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 187, col: 24, offset: 7021},
																									expr: &litMatcher{
																										pos:        position{line: 187, col: 24, offset: 7021},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 187, col: 29, offset: 7026},
																									expr: &choiceExpr{
																										pos: position{line: 947, col: 7, offset: 37802},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 947, col: 7, offset: 37802},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 947, col: 13, offset: 37808},
																												run: (*parser).callonSection0Title192,
																												expr: &litMatcher{
																													pos:        position{line: 947, col: 13, offset: 37808},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 181, col: 59, offset: 6775},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5298},
												expr: &choiceExpr{
													pos: position{line: 947, col: 7, offset: 37802},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 947, col: 7, offset: 37802},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 947, col: 13, offset: 37808},
															run: (*parser).callonSection0Title198,
															expr: &litMatcher{
																pos:        position{line: 947, col: 13, offset: 37808},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 955, col: 8, offset: 37904},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 951, col: 12, offset: 37864},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 951, col: 21, offset: 37873},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 953, col: 8, offset: 37893},
														expr: &anyMatcher{
															line: 953, col: 9, offset: 37894,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 260, col: 24, offset: 9464},
							val:        "=",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 260, col: 28, offset: 9468},
							expr: &choiceExpr{
								pos: position{line: 947, col: 7, offset: 37802},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 947, col: 7, offset: 37802},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 947, col: 13, offset: 37808},
										run: (*parser).callonSection0Title209,
										expr: &litMatcher{
											pos:        position{line: 947, col: 13, offset: 37808},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 262, col: 69, offset: 9541},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 262, col: 78, offset: 9550},
								name: "TitleElements",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 262, col: 93, offset: 9565},
							expr: &choiceExpr{
								pos: position{line: 947, col: 7, offset: 37802},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 947, col: 7, offset: 37802},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 947, col: 13, offset: 37808},
										run: (*parser).callonSection0Title216,
										expr: &litMatcher{
											pos:        position{line: 947, col: 13, offset: 37808},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 262, col: 97, offset: 9569},
							label: "id",
							expr: &zeroOrOneExpr{
								pos: position{line: 262, col: 100, offset: 9572},
								expr: &actionExpr{
									pos: position{line: 151, col: 20, offset: 5775},
									run: (*parser).callonSection0Title220,
									expr: &seqExpr{
										pos: position{line: 151, col: 20, offset: 5775},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 151, col: 20, offset: 5775},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 151, col: 25, offset: 5780},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 933, col: 7, offset: 37526},
													run: (*parser).callonSection0Title224,
													expr: &oneOrMoreExpr{
														pos: position{line: 933, col: 7, offset: 37526},
														expr: &seqExpr{
															pos: position{line: 933, col: 8, offset: 37527},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 933, col: 8, offset: 37527},
																	expr: &choiceExpr{
																		pos: position{line: 951, col: 12, offset: 37864},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 951, col: 12, offset: 37864},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 951, col: 21, offset: 37873},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 933, col: 17, offset: 37536},
																	expr: &choiceExpr{
																		pos: position{line: 947, col: 7, offset: 37802},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 947, col: 7, offset: 37802},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 947, col: 13, offset: 37808},
																				run: (*parser).callonSection0Title234,
																				expr: &litMatcher{
																					pos:        position{line: 947, col: 13, offset: 37808},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 933, col: 21, offset: 37540},
																	expr: &litMatcher{
																		pos:        position{line: 933, col: 22, offset: 37541},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 933, col: 26, offset: 37545},
																	expr: &litMatcher{
																		pos:        position{line: 933, col: 27, offset: 37546},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 933, col: 31, offset: 37550},
																	expr: &litMatcher{
																		pos:        position{line: 933, col: 32, offset: 37551},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 933, col: 37, offset: 37556},
																	expr: &litMatcher{
																		pos:        position{line: 933, col: 38, offset: 37557},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 933, col: 42, offset: 37561,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 151, col: 33, offset: 5788},
												val:        "]]",
												ignoreCase: false,
											},
										},
									},
								},
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 262, col: 119, offset: 9591},
							expr: &choiceExpr{
								pos: position{line: 947, col: 7, offset: 37802},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 947, col: 7, offset: 37802},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 947, col: 13, offset: 37808},
										run: (*parser).callonSection0Title249,
										expr: &litMatcher{
											pos:        position{line: 947, col: 13, offset: 37808},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 955, col: 8, offset: 37904},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 951, col: 12, offset: 37864},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 951, col: 21, offset: 37873},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 953, col: 8, offset: 37893},
									expr: &anyMatcher{
										line: 953, col: 9, offset: 37894,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section0Block",
			pos:  position{line: 266, col: 1, offset: 9710},
			expr: &actionExpr{
				pos: position{line: 266, col: 18, offset: 9727},
				run: (*parser).callonSection0Block1,
				expr: &seqExpr{
					pos: position{line: 266, col: 18, offset: 9727},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 266, col: 18, offset: 9727},
							expr: &ruleRefExpr{
								pos:  position{line: 266, col: 19, offset: 9728},
								name: "Section0",
							},
						},
						&labeledExpr{
							pos:   position{line: 266, col: 28, offset: 9737},
							label: "content",
							expr: &choiceExpr{
								pos: position{line: 266, col: 37, offset: 9746},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 266, col: 37, offset: 9746},
										name: "Section1",
									},
									&ruleRefExpr{
										pos:  position{line: 266, col: 48, offset: 9757},
										name: "Section2",
									},
									&ruleRefExpr{
										pos:  position{line: 266, col: 59, offset: 9768},
										name: "Section3",
									},
									&ruleRefExpr{
										pos:  position{line: 266, col: 70, offset: 9779},
										name: "Section4",
									},
									&ruleRefExpr{
										pos:  position{line: 266, col: 81, offset: 9790},
										name: "Section5",
									},
									&ruleRefExpr{
										pos:  position{line: 266, col: 92, offset: 9801},
										name: "DocumentBlock",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section1",
			pos:  position{line: 270, col: 1, offset: 9845},
			expr: &actionExpr{
				pos: position{line: 270, col: 13, offset: 9857},
				run: (*parser).callonSection11,
				expr: &seqExpr{
					pos: position{line: 270, col: 13, offset: 9857},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 270, col: 13, offset: 9857},
							expr: &notExpr{
								pos: position{line: 953, col: 8, offset: 37893},
								expr: &anyMatcher{
									line: 953, col: 9, offset: 37894,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 271, col: 5, offset: 9928},
							label: "section",
							expr: &actionExpr{
								pos: position{line: 271, col: 14, offset: 9937},
								run: (*parser).callonSection17,
								expr: &seqExpr{
									pos: position{line: 271, col: 14, offset: 9937},
									exprs: []interface{}{
										&labeledExpr{
											pos:   position{line: 271, col: 14, offset: 9937},
											label: "header",
											expr: &ruleRefExpr{
												pos:  position{line: 271, col: 22, offset: 9945},
												name: "Section1Title",
											},
										},
										&labeledExpr{
											pos:   position{line: 271, col: 37, offset: 9960},
											label: "elements",
											expr: &zeroOrMoreExpr{
												pos: position{line: 271, col: 47, offset: 9970},
												expr: &ruleRefExpr{
													pos:  position{line: 271, col: 47, offset: 9970},
													name: "Section1Block",
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section1Title",
			pos:  position{line: 279, col: 1, offset: 10147},
			expr: &actionExpr{
				pos: position{line: 279, col: 18, offset: 10164},
				run: (*parser).callonSection1Title1,
				expr: &seqExpr{
					pos: position{line: 279, col: 18, offset: 10164},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 279, col: 18, offset: 10164},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 279, col: 29, offset: 10175},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5188},
									run: (*parser).callonSection1Title5,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5188},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5188},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5194},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 145, col: 14, offset: 5645},
															run: (*parser).callonSection1Title9,
															expr: &labeledExpr{
																pos:   position{line: 145, col: 14, offset: 5645},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 151, col: 20, offset: 5775},
																	run: (*parser).callonSection1Title11,
																	expr: &seqExpr{
																		pos: position{line: 151, col: 20, offset: 5775},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 151, col: 20, offset: 5775},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 151, col: 25, offset: 5780},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 933, col: 7, offset: 37526},
																					run: (*parser).callonSection1Title15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 933, col: 7, offset: 37526},
																						expr: &seqExpr{
																							pos: position{line: 933, col: 8, offset: 37527},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 933, col: 8, offset: 37527},
																									expr: &choiceExpr{
																										pos: position{line: 951, col: 12, offset: 37864},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 951, col: 12, offset: 37864},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 951, col: 21, offset: 37873},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 17, offset: 37536},
																									expr: &choiceExpr{
																										pos: position{line: 947, col: 7, offset: 37802},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 947, col: 7, offset: 37802},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 947, col: 13, offset: 37808},
																												run: (*parser).callonSection1Title25,
																												expr: &litMatcher{
																													pos:        position{line: 947, col: 13, offset: 37808},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 21, offset: 37540},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 22, offset: 37541},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 26, offset: 37545},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 27, offset: 37546},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 31, offset: 37550},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 32, offset: 37551},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 37, offset: 37556},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 38, offset: 37557},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 933, col: 42, offset: 37561,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 151, col: 33, offset: 5788},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 5, offset: 5691},
															run: (*parser).callonSection1Title37,
															expr: &seqExpr{
																pos: position{line: 147, col: 5, offset: 5691},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 5, offset: 5691},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 10, offset: 5696},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 933, col: 7, offset: 37526},
																			run: (*parser).callonSection1Title41,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 933, col: 7, offset: 37526},
																				expr: &seqExpr{
																					pos: position{line: 933, col: 8, offset: 37527},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 933, col: 8, offset: 37527},
																							expr: &choiceExpr{
																								pos: position{line: 951, col: 12, offset: 37864},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 17, offset: 37536},
																							expr: &choiceExpr{
																								pos: position{line: 947, col: 7, offset: 37802},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 947, col: 7, offset: 37802},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 947, col: 13, offset: 37808},
																										run: (*parser).callonSection1Title51,
																										expr: &litMatcher{
																											pos:        position{line: 947, col: 13, offset: 37808},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 21, offset: 37540},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 22, offset: 37541},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 26, offset: 37545},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 27, offset: 37546},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 31, offset: 37550},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 32, offset: 37551},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 37, offset: 37556},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 38, offset: 37557},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 933, col: 42, offset: 37561,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 18, offset: 5704},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 17, offset: 5997},
															run: (*parser).callonSection1Title63,
															expr: &seqExpr{
																pos: position{line: 157, col: 17, offset: 5997},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 17, offset: 5997},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 21, offset: 6001},
																		expr: &litMatcher{
																			pos:        position{line: 157, col: 22, offset: 6002},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 157, col: 26, offset: 6006},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonSection1Title71,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 30, offset: 6010},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 161, col: 24, offset: 6115},
																			run: (*parser).callonSection1Title74,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 161, col: 24, offset: 6115},
																				expr: &seqExpr{
																					pos: position{line: 161, col: 25, offset: 6116},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 161, col: 25, offset: 6116},
																							expr: &choiceExpr{
																								pos: position{line: 951, col: 12, offset: 37864},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 161, col: 34, offset: 6125,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 167, col: 16, offset: 6274},
															run: (*parser).callonSection1Title82,
															expr: &seqExpr{
																pos: position{line: 167, col: 16, offset: 6274},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 167, col: 16, offset: 6274},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 167, col: 21, offset: 6279},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonSection1Title88,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 167, col: 25, offset: 6283},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 171, col: 23, offset: 6387},
																			run: (*parser).callonSection1Title91,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 171, col: 23, offset: 6387},
																				expr: &seqExpr{
																					pos: position{line: 171, col: 24, offset: 6388},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 171, col: 24, offset: 6388},
																							expr: &choiceExpr{
																								pos: position{line: 951, col: 12, offset: 37864},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 171, col: 33, offset: 6397},
																							expr: &litMatcher{
																								pos:        position{line: 171, col: 34, offset: 6398},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 171, col: 38, offset: 6402,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 167, col: 51, offset: 6309},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 30, offset: 6551},
															run: (*parser).callonSection1Title102,
															expr: &seqExpr{
																pos: position{line: 176, col: 30, offset: 6551},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 30, offset: 6551},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 34, offset: 6555},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 494, col: 19, offset: 19202},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 494, col: 19, offset: 19202},
																					run: (*parser).callonSection1Title107,
																					expr: &litMatcher{
																						pos:        position{line: 494, col: 19, offset: 19202},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 496, col: 5, offset: 19240},
																					run: (*parser).callonSection1Title109,
																					expr: &litMatcher{
																						pos:        position{line: 496, col: 5, offset: 19240},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 498, col: 5, offset: 19280},
																					run: (*parser).callonSection1Title111,
																					expr: &litMatcher{
																						pos:        position{line: 498, col: 5, offset: 19280},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 500, col: 5, offset: 19330},
																					run: (*parser).callonSection1Title113,
																					expr: &litMatcher{
																						pos:        position{line: 500, col: 5, offset: 19330},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 502, col: 5, offset: 19376},
																					run: (*parser).callonSection1Title115,
																					expr: &litMatcher{
																						pos:        position{line: 502, col: 5, offset: 19376},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 53, offset: 6574},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 199, col: 21, offset: 7299},
															run: (*parser).callonSection1Title118,
															expr: &litMatcher{
																pos:        position{line: 199, col: 21, offset: 7299},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 19, offset: 6735},
															run: (*parser).callonSection1Title120,
															expr: &seqExpr{
																pos: position{line: 181, col: 19, offset: 6735},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 19, offset: 6735},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 23, offset: 6739},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonSection1Title126,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 27, offset: 6743},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 181, col: 38, offset: 6754},
																			expr: &choiceExpr{
																				pos: position{line: 185, col: 21, offset: 6867},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						run: (*parser).callonSection1Title131,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 21, offset: 6867},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonSection1Title134,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonSection1Title137,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 185, col: 40, offset: 6886},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 185, col: 44, offset: 6890},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 195, col: 19, offset: 7217},
																										run: (*parser).callonSection1Title151,
																										expr: &labeledExpr{
																											pos:   position{line: 195, col: 19, offset: 7217},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 195, col: 25, offset: 7223},
																												expr: &seqExpr{
																													pos: position{line: 195, col: 26, offset: 7224},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 195, col: 26, offset: 7224},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 27, offset: 7225},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 31, offset: 7229},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 32, offset: 7230},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 36, offset: 7234},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 37, offset: 7235},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 195, col: 41, offset: 7239,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 67, offset: 6913},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 67, offset: 6913},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 72, offset: 6918},
																									expr: &choiceExpr{
																										pos: position{line: 947, col: 7, offset: 37802},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 947, col: 7, offset: 37802},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 947, col: 13, offset: 37808},
																												run: (*parser).callonSection1Title167,
																												expr: &litMatcher{
																													pos:        position{line: 947, col: 13, offset: 37808},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						run: (*parser).callonSection1Title169,
																						expr: &seqExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 187, col: 5, offset: 7002},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonSection1Title172,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonSection1Title175,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 187, col: 24, offset: 7021},
																									expr: &litMatcher{
																										pos:        position{line: 187, col: 24, offset: 7021},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 187, col: 29, offset: 7026},
																									expr: &choiceExpr{
																										pos: position{line: 947, col: 7, offset: 37802},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 947, col: 7, offset: 37802},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 947, col: 13, offset: 37808},
																												run: (*parser).callonSection1Title192,
																												expr: &litMatcher{
																													pos:        position{line: 947, col: 13, offset: 37808},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 181, col: 59, offset: 6775},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5298},
												expr: &choiceExpr{
													pos: position{line: 947, col: 7, offset: 37802},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 947, col: 7, offset: 37802},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 947, col: 13, offset: 37808},
															run: (*parser).callonSection1Title198,
															expr: &litMatcher{
																pos:        position{line: 947, col: 13, offset: 37808},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 955, col: 8, offset: 37904},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 951, col: 12, offset: 37864},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 951, col: 21, offset: 37873},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 953, col: 8, offset: 37893},
														expr: &anyMatcher{
															line: 953, col: 9, offset: 37894,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 277, col: 24, offset: 10137},
							val:        "==",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 277, col: 29, offset: 10142},
							expr: &choiceExpr{
								pos: position{line: 947, col: 7, offset: 37802},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 947, col: 7, offset: 37802},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 947, col: 13, offset: 37808},
										run: (*parser).callonSection1Title209,
										expr: &litMatcher{
											pos:        position{line: 947, col: 13, offset: 37808},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 279, col: 69, offset: 10215},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 279, col: 78, offset: 10224},
								name: "TitleElements",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 279, col: 93, offset: 10239},
							expr: &choiceExpr{
								pos: position{line: 947, col: 7, offset: 37802},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 947, col: 7, offset: 37802},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 947, col: 13, offset: 37808},
										run: (*parser).callonSection1Title216,
										expr: &litMatcher{
											pos:        position{line: 947, col: 13, offset: 37808},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 279, col: 97, offset: 10243},
							label: "id",
							expr: &zeroOrOneExpr{
								pos: position{line: 279, col: 100, offset: 10246},
								expr: &actionExpr{
									pos: position{line: 151, col: 20, offset: 5775},
									run: (*parser).callonSection1Title220,
									expr: &seqExpr{
										pos: position{line: 151, col: 20, offset: 5775},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 151, col: 20, offset: 5775},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 151, col: 25, offset: 5780},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 933, col: 7, offset: 37526},
													run: (*parser).callonSection1Title224,
													expr: &oneOrMoreExpr{
														pos: position{line: 933, col: 7, offset: 37526},
														expr: &seqExpr{
															pos: position{line: 933, col: 8, offset: 37527},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 933, col: 8, offset: 37527},
																	expr: &choiceExpr{
																		pos: position{line: 951, col: 12, offset: 37864},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 951, col: 12, offset: 37864},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 951, col: 21, offset: 37873},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 933, col: 17, offset: 37536},
																	expr: &choiceExpr{
																		pos: position{line: 947, col: 7, offset: 37802},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 947, col: 7, offset: 37802},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 947, col: 13, offset: 37808},
																				run: (*parser).callonSection1Title234,
																				expr: &litMatcher{
																					pos:        position{line: 947, col: 13, offset: 37808},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 933, col: 21, offset: 37540},
																	expr: &litMatcher{
																		pos:        position{line: 933, col: 22, offset: 37541},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 933, col: 26, offset: 37545},
																	expr: &litMatcher{
																		pos:        position{line: 933, col: 27, offset: 37546},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 933, col: 31, offset: 37550},
																	expr: &litMatcher{
																		pos:        position{line: 933, col: 32, offset: 37551},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 933, col: 37, offset: 37556},
																	expr: &litMatcher{
																		pos:        position{line: 933, col: 38, offset: 37557},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 933, col: 42, offset: 37561,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 151, col: 33, offset: 5788},
												val:        "]]",
												ignoreCase: false,
											},
										},
									},
								},
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 279, col: 119, offset: 10265},
							expr: &choiceExpr{
								pos: position{line: 947, col: 7, offset: 37802},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 947, col: 7, offset: 37802},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 947, col: 13, offset: 37808},
										run: (*parser).callonSection1Title249,
										expr: &litMatcher{
											pos:        position{line: 947, col: 13, offset: 37808},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 955, col: 8, offset: 37904},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 951, col: 12, offset: 37864},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 951, col: 21, offset: 37873},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 953, col: 8, offset: 37893},
									expr: &anyMatcher{
										line: 953, col: 9, offset: 37894,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section1Block",
			pos:  position{line: 283, col: 1, offset: 10384},
			expr: &actionExpr{
				pos: position{line: 283, col: 18, offset: 10401},
				run: (*parser).callonSection1Block1,
				expr: &seqExpr{
					pos: position{line: 283, col: 18, offset: 10401},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 283, col: 18, offset: 10401},
							expr: &ruleRefExpr{
								pos:  position{line: 283, col: 19, offset: 10402},
								name: "Section1Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 283, col: 33, offset: 10416},
							label: "content",
							expr: &choiceExpr{
								pos: position{line: 283, col: 42, offset: 10425},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 283, col: 42, offset: 10425},
										name: "Section2",
									},
									&ruleRefExpr{
										pos:  position{line: 283, col: 53, offset: 10436},
										name: "Section3",
									},
									&ruleRefExpr{
										pos:  position{line: 283, col: 64, offset: 10447},
										name: "Section4",
									},
									&ruleRefExpr{
										pos:  position{line: 283, col: 75, offset: 10458},
										name: "Section5",
									},
									&ruleRefExpr{
										pos:  position{line: 283, col: 86, offset: 10469},
										name: "DocumentBlock",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section2",
			pos:  position{line: 287, col: 1, offset: 10513},
			expr: &actionExpr{
				pos: position{line: 287, col: 13, offset: 10525},
				run: (*parser).callonSection21,
				expr: &seqExpr{
					pos: position{line: 287, col: 13, offset: 10525},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 287, col: 13, offset: 10525},
							expr: &notExpr{
								pos: position{line: 953, col: 8, offset: 37893},
								expr: &anyMatcher{
									line: 953, col: 9, offset: 37894,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 288, col: 5, offset: 10596},
							label: "section",
							expr: &actionExpr{
								pos: position{line: 288, col: 14, offset: 10605},
								run: (*parser).callonSection27,
								expr: &seqExpr{
									pos: position{line: 288, col: 14, offset: 10605},
									exprs: []interface{}{
										&labeledExpr{
											pos:   position{line: 288, col: 14, offset: 10605},
											label: "header",
											expr: &ruleRefExpr{
												pos:  position{line: 288, col: 22, offset: 10613},
												name: "Section2Title",
											},
										},
										&labeledExpr{
											pos:   position{line: 288, col: 37, offset: 10628},
											label: "elements",
											expr: &zeroOrOneExpr{
												pos: position{line: 288, col: 47, offset: 10638},
												expr: &ruleRefExpr{
													pos:  position{line: 288, col: 47, offset: 10638},
													name: "Section2Block",
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section2Title",
			pos:  position{line: 296, col: 1, offset: 10825},
			expr: &actionExpr{
				pos: position{line: 296, col: 18, offset: 10842},
				run: (*parser).callonSection2Title1,
				expr: &seqExpr{
					pos: position{line: 296, col: 18, offset: 10842},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 296, col: 18, offset: 10842},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 296, col: 29, offset: 10853},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5188},
									run: (*parser).callonSection2Title5,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5188},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5188},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5194},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 145, col: 14, offset: 5645},
															run: (*parser).callonSection2Title9,
															expr: &labeledExpr{
																pos:   position{line: 145, col: 14, offset: 5645},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 151, col: 20, offset: 5775},
																	run: (*parser).callonSection2Title11,
																	expr: &seqExpr{
																		pos: position{line: 151, col: 20, offset: 5775},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 151, col: 20, offset: 5775},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 151, col: 25, offset: 5780},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 933, col: 7, offset: 37526},
																					run: (*parser).callonSection2Title15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 933, col: 7, offset: 37526},
																						expr: &seqExpr{
																							pos: position{line: 933, col: 8, offset: 37527},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 933, col: 8, offset: 37527},
																									expr: &choiceExpr{
																										pos: position{line: 951, col: 12, offset: 37864},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 951, col: 12, offset: 37864},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 951, col: 21, offset: 37873},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 17, offset: 37536},
																									expr: &choiceExpr{
																										pos: position{line: 947, col: 7, offset: 37802},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 947, col: 7, offset: 37802},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 947, col: 13, offset: 37808},
																												run: (*parser).callonSection2Title25,
																												expr: &litMatcher{
																													pos:        position{line: 947, col: 13, offset: 37808},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 21, offset: 37540},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 22, offset: 37541},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 26, offset: 37545},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 27, offset: 37546},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 31, offset: 37550},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 32, offset: 37551},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 37, offset: 37556},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 38, offset: 37557},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 933, col: 42, offset: 37561,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 151, col: 33, offset: 5788},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 5, offset: 5691},
															run: (*parser).callonSection2Title37,
															expr: &seqExpr{
																pos: position{line: 147, col: 5, offset: 5691},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 5, offset: 5691},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 10, offset: 5696},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 933, col: 7, offset: 37526},
																			run: (*parser).callonSection2Title41,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 933, col: 7, offset: 37526},
																				expr: &seqExpr{
																					pos: position{line: 933, col: 8, offset: 37527},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 933, col: 8, offset: 37527},
																							expr: &choiceExpr{
																								pos: position{line: 951, col: 12, offset: 37864},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 17, offset: 37536},
																							expr: &choiceExpr{
																								pos: position{line: 947, col: 7, offset: 37802},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 947, col: 7, offset: 37802},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 947, col: 13, offset: 37808},
																										run: (*parser).callonSection2Title51,
																										expr: &litMatcher{
																											pos:        position{line: 947, col: 13, offset: 37808},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 21, offset: 37540},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 22, offset: 37541},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 26, offset: 37545},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 27, offset: 37546},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 31, offset: 37550},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 32, offset: 37551},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 37, offset: 37556},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 38, offset: 37557},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 933, col: 42, offset: 37561,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 18, offset: 5704},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 17, offset: 5997},
															run: (*parser).callonSection2Title63,
															expr: &seqExpr{
																pos: position{line: 157, col: 17, offset: 5997},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 17, offset: 5997},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 21, offset: 6001},
																		expr: &litMatcher{
																			pos:        position{line: 157, col: 22, offset: 6002},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 157, col: 26, offset: 6006},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonSection2Title71,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 30, offset: 6010},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 161, col: 24, offset: 6115},
																			run: (*parser).callonSection2Title74,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 161, col: 24, offset: 6115},
																				expr: &seqExpr{
																					pos: position{line: 161, col: 25, offset: 6116},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 161, col: 25, offset: 6116},
																							expr: &choiceExpr{
																								pos: position{line: 951, col: 12, offset: 37864},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 161, col: 34, offset: 6125,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 167, col: 16, offset: 6274},
															run: (*parser).callonSection2Title82,
															expr: &seqExpr{
																pos: position{line: 167, col: 16, offset: 6274},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 167, col: 16, offset: 6274},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 167, col: 21, offset: 6279},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonSection2Title88,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 167, col: 25, offset: 6283},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 171, col: 23, offset: 6387},
																			run: (*parser).callonSection2Title91,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 171, col: 23, offset: 6387},
																				expr: &seqExpr{
																					pos: position{line: 171, col: 24, offset: 6388},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 171, col: 24, offset: 6388},
																							expr: &choiceExpr{
																								pos: position{line: 951, col: 12, offset: 37864},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 171, col: 33, offset: 6397},
																							expr: &litMatcher{
																								pos:        position{line: 171, col: 34, offset: 6398},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 171, col: 38, offset: 6402,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 167, col: 51, offset: 6309},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 30, offset: 6551},
															run: (*parser).callonSection2Title102,
															expr: &seqExpr{
																pos: position{line: 176, col: 30, offset: 6551},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 30, offset: 6551},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 34, offset: 6555},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 494, col: 19, offset: 19202},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 494, col: 19, offset: 19202},
																					run: (*parser).callonSection2Title107,
																					expr: &litMatcher{
																						pos:        position{line: 494, col: 19, offset: 19202},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 496, col: 5, offset: 19240},
																					run: (*parser).callonSection2Title109,
																					expr: &litMatcher{
																						pos:        position{line: 496, col: 5, offset: 19240},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 498, col: 5, offset: 19280},
																					run: (*parser).callonSection2Title111,
																					expr: &litMatcher{
																						pos:        position{line: 498, col: 5, offset: 19280},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 500, col: 5, offset: 19330},
																					run: (*parser).callonSection2Title113,
																					expr: &litMatcher{
																						pos:        position{line: 500, col: 5, offset: 19330},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 502, col: 5, offset: 19376},
																					run: (*parser).callonSection2Title115,
																					expr: &litMatcher{
																						pos:        position{line: 502, col: 5, offset: 19376},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 53, offset: 6574},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 199, col: 21, offset: 7299},
															run: (*parser).callonSection2Title118,
															expr: &litMatcher{
																pos:        position{line: 199, col: 21, offset: 7299},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 19, offset: 6735},
															run: (*parser).callonSection2Title120,
															expr: &seqExpr{
																pos: position{line: 181, col: 19, offset: 6735},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 19, offset: 6735},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 23, offset: 6739},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonSection2Title126,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 27, offset: 6743},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 181, col: 38, offset: 6754},
																			expr: &choiceExpr{
																				pos: position{line: 185, col: 21, offset: 6867},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						run: (*parser).callonSection2Title131,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 21, offset: 6867},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonSection2Title134,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonSection2Title137,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 185, col: 40, offset: 6886},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 185, col: 44, offset: 6890},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 195, col: 19, offset: 7217},
																										run: (*parser).callonSection2Title151,
																										expr: &labeledExpr{
																											pos:   position{line: 195, col: 19, offset: 7217},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 195, col: 25, offset: 7223},
																												expr: &seqExpr{
																													pos: position{line: 195, col: 26, offset: 7224},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 195, col: 26, offset: 7224},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 27, offset: 7225},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 31, offset: 7229},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 32, offset: 7230},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 36, offset: 7234},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 37, offset: 7235},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 195, col: 41, offset: 7239,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 67, offset: 6913},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 67, offset: 6913},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 72, offset: 6918},
																									expr: &choiceExpr{
																										pos: position{line: 947, col: 7, offset: 37802},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 947, col: 7, offset: 37802},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 947, col: 13, offset: 37808},
																												run: (*parser).callonSection2Title167,
																												expr: &litMatcher{
																													pos:        position{line: 947, col: 13, offset: 37808},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						run: (*parser).callonSection2Title169,
																						expr: &seqExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 187, col: 5, offset: 7002},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonSection2Title172,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonSection2Title175,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 187, col: 24, offset: 7021},
																									expr: &litMatcher{
																										pos:        position{line: 187, col: 24, offset: 7021},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 187, col: 29, offset: 7026},
																									expr: &choiceExpr{
																										pos: position{line: 947, col: 7, offset: 37802},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 947, col: 7, offset: 37802},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 947, col: 13, offset: 37808},
																												run: (*parser).callonSection2Title192,
																												expr: &litMatcher{
																													pos:        position{line: 947, col: 13, offset: 37808},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 181, col: 59, offset: 6775},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5298},
												expr: &choiceExpr{
													pos: position{line: 947, col: 7, offset: 37802},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 947, col: 7, offset: 37802},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 947, col: 13, offset: 37808},
															run: (*parser).callonSection2Title198,
															expr: &litMatcher{
																pos:        position{line: 947, col: 13, offset: 37808},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 955, col: 8, offset: 37904},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 951, col: 12, offset: 37864},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 951, col: 21, offset: 37873},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 953, col: 8, offset: 37893},
														expr: &anyMatcher{
															line: 953, col: 9, offset: 37894,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 294, col: 24, offset: 10813},
							val:        "===",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 294, col: 30, offset: 10819},
							expr: &choiceExpr{
								pos: position{line: 947, col: 7, offset: 37802},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 947, col: 7, offset: 37802},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 947, col: 13, offset: 37808},
										run: (*parser).callonSection2Title209,
										expr: &litMatcher{
											pos:        position{line: 947, col: 13, offset: 37808},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 296, col: 69, offset: 10893},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 296, col: 78, offset: 10902},
								name: "TitleElements",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 296, col: 93, offset: 10917},
							expr: &choiceExpr{
								pos: position{line: 947, col: 7, offset: 37802},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 947, col: 7, offset: 37802},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 947, col: 13, offset: 37808},
										run: (*parser).callonSection2Title216,
										expr: &litMatcher{
											pos:        position{line: 947, col: 13, offset: 37808},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 296, col: 97, offset: 10921},
							label: "id",
							expr: &zeroOrOneExpr{
								pos: position{line: 296, col: 100, offset: 10924},
								expr: &actionExpr{
									pos: position{line: 151, col: 20, offset: 5775},
									run: (*parser).callonSection2Title220,
									expr: &seqExpr{
										pos: position{line: 151, col: 20, offset: 5775},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 151, col: 20, offset: 5775},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 151, col: 25, offset: 5780},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 933, col: 7, offset: 37526},
													run: (*parser).callonSection2Title224,
													expr: &oneOrMoreExpr{
														pos: position{line: 933, col: 7, offset: 37526},
														expr: &seqExpr{
															pos: position{line: 933, col: 8, offset: 37527},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 933, col: 8, offset: 37527},
																	expr: &choiceExpr{
																		pos: position{line: 951, col: 12, offset: 37864},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 951, col: 12, offset: 37864},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 951, col: 21, offset: 37873},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 933, col: 17, offset: 37536},
																	expr: &choiceExpr{
																		pos: position{line: 947, col: 7, offset: 37802},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 947, col: 7, offset: 37802},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 947, col: 13, offset: 37808},
																				run: (*parser).callonSection2Title234,
																				expr: &litMatcher{
																					pos:        position{line: 947, col: 13, offset: 37808},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 933, col: 21, offset: 37540},
																	expr: &litMatcher{
																		pos:        position{line: 933, col: 22, offset: 37541},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 933, col: 26, offset: 37545},
																	expr: &litMatcher{
																		pos:        position{line: 933, col: 27, offset: 37546},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 933, col: 31, offset: 37550},
																	expr: &litMatcher{
																		pos:        position{line: 933, col: 32, offset: 37551},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 933, col: 37, offset: 37556},
																	expr: &litMatcher{
																		pos:        position{line: 933, col: 38, offset: 37557},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 933, col: 42, offset: 37561,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 151, col: 33, offset: 5788},
												val:        "]]",
												ignoreCase: false,
											},
										},
									},
								},
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 296, col: 119, offset: 10943},
							expr: &choiceExpr{
								pos: position{line: 947, col: 7, offset: 37802},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 947, col: 7, offset: 37802},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 947, col: 13, offset: 37808},
										run: (*parser).callonSection2Title249,
										expr: &litMatcher{
											pos:        position{line: 947, col: 13, offset: 37808},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 955, col: 8, offset: 37904},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 951, col: 12, offset: 37864},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 951, col: 21, offset: 37873},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 953, col: 8, offset: 37893},
									expr: &anyMatcher{
										line: 953, col: 9, offset: 37894,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section2Block",
			pos:  position{line: 300, col: 1, offset: 11061},
			expr: &actionExpr{
				pos: position{line: 300, col: 18, offset: 11078},
				run: (*parser).callonSection2Block1,
				expr: &seqExpr{
					pos: position{line: 300, col: 18, offset: 11078},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 300, col: 18, offset: 11078},
							expr: &ruleRefExpr{
								pos:  position{line: 300, col: 19, offset: 11079},
								name: "Section1Title",
							},
						},
						&notExpr{
							pos: position{line: 300, col: 33, offset: 11093},
							expr: &ruleRefExpr{
								pos:  position{line: 300, col: 34, offset: 11094},
								name: "Section2Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 300, col: 48, offset: 11108},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 300, col: 56, offset: 11116},
								expr: &choiceExpr{
									pos: position{line: 300, col: 57, offset: 11117},
									alternatives: []interface{}{
										&ruleRefExpr{
											pos:  position{line: 300, col: 57, offset: 11117},
											name: "Section3",
										},
										&ruleRefExpr{
											pos:  position{line: 300, col: 68, offset: 11128},
											name: "Section4",
										},
										&ruleRefExpr{
											pos:  position{line: 300, col: 79, offset: 11139},
											name: "Section5",
										},
										&ruleRefExpr{
											pos:  position{line: 300, col: 90, offset: 11150},
											name: "DocumentBlock",
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section3",
			pos:  position{line: 304, col: 1, offset: 11195},
			expr: &actionExpr{
				pos: position{line: 304, col: 13, offset: 11207},
				run: (*parser).callonSection31,
				expr: &seqExpr{
					pos: position{line: 304, col: 13, offset: 11207},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 304, col: 13, offset: 11207},
							expr: &notExpr{
								pos: position{line: 953, col: 8, offset: 37893},
								expr: &anyMatcher{
									line: 953, col: 9, offset: 37894,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 305, col: 5, offset: 11278},
							label: "section",
							expr: &actionExpr{
								pos: position{line: 305, col: 14, offset: 11287},
								run: (*parser).callonSection37,
								expr: &seqExpr{
									pos: position{line: 305, col: 14, offset: 11287},
									exprs: []interface{}{
										&labeledExpr{
											pos:   position{line: 305, col: 14, offset: 11287},
											label: "header",
											expr: &ruleRefExpr{
												pos:  position{line: 305, col: 22, offset: 11295},
												name: "Section3Title",
											},
										},
										&labeledExpr{
											pos:   position{line: 305, col: 37, offset: 11310},
											label: "elements",
											expr: &zeroOrOneExpr{
												pos: position{line: 305, col: 47, offset: 11320},
												expr: &ruleRefExpr{
													pos:  position{line: 305, col: 47, offset: 11320},
													name: "Section3Block",
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section3Title",
			pos:  position{line: 313, col: 1, offset: 11508},
			expr: &actionExpr{
				pos: position{line: 313, col: 18, offset: 11525},
				run: (*parser).callonSection3Title1,
				expr: &seqExpr{
					pos: position{line: 313, col: 18, offset: 11525},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 313, col: 18, offset: 11525},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 313, col: 29, offset: 11536},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5188},
									run: (*parser).callonSection3Title5,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5188},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5188},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5194},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 145, col: 14, offset: 5645},
															run: (*parser).callonSection3Title9,
															expr: &labeledExpr{
																pos:   position{line: 145, col: 14, offset: 5645},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 151, col: 20, offset: 5775},
																	run: (*parser).callonSection3Title11,
																	expr: &seqExpr{
																		pos: position{line: 151, col: 20, offset: 5775},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 151, col: 20, offset: 5775},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 151, col: 25, offset: 5780},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 933, col: 7, offset: 37526},
																					run: (*parser).callonSection3Title15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 933, col: 7, offset: 37526},
																						expr: &seqExpr{
																							pos: position{line: 933, col: 8, offset: 37527},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 933, col: 8, offset: 37527},
																									expr: &choiceExpr{
																										pos: position{line: 951, col: 12, offset: 37864},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 951, col: 12, offset: 37864},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 951, col: 21, offset: 37873},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 17, offset: 37536},
																									expr: &choiceExpr{
																										pos: position{line: 947, col: 7, offset: 37802},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 947, col: 7, offset: 37802},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 947, col: 13, offset: 37808},
																												run: (*parser).callonSection3Title25,
																												expr: &litMatcher{
																													pos:        position{line: 947, col: 13, offset: 37808},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 21, offset: 37540},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 22, offset: 37541},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 26, offset: 37545},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 27, offset: 37546},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 31, offset: 37550},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 32, offset: 37551},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 37, offset: 37556},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 38, offset: 37557},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 933, col: 42, offset: 37561,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 151, col: 33, offset: 5788},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 5, offset: 5691},
															run: (*parser).callonSection3Title37,
															expr: &seqExpr{
																pos: position{line: 147, col: 5, offset: 5691},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 5, offset: 5691},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 10, offset: 5696},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 933, col: 7, offset: 37526},
																			run: (*parser).callonSection3Title41,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 933, col: 7, offset: 37526},
																				expr: &seqExpr{
																					pos: position{line: 933, col: 8, offset: 37527},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 933, col: 8, offset: 37527},
																							expr: &choiceExpr{
																								pos: position{line: 951, col: 12, offset: 37864},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 17, offset: 37536},
																							expr: &choiceExpr{
																								pos: position{line: 947, col: 7, offset: 37802},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 947, col: 7, offset: 37802},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 947, col: 13, offset: 37808},
																										run: (*parser).callonSection3Title51,
																										expr: &litMatcher{
																											pos:        position{line: 947, col: 13, offset: 37808},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 21, offset: 37540},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 22, offset: 37541},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 26, offset: 37545},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 27, offset: 37546},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 31, offset: 37550},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 32, offset: 37551},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 37, offset: 37556},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 38, offset: 37557},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 933, col: 42, offset: 37561,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 18, offset: 5704},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 17, offset: 5997},
															run: (*parser).callonSection3Title63,
															expr: &seqExpr{
																pos: position{line: 157, col: 17, offset: 5997},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 17, offset: 5997},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 21, offset: 6001},
																		expr: &litMatcher{
																			pos:        position{line: 157, col: 22, offset: 6002},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 157, col: 26, offset: 6006},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonSection3Title71,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 30, offset: 6010},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 161, col: 24, offset: 6115},
																			run: (*parser).callonSection3Title74,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 161, col: 24, offset: 6115},
																				expr: &seqExpr{
																					pos: position{line: 161, col: 25, offset: 6116},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 161, col: 25, offset: 6116},
																							expr: &choiceExpr{
																								pos: position{line: 951, col: 12, offset: 37864},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 161, col: 34, offset: 6125,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 167, col: 16, offset: 6274},
															run: (*parser).callonSection3Title82,
															expr: &seqExpr{
																pos: position{line: 167, col: 16, offset: 6274},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 167, col: 16, offset: 6274},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 167, col: 21, offset: 6279},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonSection3Title88,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 167, col: 25, offset: 6283},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 171, col: 23, offset: 6387},
																			run: (*parser).callonSection3Title91,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 171, col: 23, offset: 6387},
																				expr: &seqExpr{
																					pos: position{line: 171, col: 24, offset: 6388},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 171, col: 24, offset: 6388},
																							expr: &choiceExpr{
																								pos: position{line: 951, col: 12, offset: 37864},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 171, col: 33, offset: 6397},
																							expr: &litMatcher{
																								pos:        position{line: 171, col: 34, offset: 6398},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 171, col: 38, offset: 6402,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 167, col: 51, offset: 6309},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 30, offset: 6551},
															run: (*parser).callonSection3Title102,
															expr: &seqExpr{
																pos: position{line: 176, col: 30, offset: 6551},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 30, offset: 6551},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 34, offset: 6555},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 494, col: 19, offset: 19202},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 494, col: 19, offset: 19202},
																					run: (*parser).callonSection3Title107,
																					expr: &litMatcher{
																						pos:        position{line: 494, col: 19, offset: 19202},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 496, col: 5, offset: 19240},
																					run: (*parser).callonSection3Title109,
																					expr: &litMatcher{
																						pos:        position{line: 496, col: 5, offset: 19240},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 498, col: 5, offset: 19280},
																					run: (*parser).callonSection3Title111,
																					expr: &litMatcher{
																						pos:        position{line: 498, col: 5, offset: 19280},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 500, col: 5, offset: 19330},
																					run: (*parser).callonSection3Title113,
																					expr: &litMatcher{
																						pos:        position{line: 500, col: 5, offset: 19330},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 502, col: 5, offset: 19376},
																					run: (*parser).callonSection3Title115,
																					expr: &litMatcher{
																						pos:        position{line: 502, col: 5, offset: 19376},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 53, offset: 6574},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 199, col: 21, offset: 7299},
															run: (*parser).callonSection3Title118,
															expr: &litMatcher{
																pos:        position{line: 199, col: 21, offset: 7299},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 19, offset: 6735},
															run: (*parser).callonSection3Title120,
															expr: &seqExpr{
																pos: position{line: 181, col: 19, offset: 6735},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 19, offset: 6735},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 23, offset: 6739},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonSection3Title126,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 27, offset: 6743},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 181, col: 38, offset: 6754},
																			expr: &choiceExpr{
																				pos: position{line: 185, col: 21, offset: 6867},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						run: (*parser).callonSection3Title131,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 21, offset: 6867},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonSection3Title134,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonSection3Title137,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 185, col: 40, offset: 6886},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 185, col: 44, offset: 6890},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 195, col: 19, offset: 7217},
																										run: (*parser).callonSection3Title151,
																										expr: &labeledExpr{
																											pos:   position{line: 195, col: 19, offset: 7217},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 195, col: 25, offset: 7223},
																												expr: &seqExpr{
																													pos: position{line: 195, col: 26, offset: 7224},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 195, col: 26, offset: 7224},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 27, offset: 7225},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 31, offset: 7229},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 32, offset: 7230},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 36, offset: 7234},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 37, offset: 7235},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 195, col: 41, offset: 7239,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 67, offset: 6913},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 67, offset: 6913},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 72, offset: 6918},
																									expr: &choiceExpr{
																										pos: position{line: 947, col: 7, offset: 37802},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 947, col: 7, offset: 37802},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 947, col: 13, offset: 37808},
																												run: (*parser).callonSection3Title167,
																												expr: &litMatcher{
																													pos:        position{line: 947, col: 13, offset: 37808},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						run: (*parser).callonSection3Title169,
																						expr: &seqExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 187, col: 5, offset: 7002},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonSection3Title172,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonSection3Title175,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 187, col: 24, offset: 7021},
																									expr: &litMatcher{
																										pos:        position{line: 187, col: 24, offset: 7021},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 187, col: 29, offset: 7026},
																									expr: &choiceExpr{
																										pos: position{line: 947, col: 7, offset: 37802},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 947, col: 7, offset: 37802},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 947, col: 13, offset: 37808},
																												run: (*parser).callonSection3Title192,
																												expr: &litMatcher{
																													pos:        position{line: 947, col: 13, offset: 37808},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 181, col: 59, offset: 6775},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5298},
												expr: &choiceExpr{
													pos: position{line: 947, col: 7, offset: 37802},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 947, col: 7, offset: 37802},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 947, col: 13, offset: 37808},
															run: (*parser).callonSection3Title198,
															expr: &litMatcher{
																pos:        position{line: 947, col: 13, offset: 37808},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 955, col: 8, offset: 37904},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 951, col: 12, offset: 37864},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 951, col: 21, offset: 37873},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 953, col: 8, offset: 37893},
														expr: &anyMatcher{
															line: 953, col: 9, offset: 37894,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 311, col: 24, offset: 11495},
							val:        "====",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 311, col: 31, offset: 11502},
							expr: &choiceExpr{
								pos: position{line: 947, col: 7, offset: 37802},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 947, col: 7, offset: 37802},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 947, col: 13, offset: 37808},
										run: (*parser).callonSection3Title209,
										expr: &litMatcher{
											pos:        position{line: 947, col: 13, offset: 37808},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 313, col: 69, offset: 11576},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 313, col: 78, offset: 11585},
								name: "TitleElements",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 313, col: 93, offset: 11600},
							expr: &choiceExpr{
								pos: position{line: 947, col: 7, offset: 37802},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 947, col: 7, offset: 37802},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 947, col: 13, offset: 37808},
										run: (*parser).callonSection3Title216,
										expr: &litMatcher{
											pos:        position{line: 947, col: 13, offset: 37808},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 313, col: 97, offset: 11604},
							label: "id",
							expr: &zeroOrOneExpr{
								pos: position{line: 313, col: 100, offset: 11607},
								expr: &actionExpr{
									pos: position{line: 151, col: 20, offset: 5775},
									run: (*parser).callonSection3Title220,
									expr: &seqExpr{
										pos: position{line: 151, col: 20, offset: 5775},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 151, col: 20, offset: 5775},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 151, col: 25, offset: 5780},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 933, col: 7, offset: 37526},
													run: (*parser).callonSection3Title224,
													expr: &oneOrMoreExpr{
														pos: position{line: 933, col: 7, offset: 37526},
														expr: &seqExpr{
															pos: position{line: 933, col: 8, offset: 37527},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 933, col: 8, offset: 37527},
																	expr: &choiceExpr{
																		pos: position{line: 951, col: 12, offset: 37864},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 951, col: 12, offset: 37864},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 951, col: 21, offset: 37873},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 933, col: 17, offset: 37536},
																	expr: &choiceExpr{
																		pos: position{line: 947, col: 7, offset: 37802},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 947, col: 7, offset: 37802},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 947, col: 13, offset: 37808},
																				run: (*parser).callonSection3Title234,
																				expr: &litMatcher{
																					pos:        position{line: 947, col: 13, offset: 37808},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 933, col: 21, offset: 37540},
																	expr: &litMatcher{
																		pos:        position{line: 933, col: 22, offset: 37541},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 933, col: 26, offset: 37545},
																	expr: &litMatcher{
																		pos:        position{line: 933, col: 27, offset: 37546},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 933, col: 31, offset: 37550},
																	expr: &litMatcher{
																		pos:        position{line: 933, col: 32, offset: 37551},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 933, col: 37, offset: 37556},
																	expr: &litMatcher{
																		pos:        position{line: 933, col: 38, offset: 37557},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 933, col: 42, offset: 37561,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 151, col: 33, offset: 5788},
												val:        "]]",
												ignoreCase: false,
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 955, col: 8, offset: 37904},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 951, col: 12, offset: 37864},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 951, col: 21, offset: 37873},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 953, col: 8, offset: 37893},
									expr: &anyMatcher{
										line: 953, col: 9, offset: 37894,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section3Block",
			pos:  position{line: 317, col: 1, offset: 11740},
			expr: &actionExpr{
				pos: position{line: 317, col: 18, offset: 11757},
				run: (*parser).callonSection3Block1,
				expr: &seqExpr{
					pos: position{line: 317, col: 18, offset: 11757},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 317, col: 18, offset: 11757},
							expr: &ruleRefExpr{
								pos:  position{line: 317, col: 19, offset: 11758},
								name: "Section1Title",
							},
						},
						&notExpr{
							pos: position{line: 317, col: 33, offset: 11772},
							expr: &ruleRefExpr{
								pos:  position{line: 317, col: 34, offset: 11773},
								name: "Section2Title",
							},
						},
						&notExpr{
							pos: position{line: 317, col: 48, offset: 11787},
							expr: &ruleRefExpr{
								pos:  position{line: 317, col: 49, offset: 11788},
								name: "Section3Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 317, col: 64, offset: 11803},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 317, col: 72, offset: 11811},
								expr: &choiceExpr{
									pos: position{line: 317, col: 73, offset: 11812},
									alternatives: []interface{}{
										&ruleRefExpr{
											pos:  position{line: 317, col: 73, offset: 11812},
											name: "Section4",
										},
										&ruleRefExpr{
											pos:  position{line: 317, col: 84, offset: 11823},
											name: "Section5",
										},
										&ruleRefExpr{
											pos:  position{line: 317, col: 95, offset: 11834},
											name: "DocumentBlock",
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section4",
			pos:  position{line: 321, col: 1, offset: 11879},
			expr: &actionExpr{
				pos: position{line: 321, col: 13, offset: 11891},
				run: (*parser).callonSection41,
				expr: &seqExpr{
					pos: position{line: 321, col: 13, offset: 11891},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 321, col: 13, offset: 11891},
							expr: &notExpr{
								pos: position{line: 953, col: 8, offset: 37893},
								expr: &anyMatcher{
									line: 953, col: 9, offset: 37894,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 322, col: 5, offset: 11962},
							label: "section",
							expr: &actionExpr{
								pos: position{line: 322, col: 14, offset: 11971},
								run: (*parser).callonSection47,
								expr: &seqExpr{
									pos: position{line: 322, col: 14, offset: 11971},
									exprs: []interface{}{
										&labeledExpr{
											pos:   position{line: 322, col: 14, offset: 11971},
											label: "header",
											expr: &ruleRefExpr{
												pos:  position{line: 322, col: 22, offset: 11979},
												name: "Section4Title",
											},
										},
										&labeledExpr{
											pos:   position{line: 322, col: 37, offset: 11994},
											label: "elements",
											expr: &zeroOrOneExpr{
												pos: position{line: 322, col: 47, offset: 12004},
												expr: &ruleRefExpr{
													pos:  position{line: 322, col: 47, offset: 12004},
													name: "Section4Block",
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section4Title",
			pos:  position{line: 330, col: 1, offset: 12193},
			expr: &actionExpr{
				pos: position{line: 330, col: 18, offset: 12210},
				run: (*parser).callonSection4Title1,
				expr: &seqExpr{
					pos: position{line: 330, col: 18, offset: 12210},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 330, col: 18, offset: 12210},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 330, col: 29, offset: 12221},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5188},
									run: (*parser).callonSection4Title5,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5188},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5188},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5194},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 145, col: 14, offset: 5645},
															run: (*parser).callonSection4Title9,
															expr: &labeledExpr{
																pos:   position{line: 145, col: 14, offset: 5645},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 151, col: 20, offset: 5775},
																	run: (*parser).callonSection4Title11,
																	expr: &seqExpr{
																		pos: position{line: 151, col: 20, offset: 5775},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 151, col: 20, offset: 5775},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 151, col: 25, offset: 5780},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 933, col: 7, offset: 37526},
																					run: (*parser).callonSection4Title15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 933, col: 7, offset: 37526},
																						expr: &seqExpr{
																							pos: position{line: 933, col: 8, offset: 37527},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 933, col: 8, offset: 37527},
																									expr: &choiceExpr{
																										pos: position{line: 951, col: 12, offset: 37864},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 951, col: 12, offset: 37864},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 951, col: 21, offset: 37873},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 17, offset: 37536},
																									expr: &choiceExpr{
																										pos: position{line: 947, col: 7, offset: 37802},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 947, col: 7, offset: 37802},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 947, col: 13, offset: 37808},
																												run: (*parser).callonSection4Title25,
																												expr: &litMatcher{
																													pos:        position{line: 947, col: 13, offset: 37808},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 21, offset: 37540},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 22, offset: 37541},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 26, offset: 37545},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 27, offset: 37546},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 31, offset: 37550},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 32, offset: 37551},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 37, offset: 37556},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 38, offset: 37557},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 933, col: 42, offset: 37561,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 151, col: 33, offset: 5788},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 5, offset: 5691},
															run: (*parser).callonSection4Title37,
															expr: &seqExpr{
																pos: position{line: 147, col: 5, offset: 5691},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 5, offset: 5691},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 10, offset: 5696},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 933, col: 7, offset: 37526},
																			run: (*parser).callonSection4Title41,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 933, col: 7, offset: 37526},
																				expr: &seqExpr{
																					pos: position{line: 933, col: 8, offset: 37527},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 933, col: 8, offset: 37527},
																							expr: &choiceExpr{
																								pos: position{line: 951, col: 12, offset: 37864},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 17, offset: 37536},
																							expr: &choiceExpr{
																								pos: position{line: 947, col: 7, offset: 37802},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 947, col: 7, offset: 37802},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 947, col: 13, offset: 37808},
																										run: (*parser).callonSection4Title51,
																										expr: &litMatcher{
																											pos:        position{line: 947, col: 13, offset: 37808},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 21, offset: 37540},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 22, offset: 37541},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 26, offset: 37545},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 27, offset: 37546},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 31, offset: 37550},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 32, offset: 37551},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 37, offset: 37556},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 38, offset: 37557},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 933, col: 42, offset: 37561,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 18, offset: 5704},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 17, offset: 5997},
															run: (*parser).callonSection4Title63,
															expr: &seqExpr{
																pos: position{line: 157, col: 17, offset: 5997},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 17, offset: 5997},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 21, offset: 6001},
																		expr: &litMatcher{
																			pos:        position{line: 157, col: 22, offset: 6002},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 157, col: 26, offset: 6006},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonSection4Title71,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 30, offset: 6010},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 161, col: 24, offset: 6115},
																			run: (*parser).callonSection4Title74,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 161, col: 24, offset: 6115},
																				expr: &seqExpr{
																					pos: position{line: 161, col: 25, offset: 6116},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 161, col: 25, offset: 6116},
																							expr: &choiceExpr{
																								pos: position{line: 951, col: 12, offset: 37864},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 161, col: 34, offset: 6125,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 167, col: 16, offset: 6274},
															run: (*parser).callonSection4Title82,
															expr: &seqExpr{
																pos: position{line: 167, col: 16, offset: 6274},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 167, col: 16, offset: 6274},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 167, col: 21, offset: 6279},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonSection4Title88,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 167, col: 25, offset: 6283},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 171, col: 23, offset: 6387},
																			run: (*parser).callonSection4Title91,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 171, col: 23, offset: 6387},
																				expr: &seqExpr{
																					pos: position{line: 171, col: 24, offset: 6388},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 171, col: 24, offset: 6388},
																							expr: &choiceExpr{
																								pos: position{line: 951, col: 12, offset: 37864},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 171, col: 33, offset: 6397},
																							expr: &litMatcher{
																								pos:        position{line: 171, col: 34, offset: 6398},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 171, col: 38, offset: 6402,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 167, col: 51, offset: 6309},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 30, offset: 6551},
															run: (*parser).callonSection4Title102,
															expr: &seqExpr{
																pos: position{line: 176, col: 30, offset: 6551},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 30, offset: 6551},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 34, offset: 6555},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 494, col: 19, offset: 19202},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 494, col: 19, offset: 19202},
																					run: (*parser).callonSection4Title107,
																					expr: &litMatcher{
																						pos:        position{line: 494, col: 19, offset: 19202},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 496, col: 5, offset: 19240},
																					run: (*parser).callonSection4Title109,
																					expr: &litMatcher{
																						pos:        position{line: 496, col: 5, offset: 19240},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 498, col: 5, offset: 19280},
																					run: (*parser).callonSection4Title111,
																					expr: &litMatcher{
																						pos:        position{line: 498, col: 5, offset: 19280},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 500, col: 5, offset: 19330},
																					run: (*parser).callonSection4Title113,
																					expr: &litMatcher{
																						pos:        position{line: 500, col: 5, offset: 19330},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 502, col: 5, offset: 19376},
																					run: (*parser).callonSection4Title115,
																					expr: &litMatcher{
																						pos:        position{line: 502, col: 5, offset: 19376},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 53, offset: 6574},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 199, col: 21, offset: 7299},
															run: (*parser).callonSection4Title118,
															expr: &litMatcher{
																pos:        position{line: 199, col: 21, offset: 7299},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 19, offset: 6735},
															run: (*parser).callonSection4Title120,
															expr: &seqExpr{
																pos: position{line: 181, col: 19, offset: 6735},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 19, offset: 6735},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 23, offset: 6739},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonSection4Title126,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 27, offset: 6743},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 181, col: 38, offset: 6754},
																			expr: &choiceExpr{
																				pos: position{line: 185, col: 21, offset: 6867},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						run: (*parser).callonSection4Title131,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 21, offset: 6867},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonSection4Title134,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonSection4Title137,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 185, col: 40, offset: 6886},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 185, col: 44, offset: 6890},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 195, col: 19, offset: 7217},
																										run: (*parser).callonSection4Title151,
																										expr: &labeledExpr{
																											pos:   position{line: 195, col: 19, offset: 7217},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 195, col: 25, offset: 7223},
																												expr: &seqExpr{
																													pos: position{line: 195, col: 26, offset: 7224},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 195, col: 26, offset: 7224},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 27, offset: 7225},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 31, offset: 7229},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 32, offset: 7230},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 36, offset: 7234},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 37, offset: 7235},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 195, col: 41, offset: 7239,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 67, offset: 6913},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 67, offset: 6913},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 72, offset: 6918},
																									expr: &choiceExpr{
																										pos: position{line: 947, col: 7, offset: 37802},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 947, col: 7, offset: 37802},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 947, col: 13, offset: 37808},
																												run: (*parser).callonSection4Title167,
																												expr: &litMatcher{
																													pos:        position{line: 947, col: 13, offset: 37808},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						run: (*parser).callonSection4Title169,
																						expr: &seqExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 187, col: 5, offset: 7002},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonSection4Title172,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonSection4Title175,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 187, col: 24, offset: 7021},
																									expr: &litMatcher{
																										pos:        position{line: 187, col: 24, offset: 7021},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 187, col: 29, offset: 7026},
																									expr: &choiceExpr{
																										pos: position{line: 947, col: 7, offset: 37802},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 947, col: 7, offset: 37802},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 947, col: 13, offset: 37808},
																												run: (*parser).callonSection4Title192,
																												expr: &litMatcher{
																													pos:        position{line: 947, col: 13, offset: 37808},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 181, col: 59, offset: 6775},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5298},
												expr: &choiceExpr{
													pos: position{line: 947, col: 7, offset: 37802},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 947, col: 7, offset: 37802},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 947, col: 13, offset: 37808},
															run: (*parser).callonSection4Title198,
															expr: &litMatcher{
																pos:        position{line: 947, col: 13, offset: 37808},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 955, col: 8, offset: 37904},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 951, col: 12, offset: 37864},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 951, col: 21, offset: 37873},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 953, col: 8, offset: 37893},
														expr: &anyMatcher{
															line: 953, col: 9, offset: 37894,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 328, col: 24, offset: 12179},
							val:        "=====",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 328, col: 32, offset: 12187},
							expr: &choiceExpr{
								pos: position{line: 947, col: 7, offset: 37802},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 947, col: 7, offset: 37802},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 947, col: 13, offset: 37808},
										run: (*parser).callonSection4Title209,
										expr: &litMatcher{
											pos:        position{line: 947, col: 13, offset: 37808},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 330, col: 69, offset: 12261},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 330, col: 78, offset: 12270},
								name: "TitleElements",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 330, col: 93, offset: 12285},
							expr: &choiceExpr{
								pos: position{line: 947, col: 7, offset: 37802},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 947, col: 7, offset: 37802},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 947, col: 13, offset: 37808},
										run: (*parser).callonSection4Title216,
										expr: &litMatcher{
											pos:        position{line: 947, col: 13, offset: 37808},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 330, col: 97, offset: 12289},
							label: "id",
							expr: &zeroOrOneExpr{
								pos: position{line: 330, col: 100, offset: 12292},
								expr: &actionExpr{
									pos: position{line: 151, col: 20, offset: 5775},
									run: (*parser).callonSection4Title220,
									expr: &seqExpr{
										pos: position{line: 151, col: 20, offset: 5775},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 151, col: 20, offset: 5775},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 151, col: 25, offset: 5780},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 933, col: 7, offset: 37526},
													run: (*parser).callonSection4Title224,
													expr: &oneOrMoreExpr{
														pos: position{line: 933, col: 7, offset: 37526},
														expr: &seqExpr{
															pos: position{line: 933, col: 8, offset: 37527},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 933, col: 8, offset: 37527},
																	expr: &choiceExpr{
																		pos: position{line: 951, col: 12, offset: 37864},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 951, col: 12, offset: 37864},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 951, col: 21, offset: 37873},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 933, col: 17, offset: 37536},
																	expr: &choiceExpr{
																		pos: position{line: 947, col: 7, offset: 37802},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 947, col: 7, offset: 37802},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 947, col: 13, offset: 37808},
																				run: (*parser).callonSection4Title234,
																				expr: &litMatcher{
																					pos:        position{line: 947, col: 13, offset: 37808},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 933, col: 21, offset: 37540},
																	expr: &litMatcher{
																		pos:        position{line: 933, col: 22, offset: 37541},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 933, col: 26, offset: 37545},
																	expr: &litMatcher{
																		pos:        position{line: 933, col: 27, offset: 37546},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 933, col: 31, offset: 37550},
																	expr: &litMatcher{
																		pos:        position{line: 933, col: 32, offset: 37551},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 933, col: 37, offset: 37556},
																	expr: &litMatcher{
																		pos:        position{line: 933, col: 38, offset: 37557},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 933, col: 42, offset: 37561,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 151, col: 33, offset: 5788},
												val:        "]]",
												ignoreCase: false,
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 955, col: 8, offset: 37904},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 951, col: 12, offset: 37864},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 951, col: 21, offset: 37873},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 953, col: 8, offset: 37893},
									expr: &anyMatcher{
										line: 953, col: 9, offset: 37894,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section4Block",
			pos:  position{line: 334, col: 1, offset: 12425},
			expr: &actionExpr{
				pos: position{line: 334, col: 18, offset: 12442},
				run: (*parser).callonSection4Block1,
				expr: &seqExpr{
					pos: position{line: 334, col: 18, offset: 12442},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 334, col: 18, offset: 12442},
							expr: &ruleRefExpr{
								pos:  position{line: 334, col: 19, offset: 12443},
								name: "Section1Title",
							},
						},
						&notExpr{
							pos: position{line: 334, col: 33, offset: 12457},
							expr: &ruleRefExpr{
								pos:  position{line: 334, col: 34, offset: 12458},
								name: "Section2Title",
							},
						},
						&notExpr{
							pos: position{line: 334, col: 48, offset: 12472},
							expr: &ruleRefExpr{
								pos:  position{line: 334, col: 49, offset: 12473},
								name: "Section3Title",
							},
						},
						&notExpr{
							pos: position{line: 334, col: 63, offset: 12487},
							expr: &ruleRefExpr{
								pos:  position{line: 334, col: 64, offset: 12488},
								name: "Section4Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 334, col: 79, offset: 12503},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 334, col: 87, offset: 12511},
								expr: &choiceExpr{
									pos: position{line: 334, col: 88, offset: 12512},
									alternatives: []interface{}{
										&ruleRefExpr{
											pos:  position{line: 334, col: 88, offset: 12512},
											name: "Section5",
										},
										&ruleRefExpr{
											pos:  position{line: 334, col: 99, offset: 12523},
											name: "DocumentBlock",
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section5",
			pos:  position{line: 338, col: 1, offset: 12568},
			expr: &actionExpr{
				pos: position{line: 338, col: 13, offset: 12580},
				run: (*parser).callonSection51,
				expr: &seqExpr{
					pos: position{line: 338, col: 13, offset: 12580},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 338, col: 13, offset: 12580},
							expr: &notExpr{
								pos: position{line: 953, col: 8, offset: 37893},
								expr: &anyMatcher{
									line: 953, col: 9, offset: 37894,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 339, col: 5, offset: 12651},
							label: "section",
							expr: &actionExpr{
								pos: position{line: 339, col: 14, offset: 12660},
								run: (*parser).callonSection57,
								expr: &seqExpr{
									pos: position{line: 339, col: 14, offset: 12660},
									exprs: []interface{}{
										&labeledExpr{
											pos:   position{line: 339, col: 14, offset: 12660},
											label: "header",
											expr: &ruleRefExpr{
												pos:  position{line: 339, col: 22, offset: 12668},
												name: "Section5Title",
											},
										},
										&labeledExpr{
											pos:   position{line: 339, col: 37, offset: 12683},
											label: "elements",
											expr: &zeroOrOneExpr{
												pos: position{line: 339, col: 47, offset: 12693},
												expr: &ruleRefExpr{
													pos:  position{line: 339, col: 47, offset: 12693},
													name: "Section5Block",
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section5Title",
			pos:  position{line: 347, col: 1, offset: 12883},
			expr: &actionExpr{
				pos: position{line: 347, col: 18, offset: 12900},
				run: (*parser).callonSection5Title1,
				expr: &seqExpr{
					pos: position{line: 347, col: 18, offset: 12900},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 347, col: 18, offset: 12900},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 347, col: 29, offset: 12911},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5188},
									run: (*parser).callonSection5Title5,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5188},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5188},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5194},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 145, col: 14, offset: 5645},
															run: (*parser).callonSection5Title9,
															expr: &labeledExpr{
																pos:   position{line: 145, col: 14, offset: 5645},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 151, col: 20, offset: 5775},
																	run: (*parser).callonSection5Title11,
																	expr: &seqExpr{
																		pos: position{line: 151, col: 20, offset: 5775},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 151, col: 20, offset: 5775},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 151, col: 25, offset: 5780},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 933, col: 7, offset: 37526},
																					run: (*parser).callonSection5Title15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 933, col: 7, offset: 37526},
																						expr: &seqExpr{
																							pos: position{line: 933, col: 8, offset: 37527},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 933, col: 8, offset: 37527},
																									expr: &choiceExpr{
																										pos: position{line: 951, col: 12, offset: 37864},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 951, col: 12, offset: 37864},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 951, col: 21, offset: 37873},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 17, offset: 37536},
																									expr: &choiceExpr{
																										pos: position{line: 947, col: 7, offset: 37802},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 947, col: 7, offset: 37802},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 947, col: 13, offset: 37808},
																												run: (*parser).callonSection5Title25,
																												expr: &litMatcher{
																													pos:        position{line: 947, col: 13, offset: 37808},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 21, offset: 37540},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 22, offset: 37541},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 26, offset: 37545},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 27, offset: 37546},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 31, offset: 37550},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 32, offset: 37551},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 37, offset: 37556},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 38, offset: 37557},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 933, col: 42, offset: 37561,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 151, col: 33, offset: 5788},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 5, offset: 5691},
															run: (*parser).callonSection5Title37,
															expr: &seqExpr{
																pos: position{line: 147, col: 5, offset: 5691},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 5, offset: 5691},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 10, offset: 5696},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 933, col: 7, offset: 37526},
																			run: (*parser).callonSection5Title41,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 933, col: 7, offset: 37526},
																				expr: &seqExpr{
																					pos: position{line: 933, col: 8, offset: 37527},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 933, col: 8, offset: 37527},
																							expr: &choiceExpr{
																								pos: position{line: 951, col: 12, offset: 37864},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 17, offset: 37536},
																							expr: &choiceExpr{
																								pos: position{line: 947, col: 7, offset: 37802},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 947, col: 7, offset: 37802},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 947, col: 13, offset: 37808},
																										run: (*parser).callonSection5Title51,
																										expr: &litMatcher{
																											pos:        position{line: 947, col: 13, offset: 37808},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 21, offset: 37540},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 22, offset: 37541},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 26, offset: 37545},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 27, offset: 37546},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 31, offset: 37550},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 32, offset: 37551},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 37, offset: 37556},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 38, offset: 37557},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 933, col: 42, offset: 37561,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 18, offset: 5704},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 17, offset: 5997},
															run: (*parser).callonSection5Title63,
															expr: &seqExpr{
																pos: position{line: 157, col: 17, offset: 5997},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 17, offset: 5997},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 21, offset: 6001},
																		expr: &litMatcher{
																			pos:        position{line: 157, col: 22, offset: 6002},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 157, col: 26, offset: 6006},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonSection5Title71,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 30, offset: 6010},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 161, col: 24, offset: 6115},
																			run: (*parser).callonSection5Title74,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 161, col: 24, offset: 6115},
																				expr: &seqExpr{
																					pos: position{line: 161, col: 25, offset: 6116},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 161, col: 25, offset: 6116},
																							expr: &choiceExpr{
																								pos: position{line: 951, col: 12, offset: 37864},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 161, col: 34, offset: 6125,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 167, col: 16, offset: 6274},
															run: (*parser).callonSection5Title82,
															expr: &seqExpr{
																pos: position{line: 167, col: 16, offset: 6274},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 167, col: 16, offset: 6274},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 167, col: 21, offset: 6279},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonSection5Title88,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 167, col: 25, offset: 6283},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 171, col: 23, offset: 6387},
																			run: (*parser).callonSection5Title91,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 171, col: 23, offset: 6387},
																				expr: &seqExpr{
																					pos: position{line: 171, col: 24, offset: 6388},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 171, col: 24, offset: 6388},
																							expr: &choiceExpr{
																								pos: position{line: 951, col: 12, offset: 37864},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 171, col: 33, offset: 6397},
																							expr: &litMatcher{
																								pos:        position{line: 171, col: 34, offset: 6398},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 171, col: 38, offset: 6402,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 167, col: 51, offset: 6309},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 30, offset: 6551},
															run: (*parser).callonSection5Title102,
															expr: &seqExpr{
																pos: position{line: 176, col: 30, offset: 6551},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 30, offset: 6551},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 34, offset: 6555},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 494, col: 19, offset: 19202},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 494, col: 19, offset: 19202},
																					run: (*parser).callonSection5Title107,
																					expr: &litMatcher{
																						pos:        position{line: 494, col: 19, offset: 19202},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 496, col: 5, offset: 19240},
																					run: (*parser).callonSection5Title109,
																					expr: &litMatcher{
																						pos:        position{line: 496, col: 5, offset: 19240},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 498, col: 5, offset: 19280},
																					run: (*parser).callonSection5Title111,
																					expr: &litMatcher{
																						pos:        position{line: 498, col: 5, offset: 19280},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 500, col: 5, offset: 19330},
																					run: (*parser).callonSection5Title113,
																					expr: &litMatcher{
																						pos:        position{line: 500, col: 5, offset: 19330},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 502, col: 5, offset: 19376},
																					run: (*parser).callonSection5Title115,
																					expr: &litMatcher{
																						pos:        position{line: 502, col: 5, offset: 19376},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 53, offset: 6574},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 199, col: 21, offset: 7299},
															run: (*parser).callonSection5Title118,
															expr: &litMatcher{
																pos:        position{line: 199, col: 21, offset: 7299},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 19, offset: 6735},
															run: (*parser).callonSection5Title120,
															expr: &seqExpr{
																pos: position{line: 181, col: 19, offset: 6735},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 19, offset: 6735},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 23, offset: 6739},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonSection5Title126,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 27, offset: 6743},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 181, col: 38, offset: 6754},
																			expr: &choiceExpr{
																				pos: position{line: 185, col: 21, offset: 6867},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						run: (*parser).callonSection5Title131,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 21, offset: 6867},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonSection5Title134,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonSection5Title137,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 185, col: 40, offset: 6886},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 185, col: 44, offset: 6890},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 195, col: 19, offset: 7217},
																										run: (*parser).callonSection5Title151,
																										expr: &labeledExpr{
																											pos:   position{line: 195, col: 19, offset: 7217},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 195, col: 25, offset: 7223},
																												expr: &seqExpr{
																													pos: position{line: 195, col: 26, offset: 7224},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 195, col: 26, offset: 7224},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 27, offset: 7225},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 31, offset: 7229},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 32, offset: 7230},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 36, offset: 7234},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 37, offset: 7235},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 195, col: 41, offset: 7239,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 67, offset: 6913},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 67, offset: 6913},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 72, offset: 6918},
																									expr: &choiceExpr{
																										pos: position{line: 947, col: 7, offset: 37802},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 947, col: 7, offset: 37802},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 947, col: 13, offset: 37808},
																												run: (*parser).callonSection5Title167,
																												expr: &litMatcher{
																													pos:        position{line: 947, col: 13, offset: 37808},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						run: (*parser).callonSection5Title169,
																						expr: &seqExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 187, col: 5, offset: 7002},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonSection5Title172,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonSection5Title175,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 187, col: 24, offset: 7021},
																									expr: &litMatcher{
																										pos:        position{line: 187, col: 24, offset: 7021},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 187, col: 29, offset: 7026},
																									expr: &choiceExpr{
																										pos: position{line: 947, col: 7, offset: 37802},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 947, col: 7, offset: 37802},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 947, col: 13, offset: 37808},
																												run: (*parser).callonSection5Title192,
																												expr: &litMatcher{
																													pos:        position{line: 947, col: 13, offset: 37808},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 181, col: 59, offset: 6775},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5298},
												expr: &choiceExpr{
													pos: position{line: 947, col: 7, offset: 37802},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 947, col: 7, offset: 37802},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 947, col: 13, offset: 37808},
															run: (*parser).callonSection5Title198,
															expr: &litMatcher{
																pos:        position{line: 947, col: 13, offset: 37808},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 955, col: 8, offset: 37904},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 951, col: 12, offset: 37864},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 951, col: 21, offset: 37873},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 953, col: 8, offset: 37893},
														expr: &anyMatcher{
															line: 953, col: 9, offset: 37894,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 345, col: 24, offset: 12868},
							val:        "======",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 345, col: 33, offset: 12877},
							expr: &choiceExpr{
								pos: position{line: 947, col: 7, offset: 37802},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 947, col: 7, offset: 37802},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 947, col: 13, offset: 37808},
										run: (*parser).callonSection5Title209,
										expr: &litMatcher{
											pos:        position{line: 947, col: 13, offset: 37808},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 347, col: 69, offset: 12951},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 347, col: 78, offset: 12960},
								name: "TitleElements",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 347, col: 93, offset: 12975},
							expr: &choiceExpr{
								pos: position{line: 947, col: 7, offset: 37802},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 947, col: 7, offset: 37802},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 947, col: 13, offset: 37808},
										run: (*parser).callonSection5Title216,
										expr: &litMatcher{
											pos:        position{line: 947, col: 13, offset: 37808},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 347, col: 97, offset: 12979},
							label: "id",
							expr: &zeroOrOneExpr{
								pos: position{line: 347, col: 100, offset: 12982},
								expr: &actionExpr{
									pos: position{line: 151, col: 20, offset: 5775},
									run: (*parser).callonSection5Title220,
									expr: &seqExpr{
										pos: position{line: 151, col: 20, offset: 5775},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 151, col: 20, offset: 5775},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 151, col: 25, offset: 5780},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 933, col: 7, offset: 37526},
													run: (*parser).callonSection5Title224,
													expr: &oneOrMoreExpr{
														pos: position{line: 933, col: 7, offset: 37526},
														expr: &seqExpr{
															pos: position{line: 933, col: 8, offset: 37527},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 933, col: 8, offset: 37527},
																	expr: &choiceExpr{
																		pos: position{line: 951, col: 12, offset: 37864},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 951, col: 12, offset: 37864},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 951, col: 21, offset: 37873},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 933, col: 17, offset: 37536},
																	expr: &choiceExpr{
																		pos: position{line: 947, col: 7, offset: 37802},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 947, col: 7, offset: 37802},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 947, col: 13, offset: 37808},
																				run: (*parser).callonSection5Title234,
																				expr: &litMatcher{
																					pos:        position{line: 947, col: 13, offset: 37808},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 933, col: 21, offset: 37540},
																	expr: &litMatcher{
																		pos:        position{line: 933, col: 22, offset: 37541},
																		val:        "[",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 933, col: 26, offset: 37545},
																	expr: &litMatcher{
																		pos:        position{line: 933, col: 27, offset: 37546},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 933, col: 31, offset: 37550},
																	expr: &litMatcher{
																		pos:        position{line: 933, col: 32, offset: 37551},
																		val:        "<<",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 933, col: 37, offset: 37556},
																	expr: &litMatcher{
																		pos:        position{line: 933, col: 38, offset: 37557},
																		val:        ">>",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 933, col: 42, offset: 37561,
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 151, col: 33, offset: 5788},
												val:        "]]",
												ignoreCase: false,
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 955, col: 8, offset: 37904},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 951, col: 12, offset: 37864},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 951, col: 21, offset: 37873},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 953, col: 8, offset: 37893},
									expr: &anyMatcher{
										line: 953, col: 9, offset: 37894,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section5Block",
			pos:  position{line: 351, col: 1, offset: 13115},
			expr: &actionExpr{
				pos: position{line: 351, col: 18, offset: 13132},
				run: (*parser).callonSection5Block1,
				expr: &seqExpr{
					pos: position{line: 351, col: 18, offset: 13132},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 351, col: 18, offset: 13132},
							expr: &ruleRefExpr{
								pos:  position{line: 351, col: 19, offset: 13133},
								name: "Section1Title",
							},
						},
						&notExpr{
							pos: position{line: 351, col: 33, offset: 13147},
							expr: &ruleRefExpr{
								pos:  position{line: 351, col: 34, offset: 13148},
								name: "Section2Title",
							},
						},
						&notExpr{
							pos: position{line: 351, col: 48, offset: 13162},
							expr: &ruleRefExpr{
								pos:  position{line: 351, col: 49, offset: 13163},
								name: "Section3Title",
							},
						},
						&notExpr{
							pos: position{line: 351, col: 63, offset: 13177},
							expr: &ruleRefExpr{
								pos:  position{line: 351, col: 64, offset: 13178},
								name: "Section4Title",
							},
						},
						&notExpr{
							pos: position{line: 351, col: 78, offset: 13192},
							expr: &ruleRefExpr{
								pos:  position{line: 351, col: 79, offset: 13193},
								name: "Section5Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 351, col: 93, offset: 13207},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 351, col: 101, offset: 13215},
								expr: &ruleRefExpr{
									pos:  position{line: 351, col: 102, offset: 13216},
									name: "DocumentBlock",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "TitleElements",
			pos:  position{line: 355, col: 1, offset: 13261},
			expr: &actionExpr{
				pos: position{line: 355, col: 18, offset: 13278},
				run: (*parser).callonTitleElements1,
				expr: &labeledExpr{
					pos:   position{line: 355, col: 18, offset: 13278},
					label: "elements",
					expr: &oneOrMoreExpr{
						pos: position{line: 355, col: 27, offset: 13287},
						expr: &seqExpr{
							pos: position{line: 355, col: 28, offset: 13288},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 355, col: 28, offset: 13288},
									expr: &choiceExpr{
										pos: position{line: 951, col: 12, offset: 37864},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 951, col: 12, offset: 37864},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 951, col: 21, offset: 37873},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 355, col: 37, offset: 13297},
									expr: &choiceExpr{
										pos: position{line: 947, col: 7, offset: 37802},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 947, col: 7, offset: 37802},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 947, col: 13, offset: 37808},
												run: (*parser).callonTitleElements12,
												expr: &litMatcher{
													pos:        position{line: 947, col: 13, offset: 37808},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 355, col: 41, offset: 13301},
									expr: &actionExpr{
										pos: position{line: 151, col: 20, offset: 5775},
										run: (*parser).callonTitleElements15,
										expr: &seqExpr{
											pos: position{line: 151, col: 20, offset: 5775},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 151, col: 20, offset: 5775},
													val:        "[[",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 151, col: 25, offset: 5780},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 933, col: 7, offset: 37526},
														run: (*parser).callonTitleElements19,
														expr: &oneOrMoreExpr{
															pos: position{line: 933, col: 7, offset: 37526},
															expr: &seqExpr{
																pos: position{line: 933, col: 8, offset: 37527},
																exprs: []interface{}{
																	&notExpr{
																		pos: position{line: 933, col: 8, offset: 37527},
																		expr: &choiceExpr{
																			pos: position{line: 951, col: 12, offset: 37864},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 951, col: 12, offset: 37864},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 951, col: 21, offset: 37873},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 933, col: 17, offset: 37536},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonTitleElements29,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&notExpr{
																		pos: position{line: 933, col: 21, offset: 37540},
																		expr: &litMatcher{
																			pos:        position{line: 933, col: 22, offset: 37541},
																			val:        "[",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 933, col: 26, offset: 37545},
																		expr: &litMatcher{
																			pos:        position{line: 933, col: 27, offset: 37546},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 933, col: 31, offset: 37550},
																		expr: &litMatcher{
																			pos:        position{line: 933, col: 32, offset: 37551},
																			val:        "<<",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 933, col: 37, offset: 37556},
																		expr: &litMatcher{
																			pos:        position{line: 933, col: 38, offset: 37557},
																			val:        ">>",
																			ignoreCase: false,
																		},
																	},
																	&anyMatcher{
																		line: 933, col: 42, offset: 37561,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 151, col: 33, offset: 5788},
													val:        "]]",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&ruleRefExpr{
									pos:  position{line: 355, col: 58, offset: 13318},
									name: "TitleElement",
								},
								&zeroOrMoreExpr{
									pos: position{line: 355, col: 71, offset: 13331},
									expr: &choiceExpr{
										pos: position{line: 947, col: 7, offset: 37802},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 947, col: 7, offset: 37802},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 947, col: 13, offset: 37808},
												run: (*parser).callonTitleElements45,
												expr: &litMatcher{
													pos:        position{line: 947, col: 13, offset: 37808},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "TitleElement",
			pos:  position{line: 359, col: 1, offset: 13443},
			expr: &actionExpr{
				pos: position{line: 359, col: 17, offset: 13459},
				run: (*parser).callonTitleElement1,
				expr: &labeledExpr{
					pos:   position{line: 359, col: 17, offset: 13459},
					label: "element",
					expr: &choiceExpr{
						pos: position{line: 359, col: 26, offset: 13468},
						alternatives: []interface{}{
							&actionExpr{
								pos: position{line: 645, col: 19, offset: 27050},
								run: (*parser).callonTitleElement4,
								expr: &seqExpr{
									pos: position{line: 645, col: 19, offset: 27050},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 645, col: 19, offset: 27050},
											val:        "<<",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 645, col: 24, offset: 27055},
											label: "id",
											expr: &actionExpr{
												pos: position{line: 933, col: 7, offset: 37526},
												run: (*parser).callonTitleElement8,
												expr: &oneOrMoreExpr{
													pos: position{line: 933, col: 7, offset: 37526},
													expr: &seqExpr{
														pos: position{line: 933, col: 8, offset: 37527},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 933, col: 8, offset: 37527},
																expr: &choiceExpr{
																	pos: position{line: 951, col: 12, offset: 37864},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 951, col: 12, offset: 37864},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 951, col: 21, offset: 37873},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 933, col: 17, offset: 37536},
																expr: &choiceExpr{
																	pos: position{line: 947, col: 7, offset: 37802},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 947, col: 7, offset: 37802},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 947, col: 13, offset: 37808},
																			run: (*parser).callonTitleElement18,
																			expr: &litMatcher{
																				pos:        position{line: 947, col: 13, offset: 37808},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 933, col: 21, offset: 37540},
																expr: &litMatcher{
																	pos:        position{line: 933, col: 22, offset: 37541},
																	val:        "[",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 933, col: 26, offset: 37545},
																expr: &litMatcher{
																	pos:        position{line: 933, col: 27, offset: 37546},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 933, col: 31, offset: 37550},
																expr: &litMatcher{
																	pos:        position{line: 933, col: 32, offset: 37551},
																	val:        "<<",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 933, col: 37, offset: 37556},
																expr: &litMatcher{
																	pos:        position{line: 933, col: 38, offset: 37557},
																	val:        ">>",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 933, col: 42, offset: 37561,
															},
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 645, col: 32, offset: 27063},
											val:        ">>",
											ignoreCase: false,
										},
									},
								},
							},
							&ruleRefExpr{
								pos:  position{line: 359, col: 43, offset: 13485},
								name: "Passthrough",
							},
							&actionExpr{
								pos: position{line: 693, col: 16, offset: 28573},
								run: (*parser).callonTitleElement31,
								expr: &seqExpr{
									pos: position{line: 693, col: 16, offset: 28573},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 693, col: 16, offset: 28573},
											val:        "image:",
											ignoreCase: false,
										},
										&notExpr{
											pos: position{line: 693, col: 25, offset: 28582},
											expr: &litMatcher{
												pos:        position{line: 693, col: 26, offset: 28583},
												val:        ":",
												ignoreCase: false,
											},
										},
										&labeledExpr{
											pos:   position{line: 693, col: 30, offset: 28587},
											label: "path",
											expr: &actionExpr{
												pos: position{line: 929, col: 8, offset: 37456},
												run: (*parser).callonTitleElement37,
												expr: &oneOrMoreExpr{
													pos: position{line: 929, col: 8, offset: 37456},
													expr: &seqExpr{
														pos: position{line: 929, col: 9, offset: 37457},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 929, col: 9, offset: 37457},
																expr: &choiceExpr{
																	pos: position{line: 951, col: 12, offset: 37864},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 951, col: 12, offset: 37864},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 951, col: 21, offset: 37873},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 929, col: 18, offset: 37466},
																expr: &choiceExpr{
																	pos: position{line: 947, col: 7, offset: 37802},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 947, col: 7, offset: 37802},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 947, col: 13, offset: 37808},
																			run: (*parser).callonTitleElement47,
																			expr: &litMatcher{
																				pos:        position{line: 947, col: 13, offset: 37808},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 929, col: 22, offset: 37470},
																expr: &litMatcher{
																	pos:        position{line: 929, col: 23, offset: 37471},
																	val:        "[",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 929, col: 27, offset: 37475},
																expr: &litMatcher{
																	pos:        position{line: 929, col: 28, offset: 37476},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 929, col: 32, offset: 37480,
															},
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 693, col: 41, offset: 28598},
											label: "attributes",
											expr: &choiceExpr{
												pos: position{line: 698, col: 20, offset: 28843},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 698, col: 20, offset: 28843},
														run: (*parser).callonTitleElement56,
														expr: &seqExpr{
															pos: position{line: 698, col: 20, offset: 28843},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 698, col: 20, offset: 28843},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 698, col: 24, offset: 28847},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 715, col: 19, offset: 29622},
																		run: (*parser).callonTitleElement60,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 715, col: 19, offset: 29622},
																			expr: &seqExpr{
																				pos: position{line: 715, col: 20, offset: 29623},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 715, col: 20, offset: 29623},
																						expr: &litMatcher{
																							pos:        position{line: 715, col: 21, offset: 29624},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 715, col: 25, offset: 29628},
																						expr: &litMatcher{
																							pos:        position{line: 715, col: 26, offset: 29629},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 715, col: 30, offset: 29633},
																						expr: &litMatcher{
																							pos:        position{line: 715, col: 31, offset: 29634},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 715, col: 35, offset: 29638,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 698, col: 45, offset: 28868},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 699, col: 9, offset: 28880},
																	label: "width",
																	expr: &actionExpr{
																		pos: position{line: 715, col: 19, offset: 29622},
																		run: (*parser).callonTitleElement72,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 715, col: 19, offset: 29622},
																			expr: &seqExpr{
																				pos: position{line: 715, col: 20, offset: 29623},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 715, col: 20, offset: 29623},
																						expr: &litMatcher{
																							pos:        position{line: 715, col: 21, offset: 29624},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 715, col: 25, offset: 29628},
																						expr: &litMatcher{
																							pos:        position{line: 715, col: 26, offset: 29629},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 715, col: 30, offset: 29633},
																						expr: &litMatcher{
																							pos:        position{line: 715, col: 31, offset: 29634},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 715, col: 35, offset: 29638,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 699, col: 33, offset: 28904},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 700, col: 9, offset: 28916},
																	label: "height",
																	expr: &actionExpr{
																		pos: position{line: 715, col: 19, offset: 29622},
																		run: (*parser).callonTitleElement84,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 715, col: 19, offset: 29622},
																			expr: &seqExpr{
																				pos: position{line: 715, col: 20, offset: 29623},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 715, col: 20, offset: 29623},
																						expr: &litMatcher{
																							pos:        position{line: 715, col: 21, offset: 29624},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 715, col: 25, offset: 29628},
																						expr: &litMatcher{
																							pos:        position{line: 715, col: 26, offset: 29629},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 715, col: 30, offset: 29633},
																						expr: &litMatcher{
																							pos:        position{line: 715, col: 31, offset: 29634},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 715, col: 35, offset: 29638,
																					},
																				},
																			},
																		},
																	},
																},
																&zeroOrOneExpr{
																	pos: position{line: 700, col: 33, offset: 28940},
																	expr: &litMatcher{
																		pos:        position{line: 700, col: 33, offset: 28940},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&labeledExpr{
																	pos:   position{line: 701, col: 9, offset: 28953},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 701, col: 20, offset: 28964},
																		expr: &choiceExpr{
																			pos: position{line: 185, col: 21, offset: 6867},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					run: (*parser).callonTitleElement99,
																					expr: &seqExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 185, col: 21, offset: 6867},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonTitleElement102,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonTitleElement105,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 185, col: 40, offset: 6886},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 185, col: 44, offset: 6890},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 195, col: 19, offset: 7217},
																									run: (*parser).callonTitleElement119,
																									expr: &labeledExpr{
																										pos:   position{line: 195, col: 19, offset: 7217},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 195, col: 25, offset: 7223},
																											expr: &seqExpr{
																												pos: position{line: 195, col: 26, offset: 7224},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 195, col: 26, offset: 7224},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 27, offset: 7225},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 31, offset: 7229},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 32, offset: 7230},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 36, offset: 7234},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 37, offset: 7235},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 195, col: 41, offset: 7239,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 185, col: 67, offset: 6913},
																								expr: &litMatcher{
																									pos:        position{line: 185, col: 67, offset: 6913},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 185, col: 72, offset: 6918},
																								expr: &choiceExpr{
																									pos: position{line: 947, col: 7, offset: 37802},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 947, col: 7, offset: 37802},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 947, col: 13, offset: 37808},
																											run: (*parser).callonTitleElement135,
																											expr: &litMatcher{
																												pos:        position{line: 947, col: 13, offset: 37808},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 187, col: 5, offset: 7002},
																					run: (*parser).callonTitleElement137,
																					expr: &seqExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 187, col: 5, offset: 7002},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonTitleElement140,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonTitleElement143,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 187, col: 24, offset: 7021},
																								expr: &litMatcher{
																									pos:        position{line: 187, col: 24, offset: 7021},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 187, col: 29, offset: 7026},
																								expr: &choiceExpr{
																									pos: position{line: 947, col: 7, offset: 37802},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 947, col: 7, offset: 37802},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 947, col: 13, offset: 37808},
																											run: (*parser).callonTitleElement160,
																											expr: &litMatcher{
																												pos:        position{line: 947, col: 13, offset: 37808},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 701, col: 40, offset: 28984},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 703, col: 9, offset: 29090},
														run: (*parser).callonTitleElement163,
														expr: &seqExpr{
															pos: position{line: 703, col: 9, offset: 29090},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 703, col: 9, offset: 29090},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 703, col: 13, offset: 29094},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 715, col: 19, offset: 29622},
																		run: (*parser).callonTitleElement167,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 715, col: 19, offset: 29622},
																			expr: &seqExpr{
																				pos: position{line: 715, col: 20, offset: 29623},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 715, col: 20, offset: 29623},
																						expr: &litMatcher{
																							pos:        position{line: 715, col: 21, offset: 29624},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 715, col: 25, offset: 29628},
																						expr: &litMatcher{
																							pos:        position{line: 715, col: 26, offset: 29629},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 715, col: 30, offset: 29633},
																						expr: &litMatcher{
																							pos:        position{line: 715, col: 31, offset: 29634},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 715, col: 35, offset: 29638,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 703, col: 34, offset: 29115},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 704, col: 9, offset: 29127},
																	label: "width",
																	expr: &actionExpr{
																		pos: position{line: 715, col: 19, offset: 29622},
																		run: (*parser).callonTitleElement179,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 715, col: 19, offset: 29622},
																			expr: &seqExpr{
																				pos: position{line: 715, col: 20, offset: 29623},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 715, col: 20, offset: 29623},
																						expr: &litMatcher{
																							pos:        position{line: 715, col: 21, offset: 29624},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 715, col: 25, offset: 29628},
																						expr: &litMatcher{
																							pos:        position{line: 715, col: 26, offset: 29629},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 715, col: 30, offset: 29633},
																						expr: &litMatcher{
																							pos:        position{line: 715, col: 31, offset: 29634},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 715, col: 35, offset: 29638,
																					},
																				},
																			},
																		},
																	},
																},
																&zeroOrOneExpr{
																	pos: position{line: 704, col: 32, offset: 29150},
																	expr: &litMatcher{
																		pos:        position{line: 704, col: 32, offset: 29150},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&labeledExpr{
																	pos:   position{line: 705, col: 9, offset: 29163},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 705, col: 20, offset: 29174},
																		expr: &choiceExpr{
																			pos: position{line: 185, col: 21, offset: 6867},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					run: (*parser).callonTitleElement194,
																					expr: &seqExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 185, col: 21, offset: 6867},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonTitleElement197,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonTitleElement200,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 185, col: 40, offset: 6886},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 185, col: 44, offset: 6890},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 195, col: 19, offset: 7217},
																									run: (*parser).callonTitleElement214,
																									expr: &labeledExpr{
																										pos:   position{line: 195, col: 19, offset: 7217},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 195, col: 25, offset: 7223},
																											expr: &seqExpr{
																												pos: position{line: 195, col: 26, offset: 7224},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 195, col: 26, offset: 7224},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 27, offset: 7225},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 31, offset: 7229},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 32, offset: 7230},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 36, offset: 7234},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 37, offset: 7235},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 195, col: 41, offset: 7239,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 185, col: 67, offset: 6913},
																								expr: &litMatcher{
																									pos:        position{line: 185, col: 67, offset: 6913},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 185, col: 72, offset: 6918},
																								expr: &choiceExpr{
																									pos: position{line: 947, col: 7, offset: 37802},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 947, col: 7, offset: 37802},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 947, col: 13, offset: 37808},
																											run: (*parser).callonTitleElement230,
																											expr: &litMatcher{
																												pos:        position{line: 947, col: 13, offset: 37808},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 187, col: 5, offset: 7002},
																					run: (*parser).callonTitleElement232,
																					expr: &seqExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 187, col: 5, offset: 7002},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonTitleElement235,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonTitleElement238,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 187, col: 24, offset: 7021},
																								expr: &litMatcher{
																									pos:        position{line: 187, col: 24, offset: 7021},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 187, col: 29, offset: 7026},
																								expr: &choiceExpr{
																									pos: position{line: 947, col: 7, offset: 37802},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 947, col: 7, offset: 37802},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 947, col: 13, offset: 37808},
																											run: (*parser).callonTitleElement255,
																											expr: &litMatcher{
																												pos:        position{line: 947, col: 13, offset: 37808},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 705, col: 40, offset: 29194},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 707, col: 9, offset: 29297},
														run: (*parser).callonTitleElement258,
														expr: &seqExpr{
															pos: position{line: 707, col: 9, offset: 29297},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 707, col: 9, offset: 29297},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 707, col: 13, offset: 29301},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 715, col: 19, offset: 29622},
																		run: (*parser).callonTitleElement262,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 715, col: 19, offset: 29622},
																			expr: &seqExpr{
																				pos: position{line: 715, col: 20, offset: 29623},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 715, col: 20, offset: 29623},
																						expr: &litMatcher{
																							pos:        position{line: 715, col: 21, offset: 29624},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 715, col: 25, offset: 29628},
																						expr: &litMatcher{
																							pos:        position{line: 715, col: 26, offset: 29629},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 715, col: 30, offset: 29633},
																						expr: &litMatcher{
																							pos:        position{line: 715, col: 31, offset: 29634},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 715, col: 35, offset: 29638,
																					},
																				},
																			},
																		},
																	},
																},
																&zeroOrOneExpr{
																	pos: position{line: 707, col: 34, offset: 29322},
																	expr: &litMatcher{
																		pos:        position{line: 707, col: 34, offset: 29322},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&labeledExpr{
																	pos:   position{line: 708, col: 9, offset: 29335},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 708, col: 20, offset: 29346},
																		expr: &choiceExpr{
																			pos: position{line: 185, col: 21, offset: 6867},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					run: (*parser).callonTitleElement277,
																					expr: &seqExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 185, col: 21, offset: 6867},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonTitleElement280,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonTitleElement283,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 185, col: 40, offset: 6886},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 185, col: 44, offset: 6890},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 195, col: 19, offset: 7217},
																									run: (*parser).callonTitleElement297,
																									expr: &labeledExpr{
																										pos:   position{line: 195, col: 19, offset: 7217},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 195, col: 25, offset: 7223},
																											expr: &seqExpr{
																												pos: position{line: 195, col: 26, offset: 7224},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 195, col: 26, offset: 7224},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 27, offset: 7225},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 31, offset: 7229},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 32, offset: 7230},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 36, offset: 7234},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 37, offset: 7235},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 195, col: 41, offset: 7239,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 185, col: 67, offset: 6913},
																								expr: &litMatcher{
																									pos:        position{line: 185, col: 67, offset: 6913},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 185, col: 72, offset: 6918},
																								expr: &choiceExpr{
																									pos: position{line: 947, col: 7, offset: 37802},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 947, col: 7, offset: 37802},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 947, col: 13, offset: 37808},
																											run: (*parser).callonTitleElement313,
																											expr: &litMatcher{
																												pos:        position{line: 947, col: 13, offset: 37808},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 187, col: 5, offset: 7002},
																					run: (*parser).callonTitleElement315,
																					expr: &seqExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 187, col: 5, offset: 7002},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonTitleElement318,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonTitleElement321,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 187, col: 24, offset: 7021},
																								expr: &litMatcher{
																									pos:        position{line: 187, col: 24, offset: 7021},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 187, col: 29, offset: 7026},
																								expr: &choiceExpr{
																									pos: position{line: 947, col: 7, offset: 37802},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 947, col: 7, offset: 37802},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 947, col: 13, offset: 37808},
																											run: (*parser).callonTitleElement338,
																											expr: &litMatcher{
																												pos:        position{line: 947, col: 13, offset: 37808},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 708, col: 40, offset: 29366},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 710, col: 9, offset: 29467},
														run: (*parser).callonTitleElement341,
														expr: &seqExpr{
															pos: position{line: 710, col: 9, offset: 29467},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 710, col: 9, offset: 29467},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 710, col: 13, offset: 29471},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 710, col: 24, offset: 29482},
																		expr: &choiceExpr{
																			pos: position{line: 185, col: 21, offset: 6867},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					run: (*parser).callonTitleElement347,
																					expr: &seqExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 185, col: 21, offset: 6867},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonTitleElement350,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonTitleElement353,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 185, col: 40, offset: 6886},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 185, col: 44, offset: 6890},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 195, col: 19, offset: 7217},
																									run: (*parser).callonTitleElement367,
																									expr: &labeledExpr{
																										pos:   position{line: 195, col: 19, offset: 7217},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 195, col: 25, offset: 7223},
																											expr: &seqExpr{
																												pos: position{line: 195, col: 26, offset: 7224},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 195, col: 26, offset: 7224},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 27, offset: 7225},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 31, offset: 7229},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 32, offset: 7230},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 36, offset: 7234},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 37, offset: 7235},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 195, col: 41, offset: 7239,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 185, col: 67, offset: 6913},
																								expr: &litMatcher{
																									pos:        position{line: 185, col: 67, offset: 6913},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 185, col: 72, offset: 6918},
																								expr: &choiceExpr{
																									pos: position{line: 947, col: 7, offset: 37802},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 947, col: 7, offset: 37802},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 947, col: 13, offset: 37808},
																											run: (*parser).callonTitleElement383,
																											expr: &litMatcher{
																												pos:        position{line: 947, col: 13, offset: 37808},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 187, col: 5, offset: 7002},
																					run: (*parser).callonTitleElement385,
																					expr: &seqExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 187, col: 5, offset: 7002},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonTitleElement388,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonTitleElement391,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 187, col: 24, offset: 7021},
																								expr: &litMatcher{
																									pos:        position{line: 187, col: 24, offset: 7021},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 187, col: 29, offset: 7026},
																								expr: &choiceExpr{
																									pos: position{line: 947, col: 7, offset: 37802},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 947, col: 7, offset: 37802},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 947, col: 13, offset: 37808},
																											run: (*parser).callonTitleElement408,
																											expr: &litMatcher{
																												pos:        position{line: 947, col: 13, offset: 37808},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 710, col: 44, offset: 29502},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
							&ruleRefExpr{
								pos:  position{line: 359, col: 71, offset: 13513},
								name: "QuotedText",
							},
							&actionExpr{
								pos: position{line: 652, col: 9, offset: 27230},
								run: (*parser).callonTitleElement412,
								expr: &labeledExpr{
									pos:   position{line: 652, col: 9, offset: 27230},
									label: "link",
									expr: &choiceExpr{
										pos: position{line: 652, col: 15, offset: 27236},
										alternatives: []interface{}{
											&actionExpr{
												pos: position{line: 667, col: 17, offset: 27664},
												run: (*parser).callonTitleElement415,
												expr: &seqExpr{
													pos: position{line: 667, col: 17, offset: 27664},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 667, col: 17, offset: 27664},
															val:        "link:",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 667, col: 25, offset: 27672},
															label: "url",
															expr: &actionExpr{
																pos: position{line: 671, col: 20, offset: 27823},
																run: (*parser).callonTitleElement419,
																expr: &seqExpr{
																	pos: position{line: 671, col: 20, offset: 27823},
																	exprs: []interface{}{
																		&zeroOrOneExpr{
																			pos: position{line: 671, col: 20, offset: 27823},
																			expr: &choiceExpr{
																				pos: position{line: 941, col: 15, offset: 37687},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 941, col: 15, offset: 37687},
																						val:        "http://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 941, col: 27, offset: 37699},
																						val:        "https://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 941, col: 40, offset: 37712},
																						val:        "ftp://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 941, col: 51, offset: 37723},
																						val:        "irc://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 941, col: 62, offset: 37734},
																						val:        "mailto:",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 929, col: 8, offset: 37456},
																			run: (*parser).callonTitleElement428,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 929, col: 8, offset: 37456},
																				expr: &seqExpr{
																					pos: position{line: 929, col: 9, offset: 37457},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 929, col: 9, offset: 37457},
																							expr: &choiceExpr{
																								pos: position{line: 951, col: 12, offset: 37864},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 929, col: 18, offset: 37466},
																							expr: &choiceExpr{
																								pos: position{line: 947, col: 7, offset: 37802},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 947, col: 7, offset: 37802},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 947, col: 13, offset: 37808},
																										run: (*parser).callonTitleElement438,
																										expr: &litMatcher{
																											pos:        position{line: 947, col: 13, offset: 37808},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 929, col: 22, offset: 37470},
																							expr: &litMatcher{
																								pos:        position{line: 929, col: 23, offset: 37471},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 929, col: 27, offset: 37475},
																							expr: &litMatcher{
																								pos:        position{line: 929, col: 28, offset: 37476},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 929, col: 32, offset: 37480,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&labeledExpr{
															pos:   position{line: 667, col: 47, offset: 27694},
															label: "attributes",
															expr: &choiceExpr{
																pos: position{line: 675, col: 19, offset: 27893},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 675, col: 19, offset: 27893},
																		run: (*parser).callonTitleElement447,
																		expr: &seqExpr{
																			pos: position{line: 675, col: 19, offset: 27893},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 675, col: 19, offset: 27893},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 675, col: 23, offset: 27897},
																					label: "text",
																					expr: &actionExpr{
																						pos: position{line: 682, col: 22, offset: 28173},
																						run: (*parser).callonTitleElement451,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 682, col: 22, offset: 28173},
																							expr: &seqExpr{
																								pos: position{line: 682, col: 23, offset: 28174},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 682, col: 23, offset: 28174},
																										expr: &litMatcher{
																											pos:        position{line: 682, col: 24, offset: 28175},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 682, col: 28, offset: 28179},
																										expr: &litMatcher{
																											pos:        position{line: 682, col: 29, offset: 28180},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 682, col: 33, offset: 28184,
																									},
																								},
																							},
																						},
																					},
																				},
																				&labeledExpr{
																					pos:   position{line: 676, col: 9, offset: 27930},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 676, col: 20, offset: 27941},
																						expr: &choiceExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 185, col: 21, offset: 6867},
																									run: (*parser).callonTitleElement462,
																									expr: &seqExpr{
																										pos: position{line: 185, col: 21, offset: 6867},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 185, col: 21, offset: 6867},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonTitleElement465,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8648},
																																	run: (*parser).callonTitleElement468,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8648},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 28, offset: 7138},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 32, offset: 7142},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 33, offset: 7143},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 34, offset: 7144},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 38, offset: 7148},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 39, offset: 7149},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 43, offset: 7153},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 44, offset: 7154},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 48, offset: 7158,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 185, col: 40, offset: 6886},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 185, col: 44, offset: 6890},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 195, col: 19, offset: 7217},
																													run: (*parser).callonTitleElement482,
																													expr: &labeledExpr{
																														pos:   position{line: 195, col: 19, offset: 7217},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 195, col: 25, offset: 7223},
																															expr: &seqExpr{
																																pos: position{line: 195, col: 26, offset: 7224},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 195, col: 26, offset: 7224},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 27, offset: 7225},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 31, offset: 7229},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 32, offset: 7230},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 36, offset: 7234},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 37, offset: 7235},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 195, col: 41, offset: 7239,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 185, col: 67, offset: 6913},
																												expr: &litMatcher{
																													pos:        position{line: 185, col: 67, offset: 6913},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 185, col: 72, offset: 6918},
																												expr: &choiceExpr{
																													pos: position{line: 947, col: 7, offset: 37802},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 947, col: 7, offset: 37802},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 947, col: 13, offset: 37808},
																															run: (*parser).callonTitleElement498,
																															expr: &litMatcher{
																																pos:        position{line: 947, col: 13, offset: 37808},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 187, col: 5, offset: 7002},
																									run: (*parser).callonTitleElement500,
																									expr: &seqExpr{
																										pos: position{line: 187, col: 5, offset: 7002},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 187, col: 5, offset: 7002},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonTitleElement503,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8648},
																																	run: (*parser).callonTitleElement506,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8648},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 28, offset: 7138},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 32, offset: 7142},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 33, offset: 7143},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 34, offset: 7144},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 38, offset: 7148},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 39, offset: 7149},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 43, offset: 7153},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 44, offset: 7154},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 48, offset: 7158,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 187, col: 24, offset: 7021},
																												expr: &litMatcher{
																													pos:        position{line: 187, col: 24, offset: 7021},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 187, col: 29, offset: 7026},
																												expr: &choiceExpr{
																													pos: position{line: 947, col: 7, offset: 37802},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 947, col: 7, offset: 37802},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 947, col: 13, offset: 37808},
																															run: (*parser).callonTitleElement523,
																															expr: &litMatcher{
																																pos:        position{line: 947, col: 13, offset: 37808},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 676, col: 40, offset: 27961},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 678, col: 5, offset: 28040},
																		run: (*parser).callonTitleElement526,
																		expr: &seqExpr{
																			pos: position{line: 678, col: 5, offset: 28040},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 678, col: 5, offset: 28040},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 678, col: 9, offset: 28044},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 678, col: 20, offset: 28055},
																						expr: &choiceExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 185, col: 21, offset: 6867},
																									run: (*parser).callonTitleElement532,
																									expr: &seqExpr{
																										pos: position{line: 185, col: 21, offset: 6867},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 185, col: 21, offset: 6867},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonTitleElement535,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8648},
																																	run: (*parser).callonTitleElement538,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8648},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 28, offset: 7138},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 32, offset: 7142},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 33, offset: 7143},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 34, offset: 7144},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 38, offset: 7148},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 39, offset: 7149},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 43, offset: 7153},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 44, offset: 7154},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 48, offset: 7158,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 185, col: 40, offset: 6886},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 185, col: 44, offset: 6890},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 195, col: 19, offset: 7217},
																													run: (*parser).callonTitleElement552,
																													expr: &labeledExpr{
																														pos:   position{line: 195, col: 19, offset: 7217},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 195, col: 25, offset: 7223},
																															expr: &seqExpr{
																																pos: position{line: 195, col: 26, offset: 7224},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 195, col: 26, offset: 7224},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 27, offset: 7225},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 31, offset: 7229},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 32, offset: 7230},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 36, offset: 7234},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 37, offset: 7235},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 195, col: 41, offset: 7239,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 185, col: 67, offset: 6913},
																												expr: &litMatcher{
																													pos:        position{line: 185, col: 67, offset: 6913},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 185, col: 72, offset: 6918},
																												expr: &choiceExpr{
																													pos: position{line: 947, col: 7, offset: 37802},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 947, col: 7, offset: 37802},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 947, col: 13, offset: 37808},
																															run: (*parser).callonTitleElement568,
																															expr: &litMatcher{
																																pos:        position{line: 947, col: 13, offset: 37808},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 187, col: 5, offset: 7002},
																									run: (*parser).callonTitleElement570,
																									expr: &seqExpr{
																										pos: position{line: 187, col: 5, offset: 7002},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 187, col: 5, offset: 7002},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonTitleElement573,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8648},
																																	run: (*parser).callonTitleElement576,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8648},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 28, offset: 7138},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 32, offset: 7142},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 33, offset: 7143},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 34, offset: 7144},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 38, offset: 7148},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 39, offset: 7149},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 43, offset: 7153},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 44, offset: 7154},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 48, offset: 7158,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 187, col: 24, offset: 7021},
																												expr: &litMatcher{
																													pos:        position{line: 187, col: 24, offset: 7021},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 187, col: 29, offset: 7026},
																												expr: &choiceExpr{
																													pos: position{line: 947, col: 7, offset: 37802},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 947, col: 7, offset: 37802},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 947, col: 13, offset: 37808},
																															run: (*parser).callonTitleElement593,
																															expr: &litMatcher{
																																pos:        position{line: 947, col: 13, offset: 37808},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 678, col: 40, offset: 28075},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&actionExpr{
												pos: position{line: 656, col: 17, offset: 27307},
												run: (*parser).callonTitleElement596,
												expr: &seqExpr{
													pos: position{line: 656, col: 17, offset: 27307},
													exprs: []interface{}{
														&labeledExpr{
															pos:   position{line: 656, col: 17, offset: 27307},
															label: "url",
															expr: &actionExpr{
																pos: position{line: 662, col: 20, offset: 27530},
																run: (*parser).callonTitleElement599,
																expr: &seqExpr{
																	pos: position{line: 662, col: 20, offset: 27530},
																	exprs: []interface{}{
																		&choiceExpr{
																			pos: position{line: 941, col: 15, offset: 37687},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 941, col: 15, offset: 37687},
																					val:        "http://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 941, col: 27, offset: 37699},
																					val:        "https://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 941, col: 40, offset: 37712},
																					val:        "ftp://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 941, col: 51, offset: 37723},
																					val:        "irc://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 941, col: 62, offset: 37734},
																					val:        "mailto:",
																					ignoreCase: false,
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 929, col: 8, offset: 37456},
																			run: (*parser).callonTitleElement607,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 929, col: 8, offset: 37456},
																				expr: &seqExpr{
																					pos: position{line: 929, col: 9, offset: 37457},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 929, col: 9, offset: 37457},
																							expr: &choiceExpr{
																								pos: position{line: 951, col: 12, offset: 37864},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 929, col: 18, offset: 37466},
																							expr: &choiceExpr{
																								pos: position{line: 947, col: 7, offset: 37802},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 947, col: 7, offset: 37802},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 947, col: 13, offset: 37808},
																										run: (*parser).callonTitleElement617,
																										expr: &litMatcher{
																											pos:        position{line: 947, col: 13, offset: 37808},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 929, col: 22, offset: 37470},
																							expr: &litMatcher{
																								pos:        position{line: 929, col: 23, offset: 37471},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 929, col: 27, offset: 37475},
																							expr: &litMatcher{
																								pos:        position{line: 929, col: 28, offset: 37476},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 929, col: 32, offset: 37480,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&labeledExpr{
															pos:   position{line: 656, col: 39, offset: 27329},
															label: "attributes",
															expr: &choiceExpr{
																pos: position{line: 675, col: 19, offset: 27893},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 675, col: 19, offset: 27893},
																		run: (*parser).callonTitleElement626,
																		expr: &seqExpr{
																			pos: position{line: 675, col: 19, offset: 27893},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 675, col: 19, offset: 27893},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 675, col: 23, offset: 27897},
																					label: "text",
																					expr: &actionExpr{
																						pos: position{line: 682, col: 22, offset: 28173},
																						run: (*parser).callonTitleElement630,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 682, col: 22, offset: 28173},
																							expr: &seqExpr{
																								pos: position{line: 682, col: 23, offset: 28174},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 682, col: 23, offset: 28174},
																										expr: &litMatcher{
																											pos:        position{line: 682, col: 24, offset: 28175},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 682, col: 28, offset: 28179},
																										expr: &litMatcher{
																											pos:        position{line: 682, col: 29, offset: 28180},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 682, col: 33, offset: 28184,
																									},
																								},
																							},
																						},
																					},
																				},
																				&labeledExpr{
																					pos:   position{line: 676, col: 9, offset: 27930},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 676, col: 20, offset: 27941},
																						expr: &choiceExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 185, col: 21, offset: 6867},
																									run: (*parser).callonTitleElement641,
																									expr: &seqExpr{
																										pos: position{line: 185, col: 21, offset: 6867},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 185, col: 21, offset: 6867},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonTitleElement644,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8648},
																																	run: (*parser).callonTitleElement647,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8648},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 28, offset: 7138},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 32, offset: 7142},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 33, offset: 7143},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 34, offset: 7144},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 38, offset: 7148},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 39, offset: 7149},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 43, offset: 7153},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 44, offset: 7154},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 48, offset: 7158,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 185, col: 40, offset: 6886},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 185, col: 44, offset: 6890},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 195, col: 19, offset: 7217},
																													run: (*parser).callonTitleElement661,
																													expr: &labeledExpr{
																														pos:   position{line: 195, col: 19, offset: 7217},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 195, col: 25, offset: 7223},
																															expr: &seqExpr{
																																pos: position{line: 195, col: 26, offset: 7224},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 195, col: 26, offset: 7224},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 27, offset: 7225},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 31, offset: 7229},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 32, offset: 7230},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 36, offset: 7234},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 37, offset: 7235},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 195, col: 41, offset: 7239,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 185, col: 67, offset: 6913},
																												expr: &litMatcher{
																													pos:        position{line: 185, col: 67, offset: 6913},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 185, col: 72, offset: 6918},
																												expr: &choiceExpr{
																													pos: position{line: 947, col: 7, offset: 37802},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 947, col: 7, offset: 37802},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 947, col: 13, offset: 37808},
																															run: (*parser).callonTitleElement677,
																															expr: &litMatcher{
																																pos:        position{line: 947, col: 13, offset: 37808},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 187, col: 5, offset: 7002},
																									run: (*parser).callonTitleElement679,
																									expr: &seqExpr{
																										pos: position{line: 187, col: 5, offset: 7002},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 187, col: 5, offset: 7002},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonTitleElement682,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8648},
																																	run: (*parser).callonTitleElement685,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8648},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 28, offset: 7138},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 32, offset: 7142},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 33, offset: 7143},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 34, offset: 7144},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 38, offset: 7148},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 39, offset: 7149},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 43, offset: 7153},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 44, offset: 7154},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 48, offset: 7158,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 187, col: 24, offset: 7021},
																												expr: &litMatcher{
																													pos:        position{line: 187, col: 24, offset: 7021},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 187, col: 29, offset: 7026},
																												expr: &choiceExpr{
																													pos: position{line: 947, col: 7, offset: 37802},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 947, col: 7, offset: 37802},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 947, col: 13, offset: 37808},
																															run: (*parser).callonTitleElement702,
																															expr: &litMatcher{
																																pos:        position{line: 947, col: 13, offset: 37808},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 676, col: 40, offset: 27961},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 678, col: 5, offset: 28040},
																		run: (*parser).callonTitleElement705,
																		expr: &seqExpr{
																			pos: position{line: 678, col: 5, offset: 28040},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 678, col: 5, offset: 28040},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 678, col: 9, offset: 28044},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 678, col: 20, offset: 28055},
																						expr: &choiceExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 185, col: 21, offset: 6867},
																									run: (*parser).callonTitleElement711,
																									expr: &seqExpr{
																										pos: position{line: 185, col: 21, offset: 6867},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 185, col: 21, offset: 6867},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonTitleElement714,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8648},
																																	run: (*parser).callonTitleElement717,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8648},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 28, offset: 7138},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 32, offset: 7142},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 33, offset: 7143},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 34, offset: 7144},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 38, offset: 7148},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 39, offset: 7149},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 43, offset: 7153},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 44, offset: 7154},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 48, offset: 7158,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 185, col: 40, offset: 6886},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 185, col: 44, offset: 6890},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 195, col: 19, offset: 7217},
																													run: (*parser).callonTitleElement731,
																													expr: &labeledExpr{
																														pos:   position{line: 195, col: 19, offset: 7217},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 195, col: 25, offset: 7223},
																															expr: &seqExpr{
																																pos: position{line: 195, col: 26, offset: 7224},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 195, col: 26, offset: 7224},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 27, offset: 7225},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 31, offset: 7229},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 32, offset: 7230},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 36, offset: 7234},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 37, offset: 7235},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 195, col: 41, offset: 7239,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 185, col: 67, offset: 6913},
																												expr: &litMatcher{
																													pos:        position{line: 185, col: 67, offset: 6913},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 185, col: 72, offset: 6918},
																												expr: &choiceExpr{
																													pos: position{line: 947, col: 7, offset: 37802},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 947, col: 7, offset: 37802},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 947, col: 13, offset: 37808},
																															run: (*parser).callonTitleElement747,
																															expr: &litMatcher{
																																pos:        position{line: 947, col: 13, offset: 37808},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 187, col: 5, offset: 7002},
																									run: (*parser).callonTitleElement749,
																									expr: &seqExpr{
																										pos: position{line: 187, col: 5, offset: 7002},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 187, col: 5, offset: 7002},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonTitleElement752,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8648},
																																	run: (*parser).callonTitleElement755,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8648},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 28, offset: 7138},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 32, offset: 7142},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 33, offset: 7143},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 34, offset: 7144},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 38, offset: 7148},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 39, offset: 7149},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 43, offset: 7153},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 44, offset: 7154},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 48, offset: 7158,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 187, col: 24, offset: 7021},
																												expr: &litMatcher{
																													pos:        position{line: 187, col: 24, offset: 7021},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 187, col: 29, offset: 7026},
																												expr: &choiceExpr{
																													pos: position{line: 947, col: 7, offset: 37802},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 947, col: 7, offset: 37802},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 947, col: 13, offset: 37808},
																															run: (*parser).callonTitleElement772,
																															expr: &litMatcher{
																																pos:        position{line: 947, col: 13, offset: 37808},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 678, col: 40, offset: 28075},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&actionExpr{
												pos: position{line: 658, col: 5, offset: 27440},
												run: (*parser).callonTitleElement775,
												expr: &labeledExpr{
													pos:   position{line: 658, col: 5, offset: 27440},
													label: "url",
													expr: &actionExpr{
														pos: position{line: 662, col: 20, offset: 27530},
														run: (*parser).callonTitleElement777,
														expr: &seqExpr{
															pos: position{line: 662, col: 20, offset: 27530},
															exprs: []interface{}{
																&choiceExpr{
																	pos: position{line: 941, col: 15, offset: 37687},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 941, col: 15, offset: 37687},
																			val:        "http://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 941, col: 27, offset: 37699},
																			val:        "https://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 941, col: 40, offset: 37712},
																			val:        "ftp://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 941, col: 51, offset: 37723},
																			val:        "irc://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 941, col: 62, offset: 37734},
																			val:        "mailto:",
																			ignoreCase: false,
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 929, col: 8, offset: 37456},
																	run: (*parser).callonTitleElement785,
																	expr: &oneOrMoreExpr{
																		pos: position{line: 929, col: 8, offset: 37456},
																		expr: &seqExpr{
																			pos: position{line: 929, col: 9, offset: 37457},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 929, col: 9, offset: 37457},
																					expr: &choiceExpr{
																						pos: position{line: 951, col: 12, offset: 37864},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 951, col: 12, offset: 37864},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 951, col: 21, offset: 37873},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 929, col: 18, offset: 37466},
																					expr: &choiceExpr{
																						pos: position{line: 947, col: 7, offset: 37802},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 947, col: 7, offset: 37802},
																								val:        " ",
																								ignoreCase: false,
																							},
																							&actionExpr{
																								pos: position{line: 947, col: 13, offset: 37808},
																								run: (*parser).callonTitleElement795,
																								expr: &litMatcher{
																									pos:        position{line: 947, col: 13, offset: 37808},
																									val:        "\t",
																									ignoreCase: false,
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 929, col: 22, offset: 37470},
																					expr: &litMatcher{
																						pos:        position{line: 929, col: 23, offset: 37471},
																						val:        "[",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 929, col: 27, offset: 37475},
																					expr: &litMatcher{
																						pos:        position{line: 929, col: 28, offset: 37476},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 929, col: 32, offset: 37480,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 114, col: 34, offset: 4427},
								run: (*parser).callonTitleElement802,
								expr: &seqExpr{
									pos: position{line: 114, col: 34, offset: 4427},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 114, col: 34, offset: 4427},
											val:        "{",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 114, col: 38, offset: 4431},
											label: "name",
											expr: &actionExpr{
												pos: position{line: 121, col: 26, offset: 4726},
												run: (*parser).callonTitleElement806,
												expr: &seqExpr{
													pos: position{line: 121, col: 26, offset: 4726},
													exprs: []interface{}{
														&charClassMatcher{
															pos:        position{line: 121, col: 27, offset: 4727},
															val:        "[_A-Za-z0-9]",
															chars:      []rune{'_'},
															ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
															ignoreCase: false,
															inverted:   false,
														},
														&zeroOrMoreExpr{
															pos: position{line: 121, col: 56, offset: 4756},
															expr: &charClassMatcher{
																pos:        position{line: 121, col: 57, offset: 4757},
																val:        "[-A-Za-z0-9]",
																chars:      []rune{'-'},
																ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																ignoreCase: false,
																inverted:   false,
															},
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 114, col: 67, offset: 4460},
											val:        "}",
											ignoreCase: false,
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 925, col: 9, offset: 37382},
								run: (*parser).callonTitleElement812,
								expr: &oneOrMoreExpr{
									pos: position{line: 925, col: 9, offset: 37382},
									expr: &seqExpr{
										pos: position{line: 925, col: 10, offset: 37383},
										exprs: []interface{}{
											&notExpr{
												pos: position{line: 925, col: 10, offset: 37383},
												expr: &choiceExpr{
													pos: position{line: 951, col: 12, offset: 37864},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 951, col: 12, offset: 37864},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 951, col: 21, offset: 37873},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 925, col: 19, offset: 37392},
												expr: &choiceExpr{
													pos: position{line: 947, col: 7, offset: 37802},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 947, col: 7, offset: 37802},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 947, col: 13, offset: 37808},
															run: (*parser).callonTitleElement822,
															expr: &litMatcher{
																pos:        position{line: 947, col: 13, offset: 37808},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 925, col: 23, offset: 37396},
												expr: &charClassMatcher{
													pos:        position{line: 923, col: 16, offset: 37351},
													val:        "[()[]]",
													chars:      []rune{'(', ')', '[', ']'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&anyMatcher{
												line: 925, col: 36, offset: 37409,
											},
										},
									},
								},
							},
							&charClassMatcher{
								pos:        position{line: 923, col: 16, offset: 37351},
								val:        "[()[]]",
								chars:      []rune{'(', ')', '[', ']'},
								ignoreCase: false,
								inverted:   false,
							},
						},
					},
				},
			},
		},
		{
			name: "List",
			pos:  position{line: 367, col: 1, offset: 13716},
			expr: &actionExpr{
				pos: position{line: 367, col: 9, offset: 13724},
				run: (*parser).callonList1,
				expr: &seqExpr{
					pos: position{line: 367, col: 9, offset: 13724},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 367, col: 9, offset: 13724},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 367, col: 20, offset: 13735},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5188},
									run: (*parser).callonList5,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5188},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5188},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5194},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 145, col: 14, offset: 5645},
															run: (*parser).callonList9,
															expr: &labeledExpr{
																pos:   position{line: 145, col: 14, offset: 5645},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 151, col: 20, offset: 5775},
																	run: (*parser).callonList11,
																	expr: &seqExpr{
																		pos: position{line: 151, col: 20, offset: 5775},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 151, col: 20, offset: 5775},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 151, col: 25, offset: 5780},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 933, col: 7, offset: 37526},
																					run: (*parser).callonList15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 933, col: 7, offset: 37526},
																						expr: &seqExpr{
																							pos: position{line: 933, col: 8, offset: 37527},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 933, col: 8, offset: 37527},
																									expr: &choiceExpr{
																										pos: position{line: 951, col: 12, offset: 37864},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 951, col: 12, offset: 37864},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 951, col: 21, offset: 37873},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 17, offset: 37536},
																									expr: &choiceExpr{
																										pos: position{line: 947, col: 7, offset: 37802},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 947, col: 7, offset: 37802},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 947, col: 13, offset: 37808},
																												run: (*parser).callonList25,
																												expr: &litMatcher{
																													pos:        position{line: 947, col: 13, offset: 37808},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 21, offset: 37540},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 22, offset: 37541},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 26, offset: 37545},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 27, offset: 37546},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 31, offset: 37550},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 32, offset: 37551},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 37, offset: 37556},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 38, offset: 37557},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 933, col: 42, offset: 37561,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 151, col: 33, offset: 5788},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 5, offset: 5691},
															run: (*parser).callonList37,
															expr: &seqExpr{
																pos: position{line: 147, col: 5, offset: 5691},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 5, offset: 5691},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 10, offset: 5696},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 933, col: 7, offset: 37526},
																			run: (*parser).callonList41,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 933, col: 7, offset: 37526},
																				expr: &seqExpr{
																					pos: position{line: 933, col: 8, offset: 37527},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 933, col: 8, offset: 37527},
																							expr: &choiceExpr{
																								pos: position{line: 951, col: 12, offset: 37864},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 17, offset: 37536},
																							expr: &choiceExpr{
																								pos: position{line: 947, col: 7, offset: 37802},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 947, col: 7, offset: 37802},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 947, col: 13, offset: 37808},
																										run: (*parser).callonList51,
																										expr: &litMatcher{
																											pos:        position{line: 947, col: 13, offset: 37808},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 21, offset: 37540},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 22, offset: 37541},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 26, offset: 37545},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 27, offset: 37546},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 31, offset: 37550},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 32, offset: 37551},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 37, offset: 37556},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 38, offset: 37557},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 933, col: 42, offset: 37561,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 18, offset: 5704},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 17, offset: 5997},
															run: (*parser).callonList63,
															expr: &seqExpr{
																pos: position{line: 157, col: 17, offset: 5997},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 17, offset: 5997},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 21, offset: 6001},
																		expr: &litMatcher{
																			pos:        position{line: 157, col: 22, offset: 6002},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 157, col: 26, offset: 6006},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonList71,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 30, offset: 6010},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 161, col: 24, offset: 6115},
																			run: (*parser).callonList74,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 161, col: 24, offset: 6115},
																				expr: &seqExpr{
																					pos: position{line: 161, col: 25, offset: 6116},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 161, col: 25, offset: 6116},
																							expr: &choiceExpr{
																								pos: position{line: 951, col: 12, offset: 37864},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 161, col: 34, offset: 6125,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 167, col: 16, offset: 6274},
															run: (*parser).callonList82,
															expr: &seqExpr{
																pos: position{line: 167, col: 16, offset: 6274},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 167, col: 16, offset: 6274},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 167, col: 21, offset: 6279},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonList88,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 167, col: 25, offset: 6283},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 171, col: 23, offset: 6387},
																			run: (*parser).callonList91,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 171, col: 23, offset: 6387},
																				expr: &seqExpr{
																					pos: position{line: 171, col: 24, offset: 6388},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 171, col: 24, offset: 6388},
																							expr: &choiceExpr{
																								pos: position{line: 951, col: 12, offset: 37864},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 171, col: 33, offset: 6397},
																							expr: &litMatcher{
																								pos:        position{line: 171, col: 34, offset: 6398},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 171, col: 38, offset: 6402,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 167, col: 51, offset: 6309},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 30, offset: 6551},
															run: (*parser).callonList102,
															expr: &seqExpr{
																pos: position{line: 176, col: 30, offset: 6551},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 30, offset: 6551},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 34, offset: 6555},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 494, col: 19, offset: 19202},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 494, col: 19, offset: 19202},
																					run: (*parser).callonList107,
																					expr: &litMatcher{
																						pos:        position{line: 494, col: 19, offset: 19202},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 496, col: 5, offset: 19240},
																					run: (*parser).callonList109,
																					expr: &litMatcher{
																						pos:        position{line: 496, col: 5, offset: 19240},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 498, col: 5, offset: 19280},
																					run: (*parser).callonList111,
																					expr: &litMatcher{
																						pos:        position{line: 498, col: 5, offset: 19280},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 500, col: 5, offset: 19330},
																					run: (*parser).callonList113,
																					expr: &litMatcher{
																						pos:        position{line: 500, col: 5, offset: 19330},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 502, col: 5, offset: 19376},
																					run: (*parser).callonList115,
																					expr: &litMatcher{
																						pos:        position{line: 502, col: 5, offset: 19376},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 53, offset: 6574},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 199, col: 21, offset: 7299},
															run: (*parser).callonList118,
															expr: &litMatcher{
																pos:        position{line: 199, col: 21, offset: 7299},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 19, offset: 6735},
															run: (*parser).callonList120,
															expr: &seqExpr{
																pos: position{line: 181, col: 19, offset: 6735},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 19, offset: 6735},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 23, offset: 6739},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonList126,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 27, offset: 6743},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 181, col: 38, offset: 6754},
																			expr: &choiceExpr{
																				pos: position{line: 185, col: 21, offset: 6867},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						run: (*parser).callonList131,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 21, offset: 6867},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonList134,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonList137,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 185, col: 40, offset: 6886},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 185, col: 44, offset: 6890},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 195, col: 19, offset: 7217},
																										run: (*parser).callonList151,
																										expr: &labeledExpr{
																											pos:   position{line: 195, col: 19, offset: 7217},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 195, col: 25, offset: 7223},
																												expr: &seqExpr{
																													pos: position{line: 195, col: 26, offset: 7224},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 195, col: 26, offset: 7224},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 27, offset: 7225},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 31, offset: 7229},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 32, offset: 7230},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 36, offset: 7234},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 37, offset: 7235},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 195, col: 41, offset: 7239,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 67, offset: 6913},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 67, offset: 6913},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 72, offset: 6918},
																									expr: &choiceExpr{
																										pos: position{line: 947, col: 7, offset: 37802},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 947, col: 7, offset: 37802},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 947, col: 13, offset: 37808},
																												run: (*parser).callonList167,
																												expr: &litMatcher{
																													pos:        position{line: 947, col: 13, offset: 37808},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						run: (*parser).callonList169,
																						expr: &seqExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 187, col: 5, offset: 7002},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonList172,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonList175,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 187, col: 24, offset: 7021},
																									expr: &litMatcher{
																										pos:        position{line: 187, col: 24, offset: 7021},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 187, col: 29, offset: 7026},
																									expr: &choiceExpr{
																										pos: position{line: 947, col: 7, offset: 37802},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 947, col: 7, offset: 37802},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 947, col: 13, offset: 37808},
																												run: (*parser).callonList192,
																												expr: &litMatcher{
																													pos:        position{line: 947, col: 13, offset: 37808},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 181, col: 59, offset: 6775},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5298},
												expr: &choiceExpr{
													pos: position{line: 947, col: 7, offset: 37802},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 947, col: 7, offset: 37802},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 947, col: 13, offset: 37808},
															run: (*parser).callonList198,
															expr: &litMatcher{
																pos:        position{line: 947, col: 13, offset: 37808},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 955, col: 8, offset: 37904},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 951, col: 12, offset: 37864},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 951, col: 21, offset: 37873},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 953, col: 8, offset: 37893},
														expr: &anyMatcher{
															line: 953, col: 9, offset: 37894,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 369, col: 5, offset: 13828},
							label: "elements",
							expr: &ruleRefExpr{
								pos:  position{line: 369, col: 14, offset: 13837},
								name: "ListItems",
							},
						},
					},
				},
			},
		},
		{
			name: "ListItems",
			pos:  position{line: 373, col: 1, offset: 13931},
			expr: &oneOrMoreExpr{
				pos: position{line: 373, col: 14, offset: 13944},
				expr: &choiceExpr{
					pos: position{line: 373, col: 15, offset: 13945},
					alternatives: []interface{}{
						&ruleRefExpr{
							pos:  position{line: 373, col: 15, offset: 13945},
							name: "OrderedListItem",
						},
						&ruleRefExpr{
							pos:  position{line: 373, col: 33, offset: 13963},
							name: "UnorderedListItem",
						},
						&ruleRefExpr{
							pos:  position{line: 373, col: 53, offset: 13983},
							name: "LabeledListItem",
						},
					},
				},
			},
		},
		{
			name: "ListParagraph",
			pos:  position{line: 375, col: 1, offset: 14002},
			expr: &actionExpr{
				pos: position{line: 375, col: 18, offset: 14019},
				run: (*parser).callonListParagraph1,
				expr: &labeledExpr{
					pos:   position{line: 375, col: 18, offset: 14019},
					label: "lines",
					expr: &oneOrMoreExpr{
						pos: position{line: 375, col: 24, offset: 14025},
						expr: &ruleRefExpr{
							pos:  position{line: 375, col: 25, offset: 14026},
							name: "ListParagraphLine",
						},
					},
				},
			},
		},
		{
			name: "ListParagraphLine",
			pos:  position{line: 379, col: 1, offset: 14110},
			expr: &actionExpr{
				pos: position{line: 380, col: 5, offset: 14136},
				run: (*parser).callonListParagraphLine1,
				expr: &seqExpr{
					pos: position{line: 380, col: 5, offset: 14136},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 380, col: 5, offset: 14136},
							expr: &actionExpr{
								pos: position{line: 405, col: 26, offset: 14956},
								run: (*parser).callonListParagraphLine4,
								expr: &seqExpr{
									pos: position{line: 405, col: 26, offset: 14956},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 405, col: 26, offset: 14956},
											expr: &choiceExpr{
												pos: position{line: 947, col: 7, offset: 37802},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 947, col: 7, offset: 37802},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 947, col: 13, offset: 37808},
														run: (*parser).callonListParagraphLine9,
														expr: &litMatcher{
															pos:        position{line: 947, col: 13, offset: 37808},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 405, col: 30, offset: 14960},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 407, col: 5, offset: 15015},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 407, col: 5, offset: 15015},
														run: (*parser).callonListParagraphLine13,
														expr: &litMatcher{
															pos:        position{line: 407, col: 5, offset: 15015},
															val:        ".....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 409, col: 9, offset: 15128},
														run: (*parser).callonListParagraphLine15,
														expr: &litMatcher{
															pos:        position{line: 409, col: 9, offset: 15128},
															val:        "....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 411, col: 9, offset: 15239},
														run: (*parser).callonListParagraphLine17,
														expr: &litMatcher{
															pos:        position{line: 411, col: 9, offset: 15239},
															val:        "...",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 413, col: 9, offset: 15348},
														run: (*parser).callonListParagraphLine19,
														expr: &litMatcher{
															pos:        position{line: 413, col: 9, offset: 15348},
															val:        "..",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 415, col: 9, offset: 15455},
														run: (*parser).callonListParagraphLine21,
														expr: &litMatcher{
															pos:        position{line: 415, col: 9, offset: 15455},
															val:        ".",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 418, col: 9, offset: 15582},
														run: (*parser).callonListParagraphLine23,
														expr: &seqExpr{
															pos: position{line: 418, col: 9, offset: 15582},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 418, col: 9, offset: 15582},
																	expr: &charClassMatcher{
																		pos:        position{line: 418, col: 10, offset: 15583},
																		val:        "[0-9]",
																		ranges:     []rune{'0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 418, col: 18, offset: 15591},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 420, col: 9, offset: 15694},
														run: (*parser).callonListParagraphLine28,
														expr: &seqExpr{
															pos: position{line: 420, col: 9, offset: 15694},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 420, col: 9, offset: 15694},
																	expr: &charClassMatcher{
																		pos:        position{line: 420, col: 10, offset: 15695},
																		val:        "[a-z]",
																		ranges:     []rune{'a', 'z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 420, col: 18, offset: 15703},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 422, col: 9, offset: 15809},
														run: (*parser).callonListParagraphLine33,
														expr: &seqExpr{
															pos: position{line: 422, col: 9, offset: 15809},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 422, col: 9, offset: 15809},
																	expr: &charClassMatcher{
																		pos:        position{line: 422, col: 10, offset: 15810},
																		val:        "[A-Z]",
																		ranges:     []rune{'A', 'Z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 422, col: 18, offset: 15818},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 424, col: 9, offset: 15924},
														run: (*parser).callonListParagraphLine38,
														expr: &seqExpr{
															pos: position{line: 424, col: 9, offset: 15924},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 424, col: 9, offset: 15924},
																	expr: &charClassMatcher{
																		pos:        position{line: 424, col: 10, offset: 15925},
																		val:        "[a-z]",
																		ranges:     []rune{'a', 'z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 424, col: 18, offset: 15933},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 426, col: 9, offset: 16039},
														run: (*parser).callonListParagraphLine43,
														expr: &seqExpr{
															pos: position{line: 426, col: 9, offset: 16039},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 426, col: 9, offset: 16039},
																	expr: &charClassMatcher{
																		pos:        position{line: 426, col: 10, offset: 16040},
																		val:        "[A-Z]",
																		ranges:     []rune{'A', 'Z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 426, col: 18, offset: 16048},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 428, col: 8, offset: 16153},
											expr: &choiceExpr{
												pos: position{line: 947, col: 7, offset: 37802},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 947, col: 7, offset: 37802},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 947, col: 13, offset: 37808},
														run: (*parser).callonListParagraphLine51,
														expr: &litMatcher{
															pos:        position{line: 947, col: 13, offset: 37808},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 381, col: 5, offset: 14166},
							expr: &actionExpr{
								pos: position{line: 444, col: 5, offset: 16811},
								run: (*parser).callonListParagraphLine54,
								expr: &seqExpr{
									pos: position{line: 444, col: 5, offset: 16811},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 444, col: 5, offset: 16811},
											expr: &choiceExpr{
												pos: position{line: 947, col: 7, offset: 37802},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 947, col: 7, offset: 37802},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 947, col: 13, offset: 37808},
														run: (*parser).callonListParagraphLine59,
														expr: &litMatcher{
															pos:        position{line: 947, col: 13, offset: 37808},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 444, col: 9, offset: 16815},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 445, col: 9, offset: 16832},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 445, col: 9, offset: 16832},
														run: (*parser).callonListParagraphLine63,
														expr: &litMatcher{
															pos:        position{line: 445, col: 9, offset: 16832},
															val:        "*****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 448, col: 11, offset: 17001},
														run: (*parser).callonListParagraphLine65,
														expr: &litMatcher{
															pos:        position{line: 448, col: 11, offset: 17001},
															val:        "****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 451, col: 11, offset: 17170},
														run: (*parser).callonListParagraphLine67,
														expr: &litMatcher{
															pos:        position{line: 451, col: 11, offset: 17170},
															val:        "***",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 454, col: 11, offset: 17339},
														run: (*parser).callonListParagraphLine69,
														expr: &litMatcher{
															pos:        position{line: 454, col: 11, offset: 17339},
															val:        "**",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 457, col: 11, offset: 17505},
														run: (*parser).callonListParagraphLine71,
														expr: &litMatcher{
															pos:        position{line: 457, col: 11, offset: 17505},
															val:        "*",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 460, col: 11, offset: 17669},
														run: (*parser).callonListParagraphLine73,
														expr: &litMatcher{
															pos:        position{line: 460, col: 11, offset: 17669},
															val:        "-",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 462, col: 12, offset: 17816},
											expr: &choiceExpr{
												pos: position{line: 947, col: 7, offset: 37802},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 947, col: 7, offset: 37802},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 947, col: 13, offset: 37808},
														run: (*parser).callonListParagraphLine78,
														expr: &litMatcher{
															pos:        position{line: 947, col: 13, offset: 37808},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 382, col: 5, offset: 14198},
							expr: &seqExpr{
								pos: position{line: 382, col: 7, offset: 14200},
								exprs: []interface{}{
									&actionExpr{
										pos: position{line: 480, col: 24, offset: 18652},
										run: (*parser).callonListParagraphLine82,
										expr: &zeroOrMoreExpr{
											pos: position{line: 480, col: 24, offset: 18652},
											expr: &seqExpr{
												pos: position{line: 480, col: 25, offset: 18653},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 480, col: 25, offset: 18653},
														expr: &choiceExpr{
															pos: position{line: 951, col: 12, offset: 37864},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 951, col: 12, offset: 37864},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 951, col: 21, offset: 37873},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
															},
														},
													},
													&notExpr{
														pos: position{line: 480, col: 34, offset: 18662},
														expr: &litMatcher{
															pos:        position{line: 480, col: 35, offset: 18663},
															val:        "::",
															ignoreCase: false,
														},
													},
													&anyMatcher{
														line: 480, col: 40, offset: 18668,
													},
												},
											},
										},
									},
									&litMatcher{
										pos:        position{line: 485, col: 30, offset: 18798},
										val:        "::",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 485, col: 35, offset: 18803},
										expr: &choiceExpr{
											pos: position{line: 485, col: 36, offset: 18804},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 947, col: 7, offset: 37802},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 947, col: 13, offset: 37808},
													run: (*parser).callonListParagraphLine96,
													expr: &litMatcher{
														pos:        position{line: 947, col: 13, offset: 37808},
														val:        "\t",
														ignoreCase: false,
													},
												},
												&litMatcher{
													pos:        position{line: 951, col: 12, offset: 37864},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 951, col: 21, offset: 37873},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 383, col: 5, offset: 14251},
							expr: &actionExpr{
								pos: position{line: 390, col: 25, offset: 14402},
								run: (*parser).callonListParagraphLine101,
								expr: &seqExpr{
									pos: position{line: 390, col: 25, offset: 14402},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 390, col: 25, offset: 14402},
											val:        "+",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 390, col: 29, offset: 14406},
											expr: &choiceExpr{
												pos: position{line: 947, col: 7, offset: 37802},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 947, col: 7, offset: 37802},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 947, col: 13, offset: 37808},
														run: (*parser).callonListParagraphLine107,
														expr: &litMatcher{
															pos:        position{line: 947, col: 13, offset: 37808},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 955, col: 8, offset: 37904},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 951, col: 12, offset: 37864},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 951, col: 21, offset: 37873},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 953, col: 8, offset: 37893},
													expr: &anyMatcher{
														line: 953, col: 9, offset: 37894,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 384, col: 5, offset: 14280},
							expr: &actionExpr{
								pos: position{line: 136, col: 21, offset: 5188},
								run: (*parser).callonListParagraphLine115,
								expr: &seqExpr{
									pos: position{line: 136, col: 21, offset: 5188},
									exprs: []interface{}{
										&labeledExpr{
											pos:   position{line: 136, col: 21, offset: 5188},
											label: "attr",
											expr: &choiceExpr{
												pos: position{line: 136, col: 27, offset: 5194},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 145, col: 14, offset: 5645},
														run: (*parser).callonListParagraphLine119,
														expr: &labeledExpr{
															pos:   position{line: 145, col: 14, offset: 5645},
															label: "id",
															expr: &actionExpr{
																pos: position{line: 151, col: 20, offset: 5775},
																run: (*parser).callonListParagraphLine121,
																expr: &seqExpr{
																	pos: position{line: 151, col: 20, offset: 5775},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 151, col: 20, offset: 5775},
																			val:        "[[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 151, col: 25, offset: 5780},
																			label: "id",
																			expr: &actionExpr{
																				pos: position{line: 933, col: 7, offset: 37526},
																				run: (*parser).callonListParagraphLine125,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 933, col: 7, offset: 37526},
																					expr: &seqExpr{
																						pos: position{line: 933, col: 8, offset: 37527},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 933, col: 8, offset: 37527},
																								expr: &choiceExpr{
																									pos: position{line: 951, col: 12, offset: 37864},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 951, col: 12, offset: 37864},
																											val:        "\r\n",
																											ignoreCase: false,
																										},
																										&charClassMatcher{
																											pos:        position{line: 951, col: 21, offset: 37873},
																											val:        "[\\r\\n]",
																											chars:      []rune{'\r', '\n'},
																											ignoreCase: false,
																											inverted:   false,
																										},
																									},
																								},
																							},
																							&notExpr{
																								pos: position{line: 933, col: 17, offset: 37536},
																								expr: &choiceExpr{
																									pos: position{line: 947, col: 7, offset: 37802},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 947, col: 7, offset: 37802},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 947, col: 13, offset: 37808},
																											run: (*parser).callonListParagraphLine135,
																											expr: &litMatcher{
																												pos:        position{line: 947, col: 13, offset: 37808},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&notExpr{
																								pos: position{line: 933, col: 21, offset: 37540},
																								expr: &litMatcher{
																									pos:        position{line: 933, col: 22, offset: 37541},
																									val:        "[",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 933, col: 26, offset: 37545},
																								expr: &litMatcher{
																									pos:        position{line: 933, col: 27, offset: 37546},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 933, col: 31, offset: 37550},
																								expr: &litMatcher{
																									pos:        position{line: 933, col: 32, offset: 37551},
																									val:        "<<",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 933, col: 37, offset: 37556},
																								expr: &litMatcher{
																									pos:        position{line: 933, col: 38, offset: 37557},
																									val:        ">>",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 933, col: 42, offset: 37561,
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 151, col: 33, offset: 5788},
																			val:        "]]",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 147, col: 5, offset: 5691},
														run: (*parser).callonListParagraphLine147,
														expr: &seqExpr{
															pos: position{line: 147, col: 5, offset: 5691},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 147, col: 5, offset: 5691},
																	val:        "[#",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 147, col: 10, offset: 5696},
																	label: "id",
																	expr: &actionExpr{
																		pos: position{line: 933, col: 7, offset: 37526},
																		run: (*parser).callonListParagraphLine151,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 933, col: 7, offset: 37526},
																			expr: &seqExpr{
																				pos: position{line: 933, col: 8, offset: 37527},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 933, col: 8, offset: 37527},
																						expr: &choiceExpr{
																							pos: position{line: 951, col: 12, offset: 37864},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 951, col: 12, offset: 37864},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 951, col: 21, offset: 37873},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 933, col: 17, offset: 37536},
																						expr: &choiceExpr{
																							pos: position{line: 947, col: 7, offset: 37802},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 947, col: 7, offset: 37802},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 947, col: 13, offset: 37808},
																									run: (*parser).callonListParagraphLine161,
																									expr: &litMatcher{
																										pos:        position{line: 947, col: 13, offset: 37808},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 933, col: 21, offset: 37540},
																						expr: &litMatcher{
																							pos:        position{line: 933, col: 22, offset: 37541},
																							val:        "[",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 933, col: 26, offset: 37545},
																						expr: &litMatcher{
																							pos:        position{line: 933, col: 27, offset: 37546},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 933, col: 31, offset: 37550},
																						expr: &litMatcher{
																							pos:        position{line: 933, col: 32, offset: 37551},
																							val:        "<<",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 933, col: 37, offset: 37556},
																						expr: &litMatcher{
																							pos:        position{line: 933, col: 38, offset: 37557},
																							val:        ">>",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 933, col: 42, offset: 37561,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 147, col: 18, offset: 5704},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 157, col: 17, offset: 5997},
														run: (*parser).callonListParagraphLine173,
														expr: &seqExpr{
															pos: position{line: 157, col: 17, offset: 5997},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 157, col: 17, offset: 5997},
																	val:        ".",
																	ignoreCase: false,
																},
																&notExpr{
																	pos: position{line: 157, col: 21, offset: 6001},
																	expr: &litMatcher{
																		pos:        position{line: 157, col: 22, offset: 6002},
																		val:        ".",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 157, col: 26, offset: 6006},
																	expr: &choiceExpr{
																		pos: position{line: 947, col: 7, offset: 37802},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 947, col: 7, offset: 37802},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 947, col: 13, offset: 37808},
																				run: (*parser).callonListParagraphLine181,
																				expr: &litMatcher{
																					pos:        position{line: 947, col: 13, offset: 37808},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 157, col: 30, offset: 6010},
																	label: "title",
																	expr: &actionExpr{
																		pos: position{line: 161, col: 24, offset: 6115},
																		run: (*parser).callonListParagraphLine184,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 161, col: 24, offset: 6115},
																			expr: &seqExpr{
																				pos: position{line: 161, col: 25, offset: 6116},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 161, col: 25, offset: 6116},
																						expr: &choiceExpr{
																							pos: position{line: 951, col: 12, offset: 37864},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 951, col: 12, offset: 37864},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 951, col: 21, offset: 37873},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&anyMatcher{
																						line: 161, col: 34, offset: 6125,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 167, col: 16, offset: 6274},
														run: (*parser).callonListParagraphLine192,
														expr: &seqExpr{
															pos: position{line: 167, col: 16, offset: 6274},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 167, col: 16, offset: 6274},
																	val:        "[.",
																	ignoreCase: false,
																},
																&notExpr{
																	pos: position{line: 167, col: 21, offset: 6279},
																	expr: &choiceExpr{
																		pos: position{line: 947, col: 7, offset: 37802},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 947, col: 7, offset: 37802},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 947, col: 13, offset: 37808},
																				run: (*parser).callonListParagraphLine198,
																				expr: &litMatcher{
																					pos:        position{line: 947, col: 13, offset: 37808},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 167, col: 25, offset: 6283},
																	label: "role",
																	expr: &actionExpr{
																		pos: position{line: 171, col: 23, offset: 6387},
																		run: (*parser).callonListParagraphLine201,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 171, col: 23, offset: 6387},
																			expr: &seqExpr{
																				pos: position{line: 171, col: 24, offset: 6388},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 171, col: 24, offset: 6388},
																						expr: &choiceExpr{
																							pos: position{line: 951, col: 12, offset: 37864},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 951, col: 12, offset: 37864},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 951, col: 21, offset: 37873},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 171, col: 33, offset: 6397},
																						expr: &litMatcher{
																							pos:        position{line: 171, col: 34, offset: 6398},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 171, col: 38, offset: 6402,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 167, col: 51, offset: 6309},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 176, col: 30, offset: 6551},
														run: (*parser).callonListParagraphLine212,
														expr: &seqExpr{
															pos: position{line: 176, col: 30, offset: 6551},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 176, col: 30, offset: 6551},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 176, col: 34, offset: 6555},
																	label: "k",
																	expr: &choiceExpr{
																		pos: position{line: 494, col: 19, offset: 19202},
																		alternatives: []interface{}{
																			&actionExpr{
																				pos: position{line: 494, col: 19, offset: 19202},
																				run: (*parser).callonListParagraphLine217,
																				expr: &litMatcher{
																					pos:        position{line: 494, col: 19, offset: 19202},
																					val:        "TIP",
																					ignoreCase: false,
																				},
																			},
																			&actionExpr{
																				pos: position{line: 496, col: 5, offset: 19240},
																				run: (*parser).callonListParagraphLine219,
																				expr: &litMatcher{
																					pos:        position{line: 496, col: 5, offset: 19240},
																					val:        "NOTE",
																					ignoreCase: false,
																				},
																			},
																			&actionExpr{
																				pos: position{line: 498, col: 5, offset: 19280},
																				run: (*parser).callonListParagraphLine221,
																				expr: &litMatcher{
																					pos:        position{line: 498, col: 5, offset: 19280},
																					val:        "IMPORTANT",
																					ignoreCase: false,
																				},
																			},
																			&actionExpr{
																				pos: position{line: 500, col: 5, offset: 19330},
																				run: (*parser).callonListParagraphLine223,
																				expr: &litMatcher{
																					pos:        position{line: 500, col: 5, offset: 19330},
																					val:        "WARNING",
																					ignoreCase: false,
																				},
																			},
																			&actionExpr{
																				pos: position{line: 502, col: 5, offset: 19376},
																				run: (*parser).callonListParagraphLine225,
																				expr: &litMatcher{
																					pos:        position{line: 502, col: 5, offset: 19376},
																					val:        "CAUTION",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 176, col: 53, offset: 6574},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 199, col: 21, offset: 7299},
														run: (*parser).callonListParagraphLine228,
														expr: &litMatcher{
															pos:        position{line: 199, col: 21, offset: 7299},
															val:        "[horizontal]",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 181, col: 19, offset: 6735},
														run: (*parser).callonListParagraphLine230,
														expr: &seqExpr{
															pos: position{line: 181, col: 19, offset: 6735},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 181, col: 19, offset: 6735},
																	val:        "[",
																	ignoreCase: false,
																},
																&notExpr{
																	pos: position{line: 181, col: 23, offset: 6739},
																	expr: &choiceExpr{
																		pos: position{line: 947, col: 7, offset: 37802},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 947, col: 7, offset: 37802},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 947, col: 13, offset: 37808},
																				run: (*parser).callonListParagraphLine236,
																				expr: &litMatcher{
																					pos:        position{line: 947, col: 13, offset: 37808},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 181, col: 27, offset: 6743},
																	label: "attributes",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 181, col: 38, offset: 6754},
																		expr: &choiceExpr{
																			pos: position{line: 185, col: 21, offset: 6867},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					run: (*parser).callonListParagraphLine241,
																					expr: &seqExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 185, col: 21, offset: 6867},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonListParagraphLine244,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonListParagraphLine247,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 185, col: 40, offset: 6886},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 185, col: 44, offset: 6890},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 195, col: 19, offset: 7217},
																									run: (*parser).callonListParagraphLine261,
																									expr: &labeledExpr{
																										pos:   position{line: 195, col: 19, offset: 7217},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 195, col: 25, offset: 7223},
																											expr: &seqExpr{
																												pos: position{line: 195, col: 26, offset: 7224},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 195, col: 26, offset: 7224},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 27, offset: 7225},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 31, offset: 7229},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 32, offset: 7230},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 36, offset: 7234},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 37, offset: 7235},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 195, col: 41, offset: 7239,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 185, col: 67, offset: 6913},
																								expr: &litMatcher{
																									pos:        position{line: 185, col: 67, offset: 6913},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 185, col: 72, offset: 6918},
																								expr: &choiceExpr{
																									pos: position{line: 947, col: 7, offset: 37802},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 947, col: 7, offset: 37802},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 947, col: 13, offset: 37808},
																											run: (*parser).callonListParagraphLine277,
																											expr: &litMatcher{
																												pos:        position{line: 947, col: 13, offset: 37808},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 187, col: 5, offset: 7002},
																					run: (*parser).callonListParagraphLine279,
																					expr: &seqExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 187, col: 5, offset: 7002},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonListParagraphLine282,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonListParagraphLine285,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 187, col: 24, offset: 7021},
																								expr: &litMatcher{
																									pos:        position{line: 187, col: 24, offset: 7021},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 187, col: 29, offset: 7026},
																								expr: &choiceExpr{
																									pos: position{line: 947, col: 7, offset: 37802},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 947, col: 7, offset: 37802},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 947, col: 13, offset: 37808},
																											run: (*parser).callonListParagraphLine302,
																											expr: &litMatcher{
																												pos:        position{line: 947, col: 13, offset: 37808},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 181, col: 59, offset: 6775},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 136, col: 131, offset: 5298},
											expr: &choiceExpr{
												pos: position{line: 947, col: 7, offset: 37802},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 947, col: 7, offset: 37802},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 947, col: 13, offset: 37808},
														run: (*parser).callonListParagraphLine308,
														expr: &litMatcher{
															pos:        position{line: 947, col: 13, offset: 37808},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 955, col: 8, offset: 37904},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 951, col: 12, offset: 37864},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 951, col: 21, offset: 37873},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 953, col: 8, offset: 37893},
													expr: &anyMatcher{
														line: 953, col: 9, offset: 37894,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 385, col: 5, offset: 14304},
							expr: &choiceExpr{
								pos: position{line: 724, col: 19, offset: 30132},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 899, col: 26, offset: 36632},
										val:        "....",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 728, col: 25, offset: 30314},
										val:        "```",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 735, col: 26, offset: 30646},
										val:        "----",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 755, col: 26, offset: 31444},
										val:        "====",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 856, col: 26, offset: 34903},
										val:        "////",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 777, col: 24, offset: 32165},
										val:        "____",
										ignoreCase: false,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 386, col: 5, offset: 14326},
							label: "line",
							expr: &ruleRefExpr{
								pos:  position{line: 386, col: 11, offset: 14332},
								name: "InlineElements",
							},
						},
					},
				},
			},
		},
		{
			name: "ContinuedDocumentBlock",
			pos:  position{line: 394, col: 1, offset: 14462},
			expr: &actionExpr{
				pos: position{line: 394, col: 27, offset: 14488},
				run: (*parser).callonContinuedDocumentBlock1,
				expr: &seqExpr{
					pos: position{line: 394, col: 27, offset: 14488},
					exprs: []interface{}{
						&actionExpr{
							pos: position{line: 390, col: 25, offset: 14402},
							run: (*parser).callonContinuedDocumentBlock3,
							expr: &seqExpr{
								pos: position{line: 390, col: 25, offset: 14402},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 390, col: 25, offset: 14402},
										val:        "+",
										ignoreCase: false,
									},
									&zeroOrMoreExpr{
										pos: position{line: 390, col: 29, offset: 14406},
										expr: &choiceExpr{
											pos: position{line: 947, col: 7, offset: 37802},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 947, col: 7, offset: 37802},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 947, col: 13, offset: 37808},
													run: (*parser).callonContinuedDocumentBlock9,
													expr: &litMatcher{
														pos:        position{line: 947, col: 13, offset: 37808},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&choiceExpr{
										pos: position{line: 955, col: 8, offset: 37904},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 951, col: 12, offset: 37864},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 951, col: 21, offset: 37873},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 953, col: 8, offset: 37893},
												expr: &anyMatcher{
													line: 953, col: 9, offset: 37894,
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 394, col: 48, offset: 14509},
							label: "element",
							expr: &ruleRefExpr{
								pos:  position{line: 394, col: 56, offset: 14517},
								name: "DocumentBlock",
							},
						},
					},
				},
			},
		},
		{
			name: "OrderedListItem",
			pos:  position{line: 401, col: 1, offset: 14674},
			expr: &actionExpr{
				pos: position{line: 401, col: 20, offset: 14693},
				run: (*parser).callonOrderedListItem1,
				expr: &seqExpr{
					pos: position{line: 401, col: 20, offset: 14693},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 401, col: 20, offset: 14693},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 401, col: 31, offset: 14704},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5188},
									run: (*parser).callonOrderedListItem5,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5188},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5188},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5194},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 145, col: 14, offset: 5645},
															run: (*parser).callonOrderedListItem9,
															expr: &labeledExpr{
																pos:   position{line: 145, col: 14, offset: 5645},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 151, col: 20, offset: 5775},
																	run: (*parser).callonOrderedListItem11,
																	expr: &seqExpr{
																		pos: position{line: 151, col: 20, offset: 5775},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 151, col: 20, offset: 5775},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 151, col: 25, offset: 5780},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 933, col: 7, offset: 37526},
																					run: (*parser).callonOrderedListItem15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 933, col: 7, offset: 37526},
																						expr: &seqExpr{
																							pos: position{line: 933, col: 8, offset: 37527},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 933, col: 8, offset: 37527},
																									expr: &choiceExpr{
																										pos: position{line: 951, col: 12, offset: 37864},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 951, col: 12, offset: 37864},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 951, col: 21, offset: 37873},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 17, offset: 37536},
																									expr: &choiceExpr{
																										pos: position{line: 947, col: 7, offset: 37802},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 947, col: 7, offset: 37802},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 947, col: 13, offset: 37808},
																												run: (*parser).callonOrderedListItem25,
																												expr: &litMatcher{
																													pos:        position{line: 947, col: 13, offset: 37808},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 21, offset: 37540},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 22, offset: 37541},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 26, offset: 37545},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 27, offset: 37546},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 31, offset: 37550},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 32, offset: 37551},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 37, offset: 37556},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 38, offset: 37557},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 933, col: 42, offset: 37561,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 151, col: 33, offset: 5788},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 5, offset: 5691},
															run: (*parser).callonOrderedListItem37,
															expr: &seqExpr{
																pos: position{line: 147, col: 5, offset: 5691},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 5, offset: 5691},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 10, offset: 5696},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 933, col: 7, offset: 37526},
																			run: (*parser).callonOrderedListItem41,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 933, col: 7, offset: 37526},
																				expr: &seqExpr{
																					pos: position{line: 933, col: 8, offset: 37527},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 933, col: 8, offset: 37527},
																							expr: &choiceExpr{
																								pos: position{line: 951, col: 12, offset: 37864},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 17, offset: 37536},
																							expr: &choiceExpr{
																								pos: position{line: 947, col: 7, offset: 37802},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 947, col: 7, offset: 37802},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 947, col: 13, offset: 37808},
																										run: (*parser).callonOrderedListItem51,
																										expr: &litMatcher{
																											pos:        position{line: 947, col: 13, offset: 37808},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 21, offset: 37540},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 22, offset: 37541},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 26, offset: 37545},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 27, offset: 37546},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 31, offset: 37550},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 32, offset: 37551},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 37, offset: 37556},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 38, offset: 37557},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 933, col: 42, offset: 37561,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 18, offset: 5704},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 17, offset: 5997},
															run: (*parser).callonOrderedListItem63,
															expr: &seqExpr{
																pos: position{line: 157, col: 17, offset: 5997},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 17, offset: 5997},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 21, offset: 6001},
																		expr: &litMatcher{
																			pos:        position{line: 157, col: 22, offset: 6002},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 157, col: 26, offset: 6006},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonOrderedListItem71,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 30, offset: 6010},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 161, col: 24, offset: 6115},
																			run: (*parser).callonOrderedListItem74,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 161, col: 24, offset: 6115},
																				expr: &seqExpr{
																					pos: position{line: 161, col: 25, offset: 6116},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 161, col: 25, offset: 6116},
																							expr: &choiceExpr{
																								pos: position{line: 951, col: 12, offset: 37864},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 161, col: 34, offset: 6125,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 167, col: 16, offset: 6274},
															run: (*parser).callonOrderedListItem82,
															expr: &seqExpr{
																pos: position{line: 167, col: 16, offset: 6274},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 167, col: 16, offset: 6274},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 167, col: 21, offset: 6279},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonOrderedListItem88,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 167, col: 25, offset: 6283},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 171, col: 23, offset: 6387},
																			run: (*parser).callonOrderedListItem91,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 171, col: 23, offset: 6387},
																				expr: &seqExpr{
																					pos: position{line: 171, col: 24, offset: 6388},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 171, col: 24, offset: 6388},
																							expr: &choiceExpr{
																								pos: position{line: 951, col: 12, offset: 37864},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 171, col: 33, offset: 6397},
																							expr: &litMatcher{
																								pos:        position{line: 171, col: 34, offset: 6398},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 171, col: 38, offset: 6402,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 167, col: 51, offset: 6309},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 30, offset: 6551},
															run: (*parser).callonOrderedListItem102,
															expr: &seqExpr{
																pos: position{line: 176, col: 30, offset: 6551},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 30, offset: 6551},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 34, offset: 6555},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 494, col: 19, offset: 19202},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 494, col: 19, offset: 19202},
																					run: (*parser).callonOrderedListItem107,
																					expr: &litMatcher{
																						pos:        position{line: 494, col: 19, offset: 19202},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 496, col: 5, offset: 19240},
																					run: (*parser).callonOrderedListItem109,
																					expr: &litMatcher{
																						pos:        position{line: 496, col: 5, offset: 19240},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 498, col: 5, offset: 19280},
																					run: (*parser).callonOrderedListItem111,
																					expr: &litMatcher{
																						pos:        position{line: 498, col: 5, offset: 19280},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 500, col: 5, offset: 19330},
																					run: (*parser).callonOrderedListItem113,
																					expr: &litMatcher{
																						pos:        position{line: 500, col: 5, offset: 19330},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 502, col: 5, offset: 19376},
																					run: (*parser).callonOrderedListItem115,
																					expr: &litMatcher{
																						pos:        position{line: 502, col: 5, offset: 19376},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 53, offset: 6574},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 199, col: 21, offset: 7299},
															run: (*parser).callonOrderedListItem118,
															expr: &litMatcher{
																pos:        position{line: 199, col: 21, offset: 7299},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 19, offset: 6735},
															run: (*parser).callonOrderedListItem120,
															expr: &seqExpr{
																pos: position{line: 181, col: 19, offset: 6735},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 19, offset: 6735},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 23, offset: 6739},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonOrderedListItem126,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 27, offset: 6743},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 181, col: 38, offset: 6754},
																			expr: &choiceExpr{
																				pos: position{line: 185, col: 21, offset: 6867},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						run: (*parser).callonOrderedListItem131,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 21, offset: 6867},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonOrderedListItem134,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonOrderedListItem137,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 185, col: 40, offset: 6886},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 185, col: 44, offset: 6890},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 195, col: 19, offset: 7217},
																										run: (*parser).callonOrderedListItem151,
																										expr: &labeledExpr{
																											pos:   position{line: 195, col: 19, offset: 7217},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 195, col: 25, offset: 7223},
																												expr: &seqExpr{
																													pos: position{line: 195, col: 26, offset: 7224},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 195, col: 26, offset: 7224},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 27, offset: 7225},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 31, offset: 7229},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 32, offset: 7230},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 36, offset: 7234},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 37, offset: 7235},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 195, col: 41, offset: 7239,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 67, offset: 6913},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 67, offset: 6913},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 72, offset: 6918},
																									expr: &choiceExpr{
																										pos: position{line: 947, col: 7, offset: 37802},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 947, col: 7, offset: 37802},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 947, col: 13, offset: 37808},
																												run: (*parser).callonOrderedListItem167,
																												expr: &litMatcher{
																													pos:        position{line: 947, col: 13, offset: 37808},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						run: (*parser).callonOrderedListItem169,
																						expr: &seqExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 187, col: 5, offset: 7002},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonOrderedListItem172,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonOrderedListItem175,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 187, col: 24, offset: 7021},
																									expr: &litMatcher{
																										pos:        position{line: 187, col: 24, offset: 7021},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 187, col: 29, offset: 7026},
																									expr: &choiceExpr{
																										pos: position{line: 947, col: 7, offset: 37802},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 947, col: 7, offset: 37802},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 947, col: 13, offset: 37808},
																												run: (*parser).callonOrderedListItem192,
																												expr: &litMatcher{
																													pos:        position{line: 947, col: 13, offset: 37808},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 181, col: 59, offset: 6775},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5298},
												expr: &choiceExpr{
													pos: position{line: 947, col: 7, offset: 37802},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 947, col: 7, offset: 37802},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 947, col: 13, offset: 37808},
															run: (*parser).callonOrderedListItem198,
															expr: &litMatcher{
																pos:        position{line: 947, col: 13, offset: 37808},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 955, col: 8, offset: 37904},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 951, col: 12, offset: 37864},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 951, col: 21, offset: 37873},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 953, col: 8, offset: 37893},
														expr: &anyMatcher{
															line: 953, col: 9, offset: 37894,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 401, col: 51, offset: 14724},
							label: "prefix",
							expr: &actionExpr{
								pos: position{line: 405, col: 26, offset: 14956},
								run: (*parser).callonOrderedListItem206,
								expr: &seqExpr{
									pos: position{line: 405, col: 26, offset: 14956},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 405, col: 26, offset: 14956},
											expr: &choiceExpr{
												pos: position{line: 947, col: 7, offset: 37802},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 947, col: 7, offset: 37802},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 947, col: 13, offset: 37808},
														run: (*parser).callonOrderedListItem211,
														expr: &litMatcher{
															pos:        position{line: 947, col: 13, offset: 37808},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 405, col: 30, offset: 14960},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 407, col: 5, offset: 15015},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 407, col: 5, offset: 15015},
														run: (*parser).callonOrderedListItem215,
														expr: &litMatcher{
															pos:        position{line: 407, col: 5, offset: 15015},
															val:        ".....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 409, col: 9, offset: 15128},
														run: (*parser).callonOrderedListItem217,
														expr: &litMatcher{
															pos:        position{line: 409, col: 9, offset: 15128},
															val:        "....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 411, col: 9, offset: 15239},
														run: (*parser).callonOrderedListItem219,
														expr: &litMatcher{
															pos:        position{line: 411, col: 9, offset: 15239},
															val:        "...",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 413, col: 9, offset: 15348},
														run: (*parser).callonOrderedListItem221,
														expr: &litMatcher{
															pos:        position{line: 413, col: 9, offset: 15348},
															val:        "..",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 415, col: 9, offset: 15455},
														run: (*parser).callonOrderedListItem223,
														expr: &litMatcher{
															pos:        position{line: 415, col: 9, offset: 15455},
															val:        ".",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 418, col: 9, offset: 15582},
														run: (*parser).callonOrderedListItem225,
														expr: &seqExpr{
															pos: position{line: 418, col: 9, offset: 15582},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 418, col: 9, offset: 15582},
																	expr: &charClassMatcher{
																		pos:        position{line: 418, col: 10, offset: 15583},
																		val:        "[0-9]",
																		ranges:     []rune{'0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 418, col: 18, offset: 15591},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 420, col: 9, offset: 15694},
														run: (*parser).callonOrderedListItem230,
														expr: &seqExpr{
															pos: position{line: 420, col: 9, offset: 15694},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 420, col: 9, offset: 15694},
																	expr: &charClassMatcher{
																		pos:        position{line: 420, col: 10, offset: 15695},
																		val:        "[a-z]",
																		ranges:     []rune{'a', 'z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 420, col: 18, offset: 15703},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 422, col: 9, offset: 15809},
														run: (*parser).callonOrderedListItem235,
														expr: &seqExpr{
															pos: position{line: 422, col: 9, offset: 15809},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 422, col: 9, offset: 15809},
																	expr: &charClassMatcher{
																		pos:        position{line: 422, col: 10, offset: 15810},
																		val:        "[A-Z]",
																		ranges:     []rune{'A', 'Z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 422, col: 18, offset: 15818},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 424, col: 9, offset: 15924},
														run: (*parser).callonOrderedListItem240,
														expr: &seqExpr{
															pos: position{line: 424, col: 9, offset: 15924},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 424, col: 9, offset: 15924},
																	expr: &charClassMatcher{
																		pos:        position{line: 424, col: 10, offset: 15925},
																		val:        "[a-z]",
																		ranges:     []rune{'a', 'z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 424, col: 18, offset: 15933},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 426, col: 9, offset: 16039},
														run: (*parser).callonOrderedListItem245,
														expr: &seqExpr{
															pos: position{line: 426, col: 9, offset: 16039},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 426, col: 9, offset: 16039},
																	expr: &charClassMatcher{
																		pos:        position{line: 426, col: 10, offset: 16040},
																		val:        "[A-Z]",
																		ranges:     []rune{'A', 'Z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 426, col: 18, offset: 16048},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 428, col: 8, offset: 16153},
											expr: &choiceExpr{
												pos: position{line: 947, col: 7, offset: 37802},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 947, col: 7, offset: 37802},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 947, col: 13, offset: 37808},
														run: (*parser).callonOrderedListItem253,
														expr: &litMatcher{
															pos:        position{line: 947, col: 13, offset: 37808},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 401, col: 82, offset: 14755},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 401, col: 91, offset: 14764},
								name: "OrderedListItemContent",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 401, col: 115, offset: 14788},
							expr: &actionExpr{
								pos: position{line: 914, col: 14, offset: 37155},
								run: (*parser).callonOrderedListItem258,
								expr: &seqExpr{
									pos: position{line: 914, col: 14, offset: 37155},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 914, col: 14, offset: 37155},
											expr: &notExpr{
												pos: position{line: 953, col: 8, offset: 37893},
												expr: &anyMatcher{
													line: 953, col: 9, offset: 37894,
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 914, col: 19, offset: 37160},
											expr: &choiceExpr{
												pos: position{line: 947, col: 7, offset: 37802},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 947, col: 7, offset: 37802},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 947, col: 13, offset: 37808},
														run: (*parser).callonOrderedListItem266,
														expr: &litMatcher{
															pos:        position{line: 947, col: 13, offset: 37808},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 955, col: 8, offset: 37904},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 951, col: 12, offset: 37864},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 951, col: 21, offset: 37873},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 953, col: 8, offset: 37893},
													expr: &anyMatcher{
														line: 953, col: 9, offset: 37894,
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "OrderedListItemContent",
			pos:  position{line: 432, col: 1, offset: 16193},
			expr: &actionExpr{
				pos: position{line: 432, col: 27, offset: 16219},
				run: (*parser).callonOrderedListItemContent1,
				expr: &labeledExpr{
					pos:   position{line: 432, col: 27, offset: 16219},
					label: "elements",
					expr: &seqExpr{
						pos: position{line: 432, col: 37, offset: 16229},
						exprs: []interface{}{
							&oneOrMoreExpr{
								pos: position{line: 432, col: 37, offset: 16229},
								expr: &ruleRefExpr{
									pos:  position{line: 432, col: 37, offset: 16229},
									name: "ListParagraph",
								},
							},
							&zeroOrMoreExpr{
								pos: position{line: 432, col: 52, offset: 16244},
								expr: &ruleRefExpr{
									pos:  position{line: 432, col: 52, offset: 16244},
									name: "ContinuedDocumentBlock",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "UnorderedListItem",
			pos:  position{line: 439, col: 1, offset: 16571},
			expr: &actionExpr{
				pos: position{line: 439, col: 22, offset: 16592},
				run: (*parser).callonUnorderedListItem1,
				expr: &seqExpr{
					pos: position{line: 439, col: 22, offset: 16592},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 439, col: 22, offset: 16592},
							label: "prefix",
							expr: &actionExpr{
								pos: position{line: 444, col: 5, offset: 16811},
								run: (*parser).callonUnorderedListItem4,
								expr: &seqExpr{
									pos: position{line: 444, col: 5, offset: 16811},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 444, col: 5, offset: 16811},
											expr: &choiceExpr{
												pos: position{line: 947, col: 7, offset: 37802},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 947, col: 7, offset: 37802},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 947, col: 13, offset: 37808},
														run: (*parser).callonUnorderedListItem9,
														expr: &litMatcher{
															pos:        position{line: 947, col: 13, offset: 37808},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 444, col: 9, offset: 16815},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 445, col: 9, offset: 16832},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 445, col: 9, offset: 16832},
														run: (*parser).callonUnorderedListItem13,
														expr: &litMatcher{
															pos:        position{line: 445, col: 9, offset: 16832},
															val:        "*****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 448, col: 11, offset: 17001},
														run: (*parser).callonUnorderedListItem15,
														expr: &litMatcher{
															pos:        position{line: 448, col: 11, offset: 17001},
															val:        "****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 451, col: 11, offset: 17170},
														run: (*parser).callonUnorderedListItem17,
														expr: &litMatcher{
															pos:        position{line: 451, col: 11, offset: 17170},
															val:        "***",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 454, col: 11, offset: 17339},
														run: (*parser).callonUnorderedListItem19,
														expr: &litMatcher{
															pos:        position{line: 454, col: 11, offset: 17339},
															val:        "**",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 457, col: 11, offset: 17505},
														run: (*parser).callonUnorderedListItem21,
														expr: &litMatcher{
															pos:        position{line: 457, col: 11, offset: 17505},
															val:        "*",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 460, col: 11, offset: 17669},
														run: (*parser).callonUnorderedListItem23,
														expr: &litMatcher{
															pos:        position{line: 460, col: 11, offset: 17669},
															val:        "-",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 462, col: 12, offset: 17816},
											expr: &choiceExpr{
												pos: position{line: 947, col: 7, offset: 37802},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 947, col: 7, offset: 37802},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 947, col: 13, offset: 37808},
														run: (*parser).callonUnorderedListItem28,
														expr: &litMatcher{
															pos:        position{line: 947, col: 13, offset: 37808},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 439, col: 55, offset: 16625},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 439, col: 64, offset: 16634},
								name: "UnorderedListItemContent",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 439, col: 90, offset: 16660},
							expr: &actionExpr{
								pos: position{line: 914, col: 14, offset: 37155},
								run: (*parser).callonUnorderedListItem33,
								expr: &seqExpr{
									pos: position{line: 914, col: 14, offset: 37155},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 914, col: 14, offset: 37155},
											expr: &notExpr{
												pos: position{line: 953, col: 8, offset: 37893},
												expr: &anyMatcher{
													line: 953, col: 9, offset: 37894,
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 914, col: 19, offset: 37160},
											expr: &choiceExpr{
												pos: position{line: 947, col: 7, offset: 37802},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 947, col: 7, offset: 37802},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 947, col: 13, offset: 37808},
														run: (*parser).callonUnorderedListItem41,
														expr: &litMatcher{
															pos:        position{line: 947, col: 13, offset: 37808},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 955, col: 8, offset: 37904},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 951, col: 12, offset: 37864},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 951, col: 21, offset: 37873},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 953, col: 8, offset: 37893},
													expr: &anyMatcher{
														line: 953, col: 9, offset: 37894,
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "UnorderedListItemContent",
			pos:  position{line: 466, col: 1, offset: 17865},
			expr: &actionExpr{
				pos: position{line: 466, col: 29, offset: 17893},
				run: (*parser).callonUnorderedListItemContent1,
				expr: &labeledExpr{
					pos:   position{line: 466, col: 29, offset: 17893},
					label: "elements",
					expr: &seqExpr{
						pos: position{line: 466, col: 39, offset: 17903},
						exprs: []interface{}{
							&oneOrMoreExpr{
								pos: position{line: 466, col: 39, offset: 17903},
								expr: &ruleRefExpr{
									pos:  position{line: 466, col: 39, offset: 17903},
									name: "ListParagraph",
								},
							},
							&zeroOrMoreExpr{
								pos: position{line: 466, col: 54, offset: 17918},
								expr: &ruleRefExpr{
									pos:  position{line: 466, col: 54, offset: 17918},
									name: "ContinuedDocumentBlock",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "LabeledListItem",
			pos:  position{line: 473, col: 1, offset: 18243},
			expr: &choiceExpr{
				pos: position{line: 474, col: 5, offset: 18267},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 474, col: 5, offset: 18267},
						run: (*parser).callonLabeledListItem2,
						expr: &seqExpr{
							pos: position{line: 474, col: 5, offset: 18267},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 474, col: 5, offset: 18267},
									label: "term",
									expr: &actionExpr{
										pos: position{line: 480, col: 24, offset: 18652},
										run: (*parser).callonLabeledListItem5,
										expr: &zeroOrMoreExpr{
											pos: position{line: 480, col: 24, offset: 18652},
											expr: &seqExpr{
												pos: position{line: 480, col: 25, offset: 18653},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 480, col: 25, offset: 18653},
														expr: &choiceExpr{
															pos: position{line: 951, col: 12, offset: 37864},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 951, col: 12, offset: 37864},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 951, col: 21, offset: 37873},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
															},
														},
													},
													&notExpr{
														pos: position{line: 480, col: 34, offset: 18662},
														expr: &litMatcher{
															pos:        position{line: 480, col: 35, offset: 18663},
															val:        "::",
															ignoreCase: false,
														},
													},
													&anyMatcher{
														line: 480, col: 40, offset: 18668,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 485, col: 30, offset: 18798},
									val:        "::",
									ignoreCase: false,
								},
								&oneOrMoreExpr{
									pos: position{line: 485, col: 35, offset: 18803},
									expr: &choiceExpr{
										pos: position{line: 485, col: 36, offset: 18804},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 947, col: 7, offset: 37802},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 947, col: 13, offset: 37808},
												run: (*parser).callonLabeledListItem19,
												expr: &litMatcher{
													pos:        position{line: 947, col: 13, offset: 37808},
													val:        "\t",
													ignoreCase: false,
												},
											},
											&litMatcher{
												pos:        position{line: 951, col: 12, offset: 37864},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 951, col: 21, offset: 37873},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 474, col: 57, offset: 18319},
									label: "description",
									expr: &ruleRefExpr{
										pos:  position{line: 474, col: 70, offset: 18332},
										name: "LabeledListItemDescription",
									},
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 476, col: 10, offset: 18455},
						run: (*parser).callonLabeledListItem25,
						expr: &seqExpr{
							pos: position{line: 476, col: 10, offset: 18455},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 476, col: 10, offset: 18455},
									label: "term",
									expr: &actionExpr{
										pos: position{line: 480, col: 24, offset: 18652},
										run: (*parser).callonLabeledListItem28,
										expr: &zeroOrMoreExpr{
											pos: position{line: 480, col: 24, offset: 18652},
											expr: &seqExpr{
												pos: position{line: 480, col: 25, offset: 18653},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 480, col: 25, offset: 18653},
														expr: &choiceExpr{
															pos: position{line: 951, col: 12, offset: 37864},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 951, col: 12, offset: 37864},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 951, col: 21, offset: 37873},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
															},
														},
													},
													&notExpr{
														pos: position{line: 480, col: 34, offset: 18662},
														expr: &litMatcher{
															pos:        position{line: 480, col: 35, offset: 18663},
															val:        "::",
															ignoreCase: false,
														},
													},
													&anyMatcher{
														line: 480, col: 40, offset: 18668,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 476, col: 37, offset: 18482},
									val:        "::",
									ignoreCase: false,
								},
								&zeroOrMoreExpr{
									pos: position{line: 476, col: 42, offset: 18487},
									expr: &choiceExpr{
										pos: position{line: 947, col: 7, offset: 37802},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 947, col: 7, offset: 37802},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 947, col: 13, offset: 37808},
												run: (*parser).callonLabeledListItem42,
												expr: &litMatcher{
													pos:        position{line: 947, col: 13, offset: 37808},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 955, col: 8, offset: 37904},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 951, col: 12, offset: 37864},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 951, col: 21, offset: 37873},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
										&notExpr{
											pos: position{line: 953, col: 8, offset: 37893},
											expr: &anyMatcher{
												line: 953, col: 9, offset: 37894,
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "LabeledListItemDescription",
			pos:  position{line: 487, col: 1, offset: 18820},
			expr: &actionExpr{
				pos: position{line: 487, col: 31, offset: 18850},
				run: (*parser).callonLabeledListItemDescription1,
				expr: &labeledExpr{
					pos:   position{line: 487, col: 31, offset: 18850},
					label: "elements",
					expr: &zeroOrMoreExpr{
						pos: position{line: 487, col: 40, offset: 18859},
						expr: &choiceExpr{
							pos: position{line: 487, col: 41, offset: 18860},
							alternatives: []interface{}{
								&ruleRefExpr{
									pos:  position{line: 487, col: 41, offset: 18860},
									name: "ListParagraph",
								},
								&ruleRefExpr{
									pos:  position{line: 487, col: 57, offset: 18876},
									name: "ContinuedDocumentBlock",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Paragraph",
			pos:  position{line: 511, col: 1, offset: 19679},
			expr: &choiceExpr{
				pos: position{line: 513, col: 5, offset: 19726},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 513, col: 5, offset: 19726},
						run: (*parser).callonParagraph2,
						expr: &seqExpr{
							pos: position{line: 513, col: 5, offset: 19726},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 513, col: 5, offset: 19726},
									label: "attributes",
									expr: &zeroOrMoreExpr{
										pos: position{line: 513, col: 16, offset: 19737},
										expr: &choiceExpr{
											pos: position{line: 521, col: 23, offset: 20215},
											alternatives: []interface{}{
												&actionExpr{
													pos: position{line: 141, col: 24, offset: 5496},
													run: (*parser).callonParagraph7,
													expr: &seqExpr{
														pos: position{line: 141, col: 24, offset: 5496},
														exprs: []interface{}{
															&labeledExpr{
																pos:   position{line: 141, col: 24, offset: 5496},
																label: "attr",
																expr: &choiceExpr{
																	pos: position{line: 141, col: 30, offset: 5502},
																	alternatives: []interface{}{
																		&actionExpr{
																			pos: position{line: 203, col: 20, offset: 7402},
																			run: (*parser).callonParagraph11,
																			expr: &seqExpr{
																				pos: position{line: 203, col: 20, offset: 7402},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 203, col: 20, offset: 7402},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 203, col: 24, offset: 7406},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 215, col: 14, offset: 7912},
																							run: (*parser).callonParagraph15,
																							expr: &seqExpr{
																								pos: position{line: 215, col: 14, offset: 7912},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 215, col: 14, offset: 7912},
																										expr: &actionExpr{
																											pos: position{line: 231, col: 14, offset: 8648},
																											run: (*parser).callonParagraph18,
																											expr: &litMatcher{
																												pos:        position{line: 231, col: 14, offset: 8648},
																												val:        "verse",
																												ignoreCase: false,
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 215, col: 25, offset: 7923},
																										expr: &seqExpr{
																											pos: position{line: 215, col: 26, offset: 7924},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 215, col: 26, offset: 7924},
																													expr: &choiceExpr{
																														pos: position{line: 955, col: 8, offset: 37904},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 951, col: 12, offset: 37864},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 951, col: 21, offset: 37873},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 953, col: 8, offset: 37893},
																																expr: &anyMatcher{
																																	line: 953, col: 9, offset: 37894,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 31, offset: 7929},
																													expr: &choiceExpr{
																														pos: position{line: 947, col: 7, offset: 37802},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 947, col: 7, offset: 37802},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 947, col: 13, offset: 37808},
																																run: (*parser).callonParagraph31,
																																expr: &litMatcher{
																																	pos:        position{line: 947, col: 13, offset: 37808},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 35, offset: 7933},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 36, offset: 7934},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 40, offset: 7938},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 41, offset: 7939},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 45, offset: 7943},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 46, offset: 7944},
																														val:        "#",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 50, offset: 7948},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 51, offset: 7949},
																														val:        "=",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 55, offset: 7953},
																													expr: &choiceExpr{
																														pos: position{line: 494, col: 19, offset: 19202},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 494, col: 19, offset: 19202},
																																run: (*parser).callonParagraph43,
																																expr: &litMatcher{
																																	pos:        position{line: 494, col: 19, offset: 19202},
																																	val:        "TIP",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 496, col: 5, offset: 19240},
																																run: (*parser).callonParagraph45,
																																expr: &litMatcher{
																																	pos:        position{line: 496, col: 5, offset: 19240},
																																	val:        "NOTE",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 498, col: 5, offset: 19280},
																																run: (*parser).callonParagraph47,
																																expr: &litMatcher{
																																	pos:        position{line: 498, col: 5, offset: 19280},
																																	val:        "IMPORTANT",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 500, col: 5, offset: 19330},
																																run: (*parser).callonParagraph49,
																																expr: &litMatcher{
																																	pos:        position{line: 500, col: 5, offset: 19330},
																																	val:        "WARNING",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 502, col: 5, offset: 19376},
																																run: (*parser).callonParagraph51,
																																expr: &litMatcher{
																																	pos:        position{line: 502, col: 5, offset: 19376},
																																	val:        "CAUTION",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&anyMatcher{
																													line: 215, col: 71, offset: 7969,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 203, col: 41, offset: 7423},
																						expr: &choiceExpr{
																							pos: position{line: 947, col: 7, offset: 37802},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 947, col: 7, offset: 37802},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 947, col: 13, offset: 37808},
																									run: (*parser).callonParagraph57,
																									expr: &litMatcher{
																										pos:        position{line: 947, col: 13, offset: 37808},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 203, col: 45, offset: 7427},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 203, col: 49, offset: 7431},
																						label: "author",
																						expr: &actionExpr{
																							pos: position{line: 235, col: 16, offset: 8707},
																							run: (*parser).callonParagraph61,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 235, col: 16, offset: 8707},
																								expr: &seqExpr{
																									pos: position{line: 235, col: 17, offset: 8708},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 235, col: 17, offset: 8708},
																											expr: &choiceExpr{
																												pos: position{line: 955, col: 8, offset: 37904},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 951, col: 12, offset: 37864},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 951, col: 21, offset: 37873},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 953, col: 8, offset: 37893},
																														expr: &anyMatcher{
																															line: 953, col: 9, offset: 37894,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 22, offset: 8713},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 23, offset: 8714},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 27, offset: 8718},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 28, offset: 8719},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 235, col: 32, offset: 8723,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 203, col: 70, offset: 7452},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 203, col: 74, offset: 7456},
																						label: "title",
																						expr: &actionExpr{
																							pos: position{line: 239, col: 15, offset: 8777},
																							run: (*parser).callonParagraph77,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 239, col: 15, offset: 8777},
																								expr: &seqExpr{
																									pos: position{line: 239, col: 16, offset: 8778},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 239, col: 16, offset: 8778},
																											expr: &choiceExpr{
																												pos: position{line: 955, col: 8, offset: 37904},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 951, col: 12, offset: 37864},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 951, col: 21, offset: 37873},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 953, col: 8, offset: 37893},
																														expr: &anyMatcher{
																															line: 953, col: 9, offset: 37894,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 239, col: 21, offset: 8783},
																											expr: &litMatcher{
																												pos:        position{line: 239, col: 22, offset: 8784},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 239, col: 26, offset: 8788},
																											expr: &litMatcher{
																												pos:        position{line: 239, col: 27, offset: 8789},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 239, col: 31, offset: 8793,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 203, col: 93, offset: 7475},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 207, col: 5, offset: 7618},
																			run: (*parser).callonParagraph92,
																			expr: &seqExpr{
																				pos: position{line: 207, col: 5, offset: 7618},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 207, col: 5, offset: 7618},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 207, col: 9, offset: 7622},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 215, col: 14, offset: 7912},
																							run: (*parser).callonParagraph96,
																							expr: &seqExpr{
																								pos: position{line: 215, col: 14, offset: 7912},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 215, col: 14, offset: 7912},
																										expr: &actionExpr{
																											pos: position{line: 231, col: 14, offset: 8648},
																											run: (*parser).callonParagraph99,
																											expr: &litMatcher{
																												pos:        position{line: 231, col: 14, offset: 8648},
																												val:        "verse",
																												ignoreCase: false,
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 215, col: 25, offset: 7923},
																										expr: &seqExpr{
																											pos: position{line: 215, col: 26, offset: 7924},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 215, col: 26, offset: 7924},
																													expr: &choiceExpr{
																														pos: position{line: 955, col: 8, offset: 37904},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 951, col: 12, offset: 37864},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 951, col: 21, offset: 37873},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 953, col: 8, offset: 37893},
																																expr: &anyMatcher{
																																	line: 953, col: 9, offset: 37894,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 31, offset: 7929},
																													expr: &choiceExpr{
																														pos: position{line: 947, col: 7, offset: 37802},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 947, col: 7, offset: 37802},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 947, col: 13, offset: 37808},
																																run: (*parser).callonParagraph112,
																																expr: &litMatcher{
																																	pos:        position{line: 947, col: 13, offset: 37808},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 35, offset: 7933},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 36, offset: 7934},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 40, offset: 7938},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 41, offset: 7939},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 45, offset: 7943},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 46, offset: 7944},
																														val:        "#",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 50, offset: 7948},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 51, offset: 7949},
																														val:        "=",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 55, offset: 7953},
																													expr: &choiceExpr{
																														pos: position{line: 494, col: 19, offset: 19202},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 494, col: 19, offset: 19202},
																																run: (*parser).callonParagraph124,
																																expr: &litMatcher{
																																	pos:        position{line: 494, col: 19, offset: 19202},
																																	val:        "TIP",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 496, col: 5, offset: 19240},
																																run: (*parser).callonParagraph126,
																																expr: &litMatcher{
																																	pos:        position{line: 496, col: 5, offset: 19240},
																																	val:        "NOTE",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 498, col: 5, offset: 19280},
																																run: (*parser).callonParagraph128,
																																expr: &litMatcher{
																																	pos:        position{line: 498, col: 5, offset: 19280},
																																	val:        "IMPORTANT",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 500, col: 5, offset: 19330},
																																run: (*parser).callonParagraph130,
																																expr: &litMatcher{
																																	pos:        position{line: 500, col: 5, offset: 19330},
																																	val:        "WARNING",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 502, col: 5, offset: 19376},
																																run: (*parser).callonParagraph132,
																																expr: &litMatcher{
																																	pos:        position{line: 502, col: 5, offset: 19376},
																																	val:        "CAUTION",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&anyMatcher{
																													line: 215, col: 71, offset: 7969,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 207, col: 26, offset: 7639},
																						expr: &choiceExpr{
																							pos: position{line: 947, col: 7, offset: 37802},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 947, col: 7, offset: 37802},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 947, col: 13, offset: 37808},
																									run: (*parser).callonParagraph138,
																									expr: &litMatcher{
																										pos:        position{line: 947, col: 13, offset: 37808},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 207, col: 30, offset: 7643},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 207, col: 34, offset: 7647},
																						label: "author",
																						expr: &actionExpr{
																							pos: position{line: 235, col: 16, offset: 8707},
																							run: (*parser).callonParagraph142,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 235, col: 16, offset: 8707},
																								expr: &seqExpr{
																									pos: position{line: 235, col: 17, offset: 8708},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 235, col: 17, offset: 8708},
																											expr: &choiceExpr{
																												pos: position{line: 955, col: 8, offset: 37904},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 951, col: 12, offset: 37864},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 951, col: 21, offset: 37873},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 953, col: 8, offset: 37893},
																														expr: &anyMatcher{
																															line: 953, col: 9, offset: 37894,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 22, offset: 8713},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 23, offset: 8714},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 27, offset: 8718},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 28, offset: 8719},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 235, col: 32, offset: 8723,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 207, col: 55, offset: 7668},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 211, col: 5, offset: 7799},
																			run: (*parser).callonParagraph157,
																			expr: &seqExpr{
																				pos: position{line: 211, col: 5, offset: 7799},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 211, col: 5, offset: 7799},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 211, col: 9, offset: 7803},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 215, col: 14, offset: 7912},
																							run: (*parser).callonParagraph161,
																							expr: &seqExpr{
																								pos: position{line: 215, col: 14, offset: 7912},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 215, col: 14, offset: 7912},
																										expr: &actionExpr{
																											pos: position{line: 231, col: 14, offset: 8648},
																											run: (*parser).callonParagraph164,
																											expr: &litMatcher{
																												pos:        position{line: 231, col: 14, offset: 8648},
																												val:        "verse",
																												ignoreCase: false,
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 215, col: 25, offset: 7923},
																										expr: &seqExpr{
																											pos: position{line: 215, col: 26, offset: 7924},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 215, col: 26, offset: 7924},
																													expr: &choiceExpr{
																														pos: position{line: 955, col: 8, offset: 37904},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 951, col: 12, offset: 37864},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 951, col: 21, offset: 37873},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 953, col: 8, offset: 37893},
																																expr: &anyMatcher{
																																	line: 953, col: 9, offset: 37894,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 31, offset: 7929},
																													expr: &choiceExpr{
																														pos: position{line: 947, col: 7, offset: 37802},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 947, col: 7, offset: 37802},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 947, col: 13, offset: 37808},
																																run: (*parser).callonParagraph177,
																																expr: &litMatcher{
																																	pos:        position{line: 947, col: 13, offset: 37808},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 35, offset: 7933},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 36, offset: 7934},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 40, offset: 7938},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 41, offset: 7939},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 45, offset: 7943},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 46, offset: 7944},
																														val:        "#",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 50, offset: 7948},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 51, offset: 7949},
																														val:        "=",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 55, offset: 7953},
																													expr: &choiceExpr{
																														pos: position{line: 494, col: 19, offset: 19202},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 494, col: 19, offset: 19202},
																																run: (*parser).callonParagraph189,
																																expr: &litMatcher{
																																	pos:        position{line: 494, col: 19, offset: 19202},
																																	val:        "TIP",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 496, col: 5, offset: 19240},
																																run: (*parser).callonParagraph191,
																																expr: &litMatcher{
																																	pos:        position{line: 496, col: 5, offset: 19240},
																																	val:        "NOTE",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 498, col: 5, offset: 19280},
																																run: (*parser).callonParagraph193,
																																expr: &litMatcher{
																																	pos:        position{line: 498, col: 5, offset: 19280},
																																	val:        "IMPORTANT",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 500, col: 5, offset: 19330},
																																run: (*parser).callonParagraph195,
																																expr: &litMatcher{
																																	pos:        position{line: 500, col: 5, offset: 19330},
																																	val:        "WARNING",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 502, col: 5, offset: 19376},
																																run: (*parser).callonParagraph197,
																																expr: &litMatcher{
																																	pos:        position{line: 502, col: 5, offset: 19376},
																																	val:        "CAUTION",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&anyMatcher{
																													line: 215, col: 71, offset: 7969,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 211, col: 26, offset: 7820},
																						expr: &choiceExpr{
																							pos: position{line: 947, col: 7, offset: 37802},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 947, col: 7, offset: 37802},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 947, col: 13, offset: 37808},
																									run: (*parser).callonParagraph203,
																									expr: &litMatcher{
																										pos:        position{line: 947, col: 13, offset: 37808},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 211, col: 30, offset: 7824},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 219, col: 20, offset: 8138},
																			run: (*parser).callonParagraph206,
																			expr: &seqExpr{
																				pos: position{line: 219, col: 20, offset: 8138},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 219, col: 20, offset: 8138},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 219, col: 24, offset: 8142},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 231, col: 14, offset: 8648},
																							run: (*parser).callonParagraph210,
																							expr: &litMatcher{
																								pos:        position{line: 231, col: 14, offset: 8648},
																								val:        "verse",
																								ignoreCase: false,
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 219, col: 41, offset: 8159},
																						expr: &choiceExpr{
																							pos: position{line: 947, col: 7, offset: 37802},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 947, col: 7, offset: 37802},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 947, col: 13, offset: 37808},
																									run: (*parser).callonParagraph215,
																									expr: &litMatcher{
																										pos:        position{line: 947, col: 13, offset: 37808},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 219, col: 45, offset: 8163},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 219, col: 49, offset: 8167},
																						label: "author",
																						expr: &actionExpr{
																							pos: position{line: 235, col: 16, offset: 8707},
																							run: (*parser).callonParagraph219,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 235, col: 16, offset: 8707},
																								expr: &seqExpr{
																									pos: position{line: 235, col: 17, offset: 8708},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 235, col: 17, offset: 8708},
																											expr: &choiceExpr{
																												pos: position{line: 955, col: 8, offset: 37904},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 951, col: 12, offset: 37864},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 951, col: 21, offset: 37873},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 953, col: 8, offset: 37893},
																														expr: &anyMatcher{
																															line: 953, col: 9, offset: 37894,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 22, offset: 8713},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 23, offset: 8714},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 27, offset: 8718},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 28, offset: 8719},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 235, col: 32, offset: 8723,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 219, col: 70, offset: 8188},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 219, col: 74, offset: 8192},
																						label: "title",
																						expr: &actionExpr{
																							pos: position{line: 239, col: 15, offset: 8777},
																							run: (*parser).callonParagraph235,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 239, col: 15, offset: 8777},
																								expr: &seqExpr{
																									pos: position{line: 239, col: 16, offset: 8778},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 239, col: 16, offset: 8778},
																											expr: &choiceExpr{
																												pos: position{line: 955, col: 8, offset: 37904},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 951, col: 12, offset: 37864},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 951, col: 21, offset: 37873},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 953, col: 8, offset: 37893},
																														expr: &anyMatcher{
																															line: 953, col: 9, offset: 37894,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 239, col: 21, offset: 8783},
																											expr: &litMatcher{
																												pos:        position{line: 239, col: 22, offset: 8784},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 239, col: 26, offset: 8788},
																											expr: &litMatcher{
																												pos:        position{line: 239, col: 27, offset: 8789},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 239, col: 31, offset: 8793,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 219, col: 93, offset: 8211},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 223, col: 5, offset: 8354},
																			run: (*parser).callonParagraph250,
																			expr: &seqExpr{
																				pos: position{line: 223, col: 5, offset: 8354},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 223, col: 5, offset: 8354},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 223, col: 9, offset: 8358},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 231, col: 14, offset: 8648},
																							run: (*parser).callonParagraph254,
																							expr: &litMatcher{
																								pos:        position{line: 231, col: 14, offset: 8648},
																								val:        "verse",
																								ignoreCase: false,
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 223, col: 26, offset: 8375},
																						expr: &choiceExpr{
																							pos: position{line: 947, col: 7, offset: 37802},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 947, col: 7, offset: 37802},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 947, col: 13, offset: 37808},
																									run: (*parser).callonParagraph259,
																									expr: &litMatcher{
																										pos:        position{line: 947, col: 13, offset: 37808},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 223, col: 30, offset: 8379},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 223, col: 34, offset: 8383},
																						label: "author",
																						expr: &actionExpr{
																							pos: position{line: 235, col: 16, offset: 8707},
																							run: (*parser).callonParagraph263,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 235, col: 16, offset: 8707},
																								expr: &seqExpr{
																									pos: position{line: 235, col: 17, offset: 8708},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 235, col: 17, offset: 8708},
																											expr: &choiceExpr{
																												pos: position{line: 955, col: 8, offset: 37904},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 951, col: 12, offset: 37864},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 951, col: 21, offset: 37873},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 953, col: 8, offset: 37893},
																														expr: &anyMatcher{
																															line: 953, col: 9, offset: 37894,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 22, offset: 8713},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 23, offset: 8714},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 27, offset: 8718},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 28, offset: 8719},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 235, col: 32, offset: 8723,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 223, col: 55, offset: 8404},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 227, col: 5, offset: 8535},
																			run: (*parser).callonParagraph278,
																			expr: &seqExpr{
																				pos: position{line: 227, col: 5, offset: 8535},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 227, col: 5, offset: 8535},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 227, col: 9, offset: 8539},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 231, col: 14, offset: 8648},
																							run: (*parser).callonParagraph282,
																							expr: &litMatcher{
																								pos:        position{line: 231, col: 14, offset: 8648},
																								val:        "verse",
																								ignoreCase: false,
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 227, col: 26, offset: 8556},
																						expr: &choiceExpr{
																							pos: position{line: 947, col: 7, offset: 37802},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 947, col: 7, offset: 37802},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 947, col: 13, offset: 37808},
																									run: (*parser).callonParagraph287,
																									expr: &litMatcher{
																										pos:        position{line: 947, col: 13, offset: 37808},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 227, col: 30, offset: 8560},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																},
															},
															&zeroOrMoreExpr{
																pos: position{line: 141, col: 65, offset: 5537},
																expr: &choiceExpr{
																	pos: position{line: 947, col: 7, offset: 37802},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 947, col: 7, offset: 37802},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 947, col: 13, offset: 37808},
																			run: (*parser).callonParagraph293,
																			expr: &litMatcher{
																				pos:        position{line: 947, col: 13, offset: 37808},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&choiceExpr{
																pos: position{line: 955, col: 8, offset: 37904},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 951, col: 12, offset: 37864},
																		val:        "\r\n",
																		ignoreCase: false,
																	},
																	&charClassMatcher{
																		pos:        position{line: 951, col: 21, offset: 37873},
																		val:        "[\\r\\n]",
																		chars:      []rune{'\r', '\n'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																	&notExpr{
																		pos: position{line: 953, col: 8, offset: 37893},
																		expr: &anyMatcher{
																			line: 953, col: 9, offset: 37894,
																		},
																	},
																},
															},
														},
													},
												},
												&actionExpr{
													pos: position{line: 136, col: 21, offset: 5188},
													run: (*parser).callonParagraph300,
													expr: &seqExpr{
														pos: position{line: 136, col: 21, offset: 5188},
														exprs: []interface{}{
															&labeledExpr{
																pos:   position{line: 136, col: 21, offset: 5188},
																label: "attr",
																expr: &choiceExpr{
																	pos: position{line: 136, col: 27, offset: 5194},
																	alternatives: []interface{}{
																		&actionExpr{
																			pos: position{line: 145, col: 14, offset: 5645},
																			run: (*parser).callonParagraph304,
																			expr: &labeledExpr{
																				pos:   position{line: 145, col: 14, offset: 5645},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 151, col: 20, offset: 5775},
																					run: (*parser).callonParagraph306,
																					expr: &seqExpr{
																						pos: position{line: 151, col: 20, offset: 5775},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 151, col: 20, offset: 5775},
																								val:        "[[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 151, col: 25, offset: 5780},
																								label: "id",
																								expr: &actionExpr{
																									pos: position{line: 933, col: 7, offset: 37526},
																									run: (*parser).callonParagraph310,
																									expr: &oneOrMoreExpr{
																										pos: position{line: 933, col: 7, offset: 37526},
																										expr: &seqExpr{
																											pos: position{line: 933, col: 8, offset: 37527},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 933, col: 8, offset: 37527},
																													expr: &choiceExpr{
																														pos: position{line: 951, col: 12, offset: 37864},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 951, col: 12, offset: 37864},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 951, col: 21, offset: 37873},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 933, col: 17, offset: 37536},
																													expr: &choiceExpr{
																														pos: position{line: 947, col: 7, offset: 37802},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 947, col: 7, offset: 37802},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 947, col: 13, offset: 37808},
																																run: (*parser).callonParagraph320,
																																expr: &litMatcher{
																																	pos:        position{line: 947, col: 13, offset: 37808},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 933, col: 21, offset: 37540},
																													expr: &litMatcher{
																														pos:        position{line: 933, col: 22, offset: 37541},
																														val:        "[",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 933, col: 26, offset: 37545},
																													expr: &litMatcher{
																														pos:        position{line: 933, col: 27, offset: 37546},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 933, col: 31, offset: 37550},
																													expr: &litMatcher{
																														pos:        position{line: 933, col: 32, offset: 37551},
																														val:        "<<",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 933, col: 37, offset: 37556},
																													expr: &litMatcher{
																														pos:        position{line: 933, col: 38, offset: 37557},
																														val:        ">>",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 933, col: 42, offset: 37561,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 151, col: 33, offset: 5788},
																								val:        "]]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 147, col: 5, offset: 5691},
																			run: (*parser).callonParagraph332,
																			expr: &seqExpr{
																				pos: position{line: 147, col: 5, offset: 5691},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 147, col: 5, offset: 5691},
																						val:        "[#",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 147, col: 10, offset: 5696},
																						label: "id",
																						expr: &actionExpr{
																							pos: position{line: 933, col: 7, offset: 37526},
																							run: (*parser).callonParagraph336,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 933, col: 7, offset: 37526},
																								expr: &seqExpr{
																									pos: position{line: 933, col: 8, offset: 37527},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 933, col: 8, offset: 37527},
																											expr: &choiceExpr{
																												pos: position{line: 951, col: 12, offset: 37864},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 951, col: 12, offset: 37864},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 951, col: 21, offset: 37873},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 933, col: 17, offset: 37536},
																											expr: &choiceExpr{
																												pos: position{line: 947, col: 7, offset: 37802},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 947, col: 7, offset: 37802},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 947, col: 13, offset: 37808},
																														run: (*parser).callonParagraph346,
																														expr: &litMatcher{
																															pos:        position{line: 947, col: 13, offset: 37808},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 933, col: 21, offset: 37540},
																											expr: &litMatcher{
																												pos:        position{line: 933, col: 22, offset: 37541},
																												val:        "[",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 933, col: 26, offset: 37545},
																											expr: &litMatcher{
																												pos:        position{line: 933, col: 27, offset: 37546},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 933, col: 31, offset: 37550},
																											expr: &litMatcher{
																												pos:        position{line: 933, col: 32, offset: 37551},
																												val:        "<<",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 933, col: 37, offset: 37556},
																											expr: &litMatcher{
																												pos:        position{line: 933, col: 38, offset: 37557},
																												val:        ">>",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 933, col: 42, offset: 37561,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 147, col: 18, offset: 5704},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 157, col: 17, offset: 5997},
																			run: (*parser).callonParagraph358,
																			expr: &seqExpr{
																				pos: position{line: 157, col: 17, offset: 5997},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 157, col: 17, offset: 5997},
																						val:        ".",
																						ignoreCase: false,
																					},
																					&notExpr{
																						pos: position{line: 157, col: 21, offset: 6001},
																						expr: &litMatcher{
																							pos:        position{line: 157, col: 22, offset: 6002},
																							val:        ".",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 157, col: 26, offset: 6006},
																						expr: &choiceExpr{
																							pos: position{line: 947, col: 7, offset: 37802},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 947, col: 7, offset: 37802},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 947, col: 13, offset: 37808},
																									run: (*parser).callonParagraph366,
																									expr: &litMatcher{
																										pos:        position{line: 947, col: 13, offset: 37808},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&labeledExpr{
																						pos:   position{line: 157, col: 30, offset: 6010},
																						label: "title",
																						expr: &actionExpr{
																							pos: position{line: 161, col: 24, offset: 6115},
																							run: (*parser).callonParagraph369,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 161, col: 24, offset: 6115},
																								expr: &seqExpr{
																									pos: position{line: 161, col: 25, offset: 6116},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 161, col: 25, offset: 6116},
																											expr: &choiceExpr{
																												pos: position{line: 951, col: 12, offset: 37864},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 951, col: 12, offset: 37864},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 951, col: 21, offset: 37873},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&anyMatcher{
																											line: 161, col: 34, offset: 6125,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 167, col: 16, offset: 6274},
																			run: (*parser).callonParagraph377,
																			expr: &seqExpr{
																				pos: position{line: 167, col: 16, offset: 6274},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 167, col: 16, offset: 6274},
																						val:        "[.",
																						ignoreCase: false,
																					},
																					&notExpr{
																						pos: position{line: 167, col: 21, offset: 6279},
																						expr: &choiceExpr{
																							pos: position{line: 947, col: 7, offset: 37802},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 947, col: 7, offset: 37802},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 947, col: 13, offset: 37808},
																									run: (*parser).callonParagraph383,
																									expr: &litMatcher{
																										pos:        position{line: 947, col: 13, offset: 37808},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&labeledExpr{
																						pos:   position{line: 167, col: 25, offset: 6283},
																						label: "role",
																						expr: &actionExpr{
																							pos: position{line: 171, col: 23, offset: 6387},
																							run: (*parser).callonParagraph386,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 171, col: 23, offset: 6387},
																								expr: &seqExpr{
																									pos: position{line: 171, col: 24, offset: 6388},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 171, col: 24, offset: 6388},
																											expr: &choiceExpr{
																												pos: position{line: 951, col: 12, offset: 37864},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 951, col: 12, offset: 37864},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 951, col: 21, offset: 37873},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 171, col: 33, offset: 6397},
																											expr: &litMatcher{
																												pos:        position{line: 171, col: 34, offset: 6398},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 171, col: 38, offset: 6402,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 167, col: 51, offset: 6309},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 176, col: 30, offset: 6551},
																			run: (*parser).callonParagraph397,
																			expr: &seqExpr{
																				pos: position{line: 176, col: 30, offset: 6551},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 176, col: 30, offset: 6551},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 176, col: 34, offset: 6555},
																						label: "k",
																						expr: &choiceExpr{
																							pos: position{line: 494, col: 19, offset: 19202},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 494, col: 19, offset: 19202},
																									run: (*parser).callonParagraph402,
																									expr: &litMatcher{
																										pos:        position{line: 494, col: 19, offset: 19202},
																										val:        "TIP",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 496, col: 5, offset: 19240},
																									run: (*parser).callonParagraph404,
																									expr: &litMatcher{
																										pos:        position{line: 496, col: 5, offset: 19240},
																										val:        "NOTE",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 498, col: 5, offset: 19280},
																									run: (*parser).callonParagraph406,
																									expr: &litMatcher{
																										pos:        position{line: 498, col: 5, offset: 19280},
																										val:        "IMPORTANT",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 500, col: 5, offset: 19330},
																									run: (*parser).callonParagraph408,
																									expr: &litMatcher{
																										pos:        position{line: 500, col: 5, offset: 19330},
																										val:        "WARNING",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 502, col: 5, offset: 19376},
																									run: (*parser).callonParagraph410,
																									expr: &litMatcher{
																										pos:        position{line: 502, col: 5, offset: 19376},
																										val:        "CAUTION",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 176, col: 53, offset: 6574},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 199, col: 21, offset: 7299},
																			run: (*parser).callonParagraph413,
																			expr: &litMatcher{
																				pos:        position{line: 199, col: 21, offset: 7299},
																				val:        "[horizontal]",
																				ignoreCase: false,
																			},
																		},
																		&actionExpr{
																			pos: position{line: 181, col: 19, offset: 6735},
																			run: (*parser).callonParagraph415,
																			expr: &seqExpr{
																				pos: position{line: 181, col: 19, offset: 6735},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 181, col: 19, offset: 6735},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&notExpr{
																						pos: position{line: 181, col: 23, offset: 6739},
																						expr: &choiceExpr{
																							pos: position{line: 947, col: 7, offset: 37802},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 947, col: 7, offset: 37802},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 947, col: 13, offset: 37808},
																									run: (*parser).callonParagraph421,
																									expr: &litMatcher{
																										pos:        position{line: 947, col: 13, offset: 37808},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&labeledExpr{
																						pos:   position{line: 181, col: 27, offset: 6743},
																						label: "attributes",
																						expr: &zeroOrMoreExpr{
																							pos: position{line: 181, col: 38, offset: 6754},
																							expr: &choiceExpr{
																								pos: position{line: 185, col: 21, offset: 6867},
																								alternatives: []interface{}{
																									&actionExpr{
																										pos: position{line: 185, col: 21, offset: 6867},
																										run: (*parser).callonParagraph426,
																										expr: &seqExpr{
																											pos: position{line: 185, col: 21, offset: 6867},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 185, col: 21, offset: 6867},
																													label: "key",
																													expr: &actionExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														run: (*parser).callonParagraph429,
																														expr: &seqExpr{
																															pos: position{line: 191, col: 17, offset: 7127},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 17, offset: 7127},
																																	expr: &actionExpr{
																																		pos: position{line: 231, col: 14, offset: 8648},
																																		run: (*parser).callonParagraph432,
																																		expr: &litMatcher{
																																			pos:        position{line: 231, col: 14, offset: 8648},
																																			val:        "verse",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&labeledExpr{
																																	pos:   position{line: 191, col: 28, offset: 7138},
																																	label: "key",
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 191, col: 32, offset: 7142},
																																		expr: &seqExpr{
																																			pos: position{line: 191, col: 33, offset: 7143},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 191, col: 33, offset: 7143},
																																					expr: &litMatcher{
																																						pos:        position{line: 191, col: 34, offset: 7144},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 191, col: 38, offset: 7148},
																																					expr: &litMatcher{
																																						pos:        position{line: 191, col: 39, offset: 7149},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 191, col: 43, offset: 7153},
																																					expr: &litMatcher{
																																						pos:        position{line: 191, col: 44, offset: 7154},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 191, col: 48, offset: 7158,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																												&litMatcher{
																													pos:        position{line: 185, col: 40, offset: 6886},
																													val:        "=",
																													ignoreCase: false,
																												},
																												&labeledExpr{
																													pos:   position{line: 185, col: 44, offset: 6890},
																													label: "value",
																													expr: &actionExpr{
																														pos: position{line: 195, col: 19, offset: 7217},
																														run: (*parser).callonParagraph446,
																														expr: &labeledExpr{
																															pos:   position{line: 195, col: 19, offset: 7217},
																															label: "value",
																															expr: &zeroOrMoreExpr{
																																pos: position{line: 195, col: 25, offset: 7223},
																																expr: &seqExpr{
																																	pos: position{line: 195, col: 26, offset: 7224},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 195, col: 26, offset: 7224},
																																			expr: &litMatcher{
																																				pos:        position{line: 195, col: 27, offset: 7225},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 195, col: 31, offset: 7229},
																																			expr: &litMatcher{
																																				pos:        position{line: 195, col: 32, offset: 7230},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 195, col: 36, offset: 7234},
																																			expr: &litMatcher{
																																				pos:        position{line: 195, col: 37, offset: 7235},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 195, col: 41, offset: 7239,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																												&zeroOrOneExpr{
																													pos: position{line: 185, col: 67, offset: 6913},
																													expr: &litMatcher{
																														pos:        position{line: 185, col: 67, offset: 6913},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 185, col: 72, offset: 6918},
																													expr: &choiceExpr{
																														pos: position{line: 947, col: 7, offset: 37802},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 947, col: 7, offset: 37802},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 947, col: 13, offset: 37808},
																																run: (*parser).callonParagraph462,
																																expr: &litMatcher{
																																	pos:        position{line: 947, col: 13, offset: 37808},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&actionExpr{
																										pos: position{line: 187, col: 5, offset: 7002},
																										run: (*parser).callonParagraph464,
																										expr: &seqExpr{
																											pos: position{line: 187, col: 5, offset: 7002},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 187, col: 5, offset: 7002},
																													label: "key",
																													expr: &actionExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														run: (*parser).callonParagraph467,
																														expr: &seqExpr{
																															pos: position{line: 191, col: 17, offset: 7127},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 17, offset: 7127},
																																	expr: &actionExpr{
																																		pos: position{line: 231, col: 14, offset: 8648},
																																		run: (*parser).callonParagraph470,
																																		expr: &litMatcher{
																																			pos:        position{line: 231, col: 14, offset: 8648},
																																			val:        "verse",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&labeledExpr{
																																	pos:   position{line: 191, col: 28, offset: 7138},
																																	label: "key",
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 191, col: 32, offset: 7142},
																																		expr: &seqExpr{
																																			pos: position{line: 191, col: 33, offset: 7143},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 191, col: 33, offset: 7143},
																																					expr: &litMatcher{
																																						pos:        position{line: 191, col: 34, offset: 7144},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 191, col: 38, offset: 7148},
																																					expr: &litMatcher{
																																						pos:        position{line: 191, col: 39, offset: 7149},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 191, col: 43, offset: 7153},
																																					expr: &litMatcher{
																																						pos:        position{line: 191, col: 44, offset: 7154},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 191, col: 48, offset: 7158,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																												&zeroOrOneExpr{
																													pos: position{line: 187, col: 24, offset: 7021},
																													expr: &litMatcher{
																														pos:        position{line: 187, col: 24, offset: 7021},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 187, col: 29, offset: 7026},
																													expr: &choiceExpr{
																														pos: position{line: 947, col: 7, offset: 37802},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 947, col: 7, offset: 37802},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 947, col: 13, offset: 37808},
																																run: (*parser).callonParagraph487,
																																expr: &litMatcher{
																																	pos:        position{line: 947, col: 13, offset: 37808},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 181, col: 59, offset: 6775},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																},
															},
															&zeroOrMoreExpr{
																pos: position{line: 136, col: 131, offset: 5298},
																expr: &choiceExpr{
																	pos: position{line: 947, col: 7, offset: 37802},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 947, col: 7, offset: 37802},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 947, col: 13, offset: 37808},
																			run: (*parser).callonParagraph493,
																			expr: &litMatcher{
																				pos:        position{line: 947, col: 13, offset: 37808},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&choiceExpr{
																pos: position{line: 955, col: 8, offset: 37904},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 951, col: 12, offset: 37864},
																		val:        "\r\n",
																		ignoreCase: false,
																	},
																	&charClassMatcher{
																		pos:        position{line: 951, col: 21, offset: 37873},
																		val:        "[\\r\\n]",
																		chars:      []rune{'\r', '\n'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																	&notExpr{
																		pos: position{line: 953, col: 8, offset: 37893},
																		expr: &anyMatcher{
																			line: 953, col: 9, offset: 37894,
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 513, col: 38, offset: 19759},
									expr: &seqExpr{
										pos: position{line: 513, col: 40, offset: 19761},
										exprs: []interface{}{
											&oneOrMoreExpr{
												pos: position{line: 513, col: 40, offset: 19761},
												expr: &litMatcher{
													pos:        position{line: 513, col: 40, offset: 19761},
													val:        "=",
													ignoreCase: false,
												},
											},
											&oneOrMoreExpr{
												pos: position{line: 513, col: 45, offset: 19766},
												expr: &choiceExpr{
													pos: position{line: 947, col: 7, offset: 37802},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 947, col: 7, offset: 37802},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 947, col: 13, offset: 37808},
															run: (*parser).callonParagraph507,
															expr: &litMatcher{
																pos:        position{line: 947, col: 13, offset: 37808},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 513, col: 49, offset: 19770},
												expr: &choiceExpr{
													pos: position{line: 951, col: 12, offset: 37864},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 951, col: 12, offset: 37864},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 951, col: 21, offset: 37873},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 513, col: 59, offset: 19780},
									label: "t",
									expr: &choiceExpr{
										pos: position{line: 494, col: 19, offset: 19202},
										alternatives: []interface{}{
											&actionExpr{
												pos: position{line: 494, col: 19, offset: 19202},
												run: (*parser).callonParagraph515,
												expr: &litMatcher{
													pos:        position{line: 494, col: 19, offset: 19202},
													val:        "TIP",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 496, col: 5, offset: 19240},
												run: (*parser).callonParagraph517,
												expr: &litMatcher{
													pos:        position{line: 496, col: 5, offset: 19240},
													val:        "NOTE",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 498, col: 5, offset: 19280},
												run: (*parser).callonParagraph519,
												expr: &litMatcher{
													pos:        position{line: 498, col: 5, offset: 19280},
													val:        "IMPORTANT",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 500, col: 5, offset: 19330},
												run: (*parser).callonParagraph521,
												expr: &litMatcher{
													pos:        position{line: 500, col: 5, offset: 19330},
													val:        "WARNING",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 502, col: 5, offset: 19376},
												run: (*parser).callonParagraph523,
												expr: &litMatcher{
													pos:        position{line: 502, col: 5, offset: 19376},
													val:        "CAUTION",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 513, col: 78, offset: 19799},
									val:        ": ",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 513, col: 83, offset: 19804},
									label: "lines",
									expr: &oneOrMoreExpr{
										pos: position{line: 513, col: 89, offset: 19810},
										expr: &ruleRefExpr{
											pos:  position{line: 513, col: 90, offset: 19811},
											name: "InlineElements",
										},
									},
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 517, col: 5, offset: 20019},
						run: (*parser).callonParagraph529,
						expr: &seqExpr{
							pos: position{line: 517, col: 5, offset: 20019},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 517, col: 5, offset: 20019},
									label: "attributes",
									expr: &zeroOrMoreExpr{
										pos: position{line: 517, col: 16, offset: 20030},
										expr: &choiceExpr{
											pos: position{line: 521, col: 23, offset: 20215},
											alternatives: []interface{}{
												&actionExpr{
													pos: position{line: 141, col: 24, offset: 5496},
													run: (*parser).callonParagraph534,
													expr: &seqExpr{
														pos: position{line: 141, col: 24, offset: 5496},
														exprs: []interface{}{
															&labeledExpr{
																pos:   position{line: 141, col: 24, offset: 5496},
																label: "attr",
																expr: &choiceExpr{
																	pos: position{line: 141, col: 30, offset: 5502},
																	alternatives: []interface{}{
																		&actionExpr{
																			pos: position{line: 203, col: 20, offset: 7402},
																			run: (*parser).callonParagraph538,
																			expr: &seqExpr{
																				pos: position{line: 203, col: 20, offset: 7402},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 203, col: 20, offset: 7402},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 203, col: 24, offset: 7406},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 215, col: 14, offset: 7912},
																							run: (*parser).callonParagraph542,
																							expr: &seqExpr{
																								pos: position{line: 215, col: 14, offset: 7912},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 215, col: 14, offset: 7912},
																										expr: &actionExpr{
																											pos: position{line: 231, col: 14, offset: 8648},
																											run: (*parser).callonParagraph545,
																											expr: &litMatcher{
																												pos:        position{line: 231, col: 14, offset: 8648},
																												val:        "verse",
																												ignoreCase: false,
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 215, col: 25, offset: 7923},
																										expr: &seqExpr{
																											pos: position{line: 215, col: 26, offset: 7924},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 215, col: 26, offset: 7924},
																													expr: &choiceExpr{
																														pos: position{line: 955, col: 8, offset: 37904},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 951, col: 12, offset: 37864},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 951, col: 21, offset: 37873},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 953, col: 8, offset: 37893},
																																expr: &anyMatcher{
																																	line: 953, col: 9, offset: 37894,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 31, offset: 7929},
																													expr: &choiceExpr{
																														pos: position{line: 947, col: 7, offset: 37802},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 947, col: 7, offset: 37802},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 947, col: 13, offset: 37808},
																																run: (*parser).callonParagraph558,
																																expr: &litMatcher{
																																	pos:        position{line: 947, col: 13, offset: 37808},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 35, offset: 7933},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 36, offset: 7934},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 40, offset: 7938},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 41, offset: 7939},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 45, offset: 7943},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 46, offset: 7944},
																														val:        "#",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 50, offset: 7948},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 51, offset: 7949},
																														val:        "=",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 55, offset: 7953},
																													expr: &choiceExpr{
																														pos: position{line: 494, col: 19, offset: 19202},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 494, col: 19, offset: 19202},
																																run: (*parser).callonParagraph570,
																																expr: &litMatcher{
																																	pos:        position{line: 494, col: 19, offset: 19202},
																																	val:        "TIP",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 496, col: 5, offset: 19240},
																																run: (*parser).callonParagraph572,
																																expr: &litMatcher{
																																	pos:        position{line: 496, col: 5, offset: 19240},
																																	val:        "NOTE",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 498, col: 5, offset: 19280},
																																run: (*parser).callonParagraph574,
																																expr: &litMatcher{
																																	pos:        position{line: 498, col: 5, offset: 19280},
																																	val:        "IMPORTANT",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 500, col: 5, offset: 19330},
																																run: (*parser).callonParagraph576,
																																expr: &litMatcher{
																																	pos:        position{line: 500, col: 5, offset: 19330},
																																	val:        "WARNING",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 502, col: 5, offset: 19376},
																																run: (*parser).callonParagraph578,
																																expr: &litMatcher{
																																	pos:        position{line: 502, col: 5, offset: 19376},
																																	val:        "CAUTION",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&anyMatcher{
																													line: 215, col: 71, offset: 7969,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 203, col: 41, offset: 7423},
																						expr: &choiceExpr{
																							pos: position{line: 947, col: 7, offset: 37802},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 947, col: 7, offset: 37802},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 947, col: 13, offset: 37808},
																									run: (*parser).callonParagraph584,
																									expr: &litMatcher{
																										pos:        position{line: 947, col: 13, offset: 37808},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 203, col: 45, offset: 7427},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 203, col: 49, offset: 7431},
																						label: "author",
																						expr: &actionExpr{
																							pos: position{line: 235, col: 16, offset: 8707},
																							run: (*parser).callonParagraph588,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 235, col: 16, offset: 8707},
																								expr: &seqExpr{
																									pos: position{line: 235, col: 17, offset: 8708},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 235, col: 17, offset: 8708},
																											expr: &choiceExpr{
																												pos: position{line: 955, col: 8, offset: 37904},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 951, col: 12, offset: 37864},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 951, col: 21, offset: 37873},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 953, col: 8, offset: 37893},
																														expr: &anyMatcher{
																															line: 953, col: 9, offset: 37894,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 22, offset: 8713},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 23, offset: 8714},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 27, offset: 8718},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 28, offset: 8719},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 235, col: 32, offset: 8723,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 203, col: 70, offset: 7452},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 203, col: 74, offset: 7456},
																						label: "title",
																						expr: &actionExpr{
																							pos: position{line: 239, col: 15, offset: 8777},
																							run: (*parser).callonParagraph604,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 239, col: 15, offset: 8777},
																								expr: &seqExpr{
																									pos: position{line: 239, col: 16, offset: 8778},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 239, col: 16, offset: 8778},
																											expr: &choiceExpr{
																												pos: position{line: 955, col: 8, offset: 37904},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 951, col: 12, offset: 37864},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 951, col: 21, offset: 37873},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 953, col: 8, offset: 37893},
																														expr: &anyMatcher{
																															line: 953, col: 9, offset: 37894,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 239, col: 21, offset: 8783},
																											expr: &litMatcher{
																												pos:        position{line: 239, col: 22, offset: 8784},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 239, col: 26, offset: 8788},
																											expr: &litMatcher{
																												pos:        position{line: 239, col: 27, offset: 8789},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 239, col: 31, offset: 8793,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 203, col: 93, offset: 7475},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 207, col: 5, offset: 7618},
																			run: (*parser).callonParagraph619,
																			expr: &seqExpr{
																				pos: position{line: 207, col: 5, offset: 7618},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 207, col: 5, offset: 7618},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 207, col: 9, offset: 7622},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 215, col: 14, offset: 7912},
																							run: (*parser).callonParagraph623,
																							expr: &seqExpr{
																								pos: position{line: 215, col: 14, offset: 7912},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 215, col: 14, offset: 7912},
																										expr: &actionExpr{
																											pos: position{line: 231, col: 14, offset: 8648},
																											run: (*parser).callonParagraph626,
																											expr: &litMatcher{
																												pos:        position{line: 231, col: 14, offset: 8648},
																												val:        "verse",
																												ignoreCase: false,
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 215, col: 25, offset: 7923},
																										expr: &seqExpr{
																											pos: position{line: 215, col: 26, offset: 7924},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 215, col: 26, offset: 7924},
																													expr: &choiceExpr{
																														pos: position{line: 955, col: 8, offset: 37904},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 951, col: 12, offset: 37864},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 951, col: 21, offset: 37873},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 953, col: 8, offset: 37893},
																																expr: &anyMatcher{
																																	line: 953, col: 9, offset: 37894,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 31, offset: 7929},
																													expr: &choiceExpr{
																														pos: position{line: 947, col: 7, offset: 37802},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 947, col: 7, offset: 37802},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 947, col: 13, offset: 37808},
																																run: (*parser).callonParagraph639,
																																expr: &litMatcher{
																																	pos:        position{line: 947, col: 13, offset: 37808},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 35, offset: 7933},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 36, offset: 7934},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 40, offset: 7938},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 41, offset: 7939},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 45, offset: 7943},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 46, offset: 7944},
																														val:        "#",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 50, offset: 7948},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 51, offset: 7949},
																														val:        "=",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 55, offset: 7953},
																													expr: &choiceExpr{
																														pos: position{line: 494, col: 19, offset: 19202},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 494, col: 19, offset: 19202},
																																run: (*parser).callonParagraph651,
																																expr: &litMatcher{
																																	pos:        position{line: 494, col: 19, offset: 19202},
																																	val:        "TIP",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 496, col: 5, offset: 19240},
																																run: (*parser).callonParagraph653,
																																expr: &litMatcher{
																																	pos:        position{line: 496, col: 5, offset: 19240},
																																	val:        "NOTE",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 498, col: 5, offset: 19280},
																																run: (*parser).callonParagraph655,
																																expr: &litMatcher{
																																	pos:        position{line: 498, col: 5, offset: 19280},
																																	val:        "IMPORTANT",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 500, col: 5, offset: 19330},
																																run: (*parser).callonParagraph657,
																																expr: &litMatcher{
																																	pos:        position{line: 500, col: 5, offset: 19330},
																																	val:        "WARNING",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 502, col: 5, offset: 19376},
																																run: (*parser).callonParagraph659,
																																expr: &litMatcher{
																																	pos:        position{line: 502, col: 5, offset: 19376},
																																	val:        "CAUTION",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&anyMatcher{
																													line: 215, col: 71, offset: 7969,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 207, col: 26, offset: 7639},
																						expr: &choiceExpr{
																							pos: position{line: 947, col: 7, offset: 37802},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 947, col: 7, offset: 37802},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 947, col: 13, offset: 37808},
																									run: (*parser).callonParagraph665,
																									expr: &litMatcher{
																										pos:        position{line: 947, col: 13, offset: 37808},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 207, col: 30, offset: 7643},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 207, col: 34, offset: 7647},
																						label: "author",
																						expr: &actionExpr{
																							pos: position{line: 235, col: 16, offset: 8707},
																							run: (*parser).callonParagraph669,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 235, col: 16, offset: 8707},
																								expr: &seqExpr{
																									pos: position{line: 235, col: 17, offset: 8708},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 235, col: 17, offset: 8708},
																											expr: &choiceExpr{
																												pos: position{line: 955, col: 8, offset: 37904},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 951, col: 12, offset: 37864},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 951, col: 21, offset: 37873},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 953, col: 8, offset: 37893},
																														expr: &anyMatcher{
																															line: 953, col: 9, offset: 37894,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 22, offset: 8713},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 23, offset: 8714},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 27, offset: 8718},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 28, offset: 8719},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 235, col: 32, offset: 8723,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 207, col: 55, offset: 7668},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 211, col: 5, offset: 7799},
																			run: (*parser).callonParagraph684,
																			expr: &seqExpr{
																				pos: position{line: 211, col: 5, offset: 7799},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 211, col: 5, offset: 7799},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 211, col: 9, offset: 7803},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 215, col: 14, offset: 7912},
																							run: (*parser).callonParagraph688,
																							expr: &seqExpr{
																								pos: position{line: 215, col: 14, offset: 7912},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 215, col: 14, offset: 7912},
																										expr: &actionExpr{
																											pos: position{line: 231, col: 14, offset: 8648},
																											run: (*parser).callonParagraph691,
																											expr: &litMatcher{
																												pos:        position{line: 231, col: 14, offset: 8648},
																												val:        "verse",
																												ignoreCase: false,
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 215, col: 25, offset: 7923},
																										expr: &seqExpr{
																											pos: position{line: 215, col: 26, offset: 7924},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 215, col: 26, offset: 7924},
																													expr: &choiceExpr{
																														pos: position{line: 955, col: 8, offset: 37904},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 951, col: 12, offset: 37864},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 951, col: 21, offset: 37873},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 953, col: 8, offset: 37893},
																																expr: &anyMatcher{
																																	line: 953, col: 9, offset: 37894,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 31, offset: 7929},
																													expr: &choiceExpr{
																														pos: position{line: 947, col: 7, offset: 37802},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 947, col: 7, offset: 37802},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 947, col: 13, offset: 37808},
																																run: (*parser).callonParagraph704,
																																expr: &litMatcher{
																																	pos:        position{line: 947, col: 13, offset: 37808},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 35, offset: 7933},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 36, offset: 7934},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 40, offset: 7938},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 41, offset: 7939},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 45, offset: 7943},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 46, offset: 7944},
																														val:        "#",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 50, offset: 7948},
																													expr: &litMatcher{
																														pos:        position{line: 215, col: 51, offset: 7949},
																														val:        "=",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 215, col: 55, offset: 7953},
																													expr: &choiceExpr{
																														pos: position{line: 494, col: 19, offset: 19202},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 494, col: 19, offset: 19202},
																																run: (*parser).callonParagraph716,
																																expr: &litMatcher{
																																	pos:        position{line: 494, col: 19, offset: 19202},
																																	val:        "TIP",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 496, col: 5, offset: 19240},
																																run: (*parser).callonParagraph718,
																																expr: &litMatcher{
																																	pos:        position{line: 496, col: 5, offset: 19240},
																																	val:        "NOTE",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 498, col: 5, offset: 19280},
																																run: (*parser).callonParagraph720,
																																expr: &litMatcher{
																																	pos:        position{line: 498, col: 5, offset: 19280},
																																	val:        "IMPORTANT",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 500, col: 5, offset: 19330},
																																run: (*parser).callonParagraph722,
																																expr: &litMatcher{
																																	pos:        position{line: 500, col: 5, offset: 19330},
																																	val:        "WARNING",
																																	ignoreCase: false,
																																},
																															},
																															&actionExpr{
																																pos: position{line: 502, col: 5, offset: 19376},
																																run: (*parser).callonParagraph724,
																																expr: &litMatcher{
																																	pos:        position{line: 502, col: 5, offset: 19376},
																																	val:        "CAUTION",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&anyMatcher{
																													line: 215, col: 71, offset: 7969,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 211, col: 26, offset: 7820},
																						expr: &choiceExpr{
																							pos: position{line: 947, col: 7, offset: 37802},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 947, col: 7, offset: 37802},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 947, col: 13, offset: 37808},
																									run: (*parser).callonParagraph730,
																									expr: &litMatcher{
																										pos:        position{line: 947, col: 13, offset: 37808},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 211, col: 30, offset: 7824},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 219, col: 20, offset: 8138},
																			run: (*parser).callonParagraph733,
																			expr: &seqExpr{
																				pos: position{line: 219, col: 20, offset: 8138},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 219, col: 20, offset: 8138},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 219, col: 24, offset: 8142},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 231, col: 14, offset: 8648},
																							run: (*parser).callonParagraph737,
																							expr: &litMatcher{
																								pos:        position{line: 231, col: 14, offset: 8648},
																								val:        "verse",
																								ignoreCase: false,
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 219, col: 41, offset: 8159},
																						expr: &choiceExpr{
																							pos: position{line: 947, col: 7, offset: 37802},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 947, col: 7, offset: 37802},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 947, col: 13, offset: 37808},
																									run: (*parser).callonParagraph742,
																									expr: &litMatcher{
																										pos:        position{line: 947, col: 13, offset: 37808},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 219, col: 45, offset: 8163},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 219, col: 49, offset: 8167},
																						label: "author",
																						expr: &actionExpr{
																							pos: position{line: 235, col: 16, offset: 8707},
																							run: (*parser).callonParagraph746,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 235, col: 16, offset: 8707},
																								expr: &seqExpr{
																									pos: position{line: 235, col: 17, offset: 8708},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 235, col: 17, offset: 8708},
																											expr: &choiceExpr{
																												pos: position{line: 955, col: 8, offset: 37904},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 951, col: 12, offset: 37864},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 951, col: 21, offset: 37873},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 953, col: 8, offset: 37893},
																														expr: &anyMatcher{
																															line: 953, col: 9, offset: 37894,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 22, offset: 8713},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 23, offset: 8714},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 27, offset: 8718},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 28, offset: 8719},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 235, col: 32, offset: 8723,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 219, col: 70, offset: 8188},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 219, col: 74, offset: 8192},
																						label: "title",
																						expr: &actionExpr{
																							pos: position{line: 239, col: 15, offset: 8777},
																							run: (*parser).callonParagraph762,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 239, col: 15, offset: 8777},
																								expr: &seqExpr{
																									pos: position{line: 239, col: 16, offset: 8778},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 239, col: 16, offset: 8778},
																											expr: &choiceExpr{
																												pos: position{line: 955, col: 8, offset: 37904},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 951, col: 12, offset: 37864},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 951, col: 21, offset: 37873},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 953, col: 8, offset: 37893},
																														expr: &anyMatcher{
																															line: 953, col: 9, offset: 37894,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 239, col: 21, offset: 8783},
																											expr: &litMatcher{
																												pos:        position{line: 239, col: 22, offset: 8784},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 239, col: 26, offset: 8788},
																											expr: &litMatcher{
																												pos:        position{line: 239, col: 27, offset: 8789},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 239, col: 31, offset: 8793,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 219, col: 93, offset: 8211},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 223, col: 5, offset: 8354},
																			run: (*parser).callonParagraph777,
																			expr: &seqExpr{
																				pos: position{line: 223, col: 5, offset: 8354},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 223, col: 5, offset: 8354},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 223, col: 9, offset: 8358},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 231, col: 14, offset: 8648},
																							run: (*parser).callonParagraph781,
																							expr: &litMatcher{
																								pos:        position{line: 231, col: 14, offset: 8648},
																								val:        "verse",
																								ignoreCase: false,
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 223, col: 26, offset: 8375},
																						expr: &choiceExpr{
																							pos: position{line: 947, col: 7, offset: 37802},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 947, col: 7, offset: 37802},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 947, col: 13, offset: 37808},
																									run: (*parser).callonParagraph786,
																									expr: &litMatcher{
																										pos:        position{line: 947, col: 13, offset: 37808},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 223, col: 30, offset: 8379},
																						val:        ",",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 223, col: 34, offset: 8383},
																						label: "author",
																						expr: &actionExpr{
																							pos: position{line: 235, col: 16, offset: 8707},
																							run: (*parser).callonParagraph790,
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 235, col: 16, offset: 8707},
																								expr: &seqExpr{
																									pos: position{line: 235, col: 17, offset: 8708},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 235, col: 17, offset: 8708},
																											expr: &choiceExpr{
																												pos: position{line: 955, col: 8, offset: 37904},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 951, col: 12, offset: 37864},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 951, col: 21, offset: 37873},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 953, col: 8, offset: 37893},
																														expr: &anyMatcher{
																															line: 953, col: 9, offset: 37894,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 22, offset: 8713},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 23, offset: 8714},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 235, col: 27, offset: 8718},
																											expr: &litMatcher{
																												pos:        position{line: 235, col: 28, offset: 8719},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 235, col: 32, offset: 8723,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 223, col: 55, offset: 8404},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 227, col: 5, offset: 8535},
																			run: (*parser).callonParagraph805,
																			expr: &seqExpr{
																				pos: position{line: 227, col: 5, offset: 8535},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 227, col: 5, offset: 8535},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 227, col: 9, offset: 8539},
																						label: "kind",
																						expr: &actionExpr{
																							pos: position{line: 231, col: 14, offset: 8648},
																							run: (*parser).callonParagraph809,
																							expr: &litMatcher{
																								pos:        position{line: 231, col: 14, offset: 8648},
																								val:        "verse",
																								ignoreCase: false,
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 227, col: 26, offset: 8556},
																						expr: &choiceExpr{
																							pos: position{line: 947, col: 7, offset: 37802},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 947, col: 7, offset: 37802},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 947, col: 13, offset: 37808},
																									run: (*parser).callonParagraph814,
																									expr: &litMatcher{
																										pos:        position{line: 947, col: 13, offset: 37808},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 227, col: 30, offset: 8560},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																},
															},
															&zeroOrMoreExpr{
																pos: position{line: 141, col: 65, offset: 5537},
																expr: &choiceExpr{
																	pos: position{line: 947, col: 7, offset: 37802},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 947, col: 7, offset: 37802},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 947, col: 13, offset: 37808},
																			run: (*parser).callonParagraph820,
																			expr: &litMatcher{
																				pos:        position{line: 947, col: 13, offset: 37808},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&choiceExpr{
																pos: position{line: 955, col: 8, offset: 37904},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 951, col: 12, offset: 37864},
																		val:        "\r\n",
																		ignoreCase: false,
																	},
																	&charClassMatcher{
																		pos:        position{line: 951, col: 21, offset: 37873},
																		val:        "[\\r\\n]",
																		chars:      []rune{'\r', '\n'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																	&notExpr{
																		pos: position{line: 953, col: 8, offset: 37893},
																		expr: &anyMatcher{
																			line: 953, col: 9, offset: 37894,
																		},
																	},
																},
															},
														},
													},
												},
												&actionExpr{
													pos: position{line: 136, col: 21, offset: 5188},
													run: (*parser).callonParagraph827,
													expr: &seqExpr{
														pos: position{line: 136, col: 21, offset: 5188},
														exprs: []interface{}{
															&labeledExpr{
																pos:   position{line: 136, col: 21, offset: 5188},
																label: "attr",
																expr: &choiceExpr{
																	pos: position{line: 136, col: 27, offset: 5194},
																	alternatives: []interface{}{
																		&actionExpr{
																			pos: position{line: 145, col: 14, offset: 5645},
																			run: (*parser).callonParagraph831,
																			expr: &labeledExpr{
																				pos:   position{line: 145, col: 14, offset: 5645},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 151, col: 20, offset: 5775},
																					run: (*parser).callonParagraph833,
																					expr: &seqExpr{
																						pos: position{line: 151, col: 20, offset: 5775},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 151, col: 20, offset: 5775},
																								val:        "[[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 151, col: 25, offset: 5780},
																								label: "id",
																								expr: &actionExpr{
																									pos: position{line: 933, col: 7, offset: 37526},
																									run: (*parser).callonParagraph837,
																									expr: &oneOrMoreExpr{
																										pos: position{line: 933, col: 7, offset: 37526},
																										expr: &seqExpr{
																											pos: position{line: 933, col: 8, offset: 37527},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 933, col: 8, offset: 37527},
																													expr: &choiceExpr{
																														pos: position{line: 951, col: 12, offset: 37864},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 951, col: 12, offset: 37864},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 951, col: 21, offset: 37873},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 933, col: 17, offset: 37536},
																													expr: &choiceExpr{
																														pos: position{line: 947, col: 7, offset: 37802},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 947, col: 7, offset: 37802},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 947, col: 13, offset: 37808},
																																run: (*parser).callonParagraph847,
																																expr: &litMatcher{
																																	pos:        position{line: 947, col: 13, offset: 37808},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 933, col: 21, offset: 37540},
																													expr: &litMatcher{
																														pos:        position{line: 933, col: 22, offset: 37541},
																														val:        "[",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 933, col: 26, offset: 37545},
																													expr: &litMatcher{
																														pos:        position{line: 933, col: 27, offset: 37546},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 933, col: 31, offset: 37550},
																													expr: &litMatcher{
																														pos:        position{line: 933, col: 32, offset: 37551},
																														val:        "<<",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 933, col: 37, offset: 37556},
																													expr: &litMatcher{
																														pos:        position{line: 933, col: 38, offset: 37557},
																														val:        ">>",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 933, col: 42, offset: 37561,
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 151, col: 33, offset: 5788},
																								val:        "]]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 147, col: 5, offset: 5691},
																			run: (*parser).callonParagraph859,
																			expr: &seqExpr{
																				pos: position{line: 147, col: 5, offset: 5691},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 147, col: 5, offset: 5691},
																						val:        "[#",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 147, col: 10, offset: 5696},
																						label: "id",
																						expr: &actionExpr{
																							pos: position{line: 933, col: 7, offset: 37526},
																							run: (*parser).callonParagraph863,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 933, col: 7, offset: 37526},
																								expr: &seqExpr{
																									pos: position{line: 933, col: 8, offset: 37527},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 933, col: 8, offset: 37527},
																											expr: &choiceExpr{
																												pos: position{line: 951, col: 12, offset: 37864},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 951, col: 12, offset: 37864},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 951, col: 21, offset: 37873},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 933, col: 17, offset: 37536},
																											expr: &choiceExpr{
																												pos: position{line: 947, col: 7, offset: 37802},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 947, col: 7, offset: 37802},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 947, col: 13, offset: 37808},
																														run: (*parser).callonParagraph873,
																														expr: &litMatcher{
																															pos:        position{line: 947, col: 13, offset: 37808},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 933, col: 21, offset: 37540},
																											expr: &litMatcher{
																												pos:        position{line: 933, col: 22, offset: 37541},
																												val:        "[",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 933, col: 26, offset: 37545},
																											expr: &litMatcher{
																												pos:        position{line: 933, col: 27, offset: 37546},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 933, col: 31, offset: 37550},
																											expr: &litMatcher{
																												pos:        position{line: 933, col: 32, offset: 37551},
																												val:        "<<",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 933, col: 37, offset: 37556},
																											expr: &litMatcher{
																												pos:        position{line: 933, col: 38, offset: 37557},
																												val:        ">>",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 933, col: 42, offset: 37561,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 147, col: 18, offset: 5704},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 157, col: 17, offset: 5997},
																			run: (*parser).callonParagraph885,
																			expr: &seqExpr{
																				pos: position{line: 157, col: 17, offset: 5997},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 157, col: 17, offset: 5997},
																						val:        ".",
																						ignoreCase: false,
																					},
																					&notExpr{
																						pos: position{line: 157, col: 21, offset: 6001},
																						expr: &litMatcher{
																							pos:        position{line: 157, col: 22, offset: 6002},
																							val:        ".",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 157, col: 26, offset: 6006},
																						expr: &choiceExpr{
																							pos: position{line: 947, col: 7, offset: 37802},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 947, col: 7, offset: 37802},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 947, col: 13, offset: 37808},
																									run: (*parser).callonParagraph893,
																									expr: &litMatcher{
																										pos:        position{line: 947, col: 13, offset: 37808},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&labeledExpr{
																						pos:   position{line: 157, col: 30, offset: 6010},
																						label: "title",
																						expr: &actionExpr{
																							pos: position{line: 161, col: 24, offset: 6115},
																							run: (*parser).callonParagraph896,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 161, col: 24, offset: 6115},
																								expr: &seqExpr{
																									pos: position{line: 161, col: 25, offset: 6116},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 161, col: 25, offset: 6116},
																											expr: &choiceExpr{
																												pos: position{line: 951, col: 12, offset: 37864},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 951, col: 12, offset: 37864},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 951, col: 21, offset: 37873},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&anyMatcher{
																											line: 161, col: 34, offset: 6125,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 167, col: 16, offset: 6274},
																			run: (*parser).callonParagraph904,
																			expr: &seqExpr{
																				pos: position{line: 167, col: 16, offset: 6274},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 167, col: 16, offset: 6274},
																						val:        "[.",
																						ignoreCase: false,
																					},
																					&notExpr{
																						pos: position{line: 167, col: 21, offset: 6279},
																						expr: &choiceExpr{
																							pos: position{line: 947, col: 7, offset: 37802},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 947, col: 7, offset: 37802},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 947, col: 13, offset: 37808},
																									run: (*parser).callonParagraph910,
																									expr: &litMatcher{
																										pos:        position{line: 947, col: 13, offset: 37808},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&labeledExpr{
																						pos:   position{line: 167, col: 25, offset: 6283},
																						label: "role",
																						expr: &actionExpr{
																							pos: position{line: 171, col: 23, offset: 6387},
																							run: (*parser).callonParagraph913,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 171, col: 23, offset: 6387},
																								expr: &seqExpr{
																									pos: position{line: 171, col: 24, offset: 6388},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 171, col: 24, offset: 6388},
																											expr: &choiceExpr{
																												pos: position{line: 951, col: 12, offset: 37864},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 951, col: 12, offset: 37864},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 951, col: 21, offset: 37873},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 171, col: 33, offset: 6397},
																											expr: &litMatcher{
																												pos:        position{line: 171, col: 34, offset: 6398},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 171, col: 38, offset: 6402,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 167, col: 51, offset: 6309},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 176, col: 30, offset: 6551},
																			run: (*parser).callonParagraph924,
																			expr: &seqExpr{
																				pos: position{line: 176, col: 30, offset: 6551},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 176, col: 30, offset: 6551},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 176, col: 34, offset: 6555},
																						label: "k",
																						expr: &choiceExpr{
																							pos: position{line: 494, col: 19, offset: 19202},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 494, col: 19, offset: 19202},
																									run: (*parser).callonParagraph929,
																									expr: &litMatcher{
																										pos:        position{line: 494, col: 19, offset: 19202},
																										val:        "TIP",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 496, col: 5, offset: 19240},
																									run: (*parser).callonParagraph931,
																									expr: &litMatcher{
																										pos:        position{line: 496, col: 5, offset: 19240},
																										val:        "NOTE",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 498, col: 5, offset: 19280},
																									run: (*parser).callonParagraph933,
																									expr: &litMatcher{
																										pos:        position{line: 498, col: 5, offset: 19280},
																										val:        "IMPORTANT",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 500, col: 5, offset: 19330},
																									run: (*parser).callonParagraph935,
																									expr: &litMatcher{
																										pos:        position{line: 500, col: 5, offset: 19330},
																										val:        "WARNING",
																										ignoreCase: false,
																									},
																								},
																								&actionExpr{
																									pos: position{line: 502, col: 5, offset: 19376},
																									run: (*parser).callonParagraph937,
																									expr: &litMatcher{
																										pos:        position{line: 502, col: 5, offset: 19376},
																										val:        "CAUTION",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 176, col: 53, offset: 6574},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 199, col: 21, offset: 7299},
																			run: (*parser).callonParagraph940,
																			expr: &litMatcher{
																				pos:        position{line: 199, col: 21, offset: 7299},
																				val:        "[horizontal]",
																				ignoreCase: false,
																			},
																		},
																		&actionExpr{
																			pos: position{line: 181, col: 19, offset: 6735},
																			run: (*parser).callonParagraph942,
																			expr: &seqExpr{
																				pos: position{line: 181, col: 19, offset: 6735},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 181, col: 19, offset: 6735},
																						val:        "[",
																						ignoreCase: false,
																					},
																					&notExpr{
																						pos: position{line: 181, col: 23, offset: 6739},
																						expr: &choiceExpr{
																							pos: position{line: 947, col: 7, offset: 37802},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 947, col: 7, offset: 37802},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 947, col: 13, offset: 37808},
																									run: (*parser).callonParagraph948,
																									expr: &litMatcher{
																										pos:        position{line: 947, col: 13, offset: 37808},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&labeledExpr{
																						pos:   position{line: 181, col: 27, offset: 6743},
																						label: "attributes",
																						expr: &zeroOrMoreExpr{
																							pos: position{line: 181, col: 38, offset: 6754},
																							expr: &choiceExpr{
																								pos: position{line: 185, col: 21, offset: 6867},
																								alternatives: []interface{}{
																									&actionExpr{
																										pos: position{line: 185, col: 21, offset: 6867},
																										run: (*parser).callonParagraph953,
																										expr: &seqExpr{
																											pos: position{line: 185, col: 21, offset: 6867},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 185, col: 21, offset: 6867},
																													label: "key",
																													expr: &actionExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														run: (*parser).callonParagraph956,
																														expr: &seqExpr{
																															pos: position{line: 191, col: 17, offset: 7127},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 17, offset: 7127},
																																	expr: &actionExpr{
																																		pos: position{line: 231, col: 14, offset: 8648},
																																		run: (*parser).callonParagraph959,
																																		expr: &litMatcher{
																																			pos:        position{line: 231, col: 14, offset: 8648},
																																			val:        "verse",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&labeledExpr{
																																	pos:   position{line: 191, col: 28, offset: 7138},
																																	label: "key",
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 191, col: 32, offset: 7142},
																																		expr: &seqExpr{
																																			pos: position{line: 191, col: 33, offset: 7143},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 191, col: 33, offset: 7143},
																																					expr: &litMatcher{
																																						pos:        position{line: 191, col: 34, offset: 7144},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 191, col: 38, offset: 7148},
																																					expr: &litMatcher{
																																						pos:        position{line: 191, col: 39, offset: 7149},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 191, col: 43, offset: 7153},
																																					expr: &litMatcher{
																																						pos:        position{line: 191, col: 44, offset: 7154},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 191, col: 48, offset: 7158,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																												&litMatcher{
																													pos:        position{line: 185, col: 40, offset: 6886},
																													val:        "=",
																													ignoreCase: false,
																												},
																												&labeledExpr{
																													pos:   position{line: 185, col: 44, offset: 6890},
																													label: "value",
																													expr: &actionExpr{
																														pos: position{line: 195, col: 19, offset: 7217},
																														run: (*parser).callonParagraph973,
																														expr: &labeledExpr{
																															pos:   position{line: 195, col: 19, offset: 7217},
																															label: "value",
																															expr: &zeroOrMoreExpr{
																																pos: position{line: 195, col: 25, offset: 7223},
																																expr: &seqExpr{
																																	pos: position{line: 195, col: 26, offset: 7224},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 195, col: 26, offset: 7224},
																																			expr: &litMatcher{
																																				pos:        position{line: 195, col: 27, offset: 7225},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 195, col: 31, offset: 7229},
																																			expr: &litMatcher{
																																				pos:        position{line: 195, col: 32, offset: 7230},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 195, col: 36, offset: 7234},
																																			expr: &litMatcher{
																																				pos:        position{line: 195, col: 37, offset: 7235},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 195, col: 41, offset: 7239,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																												&zeroOrOneExpr{
																													pos: position{line: 185, col: 67, offset: 6913},
																													expr: &litMatcher{
																														pos:        position{line: 185, col: 67, offset: 6913},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 185, col: 72, offset: 6918},
																													expr: &choiceExpr{
																														pos: position{line: 947, col: 7, offset: 37802},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 947, col: 7, offset: 37802},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 947, col: 13, offset: 37808},
																																run: (*parser).callonParagraph989,
																																expr: &litMatcher{
																																	pos:        position{line: 947, col: 13, offset: 37808},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&actionExpr{
																										pos: position{line: 187, col: 5, offset: 7002},
																										run: (*parser).callonParagraph991,
																										expr: &seqExpr{
																											pos: position{line: 187, col: 5, offset: 7002},
																											exprs: []interface{}{
																												&labeledExpr{
																													pos:   position{line: 187, col: 5, offset: 7002},
																													label: "key",
																													expr: &actionExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														run: (*parser).callonParagraph994,
																														expr: &seqExpr{
																															pos: position{line: 191, col: 17, offset: 7127},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 17, offset: 7127},
																																	expr: &actionExpr{
																																		pos: position{line: 231, col: 14, offset: 8648},
																																		run: (*parser).callonParagraph997,
																																		expr: &litMatcher{
																																			pos:        position{line: 231, col: 14, offset: 8648},
																																			val:        "verse",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																																&labeledExpr{
																																	pos:   position{line: 191, col: 28, offset: 7138},
																																	label: "key",
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 191, col: 32, offset: 7142},
																																		expr: &seqExpr{
																																			pos: position{line: 191, col: 33, offset: 7143},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 191, col: 33, offset: 7143},
																																					expr: &litMatcher{
																																						pos:        position{line: 191, col: 34, offset: 7144},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 191, col: 38, offset: 7148},
																																					expr: &litMatcher{
																																						pos:        position{line: 191, col: 39, offset: 7149},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 191, col: 43, offset: 7153},
																																					expr: &litMatcher{
																																						pos:        position{line: 191, col: 44, offset: 7154},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 191, col: 48, offset: 7158,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																												&zeroOrOneExpr{
																													pos: position{line: 187, col: 24, offset: 7021},
																													expr: &litMatcher{
																														pos:        position{line: 187, col: 24, offset: 7021},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&zeroOrMoreExpr{
																													pos: position{line: 187, col: 29, offset: 7026},
																													expr: &choiceExpr{
																														pos: position{line: 947, col: 7, offset: 37802},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 947, col: 7, offset: 37802},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 947, col: 13, offset: 37808},
																																run: (*parser).callonParagraph1014,
																																expr: &litMatcher{
																																	pos:        position{line: 947, col: 13, offset: 37808},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 181, col: 59, offset: 6775},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																},
															},
															&zeroOrMoreExpr{
																pos: position{line: 136, col: 131, offset: 5298},
																expr: &choiceExpr{
																	pos: position{line: 947, col: 7, offset: 37802},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 947, col: 7, offset: 37802},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 947, col: 13, offset: 37808},
																			run: (*parser).callonParagraph1020,
																			expr: &litMatcher{
																				pos:        position{line: 947, col: 13, offset: 37808},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&choiceExpr{
																pos: position{line: 955, col: 8, offset: 37904},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 951, col: 12, offset: 37864},
																		val:        "\r\n",
																		ignoreCase: false,
																	},
																	&charClassMatcher{
																		pos:        position{line: 951, col: 21, offset: 37873},
																		val:        "[\\r\\n]",
																		chars:      []rune{'\r', '\n'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																	&notExpr{
																		pos: position{line: 953, col: 8, offset: 37893},
																		expr: &anyMatcher{
																			line: 953, col: 9, offset: 37894,
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 517, col: 38, offset: 20052},
									expr: &seqExpr{
										pos: position{line: 517, col: 40, offset: 20054},
										exprs: []interface{}{
											&oneOrMoreExpr{
												pos: position{line: 517, col: 40, offset: 20054},
												expr: &litMatcher{
													pos:        position{line: 517, col: 40, offset: 20054},
													val:        "=",
													ignoreCase: false,
												},
											},
											&oneOrMoreExpr{
												pos: position{line: 517, col: 45, offset: 20059},
												expr: &choiceExpr{
													pos: position{line: 947, col: 7, offset: 37802},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 947, col: 7, offset: 37802},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 947, col: 13, offset: 37808},
															run: (*parser).callonParagraph1034,
															expr: &litMatcher{
																pos:        position{line: 947, col: 13, offset: 37808},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 517, col: 49, offset: 20063},
												expr: &choiceExpr{
													pos: position{line: 951, col: 12, offset: 37864},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 951, col: 12, offset: 37864},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 951, col: 21, offset: 37873},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 517, col: 59, offset: 20073},
									label: "lines",
									expr: &oneOrMoreExpr{
										pos: position{line: 517, col: 65, offset: 20079},
										expr: &ruleRefExpr{
											pos:  position{line: 517, col: 66, offset: 20080},
											name: "InlineElements",
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "InlineElements",
			pos:  position{line: 523, col: 1, offset: 20289},
			expr: &choiceExpr{
				pos: position{line: 524, col: 5, offset: 20312},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 524, col: 5, offset: 20312},
						run: (*parser).callonInlineElements2,
						expr: &labeledExpr{
							pos:   position{line: 524, col: 5, offset: 20312},
							label: "comment",
							expr: &actionExpr{
								pos: position{line: 866, col: 22, offset: 35299},
								run: (*parser).callonInlineElements4,
								expr: &seqExpr{
									pos: position{line: 866, col: 22, offset: 35299},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 866, col: 22, offset: 35299},
											expr: &litMatcher{
												pos:        position{line: 856, col: 26, offset: 34903},
												val:        "////",
												ignoreCase: false,
											},
										},
										&litMatcher{
											pos:        position{line: 866, col: 45, offset: 35322},
											val:        "//",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 866, col: 50, offset: 35327},
											label: "content",
											expr: &actionExpr{
												pos: position{line: 870, col: 29, offset: 35455},
												run: (*parser).callonInlineElements10,
												expr: &zeroOrMoreExpr{
													pos: position{line: 870, col: 29, offset: 35455},
													expr: &seqExpr{
														pos: position{line: 870, col: 30, offset: 35456},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 870, col: 30, offset: 35456},
																expr: &choiceExpr{
																	pos: position{line: 955, col: 8, offset: 37904},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 951, col: 12, offset: 37864},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 951, col: 21, offset: 37873},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 953, col: 8, offset: 37893},
																			expr: &anyMatcher{
																				line: 953, col: 9, offset: 37894,
																			},
																		},
																	},
																},
															},
															&anyMatcher{
																line: 870, col: 35, offset: 35461,
															},
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 955, col: 8, offset: 37904},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 951, col: 12, offset: 37864},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 951, col: 21, offset: 37873},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 953, col: 8, offset: 37893},
													expr: &anyMatcher{
														line: 953, col: 9, offset: 37894,
													},
												},
											},
										},
									},
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 526, col: 9, offset: 20413},
						run: (*parser).callonInlineElements25,
						expr: &seqExpr{
							pos: position{line: 526, col: 9, offset: 20413},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 526, col: 9, offset: 20413},
									expr: &notExpr{
										pos: position{line: 953, col: 8, offset: 37893},
										expr: &anyMatcher{
											line: 953, col: 9, offset: 37894,
										},
									},
								},
								&notExpr{
									pos: position{line: 526, col: 14, offset: 20418},
									expr: &choiceExpr{
										pos: position{line: 724, col: 19, offset: 30132},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 899, col: 26, offset: 36632},
												val:        "....",
												ignoreCase: false,
											},
											&litMatcher{
												pos:        position{line: 728, col: 25, offset: 30314},
												val:        "```",
												ignoreCase: false,
											},
											&litMatcher{
												pos:        position{line: 735, col: 26, offset: 30646},
												val:        "----",
												ignoreCase: false,
											},
											&litMatcher{
												pos:        position{line: 755, col: 26, offset: 31444},
												val:        "====",
												ignoreCase: false,
											},
											&litMatcher{
												pos:        position{line: 856, col: 26, offset: 34903},
												val:        "////",
												ignoreCase: false,
											},
											&litMatcher{
												pos:        position{line: 777, col: 24, offset: 32165},
												val:        "____",
												ignoreCase: false,
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 526, col: 30, offset: 20434},
									label: "elements",
									expr: &oneOrMoreExpr{
										pos: position{line: 526, col: 39, offset: 20443},
										expr: &seqExpr{
											pos: position{line: 526, col: 40, offset: 20444},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 526, col: 40, offset: 20444},
													expr: &choiceExpr{
														pos: position{line: 955, col: 8, offset: 37904},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 951, col: 12, offset: 37864},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 951, col: 21, offset: 37873},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 953, col: 8, offset: 37893},
																expr: &anyMatcher{
																	line: 953, col: 9, offset: 37894,
																},
															},
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 526, col: 45, offset: 20449},
													expr: &choiceExpr{
														pos: position{line: 947, col: 7, offset: 37802},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 947, col: 7, offset: 37802},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 947, col: 13, offset: 37808},
																run: (*parser).callonInlineElements50,
																expr: &litMatcher{
																	pos:        position{line: 947, col: 13, offset: 37808},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&notExpr{
													pos: position{line: 526, col: 49, offset: 20453},
													expr: &actionExpr{
														pos: position{line: 151, col: 20, offset: 5775},
														run: (*parser).callonInlineElements53,
														expr: &seqExpr{
															pos: position{line: 151, col: 20, offset: 5775},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 151, col: 20, offset: 5775},
																	val:        "[[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 151, col: 25, offset: 5780},
																	label: "id",
																	expr: &actionExpr{
																		pos: position{line: 933, col: 7, offset: 37526},
																		run: (*parser).callonInlineElements57,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 933, col: 7, offset: 37526},
																			expr: &seqExpr{
																				pos: position{line: 933, col: 8, offset: 37527},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 933, col: 8, offset: 37527},
																						expr: &choiceExpr{
																							pos: position{line: 951, col: 12, offset: 37864},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 951, col: 12, offset: 37864},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 951, col: 21, offset: 37873},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 933, col: 17, offset: 37536},
																						expr: &choiceExpr{
																							pos: position{line: 947, col: 7, offset: 37802},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 947, col: 7, offset: 37802},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 947, col: 13, offset: 37808},
																									run: (*parser).callonInlineElements67,
																									expr: &litMatcher{
																										pos:        position{line: 947, col: 13, offset: 37808},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																					&notExpr{
																						pos: position{line: 933, col: 21, offset: 37540},
																						expr: &litMatcher{
																							pos:        position{line: 933, col: 22, offset: 37541},
																							val:        "[",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 933, col: 26, offset: 37545},
																						expr: &litMatcher{
																							pos:        position{line: 933, col: 27, offset: 37546},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 933, col: 31, offset: 37550},
																						expr: &litMatcher{
																							pos:        position{line: 933, col: 32, offset: 37551},
																							val:        "<<",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 933, col: 37, offset: 37556},
																						expr: &litMatcher{
																							pos:        position{line: 933, col: 38, offset: 37557},
																							val:        ">>",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 933, col: 42, offset: 37561,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 151, col: 33, offset: 5788},
																	val:        "]]",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&ruleRefExpr{
													pos:  position{line: 526, col: 66, offset: 20470},
													name: "InlineElement",
												},
												&zeroOrMoreExpr{
													pos: position{line: 526, col: 80, offset: 20484},
													expr: &choiceExpr{
														pos: position{line: 947, col: 7, offset: 37802},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 947, col: 7, offset: 37802},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 947, col: 13, offset: 37808},
																run: (*parser).callonInlineElements83,
																expr: &litMatcher{
																	pos:        position{line: 947, col: 13, offset: 37808},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 955, col: 8, offset: 37904},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 951, col: 12, offset: 37864},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 951, col: 21, offset: 37873},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
										&notExpr{
											pos: position{line: 953, col: 8, offset: 37893},
											expr: &anyMatcher{
												line: 953, col: 9, offset: 37894,
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "InlineElement",
			pos:  position{line: 530, col: 1, offset: 20608},
			expr: &actionExpr{
				pos: position{line: 530, col: 18, offset: 20625},
				run: (*parser).callonInlineElement1,
				expr: &labeledExpr{
					pos:   position{line: 530, col: 18, offset: 20625},
					label: "element",
					expr: &choiceExpr{
						pos: position{line: 530, col: 27, offset: 20634},
						alternatives: []interface{}{
							&ruleRefExpr{
								pos:  position{line: 530, col: 27, offset: 20634},
								name: "QuotedText",
							},
							&actionExpr{
								pos: position{line: 645, col: 19, offset: 27050},
								run: (*parser).callonInlineElement5,
								expr: &seqExpr{
									pos: position{line: 645, col: 19, offset: 27050},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 645, col: 19, offset: 27050},
											val:        "<<",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 645, col: 24, offset: 27055},
											label: "id",
											expr: &actionExpr{
												pos: position{line: 933, col: 7, offset: 37526},
												run: (*parser).callonInlineElement9,
												expr: &oneOrMoreExpr{
													pos: position{line: 933, col: 7, offset: 37526},
													expr: &seqExpr{
														pos: position{line: 933, col: 8, offset: 37527},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 933, col: 8, offset: 37527},
																expr: &choiceExpr{
																	pos: position{line: 951, col: 12, offset: 37864},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 951, col: 12, offset: 37864},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 951, col: 21, offset: 37873},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 933, col: 17, offset: 37536},
																expr: &choiceExpr{
																	pos: position{line: 947, col: 7, offset: 37802},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 947, col: 7, offset: 37802},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 947, col: 13, offset: 37808},
																			run: (*parser).callonInlineElement19,
																			expr: &litMatcher{
																				pos:        position{line: 947, col: 13, offset: 37808},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 933, col: 21, offset: 37540},
																expr: &litMatcher{
																	pos:        position{line: 933, col: 22, offset: 37541},
																	val:        "[",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 933, col: 26, offset: 37545},
																expr: &litMatcher{
																	pos:        position{line: 933, col: 27, offset: 37546},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 933, col: 31, offset: 37550},
																expr: &litMatcher{
																	pos:        position{line: 933, col: 32, offset: 37551},
																	val:        "<<",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 933, col: 37, offset: 37556},
																expr: &litMatcher{
																	pos:        position{line: 933, col: 38, offset: 37557},
																	val:        ">>",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 933, col: 42, offset: 37561,
															},
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 645, col: 32, offset: 27063},
											val:        ">>",
											ignoreCase: false,
										},
									},
								},
							},
							&ruleRefExpr{
								pos:  position{line: 530, col: 57, offset: 20664},
								name: "Passthrough",
							},
							&actionExpr{
								pos: position{line: 693, col: 16, offset: 28573},
								run: (*parser).callonInlineElement32,
								expr: &seqExpr{
									pos: position{line: 693, col: 16, offset: 28573},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 693, col: 16, offset: 28573},
											val:        "image:",
											ignoreCase: false,
										},
										&notExpr{
											pos: position{line: 693, col: 25, offset: 28582},
											expr: &litMatcher{
												pos:        position{line: 693, col: 26, offset: 28583},
												val:        ":",
												ignoreCase: false,
											},
										},
										&labeledExpr{
											pos:   position{line: 693, col: 30, offset: 28587},
											label: "path",
											expr: &actionExpr{
												pos: position{line: 929, col: 8, offset: 37456},
												run: (*parser).callonInlineElement38,
												expr: &oneOrMoreExpr{
													pos: position{line: 929, col: 8, offset: 37456},
													expr: &seqExpr{
														pos: position{line: 929, col: 9, offset: 37457},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 929, col: 9, offset: 37457},
																expr: &choiceExpr{
																	pos: position{line: 951, col: 12, offset: 37864},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 951, col: 12, offset: 37864},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 951, col: 21, offset: 37873},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 929, col: 18, offset: 37466},
																expr: &choiceExpr{
																	pos: position{line: 947, col: 7, offset: 37802},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 947, col: 7, offset: 37802},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 947, col: 13, offset: 37808},
																			run: (*parser).callonInlineElement48,
																			expr: &litMatcher{
																				pos:        position{line: 947, col: 13, offset: 37808},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 929, col: 22, offset: 37470},
																expr: &litMatcher{
																	pos:        position{line: 929, col: 23, offset: 37471},
																	val:        "[",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 929, col: 27, offset: 37475},
																expr: &litMatcher{
																	pos:        position{line: 929, col: 28, offset: 37476},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 929, col: 32, offset: 37480,
															},
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 693, col: 41, offset: 28598},
											label: "attributes",
											expr: &choiceExpr{
												pos: position{line: 698, col: 20, offset: 28843},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 698, col: 20, offset: 28843},
														run: (*parser).callonInlineElement57,
														expr: &seqExpr{
															pos: position{line: 698, col: 20, offset: 28843},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 698, col: 20, offset: 28843},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 698, col: 24, offset: 28847},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 715, col: 19, offset: 29622},
																		run: (*parser).callonInlineElement61,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 715, col: 19, offset: 29622},
																			expr: &seqExpr{
																				pos: position{line: 715, col: 20, offset: 29623},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 715, col: 20, offset: 29623},
																						expr: &litMatcher{
																							pos:        position{line: 715, col: 21, offset: 29624},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 715, col: 25, offset: 29628},
																						expr: &litMatcher{
																							pos:        position{line: 715, col: 26, offset: 29629},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 715, col: 30, offset: 29633},
																						expr: &litMatcher{
																							pos:        position{line: 715, col: 31, offset: 29634},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 715, col: 35, offset: 29638,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 698, col: 45, offset: 28868},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 699, col: 9, offset: 28880},
																	label: "width",
																	expr: &actionExpr{
																		pos: position{line: 715, col: 19, offset: 29622},
																		run: (*parser).callonInlineElement73,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 715, col: 19, offset: 29622},
																			expr: &seqExpr{
																				pos: position{line: 715, col: 20, offset: 29623},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 715, col: 20, offset: 29623},
																						expr: &litMatcher{
																							pos:        position{line: 715, col: 21, offset: 29624},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 715, col: 25, offset: 29628},
																						expr: &litMatcher{
																							pos:        position{line: 715, col: 26, offset: 29629},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 715, col: 30, offset: 29633},
																						expr: &litMatcher{
																							pos:        position{line: 715, col: 31, offset: 29634},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 715, col: 35, offset: 29638,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 699, col: 33, offset: 28904},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 700, col: 9, offset: 28916},
																	label: "height",
																	expr: &actionExpr{
																		pos: position{line: 715, col: 19, offset: 29622},
																		run: (*parser).callonInlineElement85,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 715, col: 19, offset: 29622},
																			expr: &seqExpr{
																				pos: position{line: 715, col: 20, offset: 29623},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 715, col: 20, offset: 29623},
																						expr: &litMatcher{
																							pos:        position{line: 715, col: 21, offset: 29624},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 715, col: 25, offset: 29628},
																						expr: &litMatcher{
																							pos:        position{line: 715, col: 26, offset: 29629},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 715, col: 30, offset: 29633},
																						expr: &litMatcher{
																							pos:        position{line: 715, col: 31, offset: 29634},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 715, col: 35, offset: 29638,
																					},
																				},
																			},
																		},
																	},
																},
																&zeroOrOneExpr{
																	pos: position{line: 700, col: 33, offset: 28940},
																	expr: &litMatcher{
																		pos:        position{line: 700, col: 33, offset: 28940},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&labeledExpr{
																	pos:   position{line: 701, col: 9, offset: 28953},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 701, col: 20, offset: 28964},
																		expr: &choiceExpr{
																			pos: position{line: 185, col: 21, offset: 6867},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					run: (*parser).callonInlineElement100,
																					expr: &seqExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 185, col: 21, offset: 6867},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonInlineElement103,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonInlineElement106,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 185, col: 40, offset: 6886},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 185, col: 44, offset: 6890},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 195, col: 19, offset: 7217},
																									run: (*parser).callonInlineElement120,
																									expr: &labeledExpr{
																										pos:   position{line: 195, col: 19, offset: 7217},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 195, col: 25, offset: 7223},
																											expr: &seqExpr{
																												pos: position{line: 195, col: 26, offset: 7224},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 195, col: 26, offset: 7224},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 27, offset: 7225},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 31, offset: 7229},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 32, offset: 7230},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 36, offset: 7234},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 37, offset: 7235},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 195, col: 41, offset: 7239,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 185, col: 67, offset: 6913},
																								expr: &litMatcher{
																									pos:        position{line: 185, col: 67, offset: 6913},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 185, col: 72, offset: 6918},
																								expr: &choiceExpr{
																									pos: position{line: 947, col: 7, offset: 37802},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 947, col: 7, offset: 37802},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 947, col: 13, offset: 37808},
																											run: (*parser).callonInlineElement136,
																											expr: &litMatcher{
																												pos:        position{line: 947, col: 13, offset: 37808},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 187, col: 5, offset: 7002},
																					run: (*parser).callonInlineElement138,
																					expr: &seqExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 187, col: 5, offset: 7002},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonInlineElement141,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonInlineElement144,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 187, col: 24, offset: 7021},
																								expr: &litMatcher{
																									pos:        position{line: 187, col: 24, offset: 7021},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 187, col: 29, offset: 7026},
																								expr: &choiceExpr{
																									pos: position{line: 947, col: 7, offset: 37802},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 947, col: 7, offset: 37802},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 947, col: 13, offset: 37808},
																											run: (*parser).callonInlineElement161,
																											expr: &litMatcher{
																												pos:        position{line: 947, col: 13, offset: 37808},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 701, col: 40, offset: 28984},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 703, col: 9, offset: 29090},
														run: (*parser).callonInlineElement164,
														expr: &seqExpr{
															pos: position{line: 703, col: 9, offset: 29090},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 703, col: 9, offset: 29090},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 703, col: 13, offset: 29094},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 715, col: 19, offset: 29622},
																		run: (*parser).callonInlineElement168,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 715, col: 19, offset: 29622},
																			expr: &seqExpr{
																				pos: position{line: 715, col: 20, offset: 29623},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 715, col: 20, offset: 29623},
																						expr: &litMatcher{
																							pos:        position{line: 715, col: 21, offset: 29624},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 715, col: 25, offset: 29628},
																						expr: &litMatcher{
																							pos:        position{line: 715, col: 26, offset: 29629},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 715, col: 30, offset: 29633},
																						expr: &litMatcher{
																							pos:        position{line: 715, col: 31, offset: 29634},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 715, col: 35, offset: 29638,
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 703, col: 34, offset: 29115},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 704, col: 9, offset: 29127},
																	label: "width",
																	expr: &actionExpr{
																		pos: position{line: 715, col: 19, offset: 29622},
																		run: (*parser).callonInlineElement180,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 715, col: 19, offset: 29622},
																			expr: &seqExpr{
																				pos: position{line: 715, col: 20, offset: 29623},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 715, col: 20, offset: 29623},
																						expr: &litMatcher{
																							pos:        position{line: 715, col: 21, offset: 29624},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 715, col: 25, offset: 29628},
																						expr: &litMatcher{
																							pos:        position{line: 715, col: 26, offset: 29629},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 715, col: 30, offset: 29633},
																						expr: &litMatcher{
																							pos:        position{line: 715, col: 31, offset: 29634},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 715, col: 35, offset: 29638,
																					},
																				},
																			},
																		},
																	},
																},
																&zeroOrOneExpr{
																	pos: position{line: 704, col: 32, offset: 29150},
																	expr: &litMatcher{
																		pos:        position{line: 704, col: 32, offset: 29150},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&labeledExpr{
																	pos:   position{line: 705, col: 9, offset: 29163},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 705, col: 20, offset: 29174},
																		expr: &choiceExpr{
																			pos: position{line: 185, col: 21, offset: 6867},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					run: (*parser).callonInlineElement195,
																					expr: &seqExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 185, col: 21, offset: 6867},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonInlineElement198,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonInlineElement201,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 185, col: 40, offset: 6886},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 185, col: 44, offset: 6890},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 195, col: 19, offset: 7217},
																									run: (*parser).callonInlineElement215,
																									expr: &labeledExpr{
																										pos:   position{line: 195, col: 19, offset: 7217},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 195, col: 25, offset: 7223},
																											expr: &seqExpr{
																												pos: position{line: 195, col: 26, offset: 7224},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 195, col: 26, offset: 7224},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 27, offset: 7225},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 31, offset: 7229},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 32, offset: 7230},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 36, offset: 7234},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 37, offset: 7235},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 195, col: 41, offset: 7239,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 185, col: 67, offset: 6913},
																								expr: &litMatcher{
																									pos:        position{line: 185, col: 67, offset: 6913},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 185, col: 72, offset: 6918},
																								expr: &choiceExpr{
																									pos: position{line: 947, col: 7, offset: 37802},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 947, col: 7, offset: 37802},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 947, col: 13, offset: 37808},
																											run: (*parser).callonInlineElement231,
																											expr: &litMatcher{
																												pos:        position{line: 947, col: 13, offset: 37808},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 187, col: 5, offset: 7002},
																					run: (*parser).callonInlineElement233,
																					expr: &seqExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 187, col: 5, offset: 7002},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonInlineElement236,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonInlineElement239,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 187, col: 24, offset: 7021},
																								expr: &litMatcher{
																									pos:        position{line: 187, col: 24, offset: 7021},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 187, col: 29, offset: 7026},
																								expr: &choiceExpr{
																									pos: position{line: 947, col: 7, offset: 37802},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 947, col: 7, offset: 37802},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 947, col: 13, offset: 37808},
																											run: (*parser).callonInlineElement256,
																											expr: &litMatcher{
																												pos:        position{line: 947, col: 13, offset: 37808},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 705, col: 40, offset: 29194},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 707, col: 9, offset: 29297},
														run: (*parser).callonInlineElement259,
														expr: &seqExpr{
															pos: position{line: 707, col: 9, offset: 29297},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 707, col: 9, offset: 29297},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 707, col: 13, offset: 29301},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 715, col: 19, offset: 29622},
																		run: (*parser).callonInlineElement263,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 715, col: 19, offset: 29622},
																			expr: &seqExpr{
																				pos: position{line: 715, col: 20, offset: 29623},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 715, col: 20, offset: 29623},
																						expr: &litMatcher{
																							pos:        position{line: 715, col: 21, offset: 29624},
																							val:        ",",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 715, col: 25, offset: 29628},
																						expr: &litMatcher{
																							pos:        position{line: 715, col: 26, offset: 29629},
																							val:        "=",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 715, col: 30, offset: 29633},
																						expr: &litMatcher{
																							pos:        position{line: 715, col: 31, offset: 29634},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																					&anyMatcher{
																						line: 715, col: 35, offset: 29638,
																					},
																				},
																			},
																		},
																	},
																},
																&zeroOrOneExpr{
																	pos: position{line: 707, col: 34, offset: 29322},
																	expr: &litMatcher{
																		pos:        position{line: 707, col: 34, offset: 29322},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&labeledExpr{
																	pos:   position{line: 708, col: 9, offset: 29335},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 708, col: 20, offset: 29346},
																		expr: &choiceExpr{
																			pos: position{line: 185, col: 21, offset: 6867},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					run: (*parser).callonInlineElement278,
																					expr: &seqExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 185, col: 21, offset: 6867},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonInlineElement281,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonInlineElement284,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 185, col: 40, offset: 6886},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 185, col: 44, offset: 6890},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 195, col: 19, offset: 7217},
																									run: (*parser).callonInlineElement298,
																									expr: &labeledExpr{
																										pos:   position{line: 195, col: 19, offset: 7217},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 195, col: 25, offset: 7223},
																											expr: &seqExpr{
																												pos: position{line: 195, col: 26, offset: 7224},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 195, col: 26, offset: 7224},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 27, offset: 7225},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 31, offset: 7229},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 32, offset: 7230},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 36, offset: 7234},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 37, offset: 7235},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 195, col: 41, offset: 7239,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 185, col: 67, offset: 6913},
																								expr: &litMatcher{
																									pos:        position{line: 185, col: 67, offset: 6913},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 185, col: 72, offset: 6918},
																								expr: &choiceExpr{
																									pos: position{line: 947, col: 7, offset: 37802},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 947, col: 7, offset: 37802},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 947, col: 13, offset: 37808},
																											run: (*parser).callonInlineElement314,
																											expr: &litMatcher{
																												pos:        position{line: 947, col: 13, offset: 37808},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 187, col: 5, offset: 7002},
																					run: (*parser).callonInlineElement316,
																					expr: &seqExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 187, col: 5, offset: 7002},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonInlineElement319,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonInlineElement322,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 187, col: 24, offset: 7021},
																								expr: &litMatcher{
																									pos:        position{line: 187, col: 24, offset: 7021},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 187, col: 29, offset: 7026},
																								expr: &choiceExpr{
																									pos: position{line: 947, col: 7, offset: 37802},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 947, col: 7, offset: 37802},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 947, col: 13, offset: 37808},
																											run: (*parser).callonInlineElement339,
																											expr: &litMatcher{
																												pos:        position{line: 947, col: 13, offset: 37808},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 708, col: 40, offset: 29366},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 710, col: 9, offset: 29467},
														run: (*parser).callonInlineElement342,
														expr: &seqExpr{
															pos: position{line: 710, col: 9, offset: 29467},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 710, col: 9, offset: 29467},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 710, col: 13, offset: 29471},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 710, col: 24, offset: 29482},
																		expr: &choiceExpr{
																			pos: position{line: 185, col: 21, offset: 6867},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 185, col: 21, offset: 6867},
																					run: (*parser).callonInlineElement348,
																					expr: &seqExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 185, col: 21, offset: 6867},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonInlineElement351,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonInlineElement354,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 185, col: 40, offset: 6886},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 185, col: 44, offset: 6890},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 195, col: 19, offset: 7217},
																									run: (*parser).callonInlineElement368,
																									expr: &labeledExpr{
																										pos:   position{line: 195, col: 19, offset: 7217},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 195, col: 25, offset: 7223},
																											expr: &seqExpr{
																												pos: position{line: 195, col: 26, offset: 7224},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 195, col: 26, offset: 7224},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 27, offset: 7225},
																															val:        "=",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 31, offset: 7229},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 32, offset: 7230},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 195, col: 36, offset: 7234},
																														expr: &litMatcher{
																															pos:        position{line: 195, col: 37, offset: 7235},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 195, col: 41, offset: 7239,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 185, col: 67, offset: 6913},
																								expr: &litMatcher{
																									pos:        position{line: 185, col: 67, offset: 6913},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 185, col: 72, offset: 6918},
																								expr: &choiceExpr{
																									pos: position{line: 947, col: 7, offset: 37802},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 947, col: 7, offset: 37802},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 947, col: 13, offset: 37808},
																											run: (*parser).callonInlineElement384,
																											expr: &litMatcher{
																												pos:        position{line: 947, col: 13, offset: 37808},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 187, col: 5, offset: 7002},
																					run: (*parser).callonInlineElement386,
																					expr: &seqExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 187, col: 5, offset: 7002},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 191, col: 17, offset: 7127},
																									run: (*parser).callonInlineElement389,
																									expr: &seqExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												expr: &actionExpr{
																													pos: position{line: 231, col: 14, offset: 8648},
																													run: (*parser).callonInlineElement392,
																													expr: &litMatcher{
																														pos:        position{line: 231, col: 14, offset: 8648},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 191, col: 28, offset: 7138},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 191, col: 32, offset: 7142},
																													expr: &seqExpr{
																														pos: position{line: 191, col: 33, offset: 7143},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 33, offset: 7143},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 34, offset: 7144},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 38, offset: 7148},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 39, offset: 7149},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 191, col: 43, offset: 7153},
																																expr: &litMatcher{
																																	pos:        position{line: 191, col: 44, offset: 7154},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 191, col: 48, offset: 7158,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 187, col: 24, offset: 7021},
																								expr: &litMatcher{
																									pos:        position{line: 187, col: 24, offset: 7021},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 187, col: 29, offset: 7026},
																								expr: &choiceExpr{
																									pos: position{line: 947, col: 7, offset: 37802},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 947, col: 7, offset: 37802},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 947, col: 13, offset: 37808},
																											run: (*parser).callonInlineElement409,
																											expr: &litMatcher{
																												pos:        position{line: 947, col: 13, offset: 37808},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 710, col: 44, offset: 29502},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 652, col: 9, offset: 27230},
								run: (*parser).callonInlineElement412,
								expr: &labeledExpr{
									pos:   position{line: 652, col: 9, offset: 27230},
									label: "link",
									expr: &choiceExpr{
										pos: position{line: 652, col: 15, offset: 27236},
										alternatives: []interface{}{
											&actionExpr{
												pos: position{line: 667, col: 17, offset: 27664},
												run: (*parser).callonInlineElement415,
												expr: &seqExpr{
													pos: position{line: 667, col: 17, offset: 27664},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 667, col: 17, offset: 27664},
															val:        "link:",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 667, col: 25, offset: 27672},
															label: "url",
															expr: &actionExpr{
																pos: position{line: 671, col: 20, offset: 27823},
																run: (*parser).callonInlineElement419,
																expr: &seqExpr{
																	pos: position{line: 671, col: 20, offset: 27823},
																	exprs: []interface{}{
																		&zeroOrOneExpr{
																			pos: position{line: 671, col: 20, offset: 27823},
																			expr: &choiceExpr{
																				pos: position{line: 941, col: 15, offset: 37687},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 941, col: 15, offset: 37687},
																						val:        "http://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 941, col: 27, offset: 37699},
																						val:        "https://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 941, col: 40, offset: 37712},
																						val:        "ftp://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 941, col: 51, offset: 37723},
																						val:        "irc://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 941, col: 62, offset: 37734},
																						val:        "mailto:",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 929, col: 8, offset: 37456},
																			run: (*parser).callonInlineElement428,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 929, col: 8, offset: 37456},
																				expr: &seqExpr{
																					pos: position{line: 929, col: 9, offset: 37457},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 929, col: 9, offset: 37457},
																							expr: &choiceExpr{
																								pos: position{line: 951, col: 12, offset: 37864},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 929, col: 18, offset: 37466},
																							expr: &choiceExpr{
																								pos: position{line: 947, col: 7, offset: 37802},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 947, col: 7, offset: 37802},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 947, col: 13, offset: 37808},
																										run: (*parser).callonInlineElement438,
																										expr: &litMatcher{
																											pos:        position{line: 947, col: 13, offset: 37808},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 929, col: 22, offset: 37470},
																							expr: &litMatcher{
																								pos:        position{line: 929, col: 23, offset: 37471},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 929, col: 27, offset: 37475},
																							expr: &litMatcher{
																								pos:        position{line: 929, col: 28, offset: 37476},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 929, col: 32, offset: 37480,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&labeledExpr{
															pos:   position{line: 667, col: 47, offset: 27694},
															label: "attributes",
															expr: &choiceExpr{
																pos: position{line: 675, col: 19, offset: 27893},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 675, col: 19, offset: 27893},
																		run: (*parser).callonInlineElement447,
																		expr: &seqExpr{
																			pos: position{line: 675, col: 19, offset: 27893},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 675, col: 19, offset: 27893},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 675, col: 23, offset: 27897},
																					label: "text",
																					expr: &actionExpr{
																						pos: position{line: 682, col: 22, offset: 28173},
																						run: (*parser).callonInlineElement451,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 682, col: 22, offset: 28173},
																							expr: &seqExpr{
																								pos: position{line: 682, col: 23, offset: 28174},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 682, col: 23, offset: 28174},
																										expr: &litMatcher{
																											pos:        position{line: 682, col: 24, offset: 28175},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 682, col: 28, offset: 28179},
																										expr: &litMatcher{
																											pos:        position{line: 682, col: 29, offset: 28180},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 682, col: 33, offset: 28184,
																									},
																								},
																							},
																						},
																					},
																				},
																				&labeledExpr{
																					pos:   position{line: 676, col: 9, offset: 27930},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 676, col: 20, offset: 27941},
																						expr: &choiceExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 185, col: 21, offset: 6867},
																									run: (*parser).callonInlineElement462,
																									expr: &seqExpr{
																										pos: position{line: 185, col: 21, offset: 6867},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 185, col: 21, offset: 6867},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonInlineElement465,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8648},
																																	run: (*parser).callonInlineElement468,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8648},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 28, offset: 7138},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 32, offset: 7142},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 33, offset: 7143},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 34, offset: 7144},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 38, offset: 7148},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 39, offset: 7149},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 43, offset: 7153},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 44, offset: 7154},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 48, offset: 7158,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 185, col: 40, offset: 6886},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 185, col: 44, offset: 6890},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 195, col: 19, offset: 7217},
																													run: (*parser).callonInlineElement482,
																													expr: &labeledExpr{
																														pos:   position{line: 195, col: 19, offset: 7217},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 195, col: 25, offset: 7223},
																															expr: &seqExpr{
																																pos: position{line: 195, col: 26, offset: 7224},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 195, col: 26, offset: 7224},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 27, offset: 7225},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 31, offset: 7229},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 32, offset: 7230},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 36, offset: 7234},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 37, offset: 7235},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 195, col: 41, offset: 7239,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 185, col: 67, offset: 6913},
																												expr: &litMatcher{
																													pos:        position{line: 185, col: 67, offset: 6913},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 185, col: 72, offset: 6918},
																												expr: &choiceExpr{
																													pos: position{line: 947, col: 7, offset: 37802},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 947, col: 7, offset: 37802},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 947, col: 13, offset: 37808},
																															run: (*parser).callonInlineElement498,
																															expr: &litMatcher{
																																pos:        position{line: 947, col: 13, offset: 37808},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 187, col: 5, offset: 7002},
																									run: (*parser).callonInlineElement500,
																									expr: &seqExpr{
																										pos: position{line: 187, col: 5, offset: 7002},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 187, col: 5, offset: 7002},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonInlineElement503,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8648},
																																	run: (*parser).callonInlineElement506,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8648},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 28, offset: 7138},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 32, offset: 7142},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 33, offset: 7143},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 34, offset: 7144},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 38, offset: 7148},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 39, offset: 7149},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 43, offset: 7153},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 44, offset: 7154},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 48, offset: 7158,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 187, col: 24, offset: 7021},
																												expr: &litMatcher{
																													pos:        position{line: 187, col: 24, offset: 7021},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 187, col: 29, offset: 7026},
																												expr: &choiceExpr{
																													pos: position{line: 947, col: 7, offset: 37802},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 947, col: 7, offset: 37802},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 947, col: 13, offset: 37808},
																															run: (*parser).callonInlineElement523,
																															expr: &litMatcher{
																																pos:        position{line: 947, col: 13, offset: 37808},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 676, col: 40, offset: 27961},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 678, col: 5, offset: 28040},
																		run: (*parser).callonInlineElement526,
																		expr: &seqExpr{
																			pos: position{line: 678, col: 5, offset: 28040},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 678, col: 5, offset: 28040},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 678, col: 9, offset: 28044},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 678, col: 20, offset: 28055},
																						expr: &choiceExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 185, col: 21, offset: 6867},
																									run: (*parser).callonInlineElement532,
																									expr: &seqExpr{
																										pos: position{line: 185, col: 21, offset: 6867},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 185, col: 21, offset: 6867},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonInlineElement535,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8648},
																																	run: (*parser).callonInlineElement538,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8648},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 28, offset: 7138},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 32, offset: 7142},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 33, offset: 7143},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 34, offset: 7144},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 38, offset: 7148},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 39, offset: 7149},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 43, offset: 7153},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 44, offset: 7154},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 48, offset: 7158,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 185, col: 40, offset: 6886},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 185, col: 44, offset: 6890},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 195, col: 19, offset: 7217},
																													run: (*parser).callonInlineElement552,
																													expr: &labeledExpr{
																														pos:   position{line: 195, col: 19, offset: 7217},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 195, col: 25, offset: 7223},
																															expr: &seqExpr{
																																pos: position{line: 195, col: 26, offset: 7224},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 195, col: 26, offset: 7224},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 27, offset: 7225},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 31, offset: 7229},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 32, offset: 7230},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 36, offset: 7234},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 37, offset: 7235},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 195, col: 41, offset: 7239,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 185, col: 67, offset: 6913},
																												expr: &litMatcher{
																													pos:        position{line: 185, col: 67, offset: 6913},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 185, col: 72, offset: 6918},
																												expr: &choiceExpr{
																													pos: position{line: 947, col: 7, offset: 37802},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 947, col: 7, offset: 37802},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 947, col: 13, offset: 37808},
																															run: (*parser).callonInlineElement568,
																															expr: &litMatcher{
																																pos:        position{line: 947, col: 13, offset: 37808},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 187, col: 5, offset: 7002},
																									run: (*parser).callonInlineElement570,
																									expr: &seqExpr{
																										pos: position{line: 187, col: 5, offset: 7002},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 187, col: 5, offset: 7002},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonInlineElement573,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8648},
																																	run: (*parser).callonInlineElement576,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8648},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 28, offset: 7138},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 32, offset: 7142},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 33, offset: 7143},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 34, offset: 7144},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 38, offset: 7148},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 39, offset: 7149},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 43, offset: 7153},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 44, offset: 7154},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 48, offset: 7158,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 187, col: 24, offset: 7021},
																												expr: &litMatcher{
																													pos:        position{line: 187, col: 24, offset: 7021},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 187, col: 29, offset: 7026},
																												expr: &choiceExpr{
																													pos: position{line: 947, col: 7, offset: 37802},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 947, col: 7, offset: 37802},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 947, col: 13, offset: 37808},
																															run: (*parser).callonInlineElement593,
																															expr: &litMatcher{
																																pos:        position{line: 947, col: 13, offset: 37808},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 678, col: 40, offset: 28075},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&actionExpr{
												pos: position{line: 656, col: 17, offset: 27307},
												run: (*parser).callonInlineElement596,
												expr: &seqExpr{
													pos: position{line: 656, col: 17, offset: 27307},
													exprs: []interface{}{
														&labeledExpr{
															pos:   position{line: 656, col: 17, offset: 27307},
															label: "url",
															expr: &actionExpr{
																pos: position{line: 662, col: 20, offset: 27530},
																run: (*parser).callonInlineElement599,
																expr: &seqExpr{
																	pos: position{line: 662, col: 20, offset: 27530},
																	exprs: []interface{}{
																		&choiceExpr{
																			pos: position{line: 941, col: 15, offset: 37687},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 941, col: 15, offset: 37687},
																					val:        "http://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 941, col: 27, offset: 37699},
																					val:        "https://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 941, col: 40, offset: 37712},
																					val:        "ftp://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 941, col: 51, offset: 37723},
																					val:        "irc://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 941, col: 62, offset: 37734},
																					val:        "mailto:",
																					ignoreCase: false,
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 929, col: 8, offset: 37456},
																			run: (*parser).callonInlineElement607,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 929, col: 8, offset: 37456},
																				expr: &seqExpr{
																					pos: position{line: 929, col: 9, offset: 37457},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 929, col: 9, offset: 37457},
																							expr: &choiceExpr{
																								pos: position{line: 951, col: 12, offset: 37864},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 929, col: 18, offset: 37466},
																							expr: &choiceExpr{
																								pos: position{line: 947, col: 7, offset: 37802},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 947, col: 7, offset: 37802},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 947, col: 13, offset: 37808},
																										run: (*parser).callonInlineElement617,
																										expr: &litMatcher{
																											pos:        position{line: 947, col: 13, offset: 37808},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 929, col: 22, offset: 37470},
																							expr: &litMatcher{
																								pos:        position{line: 929, col: 23, offset: 37471},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 929, col: 27, offset: 37475},
																							expr: &litMatcher{
																								pos:        position{line: 929, col: 28, offset: 37476},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 929, col: 32, offset: 37480,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&labeledExpr{
															pos:   position{line: 656, col: 39, offset: 27329},
															label: "attributes",
															expr: &choiceExpr{
																pos: position{line: 675, col: 19, offset: 27893},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 675, col: 19, offset: 27893},
																		run: (*parser).callonInlineElement626,
																		expr: &seqExpr{
																			pos: position{line: 675, col: 19, offset: 27893},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 675, col: 19, offset: 27893},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 675, col: 23, offset: 27897},
																					label: "text",
																					expr: &actionExpr{
																						pos: position{line: 682, col: 22, offset: 28173},
																						run: (*parser).callonInlineElement630,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 682, col: 22, offset: 28173},
																							expr: &seqExpr{
																								pos: position{line: 682, col: 23, offset: 28174},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 682, col: 23, offset: 28174},
																										expr: &litMatcher{
																											pos:        position{line: 682, col: 24, offset: 28175},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 682, col: 28, offset: 28179},
																										expr: &litMatcher{
																											pos:        position{line: 682, col: 29, offset: 28180},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 682, col: 33, offset: 28184,
																									},
																								},
																							},
																						},
																					},
																				},
																				&labeledExpr{
																					pos:   position{line: 676, col: 9, offset: 27930},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 676, col: 20, offset: 27941},
																						expr: &choiceExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 185, col: 21, offset: 6867},
																									run: (*parser).callonInlineElement641,
																									expr: &seqExpr{
																										pos: position{line: 185, col: 21, offset: 6867},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 185, col: 21, offset: 6867},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonInlineElement644,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8648},
																																	run: (*parser).callonInlineElement647,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8648},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 28, offset: 7138},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 32, offset: 7142},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 33, offset: 7143},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 34, offset: 7144},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 38, offset: 7148},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 39, offset: 7149},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 43, offset: 7153},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 44, offset: 7154},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 48, offset: 7158,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 185, col: 40, offset: 6886},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 185, col: 44, offset: 6890},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 195, col: 19, offset: 7217},
																													run: (*parser).callonInlineElement661,
																													expr: &labeledExpr{
																														pos:   position{line: 195, col: 19, offset: 7217},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 195, col: 25, offset: 7223},
																															expr: &seqExpr{
																																pos: position{line: 195, col: 26, offset: 7224},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 195, col: 26, offset: 7224},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 27, offset: 7225},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 31, offset: 7229},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 32, offset: 7230},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 36, offset: 7234},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 37, offset: 7235},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 195, col: 41, offset: 7239,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 185, col: 67, offset: 6913},
																												expr: &litMatcher{
																													pos:        position{line: 185, col: 67, offset: 6913},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 185, col: 72, offset: 6918},
																												expr: &choiceExpr{
																													pos: position{line: 947, col: 7, offset: 37802},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 947, col: 7, offset: 37802},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 947, col: 13, offset: 37808},
																															run: (*parser).callonInlineElement677,
																															expr: &litMatcher{
																																pos:        position{line: 947, col: 13, offset: 37808},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 187, col: 5, offset: 7002},
																									run: (*parser).callonInlineElement679,
																									expr: &seqExpr{
																										pos: position{line: 187, col: 5, offset: 7002},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 187, col: 5, offset: 7002},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonInlineElement682,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8648},
																																	run: (*parser).callonInlineElement685,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8648},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 28, offset: 7138},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 32, offset: 7142},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 33, offset: 7143},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 34, offset: 7144},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 38, offset: 7148},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 39, offset: 7149},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 43, offset: 7153},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 44, offset: 7154},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 48, offset: 7158,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 187, col: 24, offset: 7021},
																												expr: &litMatcher{
																													pos:        position{line: 187, col: 24, offset: 7021},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 187, col: 29, offset: 7026},
																												expr: &choiceExpr{
																													pos: position{line: 947, col: 7, offset: 37802},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 947, col: 7, offset: 37802},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 947, col: 13, offset: 37808},
																															run: (*parser).callonInlineElement702,
																															expr: &litMatcher{
																																pos:        position{line: 947, col: 13, offset: 37808},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 676, col: 40, offset: 27961},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 678, col: 5, offset: 28040},
																		run: (*parser).callonInlineElement705,
																		expr: &seqExpr{
																			pos: position{line: 678, col: 5, offset: 28040},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 678, col: 5, offset: 28040},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 678, col: 9, offset: 28044},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 678, col: 20, offset: 28055},
																						expr: &choiceExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 185, col: 21, offset: 6867},
																									run: (*parser).callonInlineElement711,
																									expr: &seqExpr{
																										pos: position{line: 185, col: 21, offset: 6867},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 185, col: 21, offset: 6867},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonInlineElement714,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8648},
																																	run: (*parser).callonInlineElement717,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8648},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 28, offset: 7138},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 32, offset: 7142},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 33, offset: 7143},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 34, offset: 7144},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 38, offset: 7148},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 39, offset: 7149},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 43, offset: 7153},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 44, offset: 7154},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 48, offset: 7158,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 185, col: 40, offset: 6886},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 185, col: 44, offset: 6890},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 195, col: 19, offset: 7217},
																													run: (*parser).callonInlineElement731,
																													expr: &labeledExpr{
																														pos:   position{line: 195, col: 19, offset: 7217},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 195, col: 25, offset: 7223},
																															expr: &seqExpr{
																																pos: position{line: 195, col: 26, offset: 7224},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 195, col: 26, offset: 7224},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 27, offset: 7225},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 31, offset: 7229},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 32, offset: 7230},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 195, col: 36, offset: 7234},
																																		expr: &litMatcher{
																																			pos:        position{line: 195, col: 37, offset: 7235},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 195, col: 41, offset: 7239,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 185, col: 67, offset: 6913},
																												expr: &litMatcher{
																													pos:        position{line: 185, col: 67, offset: 6913},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 185, col: 72, offset: 6918},
																												expr: &choiceExpr{
																													pos: position{line: 947, col: 7, offset: 37802},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 947, col: 7, offset: 37802},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 947, col: 13, offset: 37808},
																															run: (*parser).callonInlineElement747,
																															expr: &litMatcher{
																																pos:        position{line: 947, col: 13, offset: 37808},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 187, col: 5, offset: 7002},
																									run: (*parser).callonInlineElement749,
																									expr: &seqExpr{
																										pos: position{line: 187, col: 5, offset: 7002},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 187, col: 5, offset: 7002},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													run: (*parser).callonInlineElement752,
																													expr: &seqExpr{
																														pos: position{line: 191, col: 17, offset: 7127},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 191, col: 17, offset: 7127},
																																expr: &actionExpr{
																																	pos: position{line: 231, col: 14, offset: 8648},
																																	run: (*parser).callonInlineElement755,
																																	expr: &litMatcher{
																																		pos:        position{line: 231, col: 14, offset: 8648},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 191, col: 28, offset: 7138},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 191, col: 32, offset: 7142},
																																	expr: &seqExpr{
																																		pos: position{line: 191, col: 33, offset: 7143},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 191, col: 33, offset: 7143},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 34, offset: 7144},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 38, offset: 7148},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 39, offset: 7149},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 191, col: 43, offset: 7153},
																																				expr: &litMatcher{
																																					pos:        position{line: 191, col: 44, offset: 7154},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 191, col: 48, offset: 7158,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 187, col: 24, offset: 7021},
																												expr: &litMatcher{
																													pos:        position{line: 187, col: 24, offset: 7021},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 187, col: 29, offset: 7026},
																												expr: &choiceExpr{
																													pos: position{line: 947, col: 7, offset: 37802},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 947, col: 7, offset: 37802},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 947, col: 13, offset: 37808},
																															run: (*parser).callonInlineElement772,
																															expr: &litMatcher{
																																pos:        position{line: 947, col: 13, offset: 37808},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 678, col: 40, offset: 28075},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&actionExpr{
												pos: position{line: 658, col: 5, offset: 27440},
												run: (*parser).callonInlineElement775,
												expr: &labeledExpr{
													pos:   position{line: 658, col: 5, offset: 27440},
													label: "url",
													expr: &actionExpr{
														pos: position{line: 662, col: 20, offset: 27530},
														run: (*parser).callonInlineElement777,
														expr: &seqExpr{
															pos: position{line: 662, col: 20, offset: 27530},
															exprs: []interface{}{
																&choiceExpr{
																	pos: position{line: 941, col: 15, offset: 37687},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 941, col: 15, offset: 37687},
																			val:        "http://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 941, col: 27, offset: 37699},
																			val:        "https://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 941, col: 40, offset: 37712},
																			val:        "ftp://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 941, col: 51, offset: 37723},
																			val:        "irc://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 941, col: 62, offset: 37734},
																			val:        "mailto:",
																			ignoreCase: false,
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 929, col: 8, offset: 37456},
																	run: (*parser).callonInlineElement785,
																	expr: &oneOrMoreExpr{
																		pos: position{line: 929, col: 8, offset: 37456},
																		expr: &seqExpr{
																			pos: position{line: 929, col: 9, offset: 37457},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 929, col: 9, offset: 37457},
																					expr: &choiceExpr{
																						pos: position{line: 951, col: 12, offset: 37864},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 951, col: 12, offset: 37864},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 951, col: 21, offset: 37873},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 929, col: 18, offset: 37466},
																					expr: &choiceExpr{
																						pos: position{line: 947, col: 7, offset: 37802},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 947, col: 7, offset: 37802},
																								val:        " ",
																								ignoreCase: false,
																							},
																							&actionExpr{
																								pos: position{line: 947, col: 13, offset: 37808},
																								run: (*parser).callonInlineElement795,
																								expr: &litMatcher{
																									pos:        position{line: 947, col: 13, offset: 37808},
																									val:        "\t",
																									ignoreCase: false,
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 929, col: 22, offset: 37470},
																					expr: &litMatcher{
																						pos:        position{line: 929, col: 23, offset: 37471},
																						val:        "[",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 929, col: 27, offset: 37475},
																					expr: &litMatcher{
																						pos:        position{line: 929, col: 28, offset: 37476},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 929, col: 32, offset: 37480,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 114, col: 34, offset: 4427},
								run: (*parser).callonInlineElement802,
								expr: &seqExpr{
									pos: position{line: 114, col: 34, offset: 4427},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 114, col: 34, offset: 4427},
											val:        "{",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 114, col: 38, offset: 4431},
											label: "name",
											expr: &actionExpr{
												pos: position{line: 121, col: 26, offset: 4726},
												run: (*parser).callonInlineElement806,
												expr: &seqExpr{
													pos: position{line: 121, col: 26, offset: 4726},
													exprs: []interface{}{
														&charClassMatcher{
															pos:        position{line: 121, col: 27, offset: 4727},
															val:        "[_A-Za-z0-9]",
															chars:      []rune{'_'},
															ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
															ignoreCase: false,
															inverted:   false,
														},
														&zeroOrMoreExpr{
															pos: position{line: 121, col: 56, offset: 4756},
															expr: &charClassMatcher{
																pos:        position{line: 121, col: 57, offset: 4757},
																val:        "[-A-Za-z0-9]",
																chars:      []rune{'-'},
																ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																ignoreCase: false,
																inverted:   false,
															},
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 114, col: 67, offset: 4460},
											val:        "}",
											ignoreCase: false,
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 925, col: 9, offset: 37382},
								run: (*parser).callonInlineElement812,
								expr: &oneOrMoreExpr{
									pos: position{line: 925, col: 9, offset: 37382},
									expr: &seqExpr{
										pos: position{line: 925, col: 10, offset: 37383},
										exprs: []interface{}{
											&notExpr{
												pos: position{line: 925, col: 10, offset: 37383},
												expr: &choiceExpr{
													pos: position{line: 951, col: 12, offset: 37864},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 951, col: 12, offset: 37864},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 951, col: 21, offset: 37873},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 925, col: 19, offset: 37392},
												expr: &choiceExpr{
													pos: position{line: 947, col: 7, offset: 37802},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 947, col: 7, offset: 37802},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 947, col: 13, offset: 37808},
															run: (*parser).callonInlineElement822,
															expr: &litMatcher{
																pos:        position{line: 947, col: 13, offset: 37808},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 925, col: 23, offset: 37396},
												expr: &charClassMatcher{
													pos:        position{line: 923, col: 16, offset: 37351},
													val:        "[()[]]",
													chars:      []rune{'(', ')', '[', ']'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&anyMatcher{
												line: 925, col: 36, offset: 37409,
											},
										},
									},
								},
							},
							&charClassMatcher{
								pos:        position{line: 923, col: 16, offset: 37351},
								val:        "[()[]]",
								chars:      []rune{'(', ')', '[', ']'},
								ignoreCase: false,
								inverted:   false,
							},
						},
					},
				},
			},
		},
		{
			name: "QuotedText",
			pos:  position{line: 537, col: 1, offset: 21019},
			expr: &choiceExpr{
				pos: position{line: 537, col: 15, offset: 21033},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 537, col: 15, offset: 21033},
						name: "BoldText",
					},
					&ruleRefExpr{
						pos:  position{line: 537, col: 26, offset: 21044},
						name: "ItalicText",
					},
					&ruleRefExpr{
						pos:  position{line: 537, col: 39, offset: 21057},
						name: "MonospaceText",
					},
					&ruleRefExpr{
						pos:  position{line: 538, col: 13, offset: 21085},
						name: "EscapedBoldText",
					},
					&ruleRefExpr{
						pos:  position{line: 538, col: 31, offset: 21103},
						name: "EscapedItalicText",
					},
					&ruleRefExpr{
						pos:  position{line: 538, col: 51, offset: 21123},
						name: "EscapedMonospaceText",
					},
				},
			},
		},
		{
			name: "BoldText",
			pos:  position{line: 540, col: 1, offset: 21145},
			expr: &choiceExpr{
				pos: position{line: 541, col: 5, offset: 21162},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 541, col: 5, offset: 21162},
						run: (*parser).callonBoldText2,
						expr: &seqExpr{
							pos: position{line: 541, col: 5, offset: 21162},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 541, col: 5, offset: 21162},
									expr: &litMatcher{
										pos:        position{line: 541, col: 6, offset: 21163},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 541, col: 11, offset: 21168},
									val:        "**",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 541, col: 16, offset: 21173},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 541, col: 25, offset: 21182},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 541, col: 44, offset: 21201},
									val:        "**",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 543, col: 9, offset: 21334},
						run: (*parser).callonBoldText10,
						expr: &seqExpr{
							pos: position{line: 543, col: 9, offset: 21334},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 543, col: 9, offset: 21334},
									expr: &litMatcher{
										pos:        position{line: 543, col: 10, offset: 21335},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 543, col: 15, offset: 21340},
									val:        "**",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 543, col: 20, offset: 21345},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 543, col: 29, offset: 21354},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 543, col: 48, offset: 21373},
									val:        "*",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 546, col: 9, offset: 21550},
						run: (*parser).callonBoldText18,
						expr: &seqExpr{
							pos: position{line: 546, col: 9, offset: 21550},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 546, col: 9, offset: 21550},
									expr: &litMatcher{
										pos:        position{line: 546, col: 10, offset: 21551},
										val:        "\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 546, col: 14, offset: 21555},
									val:        "*",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 546, col: 18, offset: 21559},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 546, col: 27, offset: 21568},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 546, col: 46, offset: 21587},
									val:        "*",
									ignoreCase: false,
								},
								&notExpr{
									pos: position{line: 546, col: 50, offset: 21591},
									expr: &charClassMatcher{
										pos:        position{line: 921, col: 13, offset: 37323},
										val:        "[a-zA-Z0-9]",
										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
										ignoreCase: false,
										inverted:   false,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "EscapedBoldText",
			pos:  position{line: 550, col: 1, offset: 21785},
			expr: &choiceExpr{
				pos: position{line: 551, col: 5, offset: 21809},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 551, col: 5, offset: 21809},
						run: (*parser).callonEscapedBoldText2,
						expr: &seqExpr{
							pos: position{line: 551, col: 5, offset: 21809},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 551, col: 5, offset: 21809},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 564, col: 25, offset: 22613},
										run: (*parser).callonEscapedBoldText5,
										expr: &seqExpr{
											pos: position{line: 564, col: 25, offset: 22613},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 564, col: 25, offset: 22613},
													val:        "\\\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 564, col: 30, offset: 22618},
													expr: &litMatcher{
														pos:        position{line: 564, col: 30, offset: 22618},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 551, col: 40, offset: 21844},
									val:        "**",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 551, col: 45, offset: 21849},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 551, col: 54, offset: 21858},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 551, col: 73, offset: 21877},
									val:        "**",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 553, col: 9, offset: 22033},
						run: (*parser).callonEscapedBoldText14,
						expr: &seqExpr{
							pos: position{line: 553, col: 9, offset: 22033},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 553, col: 9, offset: 22033},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 560, col: 25, offset: 22544},
										run: (*parser).callonEscapedBoldText17,
										expr: &seqExpr{
											pos: position{line: 560, col: 25, offset: 22544},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 560, col: 25, offset: 22544},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 560, col: 29, offset: 22548},
													expr: &litMatcher{
														pos:        position{line: 560, col: 29, offset: 22548},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 553, col: 44, offset: 22068},
									val:        "**",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 553, col: 49, offset: 22073},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 553, col: 58, offset: 22082},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 553, col: 77, offset: 22101},
									val:        "*",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 556, col: 9, offset: 22300},
						run: (*parser).callonEscapedBoldText26,
						expr: &seqExpr{
							pos: position{line: 556, col: 9, offset: 22300},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 556, col: 9, offset: 22300},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 560, col: 25, offset: 22544},
										run: (*parser).callonEscapedBoldText29,
										expr: &seqExpr{
											pos: position{line: 560, col: 25, offset: 22544},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 560, col: 25, offset: 22544},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 560, col: 29, offset: 22548},
													expr: &litMatcher{
														pos:        position{line: 560, col: 29, offset: 22548},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 556, col: 44, offset: 22335},
									val:        "*",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 556, col: 48, offset: 22339},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 556, col: 57, offset: 22348},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 556, col: 76, offset: 22367},
									val:        "*",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "ItalicText",
			pos:  position{line: 568, col: 1, offset: 22659},
			expr: &choiceExpr{
				pos: position{line: 569, col: 5, offset: 22678},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 569, col: 5, offset: 22678},
						run: (*parser).callonItalicText2,
						expr: &seqExpr{
							pos: position{line: 569, col: 5, offset: 22678},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 569, col: 5, offset: 22678},
									expr: &litMatcher{
										pos:        position{line: 569, col: 6, offset: 22679},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 569, col: 11, offset: 22684},
									val:        "__",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 569, col: 16, offset: 22689},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 569, col: 25, offset: 22698},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 569, col: 44, offset: 22717},
									val:        "__",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 571, col: 9, offset: 22806},
						run: (*parser).callonItalicText10,
						expr: &seqExpr{
							pos: position{line: 571, col: 9, offset: 22806},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 571, col: 9, offset: 22806},
									expr: &litMatcher{
										pos:        position{line: 571, col: 10, offset: 22807},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 571, col: 15, offset: 22812},
									val:        "__",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 571, col: 20, offset: 22817},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 571, col: 29, offset: 22826},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 571, col: 48, offset: 22845},
									val:        "_",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 574, col: 9, offset: 23024},
						run: (*parser).callonItalicText18,
						expr: &seqExpr{
							pos: position{line: 574, col: 9, offset: 23024},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 574, col: 9, offset: 23024},
									expr: &litMatcher{
										pos:        position{line: 574, col: 10, offset: 23025},
										val:        "\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 574, col: 14, offset: 23029},
									val:        "_",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 574, col: 18, offset: 23033},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 574, col: 27, offset: 23042},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 574, col: 46, offset: 23061},
									val:        "_",
									ignoreCase: false,
								},
								&notExpr{
									pos: position{line: 574, col: 50, offset: 23065},
									expr: &charClassMatcher{
										pos:        position{line: 921, col: 13, offset: 37323},
										val:        "[a-zA-Z0-9]",
										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
										ignoreCase: false,
										inverted:   false,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "EscapedItalicText",
			pos:  position{line: 578, col: 1, offset: 23260},
			expr: &choiceExpr{
				pos: position{line: 579, col: 5, offset: 23286},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 579, col: 5, offset: 23286},
						run: (*parser).callonEscapedItalicText2,
						expr: &seqExpr{
							pos: position{line: 579, col: 5, offset: 23286},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 579, col: 5, offset: 23286},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 564, col: 25, offset: 22613},
										run: (*parser).callonEscapedItalicText5,
										expr: &seqExpr{
											pos: position{line: 564, col: 25, offset: 22613},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 564, col: 25, offset: 22613},
													val:        "\\\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 564, col: 30, offset: 22618},
													expr: &litMatcher{
														pos:        position{line: 564, col: 30, offset: 22618},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 579, col: 40, offset: 23321},
									val:        "__",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 579, col: 45, offset: 23326},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 579, col: 54, offset: 23335},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 579, col: 73, offset: 23354},
									val:        "__",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 581, col: 9, offset: 23510},
						run: (*parser).callonEscapedItalicText14,
						expr: &seqExpr{
							pos: position{line: 581, col: 9, offset: 23510},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 581, col: 9, offset: 23510},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 560, col: 25, offset: 22544},
										run: (*parser).callonEscapedItalicText17,
										expr: &seqExpr{
											pos: position{line: 560, col: 25, offset: 22544},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 560, col: 25, offset: 22544},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 560, col: 29, offset: 22548},
													expr: &litMatcher{
														pos:        position{line: 560, col: 29, offset: 22548},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 581, col: 44, offset: 23545},
									val:        "__",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 581, col: 49, offset: 23550},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 581, col: 58, offset: 23559},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 581, col: 77, offset: 23578},
									val:        "_",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 584, col: 9, offset: 23777},
						run: (*parser).callonEscapedItalicText26,
						expr: &seqExpr{
							pos: position{line: 584, col: 9, offset: 23777},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 584, col: 9, offset: 23777},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 560, col: 25, offset: 22544},
										run: (*parser).callonEscapedItalicText29,
										expr: &seqExpr{
											pos: position{line: 560, col: 25, offset: 22544},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 560, col: 25, offset: 22544},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 560, col: 29, offset: 22548},
													expr: &litMatcher{
														pos:        position{line: 560, col: 29, offset: 22548},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 584, col: 44, offset: 23812},
									val:        "_",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 584, col: 48, offset: 23816},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 584, col: 57, offset: 23825},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 584, col: 76, offset: 23844},
									val:        "_",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "MonospaceText",
			pos:  position{line: 588, col: 1, offset: 23997},
			expr: &choiceExpr{
				pos: position{line: 589, col: 5, offset: 24019},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 589, col: 5, offset: 24019},
						run: (*parser).callonMonospaceText2,
						expr: &seqExpr{
							pos: position{line: 589, col: 5, offset: 24019},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 589, col: 5, offset: 24019},
									expr: &litMatcher{
										pos:        position{line: 589, col: 6, offset: 24020},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 589, col: 11, offset: 24025},
									val:        "``",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 589, col: 16, offset: 24030},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 589, col: 25, offset: 24039},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 589, col: 44, offset: 24058},
									val:        "``",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 591, col: 9, offset: 24196},
						run: (*parser).callonMonospaceText10,
						expr: &seqExpr{
							pos: position{line: 591, col: 9, offset: 24196},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 591, col: 9, offset: 24196},
									expr: &litMatcher{
										pos:        position{line: 591, col: 10, offset: 24197},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 591, col: 15, offset: 24202},
									val:        "``",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 591, col: 20, offset: 24207},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 591, col: 29, offset: 24216},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 591, col: 48, offset: 24235},
									val:        "`",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 594, col: 9, offset: 24417},
						run: (*parser).callonMonospaceText18,
						expr: &seqExpr{
							pos: position{line: 594, col: 9, offset: 24417},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 594, col: 9, offset: 24417},
									expr: &litMatcher{
										pos:        position{line: 594, col: 10, offset: 24418},
										val:        "\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 594, col: 14, offset: 24422},
									val:        "`",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 594, col: 18, offset: 24426},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 594, col: 27, offset: 24435},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 594, col: 46, offset: 24454},
									val:        "`",
									ignoreCase: false,
								},
								&notExpr{
									pos: position{line: 594, col: 50, offset: 24458},
									expr: &charClassMatcher{
										pos:        position{line: 921, col: 13, offset: 37323},
										val:        "[a-zA-Z0-9]",
										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
										ignoreCase: false,
										inverted:   false,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "EscapedMonospaceText",
			pos:  position{line: 598, col: 1, offset: 24656},
			expr: &choiceExpr{
				pos: position{line: 599, col: 5, offset: 24685},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 599, col: 5, offset: 24685},
						run: (*parser).callonEscapedMonospaceText2,
						expr: &seqExpr{
							pos: position{line: 599, col: 5, offset: 24685},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 599, col: 5, offset: 24685},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 564, col: 25, offset: 22613},
										run: (*parser).callonEscapedMonospaceText5,
										expr: &seqExpr{
											pos: position{line: 564, col: 25, offset: 22613},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 564, col: 25, offset: 22613},
													val:        "\\\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 564, col: 30, offset: 22618},
													expr: &litMatcher{
														pos:        position{line: 564, col: 30, offset: 22618},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 599, col: 40, offset: 24720},
									val:        "``",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 599, col: 45, offset: 24725},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 599, col: 54, offset: 24734},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 599, col: 73, offset: 24753},
									val:        "``",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 601, col: 9, offset: 24909},
						run: (*parser).callonEscapedMonospaceText14,
						expr: &seqExpr{
							pos: position{line: 601, col: 9, offset: 24909},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 601, col: 9, offset: 24909},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 560, col: 25, offset: 22544},
										run: (*parser).callonEscapedMonospaceText17,
										expr: &seqExpr{
											pos: position{line: 560, col: 25, offset: 22544},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 560, col: 25, offset: 22544},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 560, col: 29, offset: 22548},
													expr: &litMatcher{
														pos:        position{line: 560, col: 29, offset: 22548},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 601, col: 44, offset: 24944},
									val:        "``",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 601, col: 49, offset: 24949},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 601, col: 58, offset: 24958},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 601, col: 77, offset: 24977},
									val:        "`",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 604, col: 9, offset: 25176},
						run: (*parser).callonEscapedMonospaceText26,
						expr: &seqExpr{
							pos: position{line: 604, col: 9, offset: 25176},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 604, col: 9, offset: 25176},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 560, col: 25, offset: 22544},
										run: (*parser).callonEscapedMonospaceText29,
										expr: &seqExpr{
											pos: position{line: 560, col: 25, offset: 22544},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 560, col: 25, offset: 22544},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 560, col: 29, offset: 22548},
													expr: &litMatcher{
														pos:        position{line: 560, col: 29, offset: 22548},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 604, col: 44, offset: 25211},
									val:        "`",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 604, col: 48, offset: 25215},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 604, col: 57, offset: 25224},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 604, col: 76, offset: 25243},
									val:        "`",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "QuotedTextContent",
			pos:  position{line: 608, col: 1, offset: 25396},
			expr: &seqExpr{
				pos: position{line: 608, col: 22, offset: 25417},
				exprs: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 608, col: 22, offset: 25417},
						name: "QuotedTextContentElement",
					},
					&zeroOrMoreExpr{
						pos: position{line: 608, col: 47, offset: 25442},
						expr: &seqExpr{
							pos: position{line: 608, col: 48, offset: 25443},
							exprs: []interface{}{
								&oneOrMoreExpr{
									pos: position{line: 608, col: 48, offset: 25443},
									expr: &choiceExpr{
										pos: position{line: 947, col: 7, offset: 37802},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 947, col: 7, offset: 37802},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 947, col: 13, offset: 37808},
												run: (*parser).callonQuotedTextContent8,
												expr: &litMatcher{
													pos:        position{line: 947, col: 13, offset: 37808},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&ruleRefExpr{
									pos:  position{line: 608, col: 52, offset: 25447},
									name: "QuotedTextContentElement",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "QuotedTextContentElement",
			pos:  position{line: 610, col: 1, offset: 25475},
			expr: &choiceExpr{
				pos: position{line: 610, col: 29, offset: 25503},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 610, col: 29, offset: 25503},
						name: "QuotedText",
					},
					&oneOrMoreExpr{
						pos: position{line: 612, col: 19, offset: 25680},
						expr: &seqExpr{
							pos: position{line: 612, col: 20, offset: 25681},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 612, col: 20, offset: 25681},
									expr: &choiceExpr{
										pos: position{line: 951, col: 12, offset: 37864},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 951, col: 12, offset: 37864},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 951, col: 21, offset: 37873},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 612, col: 29, offset: 25690},
									expr: &choiceExpr{
										pos: position{line: 947, col: 7, offset: 37802},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 947, col: 7, offset: 37802},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 947, col: 13, offset: 37808},
												run: (*parser).callonQuotedTextContentElement12,
												expr: &litMatcher{
													pos:        position{line: 947, col: 13, offset: 37808},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 612, col: 33, offset: 25694},
									expr: &litMatcher{
										pos:        position{line: 612, col: 34, offset: 25695},
										val:        "*",
										ignoreCase: false,
									},
								},
								&notExpr{
									pos: position{line: 612, col: 38, offset: 25699},
									expr: &litMatcher{
										pos:        position{line: 612, col: 39, offset: 25700},
										val:        "_",
										ignoreCase: false,
									},
								},
								&notExpr{
									pos: position{line: 612, col: 43, offset: 25704},
									expr: &litMatcher{
										pos:        position{line: 612, col: 44, offset: 25705},
										val:        "`",
										ignoreCase: false,
									},
								},
								&anyMatcher{
									line: 612, col: 48, offset: 25709,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 614, col: 29, offset: 25780},
						run: (*parser).callonQuotedTextContentElement21,
						expr: &oneOrMoreExpr{
							pos: position{line: 614, col: 29, offset: 25780},
							expr: &seqExpr{
								pos: position{line: 614, col: 30, offset: 25781},
								exprs: []interface{}{
									&notExpr{
										pos: position{line: 614, col: 30, offset: 25781},
										expr: &choiceExpr{
											pos: position{line: 951, col: 12, offset: 37864},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 951, col: 12, offset: 37864},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 951, col: 21, offset: 37873},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
											},
										},
									},
									&notExpr{
										pos: position{line: 614, col: 39, offset: 25790},
										expr: &choiceExpr{
											pos: position{line: 947, col: 7, offset: 37802},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 947, col: 7, offset: 37802},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 947, col: 13, offset: 37808},
													run: (*parser).callonQuotedTextContentElement31,
													expr: &litMatcher{
														pos:        position{line: 947, col: 13, offset: 37808},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&anyMatcher{
										line: 614, col: 44, offset: 25795,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Passthrough",
			pos:  position{line: 624, col: 1, offset: 26194},
			expr: &choiceExpr{
				pos: position{line: 624, col: 16, offset: 26209},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 630, col: 26, offset: 26451},
						run: (*parser).callonPassthrough2,
						expr: &seqExpr{
							pos: position{line: 630, col: 26, offset: 26451},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 630, col: 26, offset: 26451},
									val:        "+++",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 630, col: 32, offset: 26457},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 630, col: 40, offset: 26465},
										expr: &seqExpr{
											pos: position{line: 630, col: 41, offset: 26466},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 630, col: 41, offset: 26466},
													expr: &litMatcher{
														pos:        position{line: 630, col: 42, offset: 26467},
														val:        "+++",
														ignoreCase: false,
													},
												},
												&anyMatcher{
													line: 630, col: 48, offset: 26473,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 630, col: 52, offset: 26477},
									val:        "+++",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 626, col: 26, offset: 26300},
						run: (*parser).callonPassthrough12,
						expr: &seqExpr{
							pos: position{line: 626, col: 26, offset: 26300},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 626, col: 26, offset: 26300},
									val:        "+",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 626, col: 30, offset: 26304},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 626, col: 38, offset: 26312},
										expr: &seqExpr{
											pos: position{line: 626, col: 39, offset: 26313},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 626, col: 39, offset: 26313},
													expr: &choiceExpr{
														pos: position{line: 951, col: 12, offset: 37864},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 951, col: 12, offset: 37864},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 951, col: 21, offset: 37873},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
														},
													},
												},
												&notExpr{
													pos: position{line: 626, col: 48, offset: 26322},
													expr: &litMatcher{
														pos:        position{line: 626, col: 49, offset: 26323},
														val:        "+",
														ignoreCase: false,
													},
												},
												&anyMatcher{
													line: 626, col: 53, offset: 26327,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 626, col: 57, offset: 26331},
									val:        "+",
									ignoreCase: false,
								},
							},
						},
					},
					&ruleRefExpr{
						pos:  position{line: 624, col: 64, offset: 26257},
						name: "PassthroughMacro",
					},
				},
			},
		},
		{
			name: "PassthroughMacro",
			pos:  position{line: 634, col: 1, offset: 26574},
			expr: &choiceExpr{
				pos: position{line: 634, col: 21, offset: 26594},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 634, col: 21, offset: 26594},
						run: (*parser).callonPassthroughMacro2,
						expr: &seqExpr{
							pos: position{line: 634, col: 21, offset: 26594},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 634, col: 21, offset: 26594},
									val:        "pass:[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 634, col: 30, offset: 26603},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 634, col: 38, offset: 26611},
										expr: &seqExpr{
											pos: position{line: 640, col: 31, offset: 26911},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 640, col: 31, offset: 26911},
													expr: &litMatcher{
														pos:        position{line: 640, col: 32, offset: 26912},
														val:        "]",
														ignoreCase: false,
													},
												},
												&anyMatcher{
													line: 640, col: 36, offset: 26916,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 634, col: 67, offset: 26640},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 636, col: 5, offset: 26731},
						run: (*parser).callonPassthroughMacro12,
						expr: &seqExpr{
							pos: position{line: 636, col: 5, offset: 26731},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 636, col: 5, offset: 26731},
									val:        "pass:q[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 636, col: 15, offset: 26741},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 636, col: 23, offset: 26749},
										expr: &choiceExpr{
											pos: position{line: 636, col: 24, offset: 26750},
											alternatives: []interface{}{
												&ruleRefExpr{
													pos:  position{line: 636, col: 24, offset: 26750},
													name: "QuotedText",
												},
												&seqExpr{
													pos: position{line: 640, col: 31, offset: 26911},
													exprs: []interface{}{
														&notExpr{
															pos: position{line: 640, col: 31, offset: 26911},
															expr: &litMatcher{
																pos:        position{line: 640, col: 32, offset: 26912},
																val:        "]",
																ignoreCase: false,
															},
														},
														&anyMatcher{
															line: 640, col: 36, offset: 26916,
														},
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 636, col: 65, offset: 26791},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "DelimitedBlock",
			pos:  position{line: 722, col: 1, offset: 30012},
			expr: &choiceExpr{
				pos: position{line: 722, col: 19, offset: 30030},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 722, col: 19, offset: 30030},
						name: "FencedBlock",
					},
					&actionExpr{
						pos: position{line: 738, col: 17, offset: 30705},
						run: (*parser).callonDelimitedBlock3,
						expr: &seqExpr{
							pos: position{line: 738, col: 17, offset: 30705},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 738, col: 17, offset: 30705},
									label: "attributes",
									expr: &zeroOrMoreExpr{
										pos: position{line: 738, col: 28, offset: 30716},
										expr: &actionExpr{
											pos: position{line: 136, col: 21, offset: 5188},
											run: (*parser).callonDelimitedBlock7,
											expr: &seqExpr{
												pos: position{line: 136, col: 21, offset: 5188},
												exprs: []interface{}{
													&labeledExpr{
														pos:   position{line: 136, col: 21, offset: 5188},
														label: "attr",
														expr: &choiceExpr{
															pos: position{line: 136, col: 27, offset: 5194},
															alternatives: []interface{}{
																&actionExpr{
																	pos: position{line: 145, col: 14, offset: 5645},
																	run: (*parser).callonDelimitedBlock11,
																	expr: &labeledExpr{
																		pos:   position{line: 145, col: 14, offset: 5645},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 151, col: 20, offset: 5775},
																			run: (*parser).callonDelimitedBlock13,
																			expr: &seqExpr{
																				pos: position{line: 151, col: 20, offset: 5775},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 151, col: 20, offset: 5775},
																						val:        "[[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 151, col: 25, offset: 5780},
																						label: "id",
																						expr: &actionExpr{
																							pos: position{line: 933, col: 7, offset: 37526},
																							run: (*parser).callonDelimitedBlock17,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 933, col: 7, offset: 37526},
																								expr: &seqExpr{
																									pos: position{line: 933, col: 8, offset: 37527},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 933, col: 8, offset: 37527},
																											expr: &choiceExpr{
																												pos: position{line: 951, col: 12, offset: 37864},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 951, col: 12, offset: 37864},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 951, col: 21, offset: 37873},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 933, col: 17, offset: 37536},
																											expr: &choiceExpr{
																												pos: position{line: 947, col: 7, offset: 37802},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 947, col: 7, offset: 37802},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 947, col: 13, offset: 37808},
																														run: (*parser).callonDelimitedBlock27,
																														expr: &litMatcher{
																															pos:        position{line: 947, col: 13, offset: 37808},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 933, col: 21, offset: 37540},
																											expr: &litMatcher{
																												pos:        position{line: 933, col: 22, offset: 37541},
																												val:        "[",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 933, col: 26, offset: 37545},
																											expr: &litMatcher{
																												pos:        position{line: 933, col: 27, offset: 37546},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 933, col: 31, offset: 37550},
																											expr: &litMatcher{
																												pos:        position{line: 933, col: 32, offset: 37551},
																												val:        "<<",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 933, col: 37, offset: 37556},
																											expr: &litMatcher{
																												pos:        position{line: 933, col: 38, offset: 37557},
																												val:        ">>",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 933, col: 42, offset: 37561,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 151, col: 33, offset: 5788},
																						val:        "]]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 147, col: 5, offset: 5691},
																	run: (*parser).callonDelimitedBlock39,
																	expr: &seqExpr{
																		pos: position{line: 147, col: 5, offset: 5691},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 147, col: 5, offset: 5691},
																				val:        "[#",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 147, col: 10, offset: 5696},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 933, col: 7, offset: 37526},
																					run: (*parser).callonDelimitedBlock43,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 933, col: 7, offset: 37526},
																						expr: &seqExpr{
																							pos: position{line: 933, col: 8, offset: 37527},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 933, col: 8, offset: 37527},
																									expr: &choiceExpr{
																										pos: position{line: 951, col: 12, offset: 37864},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 951, col: 12, offset: 37864},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 951, col: 21, offset: 37873},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 17, offset: 37536},
																									expr: &choiceExpr{
																										pos: position{line: 947, col: 7, offset: 37802},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 947, col: 7, offset: 37802},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 947, col: 13, offset: 37808},
																												run: (*parser).callonDelimitedBlock53,
																												expr: &litMatcher{
																													pos:        position{line: 947, col: 13, offset: 37808},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 21, offset: 37540},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 22, offset: 37541},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 26, offset: 37545},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 27, offset: 37546},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 31, offset: 37550},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 32, offset: 37551},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 37, offset: 37556},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 38, offset: 37557},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 933, col: 42, offset: 37561,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 147, col: 18, offset: 5704},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 157, col: 17, offset: 5997},
																	run: (*parser).callonDelimitedBlock65,
																	expr: &seqExpr{
																		pos: position{line: 157, col: 17, offset: 5997},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 157, col: 17, offset: 5997},
																				val:        ".",
																				ignoreCase: false,
																			},
																			&notExpr{
																				pos: position{line: 157, col: 21, offset: 6001},
																				expr: &litMatcher{
																					pos:        position{line: 157, col: 22, offset: 6002},
																					val:        ".",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 157, col: 26, offset: 6006},
																				expr: &choiceExpr{
																					pos: position{line: 947, col: 7, offset: 37802},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 947, col: 7, offset: 37802},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 947, col: 13, offset: 37808},
																							run: (*parser).callonDelimitedBlock73,
																							expr: &litMatcher{
																								pos:        position{line: 947, col: 13, offset: 37808},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 157, col: 30, offset: 6010},
																				label: "title",
																				expr: &actionExpr{
																					pos: position{line: 161, col: 24, offset: 6115},
																					run: (*parser).callonDelimitedBlock76,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 161, col: 24, offset: 6115},
																						expr: &seqExpr{
																							pos: position{line: 161, col: 25, offset: 6116},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 161, col: 25, offset: 6116},
																									expr: &choiceExpr{
																										pos: position{line: 951, col: 12, offset: 37864},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 951, col: 12, offset: 37864},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 951, col: 21, offset: 37873},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&anyMatcher{
																									line: 161, col: 34, offset: 6125,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 167, col: 16, offset: 6274},
																	run: (*parser).callonDelimitedBlock84,
																	expr: &seqExpr{
																		pos: position{line: 167, col: 16, offset: 6274},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 167, col: 16, offset: 6274},
																				val:        "[.",
																				ignoreCase: false,
																			},
																			&notExpr{
																				pos: position{line: 167, col: 21, offset: 6279},
																				expr: &choiceExpr{
																					pos: position{line: 947, col: 7, offset: 37802},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 947, col: 7, offset: 37802},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 947, col: 13, offset: 37808},
																							run: (*parser).callonDelimitedBlock90,
																							expr: &litMatcher{
																								pos:        position{line: 947, col: 13, offset: 37808},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 167, col: 25, offset: 6283},
																				label: "role",
																				expr: &actionExpr{
																					pos: position{line: 171, col: 23, offset: 6387},
																					run: (*parser).callonDelimitedBlock93,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 171, col: 23, offset: 6387},
																						expr: &seqExpr{
																							pos: position{line: 171, col: 24, offset: 6388},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 171, col: 24, offset: 6388},
																									expr: &choiceExpr{
																										pos: position{line: 951, col: 12, offset: 37864},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 951, col: 12, offset: 37864},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 951, col: 21, offset: 37873},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 171, col: 33, offset: 6397},
																									expr: &litMatcher{
																										pos:        position{line: 171, col: 34, offset: 6398},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 171, col: 38, offset: 6402,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 167, col: 51, offset: 6309},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 176, col: 30, offset: 6551},
																	run: (*parser).callonDelimitedBlock104,
																	expr: &seqExpr{
																		pos: position{line: 176, col: 30, offset: 6551},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 176, col: 30, offset: 6551},
																				val:        "[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 176, col: 34, offset: 6555},
																				label: "k",
																				expr: &choiceExpr{
																					pos: position{line: 494, col: 19, offset: 19202},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 494, col: 19, offset: 19202},
																							run: (*parser).callonDelimitedBlock109,
																							expr: &litMatcher{
																								pos:        position{line: 494, col: 19, offset: 19202},
																								val:        "TIP",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 496, col: 5, offset: 19240},
																							run: (*parser).callonDelimitedBlock111,
																							expr: &litMatcher{
																								pos:        position{line: 496, col: 5, offset: 19240},
																								val:        "NOTE",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 498, col: 5, offset: 19280},
																							run: (*parser).callonDelimitedBlock113,
																							expr: &litMatcher{
																								pos:        position{line: 498, col: 5, offset: 19280},
																								val:        "IMPORTANT",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 500, col: 5, offset: 19330},
																							run: (*parser).callonDelimitedBlock115,
																							expr: &litMatcher{
																								pos:        position{line: 500, col: 5, offset: 19330},
																								val:        "WARNING",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 502, col: 5, offset: 19376},
																							run: (*parser).callonDelimitedBlock117,
																							expr: &litMatcher{
																								pos:        position{line: 502, col: 5, offset: 19376},
																								val:        "CAUTION",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 176, col: 53, offset: 6574},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 199, col: 21, offset: 7299},
																	run: (*parser).callonDelimitedBlock120,
																	expr: &litMatcher{
																		pos:        position{line: 199, col: 21, offset: 7299},
																		val:        "[horizontal]",
																		ignoreCase: false,
																	},
																},
																&actionExpr{
																	pos: position{line: 181, col: 19, offset: 6735},
																	run: (*parser).callonDelimitedBlock122,
																	expr: &seqExpr{
																		pos: position{line: 181, col: 19, offset: 6735},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 181, col: 19, offset: 6735},
																				val:        "[",
																				ignoreCase: false,
																			},
																			&notExpr{
																				pos: position{line: 181, col: 23, offset: 6739},
																				expr: &choiceExpr{
																					pos: position{line: 947, col: 7, offset: 37802},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 947, col: 7, offset: 37802},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 947, col: 13, offset: 37808},
																							run: (*parser).callonDelimitedBlock128,
																							expr: &litMatcher{
																								pos:        position{line: 947, col: 13, offset: 37808},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 181, col: 27, offset: 6743},
																				label: "attributes",
																				expr: &zeroOrMoreExpr{
																					pos: position{line: 181, col: 38, offset: 6754},
																					expr: &choiceExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 185, col: 21, offset: 6867},
																								run: (*parser).callonDelimitedBlock133,
																								expr: &seqExpr{
																									pos: position{line: 185, col: 21, offset: 6867},
																									exprs: []interface{}{
																										&labeledExpr{
																											pos:   position{line: 185, col: 21, offset: 6867},
																											label: "key",
																											expr: &actionExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												run: (*parser).callonDelimitedBlock136,
																												expr: &seqExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 191, col: 17, offset: 7127},
																															expr: &actionExpr{
																																pos: position{line: 231, col: 14, offset: 8648},
																																run: (*parser).callonDelimitedBlock139,
																																expr: &litMatcher{
																																	pos:        position{line: 231, col: 14, offset: 8648},
																																	val:        "verse",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&labeledExpr{
																															pos:   position{line: 191, col: 28, offset: 7138},
																															label: "key",
																															expr: &oneOrMoreExpr{
																																pos: position{line: 191, col: 32, offset: 7142},
																																expr: &seqExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 191, col: 33, offset: 7143},
																																			expr: &litMatcher{
																																				pos:        position{line: 191, col: 34, offset: 7144},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 191, col: 38, offset: 7148},
																																			expr: &litMatcher{
																																				pos:        position{line: 191, col: 39, offset: 7149},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 191, col: 43, offset: 7153},
																																			expr: &litMatcher{
																																				pos:        position{line: 191, col: 44, offset: 7154},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 191, col: 48, offset: 7158,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&litMatcher{
																											pos:        position{line: 185, col: 40, offset: 6886},
																											val:        "=",
																											ignoreCase: false,
																										},
																										&labeledExpr{
																											pos:   position{line: 185, col: 44, offset: 6890},
																											label: "value",
																											expr: &actionExpr{
																												pos: position{line: 195, col: 19, offset: 7217},
																												run: (*parser).callonDelimitedBlock153,
																												expr: &labeledExpr{
																													pos:   position{line: 195, col: 19, offset: 7217},
																													label: "value",
																													expr: &zeroOrMoreExpr{
																														pos: position{line: 195, col: 25, offset: 7223},
																														expr: &seqExpr{
																															pos: position{line: 195, col: 26, offset: 7224},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 195, col: 26, offset: 7224},
																																	expr: &litMatcher{
																																		pos:        position{line: 195, col: 27, offset: 7225},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 195, col: 31, offset: 7229},
																																	expr: &litMatcher{
																																		pos:        position{line: 195, col: 32, offset: 7230},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 195, col: 36, offset: 7234},
																																	expr: &litMatcher{
																																		pos:        position{line: 195, col: 37, offset: 7235},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 195, col: 41, offset: 7239,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&zeroOrOneExpr{
																											pos: position{line: 185, col: 67, offset: 6913},
																											expr: &litMatcher{
																												pos:        position{line: 185, col: 67, offset: 6913},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&zeroOrMoreExpr{
																											pos: position{line: 185, col: 72, offset: 6918},
																											expr: &choiceExpr{
																												pos: position{line: 947, col: 7, offset: 37802},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 947, col: 7, offset: 37802},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 947, col: 13, offset: 37808},
																														run: (*parser).callonDelimitedBlock169,
																														expr: &litMatcher{
																															pos:        position{line: 947, col: 13, offset: 37808},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 187, col: 5, offset: 7002},
																								run: (*parser).callonDelimitedBlock171,
																								expr: &seqExpr{
																									pos: position{line: 187, col: 5, offset: 7002},
																									exprs: []interface{}{
																										&labeledExpr{
																											pos:   position{line: 187, col: 5, offset: 7002},
																											label: "key",
																											expr: &actionExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												run: (*parser).callonDelimitedBlock174,
																												expr: &seqExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 191, col: 17, offset: 7127},
																															expr: &actionExpr{
																																pos: position{line: 231, col: 14, offset: 8648},
																																run: (*parser).callonDelimitedBlock177,
																																expr: &litMatcher{
																																	pos:        position{line: 231, col: 14, offset: 8648},
																																	val:        "verse",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&labeledExpr{
																															pos:   position{line: 191, col: 28, offset: 7138},
																															label: "key",
																															expr: &oneOrMoreExpr{
																																pos: position{line: 191, col: 32, offset: 7142},
																																expr: &seqExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 191, col: 33, offset: 7143},
																																			expr: &litMatcher{
																																				pos:        position{line: 191, col: 34, offset: 7144},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 191, col: 38, offset: 7148},
																																			expr: &litMatcher{
																																				pos:        position{line: 191, col: 39, offset: 7149},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 191, col: 43, offset: 7153},
																																			expr: &litMatcher{
																																				pos:        position{line: 191, col: 44, offset: 7154},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 191, col: 48, offset: 7158,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&zeroOrOneExpr{
																											pos: position{line: 187, col: 24, offset: 7021},
																											expr: &litMatcher{
																												pos:        position{line: 187, col: 24, offset: 7021},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&zeroOrMoreExpr{
																											pos: position{line: 187, col: 29, offset: 7026},
																											expr: &choiceExpr{
																												pos: position{line: 947, col: 7, offset: 37802},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 947, col: 7, offset: 37802},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 947, col: 13, offset: 37808},
																														run: (*parser).callonDelimitedBlock194,
																														expr: &litMatcher{
																															pos:        position{line: 947, col: 13, offset: 37808},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 181, col: 59, offset: 6775},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
													},
													&zeroOrMoreExpr{
														pos: position{line: 136, col: 131, offset: 5298},
														expr: &choiceExpr{
															pos: position{line: 947, col: 7, offset: 37802},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 947, col: 7, offset: 37802},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 947, col: 13, offset: 37808},
																	run: (*parser).callonDelimitedBlock200,
																	expr: &litMatcher{
																		pos:        position{line: 947, col: 13, offset: 37808},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 955, col: 8, offset: 37904},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 951, col: 12, offset: 37864},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 951, col: 21, offset: 37873},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 953, col: 8, offset: 37893},
																expr: &anyMatcher{
																	line: 953, col: 9, offset: 37894,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 735, col: 26, offset: 30646},
									val:        "----",
									ignoreCase: false,
								},
								&zeroOrMoreExpr{
									pos: position{line: 738, col: 70, offset: 30758},
									expr: &choiceExpr{
										pos: position{line: 947, col: 7, offset: 37802},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 947, col: 7, offset: 37802},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 947, col: 13, offset: 37808},
												run: (*parser).callonDelimitedBlock211,
												expr: &litMatcher{
													pos:        position{line: 947, col: 13, offset: 37808},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 951, col: 12, offset: 37864},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 951, col: 12, offset: 37864},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 951, col: 21, offset: 37873},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 738, col: 82, offset: 30770},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 738, col: 90, offset: 30778},
										expr: &actionExpr{
											pos: position{line: 742, col: 24, offset: 30984},
											run: (*parser).callonDelimitedBlock218,
											expr: &labeledExpr{
												pos:   position{line: 742, col: 24, offset: 30984},
												label: "lines",
												expr: &oneOrMoreExpr{
													pos: position{line: 742, col: 30, offset: 30990},
													expr: &actionExpr{
														pos: position{line: 746, col: 21, offset: 31093},
														run: (*parser).callonDelimitedBlock221,
														expr: &seqExpr{
															pos: position{line: 746, col: 21, offset: 31093},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 746, col: 21, offset: 31093},
																	expr: &litMatcher{
																		pos:        position{line: 735, col: 26, offset: 30646},
																		val:        "----",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 746, col: 44, offset: 31116},
																	expr: &notExpr{
																		pos: position{line: 953, col: 8, offset: 37893},
																		expr: &anyMatcher{
																			line: 953, col: 9, offset: 37894,
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 746, col: 49, offset: 31121},
																	label: "line",
																	expr: &actionExpr{
																		pos: position{line: 750, col: 28, offset: 31232},
																		run: (*parser).callonDelimitedBlock229,
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 750, col: 28, offset: 31232},
																			expr: &seqExpr{
																				pos: position{line: 750, col: 29, offset: 31233},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 750, col: 29, offset: 31233},
																						expr: &litMatcher{
																							pos:        position{line: 735, col: 26, offset: 30646},
																							val:        "----",
																							ignoreCase: false,
																						},
																					},
																					&notExpr{
																						pos: position{line: 750, col: 52, offset: 31256},
																						expr: &choiceExpr{
																							pos: position{line: 955, col: 8, offset: 37904},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 951, col: 12, offset: 37864},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 951, col: 21, offset: 37873},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																								&notExpr{
																									pos: position{line: 953, col: 8, offset: 37893},
																									expr: &anyMatcher{
																										line: 953, col: 9, offset: 37894,
																									},
																								},
																							},
																						},
																					},
																					&anyMatcher{
																						line: 750, col: 57, offset: 31261,
																					},
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 955, col: 8, offset: 37904},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 951, col: 12, offset: 37864},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 951, col: 21, offset: 37873},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 953, col: 8, offset: 37893},
																			expr: &anyMatcher{
																				line: 953, col: 9, offset: 37894,
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 738, col: 114, offset: 30802},
									alternatives: []interface{}{
										&seqExpr{
											pos: position{line: 738, col: 115, offset: 30803},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 735, col: 26, offset: 30646},
													val:        "----",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 738, col: 137, offset: 30825},
													expr: &choiceExpr{
														pos: position{line: 947, col: 7, offset: 37802},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 947, col: 7, offset: 37802},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 947, col: 13, offset: 37808},
																run: (*parser).callonDelimitedBlock252,
																expr: &litMatcher{
																	pos:        position{line: 947, col: 13, offset: 37808},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 955, col: 8, offset: 37904},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 951, col: 12, offset: 37864},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 951, col: 21, offset: 37873},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 953, col: 8, offset: 37893},
															expr: &anyMatcher{
																line: 953, col: 9, offset: 37894,
															},
														},
													},
												},
											},
										},
										&notExpr{
											pos: position{line: 953, col: 8, offset: 37893},
											expr: &anyMatcher{
												line: 953, col: 9, offset: 37894,
											},
										},
									},
								},
							},
						},
					},
					&ruleRefExpr{
						pos:  position{line: 722, col: 48, offset: 30059},
						name: "ExampleBlock",
					},
					&actionExpr{
						pos: position{line: 858, col: 17, offset: 34927},
						run: (*parser).callonDelimitedBlock262,
						expr: &seqExpr{
							pos: position{line: 858, col: 17, offset: 34927},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 858, col: 17, offset: 34927},
									label: "attributes",
									expr: &zeroOrMoreExpr{
										pos: position{line: 858, col: 28, offset: 34938},
										expr: &actionExpr{
											pos: position{line: 136, col: 21, offset: 5188},
											run: (*parser).callonDelimitedBlock266,
											expr: &seqExpr{
												pos: position{line: 136, col: 21, offset: 5188},
												exprs: []interface{}{
													&labeledExpr{
														pos:   position{line: 136, col: 21, offset: 5188},
														label: "attr",
														expr: &choiceExpr{
															pos: position{line: 136, col: 27, offset: 5194},
															alternatives: []interface{}{
																&actionExpr{
																	pos: position{line: 145, col: 14, offset: 5645},
																	run: (*parser).callonDelimitedBlock270,
																	expr: &labeledExpr{
																		pos:   position{line: 145, col: 14, offset: 5645},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 151, col: 20, offset: 5775},
																			run: (*parser).callonDelimitedBlock272,
																			expr: &seqExpr{
																				pos: position{line: 151, col: 20, offset: 5775},
																				exprs: []interface{}{
																					&litMatcher{
																						pos:        position{line: 151, col: 20, offset: 5775},
																						val:        "[[",
																						ignoreCase: false,
																					},
																					&labeledExpr{
																						pos:   position{line: 151, col: 25, offset: 5780},
																						label: "id",
																						expr: &actionExpr{
																							pos: position{line: 933, col: 7, offset: 37526},
																							run: (*parser).callonDelimitedBlock276,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 933, col: 7, offset: 37526},
																								expr: &seqExpr{
																									pos: position{line: 933, col: 8, offset: 37527},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 933, col: 8, offset: 37527},
																											expr: &choiceExpr{
																												pos: position{line: 951, col: 12, offset: 37864},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 951, col: 12, offset: 37864},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 951, col: 21, offset: 37873},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 933, col: 17, offset: 37536},
																											expr: &choiceExpr{
																												pos: position{line: 947, col: 7, offset: 37802},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 947, col: 7, offset: 37802},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 947, col: 13, offset: 37808},
																														run: (*parser).callonDelimitedBlock286,
																														expr: &litMatcher{
																															pos:        position{line: 947, col: 13, offset: 37808},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																										&notExpr{
																											pos: position{line: 933, col: 21, offset: 37540},
																											expr: &litMatcher{
																												pos:        position{line: 933, col: 22, offset: 37541},
																												val:        "[",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 933, col: 26, offset: 37545},
																											expr: &litMatcher{
																												pos:        position{line: 933, col: 27, offset: 37546},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 933, col: 31, offset: 37550},
																											expr: &litMatcher{
																												pos:        position{line: 933, col: 32, offset: 37551},
																												val:        "<<",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 933, col: 37, offset: 37556},
																											expr: &litMatcher{
																												pos:        position{line: 933, col: 38, offset: 37557},
																												val:        ">>",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 933, col: 42, offset: 37561,
																										},
																									},
																								},
																							},
																						},
																					},
																					&litMatcher{
																						pos:        position{line: 151, col: 33, offset: 5788},
																						val:        "]]",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 147, col: 5, offset: 5691},
																	run: (*parser).callonDelimitedBlock298,
																	expr: &seqExpr{
																		pos: position{line: 147, col: 5, offset: 5691},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 147, col: 5, offset: 5691},
																				val:        "[#",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 147, col: 10, offset: 5696},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 933, col: 7, offset: 37526},
																					run: (*parser).callonDelimitedBlock302,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 933, col: 7, offset: 37526},
																						expr: &seqExpr{
																							pos: position{line: 933, col: 8, offset: 37527},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 933, col: 8, offset: 37527},
																									expr: &choiceExpr{
																										pos: position{line: 951, col: 12, offset: 37864},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 951, col: 12, offset: 37864},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 951, col: 21, offset: 37873},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 17, offset: 37536},
																									expr: &choiceExpr{
																										pos: position{line: 947, col: 7, offset: 37802},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 947, col: 7, offset: 37802},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 947, col: 13, offset: 37808},
																												run: (*parser).callonDelimitedBlock312,
																												expr: &litMatcher{
																													pos:        position{line: 947, col: 13, offset: 37808},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 21, offset: 37540},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 22, offset: 37541},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 26, offset: 37545},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 27, offset: 37546},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 31, offset: 37550},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 32, offset: 37551},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 37, offset: 37556},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 38, offset: 37557},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 933, col: 42, offset: 37561,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 147, col: 18, offset: 5704},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 157, col: 17, offset: 5997},
																	run: (*parser).callonDelimitedBlock324,
																	expr: &seqExpr{
																		pos: position{line: 157, col: 17, offset: 5997},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 157, col: 17, offset: 5997},
																				val:        ".",
																				ignoreCase: false,
																			},
																			&notExpr{
																				pos: position{line: 157, col: 21, offset: 6001},
																				expr: &litMatcher{
																					pos:        position{line: 157, col: 22, offset: 6002},
																					val:        ".",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 157, col: 26, offset: 6006},
																				expr: &choiceExpr{
																					pos: position{line: 947, col: 7, offset: 37802},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 947, col: 7, offset: 37802},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 947, col: 13, offset: 37808},
																							run: (*parser).callonDelimitedBlock332,
																							expr: &litMatcher{
																								pos:        position{line: 947, col: 13, offset: 37808},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 157, col: 30, offset: 6010},
																				label: "title",
																				expr: &actionExpr{
																					pos: position{line: 161, col: 24, offset: 6115},
																					run: (*parser).callonDelimitedBlock335,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 161, col: 24, offset: 6115},
																						expr: &seqExpr{
																							pos: position{line: 161, col: 25, offset: 6116},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 161, col: 25, offset: 6116},
																									expr: &choiceExpr{
																										pos: position{line: 951, col: 12, offset: 37864},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 951, col: 12, offset: 37864},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 951, col: 21, offset: 37873},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&anyMatcher{
																									line: 161, col: 34, offset: 6125,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 167, col: 16, offset: 6274},
																	run: (*parser).callonDelimitedBlock343,
																	expr: &seqExpr{
																		pos: position{line: 167, col: 16, offset: 6274},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 167, col: 16, offset: 6274},
																				val:        "[.",
																				ignoreCase: false,
																			},
																			&notExpr{
																				pos: position{line: 167, col: 21, offset: 6279},
																				expr: &choiceExpr{
																					pos: position{line: 947, col: 7, offset: 37802},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 947, col: 7, offset: 37802},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 947, col: 13, offset: 37808},
																							run: (*parser).callonDelimitedBlock349,
																							expr: &litMatcher{
																								pos:        position{line: 947, col: 13, offset: 37808},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 167, col: 25, offset: 6283},
																				label: "role",
																				expr: &actionExpr{
																					pos: position{line: 171, col: 23, offset: 6387},
																					run: (*parser).callonDelimitedBlock352,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 171, col: 23, offset: 6387},
																						expr: &seqExpr{
																							pos: position{line: 171, col: 24, offset: 6388},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 171, col: 24, offset: 6388},
																									expr: &choiceExpr{
																										pos: position{line: 951, col: 12, offset: 37864},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 951, col: 12, offset: 37864},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 951, col: 21, offset: 37873},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 171, col: 33, offset: 6397},
																									expr: &litMatcher{
																										pos:        position{line: 171, col: 34, offset: 6398},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 171, col: 38, offset: 6402,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 167, col: 51, offset: 6309},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 176, col: 30, offset: 6551},
																	run: (*parser).callonDelimitedBlock363,
																	expr: &seqExpr{
																		pos: position{line: 176, col: 30, offset: 6551},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 176, col: 30, offset: 6551},
																				val:        "[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 176, col: 34, offset: 6555},
																				label: "k",
																				expr: &choiceExpr{
																					pos: position{line: 494, col: 19, offset: 19202},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 494, col: 19, offset: 19202},
																							run: (*parser).callonDelimitedBlock368,
																							expr: &litMatcher{
																								pos:        position{line: 494, col: 19, offset: 19202},
																								val:        "TIP",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 496, col: 5, offset: 19240},
																							run: (*parser).callonDelimitedBlock370,
																							expr: &litMatcher{
																								pos:        position{line: 496, col: 5, offset: 19240},
																								val:        "NOTE",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 498, col: 5, offset: 19280},
																							run: (*parser).callonDelimitedBlock372,
																							expr: &litMatcher{
																								pos:        position{line: 498, col: 5, offset: 19280},
																								val:        "IMPORTANT",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 500, col: 5, offset: 19330},
																							run: (*parser).callonDelimitedBlock374,
																							expr: &litMatcher{
																								pos:        position{line: 500, col: 5, offset: 19330},
																								val:        "WARNING",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 502, col: 5, offset: 19376},
																							run: (*parser).callonDelimitedBlock376,
																							expr: &litMatcher{
																								pos:        position{line: 502, col: 5, offset: 19376},
																								val:        "CAUTION",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 176, col: 53, offset: 6574},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 199, col: 21, offset: 7299},
																	run: (*parser).callonDelimitedBlock379,
																	expr: &litMatcher{
																		pos:        position{line: 199, col: 21, offset: 7299},
																		val:        "[horizontal]",
																		ignoreCase: false,
																	},
																},
																&actionExpr{
																	pos: position{line: 181, col: 19, offset: 6735},
																	run: (*parser).callonDelimitedBlock381,
																	expr: &seqExpr{
																		pos: position{line: 181, col: 19, offset: 6735},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 181, col: 19, offset: 6735},
																				val:        "[",
																				ignoreCase: false,
																			},
																			&notExpr{
																				pos: position{line: 181, col: 23, offset: 6739},
																				expr: &choiceExpr{
																					pos: position{line: 947, col: 7, offset: 37802},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 947, col: 7, offset: 37802},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 947, col: 13, offset: 37808},
																							run: (*parser).callonDelimitedBlock387,
																							expr: &litMatcher{
																								pos:        position{line: 947, col: 13, offset: 37808},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 181, col: 27, offset: 6743},
																				label: "attributes",
																				expr: &zeroOrMoreExpr{
																					pos: position{line: 181, col: 38, offset: 6754},
																					expr: &choiceExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 185, col: 21, offset: 6867},
																								run: (*parser).callonDelimitedBlock392,
																								expr: &seqExpr{
																									pos: position{line: 185, col: 21, offset: 6867},
																									exprs: []interface{}{
																										&labeledExpr{
																											pos:   position{line: 185, col: 21, offset: 6867},
																											label: "key",
																											expr: &actionExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												run: (*parser).callonDelimitedBlock395,
																												expr: &seqExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 191, col: 17, offset: 7127},
																															expr: &actionExpr{
																																pos: position{line: 231, col: 14, offset: 8648},
																																run: (*parser).callonDelimitedBlock398,
																																expr: &litMatcher{
																																	pos:        position{line: 231, col: 14, offset: 8648},
																																	val:        "verse",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&labeledExpr{
																															pos:   position{line: 191, col: 28, offset: 7138},
																															label: "key",
																															expr: &oneOrMoreExpr{
																																pos: position{line: 191, col: 32, offset: 7142},
																																expr: &seqExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 191, col: 33, offset: 7143},
																																			expr: &litMatcher{
																																				pos:        position{line: 191, col: 34, offset: 7144},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 191, col: 38, offset: 7148},
																																			expr: &litMatcher{
																																				pos:        position{line: 191, col: 39, offset: 7149},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 191, col: 43, offset: 7153},
																																			expr: &litMatcher{
																																				pos:        position{line: 191, col: 44, offset: 7154},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 191, col: 48, offset: 7158,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&litMatcher{
																											pos:        position{line: 185, col: 40, offset: 6886},
																											val:        "=",
																											ignoreCase: false,
																										},
																										&labeledExpr{
																											pos:   position{line: 185, col: 44, offset: 6890},
																											label: "value",
																											expr: &actionExpr{
																												pos: position{line: 195, col: 19, offset: 7217},
																												run: (*parser).callonDelimitedBlock412,
																												expr: &labeledExpr{
																													pos:   position{line: 195, col: 19, offset: 7217},
																													label: "value",
																													expr: &zeroOrMoreExpr{
																														pos: position{line: 195, col: 25, offset: 7223},
																														expr: &seqExpr{
																															pos: position{line: 195, col: 26, offset: 7224},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 195, col: 26, offset: 7224},
																																	expr: &litMatcher{
																																		pos:        position{line: 195, col: 27, offset: 7225},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 195, col: 31, offset: 7229},
																																	expr: &litMatcher{
																																		pos:        position{line: 195, col: 32, offset: 7230},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 195, col: 36, offset: 7234},
																																	expr: &litMatcher{
																																		pos:        position{line: 195, col: 37, offset: 7235},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 195, col: 41, offset: 7239,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&zeroOrOneExpr{
																											pos: position{line: 185, col: 67, offset: 6913},
																											expr: &litMatcher{
																												pos:        position{line: 185, col: 67, offset: 6913},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&zeroOrMoreExpr{
																											pos: position{line: 185, col: 72, offset: 6918},
																											expr: &choiceExpr{
																												pos: position{line: 947, col: 7, offset: 37802},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 947, col: 7, offset: 37802},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 947, col: 13, offset: 37808},
																														run: (*parser).callonDelimitedBlock428,
																														expr: &litMatcher{
																															pos:        position{line: 947, col: 13, offset: 37808},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 187, col: 5, offset: 7002},
																								run: (*parser).callonDelimitedBlock430,
																								expr: &seqExpr{
																									pos: position{line: 187, col: 5, offset: 7002},
																									exprs: []interface{}{
																										&labeledExpr{
																											pos:   position{line: 187, col: 5, offset: 7002},
																											label: "key",
																											expr: &actionExpr{
																												pos: position{line: 191, col: 17, offset: 7127},
																												run: (*parser).callonDelimitedBlock433,
																												expr: &seqExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 191, col: 17, offset: 7127},
																															expr: &actionExpr{
																																pos: position{line: 231, col: 14, offset: 8648},
																																run: (*parser).callonDelimitedBlock436,
																																expr: &litMatcher{
																																	pos:        position{line: 231, col: 14, offset: 8648},
																																	val:        "verse",
																																	ignoreCase: false,
																																},
																															},
																														},
																														&labeledExpr{
																															pos:   position{line: 191, col: 28, offset: 7138},
																															label: "key",
																															expr: &oneOrMoreExpr{
																																pos: position{line: 191, col: 32, offset: 7142},
																																expr: &seqExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 191, col: 33, offset: 7143},
																																			expr: &litMatcher{
																																				pos:        position{line: 191, col: 34, offset: 7144},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 191, col: 38, offset: 7148},
																																			expr: &litMatcher{
																																				pos:        position{line: 191, col: 39, offset: 7149},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 191, col: 43, offset: 7153},
																																			expr: &litMatcher{
																																				pos:        position{line: 191, col: 44, offset: 7154},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 191, col: 48, offset: 7158,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&zeroOrOneExpr{
																											pos: position{line: 187, col: 24, offset: 7021},
																											expr: &litMatcher{
																												pos:        position{line: 187, col: 24, offset: 7021},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&zeroOrMoreExpr{
																											pos: position{line: 187, col: 29, offset: 7026},
																											expr: &choiceExpr{
																												pos: position{line: 947, col: 7, offset: 37802},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 947, col: 7, offset: 37802},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 947, col: 13, offset: 37808},
																														run: (*parser).callonDelimitedBlock453,
																														expr: &litMatcher{
																															pos:        position{line: 947, col: 13, offset: 37808},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 181, col: 59, offset: 6775},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
													},
													&zeroOrMoreExpr{
														pos: position{line: 136, col: 131, offset: 5298},
														expr: &choiceExpr{
															pos: position{line: 947, col: 7, offset: 37802},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 947, col: 7, offset: 37802},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 947, col: 13, offset: 37808},
																	run: (*parser).callonDelimitedBlock459,
																	expr: &litMatcher{
																		pos:        position{line: 947, col: 13, offset: 37808},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 955, col: 8, offset: 37904},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 951, col: 12, offset: 37864},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 951, col: 21, offset: 37873},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 953, col: 8, offset: 37893},
																expr: &anyMatcher{
																	line: 953, col: 9, offset: 37894,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 856, col: 26, offset: 34903},
									val:        "////",
									ignoreCase: false,
								},
								&zeroOrMoreExpr{
									pos: position{line: 858, col: 70, offset: 34980},
									expr: &choiceExpr{
										pos: position{line: 947, col: 7, offset: 37802},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 947, col: 7, offset: 37802},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 947, col: 13, offset: 37808},
												run: (*parser).callonDelimitedBlock470,
												expr: &litMatcher{
													pos:        position{line: 947, col: 13, offset: 37808},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 951, col: 12, offset: 37864},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 951, col: 12, offset: 37864},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 951, col: 21, offset: 37873},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 858, col: 82, offset: 34992},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 858, col: 90, offset: 35000},
										expr: &actionExpr{
											pos: position{line: 862, col: 21, offset: 35205},
											run: (*parser).callonDelimitedBlock477,
											expr: &seqExpr{
												pos: position{line: 862, col: 21, offset: 35205},
												exprs: []interface{}{
													&zeroOrMoreExpr{
														pos: position{line: 862, col: 21, offset: 35205},
														expr: &seqExpr{
															pos: position{line: 862, col: 22, offset: 35206},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 862, col: 22, offset: 35206},
																	expr: &litMatcher{
																		pos:        position{line: 856, col: 26, offset: 34903},
																		val:        "////",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 862, col: 45, offset: 35229},
																	expr: &choiceExpr{
																		pos: position{line: 955, col: 8, offset: 37904},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 951, col: 12, offset: 37864},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 951, col: 21, offset: 37873},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																			&notExpr{
																				pos: position{line: 953, col: 8, offset: 37893},
																				expr: &anyMatcher{
																					line: 953, col: 9, offset: 37894,
																				},
																			},
																		},
																	},
																},
																&anyMatcher{
																	line: 862, col: 50, offset: 35234,
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 955, col: 8, offset: 37904},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 951, col: 12, offset: 37864},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 951, col: 21, offset: 37873},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 953, col: 8, offset: 37893},
																expr: &anyMatcher{
																	line: 953, col: 9, offset: 37894,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 858, col: 112, offset: 35022},
									alternatives: []interface{}{
										&seqExpr{
											pos: position{line: 858, col: 113, offset: 35023},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 856, col: 26, offset: 34903},
													val:        "////",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 858, col: 135, offset: 35045},
													expr: &choiceExpr{
														pos: position{line: 947, col: 7, offset: 37802},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 947, col: 7, offset: 37802},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 947, col: 13, offset: 37808},
																run: (*parser).callonDelimitedBlock501,
																expr: &litMatcher{
																	pos:        position{line: 947, col: 13, offset: 37808},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 955, col: 8, offset: 37904},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 951, col: 12, offset: 37864},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 951, col: 21, offset: 37873},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 953, col: 8, offset: 37893},
															expr: &anyMatcher{
																line: 953, col: 9, offset: 37894,
															},
														},
													},
												},
											},
										},
										&notExpr{
											pos: position{line: 953, col: 8, offset: 37893},
											expr: &anyMatcher{
												line: 953, col: 9, offset: 37894,
											},
										},
									},
								},
							},
						},
					},
					&ruleRefExpr{
						pos:  position{line: 722, col: 78, offset: 30089},
						name: "VerseBlock",
					},
					&ruleRefExpr{
						pos:  position{line: 722, col: 91, offset: 30102},
						name: "QuoteBlock",
					},
				},
			},
		},
		{
			name: "FencedBlock",
			pos:  position{line: 730, col: 1, offset: 30321},
			expr: &actionExpr{
				pos: position{line: 730, col: 16, offset: 30336},
				run: (*parser).callonFencedBlock1,
				expr: &seqExpr{
					pos: position{line: 730, col: 16, offset: 30336},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 730, col: 16, offset: 30336},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 730, col: 27, offset: 30347},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5188},
									run: (*parser).callonFencedBlock5,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5188},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5188},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5194},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 145, col: 14, offset: 5645},
															run: (*parser).callonFencedBlock9,
															expr: &labeledExpr{
																pos:   position{line: 145, col: 14, offset: 5645},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 151, col: 20, offset: 5775},
																	run: (*parser).callonFencedBlock11,
																	expr: &seqExpr{
																		pos: position{line: 151, col: 20, offset: 5775},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 151, col: 20, offset: 5775},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 151, col: 25, offset: 5780},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 933, col: 7, offset: 37526},
																					run: (*parser).callonFencedBlock15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 933, col: 7, offset: 37526},
																						expr: &seqExpr{
																							pos: position{line: 933, col: 8, offset: 37527},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 933, col: 8, offset: 37527},
																									expr: &choiceExpr{
																										pos: position{line: 951, col: 12, offset: 37864},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 951, col: 12, offset: 37864},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 951, col: 21, offset: 37873},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 17, offset: 37536},
																									expr: &choiceExpr{
																										pos: position{line: 947, col: 7, offset: 37802},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 947, col: 7, offset: 37802},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 947, col: 13, offset: 37808},
																												run: (*parser).callonFencedBlock25,
																												expr: &litMatcher{
																													pos:        position{line: 947, col: 13, offset: 37808},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 21, offset: 37540},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 22, offset: 37541},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 26, offset: 37545},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 27, offset: 37546},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 31, offset: 37550},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 32, offset: 37551},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 37, offset: 37556},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 38, offset: 37557},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 933, col: 42, offset: 37561,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 151, col: 33, offset: 5788},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 5, offset: 5691},
															run: (*parser).callonFencedBlock37,
															expr: &seqExpr{
																pos: position{line: 147, col: 5, offset: 5691},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 5, offset: 5691},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 10, offset: 5696},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 933, col: 7, offset: 37526},
																			run: (*parser).callonFencedBlock41,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 933, col: 7, offset: 37526},
																				expr: &seqExpr{
																					pos: position{line: 933, col: 8, offset: 37527},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 933, col: 8, offset: 37527},
																							expr: &choiceExpr{
																								pos: position{line: 951, col: 12, offset: 37864},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 17, offset: 37536},
																							expr: &choiceExpr{
																								pos: position{line: 947, col: 7, offset: 37802},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 947, col: 7, offset: 37802},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 947, col: 13, offset: 37808},
																										run: (*parser).callonFencedBlock51,
																										expr: &litMatcher{
																											pos:        position{line: 947, col: 13, offset: 37808},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 21, offset: 37540},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 22, offset: 37541},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 26, offset: 37545},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 27, offset: 37546},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 31, offset: 37550},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 32, offset: 37551},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 37, offset: 37556},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 38, offset: 37557},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 933, col: 42, offset: 37561,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 18, offset: 5704},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 17, offset: 5997},
															run: (*parser).callonFencedBlock63,
															expr: &seqExpr{
																pos: position{line: 157, col: 17, offset: 5997},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 17, offset: 5997},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 21, offset: 6001},
																		expr: &litMatcher{
																			pos:        position{line: 157, col: 22, offset: 6002},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 157, col: 26, offset: 6006},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonFencedBlock71,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 30, offset: 6010},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 161, col: 24, offset: 6115},
																			run: (*parser).callonFencedBlock74,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 161, col: 24, offset: 6115},
																				expr: &seqExpr{
																					pos: position{line: 161, col: 25, offset: 6116},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 161, col: 25, offset: 6116},
																							expr: &choiceExpr{
																								pos: position{line: 951, col: 12, offset: 37864},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 161, col: 34, offset: 6125,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 167, col: 16, offset: 6274},
															run: (*parser).callonFencedBlock82,
															expr: &seqExpr{
																pos: position{line: 167, col: 16, offset: 6274},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 167, col: 16, offset: 6274},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 167, col: 21, offset: 6279},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonFencedBlock88,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 167, col: 25, offset: 6283},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 171, col: 23, offset: 6387},
																			run: (*parser).callonFencedBlock91,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 171, col: 23, offset: 6387},
																				expr: &seqExpr{
																					pos: position{line: 171, col: 24, offset: 6388},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 171, col: 24, offset: 6388},
																							expr: &choiceExpr{
																								pos: position{line: 951, col: 12, offset: 37864},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 171, col: 33, offset: 6397},
																							expr: &litMatcher{
																								pos:        position{line: 171, col: 34, offset: 6398},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 171, col: 38, offset: 6402,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 167, col: 51, offset: 6309},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 30, offset: 6551},
															run: (*parser).callonFencedBlock102,
															expr: &seqExpr{
																pos: position{line: 176, col: 30, offset: 6551},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 30, offset: 6551},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 34, offset: 6555},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 494, col: 19, offset: 19202},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 494, col: 19, offset: 19202},
																					run: (*parser).callonFencedBlock107,
																					expr: &litMatcher{
																						pos:        position{line: 494, col: 19, offset: 19202},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 496, col: 5, offset: 19240},
																					run: (*parser).callonFencedBlock109,
																					expr: &litMatcher{
																						pos:        position{line: 496, col: 5, offset: 19240},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 498, col: 5, offset: 19280},
																					run: (*parser).callonFencedBlock111,
																					expr: &litMatcher{
																						pos:        position{line: 498, col: 5, offset: 19280},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 500, col: 5, offset: 19330},
																					run: (*parser).callonFencedBlock113,
																					expr: &litMatcher{
																						pos:        position{line: 500, col: 5, offset: 19330},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 502, col: 5, offset: 19376},
																					run: (*parser).callonFencedBlock115,
																					expr: &litMatcher{
																						pos:        position{line: 502, col: 5, offset: 19376},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 53, offset: 6574},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 199, col: 21, offset: 7299},
															run: (*parser).callonFencedBlock118,
															expr: &litMatcher{
																pos:        position{line: 199, col: 21, offset: 7299},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 19, offset: 6735},
															run: (*parser).callonFencedBlock120,
															expr: &seqExpr{
																pos: position{line: 181, col: 19, offset: 6735},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 19, offset: 6735},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 23, offset: 6739},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonFencedBlock126,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 27, offset: 6743},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 181, col: 38, offset: 6754},
																			expr: &choiceExpr{
																				pos: position{line: 185, col: 21, offset: 6867},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						run: (*parser).callonFencedBlock131,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 21, offset: 6867},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonFencedBlock134,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonFencedBlock137,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 185, col: 40, offset: 6886},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 185, col: 44, offset: 6890},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 195, col: 19, offset: 7217},
																										run: (*parser).callonFencedBlock151,
																										expr: &labeledExpr{
																											pos:   position{line: 195, col: 19, offset: 7217},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 195, col: 25, offset: 7223},
																												expr: &seqExpr{
																													pos: position{line: 195, col: 26, offset: 7224},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 195, col: 26, offset: 7224},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 27, offset: 7225},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 31, offset: 7229},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 32, offset: 7230},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 36, offset: 7234},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 37, offset: 7235},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 195, col: 41, offset: 7239,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 67, offset: 6913},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 67, offset: 6913},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 72, offset: 6918},
																									expr: &choiceExpr{
																										pos: position{line: 947, col: 7, offset: 37802},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 947, col: 7, offset: 37802},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 947, col: 13, offset: 37808},
																												run: (*parser).callonFencedBlock167,
																												expr: &litMatcher{
																													pos:        position{line: 947, col: 13, offset: 37808},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						run: (*parser).callonFencedBlock169,
																						expr: &seqExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 187, col: 5, offset: 7002},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonFencedBlock172,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonFencedBlock175,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 187, col: 24, offset: 7021},
																									expr: &litMatcher{
																										pos:        position{line: 187, col: 24, offset: 7021},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 187, col: 29, offset: 7026},
																									expr: &choiceExpr{
																										pos: position{line: 947, col: 7, offset: 37802},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 947, col: 7, offset: 37802},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 947, col: 13, offset: 37808},
																												run: (*parser).callonFencedBlock192,
																												expr: &litMatcher{
																													pos:        position{line: 947, col: 13, offset: 37808},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 181, col: 59, offset: 6775},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5298},
												expr: &choiceExpr{
													pos: position{line: 947, col: 7, offset: 37802},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 947, col: 7, offset: 37802},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 947, col: 13, offset: 37808},
															run: (*parser).callonFencedBlock198,
															expr: &litMatcher{
																pos:        position{line: 947, col: 13, offset: 37808},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 955, col: 8, offset: 37904},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 951, col: 12, offset: 37864},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 951, col: 21, offset: 37873},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 953, col: 8, offset: 37893},
														expr: &anyMatcher{
															line: 953, col: 9, offset: 37894,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 728, col: 25, offset: 30314},
							val:        "```",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 730, col: 68, offset: 30388},
							expr: &choiceExpr{
								pos: position{line: 947, col: 7, offset: 37802},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 947, col: 7, offset: 37802},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 947, col: 13, offset: 37808},
										run: (*parser).callonFencedBlock209,
										expr: &litMatcher{
											pos:        position{line: 947, col: 13, offset: 37808},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 951, col: 12, offset: 37864},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 951, col: 12, offset: 37864},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 951, col: 21, offset: 37873},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 730, col: 80, offset: 30400},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 730, col: 88, offset: 30408},
								expr: &choiceExpr{
									pos: position{line: 730, col: 89, offset: 30409},
									alternatives: []interface{}{
										&ruleRefExpr{
											pos:  position{line: 730, col: 89, offset: 30409},
											name: "List",
										},
										&ruleRefExpr{
											pos:  position{line: 730, col: 96, offset: 30416},
											name: "BlockParagraph",
										},
										&actionExpr{
											pos: position{line: 914, col: 14, offset: 37155},
											run: (*parser).callonFencedBlock219,
											expr: &seqExpr{
												pos: position{line: 914, col: 14, offset: 37155},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 914, col: 14, offset: 37155},
														expr: &notExpr{
															pos: position{line: 953, col: 8, offset: 37893},
															expr: &anyMatcher{
																line: 953, col: 9, offset: 37894,
															},
														},
													},
													&zeroOrMoreExpr{
														pos: position{line: 914, col: 19, offset: 37160},
														expr: &choiceExpr{
															pos: position{line: 947, col: 7, offset: 37802},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 947, col: 7, offset: 37802},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 947, col: 13, offset: 37808},
																	run: (*parser).callonFencedBlock227,
																	expr: &litMatcher{
																		pos:        position{line: 947, col: 13, offset: 37808},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 955, col: 8, offset: 37904},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 951, col: 12, offset: 37864},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 951, col: 21, offset: 37873},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 953, col: 8, offset: 37893},
																expr: &anyMatcher{
																	line: 953, col: 9, offset: 37894,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 730, col: 126, offset: 30446},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 730, col: 127, offset: 30447},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 728, col: 25, offset: 30314},
											val:        "```",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 730, col: 148, offset: 30468},
											expr: &choiceExpr{
												pos: position{line: 947, col: 7, offset: 37802},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 947, col: 7, offset: 37802},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 947, col: 13, offset: 37808},
														run: (*parser).callonFencedBlock240,
														expr: &litMatcher{
															pos:        position{line: 947, col: 13, offset: 37808},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 955, col: 8, offset: 37904},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 951, col: 12, offset: 37864},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 951, col: 21, offset: 37873},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 953, col: 8, offset: 37893},
													expr: &anyMatcher{
														line: 953, col: 9, offset: 37894,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 953, col: 8, offset: 37893},
									expr: &anyMatcher{
										line: 953, col: 9, offset: 37894,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "ExampleBlock",
			pos:  position{line: 757, col: 1, offset: 31452},
			expr: &actionExpr{
				pos: position{line: 757, col: 17, offset: 31468},
				run: (*parser).callonExampleBlock1,
				expr: &seqExpr{
					pos: position{line: 757, col: 17, offset: 31468},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 757, col: 17, offset: 31468},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 757, col: 28, offset: 31479},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5188},
									run: (*parser).callonExampleBlock5,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5188},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5188},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5194},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 145, col: 14, offset: 5645},
															run: (*parser).callonExampleBlock9,
															expr: &labeledExpr{
																pos:   position{line: 145, col: 14, offset: 5645},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 151, col: 20, offset: 5775},
																	run: (*parser).callonExampleBlock11,
																	expr: &seqExpr{
																		pos: position{line: 151, col: 20, offset: 5775},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 151, col: 20, offset: 5775},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 151, col: 25, offset: 5780},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 933, col: 7, offset: 37526},
																					run: (*parser).callonExampleBlock15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 933, col: 7, offset: 37526},
																						expr: &seqExpr{
																							pos: position{line: 933, col: 8, offset: 37527},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 933, col: 8, offset: 37527},
																									expr: &choiceExpr{
																										pos: position{line: 951, col: 12, offset: 37864},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 951, col: 12, offset: 37864},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 951, col: 21, offset: 37873},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 17, offset: 37536},
																									expr: &choiceExpr{
																										pos: position{line: 947, col: 7, offset: 37802},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 947, col: 7, offset: 37802},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 947, col: 13, offset: 37808},
																												run: (*parser).callonExampleBlock25,
																												expr: &litMatcher{
																													pos:        position{line: 947, col: 13, offset: 37808},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 21, offset: 37540},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 22, offset: 37541},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 26, offset: 37545},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 27, offset: 37546},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 31, offset: 37550},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 32, offset: 37551},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 37, offset: 37556},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 38, offset: 37557},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 933, col: 42, offset: 37561,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 151, col: 33, offset: 5788},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 5, offset: 5691},
															run: (*parser).callonExampleBlock37,
															expr: &seqExpr{
																pos: position{line: 147, col: 5, offset: 5691},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 5, offset: 5691},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 10, offset: 5696},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 933, col: 7, offset: 37526},
																			run: (*parser).callonExampleBlock41,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 933, col: 7, offset: 37526},
																				expr: &seqExpr{
																					pos: position{line: 933, col: 8, offset: 37527},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 933, col: 8, offset: 37527},
																							expr: &choiceExpr{
																								pos: position{line: 951, col: 12, offset: 37864},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 17, offset: 37536},
																							expr: &choiceExpr{
																								pos: position{line: 947, col: 7, offset: 37802},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 947, col: 7, offset: 37802},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 947, col: 13, offset: 37808},
																										run: (*parser).callonExampleBlock51,
																										expr: &litMatcher{
																											pos:        position{line: 947, col: 13, offset: 37808},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 21, offset: 37540},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 22, offset: 37541},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 26, offset: 37545},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 27, offset: 37546},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 31, offset: 37550},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 32, offset: 37551},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 37, offset: 37556},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 38, offset: 37557},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 933, col: 42, offset: 37561,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 18, offset: 5704},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 17, offset: 5997},
															run: (*parser).callonExampleBlock63,
															expr: &seqExpr{
																pos: position{line: 157, col: 17, offset: 5997},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 17, offset: 5997},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 21, offset: 6001},
																		expr: &litMatcher{
																			pos:        position{line: 157, col: 22, offset: 6002},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 157, col: 26, offset: 6006},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonExampleBlock71,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 30, offset: 6010},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 161, col: 24, offset: 6115},
																			run: (*parser).callonExampleBlock74,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 161, col: 24, offset: 6115},
																				expr: &seqExpr{
																					pos: position{line: 161, col: 25, offset: 6116},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 161, col: 25, offset: 6116},
																							expr: &choiceExpr{
																								pos: position{line: 951, col: 12, offset: 37864},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 161, col: 34, offset: 6125,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 167, col: 16, offset: 6274},
															run: (*parser).callonExampleBlock82,
															expr: &seqExpr{
																pos: position{line: 167, col: 16, offset: 6274},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 167, col: 16, offset: 6274},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 167, col: 21, offset: 6279},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonExampleBlock88,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 167, col: 25, offset: 6283},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 171, col: 23, offset: 6387},
																			run: (*parser).callonExampleBlock91,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 171, col: 23, offset: 6387},
																				expr: &seqExpr{
																					pos: position{line: 171, col: 24, offset: 6388},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 171, col: 24, offset: 6388},
																							expr: &choiceExpr{
																								pos: position{line: 951, col: 12, offset: 37864},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 171, col: 33, offset: 6397},
																							expr: &litMatcher{
																								pos:        position{line: 171, col: 34, offset: 6398},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 171, col: 38, offset: 6402,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 167, col: 51, offset: 6309},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 30, offset: 6551},
															run: (*parser).callonExampleBlock102,
															expr: &seqExpr{
																pos: position{line: 176, col: 30, offset: 6551},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 30, offset: 6551},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 34, offset: 6555},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 494, col: 19, offset: 19202},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 494, col: 19, offset: 19202},
																					run: (*parser).callonExampleBlock107,
																					expr: &litMatcher{
																						pos:        position{line: 494, col: 19, offset: 19202},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 496, col: 5, offset: 19240},
																					run: (*parser).callonExampleBlock109,
																					expr: &litMatcher{
																						pos:        position{line: 496, col: 5, offset: 19240},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 498, col: 5, offset: 19280},
																					run: (*parser).callonExampleBlock111,
																					expr: &litMatcher{
																						pos:        position{line: 498, col: 5, offset: 19280},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 500, col: 5, offset: 19330},
																					run: (*parser).callonExampleBlock113,
																					expr: &litMatcher{
																						pos:        position{line: 500, col: 5, offset: 19330},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 502, col: 5, offset: 19376},
																					run: (*parser).callonExampleBlock115,
																					expr: &litMatcher{
																						pos:        position{line: 502, col: 5, offset: 19376},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 53, offset: 6574},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 199, col: 21, offset: 7299},
															run: (*parser).callonExampleBlock118,
															expr: &litMatcher{
																pos:        position{line: 199, col: 21, offset: 7299},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 19, offset: 6735},
															run: (*parser).callonExampleBlock120,
															expr: &seqExpr{
																pos: position{line: 181, col: 19, offset: 6735},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 19, offset: 6735},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 23, offset: 6739},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonExampleBlock126,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 27, offset: 6743},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 181, col: 38, offset: 6754},
																			expr: &choiceExpr{
																				pos: position{line: 185, col: 21, offset: 6867},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						run: (*parser).callonExampleBlock131,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 21, offset: 6867},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonExampleBlock134,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonExampleBlock137,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 185, col: 40, offset: 6886},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 185, col: 44, offset: 6890},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 195, col: 19, offset: 7217},
																										run: (*parser).callonExampleBlock151,
																										expr: &labeledExpr{
																											pos:   position{line: 195, col: 19, offset: 7217},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 195, col: 25, offset: 7223},
																												expr: &seqExpr{
																													pos: position{line: 195, col: 26, offset: 7224},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 195, col: 26, offset: 7224},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 27, offset: 7225},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 31, offset: 7229},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 32, offset: 7230},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 36, offset: 7234},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 37, offset: 7235},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 195, col: 41, offset: 7239,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 67, offset: 6913},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 67, offset: 6913},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 72, offset: 6918},
																									expr: &choiceExpr{
																										pos: position{line: 947, col: 7, offset: 37802},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 947, col: 7, offset: 37802},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 947, col: 13, offset: 37808},
																												run: (*parser).callonExampleBlock167,
																												expr: &litMatcher{
																													pos:        position{line: 947, col: 13, offset: 37808},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						run: (*parser).callonExampleBlock169,
																						expr: &seqExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 187, col: 5, offset: 7002},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonExampleBlock172,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonExampleBlock175,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 187, col: 24, offset: 7021},
																									expr: &litMatcher{
																										pos:        position{line: 187, col: 24, offset: 7021},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 187, col: 29, offset: 7026},
																									expr: &choiceExpr{
																										pos: position{line: 947, col: 7, offset: 37802},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 947, col: 7, offset: 37802},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 947, col: 13, offset: 37808},
																												run: (*parser).callonExampleBlock192,
																												expr: &litMatcher{
																													pos:        position{line: 947, col: 13, offset: 37808},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 181, col: 59, offset: 6775},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5298},
												expr: &choiceExpr{
													pos: position{line: 947, col: 7, offset: 37802},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 947, col: 7, offset: 37802},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 947, col: 13, offset: 37808},
															run: (*parser).callonExampleBlock198,
															expr: &litMatcher{
																pos:        position{line: 947, col: 13, offset: 37808},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 955, col: 8, offset: 37904},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 951, col: 12, offset: 37864},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 951, col: 21, offset: 37873},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 953, col: 8, offset: 37893},
														expr: &anyMatcher{
															line: 953, col: 9, offset: 37894,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 755, col: 26, offset: 31444},
							val:        "====",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 757, col: 70, offset: 31521},
							expr: &choiceExpr{
								pos: position{line: 947, col: 7, offset: 37802},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 947, col: 7, offset: 37802},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 947, col: 13, offset: 37808},
										run: (*parser).callonExampleBlock209,
										expr: &litMatcher{
											pos:        position{line: 947, col: 13, offset: 37808},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 951, col: 12, offset: 37864},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 951, col: 12, offset: 37864},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 951, col: 21, offset: 37873},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 757, col: 82, offset: 31533},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 757, col: 90, offset: 31541},
								expr: &choiceExpr{
									pos: position{line: 757, col: 91, offset: 31542},
									alternatives: []interface{}{
										&ruleRefExpr{
											pos:  position{line: 757, col: 91, offset: 31542},
											name: "List",
										},
										&ruleRefExpr{
											pos:  position{line: 757, col: 98, offset: 31549},
											name: "BlockParagraph",
										},
										&actionExpr{
											pos: position{line: 914, col: 14, offset: 37155},
											run: (*parser).callonExampleBlock219,
											expr: &seqExpr{
												pos: position{line: 914, col: 14, offset: 37155},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 914, col: 14, offset: 37155},
														expr: &notExpr{
															pos: position{line: 953, col: 8, offset: 37893},
															expr: &anyMatcher{
																line: 953, col: 9, offset: 37894,
															},
														},
													},
													&zeroOrMoreExpr{
														pos: position{line: 914, col: 19, offset: 37160},
														expr: &choiceExpr{
															pos: position{line: 947, col: 7, offset: 37802},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 947, col: 7, offset: 37802},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 947, col: 13, offset: 37808},
																	run: (*parser).callonExampleBlock227,
																	expr: &litMatcher{
																		pos:        position{line: 947, col: 13, offset: 37808},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 955, col: 8, offset: 37904},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 951, col: 12, offset: 37864},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 951, col: 21, offset: 37873},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 953, col: 8, offset: 37893},
																expr: &anyMatcher{
																	line: 953, col: 9, offset: 37894,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 757, col: 129, offset: 31580},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 757, col: 130, offset: 31581},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 755, col: 26, offset: 31444},
											val:        "====",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 757, col: 152, offset: 31603},
											expr: &choiceExpr{
												pos: position{line: 947, col: 7, offset: 37802},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 947, col: 7, offset: 37802},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 947, col: 13, offset: 37808},
														run: (*parser).callonExampleBlock240,
														expr: &litMatcher{
															pos:        position{line: 947, col: 13, offset: 37808},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 955, col: 8, offset: 37904},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 951, col: 12, offset: 37864},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 951, col: 21, offset: 37873},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 953, col: 8, offset: 37893},
													expr: &anyMatcher{
														line: 953, col: 9, offset: 37894,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 953, col: 8, offset: 37893},
									expr: &anyMatcher{
										line: 953, col: 9, offset: 37894,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "BlockParagraph",
			pos:  position{line: 763, col: 1, offset: 31758},
			expr: &actionExpr{
				pos: position{line: 763, col: 20, offset: 31777},
				run: (*parser).callonBlockParagraph1,
				expr: &labeledExpr{
					pos:   position{line: 763, col: 20, offset: 31777},
					label: "lines",
					expr: &oneOrMoreExpr{
						pos: position{line: 763, col: 26, offset: 31783},
						expr: &ruleRefExpr{
							pos:  position{line: 763, col: 27, offset: 31784},
							name: "BlockParagraphLine",
						},
					},
				},
			},
		},
		{
			name: "BlockParagraphLine",
			pos:  position{line: 767, col: 1, offset: 31869},
			expr: &actionExpr{
				pos: position{line: 767, col: 23, offset: 31891},
				run: (*parser).callonBlockParagraphLine1,
				expr: &seqExpr{
					pos: position{line: 767, col: 23, offset: 31891},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 767, col: 23, offset: 31891},
							expr: &actionExpr{
								pos: position{line: 405, col: 26, offset: 14956},
								run: (*parser).callonBlockParagraphLine4,
								expr: &seqExpr{
									pos: position{line: 405, col: 26, offset: 14956},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 405, col: 26, offset: 14956},
											expr: &choiceExpr{
												pos: position{line: 947, col: 7, offset: 37802},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 947, col: 7, offset: 37802},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 947, col: 13, offset: 37808},
														run: (*parser).callonBlockParagraphLine9,
														expr: &litMatcher{
															pos:        position{line: 947, col: 13, offset: 37808},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 405, col: 30, offset: 14960},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 407, col: 5, offset: 15015},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 407, col: 5, offset: 15015},
														run: (*parser).callonBlockParagraphLine13,
														expr: &litMatcher{
															pos:        position{line: 407, col: 5, offset: 15015},
															val:        ".....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 409, col: 9, offset: 15128},
														run: (*parser).callonBlockParagraphLine15,
														expr: &litMatcher{
															pos:        position{line: 409, col: 9, offset: 15128},
															val:        "....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 411, col: 9, offset: 15239},
														run: (*parser).callonBlockParagraphLine17,
														expr: &litMatcher{
															pos:        position{line: 411, col: 9, offset: 15239},
															val:        "...",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 413, col: 9, offset: 15348},
														run: (*parser).callonBlockParagraphLine19,
														expr: &litMatcher{
															pos:        position{line: 413, col: 9, offset: 15348},
															val:        "..",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 415, col: 9, offset: 15455},
														run: (*parser).callonBlockParagraphLine21,
														expr: &litMatcher{
															pos:        position{line: 415, col: 9, offset: 15455},
															val:        ".",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 418, col: 9, offset: 15582},
														run: (*parser).callonBlockParagraphLine23,
														expr: &seqExpr{
															pos: position{line: 418, col: 9, offset: 15582},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 418, col: 9, offset: 15582},
																	expr: &charClassMatcher{
																		pos:        position{line: 418, col: 10, offset: 15583},
																		val:        "[0-9]",
																		ranges:     []rune{'0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 418, col: 18, offset: 15591},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 420, col: 9, offset: 15694},
														run: (*parser).callonBlockParagraphLine28,
														expr: &seqExpr{
															pos: position{line: 420, col: 9, offset: 15694},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 420, col: 9, offset: 15694},
																	expr: &charClassMatcher{
																		pos:        position{line: 420, col: 10, offset: 15695},
																		val:        "[a-z]",
																		ranges:     []rune{'a', 'z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 420, col: 18, offset: 15703},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 422, col: 9, offset: 15809},
														run: (*parser).callonBlockParagraphLine33,
														expr: &seqExpr{
															pos: position{line: 422, col: 9, offset: 15809},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 422, col: 9, offset: 15809},
																	expr: &charClassMatcher{
																		pos:        position{line: 422, col: 10, offset: 15810},
																		val:        "[A-Z]",
																		ranges:     []rune{'A', 'Z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 422, col: 18, offset: 15818},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 424, col: 9, offset: 15924},
														run: (*parser).callonBlockParagraphLine38,
														expr: &seqExpr{
															pos: position{line: 424, col: 9, offset: 15924},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 424, col: 9, offset: 15924},
																	expr: &charClassMatcher{
																		pos:        position{line: 424, col: 10, offset: 15925},
																		val:        "[a-z]",
																		ranges:     []rune{'a', 'z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 424, col: 18, offset: 15933},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 426, col: 9, offset: 16039},
														run: (*parser).callonBlockParagraphLine43,
														expr: &seqExpr{
															pos: position{line: 426, col: 9, offset: 16039},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 426, col: 9, offset: 16039},
																	expr: &charClassMatcher{
																		pos:        position{line: 426, col: 10, offset: 16040},
																		val:        "[A-Z]",
																		ranges:     []rune{'A', 'Z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 426, col: 18, offset: 16048},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 428, col: 8, offset: 16153},
											expr: &choiceExpr{
												pos: position{line: 947, col: 7, offset: 37802},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 947, col: 7, offset: 37802},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 947, col: 13, offset: 37808},
														run: (*parser).callonBlockParagraphLine51,
														expr: &litMatcher{
															pos:        position{line: 947, col: 13, offset: 37808},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 768, col: 9, offset: 31925},
							expr: &actionExpr{
								pos: position{line: 444, col: 5, offset: 16811},
								run: (*parser).callonBlockParagraphLine54,
								expr: &seqExpr{
									pos: position{line: 444, col: 5, offset: 16811},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 444, col: 5, offset: 16811},
											expr: &choiceExpr{
												pos: position{line: 947, col: 7, offset: 37802},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 947, col: 7, offset: 37802},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 947, col: 13, offset: 37808},
														run: (*parser).callonBlockParagraphLine59,
														expr: &litMatcher{
															pos:        position{line: 947, col: 13, offset: 37808},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 444, col: 9, offset: 16815},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 445, col: 9, offset: 16832},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 445, col: 9, offset: 16832},
														run: (*parser).callonBlockParagraphLine63,
														expr: &litMatcher{
															pos:        position{line: 445, col: 9, offset: 16832},
															val:        "*****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 448, col: 11, offset: 17001},
														run: (*parser).callonBlockParagraphLine65,
														expr: &litMatcher{
															pos:        position{line: 448, col: 11, offset: 17001},
															val:        "****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 451, col: 11, offset: 17170},
														run: (*parser).callonBlockParagraphLine67,
														expr: &litMatcher{
															pos:        position{line: 451, col: 11, offset: 17170},
															val:        "***",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 454, col: 11, offset: 17339},
														run: (*parser).callonBlockParagraphLine69,
														expr: &litMatcher{
															pos:        position{line: 454, col: 11, offset: 17339},
															val:        "**",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 457, col: 11, offset: 17505},
														run: (*parser).callonBlockParagraphLine71,
														expr: &litMatcher{
															pos:        position{line: 457, col: 11, offset: 17505},
															val:        "*",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 460, col: 11, offset: 17669},
														run: (*parser).callonBlockParagraphLine73,
														expr: &litMatcher{
															pos:        position{line: 460, col: 11, offset: 17669},
															val:        "-",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 462, col: 12, offset: 17816},
											expr: &choiceExpr{
												pos: position{line: 947, col: 7, offset: 37802},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 947, col: 7, offset: 37802},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 947, col: 13, offset: 37808},
														run: (*parser).callonBlockParagraphLine78,
														expr: &litMatcher{
															pos:        position{line: 947, col: 13, offset: 37808},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 769, col: 9, offset: 31961},
							expr: &seqExpr{
								pos: position{line: 769, col: 11, offset: 31963},
								exprs: []interface{}{
									&actionExpr{
										pos: position{line: 480, col: 24, offset: 18652},
										run: (*parser).callonBlockParagraphLine82,
										expr: &zeroOrMoreExpr{
											pos: position{line: 480, col: 24, offset: 18652},
											expr: &seqExpr{
												pos: position{line: 480, col: 25, offset: 18653},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 480, col: 25, offset: 18653},
														expr: &choiceExpr{
															pos: position{line: 951, col: 12, offset: 37864},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 951, col: 12, offset: 37864},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 951, col: 21, offset: 37873},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
															},
														},
													},
													&notExpr{
														pos: position{line: 480, col: 34, offset: 18662},
														expr: &litMatcher{
															pos:        position{line: 480, col: 35, offset: 18663},
															val:        "::",
															ignoreCase: false,
														},
													},
													&anyMatcher{
														line: 480, col: 40, offset: 18668,
													},
												},
											},
										},
									},
									&litMatcher{
										pos:        position{line: 485, col: 30, offset: 18798},
										val:        "::",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 485, col: 35, offset: 18803},
										expr: &choiceExpr{
											pos: position{line: 485, col: 36, offset: 18804},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 947, col: 7, offset: 37802},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 947, col: 13, offset: 37808},
													run: (*parser).callonBlockParagraphLine96,
													expr: &litMatcher{
														pos:        position{line: 947, col: 13, offset: 37808},
														val:        "\t",
														ignoreCase: false,
													},
												},
												&litMatcher{
													pos:        position{line: 951, col: 12, offset: 37864},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 951, col: 21, offset: 37873},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 770, col: 9, offset: 32018},
							expr: &actionExpr{
								pos: position{line: 390, col: 25, offset: 14402},
								run: (*parser).callonBlockParagraphLine101,
								expr: &seqExpr{
									pos: position{line: 390, col: 25, offset: 14402},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 390, col: 25, offset: 14402},
											val:        "+",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 390, col: 29, offset: 14406},
											expr: &choiceExpr{
												pos: position{line: 947, col: 7, offset: 37802},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 947, col: 7, offset: 37802},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 947, col: 13, offset: 37808},
														run: (*parser).callonBlockParagraphLine107,
														expr: &litMatcher{
															pos:        position{line: 947, col: 13, offset: 37808},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 955, col: 8, offset: 37904},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 951, col: 12, offset: 37864},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 951, col: 21, offset: 37873},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 953, col: 8, offset: 37893},
													expr: &anyMatcher{
														line: 953, col: 9, offset: 37894,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 771, col: 9, offset: 32051},
							expr: &choiceExpr{
								pos: position{line: 724, col: 19, offset: 30132},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 899, col: 26, offset: 36632},
										val:        "....",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 728, col: 25, offset: 30314},
										val:        "```",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 735, col: 26, offset: 30646},
										val:        "----",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 755, col: 26, offset: 31444},
										val:        "====",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 856, col: 26, offset: 34903},
										val:        "////",
										ignoreCase: false,
									},
									&litMatcher{
										pos:        position{line: 777, col: 24, offset: 32165},
										val:        "____",
										ignoreCase: false,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 772, col: 9, offset: 32078},
							label: "line",
							expr: &ruleRefExpr{
								pos:  position{line: 772, col: 15, offset: 32084},
								name: "InlineElements",
							},
						},
					},
				},
			},
		},
		{
			name: "QuoteBlock",
			pos:  position{line: 779, col: 1, offset: 32198},
			expr: &actionExpr{
				pos: position{line: 779, col: 15, offset: 32212},
				run: (*parser).callonQuoteBlock1,
				expr: &seqExpr{
					pos: position{line: 779, col: 15, offset: 32212},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 779, col: 15, offset: 32212},
							label: "attributes",
							expr: &oneOrMoreExpr{
								pos: position{line: 779, col: 26, offset: 32223},
								expr: &actionExpr{
									pos: position{line: 787, col: 5, offset: 32521},
									run: (*parser).callonQuoteBlock5,
									expr: &seqExpr{
										pos: position{line: 787, col: 5, offset: 32521},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 787, col: 5, offset: 32521},
												label: "attribute",
												expr: &choiceExpr{
													pos: position{line: 203, col: 20, offset: 7402},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 203, col: 20, offset: 7402},
															run: (*parser).callonQuoteBlock9,
															expr: &seqExpr{
																pos: position{line: 203, col: 20, offset: 7402},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 203, col: 20, offset: 7402},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 203, col: 24, offset: 7406},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 215, col: 14, offset: 7912},
																			run: (*parser).callonQuoteBlock13,
																			expr: &seqExpr{
																				pos: position{line: 215, col: 14, offset: 7912},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 215, col: 14, offset: 7912},
																						expr: &actionExpr{
																							pos: position{line: 231, col: 14, offset: 8648},
																							run: (*parser).callonQuoteBlock16,
																							expr: &litMatcher{
																								pos:        position{line: 231, col: 14, offset: 8648},
																								val:        "verse",
																								ignoreCase: false,
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 215, col: 25, offset: 7923},
																						expr: &seqExpr{
																							pos: position{line: 215, col: 26, offset: 7924},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 215, col: 26, offset: 7924},
																									expr: &choiceExpr{
																										pos: position{line: 955, col: 8, offset: 37904},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 951, col: 12, offset: 37864},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 951, col: 21, offset: 37873},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																											&notExpr{
																												pos: position{line: 953, col: 8, offset: 37893},
																												expr: &anyMatcher{
																													line: 953, col: 9, offset: 37894,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 31, offset: 7929},
																									expr: &choiceExpr{
																										pos: position{line: 947, col: 7, offset: 37802},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 947, col: 7, offset: 37802},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 947, col: 13, offset: 37808},
																												run: (*parser).callonQuoteBlock29,
																												expr: &litMatcher{
																													pos:        position{line: 947, col: 13, offset: 37808},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 35, offset: 7933},
																									expr: &litMatcher{
																										pos:        position{line: 215, col: 36, offset: 7934},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 40, offset: 7938},
																									expr: &litMatcher{
																										pos:        position{line: 215, col: 41, offset: 7939},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 45, offset: 7943},
																									expr: &litMatcher{
																										pos:        position{line: 215, col: 46, offset: 7944},
																										val:        "#",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 50, offset: 7948},
																									expr: &litMatcher{
																										pos:        position{line: 215, col: 51, offset: 7949},
																										val:        "=",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 55, offset: 7953},
																									expr: &choiceExpr{
																										pos: position{line: 494, col: 19, offset: 19202},
																										alternatives: []interface{}{
																											&actionExpr{
																												pos: position{line: 494, col: 19, offset: 19202},
																												run: (*parser).callonQuoteBlock41,
																												expr: &litMatcher{
																													pos:        position{line: 494, col: 19, offset: 19202},
																													val:        "TIP",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 496, col: 5, offset: 19240},
																												run: (*parser).callonQuoteBlock43,
																												expr: &litMatcher{
																													pos:        position{line: 496, col: 5, offset: 19240},
																													val:        "NOTE",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 498, col: 5, offset: 19280},
																												run: (*parser).callonQuoteBlock45,
																												expr: &litMatcher{
																													pos:        position{line: 498, col: 5, offset: 19280},
																													val:        "IMPORTANT",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 500, col: 5, offset: 19330},
																												run: (*parser).callonQuoteBlock47,
																												expr: &litMatcher{
																													pos:        position{line: 500, col: 5, offset: 19330},
																													val:        "WARNING",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 502, col: 5, offset: 19376},
																												run: (*parser).callonQuoteBlock49,
																												expr: &litMatcher{
																													pos:        position{line: 502, col: 5, offset: 19376},
																													val:        "CAUTION",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&anyMatcher{
																									line: 215, col: 71, offset: 7969,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 203, col: 41, offset: 7423},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonQuoteBlock55,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 203, col: 45, offset: 7427},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 203, col: 49, offset: 7431},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 235, col: 16, offset: 8707},
																			run: (*parser).callonQuoteBlock59,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 235, col: 16, offset: 8707},
																				expr: &seqExpr{
																					pos: position{line: 235, col: 17, offset: 8708},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 235, col: 17, offset: 8708},
																							expr: &choiceExpr{
																								pos: position{line: 955, col: 8, offset: 37904},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 953, col: 8, offset: 37893},
																										expr: &anyMatcher{
																											line: 953, col: 9, offset: 37894,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 235, col: 22, offset: 8713},
																							expr: &litMatcher{
																								pos:        position{line: 235, col: 23, offset: 8714},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 235, col: 27, offset: 8718},
																							expr: &litMatcher{
																								pos:        position{line: 235, col: 28, offset: 8719},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 235, col: 32, offset: 8723,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 203, col: 70, offset: 7452},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 203, col: 74, offset: 7456},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 239, col: 15, offset: 8777},
																			run: (*parser).callonQuoteBlock75,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 239, col: 15, offset: 8777},
																				expr: &seqExpr{
																					pos: position{line: 239, col: 16, offset: 8778},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 239, col: 16, offset: 8778},
																							expr: &choiceExpr{
																								pos: position{line: 955, col: 8, offset: 37904},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 953, col: 8, offset: 37893},
																										expr: &anyMatcher{
																											line: 953, col: 9, offset: 37894,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 239, col: 21, offset: 8783},
																							expr: &litMatcher{
																								pos:        position{line: 239, col: 22, offset: 8784},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 239, col: 26, offset: 8788},
																							expr: &litMatcher{
																								pos:        position{line: 239, col: 27, offset: 8789},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 239, col: 31, offset: 8793,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 203, col: 93, offset: 7475},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 207, col: 5, offset: 7618},
															run: (*parser).callonQuoteBlock90,
															expr: &seqExpr{
																pos: position{line: 207, col: 5, offset: 7618},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 207, col: 5, offset: 7618},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 207, col: 9, offset: 7622},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 215, col: 14, offset: 7912},
																			run: (*parser).callonQuoteBlock94,
																			expr: &seqExpr{
																				pos: position{line: 215, col: 14, offset: 7912},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 215, col: 14, offset: 7912},
																						expr: &actionExpr{
																							pos: position{line: 231, col: 14, offset: 8648},
																							run: (*parser).callonQuoteBlock97,
																							expr: &litMatcher{
																								pos:        position{line: 231, col: 14, offset: 8648},
																								val:        "verse",
																								ignoreCase: false,
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 215, col: 25, offset: 7923},
																						expr: &seqExpr{
																							pos: position{line: 215, col: 26, offset: 7924},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 215, col: 26, offset: 7924},
																									expr: &choiceExpr{
																										pos: position{line: 955, col: 8, offset: 37904},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 951, col: 12, offset: 37864},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 951, col: 21, offset: 37873},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																											&notExpr{
																												pos: position{line: 953, col: 8, offset: 37893},
																												expr: &anyMatcher{
																													line: 953, col: 9, offset: 37894,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 31, offset: 7929},
																									expr: &choiceExpr{
																										pos: position{line: 947, col: 7, offset: 37802},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 947, col: 7, offset: 37802},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 947, col: 13, offset: 37808},
																												run: (*parser).callonQuoteBlock110,
																												expr: &litMatcher{
																													pos:        position{line: 947, col: 13, offset: 37808},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 35, offset: 7933},
																									expr: &litMatcher{
																										pos:        position{line: 215, col: 36, offset: 7934},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 40, offset: 7938},
																									expr: &litMatcher{
																										pos:        position{line: 215, col: 41, offset: 7939},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 45, offset: 7943},
																									expr: &litMatcher{
																										pos:        position{line: 215, col: 46, offset: 7944},
																										val:        "#",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 50, offset: 7948},
																									expr: &litMatcher{
																										pos:        position{line: 215, col: 51, offset: 7949},
																										val:        "=",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 55, offset: 7953},
																									expr: &choiceExpr{
																										pos: position{line: 494, col: 19, offset: 19202},
																										alternatives: []interface{}{
																											&actionExpr{
																												pos: position{line: 494, col: 19, offset: 19202},
																												run: (*parser).callonQuoteBlock122,
																												expr: &litMatcher{
																													pos:        position{line: 494, col: 19, offset: 19202},
																													val:        "TIP",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 496, col: 5, offset: 19240},
																												run: (*parser).callonQuoteBlock124,
																												expr: &litMatcher{
																													pos:        position{line: 496, col: 5, offset: 19240},
																													val:        "NOTE",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 498, col: 5, offset: 19280},
																												run: (*parser).callonQuoteBlock126,
																												expr: &litMatcher{
																													pos:        position{line: 498, col: 5, offset: 19280},
																													val:        "IMPORTANT",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 500, col: 5, offset: 19330},
																												run: (*parser).callonQuoteBlock128,
																												expr: &litMatcher{
																													pos:        position{line: 500, col: 5, offset: 19330},
																													val:        "WARNING",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 502, col: 5, offset: 19376},
																												run: (*parser).callonQuoteBlock130,
																												expr: &litMatcher{
																													pos:        position{line: 502, col: 5, offset: 19376},
																													val:        "CAUTION",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&anyMatcher{
																									line: 215, col: 71, offset: 7969,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 207, col: 26, offset: 7639},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonQuoteBlock136,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 207, col: 30, offset: 7643},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 207, col: 34, offset: 7647},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 235, col: 16, offset: 8707},
																			run: (*parser).callonQuoteBlock140,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 235, col: 16, offset: 8707},
																				expr: &seqExpr{
																					pos: position{line: 235, col: 17, offset: 8708},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 235, col: 17, offset: 8708},
																							expr: &choiceExpr{
																								pos: position{line: 955, col: 8, offset: 37904},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 953, col: 8, offset: 37893},
																										expr: &anyMatcher{
																											line: 953, col: 9, offset: 37894,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 235, col: 22, offset: 8713},
																							expr: &litMatcher{
																								pos:        position{line: 235, col: 23, offset: 8714},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 235, col: 27, offset: 8718},
																							expr: &litMatcher{
																								pos:        position{line: 235, col: 28, offset: 8719},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 235, col: 32, offset: 8723,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 207, col: 55, offset: 7668},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 211, col: 5, offset: 7799},
															run: (*parser).callonQuoteBlock155,
															expr: &seqExpr{
																pos: position{line: 211, col: 5, offset: 7799},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 211, col: 5, offset: 7799},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 211, col: 9, offset: 7803},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 215, col: 14, offset: 7912},
																			run: (*parser).callonQuoteBlock159,
																			expr: &seqExpr{
																				pos: position{line: 215, col: 14, offset: 7912},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 215, col: 14, offset: 7912},
																						expr: &actionExpr{
																							pos: position{line: 231, col: 14, offset: 8648},
																							run: (*parser).callonQuoteBlock162,
																							expr: &litMatcher{
																								pos:        position{line: 231, col: 14, offset: 8648},
																								val:        "verse",
																								ignoreCase: false,
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 215, col: 25, offset: 7923},
																						expr: &seqExpr{
																							pos: position{line: 215, col: 26, offset: 7924},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 215, col: 26, offset: 7924},
																									expr: &choiceExpr{
																										pos: position{line: 955, col: 8, offset: 37904},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 951, col: 12, offset: 37864},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 951, col: 21, offset: 37873},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																											&notExpr{
																												pos: position{line: 953, col: 8, offset: 37893},
																												expr: &anyMatcher{
																													line: 953, col: 9, offset: 37894,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 31, offset: 7929},
																									expr: &choiceExpr{
																										pos: position{line: 947, col: 7, offset: 37802},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 947, col: 7, offset: 37802},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 947, col: 13, offset: 37808},
																												run: (*parser).callonQuoteBlock175,
																												expr: &litMatcher{
																													pos:        position{line: 947, col: 13, offset: 37808},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 35, offset: 7933},
																									expr: &litMatcher{
																										pos:        position{line: 215, col: 36, offset: 7934},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 40, offset: 7938},
																									expr: &litMatcher{
																										pos:        position{line: 215, col: 41, offset: 7939},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 45, offset: 7943},
																									expr: &litMatcher{
																										pos:        position{line: 215, col: 46, offset: 7944},
																										val:        "#",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 50, offset: 7948},
																									expr: &litMatcher{
																										pos:        position{line: 215, col: 51, offset: 7949},
																										val:        "=",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 215, col: 55, offset: 7953},
																									expr: &choiceExpr{
																										pos: position{line: 494, col: 19, offset: 19202},
																										alternatives: []interface{}{
																											&actionExpr{
																												pos: position{line: 494, col: 19, offset: 19202},
																												run: (*parser).callonQuoteBlock187,
																												expr: &litMatcher{
																													pos:        position{line: 494, col: 19, offset: 19202},
																													val:        "TIP",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 496, col: 5, offset: 19240},
																												run: (*parser).callonQuoteBlock189,
																												expr: &litMatcher{
																													pos:        position{line: 496, col: 5, offset: 19240},
																													val:        "NOTE",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 498, col: 5, offset: 19280},
																												run: (*parser).callonQuoteBlock191,
																												expr: &litMatcher{
																													pos:        position{line: 498, col: 5, offset: 19280},
																													val:        "IMPORTANT",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 500, col: 5, offset: 19330},
																												run: (*parser).callonQuoteBlock193,
																												expr: &litMatcher{
																													pos:        position{line: 500, col: 5, offset: 19330},
																													val:        "WARNING",
																													ignoreCase: false,
																												},
																											},
																											&actionExpr{
																												pos: position{line: 502, col: 5, offset: 19376},
																												run: (*parser).callonQuoteBlock195,
																												expr: &litMatcher{
																													pos:        position{line: 502, col: 5, offset: 19376},
																													val:        "CAUTION",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&anyMatcher{
																									line: 215, col: 71, offset: 7969,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 211, col: 26, offset: 7820},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonQuoteBlock201,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 211, col: 30, offset: 7824},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 787, col: 33, offset: 32549},
												expr: &choiceExpr{
													pos: position{line: 947, col: 7, offset: 37802},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 947, col: 7, offset: 37802},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 947, col: 13, offset: 37808},
															run: (*parser).callonQuoteBlock207,
															expr: &litMatcher{
																pos:        position{line: 947, col: 13, offset: 37808},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 955, col: 8, offset: 37904},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 951, col: 12, offset: 37864},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 951, col: 21, offset: 37873},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 953, col: 8, offset: 37893},
														expr: &anyMatcher{
															line: 953, col: 9, offset: 37894,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 777, col: 24, offset: 32165},
							val:        "____",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 779, col: 70, offset: 32267},
							expr: &choiceExpr{
								pos: position{line: 947, col: 7, offset: 37802},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 947, col: 7, offset: 37802},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 947, col: 13, offset: 37808},
										run: (*parser).callonQuoteBlock218,
										expr: &litMatcher{
											pos:        position{line: 947, col: 13, offset: 37808},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 951, col: 12, offset: 37864},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 951, col: 12, offset: 37864},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 951, col: 21, offset: 37873},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 779, col: 82, offset: 32279},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 779, col: 90, offset: 32287},
								expr: &ruleRefExpr{
									pos:  position{line: 779, col: 91, offset: 32288},
									name: "QuoteBlockContent",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 779, col: 113, offset: 32310},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 779, col: 114, offset: 32311},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 777, col: 24, offset: 32165},
											val:        "____",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 779, col: 134, offset: 32331},
											expr: &choiceExpr{
												pos: position{line: 947, col: 7, offset: 37802},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 947, col: 7, offset: 37802},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 947, col: 13, offset: 37808},
														run: (*parser).callonQuoteBlock232,
														expr: &litMatcher{
															pos:        position{line: 947, col: 13, offset: 37808},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 955, col: 8, offset: 37904},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 951, col: 12, offset: 37864},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 951, col: 21, offset: 37873},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 953, col: 8, offset: 37893},
													expr: &anyMatcher{
														line: 953, col: 9, offset: 37894,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 953, col: 8, offset: 37893},
									expr: &anyMatcher{
										line: 953, col: 9, offset: 37894,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "QuoteBlockContent",
			pos:  position{line: 794, col: 1, offset: 32681},
			expr: &actionExpr{
				pos: position{line: 795, col: 5, offset: 32707},
				run: (*parser).callonQuoteBlockContent1,
				expr: &seqExpr{
					pos: position{line: 795, col: 5, offset: 32707},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 795, col: 5, offset: 32707},
							expr: &litMatcher{
								pos:        position{line: 777, col: 24, offset: 32165},
								val:        "____",
								ignoreCase: false,
							},
						},
						&notExpr{
							pos: position{line: 795, col: 26, offset: 32728},
							expr: &notExpr{
								pos: position{line: 953, col: 8, offset: 37893},
								expr: &anyMatcher{
									line: 953, col: 9, offset: 37894,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 795, col: 31, offset: 32733},
							label: "element",
							expr: &ruleRefExpr{
								pos:  position{line: 795, col: 40, offset: 32742},
								name: "DocumentBlock",
							},
						},
					},
				},
			},
		},
		{
			name: "VerseBlock",
			pos:  position{line: 800, col: 1, offset: 32811},
			expr: &actionExpr{
				pos: position{line: 800, col: 15, offset: 32825},
				run: (*parser).callonVerseBlock1,
				expr: &seqExpr{
					pos: position{line: 800, col: 15, offset: 32825},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 800, col: 15, offset: 32825},
							label: "attributes",
							expr: &oneOrMoreExpr{
								pos: position{line: 800, col: 26, offset: 32836},
								expr: &actionExpr{
									pos: position{line: 808, col: 5, offset: 33133},
									run: (*parser).callonVerseBlock5,
									expr: &seqExpr{
										pos: position{line: 808, col: 5, offset: 33133},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 808, col: 5, offset: 33133},
												label: "attribute",
												expr: &choiceExpr{
													pos: position{line: 219, col: 20, offset: 8138},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 219, col: 20, offset: 8138},
															run: (*parser).callonVerseBlock9,
															expr: &seqExpr{
																pos: position{line: 219, col: 20, offset: 8138},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 219, col: 20, offset: 8138},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 219, col: 24, offset: 8142},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 231, col: 14, offset: 8648},
																			run: (*parser).callonVerseBlock13,
																			expr: &litMatcher{
																				pos:        position{line: 231, col: 14, offset: 8648},
																				val:        "verse",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 219, col: 41, offset: 8159},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonVerseBlock18,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 219, col: 45, offset: 8163},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 219, col: 49, offset: 8167},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 235, col: 16, offset: 8707},
																			run: (*parser).callonVerseBlock22,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 235, col: 16, offset: 8707},
																				expr: &seqExpr{
																					pos: position{line: 235, col: 17, offset: 8708},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 235, col: 17, offset: 8708},
																							expr: &choiceExpr{
																								pos: position{line: 955, col: 8, offset: 37904},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 953, col: 8, offset: 37893},
																										expr: &anyMatcher{
																											line: 953, col: 9, offset: 37894,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 235, col: 22, offset: 8713},
																							expr: &litMatcher{
																								pos:        position{line: 235, col: 23, offset: 8714},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 235, col: 27, offset: 8718},
																							expr: &litMatcher{
																								pos:        position{line: 235, col: 28, offset: 8719},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 235, col: 32, offset: 8723,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 219, col: 70, offset: 8188},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 219, col: 74, offset: 8192},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 239, col: 15, offset: 8777},
																			run: (*parser).callonVerseBlock38,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 239, col: 15, offset: 8777},
																				expr: &seqExpr{
																					pos: position{line: 239, col: 16, offset: 8778},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 239, col: 16, offset: 8778},
																							expr: &choiceExpr{
																								pos: position{line: 955, col: 8, offset: 37904},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 953, col: 8, offset: 37893},
																										expr: &anyMatcher{
																											line: 953, col: 9, offset: 37894,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 239, col: 21, offset: 8783},
																							expr: &litMatcher{
																								pos:        position{line: 239, col: 22, offset: 8784},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 239, col: 26, offset: 8788},
																							expr: &litMatcher{
																								pos:        position{line: 239, col: 27, offset: 8789},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 239, col: 31, offset: 8793,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 219, col: 93, offset: 8211},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 223, col: 5, offset: 8354},
															run: (*parser).callonVerseBlock53,
															expr: &seqExpr{
																pos: position{line: 223, col: 5, offset: 8354},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 223, col: 5, offset: 8354},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 223, col: 9, offset: 8358},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 231, col: 14, offset: 8648},
																			run: (*parser).callonVerseBlock57,
																			expr: &litMatcher{
																				pos:        position{line: 231, col: 14, offset: 8648},
																				val:        "verse",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 223, col: 26, offset: 8375},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonVerseBlock62,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 223, col: 30, offset: 8379},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 223, col: 34, offset: 8383},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 235, col: 16, offset: 8707},
																			run: (*parser).callonVerseBlock66,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 235, col: 16, offset: 8707},
																				expr: &seqExpr{
																					pos: position{line: 235, col: 17, offset: 8708},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 235, col: 17, offset: 8708},
																							expr: &choiceExpr{
																								pos: position{line: 955, col: 8, offset: 37904},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 953, col: 8, offset: 37893},
																										expr: &anyMatcher{
																											line: 953, col: 9, offset: 37894,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 235, col: 22, offset: 8713},
																							expr: &litMatcher{
																								pos:        position{line: 235, col: 23, offset: 8714},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 235, col: 27, offset: 8718},
																							expr: &litMatcher{
																								pos:        position{line: 235, col: 28, offset: 8719},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 235, col: 32, offset: 8723,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 223, col: 55, offset: 8404},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 227, col: 5, offset: 8535},
															run: (*parser).callonVerseBlock81,
															expr: &seqExpr{
																pos: position{line: 227, col: 5, offset: 8535},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 227, col: 5, offset: 8535},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 227, col: 9, offset: 8539},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 231, col: 14, offset: 8648},
																			run: (*parser).callonVerseBlock85,
																			expr: &litMatcher{
																				pos:        position{line: 231, col: 14, offset: 8648},
																				val:        "verse",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 227, col: 26, offset: 8556},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonVerseBlock90,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 227, col: 30, offset: 8560},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 808, col: 33, offset: 33161},
												expr: &choiceExpr{
													pos: position{line: 947, col: 7, offset: 37802},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 947, col: 7, offset: 37802},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 947, col: 13, offset: 37808},
															run: (*parser).callonVerseBlock96,
															expr: &litMatcher{
																pos:        position{line: 947, col: 13, offset: 37808},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 955, col: 8, offset: 37904},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 951, col: 12, offset: 37864},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 951, col: 21, offset: 37873},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 953, col: 8, offset: 37893},
														expr: &anyMatcher{
															line: 953, col: 9, offset: 37894,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 777, col: 24, offset: 32165},
							val:        "____",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 800, col: 70, offset: 32880},
							expr: &choiceExpr{
								pos: position{line: 947, col: 7, offset: 37802},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 947, col: 7, offset: 37802},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 947, col: 13, offset: 37808},
										run: (*parser).callonVerseBlock107,
										expr: &litMatcher{
											pos:        position{line: 947, col: 13, offset: 37808},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 951, col: 12, offset: 37864},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 951, col: 12, offset: 37864},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 951, col: 21, offset: 37873},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 800, col: 82, offset: 32892},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 800, col: 90, offset: 32900},
								expr: &ruleRefExpr{
									pos:  position{line: 800, col: 91, offset: 32901},
									name: "VerseBlockContent",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 800, col: 112, offset: 32922},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 800, col: 113, offset: 32923},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 777, col: 24, offset: 32165},
											val:        "____",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 800, col: 133, offset: 32943},
											expr: &choiceExpr{
												pos: position{line: 947, col: 7, offset: 37802},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 947, col: 7, offset: 37802},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 947, col: 13, offset: 37808},
														run: (*parser).callonVerseBlock121,
														expr: &litMatcher{
															pos:        position{line: 947, col: 13, offset: 37808},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 955, col: 8, offset: 37904},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 951, col: 12, offset: 37864},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 951, col: 21, offset: 37873},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 953, col: 8, offset: 37893},
													expr: &anyMatcher{
														line: 953, col: 9, offset: 37894,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 953, col: 8, offset: 37893},
									expr: &anyMatcher{
										line: 953, col: 9, offset: 37894,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "VerseBlockContent",
			pos:  position{line: 812, col: 1, offset: 33210},
			expr: &actionExpr{
				pos: position{line: 812, col: 22, offset: 33231},
				run: (*parser).callonVerseBlockContent1,
				expr: &labeledExpr{
					pos:   position{line: 812, col: 22, offset: 33231},
					label: "lines",
					expr: &oneOrMoreExpr{
						pos: position{line: 812, col: 28, offset: 33237},
						expr: &ruleRefExpr{
							pos:  position{line: 812, col: 29, offset: 33238},
							name: "VerseBlockLine",
						},
					},
				},
			},
		},
		{
			name: "VerseBlockLine",
			pos:  position{line: 816, col: 1, offset: 33318},
			expr: &actionExpr{
				pos: position{line: 816, col: 19, offset: 33336},
				run: (*parser).callonVerseBlockLine1,
				expr: &seqExpr{
					pos: position{line: 816, col: 19, offset: 33336},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 816, col: 19, offset: 33336},
							expr: &litMatcher{
								pos:        position{line: 777, col: 24, offset: 32165},
								val:        "____",
								ignoreCase: false,
							},
						},
						&notExpr{
							pos: position{line: 816, col: 40, offset: 33357},
							expr: &notExpr{
								pos: position{line: 953, col: 8, offset: 37893},
								expr: &anyMatcher{
									line: 953, col: 9, offset: 37894,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 816, col: 45, offset: 33362},
							label: "line",
							expr: &ruleRefExpr{
								pos:  position{line: 816, col: 51, offset: 33368},
								name: "VerseBlockLineContent",
							},
						},
						&choiceExpr{
							pos: position{line: 955, col: 8, offset: 37904},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 951, col: 12, offset: 37864},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 951, col: 21, offset: 37873},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 953, col: 8, offset: 37893},
									expr: &anyMatcher{
										line: 953, col: 9, offset: 37894,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "VerseBlockLineContent",
			pos:  position{line: 820, col: 1, offset: 33444},
			expr: &actionExpr{
				pos: position{line: 820, col: 26, offset: 33469},
				run: (*parser).callonVerseBlockLineContent1,
				expr: &labeledExpr{
					pos:   position{line: 820, col: 26, offset: 33469},
					label: "elements",
					expr: &zeroOrMoreExpr{
						pos: position{line: 820, col: 35, offset: 33478},
						expr: &seqExpr{
							pos: position{line: 820, col: 36, offset: 33479},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 820, col: 36, offset: 33479},
									expr: &litMatcher{
										pos:        position{line: 777, col: 24, offset: 32165},
										val:        "____",
										ignoreCase: false,
									},
								},
								&notExpr{
									pos: position{line: 820, col: 57, offset: 33500},
									expr: &choiceExpr{
										pos: position{line: 955, col: 8, offset: 37904},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 951, col: 12, offset: 37864},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 951, col: 21, offset: 37873},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 953, col: 8, offset: 37893},
												expr: &anyMatcher{
													line: 953, col: 9, offset: 37894,
												},
											},
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 820, col: 62, offset: 33505},
									expr: &choiceExpr{
										pos: position{line: 947, col: 7, offset: 37802},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 947, col: 7, offset: 37802},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 947, col: 13, offset: 37808},
												run: (*parser).callonVerseBlockLineContent16,
												expr: &litMatcher{
													pos:        position{line: 947, col: 13, offset: 37808},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&ruleRefExpr{
									pos:  position{line: 820, col: 66, offset: 33509},
									name: "InlineElement",
								},
								&zeroOrMoreExpr{
									pos: position{line: 820, col: 80, offset: 33523},
									expr: &choiceExpr{
										pos: position{line: 947, col: 7, offset: 37802},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 947, col: 7, offset: 37802},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 947, col: 13, offset: 37808},
												run: (*parser).callonVerseBlockLineContent22,
												expr: &litMatcher{
													pos:        position{line: 947, col: 13, offset: 37808},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Table",
			pos:  position{line: 827, col: 1, offset: 33863},
			expr: &actionExpr{
				pos: position{line: 827, col: 10, offset: 33872},
				run: (*parser).callonTable1,
				expr: &seqExpr{
					pos: position{line: 827, col: 10, offset: 33872},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 827, col: 10, offset: 33872},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 827, col: 21, offset: 33883},
								expr: &actionExpr{
									pos: position{line: 136, col: 21, offset: 5188},
									run: (*parser).callonTable5,
									expr: &seqExpr{
										pos: position{line: 136, col: 21, offset: 5188},
										exprs: []interface{}{
											&labeledExpr{
												pos:   position{line: 136, col: 21, offset: 5188},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 136, col: 27, offset: 5194},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 145, col: 14, offset: 5645},
															run: (*parser).callonTable9,
															expr: &labeledExpr{
																pos:   position{line: 145, col: 14, offset: 5645},
																label: "id",
																expr: &actionExpr{
																	pos: position{line: 151, col: 20, offset: 5775},
																	run: (*parser).callonTable11,
																	expr: &seqExpr{
																		pos: position{line: 151, col: 20, offset: 5775},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 151, col: 20, offset: 5775},
																				val:        "[[",
																				ignoreCase: false,
																			},
																			&labeledExpr{
																				pos:   position{line: 151, col: 25, offset: 5780},
																				label: "id",
																				expr: &actionExpr{
																					pos: position{line: 933, col: 7, offset: 37526},
																					run: (*parser).callonTable15,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 933, col: 7, offset: 37526},
																						expr: &seqExpr{
																							pos: position{line: 933, col: 8, offset: 37527},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 933, col: 8, offset: 37527},
																									expr: &choiceExpr{
																										pos: position{line: 951, col: 12, offset: 37864},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 951, col: 12, offset: 37864},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 951, col: 21, offset: 37873},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 17, offset: 37536},
																									expr: &choiceExpr{
																										pos: position{line: 947, col: 7, offset: 37802},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 947, col: 7, offset: 37802},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 947, col: 13, offset: 37808},
																												run: (*parser).callonTable25,
																												expr: &litMatcher{
																													pos:        position{line: 947, col: 13, offset: 37808},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 21, offset: 37540},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 22, offset: 37541},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 26, offset: 37545},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 27, offset: 37546},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 31, offset: 37550},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 32, offset: 37551},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 933, col: 37, offset: 37556},
																									expr: &litMatcher{
																										pos:        position{line: 933, col: 38, offset: 37557},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 933, col: 42, offset: 37561,
																								},
																							},
																						},
																					},
																				},
																			},
																			&litMatcher{
																				pos:        position{line: 151, col: 33, offset: 5788},
																				val:        "]]",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 147, col: 5, offset: 5691},
															run: (*parser).callonTable37,
															expr: &seqExpr{
																pos: position{line: 147, col: 5, offset: 5691},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 147, col: 5, offset: 5691},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 147, col: 10, offset: 5696},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 933, col: 7, offset: 37526},
																			run: (*parser).callonTable41,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 933, col: 7, offset: 37526},
																				expr: &seqExpr{
																					pos: position{line: 933, col: 8, offset: 37527},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 933, col: 8, offset: 37527},
																							expr: &choiceExpr{
																								pos: position{line: 951, col: 12, offset: 37864},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 17, offset: 37536},
																							expr: &choiceExpr{
																								pos: position{line: 947, col: 7, offset: 37802},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 947, col: 7, offset: 37802},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 947, col: 13, offset: 37808},
																										run: (*parser).callonTable51,
																										expr: &litMatcher{
																											pos:        position{line: 947, col: 13, offset: 37808},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 21, offset: 37540},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 22, offset: 37541},
																								val:        "[",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 26, offset: 37545},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 27, offset: 37546},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 31, offset: 37550},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 32, offset: 37551},
																								val:        "<<",
																								ignoreCase: false,
																							},
																						},
																						&notExpr{
																							pos: position{line: 933, col: 37, offset: 37556},
																							expr: &litMatcher{
																								pos:        position{line: 933, col: 38, offset: 37557},
																								val:        ">>",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 933, col: 42, offset: 37561,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 147, col: 18, offset: 5704},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 157, col: 17, offset: 5997},
															run: (*parser).callonTable63,
															expr: &seqExpr{
																pos: position{line: 157, col: 17, offset: 5997},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 157, col: 17, offset: 5997},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 157, col: 21, offset: 6001},
																		expr: &litMatcher{
																			pos:        position{line: 157, col: 22, offset: 6002},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 157, col: 26, offset: 6006},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonTable71,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 157, col: 30, offset: 6010},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 161, col: 24, offset: 6115},
																			run: (*parser).callonTable74,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 161, col: 24, offset: 6115},
																				expr: &seqExpr{
																					pos: position{line: 161, col: 25, offset: 6116},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 161, col: 25, offset: 6116},
																							expr: &choiceExpr{
																								pos: position{line: 951, col: 12, offset: 37864},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 161, col: 34, offset: 6125,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 167, col: 16, offset: 6274},
															run: (*parser).callonTable82,
															expr: &seqExpr{
																pos: position{line: 167, col: 16, offset: 6274},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 167, col: 16, offset: 6274},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 167, col: 21, offset: 6279},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonTable88,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 167, col: 25, offset: 6283},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 171, col: 23, offset: 6387},
																			run: (*parser).callonTable91,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 171, col: 23, offset: 6387},
																				expr: &seqExpr{
																					pos: position{line: 171, col: 24, offset: 6388},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 171, col: 24, offset: 6388},
																							expr: &choiceExpr{
																								pos: position{line: 951, col: 12, offset: 37864},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 951, col: 12, offset: 37864},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 951, col: 21, offset: 37873},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																						},
																						&notExpr{
																							pos: position{line: 171, col: 33, offset: 6397},
																							expr: &litMatcher{
																								pos:        position{line: 171, col: 34, offset: 6398},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																						&anyMatcher{
																							line: 171, col: 38, offset: 6402,
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 167, col: 51, offset: 6309},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 30, offset: 6551},
															run: (*parser).callonTable102,
															expr: &seqExpr{
																pos: position{line: 176, col: 30, offset: 6551},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 30, offset: 6551},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 34, offset: 6555},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 494, col: 19, offset: 19202},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 494, col: 19, offset: 19202},
																					run: (*parser).callonTable107,
																					expr: &litMatcher{
																						pos:        position{line: 494, col: 19, offset: 19202},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 496, col: 5, offset: 19240},
																					run: (*parser).callonTable109,
																					expr: &litMatcher{
																						pos:        position{line: 496, col: 5, offset: 19240},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 498, col: 5, offset: 19280},
																					run: (*parser).callonTable111,
																					expr: &litMatcher{
																						pos:        position{line: 498, col: 5, offset: 19280},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 500, col: 5, offset: 19330},
																					run: (*parser).callonTable113,
																					expr: &litMatcher{
																						pos:        position{line: 500, col: 5, offset: 19330},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 502, col: 5, offset: 19376},
																					run: (*parser).callonTable115,
																					expr: &litMatcher{
																						pos:        position{line: 502, col: 5, offset: 19376},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 53, offset: 6574},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 199, col: 21, offset: 7299},
															run: (*parser).callonTable118,
															expr: &litMatcher{
																pos:        position{line: 199, col: 21, offset: 7299},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 181, col: 19, offset: 6735},
															run: (*parser).callonTable120,
															expr: &seqExpr{
																pos: position{line: 181, col: 19, offset: 6735},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 181, col: 19, offset: 6735},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 181, col: 23, offset: 6739},
																		expr: &choiceExpr{
																			pos: position{line: 947, col: 7, offset: 37802},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 947, col: 7, offset: 37802},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 947, col: 13, offset: 37808},
																					run: (*parser).callonTable126,
																					expr: &litMatcher{
																						pos:        position{line: 947, col: 13, offset: 37808},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 181, col: 27, offset: 6743},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 181, col: 38, offset: 6754},
																			expr: &choiceExpr{
																				pos: position{line: 185, col: 21, offset: 6867},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 185, col: 21, offset: 6867},
																						run: (*parser).callonTable131,
																						expr: &seqExpr{
																							pos: position{line: 185, col: 21, offset: 6867},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 185, col: 21, offset: 6867},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonTable134,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonTable137,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 185, col: 40, offset: 6886},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 185, col: 44, offset: 6890},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 195, col: 19, offset: 7217},
																										run: (*parser).callonTable151,
																										expr: &labeledExpr{
																											pos:   position{line: 195, col: 19, offset: 7217},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 195, col: 25, offset: 7223},
																												expr: &seqExpr{
																													pos: position{line: 195, col: 26, offset: 7224},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 195, col: 26, offset: 7224},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 27, offset: 7225},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 31, offset: 7229},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 32, offset: 7230},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 195, col: 36, offset: 7234},
																															expr: &litMatcher{
																																pos:        position{line: 195, col: 37, offset: 7235},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 195, col: 41, offset: 7239,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 185, col: 67, offset: 6913},
																									expr: &litMatcher{
																										pos:        position{line: 185, col: 67, offset: 6913},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 185, col: 72, offset: 6918},
																									expr: &choiceExpr{
																										pos: position{line: 947, col: 7, offset: 37802},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 947, col: 7, offset: 37802},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 947, col: 13, offset: 37808},
																												run: (*parser).callonTable167,
																												expr: &litMatcher{
																													pos:        position{line: 947, col: 13, offset: 37808},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 187, col: 5, offset: 7002},
																						run: (*parser).callonTable169,
																						expr: &seqExpr{
																							pos: position{line: 187, col: 5, offset: 7002},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 187, col: 5, offset: 7002},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 191, col: 17, offset: 7127},
																										run: (*parser).callonTable172,
																										expr: &seqExpr{
																											pos: position{line: 191, col: 17, offset: 7127},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 191, col: 17, offset: 7127},
																													expr: &actionExpr{
																														pos: position{line: 231, col: 14, offset: 8648},
																														run: (*parser).callonTable175,
																														expr: &litMatcher{
																															pos:        position{line: 231, col: 14, offset: 8648},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 191, col: 28, offset: 7138},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 191, col: 32, offset: 7142},
																														expr: &seqExpr{
																															pos: position{line: 191, col: 33, offset: 7143},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 191, col: 33, offset: 7143},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 34, offset: 7144},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 38, offset: 7148},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 39, offset: 7149},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 191, col: 43, offset: 7153},
																																	expr: &litMatcher{
																																		pos:        position{line: 191, col: 44, offset: 7154},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 191, col: 48, offset: 7158,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 187, col: 24, offset: 7021},
																									expr: &litMatcher{
																										pos:        position{line: 187, col: 24, offset: 7021},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 187, col: 29, offset: 7026},
																									expr: &choiceExpr{
																										pos: position{line: 947, col: 7, offset: 37802},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 947, col: 7, offset: 37802},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 947, col: 13, offset: 37808},
																												run: (*parser).callonTable192,
																												expr: &litMatcher{
																													pos:        position{line: 947, col: 13, offset: 37808},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 181, col: 59, offset: 6775},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 136, col: 131, offset: 5298},
												expr: &choiceExpr{
													pos: position{line: 947, col: 7, offset: 37802},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 947, col: 7, offset: 37802},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 947, col: 13, offset: 37808},
															run: (*parser).callonTable198,
															expr: &litMatcher{
																pos:        position{line: 947, col: 13, offset: 37808},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 955, col: 8, offset: 37904},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 951, col: 12, offset: 37864},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 951, col: 21, offset: 37873},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 953, col: 8, offset: 37893},
														expr: &anyMatcher{
															line: 953, col: 9, offset: 37894,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 837, col: 19, offset: 34228},
							val:        "|===",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 828, col: 24, offset: 33927},
							expr: &choiceExpr{
								pos: position{line: 947, col: 7, offset: 37802},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 947, col: 7, offset: 37802},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 947, col: 13, offset: 37808},
										run: (*parser).callonTable209,
										expr: &litMatcher{
											pos:        position{line: 947, col: 13, offset: 37808},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 951, col: 12, offset: 37864},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 951, col: 12, offset: 37864},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 951, col: 21, offset: 37873},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 829, col: 9, offset: 33947},
							label: "header",
							expr: &zeroOrOneExpr{
								pos: position{line: 829, col: 16, offset: 33954},
								expr: &ruleRefExpr{
									pos:  position{line: 829, col: 17, offset: 33955},
									name: "TableLineHeader",
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 830, col: 9, offset: 33981},
							label: "lines",
							expr: &zeroOrMoreExpr{
								pos: position{line: 830, col: 15, offset: 33987},
								expr: &ruleRefExpr{
									pos:  position{line: 830, col: 16, offset: 33988},
									name: "TableLine",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 831, col: 10, offset: 34009},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 831, col: 11, offset: 34010},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 837, col: 19, offset: 34228},
											val:        "|===",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 831, col: 26, offset: 34025},
											expr: &choiceExpr{
												pos: position{line: 947, col: 7, offset: 37802},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 947, col: 7, offset: 37802},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 947, col: 13, offset: 37808},
														run: (*parser).callonTable226,
														expr: &litMatcher{
															pos:        position{line: 947, col: 13, offset: 37808},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 955, col: 8, offset: 37904},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 951, col: 12, offset: 37864},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 951, col: 21, offset: 37873},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 953, col: 8, offset: 37893},
													expr: &anyMatcher{
														line: 953, col: 9, offset: 37894,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 953, col: 8, offset: 37893},
									expr: &anyMatcher{
										line: 953, col: 9, offset: 37894,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "TableLineHeader",
			pos:  position{line: 840, col: 1, offset: 34299},
			expr: &actionExpr{
				pos: position{line: 840, col: 20, offset: 34318},
				run: (*parser).callonTableLineHeader1,
				expr: &seqExpr{
					pos: position{line: 840, col: 20, offset: 34318},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 840, col: 20, offset: 34318},
							expr: &litMatcher{
								pos:        position{line: 837, col: 19, offset: 34228},
								val:        "|===",
								ignoreCase: false,
							},
						},
						&labeledExpr{
							pos:   position{line: 840, col: 36, offset: 34334},
							label: "cells",
							expr: &oneOrMoreExpr{
								pos: position{line: 840, col: 42, offset: 34340},
								expr: &ruleRefExpr{
									pos:  position{line: 840, col: 43, offset: 34341},
									name: "TableCell",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 955, col: 8, offset: 37904},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 951, col: 12, offset: 37864},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 951, col: 21, offset: 37873},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 953, col: 8, offset: 37893},
									expr: &anyMatcher{
										line: 953, col: 9, offset: 37894,
									},
								},
							},
						},
						&actionExpr{
							pos: position{line: 914, col: 14, offset: 37155},
							run: (*parser).callonTableLineHeader13,
							expr: &seqExpr{
								pos: position{line: 914, col: 14, offset: 37155},
								exprs: []interface{}{
									&notExpr{
										pos: position{line: 914, col: 14, offset: 37155},
										expr: &notExpr{
											pos: position{line: 953, col: 8, offset: 37893},
											expr: &anyMatcher{
												line: 953, col: 9, offset: 37894,
											},
										},
									},
									&zeroOrMoreExpr{
										pos: position{line: 914, col: 19, offset: 37160},
										expr: &choiceExpr{
											pos: position{line: 947, col: 7, offset: 37802},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 947, col: 7, offset: 37802},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 947, col: 13, offset: 37808},
													run: (*parser).callonTableLineHeader21,
													expr: &litMatcher{
														pos:        position{line: 947, col: 13, offset: 37808},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&choiceExpr{
										pos: position{line: 955, col: 8, offset: 37904},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 951, col: 12, offset: 37864},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 951, col: 21, offset: 37873},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 953, col: 8, offset: 37893},
												expr: &anyMatcher{
													line: 953, col: 9, offset: 37894,
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "TableLine",
			pos:  position{line: 844, col: 1, offset: 34425},
			expr: &actionExpr{
				pos: position{line: 844, col: 14, offset: 34438},
				run: (*parser).callonTableLine1,
				expr: &seqExpr{
					pos: position{line: 844, col: 14, offset: 34438},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 844, col: 14, offset: 34438},
							expr: &litMatcher{
								pos:        position{line: 837, col: 19, offset: 34228},
								val:        "|===",
								ignoreCase: false,
							},
						},
						&labeledExpr{
							pos:   position{line: 844, col: 30, offset: 34454},
							label: "cells",
							expr: &oneOrMoreExpr{
								pos: position{line: 844, col: 36, offset: 34460},
								expr: &ruleRefExpr{
									pos:  position{line: 844, col: 37, offset: 34461},
									name: "TableCell",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 955, col: 8, offset: 37904},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 951, col: 12, offset: 37864},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 951, col: 21, offset: 37873},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 953, col: 8, offset: 37893},
									expr: &anyMatcher{
										line: 953, col: 9, offset: 37894,
									},
								},
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 844, col: 53, offset: 34477},
							expr: &actionExpr{
								pos: position{line: 914, col: 14, offset: 37155},
								run: (*parser).callonTableLine14,
								expr: &seqExpr{
									pos: position{line: 914, col: 14, offset: 37155},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 914, col: 14, offset: 37155},
											expr: &notExpr{
												pos: position{line: 953, col: 8, offset: 37893},
												expr: &anyMatcher{
													line: 953, col: 9, offset: 37894,
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 914, col: 19, offset: 37160},
											expr: &choiceExpr{
												pos: position{line: 947, col: 7, offset: 37802},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 947, col: 7, offset: 37802},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 947, col: 13, offset: 37808},
														run: (*parser).callonTableLine22,
														expr: &litMatcher{
															pos:        position{line: 947, col: 13, offset: 37808},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 955, col: 8, offset: 37904},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 951, col: 12, offset: 37864},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 951, col: 21, offset: 37873},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 953, col: 8, offset: 37893},
													expr: &anyMatcher{
														line: 953, col: 9, offset: 37894,
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "TableCell",
			pos:  position{line: 848, col: 1, offset: 34546},
			expr: &actionExpr{
				pos: position{line: 848, col: 14, offset: 34559},
				run: (*parser).callonTableCell1,
				expr: &seqExpr{
					pos: position{line: 848, col: 14, offset: 34559},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 835, col: 23, offset: 34201},
							val:        "|",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 835, col: 27, offset: 34205},
							expr: &choiceExpr{
								pos: position{line: 947, col: 7, offset: 37802},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 947, col: 7, offset: 37802},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 947, col: 13, offset: 37808},
										run: (*parser).callonTableCell7,
										expr: &litMatcher{
											pos:        position{line: 947, col: 13, offset: 37808},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 848, col: 33, offset: 34578},
							label: "elements",
							expr: &oneOrMoreExpr{
								pos: position{line: 848, col: 42, offset: 34587},
								expr: &seqExpr{
									pos: position{line: 848, col: 43, offset: 34588},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 848, col: 43, offset: 34588},
											expr: &seqExpr{
												pos: position{line: 835, col: 23, offset: 34201},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 835, col: 23, offset: 34201},
														val:        "|",
														ignoreCase: false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 835, col: 27, offset: 34205},
														expr: &choiceExpr{
															pos: position{line: 947, col: 7, offset: 37802},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 947, col: 7, offset: 37802},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 947, col: 13, offset: 37808},
																	run: (*parser).callonTableCell18,
																	expr: &litMatcher{
																		pos:        position{line: 947, col: 13, offset: 37808},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
										},
										&notExpr{
											pos: position{line: 848, col: 63, offset: 34608},
											expr: &choiceExpr{
												pos: position{line: 955, col: 8, offset: 37904},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 951, col: 12, offset: 37864},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 951, col: 21, offset: 37873},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 953, col: 8, offset: 37893},
														expr: &anyMatcher{
															line: 953, col: 9, offset: 37894,
														},
													},
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 848, col: 68, offset: 34613},
											expr: &choiceExpr{
												pos: position{line: 947, col: 7, offset: 37802},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 947, col: 7, offset: 37802},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 947, col: 13, offset: 37808},
														run: (*parser).callonTableCell29,
														expr: &litMatcher{
															pos:        position{line: 947, col: 13, offset: 37808},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&ruleRefExpr{
											pos:  position{line: 848, col: 72, offset: 34617},
											name: "InlineElement",
										},
										&zeroOrMoreExpr{
											pos: position{line: 848, col: 86, offset: 34631},
											expr: &choiceExpr{
												pos: position{line: 947, col: 7, offset: 37802},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 947, col: 7, offset: 37802},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 947, col: 13, offset: 37808},
														run: (*parser).callonTableCell35,
														expr: &litMatcher{
															pos:        position{line: 947, col: 13, offset: 37808},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "WS",
			pos:  position{line: 947, col: 1, offset: 37796},
			expr: &choiceExpr{
				pos: position{line: 947, col: 7, offset: 37802},
				alternatives: []interface{}{
					&litMatcher{
						pos:        position{line: 947, col: 7, offset: 37802},
						val:        " ",
						ignoreCase: false,
					},
					&actionExpr{
						pos: position{line: 947, col: 13, offset: 37808},
						run: (*parser).callonWS3,
						expr: &litMatcher{
							pos:        position{line: 947, col: 13, offset: 37808},
							val:        "\t",
							ignoreCase: false,
						},
					},
				},
			},
		},
		{
			name: "NEWLINE",
			pos:  position{line: 951, col: 1, offset: 37853},
			expr: &choiceExpr{
				pos: position{line: 951, col: 12, offset: 37864},
				alternatives: []interface{}{
					&litMatcher{
						pos:        position{line: 951, col: 12, offset: 37864},
						val:        "\r\n",
						ignoreCase: false,
					},
					&charClassMatcher{
						pos:        position{line: 951, col: 21, offset: 37873},
						val:        "[\\r\\n]",
						chars:      []rune{'\r', '\n'},
						ignoreCase: false,
						inverted:   false,
					},
				},
			},
		},
	},
}

func (c *current) onDocument1(frontMatter, documentHeader, blocks interface{}) (interface{}, error) {
	return types.NewDocument(frontMatter, documentHeader, blocks.([]interface{}))
}

func (p *parser) callonDocument1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocument1(stack["frontMatter"], stack["documentHeader"], stack["blocks"])
}

func (c *current) onDocumentBlock16() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock16() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock16()
}

func (c *current) onDocumentBlock8() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonDocumentBlock8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock8()
}

func (c *current) onDocumentBlock27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock27()
}

func (c *current) onDocumentBlock36() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock36() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock36()
}

func (c *current) onDocumentBlock23(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeDeclaration(name.(string), nil)
}

func (p *parser) callonDocumentBlock23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock23(stack["name"])
}

func (c *current) onDocumentBlock47() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock47() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock47()
}

func (c *current) onDocumentBlock56() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock56() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock56()
}

func (c *current) onDocumentBlock59() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock59() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock59()
}

func (c *current) onDocumentBlock43(name, value interface{}) (interface{}, error) {
	return types.NewDocumentAttributeDeclaration(name.(string), value)
}

func (p *parser) callonDocumentBlock43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock43(stack["name"], stack["value"])
}

func (c *current) onDocumentBlock76() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock76() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock76()
}

func (c *current) onDocumentBlock85() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock85() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock85()
}

func (c *current) onDocumentBlock72(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeReset(name.(string))
}

func (p *parser) callonDocumentBlock72() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock72(stack["name"])
}

func (c *current) onDocumentBlock96() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock96() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock96()
}

func (c *current) onDocumentBlock105() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock105() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock105()
}

func (c *current) onDocumentBlock92(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeReset(name.(string))
}

func (p *parser) callonDocumentBlock92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock92(stack["name"])
}

func (c *current) onDocumentBlock142() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock142() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock142()
}

func (c *current) onDocumentBlock132() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock132() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock132()
}

func (c *current) onDocumentBlock128(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDocumentBlock128() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock128(stack["id"])
}

func (c *current) onDocumentBlock126(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonDocumentBlock126() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock126(stack["id"])
}

func (c *current) onDocumentBlock168() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock168() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock168()
}

func (c *current) onDocumentBlock158() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock158() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock158()
}

func (c *current) onDocumentBlock154(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDocumentBlock154() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock154(stack["id"])
}

func (c *current) onDocumentBlock188() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock188() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock188()
}

func (c *current) onDocumentBlock191() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock191() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock191()
}

func (c *current) onDocumentBlock180(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonDocumentBlock180() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock180(stack["title"])
}

func (c *current) onDocumentBlock205() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock205() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock205()
}

func (c *current) onDocumentBlock208() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock208() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock208()
}

func (c *current) onDocumentBlock199(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonDocumentBlock199() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock199(stack["role"])
}

func (c *current) onDocumentBlock224() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonDocumentBlock224() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock224()
}

func (c *current) onDocumentBlock226() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonDocumentBlock226() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock226()
}

func (c *current) onDocumentBlock228() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonDocumentBlock228() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock228()
}

func (c *current) onDocumentBlock230() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonDocumentBlock230() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock230()
}

func (c *current) onDocumentBlock232() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonDocumentBlock232() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock232()
}

func (c *current) onDocumentBlock219(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonDocumentBlock219() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock219(stack["k"])
}

func (c *current) onDocumentBlock235() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonDocumentBlock235() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock235()
}

func (c *current) onDocumentBlock243() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock243() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock243()
}

func (c *current) onDocumentBlock254() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock254() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock254()
}

func (c *current) onDocumentBlock251(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock251() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock251(stack["key"])
}

func (c *current) onDocumentBlock268(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock268() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock268(stack["value"])
}

func (c *current) onDocumentBlock284() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock284() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock284()
}

func (c *current) onDocumentBlock248(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentBlock248() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock248(stack["key"], stack["value"])
}

func (c *current) onDocumentBlock292() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock292() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock292()
}

func (c *current) onDocumentBlock289(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock289() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock289(stack["key"])
}

func (c *current) onDocumentBlock309() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock309() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock309()
}

func (c *current) onDocumentBlock286(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentBlock286() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock286(stack["key"])
}

func (c *current) onDocumentBlock237(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonDocumentBlock237() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock237(stack["attributes"])
}

func (c *current) onDocumentBlock315() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock315() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock315()
}

func (c *current) onDocumentBlock122(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonDocumentBlock122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock122(stack["attr"])
}

func (c *current) onDocumentBlock334() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock334() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock334()
}

func (c *current) onDocumentBlock324() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock324() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock324()
}

func (c *current) onDocumentBlock347() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock347() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock347()
}

func (c *current) onDocumentBlock359() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock359() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock359()
}

func (c *current) onDocumentBlock371() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock371() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock371()
}

func (c *current) onDocumentBlock392() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock392() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock392()
}

func (c *current) onDocumentBlock389(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock389() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock389(stack["key"])
}

func (c *current) onDocumentBlock406(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock406() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock406(stack["value"])
}

func (c *current) onDocumentBlock422() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock422() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock422()
}

func (c *current) onDocumentBlock386(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentBlock386() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock386(stack["key"], stack["value"])
}

func (c *current) onDocumentBlock430() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock430() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock430()
}

func (c *current) onDocumentBlock427(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock427() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock427(stack["key"])
}

func (c *current) onDocumentBlock447() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock447() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock447()
}

func (c *current) onDocumentBlock424(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentBlock424() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock424(stack["key"])
}

func (c *current) onDocumentBlock343(alt, width, height, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, height, otherAttrs.([]interface{}))

}

func (p *parser) callonDocumentBlock343() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock343(stack["alt"], stack["width"], stack["height"], stack["otherAttrs"])
}

func (c *current) onDocumentBlock454() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock454() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock454()
}

func (c *current) onDocumentBlock466() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock466() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock466()
}

func (c *current) onDocumentBlock487() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock487() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock487()
}

func (c *current) onDocumentBlock484(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock484() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock484(stack["key"])
}

func (c *current) onDocumentBlock501(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock501() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock501(stack["value"])
}

func (c *current) onDocumentBlock517() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock517() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock517()
}

func (c *current) onDocumentBlock481(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentBlock481() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock481(stack["key"], stack["value"])
}

func (c *current) onDocumentBlock525() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock525() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock525()
}

func (c *current) onDocumentBlock522(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock522() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock522(stack["key"])
}

func (c *current) onDocumentBlock542() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock542() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock542()
}

func (c *current) onDocumentBlock519(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentBlock519() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock519(stack["key"])
}

func (c *current) onDocumentBlock450(alt, width, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonDocumentBlock450() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock450(stack["alt"], stack["width"], stack["otherAttrs"])
}

func (c *current) onDocumentBlock549() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock549() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock549()
}

func (c *current) onDocumentBlock570() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock570() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock570()
}

func (c *current) onDocumentBlock567(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock567() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock567(stack["key"])
}

func (c *current) onDocumentBlock584(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock584() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock584(stack["value"])
}

func (c *current) onDocumentBlock600() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock600() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock600()
}

func (c *current) onDocumentBlock564(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentBlock564() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock564(stack["key"], stack["value"])
}

func (c *current) onDocumentBlock608() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock608() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock608()
}

func (c *current) onDocumentBlock605(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock605() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock605(stack["key"])
}

func (c *current) onDocumentBlock625() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock625() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock625()
}

func (c *current) onDocumentBlock602(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentBlock602() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock602(stack["key"])
}

func (c *current) onDocumentBlock545(alt, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonDocumentBlock545() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock545(stack["alt"], stack["otherAttrs"])
}

func (c *current) onDocumentBlock640() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock640() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock640()
}

func (c *current) onDocumentBlock637(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock637() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock637(stack["key"])
}

func (c *current) onDocumentBlock654(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock654() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock654(stack["value"])
}

func (c *current) onDocumentBlock670() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock670() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock670()
}

func (c *current) onDocumentBlock634(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentBlock634() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock634(stack["key"], stack["value"])
}

func (c *current) onDocumentBlock678() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock678() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock678()
}

func (c *current) onDocumentBlock675(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock675() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock675(stack["key"])
}

func (c *current) onDocumentBlock695() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock695() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock695()
}

func (c *current) onDocumentBlock672(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentBlock672() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock672(stack["key"])
}

func (c *current) onDocumentBlock628(otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(nil, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonDocumentBlock628() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock628(stack["otherAttrs"])
}

func (c *current) onDocumentBlock701() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock701() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock701()
}

func (c *current) onDocumentBlock118(attributes, path, inlineAttributes interface{}) (interface{}, error) {
	return types.NewBlockImage(path.(string), attributes.([]interface{}), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonDocumentBlock118() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock118(stack["attributes"], stack["path"], stack["inlineAttributes"])
}

func (c *current) onDocumentBlock716() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock716() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock716()
}

func (c *current) onDocumentBlock737() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock737() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock737()
}

func (c *current) onDocumentBlock729() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonDocumentBlock729() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock729()
}

func (c *current) onDocumentBlock711() (interface{}, error) {

	return string(c.text), nil
}

func (p *parser) callonDocumentBlock711() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock711()
}

func (c *current) onDocumentBlock708(content interface{}) (interface{}, error) {
	return types.NewLiteralBlock(content.(string))
}

func (p *parser) callonDocumentBlock708() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock708(stack["content"])
}

func (c *current) onDocumentBlock756() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock756() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock756()
}

func (c *current) onDocumentBlock762() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock762() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock762()
}

func (c *current) onDocumentBlock774() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock774() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock774()
}

func (c *current) onDocumentBlock750(content interface{}) (interface{}, error) {
	return types.NewLiteralBlock(content.(string))
}

func (p *parser) callonDocumentBlock750() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock750(stack["content"])
}

func (c *current) onDocumentBlock789() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock789() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock789()
}

func (c *current) onDocumentBlock811() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock811() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock811()
}

func (c *current) onDocumentBlock803() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonDocumentBlock803() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock803()
}

func (c *current) onDocumentBlock795() (interface{}, error) {

	return string(c.text), nil
}

func (p *parser) callonDocumentBlock795() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock795()
}

func (c *current) onDocumentBlock783(content interface{}) (interface{}, error) {
	return types.NewLiteralBlock(content.(string))
}

func (p *parser) callonDocumentBlock783() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock783(stack["content"])
}

func (c *current) onDocumentBlock1(block interface{}) (interface{}, error) {
	// element attribute alone should be take recognized as such
	return block, nil
}

func (p *parser) callonDocumentBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1(stack["block"])
}

func (c *current) onFrontMatter10() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFrontMatter10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFrontMatter10()
}

func (c *current) onFrontMatter1(content interface{}) (interface{}, error) {
	return types.NewYamlFrontMatter(content.(string))
}

func (p *parser) callonFrontMatter1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFrontMatter1(stack["content"])
}

func (c *current) onDocumentHeader13() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader13()
}

func (c *current) onDocumentHeader24() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader24() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader24()
}

func (c *current) onDocumentHeader42() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader42() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader42()
}

func (c *current) onDocumentHeader48() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader48() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader48()
}

func (c *current) onDocumentHeader27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader27()
}

func (c *current) onDocumentHeader67() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader67()
}

func (c *current) onDocumentHeader73() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader73() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader73()
}

func (c *current) onDocumentHeader52() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader52() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader52()
}

func (c *current) onDocumentHeader92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader92()
}

func (c *current) onDocumentHeader98() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader98() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader98()
}

func (c *current) onDocumentHeader77() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader77() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader77()
}

func (c *current) onDocumentHeader102(email interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader102(stack["email"])
}

func (c *current) onDocumentHeader121() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader121()
}

func (c *current) onDocumentHeader128() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader128() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader128()
}

func (c *current) onDocumentHeader19(namePart1, namePart2, namePart3, email interface{}) (interface{}, error) {
	return types.NewDocumentAuthor(namePart1, namePart2, namePart3, email)
}

func (p *parser) callonDocumentHeader19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader19(stack["namePart1"], stack["namePart2"], stack["namePart3"], stack["email"])
}

func (c *current) onDocumentHeader8(authors interface{}) (interface{}, error) {
	return types.NewDocumentAuthors(authors.([]interface{}))
}

func (p *parser) callonDocumentHeader8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader8(stack["authors"])
}

func (c *current) onDocumentHeader140() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader140() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader140()
}

func (c *current) onDocumentHeader149() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader149() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader149()
}

func (c *current) onDocumentHeader167() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader167()
}

func (c *current) onDocumentHeader173() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader173() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader173()
}

func (c *current) onDocumentHeader152() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader152()
}

func (c *current) onDocumentHeader246() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader246() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader246()
}

func (c *current) onDocumentHeader253() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader253() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader253()
}

func (c *current) onDocumentHeader144(namePart1, namePart2, namePart3, email interface{}) (interface{}, error) {
	return types.NewDocumentAuthor(namePart1, namePart2, namePart3, email)
}

func (p *parser) callonDocumentHeader144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader144(stack["namePart1"], stack["namePart2"], stack["namePart3"], stack["email"])
}

func (c *current) onDocumentHeader135(author interface{}) (interface{}, error) {
	return []types.DocumentAuthor{author.(types.DocumentAuthor)}, nil
}

func (p *parser) callonDocumentHeader135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader135(stack["author"])
}

func (c *current) onDocumentHeader262() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader262() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader262()
}

func (c *current) onDocumentHeader272() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader272() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader272()
}

func (c *current) onDocumentHeader269() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader269() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader269()
}

func (c *current) onDocumentHeader291() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader291() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader291()
}

func (c *current) onDocumentHeader309() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader309() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader309()
}

func (c *current) onDocumentHeader287() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader287() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader287()
}

func (c *current) onDocumentHeader317() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader317() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader317()
}

func (c *current) onDocumentHeader333() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader333() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader333()
}

func (c *current) onDocumentHeader257(revnumber, revdate, revremark interface{}) (interface{}, error) {
	return types.NewDocumentRevision(revnumber, revdate, revremark)
}

func (p *parser) callonDocumentHeader257() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader257(stack["revnumber"], stack["revdate"], stack["revremark"])
}

func (c *current) onDocumentHeader355() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader355() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader355()
}

func (c *current) onDocumentHeader364() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader364() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader364()
}

func (c *current) onDocumentHeader351(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeDeclaration(name.(string), nil)
}

func (p *parser) callonDocumentHeader351() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader351(stack["name"])
}

func (c *current) onDocumentHeader375() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader375() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader375()
}

func (c *current) onDocumentHeader384() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader384() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader384()
}

func (c *current) onDocumentHeader387() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader387() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader387()
}

func (c *current) onDocumentHeader371(name, value interface{}) (interface{}, error) {
	return types.NewDocumentAttributeDeclaration(name.(string), value)
}

func (p *parser) callonDocumentHeader371() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader371(stack["name"], stack["value"])
}

func (c *current) onDocumentHeader1(header, authors, revision, otherAttributes interface{}) (interface{}, error) {

	return types.NewDocumentHeader(header, authors, revision, otherAttributes.([]interface{}))
}

func (p *parser) callonDocumentHeader1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader1(stack["header"], stack["authors"], stack["revision"], stack["otherAttributes"])
}

func (c *current) onSection1(section interface{}) (interface{}, error) {
	return section, nil

}

func (p *parser) callonSection1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1(stack["section"])
}

func (c *current) onSection07(header, elements interface{}) (interface{}, error) {
	return types.NewSection(0, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection07() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection07(stack["header"], stack["elements"])
}

func (c *current) onSection01(section interface{}) (interface{}, error) {
	return section, nil

}

func (p *parser) callonSection01() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection01(stack["section"])
}

func (c *current) onSection0Title25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title25()
}

func (c *current) onSection0Title15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title15()
}

func (c *current) onSection0Title11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection0Title11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title11(stack["id"])
}

func (c *current) onSection0Title9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonSection0Title9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title9(stack["id"])
}

func (c *current) onSection0Title51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title51()
}

func (c *current) onSection0Title41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title41()
}

func (c *current) onSection0Title37(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection0Title37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title37(stack["id"])
}

func (c *current) onSection0Title71() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title71()
}

func (c *current) onSection0Title74() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title74() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title74()
}

func (c *current) onSection0Title63(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection0Title63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title63(stack["title"])
}

func (c *current) onSection0Title88() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title88() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title88()
}

func (c *current) onSection0Title91() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title91() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title91()
}

func (c *current) onSection0Title82(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection0Title82() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title82(stack["role"])
}

func (c *current) onSection0Title107() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection0Title107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title107()
}

func (c *current) onSection0Title109() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection0Title109() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title109()
}

func (c *current) onSection0Title111() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection0Title111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title111()
}

func (c *current) onSection0Title113() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection0Title113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title113()
}

func (c *current) onSection0Title115() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection0Title115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title115()
}

func (c *current) onSection0Title102(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection0Title102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title102(stack["k"])
}

func (c *current) onSection0Title118() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection0Title118() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title118()
}

func (c *current) onSection0Title126() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title126() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title126()
}

func (c *current) onSection0Title137() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title137() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title137()
}

func (c *current) onSection0Title134(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title134() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title134(stack["key"])
}

func (c *current) onSection0Title151(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title151() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title151(stack["value"])
}

func (c *current) onSection0Title167() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title167()
}

func (c *current) onSection0Title131(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection0Title131() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title131(stack["key"], stack["value"])
}

func (c *current) onSection0Title175() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title175() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title175()
}

func (c *current) onSection0Title172(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title172() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title172(stack["key"])
}

func (c *current) onSection0Title192() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title192() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title192()
}

func (c *current) onSection0Title169(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection0Title169() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title169(stack["key"])
}

func (c *current) onSection0Title120(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection0Title120() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title120(stack["attributes"])
}

func (c *current) onSection0Title198() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title198()
}

func (c *current) onSection0Title5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection0Title5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title5(stack["attr"])
}

func (c *current) onSection0Title209() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title209() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title209()
}

func (c *current) onSection0Title216() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title216() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title216()
}

func (c *current) onSection0Title234() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title234() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title234()
}

func (c *current) onSection0Title224() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title224() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title224()
}

func (c *current) onSection0Title220(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection0Title220() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title220(stack["id"])
}

func (c *current) onSection0Title249() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title249() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title249()
}

func (c *current) onSection0Title1(attributes, content, id interface{}) (interface{}, error) {

	return types.NewSectionTitle(content.(types.InlineElements), append(attributes.([]interface{}), id))
}

func (p *parser) callonSection0Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title1(stack["attributes"], stack["content"], stack["id"])
}

func (c *current) onSection0Block1(content interface{}) (interface{}, error) {
	return content, nil
}

func (p *parser) callonSection0Block1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Block1(stack["content"])
}

func (c *current) onSection17(header, elements interface{}) (interface{}, error) {
	return types.NewSection(1, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection17(stack["header"], stack["elements"])
}

func (c *current) onSection11(section interface{}) (interface{}, error) {
	return section, nil
}

func (p *parser) callonSection11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection11(stack["section"])
}

func (c *current) onSection1Title25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title25()
}

func (c *current) onSection1Title15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title15()
}

func (c *current) onSection1Title11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection1Title11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title11(stack["id"])
}

func (c *current) onSection1Title9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonSection1Title9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title9(stack["id"])
}

func (c *current) onSection1Title51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title51()
}

func (c *current) onSection1Title41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title41()
}

func (c *current) onSection1Title37(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection1Title37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title37(stack["id"])
}

func (c *current) onSection1Title71() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title71()
}

func (c *current) onSection1Title74() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title74() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title74()
}

func (c *current) onSection1Title63(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection1Title63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title63(stack["title"])
}

func (c *current) onSection1Title88() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title88() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title88()
}

func (c *current) onSection1Title91() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title91() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title91()
}

func (c *current) onSection1Title82(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection1Title82() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title82(stack["role"])
}

func (c *current) onSection1Title107() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection1Title107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title107()
}

func (c *current) onSection1Title109() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection1Title109() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title109()
}

func (c *current) onSection1Title111() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection1Title111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title111()
}

func (c *current) onSection1Title113() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection1Title113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title113()
}

func (c *current) onSection1Title115() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection1Title115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title115()
}

func (c *current) onSection1Title102(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection1Title102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title102(stack["k"])
}

func (c *current) onSection1Title118() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection1Title118() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title118()
}

func (c *current) onSection1Title126() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title126() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title126()
}

func (c *current) onSection1Title137() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title137() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title137()
}

func (c *current) onSection1Title134(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title134() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title134(stack["key"])
}

func (c *current) onSection1Title151(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title151() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title151(stack["value"])
}

func (c *current) onSection1Title167() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title167()
}

func (c *current) onSection1Title131(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection1Title131() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title131(stack["key"], stack["value"])
}

func (c *current) onSection1Title175() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title175() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title175()
}

func (c *current) onSection1Title172(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title172() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title172(stack["key"])
}

func (c *current) onSection1Title192() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title192() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title192()
}

func (c *current) onSection1Title169(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection1Title169() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title169(stack["key"])
}

func (c *current) onSection1Title120(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection1Title120() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title120(stack["attributes"])
}

func (c *current) onSection1Title198() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title198()
}

func (c *current) onSection1Title5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection1Title5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title5(stack["attr"])
}

func (c *current) onSection1Title209() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title209() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title209()
}

func (c *current) onSection1Title216() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title216() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title216()
}

func (c *current) onSection1Title234() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title234() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title234()
}

func (c *current) onSection1Title224() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title224() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title224()
}

func (c *current) onSection1Title220(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection1Title220() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title220(stack["id"])
}

func (c *current) onSection1Title249() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title249() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title249()
}

func (c *current) onSection1Title1(attributes, content, id interface{}) (interface{}, error) {

	return types.NewSectionTitle(content.(types.InlineElements), append(attributes.([]interface{}), id))
}

func (p *parser) callonSection1Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title1(stack["attributes"], stack["content"], stack["id"])
}

func (c *current) onSection1Block1(content interface{}) (interface{}, error) {
	return content, nil
}

func (p *parser) callonSection1Block1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Block1(stack["content"])
}

func (c *current) onSection27(header, elements interface{}) (interface{}, error) {
	return types.NewSection(2, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection27(stack["header"], stack["elements"])
}

func (c *current) onSection21(section interface{}) (interface{}, error) {
	return section, nil

}

func (p *parser) callonSection21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection21(stack["section"])
}

func (c *current) onSection2Title25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title25()
}

func (c *current) onSection2Title15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title15()
}

func (c *current) onSection2Title11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection2Title11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title11(stack["id"])
}

func (c *current) onSection2Title9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonSection2Title9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title9(stack["id"])
}

func (c *current) onSection2Title51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title51()
}

func (c *current) onSection2Title41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title41()
}

func (c *current) onSection2Title37(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection2Title37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title37(stack["id"])
}

func (c *current) onSection2Title71() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title71()
}

func (c *current) onSection2Title74() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title74() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title74()
}

func (c *current) onSection2Title63(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection2Title63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title63(stack["title"])
}

func (c *current) onSection2Title88() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title88() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title88()
}

func (c *current) onSection2Title91() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title91() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title91()
}

func (c *current) onSection2Title82(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection2Title82() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title82(stack["role"])
}

func (c *current) onSection2Title107() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection2Title107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title107()
}

func (c *current) onSection2Title109() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection2Title109() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title109()
}

func (c *current) onSection2Title111() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection2Title111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title111()
}

func (c *current) onSection2Title113() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection2Title113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title113()
}

func (c *current) onSection2Title115() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection2Title115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title115()
}

func (c *current) onSection2Title102(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection2Title102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title102(stack["k"])
}

func (c *current) onSection2Title118() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection2Title118() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title118()
}

func (c *current) onSection2Title126() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title126() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title126()
}

func (c *current) onSection2Title137() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title137() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title137()
}

func (c *current) onSection2Title134(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title134() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title134(stack["key"])
}

func (c *current) onSection2Title151(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title151() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title151(stack["value"])
}

func (c *current) onSection2Title167() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title167()
}

func (c *current) onSection2Title131(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection2Title131() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title131(stack["key"], stack["value"])
}

func (c *current) onSection2Title175() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title175() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title175()
}

func (c *current) onSection2Title172(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title172() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title172(stack["key"])
}

func (c *current) onSection2Title192() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title192() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title192()
}

func (c *current) onSection2Title169(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection2Title169() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title169(stack["key"])
}

func (c *current) onSection2Title120(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection2Title120() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title120(stack["attributes"])
}

func (c *current) onSection2Title198() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title198()
}

func (c *current) onSection2Title5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection2Title5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title5(stack["attr"])
}

func (c *current) onSection2Title209() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title209() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title209()
}

func (c *current) onSection2Title216() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title216() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title216()
}

func (c *current) onSection2Title234() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title234() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title234()
}

func (c *current) onSection2Title224() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title224() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title224()
}

func (c *current) onSection2Title220(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection2Title220() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title220(stack["id"])
}

func (c *current) onSection2Title249() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title249() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title249()
}

func (c *current) onSection2Title1(attributes, content, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(content.(types.InlineElements), append(attributes.([]interface{}), id))
}

func (p *parser) callonSection2Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title1(stack["attributes"], stack["content"], stack["id"])
}

func (c *current) onSection2Block1(content interface{}) (interface{}, error) {
	return content, nil
}

func (p *parser) callonSection2Block1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Block1(stack["content"])
}

func (c *current) onSection37(header, elements interface{}) (interface{}, error) {
	return types.NewSection(3, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection37(stack["header"], stack["elements"])
}

func (c *current) onSection31(section interface{}) (interface{}, error) {
	return section, nil

}

func (p *parser) callonSection31() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection31(stack["section"])
}

func (c *current) onSection3Title25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title25()
}

func (c *current) onSection3Title15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title15()
}

func (c *current) onSection3Title11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection3Title11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title11(stack["id"])
}

func (c *current) onSection3Title9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonSection3Title9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title9(stack["id"])
}

func (c *current) onSection3Title51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title51()
}

func (c *current) onSection3Title41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title41()
}

func (c *current) onSection3Title37(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection3Title37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title37(stack["id"])
}

func (c *current) onSection3Title71() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title71()
}

func (c *current) onSection3Title74() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title74() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title74()
}

func (c *current) onSection3Title63(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection3Title63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title63(stack["title"])
}

func (c *current) onSection3Title88() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title88() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title88()
}

func (c *current) onSection3Title91() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title91() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title91()
}

func (c *current) onSection3Title82(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection3Title82() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title82(stack["role"])
}

func (c *current) onSection3Title107() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection3Title107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title107()
}

func (c *current) onSection3Title109() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection3Title109() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title109()
}

func (c *current) onSection3Title111() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection3Title111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title111()
}

func (c *current) onSection3Title113() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection3Title113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title113()
}

func (c *current) onSection3Title115() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection3Title115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title115()
}

func (c *current) onSection3Title102(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection3Title102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title102(stack["k"])
}

func (c *current) onSection3Title118() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection3Title118() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title118()
}

func (c *current) onSection3Title126() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title126() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title126()
}

func (c *current) onSection3Title137() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title137() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title137()
}

func (c *current) onSection3Title134(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title134() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title134(stack["key"])
}

func (c *current) onSection3Title151(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title151() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title151(stack["value"])
}

func (c *current) onSection3Title167() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title167()
}

func (c *current) onSection3Title131(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection3Title131() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title131(stack["key"], stack["value"])
}

func (c *current) onSection3Title175() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title175() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title175()
}

func (c *current) onSection3Title172(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title172() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title172(stack["key"])
}

func (c *current) onSection3Title192() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title192() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title192()
}

func (c *current) onSection3Title169(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection3Title169() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title169(stack["key"])
}

func (c *current) onSection3Title120(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection3Title120() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title120(stack["attributes"])
}

func (c *current) onSection3Title198() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title198()
}

func (c *current) onSection3Title5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection3Title5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title5(stack["attr"])
}

func (c *current) onSection3Title209() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title209() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title209()
}

func (c *current) onSection3Title216() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title216() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title216()
}

func (c *current) onSection3Title234() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title234() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title234()
}

func (c *current) onSection3Title224() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title224() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title224()
}

func (c *current) onSection3Title220(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection3Title220() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title220(stack["id"])
}

func (c *current) onSection3Title1(attributes, content, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(content.(types.InlineElements), append(attributes.([]interface{}), id))
}

func (p *parser) callonSection3Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title1(stack["attributes"], stack["content"], stack["id"])
}

func (c *current) onSection3Block1(content interface{}) (interface{}, error) {
	return content, nil
}

func (p *parser) callonSection3Block1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Block1(stack["content"])
}

func (c *current) onSection47(header, elements interface{}) (interface{}, error) {
	return types.NewSection(4, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection47() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection47(stack["header"], stack["elements"])
}

func (c *current) onSection41(section interface{}) (interface{}, error) {
	return section, nil

}

func (p *parser) callonSection41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection41(stack["section"])
}

func (c *current) onSection4Title25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title25()
}

func (c *current) onSection4Title15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title15()
}

func (c *current) onSection4Title11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection4Title11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title11(stack["id"])
}

func (c *current) onSection4Title9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonSection4Title9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title9(stack["id"])
}

func (c *current) onSection4Title51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title51()
}

func (c *current) onSection4Title41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title41()
}

func (c *current) onSection4Title37(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection4Title37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title37(stack["id"])
}

func (c *current) onSection4Title71() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title71()
}

func (c *current) onSection4Title74() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title74() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title74()
}

func (c *current) onSection4Title63(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection4Title63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title63(stack["title"])
}

func (c *current) onSection4Title88() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title88() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title88()
}

func (c *current) onSection4Title91() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title91() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title91()
}

func (c *current) onSection4Title82(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection4Title82() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title82(stack["role"])
}

func (c *current) onSection4Title107() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection4Title107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title107()
}

func (c *current) onSection4Title109() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection4Title109() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title109()
}

func (c *current) onSection4Title111() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection4Title111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title111()
}

func (c *current) onSection4Title113() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection4Title113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title113()
}

func (c *current) onSection4Title115() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection4Title115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title115()
}

func (c *current) onSection4Title102(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection4Title102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title102(stack["k"])
}

func (c *current) onSection4Title118() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection4Title118() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title118()
}

func (c *current) onSection4Title126() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title126() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title126()
}

func (c *current) onSection4Title137() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title137() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title137()
}

func (c *current) onSection4Title134(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title134() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title134(stack["key"])
}

func (c *current) onSection4Title151(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title151() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title151(stack["value"])
}

func (c *current) onSection4Title167() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title167()
}

func (c *current) onSection4Title131(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection4Title131() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title131(stack["key"], stack["value"])
}

func (c *current) onSection4Title175() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title175() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title175()
}

func (c *current) onSection4Title172(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title172() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title172(stack["key"])
}

func (c *current) onSection4Title192() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title192() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title192()
}

func (c *current) onSection4Title169(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection4Title169() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title169(stack["key"])
}

func (c *current) onSection4Title120(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection4Title120() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title120(stack["attributes"])
}

func (c *current) onSection4Title198() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title198()
}

func (c *current) onSection4Title5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection4Title5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title5(stack["attr"])
}

func (c *current) onSection4Title209() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title209() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title209()
}

func (c *current) onSection4Title216() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title216() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title216()
}

func (c *current) onSection4Title234() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title234() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title234()
}

func (c *current) onSection4Title224() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title224() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title224()
}

func (c *current) onSection4Title220(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection4Title220() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title220(stack["id"])
}

func (c *current) onSection4Title1(attributes, content, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(content.(types.InlineElements), append(attributes.([]interface{}), id))
}

func (p *parser) callonSection4Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title1(stack["attributes"], stack["content"], stack["id"])
}

func (c *current) onSection4Block1(content interface{}) (interface{}, error) {
	return content, nil
}

func (p *parser) callonSection4Block1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Block1(stack["content"])
}

func (c *current) onSection57(header, elements interface{}) (interface{}, error) {
	return types.NewSection(5, header.(types.SectionTitle), elements.([]interface{}))

}

func (p *parser) callonSection57() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection57(stack["header"], stack["elements"])
}

func (c *current) onSection51(section interface{}) (interface{}, error) {
	return section, nil

}

func (p *parser) callonSection51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection51(stack["section"])
}

func (c *current) onSection5Title25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title25()
}

func (c *current) onSection5Title15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title15()
}

func (c *current) onSection5Title11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection5Title11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title11(stack["id"])
}

func (c *current) onSection5Title9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonSection5Title9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title9(stack["id"])
}

func (c *current) onSection5Title51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title51()
}

func (c *current) onSection5Title41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title41()
}

func (c *current) onSection5Title37(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection5Title37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title37(stack["id"])
}

func (c *current) onSection5Title71() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title71()
}

func (c *current) onSection5Title74() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title74() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title74()
}

func (c *current) onSection5Title63(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection5Title63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title63(stack["title"])
}

func (c *current) onSection5Title88() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title88() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title88()
}

func (c *current) onSection5Title91() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title91() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title91()
}

func (c *current) onSection5Title82(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection5Title82() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title82(stack["role"])
}

func (c *current) onSection5Title107() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonSection5Title107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title107()
}

func (c *current) onSection5Title109() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonSection5Title109() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title109()
}

func (c *current) onSection5Title111() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonSection5Title111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title111()
}

func (c *current) onSection5Title113() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonSection5Title113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title113()
}

func (c *current) onSection5Title115() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection5Title115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title115()
}

func (c *current) onSection5Title102(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection5Title102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title102(stack["k"])
}

func (c *current) onSection5Title118() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection5Title118() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title118()
}

func (c *current) onSection5Title126() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title126() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title126()
}

func (c *current) onSection5Title137() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title137() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title137()
}

func (c *current) onSection5Title134(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title134() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title134(stack["key"])
}

func (c *current) onSection5Title151(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title151() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title151(stack["value"])
}

func (c *current) onSection5Title167() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title167()
}

func (c *current) onSection5Title131(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection5Title131() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title131(stack["key"], stack["value"])
}

func (c *current) onSection5Title175() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title175() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title175()
}

func (c *current) onSection5Title172(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title172() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title172(stack["key"])
}

func (c *current) onSection5Title192() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title192() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title192()
}

func (c *current) onSection5Title169(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection5Title169() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title169(stack["key"])
}

func (c *current) onSection5Title120(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection5Title120() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title120(stack["attributes"])
}

func (c *current) onSection5Title198() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title198()
}

func (c *current) onSection5Title5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection5Title5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title5(stack["attr"])
}

func (c *current) onSection5Title209() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title209() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title209()
}

func (c *current) onSection5Title216() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title216() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title216()
}

func (c *current) onSection5Title234() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title234() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title234()
}

func (c *current) onSection5Title224() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title224() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title224()
}

func (c *current) onSection5Title220(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection5Title220() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title220(stack["id"])
}

func (c *current) onSection5Title1(attributes, content, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(content.(types.InlineElements), append(attributes.([]interface{}), id))
}

func (p *parser) callonSection5Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title1(stack["attributes"], stack["content"], stack["id"])
}

func (c *current) onSection5Block1(content interface{}) (interface{}, error) {
	return content, nil
}

func (p *parser) callonSection5Block1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Block1(stack["content"])
}

func (c *current) onTitleElements12() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements12()
}

func (c *current) onTitleElements29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements29()
}

func (c *current) onTitleElements19() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements19()
}

func (c *current) onTitleElements15(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonTitleElements15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements15(stack["id"])
}

func (c *current) onTitleElements45() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements45() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements45()
}

func (c *current) onTitleElements1(elements interface{}) (interface{}, error) {
	// absorbs heading and trailing spaces
	return types.NewInlineElements(elements.([]interface{}))
}

func (p *parser) callonTitleElements1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements1(stack["elements"])
}

func (c *current) onTitleElement18() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement18()
}

func (c *current) onTitleElement8() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement8()
}

func (c *current) onTitleElement4(id interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string))
}

func (p *parser) callonTitleElement4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement4(stack["id"])
}

func (c *current) onTitleElement47() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement47() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement47()
}

func (c *current) onTitleElement37() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement37()
}

func (c *current) onTitleElement60() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement60() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement60()
}

func (c *current) onTitleElement72() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement72() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement72()
}

func (c *current) onTitleElement84() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement84() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement84()
}

func (c *current) onTitleElement105() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement105() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement105()
}

func (c *current) onTitleElement102(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement102(stack["key"])
}

func (c *current) onTitleElement119(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement119(stack["value"])
}

func (c *current) onTitleElement135() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement135()
}

func (c *current) onTitleElement99(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement99() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement99(stack["key"], stack["value"])
}

func (c *current) onTitleElement143() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement143() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement143()
}

func (c *current) onTitleElement140(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement140() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement140(stack["key"])
}

func (c *current) onTitleElement160() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement160() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement160()
}

func (c *current) onTitleElement137(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement137() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement137(stack["key"])
}

func (c *current) onTitleElement56(alt, width, height, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, height, otherAttrs.([]interface{}))

}

func (p *parser) callonTitleElement56() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement56(stack["alt"], stack["width"], stack["height"], stack["otherAttrs"])
}

func (c *current) onTitleElement167() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement167()
}

func (c *current) onTitleElement179() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement179()
}

func (c *current) onTitleElement200() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement200() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement200()
}

func (c *current) onTitleElement197(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement197() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement197(stack["key"])
}

func (c *current) onTitleElement214(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement214() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement214(stack["value"])
}

func (c *current) onTitleElement230() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement230() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement230()
}

func (c *current) onTitleElement194(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement194() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement194(stack["key"], stack["value"])
}

func (c *current) onTitleElement238() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement238() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement238()
}

func (c *current) onTitleElement235(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement235() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement235(stack["key"])
}

func (c *current) onTitleElement255() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement255() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement255()
}

func (c *current) onTitleElement232(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement232() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement232(stack["key"])
}

func (c *current) onTitleElement163(alt, width, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonTitleElement163() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement163(stack["alt"], stack["width"], stack["otherAttrs"])
}

func (c *current) onTitleElement262() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement262() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement262()
}

func (c *current) onTitleElement283() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement283() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement283()
}

func (c *current) onTitleElement280(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement280() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement280(stack["key"])
}

func (c *current) onTitleElement297(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement297() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement297(stack["value"])
}

func (c *current) onTitleElement313() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement313() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement313()
}

func (c *current) onTitleElement277(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement277() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement277(stack["key"], stack["value"])
}

func (c *current) onTitleElement321() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement321() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement321()
}

func (c *current) onTitleElement318(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement318() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement318(stack["key"])
}

func (c *current) onTitleElement338() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement338() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement338()
}

func (c *current) onTitleElement315(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement315() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement315(stack["key"])
}

func (c *current) onTitleElement258(alt, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonTitleElement258() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement258(stack["alt"], stack["otherAttrs"])
}

func (c *current) onTitleElement353() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement353() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement353()
}

func (c *current) onTitleElement350(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement350() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement350(stack["key"])
}

func (c *current) onTitleElement367(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement367() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement367(stack["value"])
}

func (c *current) onTitleElement383() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement383() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement383()
}

func (c *current) onTitleElement347(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement347() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement347(stack["key"], stack["value"])
}

func (c *current) onTitleElement391() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement391() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement391()
}

func (c *current) onTitleElement388(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement388() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement388(stack["key"])
}

func (c *current) onTitleElement408() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement408() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement408()
}

func (c *current) onTitleElement385(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement385() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement385(stack["key"])
}

func (c *current) onTitleElement341(otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(nil, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonTitleElement341() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement341(stack["otherAttrs"])
}

func (c *current) onTitleElement31(path, attributes interface{}) (interface{}, error) {
	return types.NewInlineImage(path.(string), attributes.(types.ElementAttributes))
}

func (p *parser) callonTitleElement31() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement31(stack["path"], stack["attributes"])
}

func (c *current) onTitleElement438() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement438() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement438()
}

func (c *current) onTitleElement428() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement428() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement428()
}

func (c *current) onTitleElement419() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement419() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement419()
}

func (c *current) onTitleElement451() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement451() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement451()
}

func (c *current) onTitleElement468() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement468() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement468()
}

func (c *current) onTitleElement465(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement465() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement465(stack["key"])
}

func (c *current) onTitleElement482(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement482() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement482(stack["value"])
}

func (c *current) onTitleElement498() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement498() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement498()
}

func (c *current) onTitleElement462(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement462() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement462(stack["key"], stack["value"])
}

func (c *current) onTitleElement506() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement506() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement506()
}

func (c *current) onTitleElement503(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement503() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement503(stack["key"])
}

func (c *current) onTitleElement523() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement523() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement523()
}

func (c *current) onTitleElement500(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement500() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement500(stack["key"])
}

func (c *current) onTitleElement447(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement447() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement447(stack["text"], stack["otherAttrs"])
}

func (c *current) onTitleElement538() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement538() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement538()
}

func (c *current) onTitleElement535(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement535() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement535(stack["key"])
}

func (c *current) onTitleElement552(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement552() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement552(stack["value"])
}

func (c *current) onTitleElement568() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement568() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement568()
}

func (c *current) onTitleElement532(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement532() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement532(stack["key"], stack["value"])
}

func (c *current) onTitleElement576() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement576() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement576()
}

func (c *current) onTitleElement573(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement573() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement573(stack["key"])
}

func (c *current) onTitleElement593() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement593() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement593()
}

func (c *current) onTitleElement570(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement570() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement570(stack["key"])
}

func (c *current) onTitleElement526(otherAttrs interface{}) (interface{}, error) {
	return types.NewLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement526() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement526(stack["otherAttrs"])
}

func (c *current) onTitleElement415(url, attributes interface{}) (interface{}, error) {
	return types.NewLink(url.(string), attributes.(types.ElementAttributes))
}

func (p *parser) callonTitleElement415() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement415(stack["url"], stack["attributes"])
}

func (c *current) onTitleElement617() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement617() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement617()
}

func (c *current) onTitleElement607() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement607() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement607()
}

func (c *current) onTitleElement599() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement599() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement599()
}

func (c *current) onTitleElement630() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement630() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement630()
}

func (c *current) onTitleElement647() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement647() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement647()
}

func (c *current) onTitleElement644(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement644() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement644(stack["key"])
}

func (c *current) onTitleElement661(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement661() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement661(stack["value"])
}

func (c *current) onTitleElement677() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement677() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement677()
}

func (c *current) onTitleElement641(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement641() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement641(stack["key"], stack["value"])
}

func (c *current) onTitleElement685() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement685() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement685()
}

func (c *current) onTitleElement682(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement682() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement682(stack["key"])
}

func (c *current) onTitleElement702() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement702() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement702()
}

func (c *current) onTitleElement679(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement679() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement679(stack["key"])
}

func (c *current) onTitleElement626(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement626() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement626(stack["text"], stack["otherAttrs"])
}

func (c *current) onTitleElement717() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement717() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement717()
}

func (c *current) onTitleElement714(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement714() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement714(stack["key"])
}

func (c *current) onTitleElement731(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement731() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement731(stack["value"])
}

func (c *current) onTitleElement747() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement747() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement747()
}

func (c *current) onTitleElement711(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement711() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement711(stack["key"], stack["value"])
}

func (c *current) onTitleElement755() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement755() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement755()
}

func (c *current) onTitleElement752(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement752() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement752(stack["key"])
}

func (c *current) onTitleElement772() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement772() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement772()
}

func (c *current) onTitleElement749(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement749() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement749(stack["key"])
}

func (c *current) onTitleElement705(otherAttrs interface{}) (interface{}, error) {
	return types.NewLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement705() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement705(stack["otherAttrs"])
}

func (c *current) onTitleElement596(url, attributes interface{}) (interface{}, error) {
	return types.NewLink(url.(string), attributes.(types.ElementAttributes))
}

func (p *parser) callonTitleElement596() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement596(stack["url"], stack["attributes"])
}

func (c *current) onTitleElement795() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement795() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement795()
}

func (c *current) onTitleElement785() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement785() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement785()
}

func (c *current) onTitleElement777() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement777() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement777()
}

func (c *current) onTitleElement775(url interface{}) (interface{}, error) {
	return types.NewLink(url.(string), nil)
}

func (p *parser) callonTitleElement775() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement775(stack["url"])
}

func (c *current) onTitleElement412(link interface{}) (interface{}, error) {
	return link, nil
}

func (p *parser) callonTitleElement412() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement412(stack["link"])
}

func (c *current) onTitleElement806() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement806() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement806()
}

func (c *current) onTitleElement802(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeSubstitution(name.(string))
}

func (p *parser) callonTitleElement802() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement802(stack["name"])
}

func (c *current) onTitleElement822() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement822() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement822()
}

func (c *current) onTitleElement812() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement812() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement812()
}

func (c *current) onTitleElement1(element interface{}) (interface{}, error) {
	return element, nil
}

func (p *parser) callonTitleElement1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1(stack["element"])
}

func (c *current) onList25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList25()
}

func (c *current) onList15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList15()
}

func (c *current) onList11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonList11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList11(stack["id"])
}

func (c *current) onList9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonList9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList9(stack["id"])
}

func (c *current) onList51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList51()
}

func (c *current) onList41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList41()
}

func (c *current) onList37(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonList37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList37(stack["id"])
}

func (c *current) onList71() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList71()
}

func (c *current) onList74() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList74() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList74()
}

func (c *current) onList63(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonList63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList63(stack["title"])
}

func (c *current) onList88() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList88() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList88()
}

func (c *current) onList91() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList91() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList91()
}

func (c *current) onList82(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonList82() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList82(stack["role"])
}

func (c *current) onList107() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonList107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList107()
}

func (c *current) onList109() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonList109() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList109()
}

func (c *current) onList111() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonList111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList111()
}

func (c *current) onList113() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonList113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList113()
}

func (c *current) onList115() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonList115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList115()
}

func (c *current) onList102(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonList102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList102(stack["k"])
}

func (c *current) onList118() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonList118() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList118()
}

func (c *current) onList126() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList126() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList126()
}

func (c *current) onList137() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList137() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList137()
}

func (c *current) onList134(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList134() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList134(stack["key"])
}

func (c *current) onList151(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList151() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList151(stack["value"])
}

func (c *current) onList167() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList167()
}

func (c *current) onList131(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonList131() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList131(stack["key"], stack["value"])
}

func (c *current) onList175() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList175() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList175()
}

func (c *current) onList172(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList172() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList172(stack["key"])
}

func (c *current) onList192() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList192() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList192()
}

func (c *current) onList169(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonList169() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList169(stack["key"])
}

func (c *current) onList120(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonList120() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList120(stack["attributes"])
}

func (c *current) onList198() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonList198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList198()
}

func (c *current) onList5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonList5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList5(stack["attr"])
}

func (c *current) onList1(attributes, elements interface{}) (interface{}, error) {
	return types.NewList(elements.([]interface{}), attributes.([]interface{}))
}

func (p *parser) callonList1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList1(stack["attributes"], stack["elements"])
}

func (c *current) onListParagraph1(lines interface{}) (interface{}, error) {
	return types.NewParagraph(lines.([]interface{}), nil)
}

func (p *parser) callonListParagraph1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph1(stack["lines"])
}

func (c *current) onListParagraphLine9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine9()
}

func (c *current) onListParagraphLine13() (interface{}, error) {
	// numbering style: "....."
	return types.NewOrderedListItemPrefix(types.UpperRoman, 5)

}

func (p *parser) callonListParagraphLine13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine13()
}

func (c *current) onListParagraphLine15() (interface{}, error) {
	// numbering style: "...."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 4)

}

func (p *parser) callonListParagraphLine15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine15()
}

func (c *current) onListParagraphLine17() (interface{}, error) {
	// numbering style: "..."
	return types.NewOrderedListItemPrefix(types.LowerRoman, 3)

}

func (p *parser) callonListParagraphLine17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine17()
}

func (c *current) onListParagraphLine19() (interface{}, error) {
	// numbering style: ".."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 2)

}

func (p *parser) callonListParagraphLine19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine19()
}

func (c *current) onListParagraphLine21() (interface{}, error) {
	// numbering style: "."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)
	// explicit numbering

}

func (p *parser) callonListParagraphLine21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine21()
}

func (c *current) onListParagraphLine23() (interface{}, error) {
	// numbering style: "1."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)

}

func (p *parser) callonListParagraphLine23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine23()
}

func (c *current) onListParagraphLine28() (interface{}, error) {
	// numbering style: "a."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 1)

}

func (p *parser) callonListParagraphLine28() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine28()
}

func (c *current) onListParagraphLine33() (interface{}, error) {
	// numbering style: "A."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 1)

}

func (p *parser) callonListParagraphLine33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine33()
}

func (c *current) onListParagraphLine38() (interface{}, error) {
	// numbering style: "i)"
	return types.NewOrderedListItemPrefix(types.LowerRoman, 1)

}

func (p *parser) callonListParagraphLine38() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine38()
}

func (c *current) onListParagraphLine43() (interface{}, error) {
	// numbering style: "I)"
	return types.NewOrderedListItemPrefix(types.UpperRoman, 1)

}

func (p *parser) callonListParagraphLine43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine43()
}

func (c *current) onListParagraphLine51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine51()
}

func (c *current) onListParagraphLine4(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonListParagraphLine4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine4(stack["prefix"])
}

func (c *current) onListParagraphLine59() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine59() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine59()
}

func (c *current) onListParagraphLine63() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FiveAsterisks, 5)

}

func (p *parser) callonListParagraphLine63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine63()
}

func (c *current) onListParagraphLine65() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FourAsterisks, 4)

}

func (p *parser) callonListParagraphLine65() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine65()
}

func (c *current) onListParagraphLine67() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.ThreeAsterisks, 3)

}

func (p *parser) callonListParagraphLine67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine67()
}

func (c *current) onListParagraphLine69() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.TwoAsterisks, 2)

}

func (p *parser) callonListParagraphLine69() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine69()
}

func (c *current) onListParagraphLine71() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.OneAsterisk, 1)

}

func (p *parser) callonListParagraphLine71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine71()
}

func (c *current) onListParagraphLine73() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.Dash, 1)

}

func (p *parser) callonListParagraphLine73() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine73()
}

func (c *current) onListParagraphLine78() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine78()
}

func (c *current) onListParagraphLine54(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonListParagraphLine54() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine54(stack["prefix"])
}

func (c *current) onListParagraphLine82() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine82() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine82()
}

func (c *current) onListParagraphLine96() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine96() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine96()
}

func (c *current) onListParagraphLine107() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine107()
}

func (c *current) onListParagraphLine101() (interface{}, error) {
	return types.NewListItemContinuation()
}

func (p *parser) callonListParagraphLine101() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine101()
}

func (c *current) onListParagraphLine135() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine135()
}

func (c *current) onListParagraphLine125() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine125() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine125()
}

func (c *current) onListParagraphLine121(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonListParagraphLine121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine121(stack["id"])
}

func (c *current) onListParagraphLine119(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonListParagraphLine119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine119(stack["id"])
}

func (c *current) onListParagraphLine161() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine161() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine161()
}

func (c *current) onListParagraphLine151() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine151() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine151()
}

func (c *current) onListParagraphLine147(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonListParagraphLine147() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine147(stack["id"])
}

func (c *current) onListParagraphLine181() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine181() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine181()
}

func (c *current) onListParagraphLine184() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine184() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine184()
}

func (c *current) onListParagraphLine173(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonListParagraphLine173() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine173(stack["title"])
}

func (c *current) onListParagraphLine198() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine198()
}

func (c *current) onListParagraphLine201() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine201() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine201()
}

func (c *current) onListParagraphLine192(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonListParagraphLine192() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine192(stack["role"])
}

func (c *current) onListParagraphLine217() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonListParagraphLine217() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine217()
}

func (c *current) onListParagraphLine219() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonListParagraphLine219() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine219()
}

func (c *current) onListParagraphLine221() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonListParagraphLine221() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine221()
}

func (c *current) onListParagraphLine223() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonListParagraphLine223() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine223()
}

func (c *current) onListParagraphLine225() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonListParagraphLine225() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine225()
}

func (c *current) onListParagraphLine212(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonListParagraphLine212() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine212(stack["k"])
}

func (c *current) onListParagraphLine228() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonListParagraphLine228() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine228()
}

func (c *current) onListParagraphLine236() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine236() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine236()
}

func (c *current) onListParagraphLine247() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine247() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine247()
}

func (c *current) onListParagraphLine244(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine244() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine244(stack["key"])
}

func (c *current) onListParagraphLine261(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine261() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine261(stack["value"])
}

func (c *current) onListParagraphLine277() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine277() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine277()
}

func (c *current) onListParagraphLine241(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonListParagraphLine241() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine241(stack["key"], stack["value"])
}

func (c *current) onListParagraphLine285() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine285() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine285()
}

func (c *current) onListParagraphLine282(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine282() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine282(stack["key"])
}

func (c *current) onListParagraphLine302() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine302() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine302()
}

func (c *current) onListParagraphLine279(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonListParagraphLine279() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine279(stack["key"])
}

func (c *current) onListParagraphLine230(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonListParagraphLine230() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine230(stack["attributes"])
}

func (c *current) onListParagraphLine308() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine308() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine308()
}

func (c *current) onListParagraphLine115(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonListParagraphLine115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine115(stack["attr"])
}

func (c *current) onListParagraphLine1(line interface{}) (interface{}, error) {
	return line, nil
}

func (p *parser) callonListParagraphLine1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine1(stack["line"])
}

func (c *current) onContinuedDocumentBlock9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonContinuedDocumentBlock9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onContinuedDocumentBlock9()
}

func (c *current) onContinuedDocumentBlock3() (interface{}, error) {
	return types.NewListItemContinuation()
}

func (p *parser) callonContinuedDocumentBlock3() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onContinuedDocumentBlock3()
}

func (c *current) onContinuedDocumentBlock1(element interface{}) (interface{}, error) {
	return element, nil
}

func (p *parser) callonContinuedDocumentBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onContinuedDocumentBlock1(stack["element"])
}

func (c *current) onOrderedListItem25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem25()
}

func (c *current) onOrderedListItem15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem15()
}

func (c *current) onOrderedListItem11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonOrderedListItem11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem11(stack["id"])
}

func (c *current) onOrderedListItem9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonOrderedListItem9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem9(stack["id"])
}

func (c *current) onOrderedListItem51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem51()
}

func (c *current) onOrderedListItem41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem41()
}

func (c *current) onOrderedListItem37(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonOrderedListItem37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem37(stack["id"])
}

func (c *current) onOrderedListItem71() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem71()
}

func (c *current) onOrderedListItem74() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem74() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem74()
}

func (c *current) onOrderedListItem63(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonOrderedListItem63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem63(stack["title"])
}

func (c *current) onOrderedListItem88() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem88() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem88()
}

func (c *current) onOrderedListItem91() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem91() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem91()
}

func (c *current) onOrderedListItem82(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonOrderedListItem82() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem82(stack["role"])
}

func (c *current) onOrderedListItem107() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonOrderedListItem107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem107()
}

func (c *current) onOrderedListItem109() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonOrderedListItem109() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem109()
}

func (c *current) onOrderedListItem111() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonOrderedListItem111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem111()
}

func (c *current) onOrderedListItem113() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonOrderedListItem113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem113()
}

func (c *current) onOrderedListItem115() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonOrderedListItem115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem115()
}

func (c *current) onOrderedListItem102(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonOrderedListItem102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem102(stack["k"])
}

func (c *current) onOrderedListItem118() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonOrderedListItem118() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem118()
}

func (c *current) onOrderedListItem126() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem126() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem126()
}

func (c *current) onOrderedListItem137() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem137() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem137()
}

func (c *current) onOrderedListItem134(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem134() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem134(stack["key"])
}

func (c *current) onOrderedListItem151(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem151() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem151(stack["value"])
}

func (c *current) onOrderedListItem167() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem167()
}

func (c *current) onOrderedListItem131(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonOrderedListItem131() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem131(stack["key"], stack["value"])
}

func (c *current) onOrderedListItem175() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem175() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem175()
}

func (c *current) onOrderedListItem172(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem172() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem172(stack["key"])
}

func (c *current) onOrderedListItem192() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem192() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem192()
}

func (c *current) onOrderedListItem169(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonOrderedListItem169() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem169(stack["key"])
}

func (c *current) onOrderedListItem120(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonOrderedListItem120() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem120(stack["attributes"])
}

func (c *current) onOrderedListItem198() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem198()
}

func (c *current) onOrderedListItem5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonOrderedListItem5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem5(stack["attr"])
}

func (c *current) onOrderedListItem211() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem211() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem211()
}

func (c *current) onOrderedListItem215() (interface{}, error) {
	// numbering style: "....."
	return types.NewOrderedListItemPrefix(types.UpperRoman, 5)

}

func (p *parser) callonOrderedListItem215() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem215()
}

func (c *current) onOrderedListItem217() (interface{}, error) {
	// numbering style: "...."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 4)

}

func (p *parser) callonOrderedListItem217() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem217()
}

func (c *current) onOrderedListItem219() (interface{}, error) {
	// numbering style: "..."
	return types.NewOrderedListItemPrefix(types.LowerRoman, 3)

}

func (p *parser) callonOrderedListItem219() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem219()
}

func (c *current) onOrderedListItem221() (interface{}, error) {
	// numbering style: ".."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 2)

}

func (p *parser) callonOrderedListItem221() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem221()
}

func (c *current) onOrderedListItem223() (interface{}, error) {
	// numbering style: "."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)
	// explicit numbering

}

func (p *parser) callonOrderedListItem223() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem223()
}

func (c *current) onOrderedListItem225() (interface{}, error) {
	// numbering style: "1."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)

}

func (p *parser) callonOrderedListItem225() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem225()
}

func (c *current) onOrderedListItem230() (interface{}, error) {
	// numbering style: "a."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 1)

}

func (p *parser) callonOrderedListItem230() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem230()
}

func (c *current) onOrderedListItem235() (interface{}, error) {
	// numbering style: "A."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 1)

}

func (p *parser) callonOrderedListItem235() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem235()
}

func (c *current) onOrderedListItem240() (interface{}, error) {
	// numbering style: "i)"
	return types.NewOrderedListItemPrefix(types.LowerRoman, 1)

}

func (p *parser) callonOrderedListItem240() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem240()
}

func (c *current) onOrderedListItem245() (interface{}, error) {
	// numbering style: "I)"
	return types.NewOrderedListItemPrefix(types.UpperRoman, 1)

}

func (p *parser) callonOrderedListItem245() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem245()
}

func (c *current) onOrderedListItem253() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem253() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem253()
}

func (c *current) onOrderedListItem206(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonOrderedListItem206() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem206(stack["prefix"])
}

func (c *current) onOrderedListItem266() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem266() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem266()
}

func (c *current) onOrderedListItem258() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonOrderedListItem258() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem258()
}

func (c *current) onOrderedListItem1(attributes, prefix, content interface{}) (interface{}, error) {
	return types.NewOrderedListItem(prefix.(types.OrderedListItemPrefix), content.([]interface{}), attributes.([]interface{}))
}

func (p *parser) callonOrderedListItem1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem1(stack["attributes"], stack["prefix"], stack["content"])
}

func (c *current) onOrderedListItemContent1(elements interface{}) (interface{}, error) {
	// Another list or a literal paragraph immediately following a list item will be implicitly included in the list item
	return types.NewListItemContent(elements.([]interface{}))
}

func (p *parser) callonOrderedListItemContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItemContent1(stack["elements"])
}

func (c *current) onUnorderedListItem9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonUnorderedListItem9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem9()
}

func (c *current) onUnorderedListItem13() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FiveAsterisks, 5)

}

func (p *parser) callonUnorderedListItem13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem13()
}

func (c *current) onUnorderedListItem15() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FourAsterisks, 4)

}

func (p *parser) callonUnorderedListItem15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem15()
}

func (c *current) onUnorderedListItem17() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.ThreeAsterisks, 3)

}

func (p *parser) callonUnorderedListItem17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem17()
}

func (c *current) onUnorderedListItem19() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.TwoAsterisks, 2)

}

func (p *parser) callonUnorderedListItem19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem19()
}

func (c *current) onUnorderedListItem21() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.OneAsterisk, 1)

}

func (p *parser) callonUnorderedListItem21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem21()
}

func (c *current) onUnorderedListItem23() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.Dash, 1)

}

func (p *parser) callonUnorderedListItem23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem23()
}

func (c *current) onUnorderedListItem28() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonUnorderedListItem28() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem28()
}

func (c *current) onUnorderedListItem4(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonUnorderedListItem4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem4(stack["prefix"])
}

func (c *current) onUnorderedListItem41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonUnorderedListItem41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem41()
}

func (c *current) onUnorderedListItem33() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonUnorderedListItem33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem33()
}

func (c *current) onUnorderedListItem1(prefix, content interface{}) (interface{}, error) {
	return types.NewUnorderedListItem(prefix.(types.UnorderedListItemPrefix), content.([]interface{}))
}

func (p *parser) callonUnorderedListItem1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem1(stack["prefix"], stack["content"])
}

func (c *current) onUnorderedListItemContent1(elements interface{}) (interface{}, error) {
	// Another list or a literal paragraph immediately following a list item will be implicitly included in the list item
	return types.NewListItemContent(elements.([]interface{}))
}

func (p *parser) callonUnorderedListItemContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItemContent1(stack["elements"])
}

func (c *current) onLabeledListItem5() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItem5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem5()
}

func (c *current) onLabeledListItem19() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItem19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem19()
}

func (c *current) onLabeledListItem2(term, description interface{}) (interface{}, error) {
	return types.NewLabeledListItem(term.(string), description.([]interface{}))

}

func (p *parser) callonLabeledListItem2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem2(stack["term"], stack["description"])
}

func (c *current) onLabeledListItem28() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItem28() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem28()
}

func (c *current) onLabeledListItem42() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItem42() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem42()
}

func (c *current) onLabeledListItem25(term interface{}) (interface{}, error) {
	// here, WS is optional since there is no description afterwards
	return types.NewLabeledListItem(term.(string), nil)

}

func (p *parser) callonLabeledListItem25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem25(stack["term"])
}

func (c *current) onLabeledListItemDescription1(elements interface{}) (interface{}, error) {
	// TODO: replace with (ListParagraph+ ContinuedDocumentBlock*) and use a single rule for all item contents ?
	return types.NewListItemContent(elements.([]interface{}))
}

func (p *parser) callonLabeledListItemDescription1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItemDescription1(stack["elements"])
}

func (c *current) onParagraph18() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph18()
}

func (c *current) onParagraph31() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph31() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph31()
}

func (c *current) onParagraph43() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonParagraph43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph43()
}

func (c *current) onParagraph45() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonParagraph45() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph45()
}

func (c *current) onParagraph47() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonParagraph47() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph47()
}

func (c *current) onParagraph49() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonParagraph49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph49()
}

func (c *current) onParagraph51() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph51()
}

func (c *current) onParagraph15() (interface{}, error) {
	// make sure quote attribute does not collide with other generic or specific attributes (ID, Admonition, etc)
	return string(c.text), nil
}

func (p *parser) callonParagraph15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph15()
}

func (c *current) onParagraph57() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph57() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph57()
}

func (c *current) onParagraph61() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph61() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph61()
}

func (c *current) onParagraph77() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph77() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph77()
}

func (c *current) onParagraph11(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonParagraph11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph11(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onParagraph99() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph99() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph99()
}

func (c *current) onParagraph112() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph112() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph112()
}

func (c *current) onParagraph124() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonParagraph124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph124()
}

func (c *current) onParagraph126() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonParagraph126() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph126()
}

func (c *current) onParagraph128() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonParagraph128() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph128()
}

func (c *current) onParagraph130() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonParagraph130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph130()
}

func (c *current) onParagraph132() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph132() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph132()
}

func (c *current) onParagraph96() (interface{}, error) {
	// make sure quote attribute does not collide with other generic or specific attributes (ID, Admonition, etc)
	return string(c.text), nil
}

func (p *parser) callonParagraph96() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph96()
}

func (c *current) onParagraph138() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph138()
}

func (c *current) onParagraph142() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph142() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph142()
}

func (c *current) onParagraph92(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonParagraph92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph92(stack["kind"], stack["author"])
}

func (c *current) onParagraph164() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph164() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph164()
}

func (c *current) onParagraph177() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph177() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph177()
}

func (c *current) onParagraph189() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonParagraph189() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph189()
}

func (c *current) onParagraph191() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonParagraph191() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph191()
}

func (c *current) onParagraph193() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonParagraph193() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph193()
}

func (c *current) onParagraph195() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonParagraph195() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph195()
}

func (c *current) onParagraph197() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph197() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph197()
}

func (c *current) onParagraph161() (interface{}, error) {
	// make sure quote attribute does not collide with other generic or specific attributes (ID, Admonition, etc)
	return string(c.text), nil
}

func (p *parser) callonParagraph161() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph161()
}

func (c *current) onParagraph203() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph203() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph203()
}

func (c *current) onParagraph157(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonParagraph157() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph157(stack["kind"])
}

func (c *current) onParagraph210() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph210() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph210()
}

func (c *current) onParagraph215() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph215() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph215()
}

func (c *current) onParagraph219() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph219() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph219()
}

func (c *current) onParagraph235() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph235() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph235()
}

func (c *current) onParagraph206(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonParagraph206() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph206(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onParagraph254() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph254() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph254()
}

func (c *current) onParagraph259() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph259() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph259()
}

func (c *current) onParagraph263() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph263() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph263()
}

func (c *current) onParagraph250(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonParagraph250() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph250(stack["kind"], stack["author"])
}

func (c *current) onParagraph282() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph282() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph282()
}

func (c *current) onParagraph287() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph287() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph287()
}

func (c *current) onParagraph278(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonParagraph278() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph278(stack["kind"])
}

func (c *current) onParagraph293() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph293() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph293()
}

func (c *current) onParagraph7(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonParagraph7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph7(stack["attr"])
}

func (c *current) onParagraph320() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph320() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph320()
}

func (c *current) onParagraph310() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph310() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph310()
}

func (c *current) onParagraph306(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonParagraph306() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph306(stack["id"])
}

func (c *current) onParagraph304(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonParagraph304() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph304(stack["id"])
}

func (c *current) onParagraph346() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph346() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph346()
}

func (c *current) onParagraph336() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph336() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph336()
}

func (c *current) onParagraph332(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonParagraph332() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph332(stack["id"])
}

func (c *current) onParagraph366() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph366() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph366()
}

func (c *current) onParagraph369() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph369() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph369()
}

func (c *current) onParagraph358(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonParagraph358() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph358(stack["title"])
}

func (c *current) onParagraph383() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph383() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph383()
}

func (c *current) onParagraph386() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph386() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph386()
}

func (c *current) onParagraph377(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonParagraph377() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph377(stack["role"])
}

func (c *current) onParagraph402() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonParagraph402() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph402()
}

func (c *current) onParagraph404() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonParagraph404() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph404()
}

func (c *current) onParagraph406() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonParagraph406() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph406()
}

func (c *current) onParagraph408() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonParagraph408() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph408()
}

func (c *current) onParagraph410() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph410() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph410()
}

func (c *current) onParagraph397(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonParagraph397() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph397(stack["k"])
}

func (c *current) onParagraph413() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonParagraph413() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph413()
}

func (c *current) onParagraph421() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph421() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph421()
}

func (c *current) onParagraph432() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph432() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph432()
}

func (c *current) onParagraph429(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph429() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph429(stack["key"])
}

func (c *current) onParagraph446(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph446() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph446(stack["value"])
}

func (c *current) onParagraph462() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph462() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph462()
}

func (c *current) onParagraph426(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonParagraph426() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph426(stack["key"], stack["value"])
}

func (c *current) onParagraph470() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph470() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph470()
}

func (c *current) onParagraph467(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph467() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph467(stack["key"])
}

func (c *current) onParagraph487() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph487() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph487()
}

func (c *current) onParagraph464(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonParagraph464() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph464(stack["key"])
}

func (c *current) onParagraph415(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonParagraph415() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph415(stack["attributes"])
}

func (c *current) onParagraph493() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph493() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph493()
}

func (c *current) onParagraph300(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonParagraph300() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph300(stack["attr"])
}

func (c *current) onParagraph507() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph507() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph507()
}

func (c *current) onParagraph515() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonParagraph515() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph515()
}

func (c *current) onParagraph517() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonParagraph517() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph517()
}

func (c *current) onParagraph519() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonParagraph519() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph519()
}

func (c *current) onParagraph521() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonParagraph521() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph521()
}

func (c *current) onParagraph523() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph523() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph523()
}

func (c *current) onParagraph2(attributes, t, lines interface{}) (interface{}, error) {

	return types.NewAdmonitionParagraph(lines.([]interface{}), t.(types.AdmonitionKind), attributes.([]interface{}))

}

func (p *parser) callonParagraph2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph2(stack["attributes"], stack["t"], stack["lines"])
}

func (c *current) onParagraph545() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph545() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph545()
}

func (c *current) onParagraph558() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph558() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph558()
}

func (c *current) onParagraph570() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonParagraph570() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph570()
}

func (c *current) onParagraph572() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonParagraph572() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph572()
}

func (c *current) onParagraph574() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonParagraph574() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph574()
}

func (c *current) onParagraph576() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonParagraph576() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph576()
}

func (c *current) onParagraph578() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph578() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph578()
}

func (c *current) onParagraph542() (interface{}, error) {
	// make sure quote attribute does not collide with other generic or specific attributes (ID, Admonition, etc)
	return string(c.text), nil
}

func (p *parser) callonParagraph542() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph542()
}

func (c *current) onParagraph584() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph584() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph584()
}

func (c *current) onParagraph588() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph588() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph588()
}

func (c *current) onParagraph604() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph604() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph604()
}

func (c *current) onParagraph538(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonParagraph538() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph538(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onParagraph626() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph626() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph626()
}

func (c *current) onParagraph639() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph639() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph639()
}

func (c *current) onParagraph651() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonParagraph651() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph651()
}

func (c *current) onParagraph653() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonParagraph653() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph653()
}

func (c *current) onParagraph655() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonParagraph655() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph655()
}

func (c *current) onParagraph657() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonParagraph657() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph657()
}

func (c *current) onParagraph659() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph659() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph659()
}

func (c *current) onParagraph623() (interface{}, error) {
	// make sure quote attribute does not collide with other generic or specific attributes (ID, Admonition, etc)
	return string(c.text), nil
}

func (p *parser) callonParagraph623() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph623()
}

func (c *current) onParagraph665() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph665() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph665()
}

func (c *current) onParagraph669() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph669() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph669()
}

func (c *current) onParagraph619(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonParagraph619() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph619(stack["kind"], stack["author"])
}

func (c *current) onParagraph691() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph691() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph691()
}

func (c *current) onParagraph704() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph704() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph704()
}

func (c *current) onParagraph716() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonParagraph716() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph716()
}

func (c *current) onParagraph718() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonParagraph718() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph718()
}

func (c *current) onParagraph720() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonParagraph720() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph720()
}

func (c *current) onParagraph722() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonParagraph722() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph722()
}

func (c *current) onParagraph724() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph724() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph724()
}

func (c *current) onParagraph688() (interface{}, error) {
	// make sure quote attribute does not collide with other generic or specific attributes (ID, Admonition, etc)
	return string(c.text), nil
}

func (p *parser) callonParagraph688() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph688()
}

func (c *current) onParagraph730() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph730() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph730()
}

func (c *current) onParagraph684(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonParagraph684() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph684(stack["kind"])
}

func (c *current) onParagraph737() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph737() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph737()
}

func (c *current) onParagraph742() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph742() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph742()
}

func (c *current) onParagraph746() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph746() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph746()
}

func (c *current) onParagraph762() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph762() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph762()
}

func (c *current) onParagraph733(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonParagraph733() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph733(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onParagraph781() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph781() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph781()
}

func (c *current) onParagraph786() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph786() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph786()
}

func (c *current) onParagraph790() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph790() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph790()
}

func (c *current) onParagraph777(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonParagraph777() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph777(stack["kind"], stack["author"])
}

func (c *current) onParagraph809() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph809() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph809()
}

func (c *current) onParagraph814() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph814() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph814()
}

func (c *current) onParagraph805(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonParagraph805() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph805(stack["kind"])
}

func (c *current) onParagraph820() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph820() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph820()
}

func (c *current) onParagraph534(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonParagraph534() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph534(stack["attr"])
}

func (c *current) onParagraph847() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph847() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph847()
}

func (c *current) onParagraph837() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph837() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph837()
}

func (c *current) onParagraph833(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonParagraph833() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph833(stack["id"])
}

func (c *current) onParagraph831(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonParagraph831() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph831(stack["id"])
}

func (c *current) onParagraph873() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph873() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph873()
}

func (c *current) onParagraph863() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph863() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph863()
}

func (c *current) onParagraph859(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonParagraph859() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph859(stack["id"])
}

func (c *current) onParagraph893() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph893() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph893()
}

func (c *current) onParagraph896() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph896() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph896()
}

func (c *current) onParagraph885(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonParagraph885() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph885(stack["title"])
}

func (c *current) onParagraph910() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph910() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph910()
}

func (c *current) onParagraph913() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph913() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph913()
}

func (c *current) onParagraph904(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonParagraph904() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph904(stack["role"])
}

func (c *current) onParagraph929() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonParagraph929() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph929()
}

func (c *current) onParagraph931() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonParagraph931() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph931()
}

func (c *current) onParagraph933() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonParagraph933() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph933()
}

func (c *current) onParagraph935() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonParagraph935() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph935()
}

func (c *current) onParagraph937() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph937() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph937()
}

func (c *current) onParagraph924(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonParagraph924() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph924(stack["k"])
}

func (c *current) onParagraph940() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonParagraph940() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph940()
}

func (c *current) onParagraph948() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph948() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph948()
}

func (c *current) onParagraph959() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph959() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph959()
}

func (c *current) onParagraph956(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph956() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph956(stack["key"])
}

func (c *current) onParagraph973(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph973() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph973(stack["value"])
}

func (c *current) onParagraph989() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph989() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph989()
}

func (c *current) onParagraph953(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonParagraph953() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph953(stack["key"], stack["value"])
}

func (c *current) onParagraph997() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph997() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph997()
}

func (c *current) onParagraph994(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph994() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph994(stack["key"])
}

func (c *current) onParagraph1014() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph1014() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph1014()
}

func (c *current) onParagraph991(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonParagraph991() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph991(stack["key"])
}

func (c *current) onParagraph942(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonParagraph942() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph942(stack["attributes"])
}

func (c *current) onParagraph1020() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph1020() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph1020()
}

func (c *current) onParagraph827(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonParagraph827() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph827(stack["attr"])
}

func (c *current) onParagraph1034() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph1034() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph1034()
}

func (c *current) onParagraph529(attributes, lines interface{}) (interface{}, error) {

	return types.NewParagraph(lines.([]interface{}), attributes.([]interface{}))

}

func (p *parser) callonParagraph529() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph529(stack["attributes"], stack["lines"])
}

func (c *current) onInlineElements10() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements10()
}

func (c *current) onInlineElements4(content interface{}) (interface{}, error) {
	return types.NewSingleLineComment(content.(string))
}

func (p *parser) callonInlineElements4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements4(stack["content"])
}

func (c *current) onInlineElements2(comment interface{}) (interface{}, error) {
	return types.NewInlineElements([]interface{}{comment})

}

func (p *parser) callonInlineElements2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements2(stack["comment"])
}

func (c *current) onInlineElements50() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements50() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements50()
}

func (c *current) onInlineElements67() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements67()
}

func (c *current) onInlineElements57() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements57() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements57()
}

func (c *current) onInlineElements53(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonInlineElements53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements53(stack["id"])
}

func (c *current) onInlineElements83() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements83() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements83()
}

func (c *current) onInlineElements25(elements interface{}) (interface{}, error) {
	// absorbs heading and trailing spaces
	return types.NewInlineElements(elements.([]interface{}))

}

func (p *parser) callonInlineElements25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements25(stack["elements"])
}

func (c *current) onInlineElement19() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement19()
}

func (c *current) onInlineElement9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement9()
}

func (c *current) onInlineElement5(id interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string))
}

func (p *parser) callonInlineElement5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement5(stack["id"])
}

func (c *current) onInlineElement48() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement48() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement48()
}

func (c *current) onInlineElement38() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement38() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement38()
}

func (c *current) onInlineElement61() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement61() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement61()
}

func (c *current) onInlineElement73() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement73() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement73()
}

func (c *current) onInlineElement85() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement85() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement85()
}

func (c *current) onInlineElement106() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement106()
}

func (c *current) onInlineElement103(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement103() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement103(stack["key"])
}

func (c *current) onInlineElement120(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement120() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement120(stack["value"])
}

func (c *current) onInlineElement136() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement136() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement136()
}

func (c *current) onInlineElement100(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement100() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement100(stack["key"], stack["value"])
}

func (c *current) onInlineElement144() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement144()
}

func (c *current) onInlineElement141(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement141(stack["key"])
}

func (c *current) onInlineElement161() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement161() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement161()
}

func (c *current) onInlineElement138(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement138(stack["key"])
}

func (c *current) onInlineElement57(alt, width, height, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, height, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElement57() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement57(stack["alt"], stack["width"], stack["height"], stack["otherAttrs"])
}

func (c *current) onInlineElement168() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement168() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement168()
}

func (c *current) onInlineElement180() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement180() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement180()
}

func (c *current) onInlineElement201() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement201() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement201()
}

func (c *current) onInlineElement198(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement198(stack["key"])
}

func (c *current) onInlineElement215(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement215() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement215(stack["value"])
}

func (c *current) onInlineElement231() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement231() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement231()
}

func (c *current) onInlineElement195(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement195() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement195(stack["key"], stack["value"])
}

func (c *current) onInlineElement239() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement239() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement239()
}

func (c *current) onInlineElement236(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement236() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement236(stack["key"])
}

func (c *current) onInlineElement256() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement256() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement256()
}

func (c *current) onInlineElement233(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement233() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement233(stack["key"])
}

func (c *current) onInlineElement164(alt, width, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElement164() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement164(stack["alt"], stack["width"], stack["otherAttrs"])
}

func (c *current) onInlineElement263() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement263() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement263()
}

func (c *current) onInlineElement284() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement284() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement284()
}

func (c *current) onInlineElement281(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement281() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement281(stack["key"])
}

func (c *current) onInlineElement298(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement298() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement298(stack["value"])
}

func (c *current) onInlineElement314() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement314() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement314()
}

func (c *current) onInlineElement278(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement278() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement278(stack["key"], stack["value"])
}

func (c *current) onInlineElement322() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement322() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement322()
}

func (c *current) onInlineElement319(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement319() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement319(stack["key"])
}

func (c *current) onInlineElement339() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement339() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement339()
}

func (c *current) onInlineElement316(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement316() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement316(stack["key"])
}

func (c *current) onInlineElement259(alt, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElement259() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement259(stack["alt"], stack["otherAttrs"])
}

func (c *current) onInlineElement354() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement354() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement354()
}

func (c *current) onInlineElement351(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement351() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement351(stack["key"])
}

func (c *current) onInlineElement368(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement368() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement368(stack["value"])
}

func (c *current) onInlineElement384() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement384() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement384()
}

func (c *current) onInlineElement348(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement348() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement348(stack["key"], stack["value"])
}

func (c *current) onInlineElement392() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement392() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement392()
}

func (c *current) onInlineElement389(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement389() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement389(stack["key"])
}

func (c *current) onInlineElement409() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement409() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement409()
}

func (c *current) onInlineElement386(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement386() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement386(stack["key"])
}

func (c *current) onInlineElement342(otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(nil, nil, nil, otherAttrs.([]interface{}))

}

func (p *parser) callonInlineElement342() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement342(stack["otherAttrs"])
}

func (c *current) onInlineElement32(path, attributes interface{}) (interface{}, error) {
	return types.NewInlineImage(path.(string), attributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElement32() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement32(stack["path"], stack["attributes"])
}

func (c *current) onInlineElement438() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement438() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement438()
}

func (c *current) onInlineElement428() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement428() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement428()
}

func (c *current) onInlineElement419() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement419() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement419()
}

func (c *current) onInlineElement451() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement451() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement451()
}

func (c *current) onInlineElement468() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement468() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement468()
}

func (c *current) onInlineElement465(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement465() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement465(stack["key"])
}

func (c *current) onInlineElement482(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement482() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement482(stack["value"])
}

func (c *current) onInlineElement498() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement498() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement498()
}

func (c *current) onInlineElement462(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement462() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement462(stack["key"], stack["value"])
}

func (c *current) onInlineElement506() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement506() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement506()
}

func (c *current) onInlineElement503(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement503() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement503(stack["key"])
}

func (c *current) onInlineElement523() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement523() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement523()
}

func (c *current) onInlineElement500(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement500() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement500(stack["key"])
}

func (c *current) onInlineElement447(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement447() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement447(stack["text"], stack["otherAttrs"])
}

func (c *current) onInlineElement538() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement538() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement538()
}

func (c *current) onInlineElement535(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement535() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement535(stack["key"])
}

func (c *current) onInlineElement552(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement552() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement552(stack["value"])
}

func (c *current) onInlineElement568() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement568() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement568()
}

func (c *current) onInlineElement532(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement532() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement532(stack["key"], stack["value"])
}

func (c *current) onInlineElement576() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement576() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement576()
}

func (c *current) onInlineElement573(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement573() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement573(stack["key"])
}

func (c *current) onInlineElement593() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement593() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement593()
}

func (c *current) onInlineElement570(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement570() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement570(stack["key"])
}

func (c *current) onInlineElement526(otherAttrs interface{}) (interface{}, error) {
	return types.NewLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement526() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement526(stack["otherAttrs"])
}

func (c *current) onInlineElement415(url, attributes interface{}) (interface{}, error) {
	return types.NewLink(url.(string), attributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElement415() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement415(stack["url"], stack["attributes"])
}

func (c *current) onInlineElement617() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement617() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement617()
}

func (c *current) onInlineElement607() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement607() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement607()
}

func (c *current) onInlineElement599() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement599() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement599()
}

func (c *current) onInlineElement630() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement630() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement630()
}

func (c *current) onInlineElement647() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement647() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement647()
}

func (c *current) onInlineElement644(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement644() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement644(stack["key"])
}

func (c *current) onInlineElement661(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement661() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement661(stack["value"])
}

func (c *current) onInlineElement677() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement677() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement677()
}

func (c *current) onInlineElement641(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement641() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement641(stack["key"], stack["value"])
}

func (c *current) onInlineElement685() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement685() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement685()
}

func (c *current) onInlineElement682(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement682() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement682(stack["key"])
}

func (c *current) onInlineElement702() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement702() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement702()
}

func (c *current) onInlineElement679(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement679() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement679(stack["key"])
}

func (c *current) onInlineElement626(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement626() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement626(stack["text"], stack["otherAttrs"])
}

func (c *current) onInlineElement717() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement717() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement717()
}

func (c *current) onInlineElement714(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement714() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement714(stack["key"])
}

func (c *current) onInlineElement731(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement731() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement731(stack["value"])
}

func (c *current) onInlineElement747() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement747() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement747()
}

func (c *current) onInlineElement711(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement711() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement711(stack["key"], stack["value"])
}

func (c *current) onInlineElement755() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement755() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement755()
}

func (c *current) onInlineElement752(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement752() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement752(stack["key"])
}

func (c *current) onInlineElement772() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement772() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement772()
}

func (c *current) onInlineElement749(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement749() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement749(stack["key"])
}

func (c *current) onInlineElement705(otherAttrs interface{}) (interface{}, error) {
	return types.NewLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement705() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement705(stack["otherAttrs"])
}

func (c *current) onInlineElement596(url, attributes interface{}) (interface{}, error) {
	return types.NewLink(url.(string), attributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElement596() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement596(stack["url"], stack["attributes"])
}

func (c *current) onInlineElement795() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement795() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement795()
}

func (c *current) onInlineElement785() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement785() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement785()
}

func (c *current) onInlineElement777() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement777() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement777()
}

func (c *current) onInlineElement775(url interface{}) (interface{}, error) {
	return types.NewLink(url.(string), nil)
}

func (p *parser) callonInlineElement775() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement775(stack["url"])
}

func (c *current) onInlineElement412(link interface{}) (interface{}, error) {
	return link, nil
}

func (p *parser) callonInlineElement412() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement412(stack["link"])
}

func (c *current) onInlineElement806() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement806() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement806()
}

func (c *current) onInlineElement802(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeSubstitution(name.(string))
}

func (p *parser) callonInlineElement802() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement802(stack["name"])
}

func (c *current) onInlineElement822() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement822() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement822()
}

func (c *current) onInlineElement812() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement812() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement812()
}

func (c *current) onInlineElement1(element interface{}) (interface{}, error) {
	return element, nil
}

func (p *parser) callonInlineElement1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1(stack["element"])
}

func (c *current) onBoldText2(content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewQuotedText(types.Bold, content.([]interface{}))

}

func (p *parser) callonBoldText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBoldText2(stack["content"])
}

func (c *current) onBoldText10(content interface{}) (interface{}, error) {
	// unbalanced `**` vs `*` punctuation
	result := append([]interface{}{"*"}, content.([]interface{}))
	return types.NewQuotedText(types.Bold, result)

}

func (p *parser) callonBoldText10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBoldText10(stack["content"])
}

func (c *current) onBoldText18(content interface{}) (interface{}, error) {
	// single punctuation cannot be followed by a character (needs '**' to emphazise a portion of a word)
	return types.NewQuotedText(types.Bold, content.([]interface{}))

}

func (p *parser) callonBoldText18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBoldText18(stack["content"])
}

func (c *current) onEscapedBoldText5() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedBoldText5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText5()
}

func (c *current) onEscapedBoldText2(backslashes, content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewEscapedQuotedText(backslashes.(string), "**", content.([]interface{}))

}

func (p *parser) callonEscapedBoldText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText2(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedBoldText17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedBoldText17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText17()
}

func (c *current) onEscapedBoldText14(backslashes, content interface{}) (interface{}, error) {
	// unbalanced `**` vs `*` punctuation
	result := append([]interface{}{"*"}, content.([]interface{}))
	return types.NewEscapedQuotedText(backslashes.(string), "*", result)

}

func (p *parser) callonEscapedBoldText14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText14(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedBoldText29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedBoldText29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText29()
}

func (c *current) onEscapedBoldText26(backslashes, content interface{}) (interface{}, error) {
	// simple punctuation must be evaluated last
	return types.NewEscapedQuotedText(backslashes.(string), "*", content.([]interface{}))

}

func (p *parser) callonEscapedBoldText26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText26(stack["backslashes"], stack["content"])
}

func (c *current) onItalicText2(content interface{}) (interface{}, error) {
	return types.NewQuotedText(types.Italic, content.([]interface{}))

}

func (p *parser) callonItalicText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onItalicText2(stack["content"])
}

func (c *current) onItalicText10(content interface{}) (interface{}, error) {
	// unbalanced `__` vs `_` punctuation
	result := append([]interface{}{"_"}, content.([]interface{}))
	return types.NewQuotedText(types.Italic, result)

}

func (p *parser) callonItalicText10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onItalicText10(stack["content"])
}

func (c *current) onItalicText18(content interface{}) (interface{}, error) {
	// single punctuation cannot be followed by a character (needs '**' to emphazise a portion of a word)
	return types.NewQuotedText(types.Italic, content.([]interface{}))

}

func (p *parser) callonItalicText18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onItalicText18(stack["content"])
}

func (c *current) onEscapedItalicText5() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedItalicText5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText5()
}

func (c *current) onEscapedItalicText2(backslashes, content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewEscapedQuotedText(backslashes.(string), "__", content.([]interface{}))

}

func (p *parser) callonEscapedItalicText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText2(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedItalicText17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedItalicText17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText17()
}

func (c *current) onEscapedItalicText14(backslashes, content interface{}) (interface{}, error) {
	// unbalanced `__` vs `_` punctuation
	result := append([]interface{}{"_"}, content.([]interface{}))
	return types.NewEscapedQuotedText(backslashes.(string), "_", result)

}

func (p *parser) callonEscapedItalicText14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText14(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedItalicText29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedItalicText29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText29()
}

func (c *current) onEscapedItalicText26(backslashes, content interface{}) (interface{}, error) {
	// simple punctuation must be evaluated last
	return types.NewEscapedQuotedText(backslashes.(string), "_", content.([]interface{}))

}

func (p *parser) callonEscapedItalicText26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText26(stack["backslashes"], stack["content"])
}

func (c *current) onMonospaceText2(content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewQuotedText(types.Monospace, content.([]interface{}))

}

func (p *parser) callonMonospaceText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMonospaceText2(stack["content"])
}

func (c *current) onMonospaceText10(content interface{}) (interface{}, error) {
	// unbalanced "``" vs "`" punctuation
	result := append([]interface{}{"`"}, content.([]interface{}))
	return types.NewQuotedText(types.Monospace, result)

}

func (p *parser) callonMonospaceText10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMonospaceText10(stack["content"])
}

func (c *current) onMonospaceText18(content interface{}) (interface{}, error) {
	// single punctuation cannot be followed by a character (needs '**' to emphazise a portion of a word)
	return types.NewQuotedText(types.Monospace, content.([]interface{}))

}

func (p *parser) callonMonospaceText18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMonospaceText18(stack["content"])
}

func (c *current) onEscapedMonospaceText5() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedMonospaceText5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText5()
}

func (c *current) onEscapedMonospaceText2(backslashes, content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewEscapedQuotedText(backslashes.(string), "``", content.([]interface{}))

}

func (p *parser) callonEscapedMonospaceText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText2(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedMonospaceText17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedMonospaceText17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText17()
}

func (c *current) onEscapedMonospaceText14(backslashes, content interface{}) (interface{}, error) {
	// unbalanced "``" vs "`" punctuation
	result := append([]interface{}{"`"}, content.([]interface{}))
	return types.NewEscapedQuotedText(backslashes.(string), "`", result)

}

func (p *parser) callonEscapedMonospaceText14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText14(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedMonospaceText29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedMonospaceText29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText29()
}

func (c *current) onEscapedMonospaceText26(backslashes, content interface{}) (interface{}, error) {
	// simple punctuation must be evaluated last
	return types.NewEscapedQuotedText(backslashes.(string), "`", content.([]interface{}))

}

func (p *parser) callonEscapedMonospaceText26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText26(stack["backslashes"], stack["content"])
}

func (c *current) onQuotedTextContent8() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuotedTextContent8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContent8()
}

func (c *current) onQuotedTextContentElement12() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuotedTextContentElement12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContentElement12()
}

func (c *current) onQuotedTextContentElement31() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuotedTextContentElement31() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContentElement31()
}

func (c *current) onQuotedTextContentElement21() (interface{}, error) {
	// can have "*", "_" or "`" within, maybe because the user inserted another quote, or made an error (extra or missing space, for example)
	return c.text, nil
}

func (p *parser) callonQuotedTextContentElement21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContentElement21()
}

func (c *current) onPassthrough2(content interface{}) (interface{}, error) {
	return types.NewPassthrough(types.TriplePlusPassthrough, content.([]interface{}))
}

func (p *parser) callonPassthrough2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthrough2(stack["content"])
}

func (c *current) onPassthrough12(content interface{}) (interface{}, error) {
	return types.NewPassthrough(types.SinglePlusPassthrough, content.([]interface{}))
}

func (p *parser) callonPassthrough12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthrough12(stack["content"])
}

func (c *current) onPassthroughMacro2(content interface{}) (interface{}, error) {
	return types.NewPassthrough(types.PassthroughMacro, content.([]interface{}))
}

func (p *parser) callonPassthroughMacro2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthroughMacro2(stack["content"])
}

func (c *current) onPassthroughMacro12(content interface{}) (interface{}, error) {
	return types.NewPassthrough(types.PassthroughMacro, content.([]interface{}))
}

func (p *parser) callonPassthroughMacro12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthroughMacro12(stack["content"])
}

func (c *current) onDelimitedBlock27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock27()
}

func (c *current) onDelimitedBlock17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock17()
}

func (c *current) onDelimitedBlock13(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDelimitedBlock13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock13(stack["id"])
}

func (c *current) onDelimitedBlock11(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonDelimitedBlock11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock11(stack["id"])
}

func (c *current) onDelimitedBlock53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock53()
}

func (c *current) onDelimitedBlock43() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock43()
}

func (c *current) onDelimitedBlock39(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDelimitedBlock39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock39(stack["id"])
}

func (c *current) onDelimitedBlock73() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock73() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock73()
}

func (c *current) onDelimitedBlock76() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock76() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock76()
}

func (c *current) onDelimitedBlock65(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonDelimitedBlock65() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock65(stack["title"])
}

func (c *current) onDelimitedBlock90() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock90() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock90()
}

func (c *current) onDelimitedBlock93() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock93() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock93()
}

func (c *current) onDelimitedBlock84(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonDelimitedBlock84() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock84(stack["role"])
}

func (c *current) onDelimitedBlock109() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonDelimitedBlock109() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock109()
}

func (c *current) onDelimitedBlock111() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonDelimitedBlock111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock111()
}

func (c *current) onDelimitedBlock113() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonDelimitedBlock113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock113()
}

func (c *current) onDelimitedBlock115() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonDelimitedBlock115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock115()
}

func (c *current) onDelimitedBlock117() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonDelimitedBlock117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock117()
}

func (c *current) onDelimitedBlock104(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonDelimitedBlock104() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock104(stack["k"])
}

func (c *current) onDelimitedBlock120() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonDelimitedBlock120() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock120()
}

func (c *current) onDelimitedBlock128() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock128() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock128()
}

func (c *current) onDelimitedBlock139() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock139() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock139()
}

func (c *current) onDelimitedBlock136(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock136() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock136(stack["key"])
}

func (c *current) onDelimitedBlock153(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock153() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock153(stack["value"])
}

func (c *current) onDelimitedBlock169() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock169() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock169()
}

func (c *current) onDelimitedBlock133(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDelimitedBlock133() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock133(stack["key"], stack["value"])
}

func (c *current) onDelimitedBlock177() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock177() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock177()
}

func (c *current) onDelimitedBlock174(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock174() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock174(stack["key"])
}

func (c *current) onDelimitedBlock194() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock194() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock194()
}

func (c *current) onDelimitedBlock171(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDelimitedBlock171() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock171(stack["key"])
}

func (c *current) onDelimitedBlock122(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonDelimitedBlock122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock122(stack["attributes"])
}

func (c *current) onDelimitedBlock200() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock200() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock200()
}

func (c *current) onDelimitedBlock7(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonDelimitedBlock7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock7(stack["attr"])
}

func (c *current) onDelimitedBlock211() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock211() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock211()
}

func (c *current) onDelimitedBlock229() (interface{}, error) {
	// skip EOL in line content, and stop when quote block delimiter is encountered
	return types.NewInlineElements(string(c.text))
}

func (p *parser) callonDelimitedBlock229() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock229()
}

func (c *current) onDelimitedBlock221(line interface{}) (interface{}, error) {
	return line.(types.InlineElements), nil
}

func (p *parser) callonDelimitedBlock221() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock221(stack["line"])
}

func (c *current) onDelimitedBlock218(lines interface{}) (interface{}, error) {
	return types.NewParagraph(lines.([]interface{}), nil)
}

func (p *parser) callonDelimitedBlock218() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock218(stack["lines"])
}

func (c *current) onDelimitedBlock252() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock252() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock252()
}

func (c *current) onDelimitedBlock3(attributes, content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Listing, content.([]interface{}), attributes.([]interface{}), types.None)
}

func (p *parser) callonDelimitedBlock3() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock3(stack["attributes"], stack["content"])
}

func (c *current) onDelimitedBlock286() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock286() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock286()
}

func (c *current) onDelimitedBlock276() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock276() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock276()
}

func (c *current) onDelimitedBlock272(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDelimitedBlock272() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock272(stack["id"])
}

func (c *current) onDelimitedBlock270(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonDelimitedBlock270() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock270(stack["id"])
}

func (c *current) onDelimitedBlock312() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock312() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock312()
}

func (c *current) onDelimitedBlock302() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock302() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock302()
}

func (c *current) onDelimitedBlock298(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDelimitedBlock298() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock298(stack["id"])
}

func (c *current) onDelimitedBlock332() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock332() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock332()
}

func (c *current) onDelimitedBlock335() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock335() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock335()
}

func (c *current) onDelimitedBlock324(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonDelimitedBlock324() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock324(stack["title"])
}

func (c *current) onDelimitedBlock349() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock349() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock349()
}

func (c *current) onDelimitedBlock352() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock352() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock352()
}

func (c *current) onDelimitedBlock343(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonDelimitedBlock343() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock343(stack["role"])
}

func (c *current) onDelimitedBlock368() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonDelimitedBlock368() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock368()
}

func (c *current) onDelimitedBlock370() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonDelimitedBlock370() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock370()
}

func (c *current) onDelimitedBlock372() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonDelimitedBlock372() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock372()
}

func (c *current) onDelimitedBlock374() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonDelimitedBlock374() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock374()
}

func (c *current) onDelimitedBlock376() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonDelimitedBlock376() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock376()
}

func (c *current) onDelimitedBlock363(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonDelimitedBlock363() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock363(stack["k"])
}

func (c *current) onDelimitedBlock379() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonDelimitedBlock379() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock379()
}

func (c *current) onDelimitedBlock387() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock387() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock387()
}

func (c *current) onDelimitedBlock398() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock398() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock398()
}

func (c *current) onDelimitedBlock395(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock395() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock395(stack["key"])
}

func (c *current) onDelimitedBlock412(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock412() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock412(stack["value"])
}

func (c *current) onDelimitedBlock428() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock428() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock428()
}

func (c *current) onDelimitedBlock392(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDelimitedBlock392() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock392(stack["key"], stack["value"])
}

func (c *current) onDelimitedBlock436() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock436() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock436()
}

func (c *current) onDelimitedBlock433(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock433() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock433(stack["key"])
}

func (c *current) onDelimitedBlock453() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock453() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock453()
}

func (c *current) onDelimitedBlock430(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDelimitedBlock430() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock430(stack["key"])
}

func (c *current) onDelimitedBlock381(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonDelimitedBlock381() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock381(stack["attributes"])
}

func (c *current) onDelimitedBlock459() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock459() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock459()
}

func (c *current) onDelimitedBlock266(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonDelimitedBlock266() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock266(stack["attr"])
}

func (c *current) onDelimitedBlock470() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock470() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock470()
}

func (c *current) onDelimitedBlock477() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock477() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock477()
}

func (c *current) onDelimitedBlock501() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock501() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock501()
}

func (c *current) onDelimitedBlock262(attributes, content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Comment, content.([]interface{}), attributes.([]interface{}), types.Verbatim)
}

func (p *parser) callonDelimitedBlock262() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock262(stack["attributes"], stack["content"])
}

func (c *current) onFencedBlock25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock25()
}

func (c *current) onFencedBlock15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock15()
}

func (c *current) onFencedBlock11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonFencedBlock11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock11(stack["id"])
}

func (c *current) onFencedBlock9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonFencedBlock9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock9(stack["id"])
}

func (c *current) onFencedBlock51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock51()
}

func (c *current) onFencedBlock41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock41()
}

func (c *current) onFencedBlock37(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonFencedBlock37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock37(stack["id"])
}

func (c *current) onFencedBlock71() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock71()
}

func (c *current) onFencedBlock74() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock74() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock74()
}

func (c *current) onFencedBlock63(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonFencedBlock63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock63(stack["title"])
}

func (c *current) onFencedBlock88() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock88() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock88()
}

func (c *current) onFencedBlock91() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock91() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock91()
}

func (c *current) onFencedBlock82(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonFencedBlock82() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock82(stack["role"])
}

func (c *current) onFencedBlock107() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonFencedBlock107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock107()
}

func (c *current) onFencedBlock109() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonFencedBlock109() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock109()
}

func (c *current) onFencedBlock111() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonFencedBlock111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock111()
}

func (c *current) onFencedBlock113() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonFencedBlock113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock113()
}

func (c *current) onFencedBlock115() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonFencedBlock115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock115()
}

func (c *current) onFencedBlock102(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonFencedBlock102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock102(stack["k"])
}

func (c *current) onFencedBlock118() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonFencedBlock118() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock118()
}

func (c *current) onFencedBlock126() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock126() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock126()
}

func (c *current) onFencedBlock137() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock137() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock137()
}

func (c *current) onFencedBlock134(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock134() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock134(stack["key"])
}

func (c *current) onFencedBlock151(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock151() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock151(stack["value"])
}

func (c *current) onFencedBlock167() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock167()
}

func (c *current) onFencedBlock131(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonFencedBlock131() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock131(stack["key"], stack["value"])
}

func (c *current) onFencedBlock175() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock175() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock175()
}

func (c *current) onFencedBlock172(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock172() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock172(stack["key"])
}

func (c *current) onFencedBlock192() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock192() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock192()
}

func (c *current) onFencedBlock169(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonFencedBlock169() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock169(stack["key"])
}

func (c *current) onFencedBlock120(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonFencedBlock120() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock120(stack["attributes"])
}

func (c *current) onFencedBlock198() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock198()
}

func (c *current) onFencedBlock5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonFencedBlock5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock5(stack["attr"])
}

func (c *current) onFencedBlock209() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock209() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock209()
}

func (c *current) onFencedBlock227() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock227() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock227()
}

func (c *current) onFencedBlock219() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonFencedBlock219() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock219()
}

func (c *current) onFencedBlock240() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock240() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock240()
}

func (c *current) onFencedBlock1(attributes, content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Fenced, content.([]interface{}), attributes.([]interface{}), types.None)
}

func (p *parser) callonFencedBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock1(stack["attributes"], stack["content"])
}

func (c *current) onExampleBlock25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock25()
}

func (c *current) onExampleBlock15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock15()
}

func (c *current) onExampleBlock11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonExampleBlock11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock11(stack["id"])
}

func (c *current) onExampleBlock9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonExampleBlock9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock9(stack["id"])
}

func (c *current) onExampleBlock51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock51()
}

func (c *current) onExampleBlock41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock41()
}

func (c *current) onExampleBlock37(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonExampleBlock37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock37(stack["id"])
}

func (c *current) onExampleBlock71() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock71()
}

func (c *current) onExampleBlock74() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock74() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock74()
}

func (c *current) onExampleBlock63(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonExampleBlock63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock63(stack["title"])
}

func (c *current) onExampleBlock88() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock88() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock88()
}

func (c *current) onExampleBlock91() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock91() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock91()
}

func (c *current) onExampleBlock82(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonExampleBlock82() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock82(stack["role"])
}

func (c *current) onExampleBlock107() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonExampleBlock107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock107()
}

func (c *current) onExampleBlock109() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonExampleBlock109() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock109()
}

func (c *current) onExampleBlock111() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonExampleBlock111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock111()
}

func (c *current) onExampleBlock113() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonExampleBlock113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock113()
}

func (c *current) onExampleBlock115() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonExampleBlock115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock115()
}

func (c *current) onExampleBlock102(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonExampleBlock102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock102(stack["k"])
}

func (c *current) onExampleBlock118() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonExampleBlock118() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock118()
}

func (c *current) onExampleBlock126() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock126() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock126()
}

func (c *current) onExampleBlock137() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock137() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock137()
}

func (c *current) onExampleBlock134(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock134() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock134(stack["key"])
}

func (c *current) onExampleBlock151(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock151() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock151(stack["value"])
}

func (c *current) onExampleBlock167() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock167()
}

func (c *current) onExampleBlock131(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonExampleBlock131() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock131(stack["key"], stack["value"])
}

func (c *current) onExampleBlock175() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock175() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock175()
}

func (c *current) onExampleBlock172(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock172() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock172(stack["key"])
}

func (c *current) onExampleBlock192() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock192() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock192()
}

func (c *current) onExampleBlock169(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonExampleBlock169() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock169(stack["key"])
}

func (c *current) onExampleBlock120(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonExampleBlock120() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock120(stack["attributes"])
}

func (c *current) onExampleBlock198() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock198()
}

func (c *current) onExampleBlock5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonExampleBlock5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock5(stack["attr"])
}

func (c *current) onExampleBlock209() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock209() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock209()
}

func (c *current) onExampleBlock227() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock227() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock227()
}

func (c *current) onExampleBlock219() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonExampleBlock219() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock219()
}

func (c *current) onExampleBlock240() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock240() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock240()
}

func (c *current) onExampleBlock1(attributes, content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Example, content.([]interface{}), attributes.([]interface{}), types.None)
}

func (p *parser) callonExampleBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock1(stack["attributes"], stack["content"])
}

func (c *current) onBlockParagraph1(lines interface{}) (interface{}, error) {
	return types.NewParagraph(lines.([]interface{}), nil)
}

func (p *parser) callonBlockParagraph1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraph1(stack["lines"])
}

func (c *current) onBlockParagraphLine9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine9()
}

func (c *current) onBlockParagraphLine13() (interface{}, error) {
	// numbering style: "....."
	return types.NewOrderedListItemPrefix(types.UpperRoman, 5)

}

func (p *parser) callonBlockParagraphLine13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine13()
}

func (c *current) onBlockParagraphLine15() (interface{}, error) {
	// numbering style: "...."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 4)

}

func (p *parser) callonBlockParagraphLine15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine15()
}

func (c *current) onBlockParagraphLine17() (interface{}, error) {
	// numbering style: "..."
	return types.NewOrderedListItemPrefix(types.LowerRoman, 3)

}

func (p *parser) callonBlockParagraphLine17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine17()
}

func (c *current) onBlockParagraphLine19() (interface{}, error) {
	// numbering style: ".."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 2)

}

func (p *parser) callonBlockParagraphLine19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine19()
}

func (c *current) onBlockParagraphLine21() (interface{}, error) {
	// numbering style: "."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)
	// explicit numbering

}

func (p *parser) callonBlockParagraphLine21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine21()
}

func (c *current) onBlockParagraphLine23() (interface{}, error) {
	// numbering style: "1."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)

}

func (p *parser) callonBlockParagraphLine23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine23()
}

func (c *current) onBlockParagraphLine28() (interface{}, error) {
	// numbering style: "a."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 1)

}

func (p *parser) callonBlockParagraphLine28() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine28()
}

func (c *current) onBlockParagraphLine33() (interface{}, error) {
	// numbering style: "A."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 1)

}

func (p *parser) callonBlockParagraphLine33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine33()
}

func (c *current) onBlockParagraphLine38() (interface{}, error) {
	// numbering style: "i)"
	return types.NewOrderedListItemPrefix(types.LowerRoman, 1)

}

func (p *parser) callonBlockParagraphLine38() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine38()
}

func (c *current) onBlockParagraphLine43() (interface{}, error) {
	// numbering style: "I)"
	return types.NewOrderedListItemPrefix(types.UpperRoman, 1)

}

func (p *parser) callonBlockParagraphLine43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine43()
}

func (c *current) onBlockParagraphLine51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine51()
}

func (c *current) onBlockParagraphLine4(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonBlockParagraphLine4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine4(stack["prefix"])
}

func (c *current) onBlockParagraphLine59() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine59() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine59()
}

func (c *current) onBlockParagraphLine63() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FiveAsterisks, 5)

}

func (p *parser) callonBlockParagraphLine63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine63()
}

func (c *current) onBlockParagraphLine65() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FourAsterisks, 4)

}

func (p *parser) callonBlockParagraphLine65() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine65()
}

func (c *current) onBlockParagraphLine67() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.ThreeAsterisks, 3)

}

func (p *parser) callonBlockParagraphLine67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine67()
}

func (c *current) onBlockParagraphLine69() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.TwoAsterisks, 2)

}

func (p *parser) callonBlockParagraphLine69() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine69()
}

func (c *current) onBlockParagraphLine71() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.OneAsterisk, 1)

}

func (p *parser) callonBlockParagraphLine71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine71()
}

func (c *current) onBlockParagraphLine73() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.Dash, 1)

}

func (p *parser) callonBlockParagraphLine73() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine73()
}

func (c *current) onBlockParagraphLine78() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine78()
}

func (c *current) onBlockParagraphLine54(prefix interface{}) (interface{}, error) {
	return prefix, nil

}

func (p *parser) callonBlockParagraphLine54() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine54(stack["prefix"])
}

func (c *current) onBlockParagraphLine82() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine82() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine82()
}

func (c *current) onBlockParagraphLine96() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine96() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine96()
}

func (c *current) onBlockParagraphLine107() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine107()
}

func (c *current) onBlockParagraphLine101() (interface{}, error) {
	return types.NewListItemContinuation()
}

func (p *parser) callonBlockParagraphLine101() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine101()
}

func (c *current) onBlockParagraphLine1(line interface{}) (interface{}, error) {
	return line, nil
}

func (p *parser) callonBlockParagraphLine1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine1(stack["line"])
}

func (c *current) onQuoteBlock16() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock16() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock16()
}

func (c *current) onQuoteBlock29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock29()
}

func (c *current) onQuoteBlock41() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonQuoteBlock41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock41()
}

func (c *current) onQuoteBlock43() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonQuoteBlock43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock43()
}

func (c *current) onQuoteBlock45() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonQuoteBlock45() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock45()
}

func (c *current) onQuoteBlock47() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonQuoteBlock47() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock47()
}

func (c *current) onQuoteBlock49() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonQuoteBlock49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock49()
}

func (c *current) onQuoteBlock13() (interface{}, error) {
	// make sure quote attribute does not collide with other generic or specific attributes (ID, Admonition, etc)
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock13()
}

func (c *current) onQuoteBlock55() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock55() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock55()
}

func (c *current) onQuoteBlock59() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock59() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock59()
}

func (c *current) onQuoteBlock75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock75()
}

func (c *current) onQuoteBlock9(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonQuoteBlock9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock9(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onQuoteBlock97() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock97() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock97()
}

func (c *current) onQuoteBlock110() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock110() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock110()
}

func (c *current) onQuoteBlock122() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonQuoteBlock122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock122()
}

func (c *current) onQuoteBlock124() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonQuoteBlock124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock124()
}

func (c *current) onQuoteBlock126() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonQuoteBlock126() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock126()
}

func (c *current) onQuoteBlock128() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonQuoteBlock128() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock128()
}

func (c *current) onQuoteBlock130() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonQuoteBlock130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock130()
}

func (c *current) onQuoteBlock94() (interface{}, error) {
	// make sure quote attribute does not collide with other generic or specific attributes (ID, Admonition, etc)
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock94() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock94()
}

func (c *current) onQuoteBlock136() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock136() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock136()
}

func (c *current) onQuoteBlock140() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock140() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock140()
}

func (c *current) onQuoteBlock90(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonQuoteBlock90() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock90(stack["kind"], stack["author"])
}

func (c *current) onQuoteBlock162() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock162() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock162()
}

func (c *current) onQuoteBlock175() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock175() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock175()
}

func (c *current) onQuoteBlock187() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonQuoteBlock187() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock187()
}

func (c *current) onQuoteBlock189() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonQuoteBlock189() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock189()
}

func (c *current) onQuoteBlock191() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonQuoteBlock191() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock191()
}

func (c *current) onQuoteBlock193() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonQuoteBlock193() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock193()
}

func (c *current) onQuoteBlock195() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonQuoteBlock195() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock195()
}

func (c *current) onQuoteBlock159() (interface{}, error) {
	// make sure quote attribute does not collide with other generic or specific attributes (ID, Admonition, etc)
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock159() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock159()
}

func (c *current) onQuoteBlock201() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock201() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock201()
}

func (c *current) onQuoteBlock155(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonQuoteBlock155() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock155(stack["kind"])
}

func (c *current) onQuoteBlock207() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock207() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock207()
}

func (c *current) onQuoteBlock5(attribute interface{}) (interface{}, error) {
	return attribute, nil

}

func (p *parser) callonQuoteBlock5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock5(stack["attribute"])
}

func (c *current) onQuoteBlock218() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock218() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock218()
}

func (c *current) onQuoteBlock232() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock232() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock232()
}

func (c *current) onQuoteBlock1(attributes, content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Quote,
		content.([]interface{}),
		attributes.([]interface{}),
		types.None)
}

func (p *parser) callonQuoteBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock1(stack["attributes"], stack["content"])
}

func (c *current) onQuoteBlockContent1(element interface{}) (interface{}, error) {
	return element, nil

}

func (p *parser) callonQuoteBlockContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlockContent1(stack["element"])
}

func (c *current) onVerseBlock13() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock13()
}

func (c *current) onVerseBlock18() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock18()
}

func (c *current) onVerseBlock22() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock22() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock22()
}

func (c *current) onVerseBlock38() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock38() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock38()
}

func (c *current) onVerseBlock9(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonVerseBlock9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock9(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onVerseBlock57() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock57() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock57()
}

func (c *current) onVerseBlock62() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock62() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock62()
}

func (c *current) onVerseBlock66() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock66() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock66()
}

func (c *current) onVerseBlock53(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonVerseBlock53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock53(stack["kind"], stack["author"])
}

func (c *current) onVerseBlock85() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock85() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock85()
}

func (c *current) onVerseBlock90() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock90() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock90()
}

func (c *current) onVerseBlock81(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonVerseBlock81() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock81(stack["kind"])
}

func (c *current) onVerseBlock96() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock96() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock96()
}

func (c *current) onVerseBlock5(attribute interface{}) (interface{}, error) {
	return attribute, nil

}

func (p *parser) callonVerseBlock5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock5(stack["attribute"])
}

func (c *current) onVerseBlock107() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock107()
}

func (c *current) onVerseBlock121() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock121()
}

func (c *current) onVerseBlock1(attributes, content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Verse,
		content.([]interface{}),
		attributes.([]interface{}),
		types.None)
}

func (p *parser) callonVerseBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock1(stack["attributes"], stack["content"])
}

func (c *current) onVerseBlockContent1(lines interface{}) (interface{}, error) {
	return types.NewParagraph(lines.([]interface{}), nil)
}

func (p *parser) callonVerseBlockContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockContent1(stack["lines"])
}

func (c *current) onVerseBlockLine1(line interface{}) (interface{}, error) {
	return line.(types.InlineElements), nil
}

func (p *parser) callonVerseBlockLine1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLine1(stack["line"])
}

func (c *current) onVerseBlockLineContent16() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlockLineContent16() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLineContent16()
}

func (c *current) onVerseBlockLineContent22() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlockLineContent22() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLineContent22()
}

func (c *current) onVerseBlockLineContent1(elements interface{}) (interface{}, error) {
	// skip EOL in line content, and stop when quote block delimiter is encountered
	return types.NewInlineElements(elements.([]interface{}))
}

func (p *parser) callonVerseBlockLineContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLineContent1(stack["elements"])
}

func (c *current) onTable25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable25()
}

func (c *current) onTable15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable15()
}

func (c *current) onTable11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonTable11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable11(stack["id"])
}

func (c *current) onTable9(id interface{}) (interface{}, error) {
	return id, nil
}

func (p *parser) callonTable9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable9(stack["id"])
}

func (c *current) onTable51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable51()
}

func (c *current) onTable41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable41()
}

func (c *current) onTable37(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonTable37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable37(stack["id"])
}

func (c *current) onTable71() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable71()
}

func (c *current) onTable74() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable74() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable74()
}

func (c *current) onTable63(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonTable63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable63(stack["title"])
}

func (c *current) onTable88() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable88() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable88()
}

func (c *current) onTable91() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable91() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable91()
}

func (c *current) onTable82(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonTable82() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable82(stack["role"])
}

func (c *current) onTable107() (interface{}, error) {
	return types.Tip, nil
}

func (p *parser) callonTable107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable107()
}

func (c *current) onTable109() (interface{}, error) {
	return types.Note, nil
}

func (p *parser) callonTable109() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable109()
}

func (c *current) onTable111() (interface{}, error) {
	return types.Important, nil
}

func (p *parser) callonTable111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable111()
}

func (c *current) onTable113() (interface{}, error) {
	return types.Warning, nil
}

func (p *parser) callonTable113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable113()
}

func (c *current) onTable115() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonTable115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable115()
}

func (c *current) onTable102(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonTable102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable102(stack["k"])
}

func (c *current) onTable118() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonTable118() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable118()
}

func (c *current) onTable126() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable126() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable126()
}

func (c *current) onTable137() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable137() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable137()
}

func (c *current) onTable134(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable134() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable134(stack["key"])
}

func (c *current) onTable151(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable151() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable151(stack["value"])
}

func (c *current) onTable167() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable167()
}

func (c *current) onTable131(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTable131() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable131(stack["key"], stack["value"])
}

func (c *current) onTable175() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable175() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable175()
}

func (c *current) onTable172(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable172() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable172(stack["key"])
}

func (c *current) onTable192() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable192() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable192()
}

func (c *current) onTable169(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTable169() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable169(stack["key"])
}

func (c *current) onTable120(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonTable120() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable120(stack["attributes"])
}

func (c *current) onTable198() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable198()
}

func (c *current) onTable5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonTable5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable5(stack["attr"])
}

func (c *current) onTable209() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable209() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable209()
}

func (c *current) onTable226() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable226() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable226()
}

func (c *current) onTable1(attributes, header, lines interface{}) (interface{}, error) {
	// end delimiter or end of file
	return types.NewTable(header, lines.([]interface{}), attributes.([]interface{}))

}

func (p *parser) callonTable1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable1(stack["attributes"], stack["header"], stack["lines"])
}

func (c *current) onTableLineHeader21() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableLineHeader21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLineHeader21()
}

func (c *current) onTableLineHeader13(cells interface{}) (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonTableLineHeader13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLineHeader13(stack["cells"])
}

func (c *current) onTableLineHeader1(cells interface{}) (interface{}, error) {
	return types.NewTableLine(cells.([]interface{}))
}

func (p *parser) callonTableLineHeader1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLineHeader1(stack["cells"])
}

func (c *current) onTableLine22() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableLine22() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLine22()
}

func (c *current) onTableLine14() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonTableLine14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLine14()
}

func (c *current) onTableLine1(cells interface{}) (interface{}, error) {
	return types.NewTableLine(cells.([]interface{}))
}

func (p *parser) callonTableLine1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLine1(stack["cells"])
}

func (c *current) onTableCell7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableCell7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell7()
}

func (c *current) onTableCell18() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableCell18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell18()
}

func (c *current) onTableCell29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableCell29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell29()
}

func (c *current) onTableCell35() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableCell35() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell35()
}

func (c *current) onTableCell1(elements interface{}) (interface{}, error) {
	return types.NewInlineElements(elements)
}

func (p *parser) callonTableCell1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell1(stack["elements"])
}

func (c *current) onWS3() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonWS3() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onWS3()
}

var (
	// errNoRule is returned when the grammar to parse has no rule.
	errNoRule = errors.New("grammar has no rule")

	// errInvalidEntrypoint is returned when the specified entrypoint rule
	// does not exit.
	errInvalidEntrypoint = errors.New("invalid entrypoint")

	// errInvalidEncoding is returned when the source is not properly
	// utf8-encoded.
	errInvalidEncoding = errors.New("invalid encoding")

	// errMaxExprCnt is used to signal that the maximum number of
	// expressions have been parsed.
	errMaxExprCnt = errors.New("max number of expresssions parsed")
)

// Option is a function that can set an option on the parser. It returns
// the previous setting as an Option.
type Option func(*parser) Option

// MaxExpressions creates an Option to stop parsing after the provided
// number of expressions have been parsed, if the value is 0 then the parser will
// parse for as many steps as needed (possibly an infinite number).
//
// The default for maxExprCnt is 0.
func MaxExpressions(maxExprCnt uint64) Option {
	return func(p *parser) Option {
		oldMaxExprCnt := p.maxExprCnt
		p.maxExprCnt = maxExprCnt
		return MaxExpressions(oldMaxExprCnt)
	}
}

// Entrypoint creates an Option to set the rule name to use as entrypoint.
// The rule name must have been specified in the -alternate-entrypoints
// if generating the parser with the -optimize-grammar flag, otherwise
// it may have been optimized out. Passing an empty string sets the
// entrypoint to the first rule in the grammar.
//
// The default is to start parsing at the first rule in the grammar.
func Entrypoint(ruleName string) Option {
	return func(p *parser) Option {
		oldEntrypoint := p.entrypoint
		p.entrypoint = ruleName
		if ruleName == "" {
			p.entrypoint = g.rules[0].name
		}
		return Entrypoint(oldEntrypoint)
	}
}

// Statistics adds a user provided Stats struct to the parser to allow
// the user to process the results after the parsing has finished.
// Also the key for the "no match" counter is set.
//
// Example usage:
//
//     input := "input"
//     stats := Stats{}
//     _, err := Parse("input-file", []byte(input), Statistics(&stats, "no match"))
//     if err != nil {
//         log.Panicln(err)
//     }
//     b, err := json.MarshalIndent(stats.ChoiceAltCnt, "", "  ")
//     if err != nil {
//         log.Panicln(err)
//     }
//     fmt.Println(string(b))
//
func Statistics(stats *Stats, choiceNoMatch string) Option {
	return func(p *parser) Option {
		oldStats := p.Stats
		p.Stats = stats
		oldChoiceNoMatch := p.choiceNoMatch
		p.choiceNoMatch = choiceNoMatch
		if p.Stats.ChoiceAltCnt == nil {
			p.Stats.ChoiceAltCnt = make(map[string]map[string]int)
		}
		return Statistics(oldStats, oldChoiceNoMatch)
	}
}

// Debug creates an Option to set the debug flag to b. When set to true,
// debugging information is printed to stdout while parsing.
//
// The default is false.
func Debug(b bool) Option {
	return func(p *parser) Option {
		old := p.debug
		p.debug = b
		return Debug(old)
	}
}

// Memoize creates an Option to set the memoize flag to b. When set to true,
// the parser will cache all results so each expression is evaluated only
// once. This guarantees linear parsing time even for pathological cases,
// at the expense of more memory and slower times for typical cases.
//
// The default is false.
func Memoize(b bool) Option {
	return func(p *parser) Option {
		old := p.memoize
		p.memoize = b
		return Memoize(old)
	}
}

// AllowInvalidUTF8 creates an Option to allow invalid UTF-8 bytes.
// Every invalid UTF-8 byte is treated as a utf8.RuneError (U+FFFD)
// by character class matchers and is matched by the any matcher.
// The returned matched value, c.text and c.offset are NOT affected.
//
// The default is false.
func AllowInvalidUTF8(b bool) Option {
	return func(p *parser) Option {
		old := p.allowInvalidUTF8
		p.allowInvalidUTF8 = b
		return AllowInvalidUTF8(old)
	}
}

// Recover creates an Option to set the recover flag to b. When set to
// true, this causes the parser to recover from panics and convert it
// to an error. Setting it to false can be useful while debugging to
// access the full stack trace.
//
// The default is true.
func Recover(b bool) Option {
	return func(p *parser) Option {
		old := p.recover
		p.recover = b
		return Recover(old)
	}
}

// GlobalStore creates an Option to set a key to a certain value in
// the globalStore.
func GlobalStore(key string, value interface{}) Option {
	return func(p *parser) Option {
		old := p.cur.globalStore[key]
		p.cur.globalStore[key] = value
		return GlobalStore(key, old)
	}
}

// InitState creates an Option to set a key to a certain value in
// the global "state" store.
func InitState(key string, value interface{}) Option {
	return func(p *parser) Option {
		old := p.cur.state[key]
		p.cur.state[key] = value
		return InitState(key, old)
	}
}

// ParseFile parses the file identified by filename.
func ParseFile(filename string, opts ...Option) (i interface{}, err error) {
	f, err := os.Open(filename)
	if err != nil {
		return nil, err
	}
	defer func() {
		if closeErr := f.Close(); closeErr != nil {
			err = closeErr
		}
	}()
	return ParseReader(filename, f, opts...)
}

// ParseReader parses the data from r using filename as information in the
// error messages.
func ParseReader(filename string, r io.Reader, opts ...Option) (interface{}, error) {
	b, err := ioutil.ReadAll(r)
	if err != nil {
		return nil, err
	}

	return Parse(filename, b, opts...)
}

// Parse parses the data from b using filename as information in the
// error messages.
func Parse(filename string, b []byte, opts ...Option) (interface{}, error) {
	return newParser(filename, b, opts...).parse(g)
}

// position records a position in the text.
type position struct {
	line, col, offset int
}

func (p position) String() string {
	return fmt.Sprintf("%d:%d [%d]", p.line, p.col, p.offset)
}

// savepoint stores all state required to go back to this point in the
// parser.
type savepoint struct {
	position
	rn rune
	w  int
}

type current struct {
	pos  position // start position of the match
	text []byte   // raw text of the match

	// state is a store for arbitrary key,value pairs that the user wants to be
	// tied to the backtracking of the parser.
	// This is always rolled back if a parsing rule fails.
	state storeDict

	// globalStore is a general store for the user to store arbitrary key-value
	// pairs that they need to manage and that they do not want tied to the
	// backtracking of the parser. This is only modified by the user and never
	// rolled back by the parser. It is always up to the user to keep this in a
	// consistent state.
	globalStore storeDict
}

type storeDict map[string]interface{}

// the AST types...

type grammar struct {
	pos   position
	rules []*rule
}

type rule struct {
	pos         position
	name        string
	displayName string
	expr        interface{}
}

type choiceExpr struct {
	pos          position
	alternatives []interface{}
}

type actionExpr struct {
	pos  position
	expr interface{}
	run  func(*parser) (interface{}, error)
}

type recoveryExpr struct {
	pos          position
	expr         interface{}
	recoverExpr  interface{}
	failureLabel []string
}

type seqExpr struct {
	pos   position
	exprs []interface{}
}

type throwExpr struct {
	pos   position
	label string
}

type labeledExpr struct {
	pos   position
	label string
	expr  interface{}
}

type expr struct {
	pos  position
	expr interface{}
}

type andExpr expr
type notExpr expr
type zeroOrOneExpr expr
type zeroOrMoreExpr expr
type oneOrMoreExpr expr

type ruleRefExpr struct {
	pos  position
	name string
}

type stateCodeExpr struct {
	pos position
	run func(*parser) error
}

type andCodeExpr struct {
	pos position
	run func(*parser) (bool, error)
}

type notCodeExpr struct {
	pos position
	run func(*parser) (bool, error)
}

type litMatcher struct {
	pos        position
	val        string
	ignoreCase bool
}

type charClassMatcher struct {
	pos             position
	val             string
	basicLatinChars [128]bool
	chars           []rune
	ranges          []rune
	classes         []*unicode.RangeTable
	ignoreCase      bool
	inverted        bool
}

type anyMatcher position

// errList cumulates the errors found by the parser.
type errList []error

func (e *errList) add(err error) {
	*e = append(*e, err)
}

func (e errList) err() error {
	if len(e) == 0 {
		return nil
	}
	e.dedupe()
	return e
}

func (e *errList) dedupe() {
	var cleaned []error
	set := make(map[string]bool)
	for _, err := range *e {
		if msg := err.Error(); !set[msg] {
			set[msg] = true
			cleaned = append(cleaned, err)
		}
	}
	*e = cleaned
}

func (e errList) Error() string {
	switch len(e) {
	case 0:
		return ""
	case 1:
		return e[0].Error()
	default:
		var buf bytes.Buffer

		for i, err := range e {
			if i > 0 {
				buf.WriteRune('\n')
			}
			buf.WriteString(err.Error())
		}
		return buf.String()
	}
}

// parserError wraps an error with a prefix indicating the rule in which
// the error occurred. The original error is stored in the Inner field.
type parserError struct {
	Inner    error
	pos      position
	prefix   string
	expected []string
}

// Error returns the error message.
func (p *parserError) Error() string {
	return p.prefix + ": " + p.Inner.Error()
}

// newParser creates a parser with the specified input source and options.
func newParser(filename string, b []byte, opts ...Option) *parser {
	stats := Stats{
		ChoiceAltCnt: make(map[string]map[string]int),
	}

	p := &parser{
		filename: filename,
		errs:     new(errList),
		data:     b,
		pt:       savepoint{position: position{line: 1}},
		recover:  true,
		cur: current{
			state:       make(storeDict),
			globalStore: make(storeDict),
		},
		maxFailPos:      position{col: 1, line: 1},
		maxFailExpected: make([]string, 0, 20),
		Stats:           &stats,
		// start rule is rule [0] unless an alternate entrypoint is specified
		entrypoint: g.rules[0].name,
	}
	p.setOptions(opts)

	if p.maxExprCnt == 0 {
		p.maxExprCnt = math.MaxUint64
	}

	return p
}

// setOptions applies the options to the parser.
func (p *parser) setOptions(opts []Option) {
	for _, opt := range opts {
		opt(p)
	}
}

type resultTuple struct {
	v   interface{}
	b   bool
	end savepoint
}

const choiceNoMatch = -1

// Stats stores some statistics, gathered during parsing
type Stats struct {
	// ExprCnt counts the number of expressions processed during parsing
	// This value is compared to the maximum number of expressions allowed
	// (set by the MaxExpressions option).
	ExprCnt uint64

	// ChoiceAltCnt is used to count for each ordered choice expression,
	// which alternative is used how may times.
	// These numbers allow to optimize the order of the ordered choice expression
	// to increase the performance of the parser
	//
	// The outer key of ChoiceAltCnt is composed of the name of the rule as well
	// as the line and the column of the ordered choice.
	// The inner key of ChoiceAltCnt is the number (one-based) of the matching alternative.
	// For each alternative the number of matches are counted. If an ordered choice does not
	// match, a special counter is incremented. The name of this counter is set with
	// the parser option Statistics.
	// For an alternative to be included in ChoiceAltCnt, it has to match at least once.
	ChoiceAltCnt map[string]map[string]int
}

type parser struct {
	filename string
	pt       savepoint
	cur      current

	data []byte
	errs *errList

	depth   int
	recover bool
	debug   bool

	memoize bool
	// memoization table for the packrat algorithm:
	// map[offset in source] map[expression or rule] {value, match}
	memo map[int]map[interface{}]resultTuple

	// rules table, maps the rule identifier to the rule node
	rules map[string]*rule
	// variables stack, map of label to value
	vstack []map[string]interface{}
	// rule stack, allows identification of the current rule in errors
	rstack []*rule

	// parse fail
	maxFailPos            position
	maxFailExpected       []string
	maxFailInvertExpected bool

	// max number of expressions to be parsed
	maxExprCnt uint64
	// entrypoint for the parser
	entrypoint string

	allowInvalidUTF8 bool

	*Stats

	choiceNoMatch string
	// recovery expression stack, keeps track of the currently available recovery expression, these are traversed in reverse
	recoveryStack []map[string]interface{}
}

// push a variable set on the vstack.
func (p *parser) pushV() {
	if cap(p.vstack) == len(p.vstack) {
		// create new empty slot in the stack
		p.vstack = append(p.vstack, nil)
	} else {
		// slice to 1 more
		p.vstack = p.vstack[:len(p.vstack)+1]
	}

	// get the last args set
	m := p.vstack[len(p.vstack)-1]
	if m != nil && len(m) == 0 {
		// empty map, all good
		return
	}

	m = make(map[string]interface{})
	p.vstack[len(p.vstack)-1] = m
}

// pop a variable set from the vstack.
func (p *parser) popV() {
	// if the map is not empty, clear it
	m := p.vstack[len(p.vstack)-1]
	if len(m) > 0 {
		// GC that map
		p.vstack[len(p.vstack)-1] = nil
	}
	p.vstack = p.vstack[:len(p.vstack)-1]
}

// push a recovery expression with its labels to the recoveryStack
func (p *parser) pushRecovery(labels []string, expr interface{}) {
	if cap(p.recoveryStack) == len(p.recoveryStack) {
		// create new empty slot in the stack
		p.recoveryStack = append(p.recoveryStack, nil)
	} else {
		// slice to 1 more
		p.recoveryStack = p.recoveryStack[:len(p.recoveryStack)+1]
	}

	m := make(map[string]interface{}, len(labels))
	for _, fl := range labels {
		m[fl] = expr
	}
	p.recoveryStack[len(p.recoveryStack)-1] = m
}

// pop a recovery expression from the recoveryStack
func (p *parser) popRecovery() {
	// GC that map
	p.recoveryStack[len(p.recoveryStack)-1] = nil

	p.recoveryStack = p.recoveryStack[:len(p.recoveryStack)-1]
}

func (p *parser) print(prefix, s string) string {
	if !p.debug {
		return s
	}

	fmt.Printf("%s %d:%d:%d: %s [%#U]\n",
		prefix, p.pt.line, p.pt.col, p.pt.offset, s, p.pt.rn)
	return s
}

func (p *parser) in(s string) string {
	p.depth++
	return p.print(strings.Repeat(" ", p.depth)+">", s)
}

func (p *parser) out(s string) string {
	p.depth--
	return p.print(strings.Repeat(" ", p.depth)+"<", s)
}

func (p *parser) addErr(err error) {
	p.addErrAt(err, p.pt.position, []string{})
}

func (p *parser) addErrAt(err error, pos position, expected []string) {
	var buf bytes.Buffer
	if p.filename != "" {
		buf.WriteString(p.filename)
	}
	if buf.Len() > 0 {
		buf.WriteString(":")
	}
	buf.WriteString(fmt.Sprintf("%d:%d (%d)", pos.line, pos.col, pos.offset))
	if len(p.rstack) > 0 {
		if buf.Len() > 0 {
			buf.WriteString(": ")
		}
		rule := p.rstack[len(p.rstack)-1]
		if rule.displayName != "" {
			buf.WriteString("rule " + rule.displayName)
		} else {
			buf.WriteString("rule " + rule.name)
		}
	}
	pe := &parserError{Inner: err, pos: pos, prefix: buf.String(), expected: expected}
	p.errs.add(pe)
}

func (p *parser) failAt(fail bool, pos position, want string) {
	// process fail if parsing fails and not inverted or parsing succeeds and invert is set
	if fail == p.maxFailInvertExpected {
		if pos.offset < p.maxFailPos.offset {
			return
		}

		if pos.offset > p.maxFailPos.offset {
			p.maxFailPos = pos
			p.maxFailExpected = p.maxFailExpected[:0]
		}

		if p.maxFailInvertExpected {
			want = "!" + want
		}
		p.maxFailExpected = append(p.maxFailExpected, want)
	}
}

// read advances the parser to the next rune.
func (p *parser) read() {
	p.pt.offset += p.pt.w
	rn, n := utf8.DecodeRune(p.data[p.pt.offset:])
	p.pt.rn = rn
	p.pt.w = n
	p.pt.col++
	if rn == '\n' {
		p.pt.line++
		p.pt.col = 0
	}

	if rn == utf8.RuneError && n == 1 { // see utf8.DecodeRune
		if !p.allowInvalidUTF8 {
			p.addErr(errInvalidEncoding)
		}
	}
}

// restore parser position to the savepoint pt.
func (p *parser) restore(pt savepoint) {
	if p.debug {
		defer p.out(p.in("restore"))
	}
	if pt.offset == p.pt.offset {
		return
	}
	p.pt = pt
}

// Cloner is implemented by any value that has a Clone method, which returns a
// copy of the value. This is mainly used for types which are not passed by
// value (e.g map, slice, chan) or structs that contain such types.
//
// This is used in conjunction with the global state feature to create proper
// copies of the state to allow the parser to properly restore the state in
// the case of backtracking.
type Cloner interface {
	Clone() interface{}
}

// clone and return parser current state.
func (p *parser) cloneState() storeDict {
	if p.debug {
		defer p.out(p.in("cloneState"))
	}

	state := make(storeDict, len(p.cur.state))
	for k, v := range p.cur.state {
		if c, ok := v.(Cloner); ok {
			state[k] = c.Clone()
		} else {
			state[k] = v
		}
	}
	return state
}

// restore parser current state to the state storeDict.
// every restoreState should applied only one time for every cloned state
func (p *parser) restoreState(state storeDict) {
	if p.debug {
		defer p.out(p.in("restoreState"))
	}
	p.cur.state = state
}

// get the slice of bytes from the savepoint start to the current position.
func (p *parser) sliceFrom(start savepoint) []byte {
	return p.data[start.position.offset:p.pt.position.offset]
}

func (p *parser) getMemoized(node interface{}) (resultTuple, bool) {
	if len(p.memo) == 0 {
		return resultTuple{}, false
	}
	m := p.memo[p.pt.offset]
	if len(m) == 0 {
		return resultTuple{}, false
	}
	res, ok := m[node]
	return res, ok
}

func (p *parser) setMemoized(pt savepoint, node interface{}, tuple resultTuple) {
	if p.memo == nil {
		p.memo = make(map[int]map[interface{}]resultTuple)
	}
	m := p.memo[pt.offset]
	if m == nil {
		m = make(map[interface{}]resultTuple)
		p.memo[pt.offset] = m
	}
	m[node] = tuple
}

func (p *parser) buildRulesTable(g *grammar) {
	p.rules = make(map[string]*rule, len(g.rules))
	for _, r := range g.rules {
		p.rules[r.name] = r
	}
}

func (p *parser) parse(g *grammar) (val interface{}, err error) {
	if len(g.rules) == 0 {
		p.addErr(errNoRule)
		return nil, p.errs.err()
	}

	// TODO : not super critical but this could be generated
	p.buildRulesTable(g)

	if p.recover {
		// panic can be used in action code to stop parsing immediately
		// and return the panic as an error.
		defer func() {
			if e := recover(); e != nil {
				if p.debug {
					defer p.out(p.in("panic handler"))
				}
				val = nil
				switch e := e.(type) {
				case error:
					p.addErr(e)
				default:
					p.addErr(fmt.Errorf("%v", e))
				}
				err = p.errs.err()
			}
		}()
	}

	startRule, ok := p.rules[p.entrypoint]
	if !ok {
		p.addErr(errInvalidEntrypoint)
		return nil, p.errs.err()
	}

	p.read() // advance to first rune
	val, ok = p.parseRule(startRule)
	if !ok {
		if len(*p.errs) == 0 {
			// If parsing fails, but no errors have been recorded, the expected values
			// for the farthest parser position are returned as error.
			maxFailExpectedMap := make(map[string]struct{}, len(p.maxFailExpected))
			for _, v := range p.maxFailExpected {
				maxFailExpectedMap[v] = struct{}{}
			}
			expected := make([]string, 0, len(maxFailExpectedMap))
			eof := false
			if _, ok := maxFailExpectedMap["!."]; ok {
				delete(maxFailExpectedMap, "!.")
				eof = true
			}
			for k := range maxFailExpectedMap {
				expected = append(expected, k)
			}
			sort.Strings(expected)
			if eof {
				expected = append(expected, "EOF")
			}
			p.addErrAt(errors.New("no match found, expected: "+listJoin(expected, ", ", "or")), p.maxFailPos, expected)
		}

		return nil, p.errs.err()
	}
	return val, p.errs.err()
}

func listJoin(list []string, sep string, lastSep string) string {
	switch len(list) {
	case 0:
		return ""
	case 1:
		return list[0]
	default:
		return fmt.Sprintf("%s %s %s", strings.Join(list[:len(list)-1], sep), lastSep, list[len(list)-1])
	}
}

func (p *parser) parseRule(rule *rule) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseRule " + rule.name))
	}

	if p.memoize {
		res, ok := p.getMemoized(rule)
		if ok {
			p.restore(res.end)
			return res.v, res.b
		}
	}

	start := p.pt
	p.rstack = append(p.rstack, rule)
	p.pushV()
	val, ok := p.parseExpr(rule.expr)
	p.popV()
	p.rstack = p.rstack[:len(p.rstack)-1]
	if ok && p.debug {
		p.print(strings.Repeat(" ", p.depth)+"MATCH", string(p.sliceFrom(start)))
	}

	if p.memoize {
		p.setMemoized(start, rule, resultTuple{val, ok, p.pt})
	}
	return val, ok
}

func (p *parser) parseExpr(expr interface{}) (interface{}, bool) {
	var pt savepoint

	if p.memoize {
		res, ok := p.getMemoized(expr)
		if ok {
			p.restore(res.end)
			return res.v, res.b
		}
		pt = p.pt
	}

	p.ExprCnt++
	if p.ExprCnt > p.maxExprCnt {
		panic(errMaxExprCnt)
	}

	var val interface{}
	var ok bool
	switch expr := expr.(type) {
	case *actionExpr:
		val, ok = p.parseActionExpr(expr)
	case *andCodeExpr:
		val, ok = p.parseAndCodeExpr(expr)
	case *andExpr:
		val, ok = p.parseAndExpr(expr)
	case *anyMatcher:
		val, ok = p.parseAnyMatcher(expr)
	case *charClassMatcher:
		val, ok = p.parseCharClassMatcher(expr)
	case *choiceExpr:
		val, ok = p.parseChoiceExpr(expr)
	case *labeledExpr:
		val, ok = p.parseLabeledExpr(expr)
	case *litMatcher:
		val, ok = p.parseLitMatcher(expr)
	case *notCodeExpr:
		val, ok = p.parseNotCodeExpr(expr)
	case *notExpr:
		val, ok = p.parseNotExpr(expr)
	case *oneOrMoreExpr:
		val, ok = p.parseOneOrMoreExpr(expr)
	case *recoveryExpr:
		val, ok = p.parseRecoveryExpr(expr)
	case *ruleRefExpr:
		val, ok = p.parseRuleRefExpr(expr)
	case *seqExpr:
		val, ok = p.parseSeqExpr(expr)
	case *stateCodeExpr:
		val, ok = p.parseStateCodeExpr(expr)
	case *throwExpr:
		val, ok = p.parseThrowExpr(expr)
	case *zeroOrMoreExpr:
		val, ok = p.parseZeroOrMoreExpr(expr)
	case *zeroOrOneExpr:
		val, ok = p.parseZeroOrOneExpr(expr)
	default:
		panic(fmt.Sprintf("unknown expression type %T", expr))
	}
	if p.memoize {
		p.setMemoized(pt, expr, resultTuple{val, ok, p.pt})
	}
	return val, ok
}

func (p *parser) parseActionExpr(act *actionExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseActionExpr"))
	}

	start := p.pt
	val, ok := p.parseExpr(act.expr)
	if ok {
		p.cur.pos = start.position
		p.cur.text = p.sliceFrom(start)
		state := p.cloneState()
		actVal, err := act.run(p)
		if err != nil {
			p.addErrAt(err, start.position, []string{})
		}
		p.restoreState(state)

		val = actVal
	}
	if ok && p.debug {
		p.print(strings.Repeat(" ", p.depth)+"MATCH", string(p.sliceFrom(start)))
	}
	return val, ok
}

func (p *parser) parseAndCodeExpr(and *andCodeExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseAndCodeExpr"))
	}

	state := p.cloneState()

	ok, err := and.run(p)
	if err != nil {
		p.addErr(err)
	}
	p.restoreState(state)

	return nil, ok
}

func (p *parser) parseAndExpr(and *andExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseAndExpr"))
	}

	pt := p.pt
	state := p.cloneState()
	p.pushV()
	_, ok := p.parseExpr(and.expr)
	p.popV()
	p.restoreState(state)
	p.restore(pt)

	return nil, ok
}

func (p *parser) parseAnyMatcher(any *anyMatcher) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseAnyMatcher"))
	}

	if p.pt.rn == utf8.RuneError && p.pt.w == 0 {
		// EOF - see utf8.DecodeRune
		p.failAt(false, p.pt.position, ".")
		return nil, false
	}
	start := p.pt
	p.read()
	p.failAt(true, start.position, ".")
	return p.sliceFrom(start), true
}

func (p *parser) parseCharClassMatcher(chr *charClassMatcher) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseCharClassMatcher"))
	}

	cur := p.pt.rn
	start := p.pt

	// can't match EOF
	if cur == utf8.RuneError && p.pt.w == 0 { // see utf8.DecodeRune
		p.failAt(false, start.position, chr.val)
		return nil, false
	}

	if chr.ignoreCase {
		cur = unicode.ToLower(cur)
	}

	// try to match in the list of available chars
	for _, rn := range chr.chars {
		if rn == cur {
			if chr.inverted {
				p.failAt(false, start.position, chr.val)
				return nil, false
			}
			p.read()
			p.failAt(true, start.position, chr.val)
			return p.sliceFrom(start), true
		}
	}

	// try to match in the list of ranges
	for i := 0; i < len(chr.ranges); i += 2 {
		if cur >= chr.ranges[i] && cur <= chr.ranges[i+1] {
			if chr.inverted {
				p.failAt(false, start.position, chr.val)
				return nil, false
			}
			p.read()
			p.failAt(true, start.position, chr.val)
			return p.sliceFrom(start), true
		}
	}

	// try to match in the list of Unicode classes
	for _, cl := range chr.classes {
		if unicode.Is(cl, cur) {
			if chr.inverted {
				p.failAt(false, start.position, chr.val)
				return nil, false
			}
			p.read()
			p.failAt(true, start.position, chr.val)
			return p.sliceFrom(start), true
		}
	}

	if chr.inverted {
		p.read()
		p.failAt(true, start.position, chr.val)
		return p.sliceFrom(start), true
	}
	p.failAt(false, start.position, chr.val)
	return nil, false
}

func (p *parser) incChoiceAltCnt(ch *choiceExpr, altI int) {
	choiceIdent := fmt.Sprintf("%s %d:%d", p.rstack[len(p.rstack)-1].name, ch.pos.line, ch.pos.col)
	m := p.ChoiceAltCnt[choiceIdent]
	if m == nil {
		m = make(map[string]int)
		p.ChoiceAltCnt[choiceIdent] = m
	}
	// We increment altI by 1, so the keys do not start at 0
	alt := strconv.Itoa(altI + 1)
	if altI == choiceNoMatch {
		alt = p.choiceNoMatch
	}
	m[alt]++
}

func (p *parser) parseChoiceExpr(ch *choiceExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseChoiceExpr"))
	}

	for altI, alt := range ch.alternatives {
		// dummy assignment to prevent compile error if optimized
		_ = altI

		state := p.cloneState()

		p.pushV()
		val, ok := p.parseExpr(alt)
		p.popV()
		if ok {
			p.incChoiceAltCnt(ch, altI)
			return val, ok
		}
		p.restoreState(state)
	}
	p.incChoiceAltCnt(ch, choiceNoMatch)
	return nil, false
}

func (p *parser) parseLabeledExpr(lab *labeledExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseLabeledExpr"))
	}

	p.pushV()
	val, ok := p.parseExpr(lab.expr)
	p.popV()
	if ok && lab.label != "" {
		m := p.vstack[len(p.vstack)-1]
		m[lab.label] = val
	}
	return val, ok
}

func (p *parser) parseLitMatcher(lit *litMatcher) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseLitMatcher"))
	}

	ignoreCase := ""
	if lit.ignoreCase {
		ignoreCase = "i"
	}
	val := fmt.Sprintf("%q%s", lit.val, ignoreCase)
	start := p.pt
	for _, want := range lit.val {
		cur := p.pt.rn
		if lit.ignoreCase {
			cur = unicode.ToLower(cur)
		}
		if cur != want {
			p.failAt(false, start.position, val)
			p.restore(start)
			return nil, false
		}
		p.read()
	}
	p.failAt(true, start.position, val)
	return p.sliceFrom(start), true
}

func (p *parser) parseNotCodeExpr(not *notCodeExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseNotCodeExpr"))
	}

	state := p.cloneState()

	ok, err := not.run(p)
	if err != nil {
		p.addErr(err)
	}
	p.restoreState(state)

	return nil, !ok
}

func (p *parser) parseNotExpr(not *notExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseNotExpr"))
	}

	pt := p.pt
	state := p.cloneState()
	p.pushV()
	p.maxFailInvertExpected = !p.maxFailInvertExpected
	_, ok := p.parseExpr(not.expr)
	p.maxFailInvertExpected = !p.maxFailInvertExpected
	p.popV()
	p.restoreState(state)
	p.restore(pt)

	return nil, !ok
}

func (p *parser) parseOneOrMoreExpr(expr *oneOrMoreExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseOneOrMoreExpr"))
	}

	var vals []interface{}

	for {
		p.pushV()
		val, ok := p.parseExpr(expr.expr)
		p.popV()
		if !ok {
			if len(vals) == 0 {
				// did not match once, no match
				return nil, false
			}
			return vals, true
		}
		vals = append(vals, val)
	}
}

func (p *parser) parseRecoveryExpr(recover *recoveryExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseRecoveryExpr (" + strings.Join(recover.failureLabel, ",") + ")"))
	}

	p.pushRecovery(recover.failureLabel, recover.recoverExpr)
	val, ok := p.parseExpr(recover.expr)
	p.popRecovery()

	return val, ok
}

func (p *parser) parseRuleRefExpr(ref *ruleRefExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseRuleRefExpr " + ref.name))
	}

	if ref.name == "" {
		panic(fmt.Sprintf("%s: invalid rule: missing name", ref.pos))
	}

	rule := p.rules[ref.name]
	if rule == nil {
		p.addErr(fmt.Errorf("undefined rule: %s", ref.name))
		return nil, false
	}
	return p.parseRule(rule)
}

func (p *parser) parseSeqExpr(seq *seqExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseSeqExpr"))
	}

	vals := make([]interface{}, 0, len(seq.exprs))

	pt := p.pt
	state := p.cloneState()
	for _, expr := range seq.exprs {
		val, ok := p.parseExpr(expr)
		if !ok {
			p.restoreState(state)
			p.restore(pt)
			return nil, false
		}
		vals = append(vals, val)
	}
	return vals, true
}

func (p *parser) parseStateCodeExpr(state *stateCodeExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseStateCodeExpr"))
	}

	err := state.run(p)
	if err != nil {
		p.addErr(err)
	}
	return nil, true
}

func (p *parser) parseThrowExpr(expr *throwExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseThrowExpr"))
	}

	for i := len(p.recoveryStack) - 1; i >= 0; i-- {
		if recoverExpr, ok := p.recoveryStack[i][expr.label]; ok {
			if val, ok := p.parseExpr(recoverExpr); ok {
				return val, ok
			}
		}
	}

	return nil, false
}

func (p *parser) parseZeroOrMoreExpr(expr *zeroOrMoreExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseZeroOrMoreExpr"))
	}

	var vals []interface{}

	for {
		p.pushV()
		val, ok := p.parseExpr(expr.expr)
		p.popV()
		if !ok {
			return vals, true
		}
		vals = append(vals, val)
	}
}

func (p *parser) parseZeroOrOneExpr(expr *zeroOrOneExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseZeroOrOneExpr"))
	}

	p.pushV()
	val, _ := p.parseExpr(expr.expr)
	p.popV()
	// whether it matched or not, consider it a match
	return val, true
}
