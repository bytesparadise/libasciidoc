// Code generated by pigeon; DO NOT EDIT.

package parser

import (
	"bytes"
	"errors"
	"fmt"
	"io"
	"io/ioutil"
	"math"
	"os"
	"sort"
	"strconv"
	"strings"
	"unicode"
	"unicode/utf8"

	"github.com/bytesparadise/libasciidoc/pkg/types"
)

// *****************************************************************************************
// This file is generated after its sibling `asciidoc-grammar.peg` file. DO NOT MODIFY !
// *****************************************************************************************

var g = &grammar{
	rules: []*rule{
		{
			name: "Document",
			pos:  position{line: 18, col: 1, offset: 504},
			expr: &actionExpr{
				pos: position{line: 18, col: 13, offset: 516},
				run: (*parser).callonDocument1,
				expr: &seqExpr{
					pos: position{line: 18, col: 13, offset: 516},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 18, col: 13, offset: 516},
							label: "frontMatter",
							expr: &zeroOrOneExpr{
								pos: position{line: 18, col: 26, offset: 529},
								expr: &ruleRefExpr{
									pos:  position{line: 18, col: 26, offset: 529},
									name: "FrontMatter",
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 18, col: 40, offset: 543},
							label: "documentHeader",
							expr: &zeroOrOneExpr{
								pos: position{line: 18, col: 56, offset: 559},
								expr: &ruleRefExpr{
									pos:  position{line: 18, col: 56, offset: 559},
									name: "DocumentHeader",
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 18, col: 73, offset: 576},
							label: "blocks",
							expr: &zeroOrMoreExpr{
								pos: position{line: 18, col: 80, offset: 583},
								expr: &ruleRefExpr{
									pos:  position{line: 18, col: 81, offset: 584},
									name: "DocumentBlock",
								},
							},
						},
						&notExpr{
							pos: position{line: 1312, col: 8, offset: 50541},
							expr: &anyMatcher{
								line: 1312, col: 9, offset: 50542,
							},
						},
					},
				},
			},
		},
		{
			name: "DocumentBlock",
			pos:  position{line: 22, col: 1, offset: 691},
			expr: &actionExpr{
				pos: position{line: 22, col: 18, offset: 708},
				run: (*parser).callonDocumentBlock1,
				expr: &seqExpr{
					pos: position{line: 22, col: 18, offset: 708},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 22, col: 18, offset: 708},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 22, col: 29, offset: 719},
								expr: &actionExpr{
									pos: position{line: 164, col: 21, offset: 5763},
									run: (*parser).callonDocumentBlock5,
									expr: &seqExpr{
										pos: position{line: 164, col: 21, offset: 5763},
										exprs: []interface{}{
											&andExpr{
												pos: position{line: 164, col: 21, offset: 5763},
												expr: &charClassMatcher{
													pos:        position{line: 164, col: 23, offset: 5765},
													val:        "[[.#]",
													chars:      []rune{'[', '.', '#'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&labeledExpr{
												pos:   position{line: 165, col: 5, offset: 5853},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 165, col: 11, offset: 5859},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 174, col: 14, offset: 6316},
															run: (*parser).callonDocumentBlock11,
															expr: &seqExpr{
																pos: position{line: 174, col: 14, offset: 6316},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 174, col: 14, offset: 6316},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 174, col: 19, offset: 6321},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1288, col: 7, offset: 50075},
																			run: (*parser).callonDocumentBlock15,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1288, col: 7, offset: 50075},
																				expr: &choiceExpr{
																					pos: position{line: 1288, col: 8, offset: 50076},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonDocumentBlock18,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1288, col: 20, offset: 50088},
																							run: (*parser).callonDocumentBlock21,
																							expr: &seqExpr{
																								pos: position{line: 1288, col: 21, offset: 50089},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1288, col: 21, offset: 50089},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 30, offset: 50098},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonDocumentBlock30,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 34, offset: 50102},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 35, offset: 50103},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 39, offset: 50107},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 40, offset: 50108},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 44, offset: 50112},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 45, offset: 50113},
																											val:        "<<",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 50, offset: 50118},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 51, offset: 50119},
																											val:        ">>",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 56, offset: 50124},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 57, offset: 50125},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1288, col: 62, offset: 50130,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 174, col: 27, offset: 6329},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 5, offset: 6383},
															run: (*parser).callonDocumentBlock44,
															expr: &seqExpr{
																pos: position{line: 176, col: 5, offset: 6383},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 5, offset: 6383},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 10, offset: 6388},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1288, col: 7, offset: 50075},
																			run: (*parser).callonDocumentBlock48,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1288, col: 7, offset: 50075},
																				expr: &choiceExpr{
																					pos: position{line: 1288, col: 8, offset: 50076},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonDocumentBlock51,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1288, col: 20, offset: 50088},
																							run: (*parser).callonDocumentBlock54,
																							expr: &seqExpr{
																								pos: position{line: 1288, col: 21, offset: 50089},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1288, col: 21, offset: 50089},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 30, offset: 50098},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonDocumentBlock63,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 34, offset: 50102},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 35, offset: 50103},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 39, offset: 50107},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 40, offset: 50108},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 44, offset: 50112},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 45, offset: 50113},
																											val:        "<<",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 50, offset: 50118},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 51, offset: 50119},
																											val:        ">>",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 56, offset: 50124},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 57, offset: 50125},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1288, col: 62, offset: 50130,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 18, offset: 6396},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 186, col: 17, offset: 6699},
															run: (*parser).callonDocumentBlock77,
															expr: &seqExpr{
																pos: position{line: 186, col: 17, offset: 6699},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 186, col: 17, offset: 6699},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 186, col: 21, offset: 6703},
																		expr: &litMatcher{
																			pos:        position{line: 186, col: 22, offset: 6704},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 186, col: 26, offset: 6708},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonDocumentBlock85,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 186, col: 30, offset: 6712},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 186, col: 37, offset: 6719},
																			run: (*parser).callonDocumentBlock88,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 186, col: 37, offset: 6719},
																				expr: &choiceExpr{
																					pos: position{line: 186, col: 38, offset: 6720},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonDocumentBlock91,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonDocumentBlock94,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonDocumentBlock98,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 186, col: 59, offset: 6741},
																							run: (*parser).callonDocumentBlock100,
																							expr: &seqExpr{
																								pos: position{line: 186, col: 60, offset: 6742},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 186, col: 60, offset: 6742},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 186, col: 70, offset: 6752,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 196, col: 16, offset: 6990},
															run: (*parser).callonDocumentBlock107,
															expr: &seqExpr{
																pos: position{line: 196, col: 16, offset: 6990},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 196, col: 16, offset: 6990},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 196, col: 21, offset: 6995},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonDocumentBlock113,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 196, col: 25, offset: 6999},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 196, col: 31, offset: 7005},
																			run: (*parser).callonDocumentBlock116,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 196, col: 31, offset: 7005},
																				expr: &choiceExpr{
																					pos: position{line: 196, col: 32, offset: 7006},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonDocumentBlock119,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonDocumentBlock122,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonDocumentBlock126,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 196, col: 53, offset: 7027},
																							run: (*parser).callonDocumentBlock128,
																							expr: &seqExpr{
																								pos: position{line: 196, col: 54, offset: 7028},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 196, col: 54, offset: 7028},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 196, col: 63, offset: 7037},
																										expr: &litMatcher{
																											pos:        position{line: 196, col: 64, offset: 7038},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 196, col: 69, offset: 7043,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 200, col: 4, offset: 7118},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 210, col: 21, offset: 7481},
															run: (*parser).callonDocumentBlock138,
															expr: &litMatcher{
																pos:        position{line: 210, col: 21, offset: 7481},
																val:        "[source]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 212, col: 5, offset: 7539},
															run: (*parser).callonDocumentBlock140,
															expr: &seqExpr{
																pos: position{line: 212, col: 5, offset: 7539},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 212, col: 5, offset: 7539},
																		val:        "[source,",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 212, col: 16, offset: 7550},
																		label: "language",
																		expr: &actionExpr{
																			pos: position{line: 212, col: 26, offset: 7560},
																			run: (*parser).callonDocumentBlock144,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 212, col: 26, offset: 7560},
																				expr: &choiceExpr{
																					pos: position{line: 212, col: 27, offset: 7561},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonDocumentBlock147,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonDocumentBlock150,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonDocumentBlock154,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 212, col: 48, offset: 7582},
																							run: (*parser).callonDocumentBlock156,
																							expr: &seqExpr{
																								pos: position{line: 212, col: 49, offset: 7583},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 212, col: 49, offset: 7583},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 212, col: 58, offset: 7592},
																										expr: &litMatcher{
																											pos:        position{line: 212, col: 59, offset: 7593},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 212, col: 64, offset: 7598,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 216, col: 7, offset: 7688},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 247, col: 20, offset: 8646},
															run: (*parser).callonDocumentBlock166,
															expr: &seqExpr{
																pos: position{line: 247, col: 20, offset: 8646},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 247, col: 20, offset: 8646},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 24, offset: 8650},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonDocumentBlock170,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 247, col: 41, offset: 8667},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonDocumentBlock175,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 45, offset: 8671},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 49, offset: 8675},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 286, col: 16, offset: 9839},
																			run: (*parser).callonDocumentBlock179,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 286, col: 16, offset: 9839},
																				expr: &choiceExpr{
																					pos: position{line: 286, col: 17, offset: 9840},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonDocumentBlock182,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonDocumentBlock185,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonDocumentBlock189,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 286, col: 38, offset: 9861},
																							run: (*parser).callonDocumentBlock191,
																							expr: &seqExpr{
																								pos: position{line: 286, col: 39, offset: 9862},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 286, col: 39, offset: 9862},
																										expr: &choiceExpr{
																											pos: position{line: 1314, col: 8, offset: 50552},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																												&notExpr{
																													pos: position{line: 1312, col: 8, offset: 50541},
																													expr: &anyMatcher{
																														line: 1312, col: 9, offset: 50542,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 44, offset: 9867},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 45, offset: 9868},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 49, offset: 9872},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 50, offset: 9873},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 286, col: 55, offset: 9878,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 70, offset: 8696},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 74, offset: 8700},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 292, col: 15, offset: 9967},
																			run: (*parser).callonDocumentBlock206,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 292, col: 15, offset: 9967},
																				expr: &choiceExpr{
																					pos: position{line: 292, col: 16, offset: 9968},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonDocumentBlock209,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonDocumentBlock212,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonDocumentBlock216,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&seqExpr{
																							pos: position{line: 292, col: 38, offset: 9990},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 292, col: 38, offset: 9990},
																									expr: &choiceExpr{
																										pos: position{line: 1314, col: 8, offset: 50552},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1310, col: 12, offset: 50512},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1310, col: 21, offset: 50521},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																											&notExpr{
																												pos: position{line: 1312, col: 8, offset: 50541},
																												expr: &anyMatcher{
																													line: 1312, col: 9, offset: 50542,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 292, col: 43, offset: 9995},
																									expr: &litMatcher{
																										pos:        position{line: 292, col: 44, offset: 9996},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 292, col: 48, offset: 10000},
																									expr: &litMatcher{
																										pos:        position{line: 292, col: 49, offset: 10001},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 292, col: 54, offset: 10006,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 93, offset: 8719},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 251, col: 1, offset: 8846},
															run: (*parser).callonDocumentBlock231,
															expr: &seqExpr{
																pos: position{line: 251, col: 1, offset: 8846},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 251, col: 1, offset: 8846},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 251, col: 5, offset: 8850},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonDocumentBlock235,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 251, col: 22, offset: 8867},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonDocumentBlock240,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 251, col: 26, offset: 8871},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 251, col: 30, offset: 8875},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 286, col: 16, offset: 9839},
																			run: (*parser).callonDocumentBlock244,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 286, col: 16, offset: 9839},
																				expr: &choiceExpr{
																					pos: position{line: 286, col: 17, offset: 9840},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonDocumentBlock247,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonDocumentBlock250,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonDocumentBlock254,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 286, col: 38, offset: 9861},
																							run: (*parser).callonDocumentBlock256,
																							expr: &seqExpr{
																								pos: position{line: 286, col: 39, offset: 9862},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 286, col: 39, offset: 9862},
																										expr: &choiceExpr{
																											pos: position{line: 1314, col: 8, offset: 50552},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																												&notExpr{
																													pos: position{line: 1312, col: 8, offset: 50541},
																													expr: &anyMatcher{
																														line: 1312, col: 9, offset: 50542,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 44, offset: 9867},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 45, offset: 9868},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 49, offset: 9872},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 50, offset: 9873},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 286, col: 55, offset: 9878,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 251, col: 51, offset: 8896},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 255, col: 1, offset: 9011},
															run: (*parser).callonDocumentBlock270,
															expr: &seqExpr{
																pos: position{line: 255, col: 1, offset: 9011},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 255, col: 1, offset: 9011},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 255, col: 5, offset: 9015},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonDocumentBlock274,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 255, col: 22, offset: 9032},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonDocumentBlock279,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 255, col: 26, offset: 9036},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 263, col: 20, offset: 9179},
															run: (*parser).callonDocumentBlock282,
															expr: &seqExpr{
																pos: position{line: 263, col: 20, offset: 9179},
																exprs: []interface{}{
																	&labeledExpr{
																		pos:   position{line: 263, col: 20, offset: 9179},
																		label: "attribute",
																		expr: &choiceExpr{
																			pos: position{line: 263, col: 31, offset: 9190},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 263, col: 31, offset: 9190},
																					run: (*parser).callonDocumentBlock286,
																					expr: &seqExpr{
																						pos: position{line: 263, col: 31, offset: 9190},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 263, col: 31, offset: 9190},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 35, offset: 9194},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonDocumentBlock290,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 263, col: 52, offset: 9211},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonDocumentBlock295,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 56, offset: 9215},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 60, offset: 9219},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 286, col: 16, offset: 9839},
																									run: (*parser).callonDocumentBlock299,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 286, col: 16, offset: 9839},
																										expr: &choiceExpr{
																											pos: position{line: 286, col: 17, offset: 9840},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1264, col: 14, offset: 49515},
																													run: (*parser).callonDocumentBlock302,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1264, col: 14, offset: 49515},
																														expr: &charClassMatcher{
																															pos:        position{line: 1264, col: 14, offset: 49515},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1278, col: 11, offset: 49909},
																													run: (*parser).callonDocumentBlock305,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1278, col: 11, offset: 49909},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonDocumentBlock309,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 286, col: 38, offset: 9861},
																													run: (*parser).callonDocumentBlock311,
																													expr: &seqExpr{
																														pos: position{line: 286, col: 39, offset: 9862},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 286, col: 39, offset: 9862},
																																expr: &choiceExpr{
																																	pos: position{line: 1314, col: 8, offset: 50552},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1310, col: 12, offset: 50512},
																																			val:        "\r\n",
																																			ignoreCase: false,
																																		},
																																		&charClassMatcher{
																																			pos:        position{line: 1310, col: 21, offset: 50521},
																																			val:        "[\\r\\n]",
																																			chars:      []rune{'\r', '\n'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																		&notExpr{
																																			pos: position{line: 1312, col: 8, offset: 50541},
																																			expr: &anyMatcher{
																																				line: 1312, col: 9, offset: 50542,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 44, offset: 9867},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 45, offset: 9868},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 49, offset: 9872},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 50, offset: 9873},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 286, col: 55, offset: 9878,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 81, offset: 9240},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 85, offset: 9244},
																								label: "title",
																								expr: &actionExpr{
																									pos: position{line: 292, col: 15, offset: 9967},
																									run: (*parser).callonDocumentBlock326,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 292, col: 15, offset: 9967},
																										expr: &choiceExpr{
																											pos: position{line: 292, col: 16, offset: 9968},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1264, col: 14, offset: 49515},
																													run: (*parser).callonDocumentBlock329,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1264, col: 14, offset: 49515},
																														expr: &charClassMatcher{
																															pos:        position{line: 1264, col: 14, offset: 49515},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1278, col: 11, offset: 49909},
																													run: (*parser).callonDocumentBlock332,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1278, col: 11, offset: 49909},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonDocumentBlock336,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&seqExpr{
																													pos: position{line: 292, col: 38, offset: 9990},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 292, col: 38, offset: 9990},
																															expr: &choiceExpr{
																																pos: position{line: 1314, col: 8, offset: 50552},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1310, col: 12, offset: 50512},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1310, col: 21, offset: 50521},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																	&notExpr{
																																		pos: position{line: 1312, col: 8, offset: 50541},
																																		expr: &anyMatcher{
																																			line: 1312, col: 9, offset: 50542,
																																		},
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 292, col: 43, offset: 9995},
																															expr: &litMatcher{
																																pos:        position{line: 292, col: 44, offset: 9996},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 292, col: 48, offset: 10000},
																															expr: &litMatcher{
																																pos:        position{line: 292, col: 49, offset: 10001},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 292, col: 54, offset: 10006,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 104, offset: 9263},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 267, col: 5, offset: 9406},
																					run: (*parser).callonDocumentBlock351,
																					expr: &seqExpr{
																						pos: position{line: 267, col: 5, offset: 9406},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 267, col: 5, offset: 9406},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 267, col: 9, offset: 9410},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonDocumentBlock355,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 267, col: 26, offset: 9427},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonDocumentBlock360,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 267, col: 30, offset: 9431},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 267, col: 34, offset: 9435},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 286, col: 16, offset: 9839},
																									run: (*parser).callonDocumentBlock364,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 286, col: 16, offset: 9839},
																										expr: &choiceExpr{
																											pos: position{line: 286, col: 17, offset: 9840},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1264, col: 14, offset: 49515},
																													run: (*parser).callonDocumentBlock367,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1264, col: 14, offset: 49515},
																														expr: &charClassMatcher{
																															pos:        position{line: 1264, col: 14, offset: 49515},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1278, col: 11, offset: 49909},
																													run: (*parser).callonDocumentBlock370,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1278, col: 11, offset: 49909},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonDocumentBlock374,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 286, col: 38, offset: 9861},
																													run: (*parser).callonDocumentBlock376,
																													expr: &seqExpr{
																														pos: position{line: 286, col: 39, offset: 9862},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 286, col: 39, offset: 9862},
																																expr: &choiceExpr{
																																	pos: position{line: 1314, col: 8, offset: 50552},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1310, col: 12, offset: 50512},
																																			val:        "\r\n",
																																			ignoreCase: false,
																																		},
																																		&charClassMatcher{
																																			pos:        position{line: 1310, col: 21, offset: 50521},
																																			val:        "[\\r\\n]",
																																			chars:      []rune{'\r', '\n'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																		&notExpr{
																																			pos: position{line: 1312, col: 8, offset: 50541},
																																			expr: &anyMatcher{
																																				line: 1312, col: 9, offset: 50542,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 44, offset: 9867},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 45, offset: 9868},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 49, offset: 9872},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 50, offset: 9873},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 286, col: 55, offset: 9878,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 267, col: 55, offset: 9456},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 271, col: 5, offset: 9587},
																					run: (*parser).callonDocumentBlock390,
																					expr: &seqExpr{
																						pos: position{line: 271, col: 5, offset: 9587},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 271, col: 5, offset: 9587},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 271, col: 9, offset: 9591},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonDocumentBlock394,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 271, col: 26, offset: 9608},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonDocumentBlock399,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 271, col: 30, offset: 9612},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&stateCodeExpr{
																		pos: position{line: 275, col: 1, offset: 9688},
																		run: (*parser).callonDocumentBlock402,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 205, col: 30, offset: 7283},
															run: (*parser).callonDocumentBlock403,
															expr: &seqExpr{
																pos: position{line: 205, col: 30, offset: 7283},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 205, col: 30, offset: 7283},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 205, col: 34, offset: 7287},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 598, col: 19, offset: 22218},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 598, col: 19, offset: 22218},
																					run: (*parser).callonDocumentBlock408,
																					expr: &litMatcher{
																						pos:        position{line: 598, col: 19, offset: 22218},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 600, col: 9, offset: 22264},
																					run: (*parser).callonDocumentBlock410,
																					expr: &litMatcher{
																						pos:        position{line: 600, col: 9, offset: 22264},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 602, col: 9, offset: 22312},
																					run: (*parser).callonDocumentBlock412,
																					expr: &litMatcher{
																						pos:        position{line: 602, col: 9, offset: 22312},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 604, col: 9, offset: 22370},
																					run: (*parser).callonDocumentBlock414,
																					expr: &litMatcher{
																						pos:        position{line: 604, col: 9, offset: 22370},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 606, col: 9, offset: 22424},
																					run: (*parser).callonDocumentBlock416,
																					expr: &litMatcher{
																						pos:        position{line: 606, col: 9, offset: 22424},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 205, col: 53, offset: 7306},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 243, col: 21, offset: 8543},
															run: (*parser).callonDocumentBlock419,
															expr: &litMatcher{
																pos:        position{line: 243, col: 21, offset: 8543},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 221, col: 19, offset: 7839},
															run: (*parser).callonDocumentBlock421,
															expr: &seqExpr{
																pos: position{line: 221, col: 19, offset: 7839},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 221, col: 19, offset: 7839},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 221, col: 23, offset: 7843},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonDocumentBlock427,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 221, col: 27, offset: 7847},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 221, col: 38, offset: 7858},
																			expr: &choiceExpr{
																				pos: position{line: 225, col: 21, offset: 7971},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 225, col: 21, offset: 7971},
																						run: (*parser).callonDocumentBlock432,
																						expr: &seqExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 225, col: 21, offset: 7971},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										run: (*parser).callonDocumentBlock435,
																										expr: &seqExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9116},
																														run: (*parser).callonDocumentBlock438,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9116},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 28, offset: 8242},
																													expr: &actionExpr{
																														pos: position{line: 282, col: 14, offset: 9780},
																														run: (*parser).callonDocumentBlock441,
																														expr: &litMatcher{
																															pos:        position{line: 282, col: 14, offset: 9780},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 39, offset: 8253},
																													expr: &actionExpr{
																														pos: position{line: 1229, col: 16, offset: 48642},
																														run: (*parser).callonDocumentBlock444,
																														expr: &litMatcher{
																															pos:        position{line: 1229, col: 16, offset: 48642},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 231, col: 52, offset: 8266},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 231, col: 56, offset: 8270},
																														expr: &choiceExpr{
																															pos: position{line: 231, col: 57, offset: 8271},
																															alternatives: []interface{}{
																																&actionExpr{
																																	pos: position{line: 1264, col: 14, offset: 49515},
																																	run: (*parser).callonDocumentBlock449,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		expr: &charClassMatcher{
																																			pos:        position{line: 1264, col: 14, offset: 49515},
																																			val:        "[a-zA-Z0-9]",
																																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 1278, col: 11, offset: 49909},
																																	run: (*parser).callonDocumentBlock452,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		expr: &choiceExpr{
																																			pos: position{line: 1306, col: 7, offset: 50454},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1306, col: 7, offset: 50454},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 1306, col: 13, offset: 50460},
																																					run: (*parser).callonDocumentBlock456,
																																					expr: &litMatcher{
																																						pos:        position{line: 1306, col: 13, offset: 50460},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 231, col: 78, offset: 8292},
																																	run: (*parser).callonDocumentBlock458,
																																	expr: &seqExpr{
																																		pos: position{line: 231, col: 79, offset: 8293},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 231, col: 79, offset: 8293},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 80, offset: 8294},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 84, offset: 8298},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 85, offset: 8299},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 89, offset: 8303},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 90, offset: 8304},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 231, col: 95, offset: 8309,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 225, col: 40, offset: 7990},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 225, col: 44, offset: 7994},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 237, col: 19, offset: 8403},
																										run: (*parser).callonDocumentBlock469,
																										expr: &labeledExpr{
																											pos:   position{line: 237, col: 19, offset: 8403},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 237, col: 25, offset: 8409},
																												expr: &choiceExpr{
																													pos: position{line: 237, col: 26, offset: 8410},
																													alternatives: []interface{}{
																														&actionExpr{
																															pos: position{line: 1264, col: 14, offset: 49515},
																															run: (*parser).callonDocumentBlock473,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1264, col: 14, offset: 49515},
																																expr: &charClassMatcher{
																																	pos:        position{line: 1264, col: 14, offset: 49515},
																																	val:        "[a-zA-Z0-9]",
																																	ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 1278, col: 11, offset: 49909},
																															run: (*parser).callonDocumentBlock476,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1278, col: 11, offset: 49909},
																																expr: &choiceExpr{
																																	pos: position{line: 1306, col: 7, offset: 50454},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1306, col: 7, offset: 50454},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 1306, col: 13, offset: 50460},
																																			run: (*parser).callonDocumentBlock480,
																																			expr: &litMatcher{
																																				pos:        position{line: 1306, col: 13, offset: 50460},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 237, col: 47, offset: 8431},
																															run: (*parser).callonDocumentBlock482,
																															expr: &seqExpr{
																																pos: position{line: 237, col: 48, offset: 8432},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 237, col: 48, offset: 8432},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 49, offset: 8433},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 237, col: 53, offset: 8437},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 54, offset: 8438},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 237, col: 58, offset: 8442},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 59, offset: 8443},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 237, col: 64, offset: 8448,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 225, col: 67, offset: 8017},
																									expr: &litMatcher{
																										pos:        position{line: 225, col: 67, offset: 8017},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 225, col: 72, offset: 8022},
																									expr: &choiceExpr{
																										pos: position{line: 1306, col: 7, offset: 50454},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1306, col: 7, offset: 50454},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1306, col: 13, offset: 50460},
																												run: (*parser).callonDocumentBlock496,
																												expr: &litMatcher{
																													pos:        position{line: 1306, col: 13, offset: 50460},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 227, col: 5, offset: 8106},
																						run: (*parser).callonDocumentBlock498,
																						expr: &seqExpr{
																							pos: position{line: 227, col: 5, offset: 8106},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 227, col: 5, offset: 8106},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										run: (*parser).callonDocumentBlock501,
																										expr: &seqExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9116},
																														run: (*parser).callonDocumentBlock504,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9116},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 28, offset: 8242},
																													expr: &actionExpr{
																														pos: position{line: 282, col: 14, offset: 9780},
																														run: (*parser).callonDocumentBlock507,
																														expr: &litMatcher{
																															pos:        position{line: 282, col: 14, offset: 9780},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 39, offset: 8253},
																													expr: &actionExpr{
																														pos: position{line: 1229, col: 16, offset: 48642},
																														run: (*parser).callonDocumentBlock510,
																														expr: &litMatcher{
																															pos:        position{line: 1229, col: 16, offset: 48642},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 231, col: 52, offset: 8266},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 231, col: 56, offset: 8270},
																														expr: &choiceExpr{
																															pos: position{line: 231, col: 57, offset: 8271},
																															alternatives: []interface{}{
																																&actionExpr{
																																	pos: position{line: 1264, col: 14, offset: 49515},
																																	run: (*parser).callonDocumentBlock515,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		expr: &charClassMatcher{
																																			pos:        position{line: 1264, col: 14, offset: 49515},
																																			val:        "[a-zA-Z0-9]",
																																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 1278, col: 11, offset: 49909},
																																	run: (*parser).callonDocumentBlock518,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		expr: &choiceExpr{
																																			pos: position{line: 1306, col: 7, offset: 50454},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1306, col: 7, offset: 50454},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 1306, col: 13, offset: 50460},
																																					run: (*parser).callonDocumentBlock522,
																																					expr: &litMatcher{
																																						pos:        position{line: 1306, col: 13, offset: 50460},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 231, col: 78, offset: 8292},
																																	run: (*parser).callonDocumentBlock524,
																																	expr: &seqExpr{
																																		pos: position{line: 231, col: 79, offset: 8293},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 231, col: 79, offset: 8293},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 80, offset: 8294},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 84, offset: 8298},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 85, offset: 8299},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 89, offset: 8303},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 90, offset: 8304},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 231, col: 95, offset: 8309,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 227, col: 24, offset: 8125},
																									expr: &litMatcher{
																										pos:        position{line: 227, col: 24, offset: 8125},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 227, col: 29, offset: 8130},
																									expr: &choiceExpr{
																										pos: position{line: 1306, col: 7, offset: 50454},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1306, col: 7, offset: 50454},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1306, col: 13, offset: 50460},
																												run: (*parser).callonDocumentBlock538,
																												expr: &litMatcher{
																													pos:        position{line: 1306, col: 13, offset: 50460},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 221, col: 59, offset: 7879},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 165, col: 170, offset: 6018},
												expr: &choiceExpr{
													pos: position{line: 1306, col: 7, offset: 50454},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1306, col: 7, offset: 50454},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1306, col: 13, offset: 50460},
															run: (*parser).callonDocumentBlock544,
															expr: &litMatcher{
																pos:        position{line: 1306, col: 13, offset: 50460},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1314, col: 8, offset: 50552},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1310, col: 12, offset: 50512},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1310, col: 21, offset: 50521},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1312, col: 8, offset: 50541},
														expr: &anyMatcher{
															line: 1312, col: 9, offset: 50542,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 22, col: 49, offset: 739},
							label: "block",
							expr: &choiceExpr{
								pos: position{line: 22, col: 56, offset: 746},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 22, col: 56, offset: 746},
										name: "Section",
									},
									&ruleRefExpr{
										pos:  position{line: 22, col: 66, offset: 756},
										name: "DocumentElement",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "FrontMatter",
			pos:  position{line: 29, col: 1, offset: 953},
			expr: &ruleRefExpr{
				pos:  position{line: 29, col: 16, offset: 968},
				name: "YamlFrontMatter",
			},
		},
		{
			name: "FrontMatter",
			pos:  position{line: 31, col: 1, offset: 986},
			expr: &actionExpr{
				pos: position{line: 31, col: 16, offset: 1001},
				run: (*parser).callonFrontMatter1,
				expr: &seqExpr{
					pos: position{line: 31, col: 16, offset: 1001},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 35, col: 26, offset: 1160},
							val:        "---",
							ignoreCase: false,
						},
						&choiceExpr{
							pos: position{line: 1314, col: 8, offset: 50552},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1310, col: 12, offset: 50512},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1310, col: 21, offset: 50521},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1312, col: 8, offset: 50541},
									expr: &anyMatcher{
										line: 1312, col: 9, offset: 50542,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 31, col: 37, offset: 1022},
							label: "content",
							expr: &actionExpr{
								pos: position{line: 37, col: 27, offset: 1197},
								run: (*parser).callonFrontMatter10,
								expr: &zeroOrMoreExpr{
									pos: position{line: 37, col: 27, offset: 1197},
									expr: &choiceExpr{
										pos: position{line: 37, col: 28, offset: 1198},
										alternatives: []interface{}{
											&actionExpr{
												pos: position{line: 1264, col: 14, offset: 49515},
												run: (*parser).callonFrontMatter13,
												expr: &oneOrMoreExpr{
													pos: position{line: 1264, col: 14, offset: 49515},
													expr: &charClassMatcher{
														pos:        position{line: 1264, col: 14, offset: 49515},
														val:        "[a-zA-Z0-9]",
														ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
														ignoreCase: false,
														inverted:   false,
													},
												},
											},
											&actionExpr{
												pos: position{line: 1278, col: 11, offset: 49909},
												run: (*parser).callonFrontMatter16,
												expr: &oneOrMoreExpr{
													pos: position{line: 1278, col: 11, offset: 49909},
													expr: &choiceExpr{
														pos: position{line: 1306, col: 7, offset: 50454},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1306, col: 7, offset: 50454},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1306, col: 13, offset: 50460},
																run: (*parser).callonFrontMatter20,
																expr: &litMatcher{
																	pos:        position{line: 1306, col: 13, offset: 50460},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
											&actionExpr{
												pos: position{line: 37, col: 49, offset: 1219},
												run: (*parser).callonFrontMatter22,
												expr: &seqExpr{
													pos: position{line: 37, col: 50, offset: 1220},
													exprs: []interface{}{
														&notExpr{
															pos: position{line: 37, col: 50, offset: 1220},
															expr: &seqExpr{
																pos: position{line: 35, col: 26, offset: 1160},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 35, col: 26, offset: 1160},
																		val:        "---",
																		ignoreCase: false,
																	},
																	&choiceExpr{
																		pos: position{line: 1314, col: 8, offset: 50552},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1310, col: 12, offset: 50512},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1310, col: 21, offset: 50521},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																			&notExpr{
																				pos: position{line: 1312, col: 8, offset: 50541},
																				expr: &anyMatcher{
																					line: 1312, col: 9, offset: 50542,
																				},
																			},
																		},
																	},
																},
															},
														},
														&anyMatcher{
															line: 37, col: 73, offset: 1243,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&litMatcher{
							pos:        position{line: 35, col: 26, offset: 1160},
							val:        "---",
							ignoreCase: false,
						},
						&choiceExpr{
							pos: position{line: 1314, col: 8, offset: 50552},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1310, col: 12, offset: 50512},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1310, col: 21, offset: 50521},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1312, col: 8, offset: 50541},
									expr: &anyMatcher{
										line: 1312, col: 9, offset: 50542,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "DocumentHeader",
			pos:  position{line: 47, col: 1, offset: 1502},
			expr: &actionExpr{
				pos: position{line: 47, col: 19, offset: 1520},
				run: (*parser).callonDocumentHeader1,
				expr: &seqExpr{
					pos: position{line: 47, col: 19, offset: 1520},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 47, col: 19, offset: 1520},
							label: "header",
							expr: &ruleRefExpr{
								pos:  position{line: 47, col: 27, offset: 1528},
								name: "Section0TitleWithAttributes",
							},
						},
						&labeledExpr{
							pos:   position{line: 47, col: 56, offset: 1557},
							label: "authors",
							expr: &zeroOrOneExpr{
								pos: position{line: 47, col: 65, offset: 1566},
								expr: &choiceExpr{
									pos: position{line: 51, col: 20, offset: 1780},
									alternatives: []interface{}{
										&actionExpr{
											pos: position{line: 53, col: 30, offset: 1867},
											run: (*parser).callonDocumentHeader8,
											expr: &seqExpr{
												pos: position{line: 53, col: 30, offset: 1867},
												exprs: []interface{}{
													&zeroOrMoreExpr{
														pos: position{line: 53, col: 30, offset: 1867},
														expr: &choiceExpr{
															pos: position{line: 1306, col: 7, offset: 50454},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1306, col: 7, offset: 50454},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1306, col: 13, offset: 50460},
																	run: (*parser).callonDocumentHeader13,
																	expr: &litMatcher{
																		pos:        position{line: 1306, col: 13, offset: 50460},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&notExpr{
														pos: position{line: 53, col: 34, offset: 1871},
														expr: &litMatcher{
															pos:        position{line: 53, col: 35, offset: 1872},
															val:        ":",
															ignoreCase: false,
														},
													},
													&labeledExpr{
														pos:   position{line: 53, col: 39, offset: 1876},
														label: "authors",
														expr: &oneOrMoreExpr{
															pos: position{line: 53, col: 48, offset: 1885},
															expr: &actionExpr{
																pos: position{line: 61, col: 19, offset: 2136},
																run: (*parser).callonDocumentHeader19,
																expr: &seqExpr{
																	pos: position{line: 61, col: 19, offset: 2136},
																	exprs: []interface{}{
																		&zeroOrMoreExpr{
																			pos: position{line: 61, col: 19, offset: 2136},
																			expr: &choiceExpr{
																				pos: position{line: 1306, col: 7, offset: 50454},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1306, col: 7, offset: 50454},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1306, col: 13, offset: 50460},
																						run: (*parser).callonDocumentHeader24,
																						expr: &litMatcher{
																							pos:        position{line: 1306, col: 13, offset: 50460},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 61, col: 23, offset: 2140},
																			label: "namePart1",
																			expr: &actionExpr{
																				pos: position{line: 66, col: 27, offset: 2476},
																				run: (*parser).callonDocumentHeader27,
																				expr: &seqExpr{
																					pos: position{line: 66, col: 27, offset: 2476},
																					exprs: []interface{}{
																						&oneOrMoreExpr{
																							pos: position{line: 66, col: 27, offset: 2476},
																							expr: &choiceExpr{
																								pos: position{line: 66, col: 28, offset: 2477},
																								alternatives: []interface{}{
																									&actionExpr{
																										pos: position{line: 1264, col: 14, offset: 49515},
																										run: (*parser).callonDocumentHeader31,
																										expr: &oneOrMoreExpr{
																											pos: position{line: 1264, col: 14, offset: 49515},
																											expr: &charClassMatcher{
																												pos:        position{line: 1264, col: 14, offset: 49515},
																												val:        "[a-zA-Z0-9]",
																												ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																									&actionExpr{
																										pos: position{line: 66, col: 40, offset: 2489},
																										run: (*parser).callonDocumentHeader34,
																										expr: &seqExpr{
																											pos: position{line: 66, col: 41, offset: 2490},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 66, col: 41, offset: 2490},
																													expr: &litMatcher{
																														pos:        position{line: 66, col: 42, offset: 2491},
																														val:        "<",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 66, col: 46, offset: 2495},
																													expr: &litMatcher{
																														pos:        position{line: 66, col: 47, offset: 2496},
																														val:        ";",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 66, col: 51, offset: 2500},
																													expr: &choiceExpr{
																														pos: position{line: 1310, col: 12, offset: 50512},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1310, col: 12, offset: 50512},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1310, col: 21, offset: 50521},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 66, col: 60, offset: 2509},
																													expr: &choiceExpr{
																														pos: position{line: 1306, col: 7, offset: 50454},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1306, col: 7, offset: 50454},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1306, col: 13, offset: 50460},
																																run: (*parser).callonDocumentHeader47,
																																expr: &litMatcher{
																																	pos:        position{line: 1306, col: 13, offset: 50460},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&anyMatcher{
																													line: 66, col: 64, offset: 2513,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&zeroOrMoreExpr{
																							pos: position{line: 68, col: 5, offset: 2552},
																							expr: &choiceExpr{
																								pos: position{line: 1306, col: 7, offset: 50454},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1306, col: 7, offset: 50454},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1306, col: 13, offset: 50460},
																										run: (*parser).callonDocumentHeader53,
																										expr: &litMatcher{
																											pos:        position{line: 1306, col: 13, offset: 50460},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 61, col: 58, offset: 2175},
																			label: "namePart2",
																			expr: &zeroOrOneExpr{
																				pos: position{line: 61, col: 68, offset: 2185},
																				expr: &actionExpr{
																					pos: position{line: 66, col: 27, offset: 2476},
																					run: (*parser).callonDocumentHeader57,
																					expr: &seqExpr{
																						pos: position{line: 66, col: 27, offset: 2476},
																						exprs: []interface{}{
																							&oneOrMoreExpr{
																								pos: position{line: 66, col: 27, offset: 2476},
																								expr: &choiceExpr{
																									pos: position{line: 66, col: 28, offset: 2477},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 1264, col: 14, offset: 49515},
																											run: (*parser).callonDocumentHeader61,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 1264, col: 14, offset: 49515},
																												expr: &charClassMatcher{
																													pos:        position{line: 1264, col: 14, offset: 49515},
																													val:        "[a-zA-Z0-9]",
																													ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 66, col: 40, offset: 2489},
																											run: (*parser).callonDocumentHeader64,
																											expr: &seqExpr{
																												pos: position{line: 66, col: 41, offset: 2490},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 66, col: 41, offset: 2490},
																														expr: &litMatcher{
																															pos:        position{line: 66, col: 42, offset: 2491},
																															val:        "<",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 66, col: 46, offset: 2495},
																														expr: &litMatcher{
																															pos:        position{line: 66, col: 47, offset: 2496},
																															val:        ";",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 66, col: 51, offset: 2500},
																														expr: &choiceExpr{
																															pos: position{line: 1310, col: 12, offset: 50512},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1310, col: 12, offset: 50512},
																																	val:        "\r\n",
																																	ignoreCase: false,
																																},
																																&charClassMatcher{
																																	pos:        position{line: 1310, col: 21, offset: 50521},
																																	val:        "[\\r\\n]",
																																	chars:      []rune{'\r', '\n'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 66, col: 60, offset: 2509},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonDocumentHeader77,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																													&anyMatcher{
																														line: 66, col: 64, offset: 2513,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 68, col: 5, offset: 2552},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonDocumentHeader83,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 61, col: 94, offset: 2211},
																			label: "namePart3",
																			expr: &zeroOrOneExpr{
																				pos: position{line: 61, col: 104, offset: 2221},
																				expr: &actionExpr{
																					pos: position{line: 66, col: 27, offset: 2476},
																					run: (*parser).callonDocumentHeader87,
																					expr: &seqExpr{
																						pos: position{line: 66, col: 27, offset: 2476},
																						exprs: []interface{}{
																							&oneOrMoreExpr{
																								pos: position{line: 66, col: 27, offset: 2476},
																								expr: &choiceExpr{
																									pos: position{line: 66, col: 28, offset: 2477},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 1264, col: 14, offset: 49515},
																											run: (*parser).callonDocumentHeader91,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 1264, col: 14, offset: 49515},
																												expr: &charClassMatcher{
																													pos:        position{line: 1264, col: 14, offset: 49515},
																													val:        "[a-zA-Z0-9]",
																													ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 66, col: 40, offset: 2489},
																											run: (*parser).callonDocumentHeader94,
																											expr: &seqExpr{
																												pos: position{line: 66, col: 41, offset: 2490},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 66, col: 41, offset: 2490},
																														expr: &litMatcher{
																															pos:        position{line: 66, col: 42, offset: 2491},
																															val:        "<",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 66, col: 46, offset: 2495},
																														expr: &litMatcher{
																															pos:        position{line: 66, col: 47, offset: 2496},
																															val:        ";",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 66, col: 51, offset: 2500},
																														expr: &choiceExpr{
																															pos: position{line: 1310, col: 12, offset: 50512},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1310, col: 12, offset: 50512},
																																	val:        "\r\n",
																																	ignoreCase: false,
																																},
																																&charClassMatcher{
																																	pos:        position{line: 1310, col: 21, offset: 50521},
																																	val:        "[\\r\\n]",
																																	chars:      []rune{'\r', '\n'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 66, col: 60, offset: 2509},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonDocumentHeader107,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																													&anyMatcher{
																														line: 66, col: 64, offset: 2513,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 68, col: 5, offset: 2552},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonDocumentHeader113,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 61, col: 130, offset: 2247},
																			label: "email",
																			expr: &zeroOrOneExpr{
																				pos: position{line: 61, col: 136, offset: 2253},
																				expr: &actionExpr{
																					pos: position{line: 72, col: 24, offset: 2615},
																					run: (*parser).callonDocumentHeader117,
																					expr: &seqExpr{
																						pos: position{line: 72, col: 24, offset: 2615},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 72, col: 24, offset: 2615},
																								val:        "<",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 72, col: 28, offset: 2619},
																								label: "email",
																								expr: &oneOrMoreExpr{
																									pos: position{line: 72, col: 34, offset: 2625},
																									expr: &choiceExpr{
																										pos: position{line: 72, col: 35, offset: 2626},
																										alternatives: []interface{}{
																											&actionExpr{
																												pos: position{line: 1264, col: 14, offset: 49515},
																												run: (*parser).callonDocumentHeader123,
																												expr: &oneOrMoreExpr{
																													pos: position{line: 1264, col: 14, offset: 49515},
																													expr: &charClassMatcher{
																														pos:        position{line: 1264, col: 14, offset: 49515},
																														val:        "[a-zA-Z0-9]",
																														ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																											&actionExpr{
																												pos: position{line: 72, col: 47, offset: 2638},
																												run: (*parser).callonDocumentHeader126,
																												expr: &seqExpr{
																													pos: position{line: 72, col: 48, offset: 2639},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 72, col: 48, offset: 2639},
																															expr: &litMatcher{
																																pos:        position{line: 72, col: 49, offset: 2640},
																																val:        ">",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 72, col: 53, offset: 2644},
																															expr: &choiceExpr{
																																pos: position{line: 1314, col: 8, offset: 50552},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1310, col: 12, offset: 50512},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1310, col: 21, offset: 50521},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																	&notExpr{
																																		pos: position{line: 1312, col: 8, offset: 50541},
																																		expr: &anyMatcher{
																																			line: 1312, col: 9, offset: 50542,
																																		},
																																	},
																																},
																															},
																														},
																														&anyMatcher{
																															line: 72, col: 59, offset: 2650,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 74, col: 5, offset: 2689},
																								val:        ">",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 61, col: 159, offset: 2276},
																			expr: &choiceExpr{
																				pos: position{line: 1306, col: 7, offset: 50454},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1306, col: 7, offset: 50454},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1306, col: 13, offset: 50460},
																						run: (*parser).callonDocumentHeader141,
																						expr: &litMatcher{
																							pos:        position{line: 1306, col: 13, offset: 50460},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 61, col: 163, offset: 2280},
																			expr: &litMatcher{
																				pos:        position{line: 61, col: 163, offset: 2280},
																				val:        ";",
																				ignoreCase: false,
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 61, col: 168, offset: 2285},
																			expr: &choiceExpr{
																				pos: position{line: 1306, col: 7, offset: 50454},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1306, col: 7, offset: 50454},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1306, col: 13, offset: 50460},
																						run: (*parser).callonDocumentHeader148,
																						expr: &litMatcher{
																							pos:        position{line: 1306, col: 13, offset: 50460},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1314, col: 8, offset: 50552},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1310, col: 12, offset: 50512},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1310, col: 21, offset: 50521},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1312, col: 8, offset: 50541},
																expr: &anyMatcher{
																	line: 1312, col: 9, offset: 50542,
																},
															},
														},
													},
												},
											},
										},
										&actionExpr{
											pos: position{line: 57, col: 33, offset: 2004},
											run: (*parser).callonDocumentHeader155,
											expr: &seqExpr{
												pos: position{line: 57, col: 33, offset: 2004},
												exprs: []interface{}{
													&zeroOrMoreExpr{
														pos: position{line: 57, col: 33, offset: 2004},
														expr: &choiceExpr{
															pos: position{line: 1306, col: 7, offset: 50454},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1306, col: 7, offset: 50454},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1306, col: 13, offset: 50460},
																	run: (*parser).callonDocumentHeader160,
																	expr: &litMatcher{
																		pos:        position{line: 1306, col: 13, offset: 50460},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&litMatcher{
														pos:        position{line: 57, col: 37, offset: 2008},
														val:        ":author:",
														ignoreCase: false,
													},
													&labeledExpr{
														pos:   position{line: 57, col: 48, offset: 2019},
														label: "author",
														expr: &actionExpr{
															pos: position{line: 61, col: 19, offset: 2136},
															run: (*parser).callonDocumentHeader164,
															expr: &seqExpr{
																pos: position{line: 61, col: 19, offset: 2136},
																exprs: []interface{}{
																	&zeroOrMoreExpr{
																		pos: position{line: 61, col: 19, offset: 2136},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonDocumentHeader169,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 61, col: 23, offset: 2140},
																		label: "namePart1",
																		expr: &actionExpr{
																			pos: position{line: 66, col: 27, offset: 2476},
																			run: (*parser).callonDocumentHeader172,
																			expr: &seqExpr{
																				pos: position{line: 66, col: 27, offset: 2476},
																				exprs: []interface{}{
																					&oneOrMoreExpr{
																						pos: position{line: 66, col: 27, offset: 2476},
																						expr: &choiceExpr{
																							pos: position{line: 66, col: 28, offset: 2477},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 1264, col: 14, offset: 49515},
																									run: (*parser).callonDocumentHeader176,
																									expr: &oneOrMoreExpr{
																										pos: position{line: 1264, col: 14, offset: 49515},
																										expr: &charClassMatcher{
																											pos:        position{line: 1264, col: 14, offset: 49515},
																											val:        "[a-zA-Z0-9]",
																											ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																											ignoreCase: false,
																											inverted:   false,
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 66, col: 40, offset: 2489},
																									run: (*parser).callonDocumentHeader179,
																									expr: &seqExpr{
																										pos: position{line: 66, col: 41, offset: 2490},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 66, col: 41, offset: 2490},
																												expr: &litMatcher{
																													pos:        position{line: 66, col: 42, offset: 2491},
																													val:        "<",
																													ignoreCase: false,
																												},
																											},
																											&notExpr{
																												pos: position{line: 66, col: 46, offset: 2495},
																												expr: &litMatcher{
																													pos:        position{line: 66, col: 47, offset: 2496},
																													val:        ";",
																													ignoreCase: false,
																												},
																											},
																											&notExpr{
																												pos: position{line: 66, col: 51, offset: 2500},
																												expr: &choiceExpr{
																													pos: position{line: 1310, col: 12, offset: 50512},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1310, col: 12, offset: 50512},
																															val:        "\r\n",
																															ignoreCase: false,
																														},
																														&charClassMatcher{
																															pos:        position{line: 1310, col: 21, offset: 50521},
																															val:        "[\\r\\n]",
																															chars:      []rune{'\r', '\n'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 66, col: 60, offset: 2509},
																												expr: &choiceExpr{
																													pos: position{line: 1306, col: 7, offset: 50454},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1306, col: 7, offset: 50454},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1306, col: 13, offset: 50460},
																															run: (*parser).callonDocumentHeader192,
																															expr: &litMatcher{
																																pos:        position{line: 1306, col: 13, offset: 50460},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																											&anyMatcher{
																												line: 66, col: 64, offset: 2513,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&zeroOrMoreExpr{
																						pos: position{line: 68, col: 5, offset: 2552},
																						expr: &choiceExpr{
																							pos: position{line: 1306, col: 7, offset: 50454},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1306, col: 7, offset: 50454},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1306, col: 13, offset: 50460},
																									run: (*parser).callonDocumentHeader198,
																									expr: &litMatcher{
																										pos:        position{line: 1306, col: 13, offset: 50460},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 61, col: 58, offset: 2175},
																		label: "namePart2",
																		expr: &zeroOrOneExpr{
																			pos: position{line: 61, col: 68, offset: 2185},
																			expr: &actionExpr{
																				pos: position{line: 66, col: 27, offset: 2476},
																				run: (*parser).callonDocumentHeader57,
																				expr: &seqExpr{
																					pos: position{line: 66, col: 27, offset: 2476},
																					exprs: []interface{}{
																						&oneOrMoreExpr{
																							pos: position{line: 66, col: 27, offset: 2476},
																							expr: &choiceExpr{
																								pos: position{line: 66, col: 28, offset: 2477},
																								alternatives: []interface{}{
																									&actionExpr{
																										pos: position{line: 1264, col: 14, offset: 49515},
																										run: (*parser).callonDocumentHeader61,
																										expr: &oneOrMoreExpr{
																											pos: position{line: 1264, col: 14, offset: 49515},
																											expr: &charClassMatcher{
																												pos:        position{line: 1264, col: 14, offset: 49515},
																												val:        "[a-zA-Z0-9]",
																												ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																									&actionExpr{
																										pos: position{line: 66, col: 40, offset: 2489},
																										run: (*parser).callonDocumentHeader64,
																										expr: &seqExpr{
																											pos: position{line: 66, col: 41, offset: 2490},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 66, col: 41, offset: 2490},
																													expr: &litMatcher{
																														pos:        position{line: 66, col: 42, offset: 2491},
																														val:        "<",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 66, col: 46, offset: 2495},
																													expr: &litMatcher{
																														pos:        position{line: 66, col: 47, offset: 2496},
																														val:        ";",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 66, col: 51, offset: 2500},
																													expr: &choiceExpr{
																														pos: position{line: 1310, col: 12, offset: 50512},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1310, col: 12, offset: 50512},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1310, col: 21, offset: 50521},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 66, col: 60, offset: 2509},
																													expr: &choiceExpr{
																														pos: position{line: 1306, col: 7, offset: 50454},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1306, col: 7, offset: 50454},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1306, col: 13, offset: 50460},
																																run: (*parser).callonDocumentHeader77,
																																expr: &litMatcher{
																																	pos:        position{line: 1306, col: 13, offset: 50460},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&anyMatcher{
																													line: 66, col: 64, offset: 2513,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&zeroOrMoreExpr{
																							pos: position{line: 68, col: 5, offset: 2552},
																							expr: &choiceExpr{
																								pos: position{line: 1306, col: 7, offset: 50454},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1306, col: 7, offset: 50454},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1306, col: 13, offset: 50460},
																										run: (*parser).callonDocumentHeader83,
																										expr: &litMatcher{
																											pos:        position{line: 1306, col: 13, offset: 50460},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 61, col: 94, offset: 2211},
																		label: "namePart3",
																		expr: &zeroOrOneExpr{
																			pos: position{line: 61, col: 104, offset: 2221},
																			expr: &actionExpr{
																				pos: position{line: 66, col: 27, offset: 2476},
																				run: (*parser).callonDocumentHeader87,
																				expr: &seqExpr{
																					pos: position{line: 66, col: 27, offset: 2476},
																					exprs: []interface{}{
																						&oneOrMoreExpr{
																							pos: position{line: 66, col: 27, offset: 2476},
																							expr: &choiceExpr{
																								pos: position{line: 66, col: 28, offset: 2477},
																								alternatives: []interface{}{
																									&actionExpr{
																										pos: position{line: 1264, col: 14, offset: 49515},
																										run: (*parser).callonDocumentHeader91,
																										expr: &oneOrMoreExpr{
																											pos: position{line: 1264, col: 14, offset: 49515},
																											expr: &charClassMatcher{
																												pos:        position{line: 1264, col: 14, offset: 49515},
																												val:        "[a-zA-Z0-9]",
																												ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																									&actionExpr{
																										pos: position{line: 66, col: 40, offset: 2489},
																										run: (*parser).callonDocumentHeader94,
																										expr: &seqExpr{
																											pos: position{line: 66, col: 41, offset: 2490},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 66, col: 41, offset: 2490},
																													expr: &litMatcher{
																														pos:        position{line: 66, col: 42, offset: 2491},
																														val:        "<",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 66, col: 46, offset: 2495},
																													expr: &litMatcher{
																														pos:        position{line: 66, col: 47, offset: 2496},
																														val:        ";",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 66, col: 51, offset: 2500},
																													expr: &choiceExpr{
																														pos: position{line: 1310, col: 12, offset: 50512},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1310, col: 12, offset: 50512},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1310, col: 21, offset: 50521},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 66, col: 60, offset: 2509},
																													expr: &choiceExpr{
																														pos: position{line: 1306, col: 7, offset: 50454},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1306, col: 7, offset: 50454},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1306, col: 13, offset: 50460},
																																run: (*parser).callonDocumentHeader107,
																																expr: &litMatcher{
																																	pos:        position{line: 1306, col: 13, offset: 50460},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																												&anyMatcher{
																													line: 66, col: 64, offset: 2513,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&zeroOrMoreExpr{
																							pos: position{line: 68, col: 5, offset: 2552},
																							expr: &choiceExpr{
																								pos: position{line: 1306, col: 7, offset: 50454},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1306, col: 7, offset: 50454},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1306, col: 13, offset: 50460},
																										run: (*parser).callonDocumentHeader113,
																										expr: &litMatcher{
																											pos:        position{line: 1306, col: 13, offset: 50460},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 61, col: 130, offset: 2247},
																		label: "email",
																		expr: &zeroOrOneExpr{
																			pos: position{line: 61, col: 136, offset: 2253},
																			expr: &actionExpr{
																				pos: position{line: 72, col: 24, offset: 2615},
																				run: (*parser).callonDocumentHeader117,
																				expr: &seqExpr{
																					pos: position{line: 72, col: 24, offset: 2615},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 72, col: 24, offset: 2615},
																							val:        "<",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 72, col: 28, offset: 2619},
																							label: "email",
																							expr: &oneOrMoreExpr{
																								pos: position{line: 72, col: 34, offset: 2625},
																								expr: &choiceExpr{
																									pos: position{line: 72, col: 35, offset: 2626},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 1264, col: 14, offset: 49515},
																											run: (*parser).callonDocumentHeader123,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 1264, col: 14, offset: 49515},
																												expr: &charClassMatcher{
																													pos:        position{line: 1264, col: 14, offset: 49515},
																													val:        "[a-zA-Z0-9]",
																													ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 72, col: 47, offset: 2638},
																											run: (*parser).callonDocumentHeader126,
																											expr: &seqExpr{
																												pos: position{line: 72, col: 48, offset: 2639},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 72, col: 48, offset: 2639},
																														expr: &litMatcher{
																															pos:        position{line: 72, col: 49, offset: 2640},
																															val:        ">",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 72, col: 53, offset: 2644},
																														expr: &choiceExpr{
																															pos: position{line: 1314, col: 8, offset: 50552},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1310, col: 12, offset: 50512},
																																	val:        "\r\n",
																																	ignoreCase: false,
																																},
																																&charClassMatcher{
																																	pos:        position{line: 1310, col: 21, offset: 50521},
																																	val:        "[\\r\\n]",
																																	chars:      []rune{'\r', '\n'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																																&notExpr{
																																	pos: position{line: 1312, col: 8, offset: 50541},
																																	expr: &anyMatcher{
																																		line: 1312, col: 9, offset: 50542,
																																	},
																																},
																															},
																														},
																													},
																													&anyMatcher{
																														line: 72, col: 59, offset: 2650,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 74, col: 5, offset: 2689},
																							val:        ">",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 61, col: 159, offset: 2276},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonDocumentHeader286,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&zeroOrOneExpr{
																		pos: position{line: 61, col: 163, offset: 2280},
																		expr: &litMatcher{
																			pos:        position{line: 61, col: 163, offset: 2280},
																			val:        ";",
																			ignoreCase: false,
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 61, col: 168, offset: 2285},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonDocumentHeader293,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 47, col: 83, offset: 1584},
							label: "revision",
							expr: &zeroOrOneExpr{
								pos: position{line: 47, col: 93, offset: 1594},
								expr: &actionExpr{
									pos: position{line: 80, col: 21, offset: 2879},
									run: (*parser).callonDocumentHeader297,
									expr: &seqExpr{
										pos: position{line: 80, col: 21, offset: 2879},
										exprs: []interface{}{
											&zeroOrMoreExpr{
												pos: position{line: 80, col: 21, offset: 2879},
												expr: &choiceExpr{
													pos: position{line: 1306, col: 7, offset: 50454},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1306, col: 7, offset: 50454},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1306, col: 13, offset: 50460},
															run: (*parser).callonDocumentHeader302,
															expr: &litMatcher{
																pos:        position{line: 1306, col: 13, offset: 50460},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 80, col: 25, offset: 2883},
												expr: &litMatcher{
													pos:        position{line: 80, col: 26, offset: 2884},
													val:        ":",
													ignoreCase: false,
												},
											},
											&labeledExpr{
												pos:   position{line: 80, col: 30, offset: 2888},
												label: "revnumber",
												expr: &zeroOrOneExpr{
													pos: position{line: 80, col: 40, offset: 2898},
													expr: &choiceExpr{
														pos: position{line: 85, col: 27, offset: 3201},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 85, col: 27, offset: 3201},
																run: (*parser).callonDocumentHeader309,
																expr: &seqExpr{
																	pos: position{line: 85, col: 27, offset: 3201},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 85, col: 27, offset: 3201},
																			val:        "v",
																			ignoreCase: true,
																		},
																		&actionExpr{
																			pos: position{line: 1302, col: 10, offset: 50406},
																			run: (*parser).callonDocumentHeader312,
																			expr: &charClassMatcher{
																				pos:        position{line: 1302, col: 10, offset: 50406},
																				val:        "[0-9]",
																				ranges:     []rune{'0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 85, col: 39, offset: 3213},
																			expr: &choiceExpr{
																				pos: position{line: 85, col: 40, offset: 3214},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 1264, col: 14, offset: 49515},
																						run: (*parser).callonDocumentHeader316,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							expr: &charClassMatcher{
																								pos:        position{line: 1264, col: 14, offset: 49515},
																								val:        "[a-zA-Z0-9]",
																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 1278, col: 11, offset: 49909},
																						run: (*parser).callonDocumentHeader319,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							expr: &choiceExpr{
																								pos: position{line: 1306, col: 7, offset: 50454},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1306, col: 7, offset: 50454},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1306, col: 13, offset: 50460},
																										run: (*parser).callonDocumentHeader323,
																										expr: &litMatcher{
																											pos:        position{line: 1306, col: 13, offset: 50460},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 85, col: 61, offset: 3235},
																						run: (*parser).callonDocumentHeader325,
																						expr: &seqExpr{
																							pos: position{line: 85, col: 62, offset: 3236},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 85, col: 62, offset: 3236},
																									expr: &choiceExpr{
																										pos: position{line: 1314, col: 8, offset: 50552},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1310, col: 12, offset: 50512},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1310, col: 21, offset: 50521},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																											&notExpr{
																												pos: position{line: 1312, col: 8, offset: 50541},
																												expr: &anyMatcher{
																													line: 1312, col: 9, offset: 50542,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 85, col: 67, offset: 3241},
																									expr: &litMatcher{
																										pos:        position{line: 85, col: 68, offset: 3242},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 85, col: 72, offset: 3246},
																									expr: &litMatcher{
																										pos:        position{line: 85, col: 73, offset: 3247},
																										val:        ":",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 85, col: 78, offset: 3252,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 89, col: 5, offset: 3328},
																run: (*parser).callonDocumentHeader338,
																expr: &seqExpr{
																	pos: position{line: 89, col: 5, offset: 3328},
																	exprs: []interface{}{
																		&zeroOrOneExpr{
																			pos: position{line: 89, col: 5, offset: 3328},
																			expr: &litMatcher{
																				pos:        position{line: 89, col: 5, offset: 3328},
																				val:        "v",
																				ignoreCase: true,
																			},
																		},
																		&actionExpr{
																			pos: position{line: 1302, col: 10, offset: 50406},
																			run: (*parser).callonDocumentHeader342,
																			expr: &charClassMatcher{
																				pos:        position{line: 1302, col: 10, offset: 50406},
																				val:        "[0-9]",
																				ranges:     []rune{'0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 89, col: 18, offset: 3341},
																			expr: &choiceExpr{
																				pos: position{line: 89, col: 19, offset: 3342},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 1264, col: 14, offset: 49515},
																						run: (*parser).callonDocumentHeader346,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							expr: &charClassMatcher{
																								pos:        position{line: 1264, col: 14, offset: 49515},
																								val:        "[a-zA-Z0-9]",
																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 1278, col: 11, offset: 49909},
																						run: (*parser).callonDocumentHeader349,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							expr: &choiceExpr{
																								pos: position{line: 1306, col: 7, offset: 50454},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1306, col: 7, offset: 50454},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1306, col: 13, offset: 50460},
																										run: (*parser).callonDocumentHeader353,
																										expr: &litMatcher{
																											pos:        position{line: 1306, col: 13, offset: 50460},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																					&seqExpr{
																						pos: position{line: 89, col: 41, offset: 3364},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 89, col: 41, offset: 3364},
																								expr: &choiceExpr{
																									pos: position{line: 1314, col: 8, offset: 50552},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1310, col: 12, offset: 50512},
																											val:        "\r\n",
																											ignoreCase: false,
																										},
																										&charClassMatcher{
																											pos:        position{line: 1310, col: 21, offset: 50521},
																											val:        "[\\r\\n]",
																											chars:      []rune{'\r', '\n'},
																											ignoreCase: false,
																											inverted:   false,
																										},
																										&notExpr{
																											pos: position{line: 1312, col: 8, offset: 50541},
																											expr: &anyMatcher{
																												line: 1312, col: 9, offset: 50542,
																											},
																										},
																									},
																								},
																							},
																							&notExpr{
																								pos: position{line: 89, col: 46, offset: 3369},
																								expr: &litMatcher{
																									pos:        position{line: 89, col: 47, offset: 3370},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 89, col: 51, offset: 3374},
																								expr: &litMatcher{
																									pos:        position{line: 89, col: 52, offset: 3375},
																									val:        ":",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 89, col: 57, offset: 3380,
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 89, col: 62, offset: 3385},
																			expr: &choiceExpr{
																				pos: position{line: 1306, col: 7, offset: 50454},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1306, col: 7, offset: 50454},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1306, col: 13, offset: 50460},
																						run: (*parser).callonDocumentHeader370,
																						expr: &litMatcher{
																							pos:        position{line: 1306, col: 13, offset: 50460},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&andExpr{
																			pos: position{line: 89, col: 66, offset: 3389},
																			expr: &litMatcher{
																				pos:        position{line: 89, col: 67, offset: 3390},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrOneExpr{
												pos: position{line: 80, col: 66, offset: 2924},
												expr: &litMatcher{
													pos:        position{line: 80, col: 66, offset: 2924},
													val:        ",",
													ignoreCase: false,
												},
											},
											&labeledExpr{
												pos:   position{line: 80, col: 71, offset: 2929},
												label: "revdate",
												expr: &zeroOrOneExpr{
													pos: position{line: 80, col: 79, offset: 2937},
													expr: &actionExpr{
														pos: position{line: 93, col: 25, offset: 3454},
														run: (*parser).callonDocumentHeader378,
														expr: &zeroOrMoreExpr{
															pos: position{line: 93, col: 25, offset: 3454},
															expr: &choiceExpr{
																pos: position{line: 93, col: 26, offset: 3455},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 1264, col: 14, offset: 49515},
																		run: (*parser).callonDocumentHeader381,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1264, col: 14, offset: 49515},
																			expr: &charClassMatcher{
																				pos:        position{line: 1264, col: 14, offset: 49515},
																				val:        "[a-zA-Z0-9]",
																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 1278, col: 11, offset: 49909},
																		run: (*parser).callonDocumentHeader384,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1278, col: 11, offset: 49909},
																			expr: &choiceExpr{
																				pos: position{line: 1306, col: 7, offset: 50454},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1306, col: 7, offset: 50454},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1306, col: 13, offset: 50460},
																						run: (*parser).callonDocumentHeader388,
																						expr: &litMatcher{
																							pos:        position{line: 1306, col: 13, offset: 50460},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 93, col: 47, offset: 3476},
																		run: (*parser).callonDocumentHeader390,
																		expr: &seqExpr{
																			pos: position{line: 93, col: 48, offset: 3477},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 93, col: 48, offset: 3477},
																					expr: &choiceExpr{
																						pos: position{line: 1314, col: 8, offset: 50552},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1310, col: 12, offset: 50512},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 1310, col: 21, offset: 50521},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																							&notExpr{
																								pos: position{line: 1312, col: 8, offset: 50541},
																								expr: &anyMatcher{
																									line: 1312, col: 9, offset: 50542,
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 93, col: 53, offset: 3482},
																					expr: &litMatcher{
																						pos:        position{line: 93, col: 54, offset: 3483},
																						val:        ":",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 93, col: 59, offset: 3488,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrOneExpr{
												pos: position{line: 80, col: 103, offset: 2961},
												expr: &litMatcher{
													pos:        position{line: 80, col: 103, offset: 2961},
													val:        ":",
													ignoreCase: false,
												},
											},
											&labeledExpr{
												pos:   position{line: 80, col: 108, offset: 2966},
												label: "revremark",
												expr: &zeroOrOneExpr{
													pos: position{line: 80, col: 118, offset: 2976},
													expr: &actionExpr{
														pos: position{line: 99, col: 27, offset: 3589},
														run: (*parser).callonDocumentHeader405,
														expr: &zeroOrMoreExpr{
															pos: position{line: 99, col: 27, offset: 3589},
															expr: &choiceExpr{
																pos: position{line: 99, col: 28, offset: 3590},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 1264, col: 14, offset: 49515},
																		run: (*parser).callonDocumentHeader408,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1264, col: 14, offset: 49515},
																			expr: &charClassMatcher{
																				pos:        position{line: 1264, col: 14, offset: 49515},
																				val:        "[a-zA-Z0-9]",
																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 1278, col: 11, offset: 49909},
																		run: (*parser).callonDocumentHeader411,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1278, col: 11, offset: 49909},
																			expr: &choiceExpr{
																				pos: position{line: 1306, col: 7, offset: 50454},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1306, col: 7, offset: 50454},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1306, col: 13, offset: 50460},
																						run: (*parser).callonDocumentHeader415,
																						expr: &litMatcher{
																							pos:        position{line: 1306, col: 13, offset: 50460},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 99, col: 49, offset: 3611},
																		run: (*parser).callonDocumentHeader417,
																		expr: &seqExpr{
																			pos: position{line: 99, col: 50, offset: 3612},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 99, col: 50, offset: 3612},
																					expr: &choiceExpr{
																						pos: position{line: 1314, col: 8, offset: 50552},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1310, col: 12, offset: 50512},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 1310, col: 21, offset: 50521},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																							&notExpr{
																								pos: position{line: 1312, col: 8, offset: 50541},
																								expr: &anyMatcher{
																									line: 1312, col: 9, offset: 50542,
																								},
																							},
																						},
																					},
																				},
																				&anyMatcher{
																					line: 99, col: 56, offset: 3618,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1314, col: 8, offset: 50552},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1310, col: 12, offset: 50512},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1310, col: 21, offset: 50521},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1312, col: 8, offset: 50541},
														expr: &anyMatcher{
															line: 1312, col: 9, offset: 50542,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 47, col: 112, offset: 1613},
							label: "otherAttributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 47, col: 129, offset: 1630},
								expr: &choiceExpr{
									pos: position{line: 108, col: 33, offset: 3840},
									alternatives: []interface{}{
										&actionExpr{
											pos: position{line: 108, col: 33, offset: 3840},
											run: (*parser).callonDocumentHeader434,
											expr: &seqExpr{
												pos: position{line: 108, col: 33, offset: 3840},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 108, col: 33, offset: 3840},
														val:        ":",
														ignoreCase: false,
													},
													&labeledExpr{
														pos:   position{line: 108, col: 37, offset: 3844},
														label: "name",
														expr: &actionExpr{
															pos: position{line: 127, col: 26, offset: 4690},
															run: (*parser).callonDocumentHeader438,
															expr: &seqExpr{
																pos: position{line: 127, col: 26, offset: 4690},
																exprs: []interface{}{
																	&charClassMatcher{
																		pos:        position{line: 127, col: 27, offset: 4691},
																		val:        "[_A-Za-z0-9]",
																		chars:      []rune{'_'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 127, col: 56, offset: 4720},
																		expr: &charClassMatcher{
																			pos:        position{line: 127, col: 57, offset: 4721},
																			val:        "[-A-Za-z0-9]",
																			chars:      []rune{'-'},
																			ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
														},
													},
													&litMatcher{
														pos:        position{line: 108, col: 66, offset: 3873},
														val:        ":",
														ignoreCase: false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 108, col: 70, offset: 3877},
														expr: &choiceExpr{
															pos: position{line: 1306, col: 7, offset: 50454},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1306, col: 7, offset: 50454},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1306, col: 13, offset: 50460},
																	run: (*parser).callonDocumentHeader447,
																	expr: &litMatcher{
																		pos:        position{line: 1306, col: 13, offset: 50460},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1314, col: 8, offset: 50552},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1310, col: 12, offset: 50512},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1310, col: 21, offset: 50521},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1312, col: 8, offset: 50541},
																expr: &anyMatcher{
																	line: 1312, col: 9, offset: 50542,
																},
															},
														},
													},
												},
											},
										},
										&actionExpr{
											pos: position{line: 110, col: 5, offset: 3960},
											run: (*parser).callonDocumentHeader454,
											expr: &seqExpr{
												pos: position{line: 110, col: 5, offset: 3960},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 110, col: 5, offset: 3960},
														val:        ":",
														ignoreCase: false,
													},
													&labeledExpr{
														pos:   position{line: 110, col: 9, offset: 3964},
														label: "name",
														expr: &actionExpr{
															pos: position{line: 127, col: 26, offset: 4690},
															run: (*parser).callonDocumentHeader458,
															expr: &seqExpr{
																pos: position{line: 127, col: 26, offset: 4690},
																exprs: []interface{}{
																	&charClassMatcher{
																		pos:        position{line: 127, col: 27, offset: 4691},
																		val:        "[_A-Za-z0-9]",
																		chars:      []rune{'_'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 127, col: 56, offset: 4720},
																		expr: &charClassMatcher{
																			pos:        position{line: 127, col: 57, offset: 4721},
																			val:        "[-A-Za-z0-9]",
																			chars:      []rune{'-'},
																			ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
														},
													},
													&litMatcher{
														pos:        position{line: 110, col: 38, offset: 3993},
														val:        ":",
														ignoreCase: false,
													},
													&oneOrMoreExpr{
														pos: position{line: 110, col: 42, offset: 3997},
														expr: &choiceExpr{
															pos: position{line: 1306, col: 7, offset: 50454},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1306, col: 7, offset: 50454},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1306, col: 13, offset: 50460},
																	run: (*parser).callonDocumentHeader467,
																	expr: &litMatcher{
																		pos:        position{line: 1306, col: 13, offset: 50460},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&labeledExpr{
														pos:   position{line: 110, col: 46, offset: 4001},
														label: "value",
														expr: &actionExpr{
															pos: position{line: 131, col: 27, offset: 4813},
															run: (*parser).callonDocumentHeader470,
															expr: &zeroOrMoreExpr{
																pos: position{line: 131, col: 27, offset: 4813},
																expr: &choiceExpr{
																	pos: position{line: 131, col: 28, offset: 4814},
																	alternatives: []interface{}{
																		&actionExpr{
																			pos: position{line: 1264, col: 14, offset: 49515},
																			run: (*parser).callonDocumentHeader473,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1264, col: 14, offset: 49515},
																				expr: &charClassMatcher{
																					pos:        position{line: 1264, col: 14, offset: 49515},
																					val:        "[a-zA-Z0-9]",
																					ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 1278, col: 11, offset: 49909},
																			run: (*parser).callonDocumentHeader476,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1278, col: 11, offset: 49909},
																				expr: &choiceExpr{
																					pos: position{line: 1306, col: 7, offset: 50454},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1306, col: 7, offset: 50454},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1306, col: 13, offset: 50460},
																							run: (*parser).callonDocumentHeader480,
																							expr: &litMatcher{
																								pos:        position{line: 1306, col: 13, offset: 50460},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 131, col: 49, offset: 4835},
																			run: (*parser).callonDocumentHeader482,
																			expr: &seqExpr{
																				pos: position{line: 131, col: 50, offset: 4836},
																				exprs: []interface{}{
																					&notExpr{
																						pos: position{line: 131, col: 50, offset: 4836},
																						expr: &choiceExpr{
																							pos: position{line: 1310, col: 12, offset: 50512},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1310, col: 12, offset: 50512},
																									val:        "\r\n",
																									ignoreCase: false,
																								},
																								&charClassMatcher{
																									pos:        position{line: 1310, col: 21, offset: 50521},
																									val:        "[\\r\\n]",
																									chars:      []rune{'\r', '\n'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																					},
																					&anyMatcher{
																						line: 131, col: 60, offset: 4846,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1314, col: 8, offset: 50552},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1310, col: 12, offset: 50512},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1310, col: 21, offset: 50521},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1312, col: 8, offset: 50541},
																expr: &anyMatcher{
																	line: 1312, col: 9, offset: 50542,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "DocumentElement",
			pos:  position{line: 140, col: 1, offset: 5032},
			expr: &actionExpr{
				pos: position{line: 140, col: 20, offset: 5051},
				run: (*parser).callonDocumentElement1,
				expr: &seqExpr{
					pos: position{line: 140, col: 20, offset: 5051},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 140, col: 20, offset: 5051},
							expr: &notExpr{
								pos: position{line: 1312, col: 8, offset: 50541},
								expr: &anyMatcher{
									line: 1312, col: 9, offset: 50542,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 141, col: 5, offset: 5129},
							label: "element",
							expr: &choiceExpr{
								pos: position{line: 141, col: 14, offset: 5138},
								alternatives: []interface{}{
									&actionExpr{
										pos: position{line: 1253, col: 14, offset: 49283},
										run: (*parser).callonDocumentElement8,
										expr: &seqExpr{
											pos: position{line: 1253, col: 14, offset: 49283},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 1253, col: 14, offset: 49283},
													expr: &notExpr{
														pos: position{line: 1312, col: 8, offset: 50541},
														expr: &anyMatcher{
															line: 1312, col: 9, offset: 50542,
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 1253, col: 19, offset: 49288},
													expr: &choiceExpr{
														pos: position{line: 1306, col: 7, offset: 50454},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1306, col: 7, offset: 50454},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1306, col: 13, offset: 50460},
																run: (*parser).callonDocumentElement16,
																expr: &litMatcher{
																	pos:        position{line: 1306, col: 13, offset: 50460},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1314, col: 8, offset: 50552},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1310, col: 12, offset: 50512},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1310, col: 21, offset: 50521},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1312, col: 8, offset: 50541},
															expr: &anyMatcher{
																line: 1312, col: 9, offset: 50542,
															},
														},
													},
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 142, col: 15, offset: 5163},
										name: "VerseBlock",
									},
									&ruleRefExpr{
										pos:  position{line: 143, col: 15, offset: 5188},
										name: "VerseParagraph",
									},
									&actionExpr{
										pos: position{line: 930, col: 15, offset: 36931},
										run: (*parser).callonDocumentElement25,
										expr: &seqExpr{
											pos: position{line: 930, col: 15, offset: 36931},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 930, col: 15, offset: 36931},
													val:        "image::",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 930, col: 25, offset: 36941},
													label: "path",
													expr: &actionExpr{
														pos: position{line: 1282, col: 8, offset: 49956},
														run: (*parser).callonDocumentElement29,
														expr: &oneOrMoreExpr{
															pos: position{line: 1282, col: 8, offset: 49956},
															expr: &choiceExpr{
																pos: position{line: 1282, col: 9, offset: 49957},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 1264, col: 14, offset: 49515},
																		run: (*parser).callonDocumentElement32,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1264, col: 14, offset: 49515},
																			expr: &charClassMatcher{
																				pos:        position{line: 1264, col: 14, offset: 49515},
																				val:        "[a-zA-Z0-9]",
																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 1282, col: 21, offset: 49969},
																		run: (*parser).callonDocumentElement35,
																		expr: &seqExpr{
																			pos: position{line: 1282, col: 22, offset: 49970},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 1282, col: 22, offset: 49970},
																					expr: &choiceExpr{
																						pos: position{line: 1310, col: 12, offset: 50512},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1310, col: 12, offset: 50512},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 1310, col: 21, offset: 50521},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1282, col: 31, offset: 49979},
																					expr: &choiceExpr{
																						pos: position{line: 1306, col: 7, offset: 50454},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1306, col: 7, offset: 50454},
																								val:        " ",
																								ignoreCase: false,
																							},
																							&actionExpr{
																								pos: position{line: 1306, col: 13, offset: 50460},
																								run: (*parser).callonDocumentElement44,
																								expr: &litMatcher{
																									pos:        position{line: 1306, col: 13, offset: 50460},
																									val:        "\t",
																									ignoreCase: false,
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1282, col: 35, offset: 49983},
																					expr: &litMatcher{
																						pos:        position{line: 1282, col: 36, offset: 49984},
																						val:        "[",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1282, col: 40, offset: 49988},
																					expr: &litMatcher{
																						pos:        position{line: 1282, col: 41, offset: 49989},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 1282, col: 46, offset: 49994,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 930, col: 36, offset: 36952},
													label: "inlineAttributes",
													expr: &choiceExpr{
														pos: position{line: 939, col: 20, offset: 37387},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 939, col: 20, offset: 37387},
																run: (*parser).callonDocumentElement53,
																expr: &seqExpr{
																	pos: position{line: 939, col: 20, offset: 37387},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 939, col: 20, offset: 37387},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 939, col: 24, offset: 37391},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 956, col: 19, offset: 38110},
																				run: (*parser).callonDocumentElement57,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 956, col: 19, offset: 38110},
																					expr: &choiceExpr{
																						pos: position{line: 956, col: 20, offset: 38111},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								run: (*parser).callonDocumentElement60,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1264, col: 14, offset: 49515},
																									expr: &charClassMatcher{
																										pos:        position{line: 1264, col: 14, offset: 49515},
																										val:        "[a-zA-Z0-9]",
																										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								run: (*parser).callonDocumentElement63,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1278, col: 11, offset: 49909},
																									expr: &choiceExpr{
																										pos: position{line: 1306, col: 7, offset: 50454},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1306, col: 7, offset: 50454},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1306, col: 13, offset: 50460},
																												run: (*parser).callonDocumentElement67,
																												expr: &litMatcher{
																													pos:        position{line: 1306, col: 13, offset: 50460},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 956, col: 41, offset: 38132},
																								run: (*parser).callonDocumentElement69,
																								expr: &seqExpr{
																									pos: position{line: 956, col: 42, offset: 38133},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 956, col: 42, offset: 38133},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 43, offset: 38134},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 956, col: 47, offset: 38138},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 48, offset: 38139},
																												val:        "=",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 956, col: 52, offset: 38143},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 53, offset: 38144},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 956, col: 57, offset: 38148,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 939, col: 45, offset: 37412},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 940, col: 5, offset: 37420},
																			label: "width",
																			expr: &actionExpr{
																				pos: position{line: 956, col: 19, offset: 38110},
																				run: (*parser).callonDocumentElement80,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 956, col: 19, offset: 38110},
																					expr: &choiceExpr{
																						pos: position{line: 956, col: 20, offset: 38111},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								run: (*parser).callonDocumentElement83,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1264, col: 14, offset: 49515},
																									expr: &charClassMatcher{
																										pos:        position{line: 1264, col: 14, offset: 49515},
																										val:        "[a-zA-Z0-9]",
																										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								run: (*parser).callonDocumentElement86,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1278, col: 11, offset: 49909},
																									expr: &choiceExpr{
																										pos: position{line: 1306, col: 7, offset: 50454},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1306, col: 7, offset: 50454},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1306, col: 13, offset: 50460},
																												run: (*parser).callonDocumentElement90,
																												expr: &litMatcher{
																													pos:        position{line: 1306, col: 13, offset: 50460},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 956, col: 41, offset: 38132},
																								run: (*parser).callonDocumentElement92,
																								expr: &seqExpr{
																									pos: position{line: 956, col: 42, offset: 38133},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 956, col: 42, offset: 38133},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 43, offset: 38134},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 956, col: 47, offset: 38138},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 48, offset: 38139},
																												val:        "=",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 956, col: 52, offset: 38143},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 53, offset: 38144},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 956, col: 57, offset: 38148,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 940, col: 29, offset: 37444},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 941, col: 5, offset: 37452},
																			label: "height",
																			expr: &actionExpr{
																				pos: position{line: 956, col: 19, offset: 38110},
																				run: (*parser).callonDocumentElement103,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 956, col: 19, offset: 38110},
																					expr: &choiceExpr{
																						pos: position{line: 956, col: 20, offset: 38111},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								run: (*parser).callonDocumentElement106,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1264, col: 14, offset: 49515},
																									expr: &charClassMatcher{
																										pos:        position{line: 1264, col: 14, offset: 49515},
																										val:        "[a-zA-Z0-9]",
																										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								run: (*parser).callonDocumentElement109,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1278, col: 11, offset: 49909},
																									expr: &choiceExpr{
																										pos: position{line: 1306, col: 7, offset: 50454},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1306, col: 7, offset: 50454},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1306, col: 13, offset: 50460},
																												run: (*parser).callonDocumentElement113,
																												expr: &litMatcher{
																													pos:        position{line: 1306, col: 13, offset: 50460},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 956, col: 41, offset: 38132},
																								run: (*parser).callonDocumentElement115,
																								expr: &seqExpr{
																									pos: position{line: 956, col: 42, offset: 38133},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 956, col: 42, offset: 38133},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 43, offset: 38134},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 956, col: 47, offset: 38138},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 48, offset: 38139},
																												val:        "=",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 956, col: 52, offset: 38143},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 53, offset: 38144},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 956, col: 57, offset: 38148,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 941, col: 29, offset: 37476},
																			expr: &litMatcher{
																				pos:        position{line: 941, col: 29, offset: 37476},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 942, col: 5, offset: 37485},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 942, col: 16, offset: 37496},
																				expr: &choiceExpr{
																					pos: position{line: 225, col: 21, offset: 7971},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							run: (*parser).callonDocumentElement129,
																							expr: &seqExpr{
																								pos: position{line: 225, col: 21, offset: 7971},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 225, col: 21, offset: 7971},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonDocumentElement132,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonDocumentElement135,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonDocumentElement138,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1229, col: 16, offset: 48642},
																															run: (*parser).callonDocumentElement141,
																															expr: &litMatcher{
																																pos:        position{line: 1229, col: 16, offset: 48642},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		run: (*parser).callonDocumentElement146,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1264, col: 14, offset: 49515},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1264, col: 14, offset: 49515},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		run: (*parser).callonDocumentElement149,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1278, col: 11, offset: 49909},
																																			expr: &choiceExpr{
																																				pos: position{line: 1306, col: 7, offset: 50454},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1306, col: 7, offset: 50454},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1306, col: 13, offset: 50460},
																																						run: (*parser).callonDocumentElement153,
																																						expr: &litMatcher{
																																							pos:        position{line: 1306, col: 13, offset: 50460},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonDocumentElement155,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 225, col: 40, offset: 7990},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 225, col: 44, offset: 7994},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 237, col: 19, offset: 8403},
																											run: (*parser).callonDocumentElement166,
																											expr: &labeledExpr{
																												pos:   position{line: 237, col: 19, offset: 8403},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 237, col: 25, offset: 8409},
																													expr: &choiceExpr{
																														pos: position{line: 237, col: 26, offset: 8410},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1264, col: 14, offset: 49515},
																																run: (*parser).callonDocumentElement170,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1264, col: 14, offset: 49515},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1264, col: 14, offset: 49515},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1278, col: 11, offset: 49909},
																																run: (*parser).callonDocumentElement173,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1278, col: 11, offset: 49909},
																																	expr: &choiceExpr{
																																		pos: position{line: 1306, col: 7, offset: 50454},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1306, col: 7, offset: 50454},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1306, col: 13, offset: 50460},
																																				run: (*parser).callonDocumentElement177,
																																				expr: &litMatcher{
																																					pos:        position{line: 1306, col: 13, offset: 50460},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 237, col: 47, offset: 8431},
																																run: (*parser).callonDocumentElement179,
																																expr: &seqExpr{
																																	pos: position{line: 237, col: 48, offset: 8432},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 237, col: 48, offset: 8432},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 49, offset: 8433},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 53, offset: 8437},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 54, offset: 8438},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 58, offset: 8442},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 59, offset: 8443},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 237, col: 64, offset: 8448,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 225, col: 67, offset: 8017},
																										expr: &litMatcher{
																											pos:        position{line: 225, col: 67, offset: 8017},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 225, col: 72, offset: 8022},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonDocumentElement193,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 227, col: 5, offset: 8106},
																							run: (*parser).callonDocumentElement195,
																							expr: &seqExpr{
																								pos: position{line: 227, col: 5, offset: 8106},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 227, col: 5, offset: 8106},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonDocumentElement198,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonDocumentElement201,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonDocumentElement204,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1229, col: 16, offset: 48642},
																															run: (*parser).callonDocumentElement207,
																															expr: &litMatcher{
																																pos:        position{line: 1229, col: 16, offset: 48642},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		run: (*parser).callonDocumentElement212,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1264, col: 14, offset: 49515},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1264, col: 14, offset: 49515},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		run: (*parser).callonDocumentElement215,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1278, col: 11, offset: 49909},
																																			expr: &choiceExpr{
																																				pos: position{line: 1306, col: 7, offset: 50454},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1306, col: 7, offset: 50454},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1306, col: 13, offset: 50460},
																																						run: (*parser).callonDocumentElement219,
																																						expr: &litMatcher{
																																							pos:        position{line: 1306, col: 13, offset: 50460},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonDocumentElement221,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 227, col: 24, offset: 8125},
																										expr: &litMatcher{
																											pos:        position{line: 227, col: 24, offset: 8125},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 227, col: 29, offset: 8130},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonDocumentElement235,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 942, col: 36, offset: 37516},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 944, col: 5, offset: 37614},
																run: (*parser).callonDocumentElement238,
																expr: &seqExpr{
																	pos: position{line: 944, col: 5, offset: 37614},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 944, col: 5, offset: 37614},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 944, col: 9, offset: 37618},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 956, col: 19, offset: 38110},
																				run: (*parser).callonDocumentElement242,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 956, col: 19, offset: 38110},
																					expr: &choiceExpr{
																						pos: position{line: 956, col: 20, offset: 38111},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								run: (*parser).callonDocumentElement245,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1264, col: 14, offset: 49515},
																									expr: &charClassMatcher{
																										pos:        position{line: 1264, col: 14, offset: 49515},
																										val:        "[a-zA-Z0-9]",
																										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								run: (*parser).callonDocumentElement248,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1278, col: 11, offset: 49909},
																									expr: &choiceExpr{
																										pos: position{line: 1306, col: 7, offset: 50454},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1306, col: 7, offset: 50454},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1306, col: 13, offset: 50460},
																												run: (*parser).callonDocumentElement252,
																												expr: &litMatcher{
																													pos:        position{line: 1306, col: 13, offset: 50460},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 956, col: 41, offset: 38132},
																								run: (*parser).callonDocumentElement254,
																								expr: &seqExpr{
																									pos: position{line: 956, col: 42, offset: 38133},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 956, col: 42, offset: 38133},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 43, offset: 38134},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 956, col: 47, offset: 38138},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 48, offset: 38139},
																												val:        "=",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 956, col: 52, offset: 38143},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 53, offset: 38144},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 956, col: 57, offset: 38148,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 944, col: 30, offset: 37639},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 945, col: 5, offset: 37647},
																			label: "width",
																			expr: &actionExpr{
																				pos: position{line: 956, col: 19, offset: 38110},
																				run: (*parser).callonDocumentElement265,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 956, col: 19, offset: 38110},
																					expr: &choiceExpr{
																						pos: position{line: 956, col: 20, offset: 38111},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								run: (*parser).callonDocumentElement268,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1264, col: 14, offset: 49515},
																									expr: &charClassMatcher{
																										pos:        position{line: 1264, col: 14, offset: 49515},
																										val:        "[a-zA-Z0-9]",
																										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								run: (*parser).callonDocumentElement271,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1278, col: 11, offset: 49909},
																									expr: &choiceExpr{
																										pos: position{line: 1306, col: 7, offset: 50454},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1306, col: 7, offset: 50454},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1306, col: 13, offset: 50460},
																												run: (*parser).callonDocumentElement275,
																												expr: &litMatcher{
																													pos:        position{line: 1306, col: 13, offset: 50460},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 956, col: 41, offset: 38132},
																								run: (*parser).callonDocumentElement277,
																								expr: &seqExpr{
																									pos: position{line: 956, col: 42, offset: 38133},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 956, col: 42, offset: 38133},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 43, offset: 38134},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 956, col: 47, offset: 38138},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 48, offset: 38139},
																												val:        "=",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 956, col: 52, offset: 38143},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 53, offset: 38144},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 956, col: 57, offset: 38148,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 945, col: 28, offset: 37670},
																			expr: &litMatcher{
																				pos:        position{line: 945, col: 28, offset: 37670},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 946, col: 5, offset: 37679},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 946, col: 16, offset: 37690},
																				expr: &choiceExpr{
																					pos: position{line: 225, col: 21, offset: 7971},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							run: (*parser).callonDocumentElement291,
																							expr: &seqExpr{
																								pos: position{line: 225, col: 21, offset: 7971},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 225, col: 21, offset: 7971},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonDocumentElement294,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonDocumentElement297,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonDocumentElement300,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1229, col: 16, offset: 48642},
																															run: (*parser).callonDocumentElement303,
																															expr: &litMatcher{
																																pos:        position{line: 1229, col: 16, offset: 48642},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		run: (*parser).callonDocumentElement308,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1264, col: 14, offset: 49515},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1264, col: 14, offset: 49515},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		run: (*parser).callonDocumentElement311,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1278, col: 11, offset: 49909},
																																			expr: &choiceExpr{
																																				pos: position{line: 1306, col: 7, offset: 50454},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1306, col: 7, offset: 50454},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1306, col: 13, offset: 50460},
																																						run: (*parser).callonDocumentElement315,
																																						expr: &litMatcher{
																																							pos:        position{line: 1306, col: 13, offset: 50460},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonDocumentElement317,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 225, col: 40, offset: 7990},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 225, col: 44, offset: 7994},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 237, col: 19, offset: 8403},
																											run: (*parser).callonDocumentElement328,
																											expr: &labeledExpr{
																												pos:   position{line: 237, col: 19, offset: 8403},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 237, col: 25, offset: 8409},
																													expr: &choiceExpr{
																														pos: position{line: 237, col: 26, offset: 8410},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1264, col: 14, offset: 49515},
																																run: (*parser).callonDocumentElement332,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1264, col: 14, offset: 49515},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1264, col: 14, offset: 49515},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1278, col: 11, offset: 49909},
																																run: (*parser).callonDocumentElement335,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1278, col: 11, offset: 49909},
																																	expr: &choiceExpr{
																																		pos: position{line: 1306, col: 7, offset: 50454},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1306, col: 7, offset: 50454},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1306, col: 13, offset: 50460},
																																				run: (*parser).callonDocumentElement339,
																																				expr: &litMatcher{
																																					pos:        position{line: 1306, col: 13, offset: 50460},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 237, col: 47, offset: 8431},
																																run: (*parser).callonDocumentElement341,
																																expr: &seqExpr{
																																	pos: position{line: 237, col: 48, offset: 8432},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 237, col: 48, offset: 8432},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 49, offset: 8433},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 53, offset: 8437},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 54, offset: 8438},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 58, offset: 8442},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 59, offset: 8443},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 237, col: 64, offset: 8448,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 225, col: 67, offset: 8017},
																										expr: &litMatcher{
																											pos:        position{line: 225, col: 67, offset: 8017},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 225, col: 72, offset: 8022},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonDocumentElement355,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 227, col: 5, offset: 8106},
																							run: (*parser).callonDocumentElement357,
																							expr: &seqExpr{
																								pos: position{line: 227, col: 5, offset: 8106},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 227, col: 5, offset: 8106},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonDocumentElement360,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonDocumentElement363,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonDocumentElement366,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1229, col: 16, offset: 48642},
																															run: (*parser).callonDocumentElement369,
																															expr: &litMatcher{
																																pos:        position{line: 1229, col: 16, offset: 48642},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		run: (*parser).callonDocumentElement374,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1264, col: 14, offset: 49515},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1264, col: 14, offset: 49515},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		run: (*parser).callonDocumentElement377,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1278, col: 11, offset: 49909},
																																			expr: &choiceExpr{
																																				pos: position{line: 1306, col: 7, offset: 50454},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1306, col: 7, offset: 50454},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1306, col: 13, offset: 50460},
																																						run: (*parser).callonDocumentElement381,
																																						expr: &litMatcher{
																																							pos:        position{line: 1306, col: 13, offset: 50460},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonDocumentElement383,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 227, col: 24, offset: 8125},
																										expr: &litMatcher{
																											pos:        position{line: 227, col: 24, offset: 8125},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 227, col: 29, offset: 8130},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonDocumentElement397,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 946, col: 36, offset: 37710},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 948, col: 5, offset: 37805},
																run: (*parser).callonDocumentElement400,
																expr: &seqExpr{
																	pos: position{line: 948, col: 5, offset: 37805},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 948, col: 5, offset: 37805},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 948, col: 9, offset: 37809},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 956, col: 19, offset: 38110},
																				run: (*parser).callonDocumentElement404,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 956, col: 19, offset: 38110},
																					expr: &choiceExpr{
																						pos: position{line: 956, col: 20, offset: 38111},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								run: (*parser).callonDocumentElement407,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1264, col: 14, offset: 49515},
																									expr: &charClassMatcher{
																										pos:        position{line: 1264, col: 14, offset: 49515},
																										val:        "[a-zA-Z0-9]",
																										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								run: (*parser).callonDocumentElement410,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1278, col: 11, offset: 49909},
																									expr: &choiceExpr{
																										pos: position{line: 1306, col: 7, offset: 50454},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1306, col: 7, offset: 50454},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1306, col: 13, offset: 50460},
																												run: (*parser).callonDocumentElement414,
																												expr: &litMatcher{
																													pos:        position{line: 1306, col: 13, offset: 50460},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 956, col: 41, offset: 38132},
																								run: (*parser).callonDocumentElement416,
																								expr: &seqExpr{
																									pos: position{line: 956, col: 42, offset: 38133},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 956, col: 42, offset: 38133},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 43, offset: 38134},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 956, col: 47, offset: 38138},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 48, offset: 38139},
																												val:        "=",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 956, col: 52, offset: 38143},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 53, offset: 38144},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 956, col: 57, offset: 38148,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 948, col: 30, offset: 37830},
																			expr: &litMatcher{
																				pos:        position{line: 948, col: 30, offset: 37830},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 949, col: 5, offset: 37839},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 949, col: 16, offset: 37850},
																				expr: &choiceExpr{
																					pos: position{line: 225, col: 21, offset: 7971},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							run: (*parser).callonDocumentElement430,
																							expr: &seqExpr{
																								pos: position{line: 225, col: 21, offset: 7971},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 225, col: 21, offset: 7971},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonDocumentElement433,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonDocumentElement436,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonDocumentElement439,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1229, col: 16, offset: 48642},
																															run: (*parser).callonDocumentElement442,
																															expr: &litMatcher{
																																pos:        position{line: 1229, col: 16, offset: 48642},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		run: (*parser).callonDocumentElement447,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1264, col: 14, offset: 49515},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1264, col: 14, offset: 49515},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		run: (*parser).callonDocumentElement450,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1278, col: 11, offset: 49909},
																																			expr: &choiceExpr{
																																				pos: position{line: 1306, col: 7, offset: 50454},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1306, col: 7, offset: 50454},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1306, col: 13, offset: 50460},
																																						run: (*parser).callonDocumentElement454,
																																						expr: &litMatcher{
																																							pos:        position{line: 1306, col: 13, offset: 50460},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonDocumentElement456,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 225, col: 40, offset: 7990},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 225, col: 44, offset: 7994},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 237, col: 19, offset: 8403},
																											run: (*parser).callonDocumentElement467,
																											expr: &labeledExpr{
																												pos:   position{line: 237, col: 19, offset: 8403},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 237, col: 25, offset: 8409},
																													expr: &choiceExpr{
																														pos: position{line: 237, col: 26, offset: 8410},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1264, col: 14, offset: 49515},
																																run: (*parser).callonDocumentElement471,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1264, col: 14, offset: 49515},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1264, col: 14, offset: 49515},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1278, col: 11, offset: 49909},
																																run: (*parser).callonDocumentElement474,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1278, col: 11, offset: 49909},
																																	expr: &choiceExpr{
																																		pos: position{line: 1306, col: 7, offset: 50454},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1306, col: 7, offset: 50454},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1306, col: 13, offset: 50460},
																																				run: (*parser).callonDocumentElement478,
																																				expr: &litMatcher{
																																					pos:        position{line: 1306, col: 13, offset: 50460},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 237, col: 47, offset: 8431},
																																run: (*parser).callonDocumentElement480,
																																expr: &seqExpr{
																																	pos: position{line: 237, col: 48, offset: 8432},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 237, col: 48, offset: 8432},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 49, offset: 8433},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 53, offset: 8437},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 54, offset: 8438},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 58, offset: 8442},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 59, offset: 8443},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 237, col: 64, offset: 8448,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 225, col: 67, offset: 8017},
																										expr: &litMatcher{
																											pos:        position{line: 225, col: 67, offset: 8017},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 225, col: 72, offset: 8022},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonDocumentElement494,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 227, col: 5, offset: 8106},
																							run: (*parser).callonDocumentElement496,
																							expr: &seqExpr{
																								pos: position{line: 227, col: 5, offset: 8106},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 227, col: 5, offset: 8106},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonDocumentElement499,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonDocumentElement502,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonDocumentElement505,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1229, col: 16, offset: 48642},
																															run: (*parser).callonDocumentElement508,
																															expr: &litMatcher{
																																pos:        position{line: 1229, col: 16, offset: 48642},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		run: (*parser).callonDocumentElement513,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1264, col: 14, offset: 49515},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1264, col: 14, offset: 49515},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		run: (*parser).callonDocumentElement516,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1278, col: 11, offset: 49909},
																																			expr: &choiceExpr{
																																				pos: position{line: 1306, col: 7, offset: 50454},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1306, col: 7, offset: 50454},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1306, col: 13, offset: 50460},
																																						run: (*parser).callonDocumentElement520,
																																						expr: &litMatcher{
																																							pos:        position{line: 1306, col: 13, offset: 50460},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonDocumentElement522,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 227, col: 24, offset: 8125},
																										expr: &litMatcher{
																											pos:        position{line: 227, col: 24, offset: 8125},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 227, col: 29, offset: 8130},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonDocumentElement536,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 949, col: 36, offset: 37870},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 951, col: 5, offset: 37963},
																run: (*parser).callonDocumentElement539,
																expr: &seqExpr{
																	pos: position{line: 951, col: 5, offset: 37963},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 951, col: 5, offset: 37963},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 951, col: 9, offset: 37967},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 951, col: 20, offset: 37978},
																				expr: &choiceExpr{
																					pos: position{line: 225, col: 21, offset: 7971},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							run: (*parser).callonDocumentElement545,
																							expr: &seqExpr{
																								pos: position{line: 225, col: 21, offset: 7971},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 225, col: 21, offset: 7971},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonDocumentElement548,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonDocumentElement551,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonDocumentElement554,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1229, col: 16, offset: 48642},
																															run: (*parser).callonDocumentElement557,
																															expr: &litMatcher{
																																pos:        position{line: 1229, col: 16, offset: 48642},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		run: (*parser).callonDocumentElement562,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1264, col: 14, offset: 49515},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1264, col: 14, offset: 49515},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		run: (*parser).callonDocumentElement565,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1278, col: 11, offset: 49909},
																																			expr: &choiceExpr{
																																				pos: position{line: 1306, col: 7, offset: 50454},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1306, col: 7, offset: 50454},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1306, col: 13, offset: 50460},
																																						run: (*parser).callonDocumentElement569,
																																						expr: &litMatcher{
																																							pos:        position{line: 1306, col: 13, offset: 50460},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonDocumentElement571,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 225, col: 40, offset: 7990},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 225, col: 44, offset: 7994},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 237, col: 19, offset: 8403},
																											run: (*parser).callonDocumentElement582,
																											expr: &labeledExpr{
																												pos:   position{line: 237, col: 19, offset: 8403},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 237, col: 25, offset: 8409},
																													expr: &choiceExpr{
																														pos: position{line: 237, col: 26, offset: 8410},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1264, col: 14, offset: 49515},
																																run: (*parser).callonDocumentElement586,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1264, col: 14, offset: 49515},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1264, col: 14, offset: 49515},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1278, col: 11, offset: 49909},
																																run: (*parser).callonDocumentElement589,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1278, col: 11, offset: 49909},
																																	expr: &choiceExpr{
																																		pos: position{line: 1306, col: 7, offset: 50454},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1306, col: 7, offset: 50454},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1306, col: 13, offset: 50460},
																																				run: (*parser).callonDocumentElement593,
																																				expr: &litMatcher{
																																					pos:        position{line: 1306, col: 13, offset: 50460},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 237, col: 47, offset: 8431},
																																run: (*parser).callonDocumentElement595,
																																expr: &seqExpr{
																																	pos: position{line: 237, col: 48, offset: 8432},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 237, col: 48, offset: 8432},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 49, offset: 8433},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 53, offset: 8437},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 54, offset: 8438},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 58, offset: 8442},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 59, offset: 8443},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 237, col: 64, offset: 8448,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 225, col: 67, offset: 8017},
																										expr: &litMatcher{
																											pos:        position{line: 225, col: 67, offset: 8017},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 225, col: 72, offset: 8022},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonDocumentElement609,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 227, col: 5, offset: 8106},
																							run: (*parser).callonDocumentElement611,
																							expr: &seqExpr{
																								pos: position{line: 227, col: 5, offset: 8106},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 227, col: 5, offset: 8106},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonDocumentElement614,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonDocumentElement617,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonDocumentElement620,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1229, col: 16, offset: 48642},
																															run: (*parser).callonDocumentElement623,
																															expr: &litMatcher{
																																pos:        position{line: 1229, col: 16, offset: 48642},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		run: (*parser).callonDocumentElement628,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1264, col: 14, offset: 49515},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1264, col: 14, offset: 49515},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		run: (*parser).callonDocumentElement631,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1278, col: 11, offset: 49909},
																																			expr: &choiceExpr{
																																				pos: position{line: 1306, col: 7, offset: 50454},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1306, col: 7, offset: 50454},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1306, col: 13, offset: 50460},
																																						run: (*parser).callonDocumentElement635,
																																						expr: &litMatcher{
																																							pos:        position{line: 1306, col: 13, offset: 50460},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonDocumentElement637,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 227, col: 24, offset: 8125},
																										expr: &litMatcher{
																											pos:        position{line: 227, col: 24, offset: 8125},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 227, col: 29, offset: 8130},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonDocumentElement651,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 951, col: 40, offset: 37998},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 930, col: 71, offset: 36987},
													expr: &choiceExpr{
														pos: position{line: 1306, col: 7, offset: 50454},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1306, col: 7, offset: 50454},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1306, col: 13, offset: 50460},
																run: (*parser).callonDocumentElement657,
																expr: &litMatcher{
																	pos:        position{line: 1306, col: 13, offset: 50460},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1314, col: 8, offset: 50552},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1310, col: 12, offset: 50512},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1310, col: 21, offset: 50521},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1312, col: 8, offset: 50541},
															expr: &anyMatcher{
																line: 1312, col: 9, offset: 50542,
															},
														},
													},
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 145, col: 15, offset: 5243},
										name: "List",
									},
									&ruleRefExpr{
										pos:  position{line: 146, col: 15, offset: 5263},
										name: "FencedBlock",
									},
									&actionExpr{
										pos: position{line: 1021, col: 17, offset: 40759},
										run: (*parser).callonDocumentElement666,
										expr: &seqExpr{
											pos: position{line: 1021, col: 17, offset: 40759},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 1018, col: 26, offset: 40692},
													val:        "----",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 1018, col: 33, offset: 40699},
													expr: &choiceExpr{
														pos: position{line: 1306, col: 7, offset: 50454},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1306, col: 7, offset: 50454},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1306, col: 13, offset: 50460},
																run: (*parser).callonDocumentElement672,
																expr: &litMatcher{
																	pos:        position{line: 1306, col: 13, offset: 50460},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1314, col: 8, offset: 50552},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1310, col: 12, offset: 50512},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1310, col: 21, offset: 50521},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1312, col: 8, offset: 50541},
															expr: &anyMatcher{
																line: 1312, col: 9, offset: 50542,
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 1021, col: 39, offset: 40781},
													label: "content",
													expr: &zeroOrMoreExpr{
														pos: position{line: 1021, col: 47, offset: 40789},
														expr: &actionExpr{
															pos: position{line: 1025, col: 24, offset: 40959},
															run: (*parser).callonDocumentElement681,
															expr: &labeledExpr{
																pos:   position{line: 1025, col: 24, offset: 40959},
																label: "lines",
																expr: &oneOrMoreExpr{
																	pos: position{line: 1025, col: 30, offset: 40965},
																	expr: &actionExpr{
																		pos: position{line: 1029, col: 21, offset: 41068},
																		run: (*parser).callonDocumentElement684,
																		expr: &seqExpr{
																			pos: position{line: 1029, col: 21, offset: 41068},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 1029, col: 21, offset: 41068},
																					expr: &seqExpr{
																						pos: position{line: 1018, col: 26, offset: 40692},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1018, col: 26, offset: 40692},
																								val:        "----",
																								ignoreCase: false,
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 1018, col: 33, offset: 40699},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonDocumentElement692,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&choiceExpr{
																								pos: position{line: 1314, col: 8, offset: 50552},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1310, col: 12, offset: 50512},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1310, col: 21, offset: 50521},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1312, col: 8, offset: 50541},
																										expr: &anyMatcher{
																											line: 1312, col: 9, offset: 50542,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1029, col: 44, offset: 41091},
																					expr: &notExpr{
																						pos: position{line: 1312, col: 8, offset: 50541},
																						expr: &anyMatcher{
																							line: 1312, col: 9, offset: 50542,
																						},
																					},
																				},
																				&labeledExpr{
																					pos:   position{line: 1029, col: 49, offset: 41096},
																					label: "line",
																					expr: &actionExpr{
																						pos: position{line: 1033, col: 28, offset: 41207},
																						run: (*parser).callonDocumentElement703,
																						expr: &zeroOrMoreExpr{
																							pos: position{line: 1033, col: 28, offset: 41207},
																							expr: &choiceExpr{
																								pos: position{line: 1033, col: 29, offset: 41208},
																								alternatives: []interface{}{
																									&actionExpr{
																										pos: position{line: 1264, col: 14, offset: 49515},
																										run: (*parser).callonDocumentElement706,
																										expr: &oneOrMoreExpr{
																											pos: position{line: 1264, col: 14, offset: 49515},
																											expr: &charClassMatcher{
																												pos:        position{line: 1264, col: 14, offset: 49515},
																												val:        "[a-zA-Z0-9]",
																												ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																									&actionExpr{
																										pos: position{line: 1278, col: 11, offset: 49909},
																										run: (*parser).callonDocumentElement709,
																										expr: &oneOrMoreExpr{
																											pos: position{line: 1278, col: 11, offset: 49909},
																											expr: &choiceExpr{
																												pos: position{line: 1306, col: 7, offset: 50454},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1306, col: 7, offset: 50454},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 1306, col: 13, offset: 50460},
																														run: (*parser).callonDocumentElement713,
																														expr: &litMatcher{
																															pos:        position{line: 1306, col: 13, offset: 50460},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																									},
																									&actionExpr{
																										pos: position{line: 1033, col: 50, offset: 41229},
																										run: (*parser).callonDocumentElement715,
																										expr: &seqExpr{
																											pos: position{line: 1033, col: 51, offset: 41230},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 1033, col: 51, offset: 41230},
																													expr: &seqExpr{
																														pos: position{line: 1018, col: 26, offset: 40692},
																														exprs: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1018, col: 26, offset: 40692},
																																val:        "----",
																																ignoreCase: false,
																															},
																															&zeroOrMoreExpr{
																																pos: position{line: 1018, col: 33, offset: 40699},
																																expr: &choiceExpr{
																																	pos: position{line: 1306, col: 7, offset: 50454},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1306, col: 7, offset: 50454},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 1306, col: 13, offset: 50460},
																																			run: (*parser).callonDocumentElement723,
																																			expr: &litMatcher{
																																				pos:        position{line: 1306, col: 13, offset: 50460},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																															&choiceExpr{
																																pos: position{line: 1314, col: 8, offset: 50552},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1310, col: 12, offset: 50512},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1310, col: 21, offset: 50521},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																	&notExpr{
																																		pos: position{line: 1312, col: 8, offset: 50541},
																																		expr: &anyMatcher{
																																			line: 1312, col: 9, offset: 50542,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 1033, col: 74, offset: 41253},
																													expr: &choiceExpr{
																														pos: position{line: 1314, col: 8, offset: 50552},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1310, col: 12, offset: 50512},
																																val:        "\r\n",
																																ignoreCase: false,
																															},
																															&charClassMatcher{
																																pos:        position{line: 1310, col: 21, offset: 50521},
																																val:        "[\\r\\n]",
																																chars:      []rune{'\r', '\n'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																															&notExpr{
																																pos: position{line: 1312, col: 8, offset: 50541},
																																expr: &anyMatcher{
																																	line: 1312, col: 9, offset: 50542,
																																},
																															},
																														},
																													},
																												},
																												&anyMatcher{
																													line: 1033, col: 80, offset: 41259,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&choiceExpr{
																					pos: position{line: 1314, col: 8, offset: 50552},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1310, col: 12, offset: 50512},
																							val:        "\r\n",
																							ignoreCase: false,
																						},
																						&charClassMatcher{
																							pos:        position{line: 1310, col: 21, offset: 50521},
																							val:        "[\\r\\n]",
																							chars:      []rune{'\r', '\n'},
																							ignoreCase: false,
																							inverted:   false,
																						},
																						&notExpr{
																							pos: position{line: 1312, col: 8, offset: 50541},
																							expr: &anyMatcher{
																								line: 1312, col: 9, offset: 50542,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1021, col: 71, offset: 40813},
													alternatives: []interface{}{
														&seqExpr{
															pos: position{line: 1018, col: 26, offset: 40692},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 1018, col: 26, offset: 40692},
																	val:        "----",
																	ignoreCase: false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 1018, col: 33, offset: 40699},
																	expr: &choiceExpr{
																		pos: position{line: 1306, col: 7, offset: 50454},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1306, col: 7, offset: 50454},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1306, col: 13, offset: 50460},
																				run: (*parser).callonDocumentElement748,
																				expr: &litMatcher{
																					pos:        position{line: 1306, col: 13, offset: 50460},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1314, col: 8, offset: 50552},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1310, col: 12, offset: 50512},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1310, col: 21, offset: 50521},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1312, col: 8, offset: 50541},
																			expr: &anyMatcher{
																				line: 1312, col: 9, offset: 50542,
																			},
																		},
																	},
																},
															},
														},
														&notExpr{
															pos: position{line: 1312, col: 8, offset: 50541},
															expr: &anyMatcher{
																line: 1312, col: 9, offset: 50542,
															},
														},
													},
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 148, col: 15, offset: 5316},
										name: "ExampleBlock",
									},
									&actionExpr{
										pos: position{line: 1153, col: 17, offset: 45597},
										run: (*parser).callonDocumentElement758,
										expr: &seqExpr{
											pos: position{line: 1153, col: 17, offset: 45597},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 1151, col: 26, offset: 45573},
													val:        "////",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 1153, col: 39, offset: 45619},
													expr: &choiceExpr{
														pos: position{line: 1306, col: 7, offset: 50454},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1306, col: 7, offset: 50454},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1306, col: 13, offset: 50460},
																run: (*parser).callonDocumentElement764,
																expr: &litMatcher{
																	pos:        position{line: 1306, col: 13, offset: 50460},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1310, col: 12, offset: 50512},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1310, col: 12, offset: 50512},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1310, col: 21, offset: 50521},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 1153, col: 51, offset: 45631},
													label: "content",
													expr: &zeroOrMoreExpr{
														pos: position{line: 1153, col: 59, offset: 45639},
														expr: &actionExpr{
															pos: position{line: 1157, col: 21, offset: 45816},
															run: (*parser).callonDocumentElement771,
															expr: &seqExpr{
																pos: position{line: 1157, col: 21, offset: 45816},
																exprs: []interface{}{
																	&zeroOrMoreExpr{
																		pos: position{line: 1157, col: 21, offset: 45816},
																		expr: &choiceExpr{
																			pos: position{line: 1157, col: 22, offset: 45817},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 1264, col: 14, offset: 49515},
																					run: (*parser).callonDocumentElement775,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1264, col: 14, offset: 49515},
																						expr: &charClassMatcher{
																							pos:        position{line: 1264, col: 14, offset: 49515},
																							val:        "[a-zA-Z0-9]",
																							ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																							ignoreCase: false,
																							inverted:   false,
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 1278, col: 11, offset: 49909},
																					run: (*parser).callonDocumentElement778,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1278, col: 11, offset: 49909},
																						expr: &choiceExpr{
																							pos: position{line: 1306, col: 7, offset: 50454},
																							alternatives: []interface{}{
																								&litMatcher{
																									pos:        position{line: 1306, col: 7, offset: 50454},
																									val:        " ",
																									ignoreCase: false,
																								},
																								&actionExpr{
																									pos: position{line: 1306, col: 13, offset: 50460},
																									run: (*parser).callonDocumentElement782,
																									expr: &litMatcher{
																										pos:        position{line: 1306, col: 13, offset: 50460},
																										val:        "\t",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 1157, col: 43, offset: 45838},
																					run: (*parser).callonDocumentElement784,
																					expr: &seqExpr{
																						pos: position{line: 1157, col: 44, offset: 45839},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 1157, col: 44, offset: 45839},
																								expr: &litMatcher{
																									pos:        position{line: 1151, col: 26, offset: 45573},
																									val:        "////",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 1157, col: 67, offset: 45862},
																								expr: &choiceExpr{
																									pos: position{line: 1314, col: 8, offset: 50552},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1310, col: 12, offset: 50512},
																											val:        "\r\n",
																											ignoreCase: false,
																										},
																										&charClassMatcher{
																											pos:        position{line: 1310, col: 21, offset: 50521},
																											val:        "[\\r\\n]",
																											chars:      []rune{'\r', '\n'},
																											ignoreCase: false,
																											inverted:   false,
																										},
																										&notExpr{
																											pos: position{line: 1312, col: 8, offset: 50541},
																											expr: &anyMatcher{
																												line: 1312, col: 9, offset: 50542,
																											},
																										},
																									},
																								},
																							},
																							&anyMatcher{
																								line: 1157, col: 73, offset: 45868,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&choiceExpr{
																		pos: position{line: 1314, col: 8, offset: 50552},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1310, col: 12, offset: 50512},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1310, col: 21, offset: 50521},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																			&notExpr{
																				pos: position{line: 1312, col: 8, offset: 50541},
																				expr: &anyMatcher{
																					line: 1312, col: 9, offset: 50542,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1153, col: 81, offset: 45661},
													alternatives: []interface{}{
														&seqExpr{
															pos: position{line: 1153, col: 82, offset: 45662},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 1151, col: 26, offset: 45573},
																	val:        "////",
																	ignoreCase: false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 1153, col: 104, offset: 45684},
																	expr: &choiceExpr{
																		pos: position{line: 1306, col: 7, offset: 50454},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1306, col: 7, offset: 50454},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1306, col: 13, offset: 50460},
																				run: (*parser).callonDocumentElement806,
																				expr: &litMatcher{
																					pos:        position{line: 1306, col: 13, offset: 50460},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1314, col: 8, offset: 50552},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1310, col: 12, offset: 50512},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1310, col: 21, offset: 50521},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1312, col: 8, offset: 50541},
																			expr: &anyMatcher{
																				line: 1312, col: 9, offset: 50542,
																			},
																		},
																	},
																},
															},
														},
														&notExpr{
															pos: position{line: 1312, col: 8, offset: 50541},
															expr: &anyMatcher{
																line: 1312, col: 9, offset: 50542,
															},
														},
													},
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 150, col: 15, offset: 5370},
										name: "QuoteBlock",
									},
									&ruleRefExpr{
										pos:  position{line: 151, col: 15, offset: 5396},
										name: "SidebarBlock",
									},
									&ruleRefExpr{
										pos:  position{line: 152, col: 15, offset: 5423},
										name: "Table",
									},
									&actionExpr{
										pos: position{line: 1182, col: 31, offset: 46736},
										run: (*parser).callonDocumentElement818,
										expr: &labeledExpr{
											pos:   position{line: 1182, col: 31, offset: 46736},
											label: "lines",
											expr: &actionExpr{
												pos: position{line: 1188, col: 5, offset: 47001},
												run: (*parser).callonDocumentElement820,
												expr: &seqExpr{
													pos: position{line: 1188, col: 5, offset: 47001},
													exprs: []interface{}{
														&labeledExpr{
															pos:   position{line: 1188, col: 5, offset: 47001},
															label: "firstLine",
															expr: &actionExpr{
																pos: position{line: 1188, col: 16, offset: 47012},
																run: (*parser).callonDocumentElement823,
																expr: &seqExpr{
																	pos: position{line: 1188, col: 16, offset: 47012},
																	exprs: []interface{}{
																		&choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonDocumentElement827,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&oneOrMoreExpr{
																			pos: position{line: 1188, col: 19, offset: 47015},
																			expr: &choiceExpr{
																				pos: position{line: 1188, col: 20, offset: 47016},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 1264, col: 14, offset: 49515},
																						run: (*parser).callonDocumentElement831,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							expr: &charClassMatcher{
																								pos:        position{line: 1264, col: 14, offset: 49515},
																								val:        "[a-zA-Z0-9]",
																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 1278, col: 11, offset: 49909},
																						run: (*parser).callonDocumentElement834,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							expr: &choiceExpr{
																								pos: position{line: 1306, col: 7, offset: 50454},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1306, col: 7, offset: 50454},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1306, col: 13, offset: 50460},
																										run: (*parser).callonDocumentElement838,
																										expr: &litMatcher{
																											pos:        position{line: 1306, col: 13, offset: 50460},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 1188, col: 41, offset: 47037},
																						run: (*parser).callonDocumentElement840,
																						expr: &seqExpr{
																							pos: position{line: 1188, col: 42, offset: 47038},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 1188, col: 42, offset: 47038},
																									expr: &choiceExpr{
																										pos: position{line: 1314, col: 8, offset: 50552},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1310, col: 12, offset: 50512},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1310, col: 21, offset: 50521},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																											&notExpr{
																												pos: position{line: 1312, col: 8, offset: 50541},
																												expr: &anyMatcher{
																													line: 1312, col: 9, offset: 50542,
																												},
																											},
																										},
																									},
																								},
																								&anyMatcher{
																									line: 1188, col: 48, offset: 47044,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&choiceExpr{
															pos: position{line: 1314, col: 8, offset: 50552},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1310, col: 12, offset: 50512},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1310, col: 21, offset: 50521},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&notExpr{
																	pos: position{line: 1312, col: 8, offset: 50541},
																	expr: &anyMatcher{
																		line: 1312, col: 9, offset: 50542,
																	},
																},
															},
														},
														&labeledExpr{
															pos:   position{line: 1193, col: 5, offset: 47198},
															label: "otherLines",
															expr: &zeroOrMoreExpr{
																pos: position{line: 1193, col: 16, offset: 47209},
																expr: &actionExpr{
																	pos: position{line: 1194, col: 9, offset: 47219},
																	run: (*parser).callonDocumentElement856,
																	expr: &seqExpr{
																		pos: position{line: 1194, col: 9, offset: 47219},
																		exprs: []interface{}{
																			&notExpr{
																				pos: position{line: 1194, col: 9, offset: 47219},
																				expr: &actionExpr{
																					pos: position{line: 1253, col: 14, offset: 49283},
																					run: (*parser).callonDocumentElement859,
																					expr: &seqExpr{
																						pos: position{line: 1253, col: 14, offset: 49283},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 1253, col: 14, offset: 49283},
																								expr: &notExpr{
																									pos: position{line: 1312, col: 8, offset: 50541},
																									expr: &anyMatcher{
																										line: 1312, col: 9, offset: 50542,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 1253, col: 19, offset: 49288},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonDocumentElement867,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&choiceExpr{
																								pos: position{line: 1314, col: 8, offset: 50552},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1310, col: 12, offset: 50512},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1310, col: 21, offset: 50521},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1312, col: 8, offset: 50541},
																										expr: &anyMatcher{
																											line: 1312, col: 9, offset: 50542,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 1195, col: 9, offset: 47239},
																				label: "otherLine",
																				expr: &actionExpr{
																					pos: position{line: 1195, col: 20, offset: 47250},
																					run: (*parser).callonDocumentElement875,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1195, col: 20, offset: 47250},
																						expr: &choiceExpr{
																							pos: position{line: 1195, col: 21, offset: 47251},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 1264, col: 14, offset: 49515},
																									run: (*parser).callonDocumentElement878,
																									expr: &oneOrMoreExpr{
																										pos: position{line: 1264, col: 14, offset: 49515},
																										expr: &charClassMatcher{
																											pos:        position{line: 1264, col: 14, offset: 49515},
																											val:        "[a-zA-Z0-9]",
																											ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																											ignoreCase: false,
																											inverted:   false,
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 1278, col: 11, offset: 49909},
																									run: (*parser).callonDocumentElement881,
																									expr: &oneOrMoreExpr{
																										pos: position{line: 1278, col: 11, offset: 49909},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonDocumentElement885,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 1195, col: 42, offset: 47272},
																									run: (*parser).callonDocumentElement887,
																									expr: &seqExpr{
																										pos: position{line: 1195, col: 43, offset: 47273},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 1195, col: 43, offset: 47273},
																												expr: &choiceExpr{
																													pos: position{line: 1314, col: 8, offset: 50552},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1310, col: 12, offset: 50512},
																															val:        "\r\n",
																															ignoreCase: false,
																														},
																														&charClassMatcher{
																															pos:        position{line: 1310, col: 21, offset: 50521},
																															val:        "[\\r\\n]",
																															chars:      []rune{'\r', '\n'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																														&notExpr{
																															pos: position{line: 1312, col: 8, offset: 50541},
																															expr: &anyMatcher{
																																line: 1312, col: 9, offset: 50542,
																															},
																														},
																													},
																												},
																											},
																											&anyMatcher{
																												line: 1195, col: 49, offset: 47279,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																			&choiceExpr{
																				pos: position{line: 1314, col: 8, offset: 50552},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1310, col: 12, offset: 50512},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 1310, col: 21, offset: 50521},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																					&notExpr{
																						pos: position{line: 1312, col: 8, offset: 50541},
																						expr: &anyMatcher{
																							line: 1312, col: 9, offset: 50542,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 1206, col: 39, offset: 47654},
										run: (*parser).callonDocumentElement901,
										expr: &seqExpr{
											pos: position{line: 1206, col: 39, offset: 47654},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 1179, col: 26, offset: 46634},
													val:        "....",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 1206, col: 61, offset: 47676},
													expr: &choiceExpr{
														pos: position{line: 1306, col: 7, offset: 50454},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1306, col: 7, offset: 50454},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1306, col: 13, offset: 50460},
																run: (*parser).callonDocumentElement907,
																expr: &litMatcher{
																	pos:        position{line: 1306, col: 13, offset: 50460},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1310, col: 12, offset: 50512},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1310, col: 12, offset: 50512},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1310, col: 21, offset: 50521},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 1206, col: 73, offset: 47688},
													label: "lines",
													expr: &actionExpr{
														pos: position{line: 1211, col: 44, offset: 47961},
														run: (*parser).callonDocumentElement913,
														expr: &labeledExpr{
															pos:   position{line: 1211, col: 44, offset: 47961},
															label: "lines",
															expr: &zeroOrMoreExpr{
																pos: position{line: 1211, col: 50, offset: 47967},
																expr: &actionExpr{
																	pos: position{line: 1216, col: 5, offset: 48107},
																	run: (*parser).callonDocumentElement916,
																	expr: &seqExpr{
																		pos: position{line: 1216, col: 5, offset: 48107},
																		exprs: []interface{}{
																			&labeledExpr{
																				pos:   position{line: 1216, col: 5, offset: 48107},
																				label: "line",
																				expr: &actionExpr{
																					pos: position{line: 1216, col: 11, offset: 48113},
																					run: (*parser).callonDocumentElement919,
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 1216, col: 11, offset: 48113},
																						expr: &choiceExpr{
																							pos: position{line: 1216, col: 12, offset: 48114},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 1264, col: 14, offset: 49515},
																									run: (*parser).callonDocumentElement922,
																									expr: &oneOrMoreExpr{
																										pos: position{line: 1264, col: 14, offset: 49515},
																										expr: &charClassMatcher{
																											pos:        position{line: 1264, col: 14, offset: 49515},
																											val:        "[a-zA-Z0-9]",
																											ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																											ignoreCase: false,
																											inverted:   false,
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 1278, col: 11, offset: 49909},
																									run: (*parser).callonDocumentElement925,
																									expr: &oneOrMoreExpr{
																										pos: position{line: 1278, col: 11, offset: 49909},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonDocumentElement929,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 1216, col: 33, offset: 48135},
																									run: (*parser).callonDocumentElement931,
																									expr: &seqExpr{
																										pos: position{line: 1216, col: 34, offset: 48136},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 1216, col: 34, offset: 48136},
																												expr: &litMatcher{
																													pos:        position{line: 1179, col: 26, offset: 46634},
																													val:        "....",
																													ignoreCase: false,
																												},
																											},
																											&notExpr{
																												pos: position{line: 1216, col: 57, offset: 48159},
																												expr: &choiceExpr{
																													pos: position{line: 1314, col: 8, offset: 50552},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1310, col: 12, offset: 50512},
																															val:        "\r\n",
																															ignoreCase: false,
																														},
																														&charClassMatcher{
																															pos:        position{line: 1310, col: 21, offset: 50521},
																															val:        "[\\r\\n]",
																															chars:      []rune{'\r', '\n'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																														&notExpr{
																															pos: position{line: 1312, col: 8, offset: 50541},
																															expr: &anyMatcher{
																																line: 1312, col: 9, offset: 50542,
																															},
																														},
																													},
																												},
																											},
																											&anyMatcher{
																												line: 1216, col: 62, offset: 48164,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																			&choiceExpr{
																				pos: position{line: 1314, col: 8, offset: 50552},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1310, col: 12, offset: 50512},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 1310, col: 21, offset: 50521},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																					&notExpr{
																						pos: position{line: 1312, col: 8, offset: 50541},
																						expr: &anyMatcher{
																							line: 1312, col: 9, offset: 50542,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1206, col: 122, offset: 47737},
													alternatives: []interface{}{
														&seqExpr{
															pos: position{line: 1206, col: 123, offset: 47738},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 1179, col: 26, offset: 46634},
																	val:        "....",
																	ignoreCase: false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 1206, col: 145, offset: 47760},
																	expr: &choiceExpr{
																		pos: position{line: 1306, col: 7, offset: 50454},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1306, col: 7, offset: 50454},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1306, col: 13, offset: 50460},
																				run: (*parser).callonDocumentElement953,
																				expr: &litMatcher{
																					pos:        position{line: 1306, col: 13, offset: 50460},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1314, col: 8, offset: 50552},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1310, col: 12, offset: 50512},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1310, col: 21, offset: 50521},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1312, col: 8, offset: 50541},
																			expr: &anyMatcher{
																				line: 1312, col: 9, offset: 50542,
																			},
																		},
																	},
																},
															},
														},
														&notExpr{
															pos: position{line: 1312, col: 8, offset: 50541},
															expr: &anyMatcher{
																line: 1312, col: 9, offset: 50542,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 1225, col: 34, offset: 48414},
										run: (*parser).callonDocumentElement962,
										expr: &seqExpr{
											pos: position{line: 1225, col: 34, offset: 48414},
											exprs: []interface{}{
												&labeledExpr{
													pos:   position{line: 1225, col: 34, offset: 48414},
													label: "attributes",
													expr: &seqExpr{
														pos: position{line: 1225, col: 46, offset: 48426},
														exprs: []interface{}{
															&actionExpr{
																pos: position{line: 1233, col: 21, offset: 48708},
																run: (*parser).callonDocumentElement966,
																expr: &seqExpr{
																	pos: position{line: 1233, col: 21, offset: 48708},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1233, col: 21, offset: 48708},
																			val:        "[literal]",
																			ignoreCase: false,
																		},
																		&zeroOrMoreExpr{
																			pos: position{line: 1233, col: 33, offset: 48720},
																			expr: &choiceExpr{
																				pos: position{line: 1306, col: 7, offset: 50454},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1306, col: 7, offset: 50454},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1306, col: 13, offset: 50460},
																						run: (*parser).callonDocumentElement972,
																						expr: &litMatcher{
																							pos:        position{line: 1306, col: 13, offset: 50460},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&choiceExpr{
																			pos: position{line: 1310, col: 12, offset: 50512},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1310, col: 12, offset: 50512},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1310, col: 21, offset: 50521},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																		},
																	},
																},
															},
															&zeroOrMoreExpr{
																pos: position{line: 1225, col: 63, offset: 48443},
																expr: &actionExpr{
																	pos: position{line: 164, col: 21, offset: 5763},
																	run: (*parser).callonDocumentElement978,
																	expr: &seqExpr{
																		pos: position{line: 164, col: 21, offset: 5763},
																		exprs: []interface{}{
																			&andExpr{
																				pos: position{line: 164, col: 21, offset: 5763},
																				expr: &charClassMatcher{
																					pos:        position{line: 164, col: 23, offset: 5765},
																					val:        "[[.#]",
																					chars:      []rune{'[', '.', '#'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																			},
																			&labeledExpr{
																				pos:   position{line: 165, col: 5, offset: 5853},
																				label: "attr",
																				expr: &choiceExpr{
																					pos: position{line: 165, col: 11, offset: 5859},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 174, col: 14, offset: 6316},
																							run: (*parser).callonDocumentElement984,
																							expr: &seqExpr{
																								pos: position{line: 174, col: 14, offset: 6316},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 174, col: 14, offset: 6316},
																										val:        "[[",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 174, col: 19, offset: 6321},
																										label: "id",
																										expr: &actionExpr{
																											pos: position{line: 1288, col: 7, offset: 50075},
																											run: (*parser).callonDocumentElement988,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 1288, col: 7, offset: 50075},
																												expr: &choiceExpr{
																													pos: position{line: 1288, col: 8, offset: 50076},
																													alternatives: []interface{}{
																														&actionExpr{
																															pos: position{line: 1264, col: 14, offset: 49515},
																															run: (*parser).callonDocumentElement991,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1264, col: 14, offset: 49515},
																																expr: &charClassMatcher{
																																	pos:        position{line: 1264, col: 14, offset: 49515},
																																	val:        "[a-zA-Z0-9]",
																																	ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 1288, col: 20, offset: 50088},
																															run: (*parser).callonDocumentElement994,
																															expr: &seqExpr{
																																pos: position{line: 1288, col: 21, offset: 50089},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 1288, col: 21, offset: 50089},
																																		expr: &choiceExpr{
																																			pos: position{line: 1310, col: 12, offset: 50512},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1310, col: 12, offset: 50512},
																																					val:        "\r\n",
																																					ignoreCase: false,
																																				},
																																				&charClassMatcher{
																																					pos:        position{line: 1310, col: 21, offset: 50521},
																																					val:        "[\\r\\n]",
																																					chars:      []rune{'\r', '\n'},
																																					ignoreCase: false,
																																					inverted:   false,
																																				},
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 1288, col: 30, offset: 50098},
																																		expr: &choiceExpr{
																																			pos: position{line: 1306, col: 7, offset: 50454},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1306, col: 7, offset: 50454},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 1306, col: 13, offset: 50460},
																																					run: (*parser).callonDocumentElement1003,
																																					expr: &litMatcher{
																																						pos:        position{line: 1306, col: 13, offset: 50460},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 1288, col: 34, offset: 50102},
																																		expr: &litMatcher{
																																			pos:        position{line: 1288, col: 35, offset: 50103},
																																			val:        "[",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 1288, col: 39, offset: 50107},
																																		expr: &litMatcher{
																																			pos:        position{line: 1288, col: 40, offset: 50108},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 1288, col: 44, offset: 50112},
																																		expr: &litMatcher{
																																			pos:        position{line: 1288, col: 45, offset: 50113},
																																			val:        "<<",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 1288, col: 50, offset: 50118},
																																		expr: &litMatcher{
																																			pos:        position{line: 1288, col: 51, offset: 50119},
																																			val:        ">>",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 1288, col: 56, offset: 50124},
																																		expr: &litMatcher{
																																			pos:        position{line: 1288, col: 57, offset: 50125},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 1288, col: 62, offset: 50130,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 174, col: 27, offset: 6329},
																										val:        "]]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 176, col: 5, offset: 6383},
																							run: (*parser).callonDocumentElement1017,
																							expr: &seqExpr{
																								pos: position{line: 176, col: 5, offset: 6383},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 176, col: 5, offset: 6383},
																										val:        "[#",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 176, col: 10, offset: 6388},
																										label: "id",
																										expr: &actionExpr{
																											pos: position{line: 1288, col: 7, offset: 50075},
																											run: (*parser).callonDocumentElement1021,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 1288, col: 7, offset: 50075},
																												expr: &choiceExpr{
																													pos: position{line: 1288, col: 8, offset: 50076},
																													alternatives: []interface{}{
																														&actionExpr{
																															pos: position{line: 1264, col: 14, offset: 49515},
																															run: (*parser).callonDocumentElement1024,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1264, col: 14, offset: 49515},
																																expr: &charClassMatcher{
																																	pos:        position{line: 1264, col: 14, offset: 49515},
																																	val:        "[a-zA-Z0-9]",
																																	ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 1288, col: 20, offset: 50088},
																															run: (*parser).callonDocumentElement1027,
																															expr: &seqExpr{
																																pos: position{line: 1288, col: 21, offset: 50089},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 1288, col: 21, offset: 50089},
																																		expr: &choiceExpr{
																																			pos: position{line: 1310, col: 12, offset: 50512},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1310, col: 12, offset: 50512},
																																					val:        "\r\n",
																																					ignoreCase: false,
																																				},
																																				&charClassMatcher{
																																					pos:        position{line: 1310, col: 21, offset: 50521},
																																					val:        "[\\r\\n]",
																																					chars:      []rune{'\r', '\n'},
																																					ignoreCase: false,
																																					inverted:   false,
																																				},
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 1288, col: 30, offset: 50098},
																																		expr: &choiceExpr{
																																			pos: position{line: 1306, col: 7, offset: 50454},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1306, col: 7, offset: 50454},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 1306, col: 13, offset: 50460},
																																					run: (*parser).callonDocumentElement1036,
																																					expr: &litMatcher{
																																						pos:        position{line: 1306, col: 13, offset: 50460},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 1288, col: 34, offset: 50102},
																																		expr: &litMatcher{
																																			pos:        position{line: 1288, col: 35, offset: 50103},
																																			val:        "[",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 1288, col: 39, offset: 50107},
																																		expr: &litMatcher{
																																			pos:        position{line: 1288, col: 40, offset: 50108},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 1288, col: 44, offset: 50112},
																																		expr: &litMatcher{
																																			pos:        position{line: 1288, col: 45, offset: 50113},
																																			val:        "<<",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 1288, col: 50, offset: 50118},
																																		expr: &litMatcher{
																																			pos:        position{line: 1288, col: 51, offset: 50119},
																																			val:        ">>",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 1288, col: 56, offset: 50124},
																																		expr: &litMatcher{
																																			pos:        position{line: 1288, col: 57, offset: 50125},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 1288, col: 62, offset: 50130,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 176, col: 18, offset: 6396},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 186, col: 17, offset: 6699},
																							run: (*parser).callonDocumentElement1050,
																							expr: &seqExpr{
																								pos: position{line: 186, col: 17, offset: 6699},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 186, col: 17, offset: 6699},
																										val:        ".",
																										ignoreCase: false,
																									},
																									&notExpr{
																										pos: position{line: 186, col: 21, offset: 6703},
																										expr: &litMatcher{
																											pos:        position{line: 186, col: 22, offset: 6704},
																											val:        ".",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 186, col: 26, offset: 6708},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonDocumentElement1058,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&labeledExpr{
																										pos:   position{line: 186, col: 30, offset: 6712},
																										label: "title",
																										expr: &actionExpr{
																											pos: position{line: 186, col: 37, offset: 6719},
																											run: (*parser).callonDocumentElement1061,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 186, col: 37, offset: 6719},
																												expr: &choiceExpr{
																													pos: position{line: 186, col: 38, offset: 6720},
																													alternatives: []interface{}{
																														&actionExpr{
																															pos: position{line: 1264, col: 14, offset: 49515},
																															run: (*parser).callonDocumentElement1064,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1264, col: 14, offset: 49515},
																																expr: &charClassMatcher{
																																	pos:        position{line: 1264, col: 14, offset: 49515},
																																	val:        "[a-zA-Z0-9]",
																																	ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 1278, col: 11, offset: 49909},
																															run: (*parser).callonDocumentElement1067,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1278, col: 11, offset: 49909},
																																expr: &choiceExpr{
																																	pos: position{line: 1306, col: 7, offset: 50454},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1306, col: 7, offset: 50454},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 1306, col: 13, offset: 50460},
																																			run: (*parser).callonDocumentElement1071,
																																			expr: &litMatcher{
																																				pos:        position{line: 1306, col: 13, offset: 50460},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 186, col: 59, offset: 6741},
																															run: (*parser).callonDocumentElement1073,
																															expr: &seqExpr{
																																pos: position{line: 186, col: 60, offset: 6742},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 186, col: 60, offset: 6742},
																																		expr: &choiceExpr{
																																			pos: position{line: 1310, col: 12, offset: 50512},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1310, col: 12, offset: 50512},
																																					val:        "\r\n",
																																					ignoreCase: false,
																																				},
																																				&charClassMatcher{
																																					pos:        position{line: 1310, col: 21, offset: 50521},
																																					val:        "[\\r\\n]",
																																					chars:      []rune{'\r', '\n'},
																																					ignoreCase: false,
																																					inverted:   false,
																																				},
																																			},
																																		},
																																	},
																																	&anyMatcher{
																																		line: 186, col: 70, offset: 6752,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 196, col: 16, offset: 6990},
																							run: (*parser).callonDocumentElement1080,
																							expr: &seqExpr{
																								pos: position{line: 196, col: 16, offset: 6990},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 196, col: 16, offset: 6990},
																										val:        "[.",
																										ignoreCase: false,
																									},
																									&notExpr{
																										pos: position{line: 196, col: 21, offset: 6995},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonDocumentElement1086,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&labeledExpr{
																										pos:   position{line: 196, col: 25, offset: 6999},
																										label: "role",
																										expr: &actionExpr{
																											pos: position{line: 196, col: 31, offset: 7005},
																											run: (*parser).callonDocumentElement1089,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 196, col: 31, offset: 7005},
																												expr: &choiceExpr{
																													pos: position{line: 196, col: 32, offset: 7006},
																													alternatives: []interface{}{
																														&actionExpr{
																															pos: position{line: 1264, col: 14, offset: 49515},
																															run: (*parser).callonDocumentElement1092,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1264, col: 14, offset: 49515},
																																expr: &charClassMatcher{
																																	pos:        position{line: 1264, col: 14, offset: 49515},
																																	val:        "[a-zA-Z0-9]",
																																	ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 1278, col: 11, offset: 49909},
																															run: (*parser).callonDocumentElement1095,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1278, col: 11, offset: 49909},
																																expr: &choiceExpr{
																																	pos: position{line: 1306, col: 7, offset: 50454},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1306, col: 7, offset: 50454},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 1306, col: 13, offset: 50460},
																																			run: (*parser).callonDocumentElement1099,
																																			expr: &litMatcher{
																																				pos:        position{line: 1306, col: 13, offset: 50460},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 196, col: 53, offset: 7027},
																															run: (*parser).callonDocumentElement1101,
																															expr: &seqExpr{
																																pos: position{line: 196, col: 54, offset: 7028},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 196, col: 54, offset: 7028},
																																		expr: &choiceExpr{
																																			pos: position{line: 1310, col: 12, offset: 50512},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1310, col: 12, offset: 50512},
																																					val:        "\r\n",
																																					ignoreCase: false,
																																				},
																																				&charClassMatcher{
																																					pos:        position{line: 1310, col: 21, offset: 50521},
																																					val:        "[\\r\\n]",
																																					chars:      []rune{'\r', '\n'},
																																					ignoreCase: false,
																																					inverted:   false,
																																				},
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 196, col: 63, offset: 7037},
																																		expr: &litMatcher{
																																			pos:        position{line: 196, col: 64, offset: 7038},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 196, col: 69, offset: 7043,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 200, col: 4, offset: 7118},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 210, col: 21, offset: 7481},
																							run: (*parser).callonDocumentElement1111,
																							expr: &litMatcher{
																								pos:        position{line: 210, col: 21, offset: 7481},
																								val:        "[source]",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 212, col: 5, offset: 7539},
																							run: (*parser).callonDocumentElement1113,
																							expr: &seqExpr{
																								pos: position{line: 212, col: 5, offset: 7539},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 212, col: 5, offset: 7539},
																										val:        "[source,",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 212, col: 16, offset: 7550},
																										label: "language",
																										expr: &actionExpr{
																											pos: position{line: 212, col: 26, offset: 7560},
																											run: (*parser).callonDocumentElement1117,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 212, col: 26, offset: 7560},
																												expr: &choiceExpr{
																													pos: position{line: 212, col: 27, offset: 7561},
																													alternatives: []interface{}{
																														&actionExpr{
																															pos: position{line: 1264, col: 14, offset: 49515},
																															run: (*parser).callonDocumentElement1120,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1264, col: 14, offset: 49515},
																																expr: &charClassMatcher{
																																	pos:        position{line: 1264, col: 14, offset: 49515},
																																	val:        "[a-zA-Z0-9]",
																																	ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 1278, col: 11, offset: 49909},
																															run: (*parser).callonDocumentElement1123,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1278, col: 11, offset: 49909},
																																expr: &choiceExpr{
																																	pos: position{line: 1306, col: 7, offset: 50454},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1306, col: 7, offset: 50454},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 1306, col: 13, offset: 50460},
																																			run: (*parser).callonDocumentElement1127,
																																			expr: &litMatcher{
																																				pos:        position{line: 1306, col: 13, offset: 50460},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 212, col: 48, offset: 7582},
																															run: (*parser).callonDocumentElement1129,
																															expr: &seqExpr{
																																pos: position{line: 212, col: 49, offset: 7583},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 212, col: 49, offset: 7583},
																																		expr: &choiceExpr{
																																			pos: position{line: 1310, col: 12, offset: 50512},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1310, col: 12, offset: 50512},
																																					val:        "\r\n",
																																					ignoreCase: false,
																																				},
																																				&charClassMatcher{
																																					pos:        position{line: 1310, col: 21, offset: 50521},
																																					val:        "[\\r\\n]",
																																					chars:      []rune{'\r', '\n'},
																																					ignoreCase: false,
																																					inverted:   false,
																																				},
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 212, col: 58, offset: 7592},
																																		expr: &litMatcher{
																																			pos:        position{line: 212, col: 59, offset: 7593},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 212, col: 64, offset: 7598,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 216, col: 7, offset: 7688},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 247, col: 20, offset: 8646},
																							run: (*parser).callonDocumentElement1139,
																							expr: &seqExpr{
																								pos: position{line: 247, col: 20, offset: 8646},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 247, col: 20, offset: 8646},
																										val:        "[",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 247, col: 24, offset: 8650},
																										label: "kind",
																										expr: &actionExpr{
																											pos: position{line: 259, col: 14, offset: 9116},
																											run: (*parser).callonDocumentElement1143,
																											expr: &litMatcher{
																												pos:        position{line: 259, col: 14, offset: 9116},
																												val:        "quote",
																												ignoreCase: false,
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 247, col: 41, offset: 8667},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonDocumentElement1148,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 247, col: 45, offset: 8671},
																										val:        ",",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 247, col: 49, offset: 8675},
																										label: "author",
																										expr: &actionExpr{
																											pos: position{line: 286, col: 16, offset: 9839},
																											run: (*parser).callonDocumentElement1152,
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 286, col: 16, offset: 9839},
																												expr: &choiceExpr{
																													pos: position{line: 286, col: 17, offset: 9840},
																													alternatives: []interface{}{
																														&actionExpr{
																															pos: position{line: 1264, col: 14, offset: 49515},
																															run: (*parser).callonDocumentElement1155,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1264, col: 14, offset: 49515},
																																expr: &charClassMatcher{
																																	pos:        position{line: 1264, col: 14, offset: 49515},
																																	val:        "[a-zA-Z0-9]",
																																	ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 1278, col: 11, offset: 49909},
																															run: (*parser).callonDocumentElement1158,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1278, col: 11, offset: 49909},
																																expr: &choiceExpr{
																																	pos: position{line: 1306, col: 7, offset: 50454},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1306, col: 7, offset: 50454},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 1306, col: 13, offset: 50460},
																																			run: (*parser).callonDocumentElement1162,
																																			expr: &litMatcher{
																																				pos:        position{line: 1306, col: 13, offset: 50460},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 286, col: 38, offset: 9861},
																															run: (*parser).callonDocumentElement1164,
																															expr: &seqExpr{
																																pos: position{line: 286, col: 39, offset: 9862},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 286, col: 39, offset: 9862},
																																		expr: &choiceExpr{
																																			pos: position{line: 1314, col: 8, offset: 50552},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1310, col: 12, offset: 50512},
																																					val:        "\r\n",
																																					ignoreCase: false,
																																				},
																																				&charClassMatcher{
																																					pos:        position{line: 1310, col: 21, offset: 50521},
																																					val:        "[\\r\\n]",
																																					chars:      []rune{'\r', '\n'},
																																					ignoreCase: false,
																																					inverted:   false,
																																				},
																																				&notExpr{
																																					pos: position{line: 1312, col: 8, offset: 50541},
																																					expr: &anyMatcher{
																																						line: 1312, col: 9, offset: 50542,
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 286, col: 44, offset: 9867},
																																		expr: &litMatcher{
																																			pos:        position{line: 286, col: 45, offset: 9868},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 286, col: 49, offset: 9872},
																																		expr: &litMatcher{
																																			pos:        position{line: 286, col: 50, offset: 9873},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 286, col: 55, offset: 9878,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 247, col: 70, offset: 8696},
																										val:        ",",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 247, col: 74, offset: 8700},
																										label: "title",
																										expr: &actionExpr{
																											pos: position{line: 292, col: 15, offset: 9967},
																											run: (*parser).callonDocumentElement1179,
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 292, col: 15, offset: 9967},
																												expr: &choiceExpr{
																													pos: position{line: 292, col: 16, offset: 9968},
																													alternatives: []interface{}{
																														&actionExpr{
																															pos: position{line: 1264, col: 14, offset: 49515},
																															run: (*parser).callonDocumentElement1182,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1264, col: 14, offset: 49515},
																																expr: &charClassMatcher{
																																	pos:        position{line: 1264, col: 14, offset: 49515},
																																	val:        "[a-zA-Z0-9]",
																																	ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 1278, col: 11, offset: 49909},
																															run: (*parser).callonDocumentElement1185,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1278, col: 11, offset: 49909},
																																expr: &choiceExpr{
																																	pos: position{line: 1306, col: 7, offset: 50454},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1306, col: 7, offset: 50454},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 1306, col: 13, offset: 50460},
																																			run: (*parser).callonDocumentElement1189,
																																			expr: &litMatcher{
																																				pos:        position{line: 1306, col: 13, offset: 50460},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&seqExpr{
																															pos: position{line: 292, col: 38, offset: 9990},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 292, col: 38, offset: 9990},
																																	expr: &choiceExpr{
																																		pos: position{line: 1314, col: 8, offset: 50552},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1310, col: 12, offset: 50512},
																																				val:        "\r\n",
																																				ignoreCase: false,
																																			},
																																			&charClassMatcher{
																																				pos:        position{line: 1310, col: 21, offset: 50521},
																																				val:        "[\\r\\n]",
																																				chars:      []rune{'\r', '\n'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																			&notExpr{
																																				pos: position{line: 1312, col: 8, offset: 50541},
																																				expr: &anyMatcher{
																																					line: 1312, col: 9, offset: 50542,
																																				},
																																			},
																																		},
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 292, col: 43, offset: 9995},
																																	expr: &litMatcher{
																																		pos:        position{line: 292, col: 44, offset: 9996},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 292, col: 48, offset: 10000},
																																	expr: &litMatcher{
																																		pos:        position{line: 292, col: 49, offset: 10001},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 292, col: 54, offset: 10006,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 247, col: 93, offset: 8719},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 251, col: 1, offset: 8846},
																							run: (*parser).callonDocumentElement1204,
																							expr: &seqExpr{
																								pos: position{line: 251, col: 1, offset: 8846},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 251, col: 1, offset: 8846},
																										val:        "[",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 251, col: 5, offset: 8850},
																										label: "kind",
																										expr: &actionExpr{
																											pos: position{line: 259, col: 14, offset: 9116},
																											run: (*parser).callonDocumentElement1208,
																											expr: &litMatcher{
																												pos:        position{line: 259, col: 14, offset: 9116},
																												val:        "quote",
																												ignoreCase: false,
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 251, col: 22, offset: 8867},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonDocumentElement1213,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 251, col: 26, offset: 8871},
																										val:        ",",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 251, col: 30, offset: 8875},
																										label: "author",
																										expr: &actionExpr{
																											pos: position{line: 286, col: 16, offset: 9839},
																											run: (*parser).callonDocumentElement1217,
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 286, col: 16, offset: 9839},
																												expr: &choiceExpr{
																													pos: position{line: 286, col: 17, offset: 9840},
																													alternatives: []interface{}{
																														&actionExpr{
																															pos: position{line: 1264, col: 14, offset: 49515},
																															run: (*parser).callonDocumentElement1220,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1264, col: 14, offset: 49515},
																																expr: &charClassMatcher{
																																	pos:        position{line: 1264, col: 14, offset: 49515},
																																	val:        "[a-zA-Z0-9]",
																																	ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 1278, col: 11, offset: 49909},
																															run: (*parser).callonDocumentElement1223,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1278, col: 11, offset: 49909},
																																expr: &choiceExpr{
																																	pos: position{line: 1306, col: 7, offset: 50454},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1306, col: 7, offset: 50454},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 1306, col: 13, offset: 50460},
																																			run: (*parser).callonDocumentElement1227,
																																			expr: &litMatcher{
																																				pos:        position{line: 1306, col: 13, offset: 50460},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 286, col: 38, offset: 9861},
																															run: (*parser).callonDocumentElement1229,
																															expr: &seqExpr{
																																pos: position{line: 286, col: 39, offset: 9862},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 286, col: 39, offset: 9862},
																																		expr: &choiceExpr{
																																			pos: position{line: 1314, col: 8, offset: 50552},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1310, col: 12, offset: 50512},
																																					val:        "\r\n",
																																					ignoreCase: false,
																																				},
																																				&charClassMatcher{
																																					pos:        position{line: 1310, col: 21, offset: 50521},
																																					val:        "[\\r\\n]",
																																					chars:      []rune{'\r', '\n'},
																																					ignoreCase: false,
																																					inverted:   false,
																																				},
																																				&notExpr{
																																					pos: position{line: 1312, col: 8, offset: 50541},
																																					expr: &anyMatcher{
																																						line: 1312, col: 9, offset: 50542,
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 286, col: 44, offset: 9867},
																																		expr: &litMatcher{
																																			pos:        position{line: 286, col: 45, offset: 9868},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 286, col: 49, offset: 9872},
																																		expr: &litMatcher{
																																			pos:        position{line: 286, col: 50, offset: 9873},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 286, col: 55, offset: 9878,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 251, col: 51, offset: 8896},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 255, col: 1, offset: 9011},
																							run: (*parser).callonDocumentElement1243,
																							expr: &seqExpr{
																								pos: position{line: 255, col: 1, offset: 9011},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 255, col: 1, offset: 9011},
																										val:        "[",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 255, col: 5, offset: 9015},
																										label: "kind",
																										expr: &actionExpr{
																											pos: position{line: 259, col: 14, offset: 9116},
																											run: (*parser).callonDocumentElement1247,
																											expr: &litMatcher{
																												pos:        position{line: 259, col: 14, offset: 9116},
																												val:        "quote",
																												ignoreCase: false,
																											},
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 255, col: 22, offset: 9032},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonDocumentElement1252,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 255, col: 26, offset: 9036},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 263, col: 20, offset: 9179},
																							run: (*parser).callonDocumentElement1255,
																							expr: &seqExpr{
																								pos: position{line: 263, col: 20, offset: 9179},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 263, col: 20, offset: 9179},
																										label: "attribute",
																										expr: &choiceExpr{
																											pos: position{line: 263, col: 31, offset: 9190},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 263, col: 31, offset: 9190},
																													run: (*parser).callonDocumentElement1259,
																													expr: &seqExpr{
																														pos: position{line: 263, col: 31, offset: 9190},
																														exprs: []interface{}{
																															&litMatcher{
																																pos:        position{line: 263, col: 31, offset: 9190},
																																val:        "[",
																																ignoreCase: false,
																															},
																															&labeledExpr{
																																pos:   position{line: 263, col: 35, offset: 9194},
																																label: "kind",
																																expr: &actionExpr{
																																	pos: position{line: 282, col: 14, offset: 9780},
																																	run: (*parser).callonDocumentElement1263,
																																	expr: &litMatcher{
																																		pos:        position{line: 282, col: 14, offset: 9780},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&zeroOrMoreExpr{
																																pos: position{line: 263, col: 52, offset: 9211},
																																expr: &choiceExpr{
																																	pos: position{line: 1306, col: 7, offset: 50454},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1306, col: 7, offset: 50454},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 1306, col: 13, offset: 50460},
																																			run: (*parser).callonDocumentElement1268,
																																			expr: &litMatcher{
																																				pos:        position{line: 1306, col: 13, offset: 50460},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																															&litMatcher{
																																pos:        position{line: 263, col: 56, offset: 9215},
																																val:        ",",
																																ignoreCase: false,
																															},
																															&labeledExpr{
																																pos:   position{line: 263, col: 60, offset: 9219},
																																label: "author",
																																expr: &actionExpr{
																																	pos: position{line: 286, col: 16, offset: 9839},
																																	run: (*parser).callonDocumentElement1272,
																																	expr: &zeroOrMoreExpr{
																																		pos: position{line: 286, col: 16, offset: 9839},
																																		expr: &choiceExpr{
																																			pos: position{line: 286, col: 17, offset: 9840},
																																			alternatives: []interface{}{
																																				&actionExpr{
																																					pos: position{line: 1264, col: 14, offset: 49515},
																																					run: (*parser).callonDocumentElement1275,
																																					expr: &oneOrMoreExpr{
																																						pos: position{line: 1264, col: 14, offset: 49515},
																																						expr: &charClassMatcher{
																																							pos:        position{line: 1264, col: 14, offset: 49515},
																																							val:        "[a-zA-Z0-9]",
																																							ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																							ignoreCase: false,
																																							inverted:   false,
																																						},
																																					},
																																				},
																																				&actionExpr{
																																					pos: position{line: 1278, col: 11, offset: 49909},
																																					run: (*parser).callonDocumentElement1278,
																																					expr: &oneOrMoreExpr{
																																						pos: position{line: 1278, col: 11, offset: 49909},
																																						expr: &choiceExpr{
																																							pos: position{line: 1306, col: 7, offset: 50454},
																																							alternatives: []interface{}{
																																								&litMatcher{
																																									pos:        position{line: 1306, col: 7, offset: 50454},
																																									val:        " ",
																																									ignoreCase: false,
																																								},
																																								&actionExpr{
																																									pos: position{line: 1306, col: 13, offset: 50460},
																																									run: (*parser).callonDocumentElement1282,
																																									expr: &litMatcher{
																																										pos:        position{line: 1306, col: 13, offset: 50460},
																																										val:        "\t",
																																										ignoreCase: false,
																																									},
																																								},
																																							},
																																						},
																																					},
																																				},
																																				&actionExpr{
																																					pos: position{line: 286, col: 38, offset: 9861},
																																					run: (*parser).callonDocumentElement1284,
																																					expr: &seqExpr{
																																						pos: position{line: 286, col: 39, offset: 9862},
																																						exprs: []interface{}{
																																							&notExpr{
																																								pos: position{line: 286, col: 39, offset: 9862},
																																								expr: &choiceExpr{
																																									pos: position{line: 1314, col: 8, offset: 50552},
																																									alternatives: []interface{}{
																																										&litMatcher{
																																											pos:        position{line: 1310, col: 12, offset: 50512},
																																											val:        "\r\n",
																																											ignoreCase: false,
																																										},
																																										&charClassMatcher{
																																											pos:        position{line: 1310, col: 21, offset: 50521},
																																											val:        "[\\r\\n]",
																																											chars:      []rune{'\r', '\n'},
																																											ignoreCase: false,
																																											inverted:   false,
																																										},
																																										&notExpr{
																																											pos: position{line: 1312, col: 8, offset: 50541},
																																											expr: &anyMatcher{
																																												line: 1312, col: 9, offset: 50542,
																																											},
																																										},
																																									},
																																								},
																																							},
																																							&notExpr{
																																								pos: position{line: 286, col: 44, offset: 9867},
																																								expr: &litMatcher{
																																									pos:        position{line: 286, col: 45, offset: 9868},
																																									val:        ",",
																																									ignoreCase: false,
																																								},
																																							},
																																							&notExpr{
																																								pos: position{line: 286, col: 49, offset: 9872},
																																								expr: &litMatcher{
																																									pos:        position{line: 286, col: 50, offset: 9873},
																																									val:        "]",
																																									ignoreCase: false,
																																								},
																																							},
																																							&anyMatcher{
																																								line: 286, col: 55, offset: 9878,
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&litMatcher{
																																pos:        position{line: 263, col: 81, offset: 9240},
																																val:        ",",
																																ignoreCase: false,
																															},
																															&labeledExpr{
																																pos:   position{line: 263, col: 85, offset: 9244},
																																label: "title",
																																expr: &actionExpr{
																																	pos: position{line: 292, col: 15, offset: 9967},
																																	run: (*parser).callonDocumentElement1299,
																																	expr: &zeroOrMoreExpr{
																																		pos: position{line: 292, col: 15, offset: 9967},
																																		expr: &choiceExpr{
																																			pos: position{line: 292, col: 16, offset: 9968},
																																			alternatives: []interface{}{
																																				&actionExpr{
																																					pos: position{line: 1264, col: 14, offset: 49515},
																																					run: (*parser).callonDocumentElement1302,
																																					expr: &oneOrMoreExpr{
																																						pos: position{line: 1264, col: 14, offset: 49515},
																																						expr: &charClassMatcher{
																																							pos:        position{line: 1264, col: 14, offset: 49515},
																																							val:        "[a-zA-Z0-9]",
																																							ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																							ignoreCase: false,
																																							inverted:   false,
																																						},
																																					},
																																				},
																																				&actionExpr{
																																					pos: position{line: 1278, col: 11, offset: 49909},
																																					run: (*parser).callonDocumentElement1305,
																																					expr: &oneOrMoreExpr{
																																						pos: position{line: 1278, col: 11, offset: 49909},
																																						expr: &choiceExpr{
																																							pos: position{line: 1306, col: 7, offset: 50454},
																																							alternatives: []interface{}{
																																								&litMatcher{
																																									pos:        position{line: 1306, col: 7, offset: 50454},
																																									val:        " ",
																																									ignoreCase: false,
																																								},
																																								&actionExpr{
																																									pos: position{line: 1306, col: 13, offset: 50460},
																																									run: (*parser).callonDocumentElement1309,
																																									expr: &litMatcher{
																																										pos:        position{line: 1306, col: 13, offset: 50460},
																																										val:        "\t",
																																										ignoreCase: false,
																																									},
																																								},
																																							},
																																						},
																																					},
																																				},
																																				&seqExpr{
																																					pos: position{line: 292, col: 38, offset: 9990},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 292, col: 38, offset: 9990},
																																							expr: &choiceExpr{
																																								pos: position{line: 1314, col: 8, offset: 50552},
																																								alternatives: []interface{}{
																																									&litMatcher{
																																										pos:        position{line: 1310, col: 12, offset: 50512},
																																										val:        "\r\n",
																																										ignoreCase: false,
																																									},
																																									&charClassMatcher{
																																										pos:        position{line: 1310, col: 21, offset: 50521},
																																										val:        "[\\r\\n]",
																																										chars:      []rune{'\r', '\n'},
																																										ignoreCase: false,
																																										inverted:   false,
																																									},
																																									&notExpr{
																																										pos: position{line: 1312, col: 8, offset: 50541},
																																										expr: &anyMatcher{
																																											line: 1312, col: 9, offset: 50542,
																																										},
																																									},
																																								},
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 292, col: 43, offset: 9995},
																																							expr: &litMatcher{
																																								pos:        position{line: 292, col: 44, offset: 9996},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 292, col: 48, offset: 10000},
																																							expr: &litMatcher{
																																								pos:        position{line: 292, col: 49, offset: 10001},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 292, col: 54, offset: 10006,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&litMatcher{
																																pos:        position{line: 263, col: 104, offset: 9263},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 267, col: 5, offset: 9406},
																													run: (*parser).callonDocumentElement1324,
																													expr: &seqExpr{
																														pos: position{line: 267, col: 5, offset: 9406},
																														exprs: []interface{}{
																															&litMatcher{
																																pos:        position{line: 267, col: 5, offset: 9406},
																																val:        "[",
																																ignoreCase: false,
																															},
																															&labeledExpr{
																																pos:   position{line: 267, col: 9, offset: 9410},
																																label: "kind",
																																expr: &actionExpr{
																																	pos: position{line: 282, col: 14, offset: 9780},
																																	run: (*parser).callonDocumentElement1328,
																																	expr: &litMatcher{
																																		pos:        position{line: 282, col: 14, offset: 9780},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&zeroOrMoreExpr{
																																pos: position{line: 267, col: 26, offset: 9427},
																																expr: &choiceExpr{
																																	pos: position{line: 1306, col: 7, offset: 50454},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1306, col: 7, offset: 50454},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 1306, col: 13, offset: 50460},
																																			run: (*parser).callonDocumentElement1333,
																																			expr: &litMatcher{
																																				pos:        position{line: 1306, col: 13, offset: 50460},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																															&litMatcher{
																																pos:        position{line: 267, col: 30, offset: 9431},
																																val:        ",",
																																ignoreCase: false,
																															},
																															&labeledExpr{
																																pos:   position{line: 267, col: 34, offset: 9435},
																																label: "author",
																																expr: &actionExpr{
																																	pos: position{line: 286, col: 16, offset: 9839},
																																	run: (*parser).callonDocumentElement1337,
																																	expr: &zeroOrMoreExpr{
																																		pos: position{line: 286, col: 16, offset: 9839},
																																		expr: &choiceExpr{
																																			pos: position{line: 286, col: 17, offset: 9840},
																																			alternatives: []interface{}{
																																				&actionExpr{
																																					pos: position{line: 1264, col: 14, offset: 49515},
																																					run: (*parser).callonDocumentElement1340,
																																					expr: &oneOrMoreExpr{
																																						pos: position{line: 1264, col: 14, offset: 49515},
																																						expr: &charClassMatcher{
																																							pos:        position{line: 1264, col: 14, offset: 49515},
																																							val:        "[a-zA-Z0-9]",
																																							ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																							ignoreCase: false,
																																							inverted:   false,
																																						},
																																					},
																																				},
																																				&actionExpr{
																																					pos: position{line: 1278, col: 11, offset: 49909},
																																					run: (*parser).callonDocumentElement1343,
																																					expr: &oneOrMoreExpr{
																																						pos: position{line: 1278, col: 11, offset: 49909},
																																						expr: &choiceExpr{
																																							pos: position{line: 1306, col: 7, offset: 50454},
																																							alternatives: []interface{}{
																																								&litMatcher{
																																									pos:        position{line: 1306, col: 7, offset: 50454},
																																									val:        " ",
																																									ignoreCase: false,
																																								},
																																								&actionExpr{
																																									pos: position{line: 1306, col: 13, offset: 50460},
																																									run: (*parser).callonDocumentElement1347,
																																									expr: &litMatcher{
																																										pos:        position{line: 1306, col: 13, offset: 50460},
																																										val:        "\t",
																																										ignoreCase: false,
																																									},
																																								},
																																							},
																																						},
																																					},
																																				},
																																				&actionExpr{
																																					pos: position{line: 286, col: 38, offset: 9861},
																																					run: (*parser).callonDocumentElement1349,
																																					expr: &seqExpr{
																																						pos: position{line: 286, col: 39, offset: 9862},
																																						exprs: []interface{}{
																																							&notExpr{
																																								pos: position{line: 286, col: 39, offset: 9862},
																																								expr: &choiceExpr{
																																									pos: position{line: 1314, col: 8, offset: 50552},
																																									alternatives: []interface{}{
																																										&litMatcher{
																																											pos:        position{line: 1310, col: 12, offset: 50512},
																																											val:        "\r\n",
																																											ignoreCase: false,
																																										},
																																										&charClassMatcher{
																																											pos:        position{line: 1310, col: 21, offset: 50521},
																																											val:        "[\\r\\n]",
																																											chars:      []rune{'\r', '\n'},
																																											ignoreCase: false,
																																											inverted:   false,
																																										},
																																										&notExpr{
																																											pos: position{line: 1312, col: 8, offset: 50541},
																																											expr: &anyMatcher{
																																												line: 1312, col: 9, offset: 50542,
																																											},
																																										},
																																									},
																																								},
																																							},
																																							&notExpr{
																																								pos: position{line: 286, col: 44, offset: 9867},
																																								expr: &litMatcher{
																																									pos:        position{line: 286, col: 45, offset: 9868},
																																									val:        ",",
																																									ignoreCase: false,
																																								},
																																							},
																																							&notExpr{
																																								pos: position{line: 286, col: 49, offset: 9872},
																																								expr: &litMatcher{
																																									pos:        position{line: 286, col: 50, offset: 9873},
																																									val:        "]",
																																									ignoreCase: false,
																																								},
																																							},
																																							&anyMatcher{
																																								line: 286, col: 55, offset: 9878,
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&litMatcher{
																																pos:        position{line: 267, col: 55, offset: 9456},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 271, col: 5, offset: 9587},
																													run: (*parser).callonDocumentElement1363,
																													expr: &seqExpr{
																														pos: position{line: 271, col: 5, offset: 9587},
																														exprs: []interface{}{
																															&litMatcher{
																																pos:        position{line: 271, col: 5, offset: 9587},
																																val:        "[",
																																ignoreCase: false,
																															},
																															&labeledExpr{
																																pos:   position{line: 271, col: 9, offset: 9591},
																																label: "kind",
																																expr: &actionExpr{
																																	pos: position{line: 282, col: 14, offset: 9780},
																																	run: (*parser).callonDocumentElement1367,
																																	expr: &litMatcher{
																																		pos:        position{line: 282, col: 14, offset: 9780},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&zeroOrMoreExpr{
																																pos: position{line: 271, col: 26, offset: 9608},
																																expr: &choiceExpr{
																																	pos: position{line: 1306, col: 7, offset: 50454},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1306, col: 7, offset: 50454},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 1306, col: 13, offset: 50460},
																																			run: (*parser).callonDocumentElement1372,
																																			expr: &litMatcher{
																																				pos:        position{line: 1306, col: 13, offset: 50460},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																															&litMatcher{
																																pos:        position{line: 271, col: 30, offset: 9612},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&stateCodeExpr{
																										pos: position{line: 275, col: 1, offset: 9688},
																										run: (*parser).callonDocumentElement1375,
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 205, col: 30, offset: 7283},
																							run: (*parser).callonDocumentElement1376,
																							expr: &seqExpr{
																								pos: position{line: 205, col: 30, offset: 7283},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 205, col: 30, offset: 7283},
																										val:        "[",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 205, col: 34, offset: 7287},
																										label: "k",
																										expr: &choiceExpr{
																											pos: position{line: 598, col: 19, offset: 22218},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 598, col: 19, offset: 22218},
																													run: (*parser).callonDocumentElement1381,
																													expr: &litMatcher{
																														pos:        position{line: 598, col: 19, offset: 22218},
																														val:        "TIP",
																														ignoreCase: false,
																													},
																												},
																												&actionExpr{
																													pos: position{line: 600, col: 9, offset: 22264},
																													run: (*parser).callonDocumentElement1383,
																													expr: &litMatcher{
																														pos:        position{line: 600, col: 9, offset: 22264},
																														val:        "NOTE",
																														ignoreCase: false,
																													},
																												},
																												&actionExpr{
																													pos: position{line: 602, col: 9, offset: 22312},
																													run: (*parser).callonDocumentElement1385,
																													expr: &litMatcher{
																														pos:        position{line: 602, col: 9, offset: 22312},
																														val:        "IMPORTANT",
																														ignoreCase: false,
																													},
																												},
																												&actionExpr{
																													pos: position{line: 604, col: 9, offset: 22370},
																													run: (*parser).callonDocumentElement1387,
																													expr: &litMatcher{
																														pos:        position{line: 604, col: 9, offset: 22370},
																														val:        "WARNING",
																														ignoreCase: false,
																													},
																												},
																												&actionExpr{
																													pos: position{line: 606, col: 9, offset: 22424},
																													run: (*parser).callonDocumentElement1389,
																													expr: &litMatcher{
																														pos:        position{line: 606, col: 9, offset: 22424},
																														val:        "CAUTION",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 205, col: 53, offset: 7306},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 243, col: 21, offset: 8543},
																							run: (*parser).callonDocumentElement1392,
																							expr: &litMatcher{
																								pos:        position{line: 243, col: 21, offset: 8543},
																								val:        "[horizontal]",
																								ignoreCase: false,
																							},
																						},
																						&actionExpr{
																							pos: position{line: 221, col: 19, offset: 7839},
																							run: (*parser).callonDocumentElement1394,
																							expr: &seqExpr{
																								pos: position{line: 221, col: 19, offset: 7839},
																								exprs: []interface{}{
																									&litMatcher{
																										pos:        position{line: 221, col: 19, offset: 7839},
																										val:        "[",
																										ignoreCase: false,
																									},
																									&notExpr{
																										pos: position{line: 221, col: 23, offset: 7843},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonDocumentElement1400,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&labeledExpr{
																										pos:   position{line: 221, col: 27, offset: 7847},
																										label: "attributes",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 221, col: 38, offset: 7858},
																											expr: &choiceExpr{
																												pos: position{line: 225, col: 21, offset: 7971},
																												alternatives: []interface{}{
																													&actionExpr{
																														pos: position{line: 225, col: 21, offset: 7971},
																														run: (*parser).callonDocumentElement1405,
																														expr: &seqExpr{
																															pos: position{line: 225, col: 21, offset: 7971},
																															exprs: []interface{}{
																																&labeledExpr{
																																	pos:   position{line: 225, col: 21, offset: 7971},
																																	label: "key",
																																	expr: &actionExpr{
																																		pos: position{line: 231, col: 17, offset: 8231},
																																		run: (*parser).callonDocumentElement1408,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 17, offset: 8231},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 17, offset: 8231},
																																					expr: &actionExpr{
																																						pos: position{line: 259, col: 14, offset: 9116},
																																						run: (*parser).callonDocumentElement1411,
																																						expr: &litMatcher{
																																							pos:        position{line: 259, col: 14, offset: 9116},
																																							val:        "quote",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 28, offset: 8242},
																																					expr: &actionExpr{
																																						pos: position{line: 282, col: 14, offset: 9780},
																																						run: (*parser).callonDocumentElement1414,
																																						expr: &litMatcher{
																																							pos:        position{line: 282, col: 14, offset: 9780},
																																							val:        "verse",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 39, offset: 8253},
																																					expr: &actionExpr{
																																						pos: position{line: 1229, col: 16, offset: 48642},
																																						run: (*parser).callonDocumentElement1417,
																																						expr: &litMatcher{
																																							pos:        position{line: 1229, col: 16, offset: 48642},
																																							val:        "literal",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																				&labeledExpr{
																																					pos:   position{line: 231, col: 52, offset: 8266},
																																					label: "key",
																																					expr: &oneOrMoreExpr{
																																						pos: position{line: 231, col: 56, offset: 8270},
																																						expr: &choiceExpr{
																																							pos: position{line: 231, col: 57, offset: 8271},
																																							alternatives: []interface{}{
																																								&actionExpr{
																																									pos: position{line: 1264, col: 14, offset: 49515},
																																									run: (*parser).callonDocumentElement1422,
																																									expr: &oneOrMoreExpr{
																																										pos: position{line: 1264, col: 14, offset: 49515},
																																										expr: &charClassMatcher{
																																											pos:        position{line: 1264, col: 14, offset: 49515},
																																											val:        "[a-zA-Z0-9]",
																																											ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																											ignoreCase: false,
																																											inverted:   false,
																																										},
																																									},
																																								},
																																								&actionExpr{
																																									pos: position{line: 1278, col: 11, offset: 49909},
																																									run: (*parser).callonDocumentElement1425,
																																									expr: &oneOrMoreExpr{
																																										pos: position{line: 1278, col: 11, offset: 49909},
																																										expr: &choiceExpr{
																																											pos: position{line: 1306, col: 7, offset: 50454},
																																											alternatives: []interface{}{
																																												&litMatcher{
																																													pos:        position{line: 1306, col: 7, offset: 50454},
																																													val:        " ",
																																													ignoreCase: false,
																																												},
																																												&actionExpr{
																																													pos: position{line: 1306, col: 13, offset: 50460},
																																													run: (*parser).callonDocumentElement1429,
																																													expr: &litMatcher{
																																														pos:        position{line: 1306, col: 13, offset: 50460},
																																														val:        "\t",
																																														ignoreCase: false,
																																													},
																																												},
																																											},
																																										},
																																									},
																																								},
																																								&actionExpr{
																																									pos: position{line: 231, col: 78, offset: 8292},
																																									run: (*parser).callonDocumentElement1431,
																																									expr: &seqExpr{
																																										pos: position{line: 231, col: 79, offset: 8293},
																																										exprs: []interface{}{
																																											&notExpr{
																																												pos: position{line: 231, col: 79, offset: 8293},
																																												expr: &litMatcher{
																																													pos:        position{line: 231, col: 80, offset: 8294},
																																													val:        "=",
																																													ignoreCase: false,
																																												},
																																											},
																																											&notExpr{
																																												pos: position{line: 231, col: 84, offset: 8298},
																																												expr: &litMatcher{
																																													pos:        position{line: 231, col: 85, offset: 8299},
																																													val:        ",",
																																													ignoreCase: false,
																																												},
																																											},
																																											&notExpr{
																																												pos: position{line: 231, col: 89, offset: 8303},
																																												expr: &litMatcher{
																																													pos:        position{line: 231, col: 90, offset: 8304},
																																													val:        "]",
																																													ignoreCase: false,
																																												},
																																											},
																																											&anyMatcher{
																																												line: 231, col: 95, offset: 8309,
																																											},
																																										},
																																									},
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&litMatcher{
																																	pos:        position{line: 225, col: 40, offset: 7990},
																																	val:        "=",
																																	ignoreCase: false,
																																},
																																&labeledExpr{
																																	pos:   position{line: 225, col: 44, offset: 7994},
																																	label: "value",
																																	expr: &actionExpr{
																																		pos: position{line: 237, col: 19, offset: 8403},
																																		run: (*parser).callonDocumentElement1442,
																																		expr: &labeledExpr{
																																			pos:   position{line: 237, col: 19, offset: 8403},
																																			label: "value",
																																			expr: &zeroOrMoreExpr{
																																				pos: position{line: 237, col: 25, offset: 8409},
																																				expr: &choiceExpr{
																																					pos: position{line: 237, col: 26, offset: 8410},
																																					alternatives: []interface{}{
																																						&actionExpr{
																																							pos: position{line: 1264, col: 14, offset: 49515},
																																							run: (*parser).callonDocumentElement1446,
																																							expr: &oneOrMoreExpr{
																																								pos: position{line: 1264, col: 14, offset: 49515},
																																								expr: &charClassMatcher{
																																									pos:        position{line: 1264, col: 14, offset: 49515},
																																									val:        "[a-zA-Z0-9]",
																																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																									ignoreCase: false,
																																									inverted:   false,
																																								},
																																							},
																																						},
																																						&actionExpr{
																																							pos: position{line: 1278, col: 11, offset: 49909},
																																							run: (*parser).callonDocumentElement1449,
																																							expr: &oneOrMoreExpr{
																																								pos: position{line: 1278, col: 11, offset: 49909},
																																								expr: &choiceExpr{
																																									pos: position{line: 1306, col: 7, offset: 50454},
																																									alternatives: []interface{}{
																																										&litMatcher{
																																											pos:        position{line: 1306, col: 7, offset: 50454},
																																											val:        " ",
																																											ignoreCase: false,
																																										},
																																										&actionExpr{
																																											pos: position{line: 1306, col: 13, offset: 50460},
																																											run: (*parser).callonDocumentElement1453,
																																											expr: &litMatcher{
																																												pos:        position{line: 1306, col: 13, offset: 50460},
																																												val:        "\t",
																																												ignoreCase: false,
																																											},
																																										},
																																									},
																																								},
																																							},
																																						},
																																						&actionExpr{
																																							pos: position{line: 237, col: 47, offset: 8431},
																																							run: (*parser).callonDocumentElement1455,
																																							expr: &seqExpr{
																																								pos: position{line: 237, col: 48, offset: 8432},
																																								exprs: []interface{}{
																																									&notExpr{
																																										pos: position{line: 237, col: 48, offset: 8432},
																																										expr: &litMatcher{
																																											pos:        position{line: 237, col: 49, offset: 8433},
																																											val:        "=",
																																											ignoreCase: false,
																																										},
																																									},
																																									&notExpr{
																																										pos: position{line: 237, col: 53, offset: 8437},
																																										expr: &litMatcher{
																																											pos:        position{line: 237, col: 54, offset: 8438},
																																											val:        ",",
																																											ignoreCase: false,
																																										},
																																									},
																																									&notExpr{
																																										pos: position{line: 237, col: 58, offset: 8442},
																																										expr: &litMatcher{
																																											pos:        position{line: 237, col: 59, offset: 8443},
																																											val:        "]",
																																											ignoreCase: false,
																																										},
																																									},
																																									&anyMatcher{
																																										line: 237, col: 64, offset: 8448,
																																									},
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&zeroOrOneExpr{
																																	pos: position{line: 225, col: 67, offset: 8017},
																																	expr: &litMatcher{
																																		pos:        position{line: 225, col: 67, offset: 8017},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&zeroOrMoreExpr{
																																	pos: position{line: 225, col: 72, offset: 8022},
																																	expr: &choiceExpr{
																																		pos: position{line: 1306, col: 7, offset: 50454},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1306, col: 7, offset: 50454},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1306, col: 13, offset: 50460},
																																				run: (*parser).callonDocumentElement1469,
																																				expr: &litMatcher{
																																					pos:        position{line: 1306, col: 13, offset: 50460},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&actionExpr{
																														pos: position{line: 227, col: 5, offset: 8106},
																														run: (*parser).callonDocumentElement1471,
																														expr: &seqExpr{
																															pos: position{line: 227, col: 5, offset: 8106},
																															exprs: []interface{}{
																																&labeledExpr{
																																	pos:   position{line: 227, col: 5, offset: 8106},
																																	label: "key",
																																	expr: &actionExpr{
																																		pos: position{line: 231, col: 17, offset: 8231},
																																		run: (*parser).callonDocumentElement1474,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 17, offset: 8231},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 17, offset: 8231},
																																					expr: &actionExpr{
																																						pos: position{line: 259, col: 14, offset: 9116},
																																						run: (*parser).callonDocumentElement1477,
																																						expr: &litMatcher{
																																							pos:        position{line: 259, col: 14, offset: 9116},
																																							val:        "quote",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 28, offset: 8242},
																																					expr: &actionExpr{
																																						pos: position{line: 282, col: 14, offset: 9780},
																																						run: (*parser).callonDocumentElement1480,
																																						expr: &litMatcher{
																																							pos:        position{line: 282, col: 14, offset: 9780},
																																							val:        "verse",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 39, offset: 8253},
																																					expr: &actionExpr{
																																						pos: position{line: 1229, col: 16, offset: 48642},
																																						run: (*parser).callonDocumentElement1483,
																																						expr: &litMatcher{
																																							pos:        position{line: 1229, col: 16, offset: 48642},
																																							val:        "literal",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																				&labeledExpr{
																																					pos:   position{line: 231, col: 52, offset: 8266},
																																					label: "key",
																																					expr: &oneOrMoreExpr{
																																						pos: position{line: 231, col: 56, offset: 8270},
																																						expr: &choiceExpr{
																																							pos: position{line: 231, col: 57, offset: 8271},
																																							alternatives: []interface{}{
																																								&actionExpr{
																																									pos: position{line: 1264, col: 14, offset: 49515},
																																									run: (*parser).callonDocumentElement1488,
																																									expr: &oneOrMoreExpr{
																																										pos: position{line: 1264, col: 14, offset: 49515},
																																										expr: &charClassMatcher{
																																											pos:        position{line: 1264, col: 14, offset: 49515},
																																											val:        "[a-zA-Z0-9]",
																																											ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																											ignoreCase: false,
																																											inverted:   false,
																																										},
																																									},
																																								},
																																								&actionExpr{
																																									pos: position{line: 1278, col: 11, offset: 49909},
																																									run: (*parser).callonDocumentElement1491,
																																									expr: &oneOrMoreExpr{
																																										pos: position{line: 1278, col: 11, offset: 49909},
																																										expr: &choiceExpr{
																																											pos: position{line: 1306, col: 7, offset: 50454},
																																											alternatives: []interface{}{
																																												&litMatcher{
																																													pos:        position{line: 1306, col: 7, offset: 50454},
																																													val:        " ",
																																													ignoreCase: false,
																																												},
																																												&actionExpr{
																																													pos: position{line: 1306, col: 13, offset: 50460},
																																													run: (*parser).callonDocumentElement1495,
																																													expr: &litMatcher{
																																														pos:        position{line: 1306, col: 13, offset: 50460},
																																														val:        "\t",
																																														ignoreCase: false,
																																													},
																																												},
																																											},
																																										},
																																									},
																																								},
																																								&actionExpr{
																																									pos: position{line: 231, col: 78, offset: 8292},
																																									run: (*parser).callonDocumentElement1497,
																																									expr: &seqExpr{
																																										pos: position{line: 231, col: 79, offset: 8293},
																																										exprs: []interface{}{
																																											&notExpr{
																																												pos: position{line: 231, col: 79, offset: 8293},
																																												expr: &litMatcher{
																																													pos:        position{line: 231, col: 80, offset: 8294},
																																													val:        "=",
																																													ignoreCase: false,
																																												},
																																											},
																																											&notExpr{
																																												pos: position{line: 231, col: 84, offset: 8298},
																																												expr: &litMatcher{
																																													pos:        position{line: 231, col: 85, offset: 8299},
																																													val:        ",",
																																													ignoreCase: false,
																																												},
																																											},
																																											&notExpr{
																																												pos: position{line: 231, col: 89, offset: 8303},
																																												expr: &litMatcher{
																																													pos:        position{line: 231, col: 90, offset: 8304},
																																													val:        "]",
																																													ignoreCase: false,
																																												},
																																											},
																																											&anyMatcher{
																																												line: 231, col: 95, offset: 8309,
																																											},
																																										},
																																									},
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&zeroOrOneExpr{
																																	pos: position{line: 227, col: 24, offset: 8125},
																																	expr: &litMatcher{
																																		pos:        position{line: 227, col: 24, offset: 8125},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&zeroOrMoreExpr{
																																	pos: position{line: 227, col: 29, offset: 8130},
																																	expr: &choiceExpr{
																																		pos: position{line: 1306, col: 7, offset: 50454},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1306, col: 7, offset: 50454},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1306, col: 13, offset: 50460},
																																				run: (*parser).callonDocumentElement1511,
																																				expr: &litMatcher{
																																					pos:        position{line: 1306, col: 13, offset: 50460},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 221, col: 59, offset: 7879},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																			&zeroOrMoreExpr{
																				pos: position{line: 165, col: 170, offset: 6018},
																				expr: &choiceExpr{
																					pos: position{line: 1306, col: 7, offset: 50454},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1306, col: 7, offset: 50454},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1306, col: 13, offset: 50460},
																							run: (*parser).callonDocumentElement1517,
																							expr: &litMatcher{
																								pos:        position{line: 1306, col: 13, offset: 50460},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&choiceExpr{
																				pos: position{line: 1314, col: 8, offset: 50552},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1310, col: 12, offset: 50512},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 1310, col: 21, offset: 50521},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																					&notExpr{
																						pos: position{line: 1312, col: 8, offset: 50541},
																						expr: &anyMatcher{
																							line: 1312, col: 9, offset: 50542,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 1225, col: 82, offset: 48462},
													label: "lines",
													expr: &actionExpr{
														pos: position{line: 1238, col: 39, offset: 48851},
														run: (*parser).callonDocumentElement1525,
														expr: &labeledExpr{
															pos:   position{line: 1238, col: 39, offset: 48851},
															label: "lines",
															expr: &oneOrMoreExpr{
																pos: position{line: 1238, col: 45, offset: 48857},
																expr: &actionExpr{
																	pos: position{line: 1242, col: 38, offset: 48975},
																	run: (*parser).callonDocumentElement1528,
																	expr: &seqExpr{
																		pos: position{line: 1242, col: 38, offset: 48975},
																		exprs: []interface{}{
																			&labeledExpr{
																				pos:   position{line: 1242, col: 38, offset: 48975},
																				label: "line",
																				expr: &actionExpr{
																					pos: position{line: 1242, col: 44, offset: 48981},
																					run: (*parser).callonDocumentElement1531,
																					expr: &seqExpr{
																						pos: position{line: 1242, col: 44, offset: 48981},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 1242, col: 44, offset: 48981},
																								expr: &actionExpr{
																									pos: position{line: 1253, col: 14, offset: 49283},
																									run: (*parser).callonDocumentElement1534,
																									expr: &seqExpr{
																										pos: position{line: 1253, col: 14, offset: 49283},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 1253, col: 14, offset: 49283},
																												expr: &notExpr{
																													pos: position{line: 1312, col: 8, offset: 50541},
																													expr: &anyMatcher{
																														line: 1312, col: 9, offset: 50542,
																													},
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 1253, col: 19, offset: 49288},
																												expr: &choiceExpr{
																													pos: position{line: 1306, col: 7, offset: 50454},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1306, col: 7, offset: 50454},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1306, col: 13, offset: 50460},
																															run: (*parser).callonDocumentElement1542,
																															expr: &litMatcher{
																																pos:        position{line: 1306, col: 13, offset: 50460},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																											&choiceExpr{
																												pos: position{line: 1314, col: 8, offset: 50552},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1310, col: 12, offset: 50512},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1310, col: 21, offset: 50521},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1312, col: 8, offset: 50541},
																														expr: &anyMatcher{
																															line: 1312, col: 9, offset: 50542,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&oneOrMoreExpr{
																								pos: position{line: 1242, col: 57, offset: 48994},
																								expr: &choiceExpr{
																									pos: position{line: 1242, col: 58, offset: 48995},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 1264, col: 14, offset: 49515},
																											run: (*parser).callonDocumentElement1551,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 1264, col: 14, offset: 49515},
																												expr: &charClassMatcher{
																													pos:        position{line: 1264, col: 14, offset: 49515},
																													val:        "[a-zA-Z0-9]",
																													ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 1278, col: 11, offset: 49909},
																											run: (*parser).callonDocumentElement1554,
																											expr: &oneOrMoreExpr{
																												pos: position{line: 1278, col: 11, offset: 49909},
																												expr: &choiceExpr{
																													pos: position{line: 1306, col: 7, offset: 50454},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1306, col: 7, offset: 50454},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1306, col: 13, offset: 50460},
																															run: (*parser).callonDocumentElement1558,
																															expr: &litMatcher{
																																pos:        position{line: 1306, col: 13, offset: 50460},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 1242, col: 79, offset: 49016},
																											run: (*parser).callonDocumentElement1560,
																											expr: &seqExpr{
																												pos: position{line: 1242, col: 80, offset: 49017},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 1242, col: 80, offset: 49017},
																														expr: &choiceExpr{
																															pos: position{line: 1314, col: 8, offset: 50552},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1310, col: 12, offset: 50512},
																																	val:        "\r\n",
																																	ignoreCase: false,
																																},
																																&charClassMatcher{
																																	pos:        position{line: 1310, col: 21, offset: 50521},
																																	val:        "[\\r\\n]",
																																	chars:      []rune{'\r', '\n'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																																&notExpr{
																																	pos: position{line: 1312, col: 8, offset: 50541},
																																	expr: &anyMatcher{
																																		line: 1312, col: 9, offset: 50542,
																																	},
																																},
																															},
																														},
																													},
																													&anyMatcher{
																														line: 1242, col: 86, offset: 49023,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																			&choiceExpr{
																				pos: position{line: 1314, col: 8, offset: 50552},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1310, col: 12, offset: 50512},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 1310, col: 21, offset: 50521},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																					&notExpr{
																						pos: position{line: 1312, col: 8, offset: 50541},
																						expr: &anyMatcher{
																							line: 1312, col: 9, offset: 50542,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 108, col: 33, offset: 3840},
										run: (*parser).callonDocumentElement1574,
										expr: &seqExpr{
											pos: position{line: 108, col: 33, offset: 3840},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 108, col: 33, offset: 3840},
													val:        ":",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 108, col: 37, offset: 3844},
													label: "name",
													expr: &actionExpr{
														pos: position{line: 127, col: 26, offset: 4690},
														run: (*parser).callonDocumentElement1578,
														expr: &seqExpr{
															pos: position{line: 127, col: 26, offset: 4690},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 127, col: 27, offset: 4691},
																	val:        "[_A-Za-z0-9]",
																	chars:      []rune{'_'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 127, col: 56, offset: 4720},
																	expr: &charClassMatcher{
																		pos:        position{line: 127, col: 57, offset: 4721},
																		val:        "[-A-Za-z0-9]",
																		chars:      []rune{'-'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 108, col: 66, offset: 3873},
													val:        ":",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 108, col: 70, offset: 3877},
													expr: &choiceExpr{
														pos: position{line: 1306, col: 7, offset: 50454},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1306, col: 7, offset: 50454},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1306, col: 13, offset: 50460},
																run: (*parser).callonDocumentElement1587,
																expr: &litMatcher{
																	pos:        position{line: 1306, col: 13, offset: 50460},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1314, col: 8, offset: 50552},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1310, col: 12, offset: 50512},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1310, col: 21, offset: 50521},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1312, col: 8, offset: 50541},
															expr: &anyMatcher{
																line: 1312, col: 9, offset: 50542,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 110, col: 5, offset: 3960},
										run: (*parser).callonDocumentElement1594,
										expr: &seqExpr{
											pos: position{line: 110, col: 5, offset: 3960},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 110, col: 5, offset: 3960},
													val:        ":",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 110, col: 9, offset: 3964},
													label: "name",
													expr: &actionExpr{
														pos: position{line: 127, col: 26, offset: 4690},
														run: (*parser).callonDocumentElement1598,
														expr: &seqExpr{
															pos: position{line: 127, col: 26, offset: 4690},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 127, col: 27, offset: 4691},
																	val:        "[_A-Za-z0-9]",
																	chars:      []rune{'_'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 127, col: 56, offset: 4720},
																	expr: &charClassMatcher{
																		pos:        position{line: 127, col: 57, offset: 4721},
																		val:        "[-A-Za-z0-9]",
																		chars:      []rune{'-'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 110, col: 38, offset: 3993},
													val:        ":",
													ignoreCase: false,
												},
												&oneOrMoreExpr{
													pos: position{line: 110, col: 42, offset: 3997},
													expr: &choiceExpr{
														pos: position{line: 1306, col: 7, offset: 50454},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1306, col: 7, offset: 50454},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1306, col: 13, offset: 50460},
																run: (*parser).callonDocumentElement1607,
																expr: &litMatcher{
																	pos:        position{line: 1306, col: 13, offset: 50460},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 110, col: 46, offset: 4001},
													label: "value",
													expr: &actionExpr{
														pos: position{line: 131, col: 27, offset: 4813},
														run: (*parser).callonDocumentElement1610,
														expr: &zeroOrMoreExpr{
															pos: position{line: 131, col: 27, offset: 4813},
															expr: &choiceExpr{
																pos: position{line: 131, col: 28, offset: 4814},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 1264, col: 14, offset: 49515},
																		run: (*parser).callonDocumentElement1613,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1264, col: 14, offset: 49515},
																			expr: &charClassMatcher{
																				pos:        position{line: 1264, col: 14, offset: 49515},
																				val:        "[a-zA-Z0-9]",
																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 1278, col: 11, offset: 49909},
																		run: (*parser).callonDocumentElement1616,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1278, col: 11, offset: 49909},
																			expr: &choiceExpr{
																				pos: position{line: 1306, col: 7, offset: 50454},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1306, col: 7, offset: 50454},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1306, col: 13, offset: 50460},
																						run: (*parser).callonDocumentElement1620,
																						expr: &litMatcher{
																							pos:        position{line: 1306, col: 13, offset: 50460},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 131, col: 49, offset: 4835},
																		run: (*parser).callonDocumentElement1622,
																		expr: &seqExpr{
																			pos: position{line: 131, col: 50, offset: 4836},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 131, col: 50, offset: 4836},
																					expr: &choiceExpr{
																						pos: position{line: 1310, col: 12, offset: 50512},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1310, col: 12, offset: 50512},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 1310, col: 21, offset: 50521},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																				},
																				&anyMatcher{
																					line: 131, col: 60, offset: 4846,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1314, col: 8, offset: 50552},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1310, col: 12, offset: 50512},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1310, col: 21, offset: 50521},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1312, col: 8, offset: 50541},
															expr: &anyMatcher{
																line: 1312, col: 9, offset: 50542,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 114, col: 27, offset: 4139},
										run: (*parser).callonDocumentElement1634,
										expr: &seqExpr{
											pos: position{line: 114, col: 27, offset: 4139},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 114, col: 27, offset: 4139},
													val:        ":!",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 114, col: 32, offset: 4144},
													label: "name",
													expr: &actionExpr{
														pos: position{line: 127, col: 26, offset: 4690},
														run: (*parser).callonDocumentElement1638,
														expr: &seqExpr{
															pos: position{line: 127, col: 26, offset: 4690},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 127, col: 27, offset: 4691},
																	val:        "[_A-Za-z0-9]",
																	chars:      []rune{'_'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 127, col: 56, offset: 4720},
																	expr: &charClassMatcher{
																		pos:        position{line: 127, col: 57, offset: 4721},
																		val:        "[-A-Za-z0-9]",
																		chars:      []rune{'-'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 114, col: 61, offset: 4173},
													val:        ":",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 114, col: 65, offset: 4177},
													expr: &choiceExpr{
														pos: position{line: 1306, col: 7, offset: 50454},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1306, col: 7, offset: 50454},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1306, col: 13, offset: 50460},
																run: (*parser).callonDocumentElement1647,
																expr: &litMatcher{
																	pos:        position{line: 1306, col: 13, offset: 50460},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1314, col: 8, offset: 50552},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1310, col: 12, offset: 50512},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1310, col: 21, offset: 50521},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1312, col: 8, offset: 50541},
															expr: &anyMatcher{
																line: 1312, col: 9, offset: 50542,
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 116, col: 5, offset: 4249},
										run: (*parser).callonDocumentElement1654,
										expr: &seqExpr{
											pos: position{line: 116, col: 5, offset: 4249},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 116, col: 5, offset: 4249},
													val:        ":",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 116, col: 9, offset: 4253},
													label: "name",
													expr: &actionExpr{
														pos: position{line: 127, col: 26, offset: 4690},
														run: (*parser).callonDocumentElement1658,
														expr: &seqExpr{
															pos: position{line: 127, col: 26, offset: 4690},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 127, col: 27, offset: 4691},
																	val:        "[_A-Za-z0-9]",
																	chars:      []rune{'_'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 127, col: 56, offset: 4720},
																	expr: &charClassMatcher{
																		pos:        position{line: 127, col: 57, offset: 4721},
																		val:        "[-A-Za-z0-9]",
																		chars:      []rune{'-'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 116, col: 38, offset: 4282},
													val:        "!:",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 116, col: 43, offset: 4287},
													expr: &choiceExpr{
														pos: position{line: 1306, col: 7, offset: 50454},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1306, col: 7, offset: 50454},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1306, col: 13, offset: 50460},
																run: (*parser).callonDocumentElement1667,
																expr: &litMatcher{
																	pos:        position{line: 1306, col: 13, offset: 50460},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1314, col: 8, offset: 50552},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1310, col: 12, offset: 50512},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1310, col: 21, offset: 50521},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1312, col: 8, offset: 50541},
															expr: &anyMatcher{
																line: 1312, col: 9, offset: 50542,
															},
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 448, col: 25, offset: 16038},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 448, col: 25, offset: 16038},
												val:        "toc::[]",
												ignoreCase: false,
											},
											&choiceExpr{
												pos: position{line: 1310, col: 12, offset: 50512},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1310, col: 12, offset: 50512},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1310, col: 21, offset: 50521},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 157, col: 15, offset: 5589},
										name: "Paragraph",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "QuoteAttributes",
			pos:  position{line: 247, col: 1, offset: 8627},
			expr: &choiceExpr{
				pos: position{line: 247, col: 20, offset: 8646},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 247, col: 20, offset: 8646},
						run: (*parser).callonQuoteAttributes2,
						expr: &seqExpr{
							pos: position{line: 247, col: 20, offset: 8646},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 247, col: 20, offset: 8646},
									val:        "[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 247, col: 24, offset: 8650},
									label: "kind",
									expr: &actionExpr{
										pos: position{line: 259, col: 14, offset: 9116},
										run: (*parser).callonQuoteAttributes6,
										expr: &litMatcher{
											pos:        position{line: 259, col: 14, offset: 9116},
											val:        "quote",
											ignoreCase: false,
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 247, col: 41, offset: 8667},
									expr: &choiceExpr{
										pos: position{line: 1306, col: 7, offset: 50454},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1306, col: 7, offset: 50454},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1306, col: 13, offset: 50460},
												run: (*parser).callonQuoteAttributes11,
												expr: &litMatcher{
													pos:        position{line: 1306, col: 13, offset: 50460},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 247, col: 45, offset: 8671},
									val:        ",",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 247, col: 49, offset: 8675},
									label: "author",
									expr: &actionExpr{
										pos: position{line: 286, col: 16, offset: 9839},
										run: (*parser).callonQuoteAttributes15,
										expr: &zeroOrMoreExpr{
											pos: position{line: 286, col: 16, offset: 9839},
											expr: &choiceExpr{
												pos: position{line: 286, col: 17, offset: 9840},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 1264, col: 14, offset: 49515},
														run: (*parser).callonQuoteAttributes18,
														expr: &oneOrMoreExpr{
															pos: position{line: 1264, col: 14, offset: 49515},
															expr: &charClassMatcher{
																pos:        position{line: 1264, col: 14, offset: 49515},
																val:        "[a-zA-Z0-9]",
																ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																ignoreCase: false,
																inverted:   false,
															},
														},
													},
													&actionExpr{
														pos: position{line: 1278, col: 11, offset: 49909},
														run: (*parser).callonQuoteAttributes21,
														expr: &oneOrMoreExpr{
															pos: position{line: 1278, col: 11, offset: 49909},
															expr: &choiceExpr{
																pos: position{line: 1306, col: 7, offset: 50454},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1306, col: 7, offset: 50454},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1306, col: 13, offset: 50460},
																		run: (*parser).callonQuoteAttributes25,
																		expr: &litMatcher{
																			pos:        position{line: 1306, col: 13, offset: 50460},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 286, col: 38, offset: 9861},
														run: (*parser).callonQuoteAttributes27,
														expr: &seqExpr{
															pos: position{line: 286, col: 39, offset: 9862},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 286, col: 39, offset: 9862},
																	expr: &choiceExpr{
																		pos: position{line: 1314, col: 8, offset: 50552},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1310, col: 12, offset: 50512},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1310, col: 21, offset: 50521},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																			&notExpr{
																				pos: position{line: 1312, col: 8, offset: 50541},
																				expr: &anyMatcher{
																					line: 1312, col: 9, offset: 50542,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 286, col: 44, offset: 9867},
																	expr: &litMatcher{
																		pos:        position{line: 286, col: 45, offset: 9868},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 286, col: 49, offset: 9872},
																	expr: &litMatcher{
																		pos:        position{line: 286, col: 50, offset: 9873},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 286, col: 55, offset: 9878,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 247, col: 70, offset: 8696},
									val:        ",",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 247, col: 74, offset: 8700},
									label: "title",
									expr: &actionExpr{
										pos: position{line: 292, col: 15, offset: 9967},
										run: (*parser).callonQuoteAttributes42,
										expr: &zeroOrMoreExpr{
											pos: position{line: 292, col: 15, offset: 9967},
											expr: &choiceExpr{
												pos: position{line: 292, col: 16, offset: 9968},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 1264, col: 14, offset: 49515},
														run: (*parser).callonQuoteAttributes45,
														expr: &oneOrMoreExpr{
															pos: position{line: 1264, col: 14, offset: 49515},
															expr: &charClassMatcher{
																pos:        position{line: 1264, col: 14, offset: 49515},
																val:        "[a-zA-Z0-9]",
																ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																ignoreCase: false,
																inverted:   false,
															},
														},
													},
													&actionExpr{
														pos: position{line: 1278, col: 11, offset: 49909},
														run: (*parser).callonQuoteAttributes48,
														expr: &oneOrMoreExpr{
															pos: position{line: 1278, col: 11, offset: 49909},
															expr: &choiceExpr{
																pos: position{line: 1306, col: 7, offset: 50454},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1306, col: 7, offset: 50454},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1306, col: 13, offset: 50460},
																		run: (*parser).callonQuoteAttributes52,
																		expr: &litMatcher{
																			pos:        position{line: 1306, col: 13, offset: 50460},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
													},
													&seqExpr{
														pos: position{line: 292, col: 38, offset: 9990},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 292, col: 38, offset: 9990},
																expr: &choiceExpr{
																	pos: position{line: 1314, col: 8, offset: 50552},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1310, col: 12, offset: 50512},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1310, col: 21, offset: 50521},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1312, col: 8, offset: 50541},
																			expr: &anyMatcher{
																				line: 1312, col: 9, offset: 50542,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 292, col: 43, offset: 9995},
																expr: &litMatcher{
																	pos:        position{line: 292, col: 44, offset: 9996},
																	val:        ",",
																	ignoreCase: false,
																},
															},
															&notExpr{
																pos: position{line: 292, col: 48, offset: 10000},
																expr: &litMatcher{
																	pos:        position{line: 292, col: 49, offset: 10001},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 292, col: 54, offset: 10006,
															},
														},
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 247, col: 93, offset: 8719},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 251, col: 1, offset: 8846},
						run: (*parser).callonQuoteAttributes67,
						expr: &seqExpr{
							pos: position{line: 251, col: 1, offset: 8846},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 251, col: 1, offset: 8846},
									val:        "[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 251, col: 5, offset: 8850},
									label: "kind",
									expr: &actionExpr{
										pos: position{line: 259, col: 14, offset: 9116},
										run: (*parser).callonQuoteAttributes71,
										expr: &litMatcher{
											pos:        position{line: 259, col: 14, offset: 9116},
											val:        "quote",
											ignoreCase: false,
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 251, col: 22, offset: 8867},
									expr: &choiceExpr{
										pos: position{line: 1306, col: 7, offset: 50454},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1306, col: 7, offset: 50454},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1306, col: 13, offset: 50460},
												run: (*parser).callonQuoteAttributes76,
												expr: &litMatcher{
													pos:        position{line: 1306, col: 13, offset: 50460},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 251, col: 26, offset: 8871},
									val:        ",",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 251, col: 30, offset: 8875},
									label: "author",
									expr: &actionExpr{
										pos: position{line: 286, col: 16, offset: 9839},
										run: (*parser).callonQuoteAttributes80,
										expr: &zeroOrMoreExpr{
											pos: position{line: 286, col: 16, offset: 9839},
											expr: &choiceExpr{
												pos: position{line: 286, col: 17, offset: 9840},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 1264, col: 14, offset: 49515},
														run: (*parser).callonQuoteAttributes83,
														expr: &oneOrMoreExpr{
															pos: position{line: 1264, col: 14, offset: 49515},
															expr: &charClassMatcher{
																pos:        position{line: 1264, col: 14, offset: 49515},
																val:        "[a-zA-Z0-9]",
																ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																ignoreCase: false,
																inverted:   false,
															},
														},
													},
													&actionExpr{
														pos: position{line: 1278, col: 11, offset: 49909},
														run: (*parser).callonQuoteAttributes86,
														expr: &oneOrMoreExpr{
															pos: position{line: 1278, col: 11, offset: 49909},
															expr: &choiceExpr{
																pos: position{line: 1306, col: 7, offset: 50454},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1306, col: 7, offset: 50454},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1306, col: 13, offset: 50460},
																		run: (*parser).callonQuoteAttributes90,
																		expr: &litMatcher{
																			pos:        position{line: 1306, col: 13, offset: 50460},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 286, col: 38, offset: 9861},
														run: (*parser).callonQuoteAttributes92,
														expr: &seqExpr{
															pos: position{line: 286, col: 39, offset: 9862},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 286, col: 39, offset: 9862},
																	expr: &choiceExpr{
																		pos: position{line: 1314, col: 8, offset: 50552},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1310, col: 12, offset: 50512},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1310, col: 21, offset: 50521},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																			&notExpr{
																				pos: position{line: 1312, col: 8, offset: 50541},
																				expr: &anyMatcher{
																					line: 1312, col: 9, offset: 50542,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 286, col: 44, offset: 9867},
																	expr: &litMatcher{
																		pos:        position{line: 286, col: 45, offset: 9868},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 286, col: 49, offset: 9872},
																	expr: &litMatcher{
																		pos:        position{line: 286, col: 50, offset: 9873},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 286, col: 55, offset: 9878,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 251, col: 51, offset: 8896},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 255, col: 1, offset: 9011},
						run: (*parser).callonQuoteAttributes106,
						expr: &seqExpr{
							pos: position{line: 255, col: 1, offset: 9011},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 255, col: 1, offset: 9011},
									val:        "[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 255, col: 5, offset: 9015},
									label: "kind",
									expr: &actionExpr{
										pos: position{line: 259, col: 14, offset: 9116},
										run: (*parser).callonQuoteAttributes110,
										expr: &litMatcher{
											pos:        position{line: 259, col: 14, offset: 9116},
											val:        "quote",
											ignoreCase: false,
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 255, col: 22, offset: 9032},
									expr: &choiceExpr{
										pos: position{line: 1306, col: 7, offset: 50454},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1306, col: 7, offset: 50454},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1306, col: 13, offset: 50460},
												run: (*parser).callonQuoteAttributes115,
												expr: &litMatcher{
													pos:        position{line: 1306, col: 13, offset: 50460},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 255, col: 26, offset: 9036},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "VerseAttributes",
			pos:  position{line: 263, col: 1, offset: 9160},
			expr: &actionExpr{
				pos: position{line: 263, col: 20, offset: 9179},
				run: (*parser).callonVerseAttributes1,
				expr: &seqExpr{
					pos: position{line: 263, col: 20, offset: 9179},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 263, col: 20, offset: 9179},
							label: "attribute",
							expr: &choiceExpr{
								pos: position{line: 263, col: 31, offset: 9190},
								alternatives: []interface{}{
									&actionExpr{
										pos: position{line: 263, col: 31, offset: 9190},
										run: (*parser).callonVerseAttributes5,
										expr: &seqExpr{
											pos: position{line: 263, col: 31, offset: 9190},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 263, col: 31, offset: 9190},
													val:        "[",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 263, col: 35, offset: 9194},
													label: "kind",
													expr: &actionExpr{
														pos: position{line: 282, col: 14, offset: 9780},
														run: (*parser).callonVerseAttributes9,
														expr: &litMatcher{
															pos:        position{line: 282, col: 14, offset: 9780},
															val:        "verse",
															ignoreCase: false,
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 263, col: 52, offset: 9211},
													expr: &choiceExpr{
														pos: position{line: 1306, col: 7, offset: 50454},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1306, col: 7, offset: 50454},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1306, col: 13, offset: 50460},
																run: (*parser).callonVerseAttributes14,
																expr: &litMatcher{
																	pos:        position{line: 1306, col: 13, offset: 50460},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 263, col: 56, offset: 9215},
													val:        ",",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 263, col: 60, offset: 9219},
													label: "author",
													expr: &actionExpr{
														pos: position{line: 286, col: 16, offset: 9839},
														run: (*parser).callonVerseAttributes18,
														expr: &zeroOrMoreExpr{
															pos: position{line: 286, col: 16, offset: 9839},
															expr: &choiceExpr{
																pos: position{line: 286, col: 17, offset: 9840},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 1264, col: 14, offset: 49515},
																		run: (*parser).callonVerseAttributes21,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1264, col: 14, offset: 49515},
																			expr: &charClassMatcher{
																				pos:        position{line: 1264, col: 14, offset: 49515},
																				val:        "[a-zA-Z0-9]",
																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 1278, col: 11, offset: 49909},
																		run: (*parser).callonVerseAttributes24,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1278, col: 11, offset: 49909},
																			expr: &choiceExpr{
																				pos: position{line: 1306, col: 7, offset: 50454},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1306, col: 7, offset: 50454},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1306, col: 13, offset: 50460},
																						run: (*parser).callonVerseAttributes28,
																						expr: &litMatcher{
																							pos:        position{line: 1306, col: 13, offset: 50460},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 286, col: 38, offset: 9861},
																		run: (*parser).callonVerseAttributes30,
																		expr: &seqExpr{
																			pos: position{line: 286, col: 39, offset: 9862},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 286, col: 39, offset: 9862},
																					expr: &choiceExpr{
																						pos: position{line: 1314, col: 8, offset: 50552},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1310, col: 12, offset: 50512},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 1310, col: 21, offset: 50521},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																							&notExpr{
																								pos: position{line: 1312, col: 8, offset: 50541},
																								expr: &anyMatcher{
																									line: 1312, col: 9, offset: 50542,
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 286, col: 44, offset: 9867},
																					expr: &litMatcher{
																						pos:        position{line: 286, col: 45, offset: 9868},
																						val:        ",",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 286, col: 49, offset: 9872},
																					expr: &litMatcher{
																						pos:        position{line: 286, col: 50, offset: 9873},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 286, col: 55, offset: 9878,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 263, col: 81, offset: 9240},
													val:        ",",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 263, col: 85, offset: 9244},
													label: "title",
													expr: &actionExpr{
														pos: position{line: 292, col: 15, offset: 9967},
														run: (*parser).callonVerseAttributes45,
														expr: &zeroOrMoreExpr{
															pos: position{line: 292, col: 15, offset: 9967},
															expr: &choiceExpr{
																pos: position{line: 292, col: 16, offset: 9968},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 1264, col: 14, offset: 49515},
																		run: (*parser).callonVerseAttributes48,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1264, col: 14, offset: 49515},
																			expr: &charClassMatcher{
																				pos:        position{line: 1264, col: 14, offset: 49515},
																				val:        "[a-zA-Z0-9]",
																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 1278, col: 11, offset: 49909},
																		run: (*parser).callonVerseAttributes51,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1278, col: 11, offset: 49909},
																			expr: &choiceExpr{
																				pos: position{line: 1306, col: 7, offset: 50454},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1306, col: 7, offset: 50454},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1306, col: 13, offset: 50460},
																						run: (*parser).callonVerseAttributes55,
																						expr: &litMatcher{
																							pos:        position{line: 1306, col: 13, offset: 50460},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																	&seqExpr{
																		pos: position{line: 292, col: 38, offset: 9990},
																		exprs: []interface{}{
																			&notExpr{
																				pos: position{line: 292, col: 38, offset: 9990},
																				expr: &choiceExpr{
																					pos: position{line: 1314, col: 8, offset: 50552},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1310, col: 12, offset: 50512},
																							val:        "\r\n",
																							ignoreCase: false,
																						},
																						&charClassMatcher{
																							pos:        position{line: 1310, col: 21, offset: 50521},
																							val:        "[\\r\\n]",
																							chars:      []rune{'\r', '\n'},
																							ignoreCase: false,
																							inverted:   false,
																						},
																						&notExpr{
																							pos: position{line: 1312, col: 8, offset: 50541},
																							expr: &anyMatcher{
																								line: 1312, col: 9, offset: 50542,
																							},
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 292, col: 43, offset: 9995},
																				expr: &litMatcher{
																					pos:        position{line: 292, col: 44, offset: 9996},
																					val:        ",",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 292, col: 48, offset: 10000},
																				expr: &litMatcher{
																					pos:        position{line: 292, col: 49, offset: 10001},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																			&anyMatcher{
																				line: 292, col: 54, offset: 10006,
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 263, col: 104, offset: 9263},
													val:        "]",
													ignoreCase: false,
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 267, col: 5, offset: 9406},
										run: (*parser).callonVerseAttributes70,
										expr: &seqExpr{
											pos: position{line: 267, col: 5, offset: 9406},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 267, col: 5, offset: 9406},
													val:        "[",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 267, col: 9, offset: 9410},
													label: "kind",
													expr: &actionExpr{
														pos: position{line: 282, col: 14, offset: 9780},
														run: (*parser).callonVerseAttributes74,
														expr: &litMatcher{
															pos:        position{line: 282, col: 14, offset: 9780},
															val:        "verse",
															ignoreCase: false,
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 267, col: 26, offset: 9427},
													expr: &choiceExpr{
														pos: position{line: 1306, col: 7, offset: 50454},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1306, col: 7, offset: 50454},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1306, col: 13, offset: 50460},
																run: (*parser).callonVerseAttributes79,
																expr: &litMatcher{
																	pos:        position{line: 1306, col: 13, offset: 50460},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 267, col: 30, offset: 9431},
													val:        ",",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 267, col: 34, offset: 9435},
													label: "author",
													expr: &actionExpr{
														pos: position{line: 286, col: 16, offset: 9839},
														run: (*parser).callonVerseAttributes83,
														expr: &zeroOrMoreExpr{
															pos: position{line: 286, col: 16, offset: 9839},
															expr: &choiceExpr{
																pos: position{line: 286, col: 17, offset: 9840},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 1264, col: 14, offset: 49515},
																		run: (*parser).callonVerseAttributes86,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1264, col: 14, offset: 49515},
																			expr: &charClassMatcher{
																				pos:        position{line: 1264, col: 14, offset: 49515},
																				val:        "[a-zA-Z0-9]",
																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 1278, col: 11, offset: 49909},
																		run: (*parser).callonVerseAttributes89,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1278, col: 11, offset: 49909},
																			expr: &choiceExpr{
																				pos: position{line: 1306, col: 7, offset: 50454},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1306, col: 7, offset: 50454},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1306, col: 13, offset: 50460},
																						run: (*parser).callonVerseAttributes93,
																						expr: &litMatcher{
																							pos:        position{line: 1306, col: 13, offset: 50460},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 286, col: 38, offset: 9861},
																		run: (*parser).callonVerseAttributes95,
																		expr: &seqExpr{
																			pos: position{line: 286, col: 39, offset: 9862},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 286, col: 39, offset: 9862},
																					expr: &choiceExpr{
																						pos: position{line: 1314, col: 8, offset: 50552},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1310, col: 12, offset: 50512},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 1310, col: 21, offset: 50521},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																							&notExpr{
																								pos: position{line: 1312, col: 8, offset: 50541},
																								expr: &anyMatcher{
																									line: 1312, col: 9, offset: 50542,
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 286, col: 44, offset: 9867},
																					expr: &litMatcher{
																						pos:        position{line: 286, col: 45, offset: 9868},
																						val:        ",",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 286, col: 49, offset: 9872},
																					expr: &litMatcher{
																						pos:        position{line: 286, col: 50, offset: 9873},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 286, col: 55, offset: 9878,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 267, col: 55, offset: 9456},
													val:        "]",
													ignoreCase: false,
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 271, col: 5, offset: 9587},
										run: (*parser).callonVerseAttributes109,
										expr: &seqExpr{
											pos: position{line: 271, col: 5, offset: 9587},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 271, col: 5, offset: 9587},
													val:        "[",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 271, col: 9, offset: 9591},
													label: "kind",
													expr: &actionExpr{
														pos: position{line: 282, col: 14, offset: 9780},
														run: (*parser).callonVerseAttributes113,
														expr: &litMatcher{
															pos:        position{line: 282, col: 14, offset: 9780},
															val:        "verse",
															ignoreCase: false,
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 271, col: 26, offset: 9608},
													expr: &choiceExpr{
														pos: position{line: 1306, col: 7, offset: 50454},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1306, col: 7, offset: 50454},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1306, col: 13, offset: 50460},
																run: (*parser).callonVerseAttributes118,
																expr: &litMatcher{
																	pos:        position{line: 1306, col: 13, offset: 50460},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 271, col: 30, offset: 9612},
													val:        "]",
													ignoreCase: false,
												},
											},
										},
									},
								},
							},
						},
						&stateCodeExpr{
							pos: position{line: 275, col: 1, offset: 9688},
							run: (*parser).callonVerseAttributes121,
						},
					},
				},
			},
		},
		{
			name: "Section",
			pos:  position{line: 299, col: 1, offset: 10151},
			expr: &actionExpr{
				pos: position{line: 299, col: 12, offset: 10162},
				run: (*parser).callonSection1,
				expr: &seqExpr{
					pos: position{line: 299, col: 12, offset: 10162},
					exprs: []interface{}{
						&andExpr{
							pos: position{line: 299, col: 12, offset: 10162},
							expr: &litMatcher{
								pos:        position{line: 299, col: 13, offset: 10163},
								val:        "=",
								ignoreCase: false,
							},
						},
						&labeledExpr{
							pos:   position{line: 300, col: 5, offset: 10236},
							label: "section",
							expr: &choiceExpr{
								pos: position{line: 300, col: 14, offset: 10245},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 300, col: 14, offset: 10245},
										name: "Section0",
									},
									&ruleRefExpr{
										pos:  position{line: 300, col: 25, offset: 10256},
										name: "Section1",
									},
									&ruleRefExpr{
										pos:  position{line: 300, col: 36, offset: 10267},
										name: "Section2",
									},
									&ruleRefExpr{
										pos:  position{line: 300, col: 47, offset: 10278},
										name: "Section3",
									},
									&ruleRefExpr{
										pos:  position{line: 300, col: 58, offset: 10289},
										name: "Section4",
									},
									&ruleRefExpr{
										pos:  position{line: 300, col: 69, offset: 10300},
										name: "Section5",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section1_5",
			pos:  position{line: 304, col: 1, offset: 10343},
			expr: &actionExpr{
				pos: position{line: 304, col: 15, offset: 10357},
				run: (*parser).callonSection1_51,
				expr: &seqExpr{
					pos: position{line: 304, col: 15, offset: 10357},
					exprs: []interface{}{
						&andExpr{
							pos: position{line: 304, col: 15, offset: 10357},
							expr: &litMatcher{
								pos:        position{line: 304, col: 16, offset: 10358},
								val:        "=",
								ignoreCase: false,
							},
						},
						&labeledExpr{
							pos:   position{line: 305, col: 5, offset: 10431},
							label: "section",
							expr: &choiceExpr{
								pos: position{line: 305, col: 14, offset: 10440},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 305, col: 14, offset: 10440},
										name: "Section1",
									},
									&ruleRefExpr{
										pos:  position{line: 305, col: 25, offset: 10451},
										name: "Section2",
									},
									&ruleRefExpr{
										pos:  position{line: 305, col: 36, offset: 10462},
										name: "Section3",
									},
									&ruleRefExpr{
										pos:  position{line: 305, col: 47, offset: 10473},
										name: "Section4",
									},
									&ruleRefExpr{
										pos:  position{line: 305, col: 58, offset: 10484},
										name: "Section5",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section2_5",
			pos:  position{line: 309, col: 1, offset: 10527},
			expr: &actionExpr{
				pos: position{line: 309, col: 15, offset: 10541},
				run: (*parser).callonSection2_51,
				expr: &seqExpr{
					pos: position{line: 309, col: 15, offset: 10541},
					exprs: []interface{}{
						&andExpr{
							pos: position{line: 309, col: 15, offset: 10541},
							expr: &litMatcher{
								pos:        position{line: 309, col: 16, offset: 10542},
								val:        "=",
								ignoreCase: false,
							},
						},
						&labeledExpr{
							pos:   position{line: 310, col: 5, offset: 10615},
							label: "section",
							expr: &choiceExpr{
								pos: position{line: 310, col: 14, offset: 10624},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 310, col: 14, offset: 10624},
										name: "Section2",
									},
									&ruleRefExpr{
										pos:  position{line: 310, col: 25, offset: 10635},
										name: "Section3",
									},
									&ruleRefExpr{
										pos:  position{line: 310, col: 36, offset: 10646},
										name: "Section4",
									},
									&ruleRefExpr{
										pos:  position{line: 310, col: 47, offset: 10657},
										name: "Section5",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section3_5",
			pos:  position{line: 314, col: 1, offset: 10700},
			expr: &actionExpr{
				pos: position{line: 314, col: 15, offset: 10714},
				run: (*parser).callonSection3_51,
				expr: &seqExpr{
					pos: position{line: 314, col: 15, offset: 10714},
					exprs: []interface{}{
						&andExpr{
							pos: position{line: 314, col: 15, offset: 10714},
							expr: &litMatcher{
								pos:        position{line: 314, col: 16, offset: 10715},
								val:        "=",
								ignoreCase: false,
							},
						},
						&labeledExpr{
							pos:   position{line: 315, col: 5, offset: 10788},
							label: "section",
							expr: &choiceExpr{
								pos: position{line: 315, col: 14, offset: 10797},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 315, col: 14, offset: 10797},
										name: "Section3",
									},
									&ruleRefExpr{
										pos:  position{line: 315, col: 25, offset: 10808},
										name: "Section4",
									},
									&ruleRefExpr{
										pos:  position{line: 315, col: 36, offset: 10819},
										name: "Section5",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section4_5",
			pos:  position{line: 319, col: 1, offset: 10862},
			expr: &actionExpr{
				pos: position{line: 319, col: 15, offset: 10876},
				run: (*parser).callonSection4_51,
				expr: &seqExpr{
					pos: position{line: 319, col: 15, offset: 10876},
					exprs: []interface{}{
						&andExpr{
							pos: position{line: 319, col: 15, offset: 10876},
							expr: &litMatcher{
								pos:        position{line: 319, col: 16, offset: 10877},
								val:        "=",
								ignoreCase: false,
							},
						},
						&labeledExpr{
							pos:   position{line: 320, col: 5, offset: 10950},
							label: "section",
							expr: &choiceExpr{
								pos: position{line: 320, col: 14, offset: 10959},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 320, col: 14, offset: 10959},
										name: "Section4",
									},
									&ruleRefExpr{
										pos:  position{line: 320, col: 25, offset: 10970},
										name: "Section5",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section0",
			pos:  position{line: 326, col: 1, offset: 11047},
			expr: &actionExpr{
				pos: position{line: 326, col: 13, offset: 11059},
				run: (*parser).callonSection01,
				expr: &seqExpr{
					pos: position{line: 326, col: 13, offset: 11059},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 326, col: 13, offset: 11059},
							label: "header",
							expr: &ruleRefExpr{
								pos:  position{line: 326, col: 21, offset: 11067},
								name: "Section0Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 326, col: 36, offset: 11082},
							label: "elements",
							expr: &zeroOrMoreExpr{
								pos: position{line: 326, col: 46, offset: 11092},
								expr: &ruleRefExpr{
									pos:  position{line: 326, col: 46, offset: 11092},
									name: "Section0Element",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section0Title",
			pos:  position{line: 332, col: 1, offset: 11233},
			expr: &actionExpr{
				pos: position{line: 332, col: 18, offset: 11250},
				run: (*parser).callonSection0Title1,
				expr: &seqExpr{
					pos: position{line: 332, col: 18, offset: 11250},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 330, col: 24, offset: 11224},
							val:        "=",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 330, col: 28, offset: 11228},
							expr: &choiceExpr{
								pos: position{line: 1306, col: 7, offset: 50454},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1306, col: 7, offset: 50454},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1306, col: 13, offset: 50460},
										run: (*parser).callonSection0Title7,
										expr: &litMatcher{
											pos:        position{line: 1306, col: 13, offset: 50460},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 332, col: 38, offset: 11270},
							label: "elements",
							expr: &ruleRefExpr{
								pos:  position{line: 332, col: 48, offset: 11280},
								name: "TitleElements",
							},
						},
						&labeledExpr{
							pos:   position{line: 332, col: 63, offset: 11295},
							label: "id",
							expr: &zeroOrMoreExpr{
								pos: position{line: 332, col: 67, offset: 11299},
								expr: &actionExpr{
									pos: position{line: 180, col: 20, offset: 6467},
									run: (*parser).callonSection0Title13,
									expr: &seqExpr{
										pos: position{line: 180, col: 20, offset: 6467},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 180, col: 20, offset: 6467},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 180, col: 25, offset: 6472},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 1288, col: 7, offset: 50075},
													run: (*parser).callonSection0Title17,
													expr: &oneOrMoreExpr{
														pos: position{line: 1288, col: 7, offset: 50075},
														expr: &choiceExpr{
															pos: position{line: 1288, col: 8, offset: 50076},
															alternatives: []interface{}{
																&actionExpr{
																	pos: position{line: 1264, col: 14, offset: 49515},
																	run: (*parser).callonSection0Title20,
																	expr: &oneOrMoreExpr{
																		pos: position{line: 1264, col: 14, offset: 49515},
																		expr: &charClassMatcher{
																			pos:        position{line: 1264, col: 14, offset: 49515},
																			val:        "[a-zA-Z0-9]",
																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 1288, col: 20, offset: 50088},
																	run: (*parser).callonSection0Title23,
																	expr: &seqExpr{
																		pos: position{line: 1288, col: 21, offset: 50089},
																		exprs: []interface{}{
																			&notExpr{
																				pos: position{line: 1288, col: 21, offset: 50089},
																				expr: &choiceExpr{
																					pos: position{line: 1310, col: 12, offset: 50512},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1310, col: 12, offset: 50512},
																							val:        "\r\n",
																							ignoreCase: false,
																						},
																						&charClassMatcher{
																							pos:        position{line: 1310, col: 21, offset: 50521},
																							val:        "[\\r\\n]",
																							chars:      []rune{'\r', '\n'},
																							ignoreCase: false,
																							inverted:   false,
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 1288, col: 30, offset: 50098},
																				expr: &choiceExpr{
																					pos: position{line: 1306, col: 7, offset: 50454},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1306, col: 7, offset: 50454},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1306, col: 13, offset: 50460},
																							run: (*parser).callonSection0Title32,
																							expr: &litMatcher{
																								pos:        position{line: 1306, col: 13, offset: 50460},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 1288, col: 34, offset: 50102},
																				expr: &litMatcher{
																					pos:        position{line: 1288, col: 35, offset: 50103},
																					val:        "[",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1288, col: 39, offset: 50107},
																				expr: &litMatcher{
																					pos:        position{line: 1288, col: 40, offset: 50108},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1288, col: 44, offset: 50112},
																				expr: &litMatcher{
																					pos:        position{line: 1288, col: 45, offset: 50113},
																					val:        "<<",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1288, col: 50, offset: 50118},
																				expr: &litMatcher{
																					pos:        position{line: 1288, col: 51, offset: 50119},
																					val:        ">>",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1288, col: 56, offset: 50124},
																				expr: &litMatcher{
																					pos:        position{line: 1288, col: 57, offset: 50125},
																					val:        ",",
																					ignoreCase: false,
																				},
																			},
																			&anyMatcher{
																				line: 1288, col: 62, offset: 50130,
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 180, col: 33, offset: 6480},
												val:        "]]",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 180, col: 38, offset: 6485},
												expr: &choiceExpr{
													pos: position{line: 1306, col: 7, offset: 50454},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1306, col: 7, offset: 50454},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1306, col: 13, offset: 50460},
															run: (*parser).callonSection0Title49,
															expr: &litMatcher{
																pos:        position{line: 1306, col: 13, offset: 50460},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1314, col: 8, offset: 50552},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1310, col: 12, offset: 50512},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1310, col: 21, offset: 50521},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1312, col: 8, offset: 50541},
									expr: &anyMatcher{
										line: 1312, col: 9, offset: 50542,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section0TitleWithAttributes",
			pos:  position{line: 336, col: 1, offset: 11414},
			expr: &actionExpr{
				pos: position{line: 336, col: 32, offset: 11445},
				run: (*parser).callonSection0TitleWithAttributes1,
				expr: &seqExpr{
					pos: position{line: 336, col: 32, offset: 11445},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 336, col: 32, offset: 11445},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 336, col: 43, offset: 11456},
								expr: &actionExpr{
									pos: position{line: 164, col: 21, offset: 5763},
									run: (*parser).callonSection0TitleWithAttributes5,
									expr: &seqExpr{
										pos: position{line: 164, col: 21, offset: 5763},
										exprs: []interface{}{
											&andExpr{
												pos: position{line: 164, col: 21, offset: 5763},
												expr: &charClassMatcher{
													pos:        position{line: 164, col: 23, offset: 5765},
													val:        "[[.#]",
													chars:      []rune{'[', '.', '#'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&labeledExpr{
												pos:   position{line: 165, col: 5, offset: 5853},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 165, col: 11, offset: 5859},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 174, col: 14, offset: 6316},
															run: (*parser).callonSection0TitleWithAttributes11,
															expr: &seqExpr{
																pos: position{line: 174, col: 14, offset: 6316},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 174, col: 14, offset: 6316},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 174, col: 19, offset: 6321},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1288, col: 7, offset: 50075},
																			run: (*parser).callonSection0TitleWithAttributes15,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1288, col: 7, offset: 50075},
																				expr: &choiceExpr{
																					pos: position{line: 1288, col: 8, offset: 50076},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection0TitleWithAttributes18,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1288, col: 20, offset: 50088},
																							run: (*parser).callonSection0TitleWithAttributes21,
																							expr: &seqExpr{
																								pos: position{line: 1288, col: 21, offset: 50089},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1288, col: 21, offset: 50089},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 30, offset: 50098},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonSection0TitleWithAttributes30,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 34, offset: 50102},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 35, offset: 50103},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 39, offset: 50107},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 40, offset: 50108},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 44, offset: 50112},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 45, offset: 50113},
																											val:        "<<",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 50, offset: 50118},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 51, offset: 50119},
																											val:        ">>",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 56, offset: 50124},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 57, offset: 50125},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1288, col: 62, offset: 50130,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 174, col: 27, offset: 6329},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 5, offset: 6383},
															run: (*parser).callonSection0TitleWithAttributes44,
															expr: &seqExpr{
																pos: position{line: 176, col: 5, offset: 6383},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 5, offset: 6383},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 10, offset: 6388},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1288, col: 7, offset: 50075},
																			run: (*parser).callonSection0TitleWithAttributes48,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1288, col: 7, offset: 50075},
																				expr: &choiceExpr{
																					pos: position{line: 1288, col: 8, offset: 50076},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection0TitleWithAttributes51,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1288, col: 20, offset: 50088},
																							run: (*parser).callonSection0TitleWithAttributes54,
																							expr: &seqExpr{
																								pos: position{line: 1288, col: 21, offset: 50089},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1288, col: 21, offset: 50089},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 30, offset: 50098},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonSection0TitleWithAttributes63,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 34, offset: 50102},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 35, offset: 50103},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 39, offset: 50107},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 40, offset: 50108},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 44, offset: 50112},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 45, offset: 50113},
																											val:        "<<",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 50, offset: 50118},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 51, offset: 50119},
																											val:        ">>",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 56, offset: 50124},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 57, offset: 50125},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1288, col: 62, offset: 50130,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 18, offset: 6396},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 186, col: 17, offset: 6699},
															run: (*parser).callonSection0TitleWithAttributes77,
															expr: &seqExpr{
																pos: position{line: 186, col: 17, offset: 6699},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 186, col: 17, offset: 6699},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 186, col: 21, offset: 6703},
																		expr: &litMatcher{
																			pos:        position{line: 186, col: 22, offset: 6704},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 186, col: 26, offset: 6708},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonSection0TitleWithAttributes85,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 186, col: 30, offset: 6712},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 186, col: 37, offset: 6719},
																			run: (*parser).callonSection0TitleWithAttributes88,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 186, col: 37, offset: 6719},
																				expr: &choiceExpr{
																					pos: position{line: 186, col: 38, offset: 6720},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection0TitleWithAttributes91,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonSection0TitleWithAttributes94,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection0TitleWithAttributes98,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 186, col: 59, offset: 6741},
																							run: (*parser).callonSection0TitleWithAttributes100,
																							expr: &seqExpr{
																								pos: position{line: 186, col: 60, offset: 6742},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 186, col: 60, offset: 6742},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 186, col: 70, offset: 6752,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 196, col: 16, offset: 6990},
															run: (*parser).callonSection0TitleWithAttributes107,
															expr: &seqExpr{
																pos: position{line: 196, col: 16, offset: 6990},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 196, col: 16, offset: 6990},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 196, col: 21, offset: 6995},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonSection0TitleWithAttributes113,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 196, col: 25, offset: 6999},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 196, col: 31, offset: 7005},
																			run: (*parser).callonSection0TitleWithAttributes116,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 196, col: 31, offset: 7005},
																				expr: &choiceExpr{
																					pos: position{line: 196, col: 32, offset: 7006},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection0TitleWithAttributes119,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonSection0TitleWithAttributes122,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection0TitleWithAttributes126,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 196, col: 53, offset: 7027},
																							run: (*parser).callonSection0TitleWithAttributes128,
																							expr: &seqExpr{
																								pos: position{line: 196, col: 54, offset: 7028},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 196, col: 54, offset: 7028},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 196, col: 63, offset: 7037},
																										expr: &litMatcher{
																											pos:        position{line: 196, col: 64, offset: 7038},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 196, col: 69, offset: 7043,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 200, col: 4, offset: 7118},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 210, col: 21, offset: 7481},
															run: (*parser).callonSection0TitleWithAttributes138,
															expr: &litMatcher{
																pos:        position{line: 210, col: 21, offset: 7481},
																val:        "[source]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 212, col: 5, offset: 7539},
															run: (*parser).callonSection0TitleWithAttributes140,
															expr: &seqExpr{
																pos: position{line: 212, col: 5, offset: 7539},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 212, col: 5, offset: 7539},
																		val:        "[source,",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 212, col: 16, offset: 7550},
																		label: "language",
																		expr: &actionExpr{
																			pos: position{line: 212, col: 26, offset: 7560},
																			run: (*parser).callonSection0TitleWithAttributes144,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 212, col: 26, offset: 7560},
																				expr: &choiceExpr{
																					pos: position{line: 212, col: 27, offset: 7561},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection0TitleWithAttributes147,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonSection0TitleWithAttributes150,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection0TitleWithAttributes154,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 212, col: 48, offset: 7582},
																							run: (*parser).callonSection0TitleWithAttributes156,
																							expr: &seqExpr{
																								pos: position{line: 212, col: 49, offset: 7583},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 212, col: 49, offset: 7583},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 212, col: 58, offset: 7592},
																										expr: &litMatcher{
																											pos:        position{line: 212, col: 59, offset: 7593},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 212, col: 64, offset: 7598,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 216, col: 7, offset: 7688},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 247, col: 20, offset: 8646},
															run: (*parser).callonSection0TitleWithAttributes166,
															expr: &seqExpr{
																pos: position{line: 247, col: 20, offset: 8646},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 247, col: 20, offset: 8646},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 24, offset: 8650},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonSection0TitleWithAttributes170,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 247, col: 41, offset: 8667},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonSection0TitleWithAttributes175,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 45, offset: 8671},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 49, offset: 8675},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 286, col: 16, offset: 9839},
																			run: (*parser).callonSection0TitleWithAttributes179,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 286, col: 16, offset: 9839},
																				expr: &choiceExpr{
																					pos: position{line: 286, col: 17, offset: 9840},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection0TitleWithAttributes182,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonSection0TitleWithAttributes185,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection0TitleWithAttributes189,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 286, col: 38, offset: 9861},
																							run: (*parser).callonSection0TitleWithAttributes191,
																							expr: &seqExpr{
																								pos: position{line: 286, col: 39, offset: 9862},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 286, col: 39, offset: 9862},
																										expr: &choiceExpr{
																											pos: position{line: 1314, col: 8, offset: 50552},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																												&notExpr{
																													pos: position{line: 1312, col: 8, offset: 50541},
																													expr: &anyMatcher{
																														line: 1312, col: 9, offset: 50542,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 44, offset: 9867},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 45, offset: 9868},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 49, offset: 9872},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 50, offset: 9873},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 286, col: 55, offset: 9878,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 70, offset: 8696},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 74, offset: 8700},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 292, col: 15, offset: 9967},
																			run: (*parser).callonSection0TitleWithAttributes206,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 292, col: 15, offset: 9967},
																				expr: &choiceExpr{
																					pos: position{line: 292, col: 16, offset: 9968},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection0TitleWithAttributes209,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonSection0TitleWithAttributes212,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection0TitleWithAttributes216,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&seqExpr{
																							pos: position{line: 292, col: 38, offset: 9990},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 292, col: 38, offset: 9990},
																									expr: &choiceExpr{
																										pos: position{line: 1314, col: 8, offset: 50552},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1310, col: 12, offset: 50512},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1310, col: 21, offset: 50521},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																											&notExpr{
																												pos: position{line: 1312, col: 8, offset: 50541},
																												expr: &anyMatcher{
																													line: 1312, col: 9, offset: 50542,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 292, col: 43, offset: 9995},
																									expr: &litMatcher{
																										pos:        position{line: 292, col: 44, offset: 9996},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 292, col: 48, offset: 10000},
																									expr: &litMatcher{
																										pos:        position{line: 292, col: 49, offset: 10001},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 292, col: 54, offset: 10006,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 93, offset: 8719},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 251, col: 1, offset: 8846},
															run: (*parser).callonSection0TitleWithAttributes231,
															expr: &seqExpr{
																pos: position{line: 251, col: 1, offset: 8846},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 251, col: 1, offset: 8846},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 251, col: 5, offset: 8850},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonSection0TitleWithAttributes235,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 251, col: 22, offset: 8867},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonSection0TitleWithAttributes240,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 251, col: 26, offset: 8871},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 251, col: 30, offset: 8875},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 286, col: 16, offset: 9839},
																			run: (*parser).callonSection0TitleWithAttributes244,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 286, col: 16, offset: 9839},
																				expr: &choiceExpr{
																					pos: position{line: 286, col: 17, offset: 9840},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection0TitleWithAttributes247,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonSection0TitleWithAttributes250,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection0TitleWithAttributes254,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 286, col: 38, offset: 9861},
																							run: (*parser).callonSection0TitleWithAttributes256,
																							expr: &seqExpr{
																								pos: position{line: 286, col: 39, offset: 9862},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 286, col: 39, offset: 9862},
																										expr: &choiceExpr{
																											pos: position{line: 1314, col: 8, offset: 50552},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																												&notExpr{
																													pos: position{line: 1312, col: 8, offset: 50541},
																													expr: &anyMatcher{
																														line: 1312, col: 9, offset: 50542,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 44, offset: 9867},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 45, offset: 9868},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 49, offset: 9872},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 50, offset: 9873},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 286, col: 55, offset: 9878,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 251, col: 51, offset: 8896},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 255, col: 1, offset: 9011},
															run: (*parser).callonSection0TitleWithAttributes270,
															expr: &seqExpr{
																pos: position{line: 255, col: 1, offset: 9011},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 255, col: 1, offset: 9011},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 255, col: 5, offset: 9015},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonSection0TitleWithAttributes274,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 255, col: 22, offset: 9032},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonSection0TitleWithAttributes279,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 255, col: 26, offset: 9036},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 263, col: 20, offset: 9179},
															run: (*parser).callonSection0TitleWithAttributes282,
															expr: &seqExpr{
																pos: position{line: 263, col: 20, offset: 9179},
																exprs: []interface{}{
																	&labeledExpr{
																		pos:   position{line: 263, col: 20, offset: 9179},
																		label: "attribute",
																		expr: &choiceExpr{
																			pos: position{line: 263, col: 31, offset: 9190},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 263, col: 31, offset: 9190},
																					run: (*parser).callonSection0TitleWithAttributes286,
																					expr: &seqExpr{
																						pos: position{line: 263, col: 31, offset: 9190},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 263, col: 31, offset: 9190},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 35, offset: 9194},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonSection0TitleWithAttributes290,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 263, col: 52, offset: 9211},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection0TitleWithAttributes295,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 56, offset: 9215},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 60, offset: 9219},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 286, col: 16, offset: 9839},
																									run: (*parser).callonSection0TitleWithAttributes299,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 286, col: 16, offset: 9839},
																										expr: &choiceExpr{
																											pos: position{line: 286, col: 17, offset: 9840},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1264, col: 14, offset: 49515},
																													run: (*parser).callonSection0TitleWithAttributes302,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1264, col: 14, offset: 49515},
																														expr: &charClassMatcher{
																															pos:        position{line: 1264, col: 14, offset: 49515},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1278, col: 11, offset: 49909},
																													run: (*parser).callonSection0TitleWithAttributes305,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1278, col: 11, offset: 49909},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonSection0TitleWithAttributes309,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 286, col: 38, offset: 9861},
																													run: (*parser).callonSection0TitleWithAttributes311,
																													expr: &seqExpr{
																														pos: position{line: 286, col: 39, offset: 9862},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 286, col: 39, offset: 9862},
																																expr: &choiceExpr{
																																	pos: position{line: 1314, col: 8, offset: 50552},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1310, col: 12, offset: 50512},
																																			val:        "\r\n",
																																			ignoreCase: false,
																																		},
																																		&charClassMatcher{
																																			pos:        position{line: 1310, col: 21, offset: 50521},
																																			val:        "[\\r\\n]",
																																			chars:      []rune{'\r', '\n'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																		&notExpr{
																																			pos: position{line: 1312, col: 8, offset: 50541},
																																			expr: &anyMatcher{
																																				line: 1312, col: 9, offset: 50542,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 44, offset: 9867},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 45, offset: 9868},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 49, offset: 9872},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 50, offset: 9873},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 286, col: 55, offset: 9878,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 81, offset: 9240},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 85, offset: 9244},
																								label: "title",
																								expr: &actionExpr{
																									pos: position{line: 292, col: 15, offset: 9967},
																									run: (*parser).callonSection0TitleWithAttributes326,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 292, col: 15, offset: 9967},
																										expr: &choiceExpr{
																											pos: position{line: 292, col: 16, offset: 9968},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1264, col: 14, offset: 49515},
																													run: (*parser).callonSection0TitleWithAttributes329,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1264, col: 14, offset: 49515},
																														expr: &charClassMatcher{
																															pos:        position{line: 1264, col: 14, offset: 49515},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1278, col: 11, offset: 49909},
																													run: (*parser).callonSection0TitleWithAttributes332,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1278, col: 11, offset: 49909},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonSection0TitleWithAttributes336,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&seqExpr{
																													pos: position{line: 292, col: 38, offset: 9990},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 292, col: 38, offset: 9990},
																															expr: &choiceExpr{
																																pos: position{line: 1314, col: 8, offset: 50552},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1310, col: 12, offset: 50512},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1310, col: 21, offset: 50521},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																	&notExpr{
																																		pos: position{line: 1312, col: 8, offset: 50541},
																																		expr: &anyMatcher{
																																			line: 1312, col: 9, offset: 50542,
																																		},
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 292, col: 43, offset: 9995},
																															expr: &litMatcher{
																																pos:        position{line: 292, col: 44, offset: 9996},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 292, col: 48, offset: 10000},
																															expr: &litMatcher{
																																pos:        position{line: 292, col: 49, offset: 10001},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 292, col: 54, offset: 10006,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 104, offset: 9263},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 267, col: 5, offset: 9406},
																					run: (*parser).callonSection0TitleWithAttributes351,
																					expr: &seqExpr{
																						pos: position{line: 267, col: 5, offset: 9406},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 267, col: 5, offset: 9406},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 267, col: 9, offset: 9410},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonSection0TitleWithAttributes355,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 267, col: 26, offset: 9427},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection0TitleWithAttributes360,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 267, col: 30, offset: 9431},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 267, col: 34, offset: 9435},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 286, col: 16, offset: 9839},
																									run: (*parser).callonSection0TitleWithAttributes364,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 286, col: 16, offset: 9839},
																										expr: &choiceExpr{
																											pos: position{line: 286, col: 17, offset: 9840},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1264, col: 14, offset: 49515},
																													run: (*parser).callonSection0TitleWithAttributes367,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1264, col: 14, offset: 49515},
																														expr: &charClassMatcher{
																															pos:        position{line: 1264, col: 14, offset: 49515},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1278, col: 11, offset: 49909},
																													run: (*parser).callonSection0TitleWithAttributes370,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1278, col: 11, offset: 49909},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonSection0TitleWithAttributes374,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 286, col: 38, offset: 9861},
																													run: (*parser).callonSection0TitleWithAttributes376,
																													expr: &seqExpr{
																														pos: position{line: 286, col: 39, offset: 9862},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 286, col: 39, offset: 9862},
																																expr: &choiceExpr{
																																	pos: position{line: 1314, col: 8, offset: 50552},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1310, col: 12, offset: 50512},
																																			val:        "\r\n",
																																			ignoreCase: false,
																																		},
																																		&charClassMatcher{
																																			pos:        position{line: 1310, col: 21, offset: 50521},
																																			val:        "[\\r\\n]",
																																			chars:      []rune{'\r', '\n'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																		&notExpr{
																																			pos: position{line: 1312, col: 8, offset: 50541},
																																			expr: &anyMatcher{
																																				line: 1312, col: 9, offset: 50542,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 44, offset: 9867},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 45, offset: 9868},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 49, offset: 9872},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 50, offset: 9873},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 286, col: 55, offset: 9878,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 267, col: 55, offset: 9456},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 271, col: 5, offset: 9587},
																					run: (*parser).callonSection0TitleWithAttributes390,
																					expr: &seqExpr{
																						pos: position{line: 271, col: 5, offset: 9587},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 271, col: 5, offset: 9587},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 271, col: 9, offset: 9591},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonSection0TitleWithAttributes394,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 271, col: 26, offset: 9608},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection0TitleWithAttributes399,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 271, col: 30, offset: 9612},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&stateCodeExpr{
																		pos: position{line: 275, col: 1, offset: 9688},
																		run: (*parser).callonSection0TitleWithAttributes402,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 205, col: 30, offset: 7283},
															run: (*parser).callonSection0TitleWithAttributes403,
															expr: &seqExpr{
																pos: position{line: 205, col: 30, offset: 7283},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 205, col: 30, offset: 7283},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 205, col: 34, offset: 7287},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 598, col: 19, offset: 22218},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 598, col: 19, offset: 22218},
																					run: (*parser).callonSection0TitleWithAttributes408,
																					expr: &litMatcher{
																						pos:        position{line: 598, col: 19, offset: 22218},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 600, col: 9, offset: 22264},
																					run: (*parser).callonSection0TitleWithAttributes410,
																					expr: &litMatcher{
																						pos:        position{line: 600, col: 9, offset: 22264},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 602, col: 9, offset: 22312},
																					run: (*parser).callonSection0TitleWithAttributes412,
																					expr: &litMatcher{
																						pos:        position{line: 602, col: 9, offset: 22312},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 604, col: 9, offset: 22370},
																					run: (*parser).callonSection0TitleWithAttributes414,
																					expr: &litMatcher{
																						pos:        position{line: 604, col: 9, offset: 22370},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 606, col: 9, offset: 22424},
																					run: (*parser).callonSection0TitleWithAttributes416,
																					expr: &litMatcher{
																						pos:        position{line: 606, col: 9, offset: 22424},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 205, col: 53, offset: 7306},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 243, col: 21, offset: 8543},
															run: (*parser).callonSection0TitleWithAttributes419,
															expr: &litMatcher{
																pos:        position{line: 243, col: 21, offset: 8543},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 221, col: 19, offset: 7839},
															run: (*parser).callonSection0TitleWithAttributes421,
															expr: &seqExpr{
																pos: position{line: 221, col: 19, offset: 7839},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 221, col: 19, offset: 7839},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 221, col: 23, offset: 7843},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonSection0TitleWithAttributes427,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 221, col: 27, offset: 7847},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 221, col: 38, offset: 7858},
																			expr: &choiceExpr{
																				pos: position{line: 225, col: 21, offset: 7971},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 225, col: 21, offset: 7971},
																						run: (*parser).callonSection0TitleWithAttributes432,
																						expr: &seqExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 225, col: 21, offset: 7971},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										run: (*parser).callonSection0TitleWithAttributes435,
																										expr: &seqExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9116},
																														run: (*parser).callonSection0TitleWithAttributes438,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9116},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 28, offset: 8242},
																													expr: &actionExpr{
																														pos: position{line: 282, col: 14, offset: 9780},
																														run: (*parser).callonSection0TitleWithAttributes441,
																														expr: &litMatcher{
																															pos:        position{line: 282, col: 14, offset: 9780},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 39, offset: 8253},
																													expr: &actionExpr{
																														pos: position{line: 1229, col: 16, offset: 48642},
																														run: (*parser).callonSection0TitleWithAttributes444,
																														expr: &litMatcher{
																															pos:        position{line: 1229, col: 16, offset: 48642},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 231, col: 52, offset: 8266},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 231, col: 56, offset: 8270},
																														expr: &choiceExpr{
																															pos: position{line: 231, col: 57, offset: 8271},
																															alternatives: []interface{}{
																																&actionExpr{
																																	pos: position{line: 1264, col: 14, offset: 49515},
																																	run: (*parser).callonSection0TitleWithAttributes449,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		expr: &charClassMatcher{
																																			pos:        position{line: 1264, col: 14, offset: 49515},
																																			val:        "[a-zA-Z0-9]",
																																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 1278, col: 11, offset: 49909},
																																	run: (*parser).callonSection0TitleWithAttributes452,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		expr: &choiceExpr{
																																			pos: position{line: 1306, col: 7, offset: 50454},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1306, col: 7, offset: 50454},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 1306, col: 13, offset: 50460},
																																					run: (*parser).callonSection0TitleWithAttributes456,
																																					expr: &litMatcher{
																																						pos:        position{line: 1306, col: 13, offset: 50460},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 231, col: 78, offset: 8292},
																																	run: (*parser).callonSection0TitleWithAttributes458,
																																	expr: &seqExpr{
																																		pos: position{line: 231, col: 79, offset: 8293},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 231, col: 79, offset: 8293},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 80, offset: 8294},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 84, offset: 8298},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 85, offset: 8299},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 89, offset: 8303},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 90, offset: 8304},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 231, col: 95, offset: 8309,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 225, col: 40, offset: 7990},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 225, col: 44, offset: 7994},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 237, col: 19, offset: 8403},
																										run: (*parser).callonSection0TitleWithAttributes469,
																										expr: &labeledExpr{
																											pos:   position{line: 237, col: 19, offset: 8403},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 237, col: 25, offset: 8409},
																												expr: &choiceExpr{
																													pos: position{line: 237, col: 26, offset: 8410},
																													alternatives: []interface{}{
																														&actionExpr{
																															pos: position{line: 1264, col: 14, offset: 49515},
																															run: (*parser).callonSection0TitleWithAttributes473,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1264, col: 14, offset: 49515},
																																expr: &charClassMatcher{
																																	pos:        position{line: 1264, col: 14, offset: 49515},
																																	val:        "[a-zA-Z0-9]",
																																	ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 1278, col: 11, offset: 49909},
																															run: (*parser).callonSection0TitleWithAttributes476,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1278, col: 11, offset: 49909},
																																expr: &choiceExpr{
																																	pos: position{line: 1306, col: 7, offset: 50454},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1306, col: 7, offset: 50454},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 1306, col: 13, offset: 50460},
																																			run: (*parser).callonSection0TitleWithAttributes480,
																																			expr: &litMatcher{
																																				pos:        position{line: 1306, col: 13, offset: 50460},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 237, col: 47, offset: 8431},
																															run: (*parser).callonSection0TitleWithAttributes482,
																															expr: &seqExpr{
																																pos: position{line: 237, col: 48, offset: 8432},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 237, col: 48, offset: 8432},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 49, offset: 8433},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 237, col: 53, offset: 8437},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 54, offset: 8438},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 237, col: 58, offset: 8442},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 59, offset: 8443},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 237, col: 64, offset: 8448,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 225, col: 67, offset: 8017},
																									expr: &litMatcher{
																										pos:        position{line: 225, col: 67, offset: 8017},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 225, col: 72, offset: 8022},
																									expr: &choiceExpr{
																										pos: position{line: 1306, col: 7, offset: 50454},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1306, col: 7, offset: 50454},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1306, col: 13, offset: 50460},
																												run: (*parser).callonSection0TitleWithAttributes496,
																												expr: &litMatcher{
																													pos:        position{line: 1306, col: 13, offset: 50460},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 227, col: 5, offset: 8106},
																						run: (*parser).callonSection0TitleWithAttributes498,
																						expr: &seqExpr{
																							pos: position{line: 227, col: 5, offset: 8106},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 227, col: 5, offset: 8106},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										run: (*parser).callonSection0TitleWithAttributes501,
																										expr: &seqExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9116},
																														run: (*parser).callonSection0TitleWithAttributes504,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9116},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 28, offset: 8242},
																													expr: &actionExpr{
																														pos: position{line: 282, col: 14, offset: 9780},
																														run: (*parser).callonSection0TitleWithAttributes507,
																														expr: &litMatcher{
																															pos:        position{line: 282, col: 14, offset: 9780},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 39, offset: 8253},
																													expr: &actionExpr{
																														pos: position{line: 1229, col: 16, offset: 48642},
																														run: (*parser).callonSection0TitleWithAttributes510,
																														expr: &litMatcher{
																															pos:        position{line: 1229, col: 16, offset: 48642},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 231, col: 52, offset: 8266},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 231, col: 56, offset: 8270},
																														expr: &choiceExpr{
																															pos: position{line: 231, col: 57, offset: 8271},
																															alternatives: []interface{}{
																																&actionExpr{
																																	pos: position{line: 1264, col: 14, offset: 49515},
																																	run: (*parser).callonSection0TitleWithAttributes515,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		expr: &charClassMatcher{
																																			pos:        position{line: 1264, col: 14, offset: 49515},
																																			val:        "[a-zA-Z0-9]",
																																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 1278, col: 11, offset: 49909},
																																	run: (*parser).callonSection0TitleWithAttributes518,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		expr: &choiceExpr{
																																			pos: position{line: 1306, col: 7, offset: 50454},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1306, col: 7, offset: 50454},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 1306, col: 13, offset: 50460},
																																					run: (*parser).callonSection0TitleWithAttributes522,
																																					expr: &litMatcher{
																																						pos:        position{line: 1306, col: 13, offset: 50460},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 231, col: 78, offset: 8292},
																																	run: (*parser).callonSection0TitleWithAttributes524,
																																	expr: &seqExpr{
																																		pos: position{line: 231, col: 79, offset: 8293},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 231, col: 79, offset: 8293},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 80, offset: 8294},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 84, offset: 8298},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 85, offset: 8299},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 89, offset: 8303},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 90, offset: 8304},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 231, col: 95, offset: 8309,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 227, col: 24, offset: 8125},
																									expr: &litMatcher{
																										pos:        position{line: 227, col: 24, offset: 8125},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 227, col: 29, offset: 8130},
																									expr: &choiceExpr{
																										pos: position{line: 1306, col: 7, offset: 50454},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1306, col: 7, offset: 50454},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1306, col: 13, offset: 50460},
																												run: (*parser).callonSection0TitleWithAttributes538,
																												expr: &litMatcher{
																													pos:        position{line: 1306, col: 13, offset: 50460},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 221, col: 59, offset: 7879},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 165, col: 170, offset: 6018},
												expr: &choiceExpr{
													pos: position{line: 1306, col: 7, offset: 50454},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1306, col: 7, offset: 50454},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1306, col: 13, offset: 50460},
															run: (*parser).callonSection0TitleWithAttributes544,
															expr: &litMatcher{
																pos:        position{line: 1306, col: 13, offset: 50460},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1314, col: 8, offset: 50552},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1310, col: 12, offset: 50512},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1310, col: 21, offset: 50521},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1312, col: 8, offset: 50541},
														expr: &anyMatcher{
															line: 1312, col: 9, offset: 50542,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 337, col: 5, offset: 11481},
							label: "title",
							expr: &ruleRefExpr{
								pos:  position{line: 337, col: 12, offset: 11488},
								name: "Section0Title",
							},
						},
					},
				},
			},
		},
		{
			name: "Section0Element",
			pos:  position{line: 341, col: 1, offset: 11579},
			expr: &actionExpr{
				pos: position{line: 341, col: 20, offset: 11598},
				run: (*parser).callonSection0Element1,
				expr: &seqExpr{
					pos: position{line: 341, col: 20, offset: 11598},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 341, col: 20, offset: 11598},
							expr: &seqExpr{
								pos: position{line: 330, col: 24, offset: 11224},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 330, col: 24, offset: 11224},
										val:        "=",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 330, col: 28, offset: 11228},
										expr: &choiceExpr{
											pos: position{line: 1306, col: 7, offset: 50454},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1306, col: 7, offset: 50454},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1306, col: 13, offset: 50460},
													run: (*parser).callonSection0Element9,
													expr: &litMatcher{
														pos:        position{line: 1306, col: 13, offset: 50460},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 342, col: 5, offset: 11623},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 342, col: 16, offset: 11634},
								expr: &actionExpr{
									pos: position{line: 164, col: 21, offset: 5763},
									run: (*parser).callonSection0Element13,
									expr: &seqExpr{
										pos: position{line: 164, col: 21, offset: 5763},
										exprs: []interface{}{
											&andExpr{
												pos: position{line: 164, col: 21, offset: 5763},
												expr: &charClassMatcher{
													pos:        position{line: 164, col: 23, offset: 5765},
													val:        "[[.#]",
													chars:      []rune{'[', '.', '#'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&labeledExpr{
												pos:   position{line: 165, col: 5, offset: 5853},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 165, col: 11, offset: 5859},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 174, col: 14, offset: 6316},
															run: (*parser).callonSection0Element19,
															expr: &seqExpr{
																pos: position{line: 174, col: 14, offset: 6316},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 174, col: 14, offset: 6316},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 174, col: 19, offset: 6321},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1288, col: 7, offset: 50075},
																			run: (*parser).callonSection0Element23,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1288, col: 7, offset: 50075},
																				expr: &choiceExpr{
																					pos: position{line: 1288, col: 8, offset: 50076},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection0Element26,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1288, col: 20, offset: 50088},
																							run: (*parser).callonSection0Element29,
																							expr: &seqExpr{
																								pos: position{line: 1288, col: 21, offset: 50089},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1288, col: 21, offset: 50089},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 30, offset: 50098},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonSection0Element38,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 34, offset: 50102},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 35, offset: 50103},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 39, offset: 50107},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 40, offset: 50108},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 44, offset: 50112},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 45, offset: 50113},
																											val:        "<<",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 50, offset: 50118},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 51, offset: 50119},
																											val:        ">>",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 56, offset: 50124},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 57, offset: 50125},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1288, col: 62, offset: 50130,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 174, col: 27, offset: 6329},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 5, offset: 6383},
															run: (*parser).callonSection0Element52,
															expr: &seqExpr{
																pos: position{line: 176, col: 5, offset: 6383},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 5, offset: 6383},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 10, offset: 6388},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1288, col: 7, offset: 50075},
																			run: (*parser).callonSection0Element56,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1288, col: 7, offset: 50075},
																				expr: &choiceExpr{
																					pos: position{line: 1288, col: 8, offset: 50076},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection0Element59,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1288, col: 20, offset: 50088},
																							run: (*parser).callonSection0Element62,
																							expr: &seqExpr{
																								pos: position{line: 1288, col: 21, offset: 50089},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1288, col: 21, offset: 50089},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 30, offset: 50098},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonSection0Element71,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 34, offset: 50102},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 35, offset: 50103},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 39, offset: 50107},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 40, offset: 50108},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 44, offset: 50112},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 45, offset: 50113},
																											val:        "<<",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 50, offset: 50118},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 51, offset: 50119},
																											val:        ">>",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 56, offset: 50124},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 57, offset: 50125},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1288, col: 62, offset: 50130,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 18, offset: 6396},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 186, col: 17, offset: 6699},
															run: (*parser).callonSection0Element85,
															expr: &seqExpr{
																pos: position{line: 186, col: 17, offset: 6699},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 186, col: 17, offset: 6699},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 186, col: 21, offset: 6703},
																		expr: &litMatcher{
																			pos:        position{line: 186, col: 22, offset: 6704},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 186, col: 26, offset: 6708},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonSection0Element93,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 186, col: 30, offset: 6712},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 186, col: 37, offset: 6719},
																			run: (*parser).callonSection0Element96,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 186, col: 37, offset: 6719},
																				expr: &choiceExpr{
																					pos: position{line: 186, col: 38, offset: 6720},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection0Element99,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonSection0Element102,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection0Element106,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 186, col: 59, offset: 6741},
																							run: (*parser).callonSection0Element108,
																							expr: &seqExpr{
																								pos: position{line: 186, col: 60, offset: 6742},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 186, col: 60, offset: 6742},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 186, col: 70, offset: 6752,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 196, col: 16, offset: 6990},
															run: (*parser).callonSection0Element115,
															expr: &seqExpr{
																pos: position{line: 196, col: 16, offset: 6990},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 196, col: 16, offset: 6990},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 196, col: 21, offset: 6995},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonSection0Element121,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 196, col: 25, offset: 6999},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 196, col: 31, offset: 7005},
																			run: (*parser).callonSection0Element124,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 196, col: 31, offset: 7005},
																				expr: &choiceExpr{
																					pos: position{line: 196, col: 32, offset: 7006},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection0Element127,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonSection0Element130,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection0Element134,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 196, col: 53, offset: 7027},
																							run: (*parser).callonSection0Element136,
																							expr: &seqExpr{
																								pos: position{line: 196, col: 54, offset: 7028},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 196, col: 54, offset: 7028},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 196, col: 63, offset: 7037},
																										expr: &litMatcher{
																											pos:        position{line: 196, col: 64, offset: 7038},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 196, col: 69, offset: 7043,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 200, col: 4, offset: 7118},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 210, col: 21, offset: 7481},
															run: (*parser).callonSection0Element146,
															expr: &litMatcher{
																pos:        position{line: 210, col: 21, offset: 7481},
																val:        "[source]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 212, col: 5, offset: 7539},
															run: (*parser).callonSection0Element148,
															expr: &seqExpr{
																pos: position{line: 212, col: 5, offset: 7539},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 212, col: 5, offset: 7539},
																		val:        "[source,",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 212, col: 16, offset: 7550},
																		label: "language",
																		expr: &actionExpr{
																			pos: position{line: 212, col: 26, offset: 7560},
																			run: (*parser).callonSection0Element152,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 212, col: 26, offset: 7560},
																				expr: &choiceExpr{
																					pos: position{line: 212, col: 27, offset: 7561},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection0Element155,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonSection0Element158,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection0Element162,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 212, col: 48, offset: 7582},
																							run: (*parser).callonSection0Element164,
																							expr: &seqExpr{
																								pos: position{line: 212, col: 49, offset: 7583},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 212, col: 49, offset: 7583},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 212, col: 58, offset: 7592},
																										expr: &litMatcher{
																											pos:        position{line: 212, col: 59, offset: 7593},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 212, col: 64, offset: 7598,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 216, col: 7, offset: 7688},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 247, col: 20, offset: 8646},
															run: (*parser).callonSection0Element174,
															expr: &seqExpr{
																pos: position{line: 247, col: 20, offset: 8646},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 247, col: 20, offset: 8646},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 24, offset: 8650},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonSection0Element178,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 247, col: 41, offset: 8667},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonSection0Element183,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 45, offset: 8671},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 49, offset: 8675},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 286, col: 16, offset: 9839},
																			run: (*parser).callonSection0Element187,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 286, col: 16, offset: 9839},
																				expr: &choiceExpr{
																					pos: position{line: 286, col: 17, offset: 9840},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection0Element190,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonSection0Element193,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection0Element197,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 286, col: 38, offset: 9861},
																							run: (*parser).callonSection0Element199,
																							expr: &seqExpr{
																								pos: position{line: 286, col: 39, offset: 9862},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 286, col: 39, offset: 9862},
																										expr: &choiceExpr{
																											pos: position{line: 1314, col: 8, offset: 50552},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																												&notExpr{
																													pos: position{line: 1312, col: 8, offset: 50541},
																													expr: &anyMatcher{
																														line: 1312, col: 9, offset: 50542,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 44, offset: 9867},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 45, offset: 9868},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 49, offset: 9872},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 50, offset: 9873},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 286, col: 55, offset: 9878,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 70, offset: 8696},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 74, offset: 8700},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 292, col: 15, offset: 9967},
																			run: (*parser).callonSection0Element214,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 292, col: 15, offset: 9967},
																				expr: &choiceExpr{
																					pos: position{line: 292, col: 16, offset: 9968},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection0Element217,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonSection0Element220,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection0Element224,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&seqExpr{
																							pos: position{line: 292, col: 38, offset: 9990},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 292, col: 38, offset: 9990},
																									expr: &choiceExpr{
																										pos: position{line: 1314, col: 8, offset: 50552},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1310, col: 12, offset: 50512},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1310, col: 21, offset: 50521},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																											&notExpr{
																												pos: position{line: 1312, col: 8, offset: 50541},
																												expr: &anyMatcher{
																													line: 1312, col: 9, offset: 50542,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 292, col: 43, offset: 9995},
																									expr: &litMatcher{
																										pos:        position{line: 292, col: 44, offset: 9996},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 292, col: 48, offset: 10000},
																									expr: &litMatcher{
																										pos:        position{line: 292, col: 49, offset: 10001},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 292, col: 54, offset: 10006,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 93, offset: 8719},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 251, col: 1, offset: 8846},
															run: (*parser).callonSection0Element239,
															expr: &seqExpr{
																pos: position{line: 251, col: 1, offset: 8846},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 251, col: 1, offset: 8846},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 251, col: 5, offset: 8850},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonSection0Element243,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 251, col: 22, offset: 8867},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonSection0Element248,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 251, col: 26, offset: 8871},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 251, col: 30, offset: 8875},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 286, col: 16, offset: 9839},
																			run: (*parser).callonSection0Element252,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 286, col: 16, offset: 9839},
																				expr: &choiceExpr{
																					pos: position{line: 286, col: 17, offset: 9840},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection0Element255,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonSection0Element258,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection0Element262,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 286, col: 38, offset: 9861},
																							run: (*parser).callonSection0Element264,
																							expr: &seqExpr{
																								pos: position{line: 286, col: 39, offset: 9862},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 286, col: 39, offset: 9862},
																										expr: &choiceExpr{
																											pos: position{line: 1314, col: 8, offset: 50552},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																												&notExpr{
																													pos: position{line: 1312, col: 8, offset: 50541},
																													expr: &anyMatcher{
																														line: 1312, col: 9, offset: 50542,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 44, offset: 9867},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 45, offset: 9868},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 49, offset: 9872},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 50, offset: 9873},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 286, col: 55, offset: 9878,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 251, col: 51, offset: 8896},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 255, col: 1, offset: 9011},
															run: (*parser).callonSection0Element278,
															expr: &seqExpr{
																pos: position{line: 255, col: 1, offset: 9011},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 255, col: 1, offset: 9011},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 255, col: 5, offset: 9015},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonSection0Element282,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 255, col: 22, offset: 9032},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonSection0Element287,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 255, col: 26, offset: 9036},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 263, col: 20, offset: 9179},
															run: (*parser).callonSection0Element290,
															expr: &seqExpr{
																pos: position{line: 263, col: 20, offset: 9179},
																exprs: []interface{}{
																	&labeledExpr{
																		pos:   position{line: 263, col: 20, offset: 9179},
																		label: "attribute",
																		expr: &choiceExpr{
																			pos: position{line: 263, col: 31, offset: 9190},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 263, col: 31, offset: 9190},
																					run: (*parser).callonSection0Element294,
																					expr: &seqExpr{
																						pos: position{line: 263, col: 31, offset: 9190},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 263, col: 31, offset: 9190},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 35, offset: 9194},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonSection0Element298,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 263, col: 52, offset: 9211},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection0Element303,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 56, offset: 9215},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 60, offset: 9219},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 286, col: 16, offset: 9839},
																									run: (*parser).callonSection0Element307,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 286, col: 16, offset: 9839},
																										expr: &choiceExpr{
																											pos: position{line: 286, col: 17, offset: 9840},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1264, col: 14, offset: 49515},
																													run: (*parser).callonSection0Element310,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1264, col: 14, offset: 49515},
																														expr: &charClassMatcher{
																															pos:        position{line: 1264, col: 14, offset: 49515},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1278, col: 11, offset: 49909},
																													run: (*parser).callonSection0Element313,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1278, col: 11, offset: 49909},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonSection0Element317,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 286, col: 38, offset: 9861},
																													run: (*parser).callonSection0Element319,
																													expr: &seqExpr{
																														pos: position{line: 286, col: 39, offset: 9862},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 286, col: 39, offset: 9862},
																																expr: &choiceExpr{
																																	pos: position{line: 1314, col: 8, offset: 50552},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1310, col: 12, offset: 50512},
																																			val:        "\r\n",
																																			ignoreCase: false,
																																		},
																																		&charClassMatcher{
																																			pos:        position{line: 1310, col: 21, offset: 50521},
																																			val:        "[\\r\\n]",
																																			chars:      []rune{'\r', '\n'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																		&notExpr{
																																			pos: position{line: 1312, col: 8, offset: 50541},
																																			expr: &anyMatcher{
																																				line: 1312, col: 9, offset: 50542,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 44, offset: 9867},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 45, offset: 9868},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 49, offset: 9872},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 50, offset: 9873},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 286, col: 55, offset: 9878,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 81, offset: 9240},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 85, offset: 9244},
																								label: "title",
																								expr: &actionExpr{
																									pos: position{line: 292, col: 15, offset: 9967},
																									run: (*parser).callonSection0Element334,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 292, col: 15, offset: 9967},
																										expr: &choiceExpr{
																											pos: position{line: 292, col: 16, offset: 9968},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1264, col: 14, offset: 49515},
																													run: (*parser).callonSection0Element337,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1264, col: 14, offset: 49515},
																														expr: &charClassMatcher{
																															pos:        position{line: 1264, col: 14, offset: 49515},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1278, col: 11, offset: 49909},
																													run: (*parser).callonSection0Element340,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1278, col: 11, offset: 49909},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonSection0Element344,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&seqExpr{
																													pos: position{line: 292, col: 38, offset: 9990},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 292, col: 38, offset: 9990},
																															expr: &choiceExpr{
																																pos: position{line: 1314, col: 8, offset: 50552},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1310, col: 12, offset: 50512},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1310, col: 21, offset: 50521},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																	&notExpr{
																																		pos: position{line: 1312, col: 8, offset: 50541},
																																		expr: &anyMatcher{
																																			line: 1312, col: 9, offset: 50542,
																																		},
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 292, col: 43, offset: 9995},
																															expr: &litMatcher{
																																pos:        position{line: 292, col: 44, offset: 9996},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 292, col: 48, offset: 10000},
																															expr: &litMatcher{
																																pos:        position{line: 292, col: 49, offset: 10001},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 292, col: 54, offset: 10006,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 104, offset: 9263},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 267, col: 5, offset: 9406},
																					run: (*parser).callonSection0Element359,
																					expr: &seqExpr{
																						pos: position{line: 267, col: 5, offset: 9406},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 267, col: 5, offset: 9406},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 267, col: 9, offset: 9410},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonSection0Element363,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 267, col: 26, offset: 9427},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection0Element368,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 267, col: 30, offset: 9431},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 267, col: 34, offset: 9435},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 286, col: 16, offset: 9839},
																									run: (*parser).callonSection0Element372,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 286, col: 16, offset: 9839},
																										expr: &choiceExpr{
																											pos: position{line: 286, col: 17, offset: 9840},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1264, col: 14, offset: 49515},
																													run: (*parser).callonSection0Element375,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1264, col: 14, offset: 49515},
																														expr: &charClassMatcher{
																															pos:        position{line: 1264, col: 14, offset: 49515},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1278, col: 11, offset: 49909},
																													run: (*parser).callonSection0Element378,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1278, col: 11, offset: 49909},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonSection0Element382,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 286, col: 38, offset: 9861},
																													run: (*parser).callonSection0Element384,
																													expr: &seqExpr{
																														pos: position{line: 286, col: 39, offset: 9862},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 286, col: 39, offset: 9862},
																																expr: &choiceExpr{
																																	pos: position{line: 1314, col: 8, offset: 50552},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1310, col: 12, offset: 50512},
																																			val:        "\r\n",
																																			ignoreCase: false,
																																		},
																																		&charClassMatcher{
																																			pos:        position{line: 1310, col: 21, offset: 50521},
																																			val:        "[\\r\\n]",
																																			chars:      []rune{'\r', '\n'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																		&notExpr{
																																			pos: position{line: 1312, col: 8, offset: 50541},
																																			expr: &anyMatcher{
																																				line: 1312, col: 9, offset: 50542,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 44, offset: 9867},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 45, offset: 9868},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 49, offset: 9872},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 50, offset: 9873},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 286, col: 55, offset: 9878,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 267, col: 55, offset: 9456},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 271, col: 5, offset: 9587},
																					run: (*parser).callonSection0Element398,
																					expr: &seqExpr{
																						pos: position{line: 271, col: 5, offset: 9587},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 271, col: 5, offset: 9587},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 271, col: 9, offset: 9591},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonSection0Element402,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 271, col: 26, offset: 9608},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection0Element407,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 271, col: 30, offset: 9612},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&stateCodeExpr{
																		pos: position{line: 275, col: 1, offset: 9688},
																		run: (*parser).callonSection0Element410,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 205, col: 30, offset: 7283},
															run: (*parser).callonSection0Element411,
															expr: &seqExpr{
																pos: position{line: 205, col: 30, offset: 7283},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 205, col: 30, offset: 7283},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 205, col: 34, offset: 7287},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 598, col: 19, offset: 22218},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 598, col: 19, offset: 22218},
																					run: (*parser).callonSection0Element416,
																					expr: &litMatcher{
																						pos:        position{line: 598, col: 19, offset: 22218},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 600, col: 9, offset: 22264},
																					run: (*parser).callonSection0Element418,
																					expr: &litMatcher{
																						pos:        position{line: 600, col: 9, offset: 22264},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 602, col: 9, offset: 22312},
																					run: (*parser).callonSection0Element420,
																					expr: &litMatcher{
																						pos:        position{line: 602, col: 9, offset: 22312},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 604, col: 9, offset: 22370},
																					run: (*parser).callonSection0Element422,
																					expr: &litMatcher{
																						pos:        position{line: 604, col: 9, offset: 22370},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 606, col: 9, offset: 22424},
																					run: (*parser).callonSection0Element424,
																					expr: &litMatcher{
																						pos:        position{line: 606, col: 9, offset: 22424},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 205, col: 53, offset: 7306},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 243, col: 21, offset: 8543},
															run: (*parser).callonSection0Element427,
															expr: &litMatcher{
																pos:        position{line: 243, col: 21, offset: 8543},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 221, col: 19, offset: 7839},
															run: (*parser).callonSection0Element429,
															expr: &seqExpr{
																pos: position{line: 221, col: 19, offset: 7839},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 221, col: 19, offset: 7839},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 221, col: 23, offset: 7843},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonSection0Element435,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 221, col: 27, offset: 7847},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 221, col: 38, offset: 7858},
																			expr: &choiceExpr{
																				pos: position{line: 225, col: 21, offset: 7971},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 225, col: 21, offset: 7971},
																						run: (*parser).callonSection0Element440,
																						expr: &seqExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 225, col: 21, offset: 7971},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										run: (*parser).callonSection0Element443,
																										expr: &seqExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9116},
																														run: (*parser).callonSection0Element446,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9116},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 28, offset: 8242},
																													expr: &actionExpr{
																														pos: position{line: 282, col: 14, offset: 9780},
																														run: (*parser).callonSection0Element449,
																														expr: &litMatcher{
																															pos:        position{line: 282, col: 14, offset: 9780},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 39, offset: 8253},
																													expr: &actionExpr{
																														pos: position{line: 1229, col: 16, offset: 48642},
																														run: (*parser).callonSection0Element452,
																														expr: &litMatcher{
																															pos:        position{line: 1229, col: 16, offset: 48642},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 231, col: 52, offset: 8266},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 231, col: 56, offset: 8270},
																														expr: &choiceExpr{
																															pos: position{line: 231, col: 57, offset: 8271},
																															alternatives: []interface{}{
																																&actionExpr{
																																	pos: position{line: 1264, col: 14, offset: 49515},
																																	run: (*parser).callonSection0Element457,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		expr: &charClassMatcher{
																																			pos:        position{line: 1264, col: 14, offset: 49515},
																																			val:        "[a-zA-Z0-9]",
																																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 1278, col: 11, offset: 49909},
																																	run: (*parser).callonSection0Element460,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		expr: &choiceExpr{
																																			pos: position{line: 1306, col: 7, offset: 50454},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1306, col: 7, offset: 50454},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 1306, col: 13, offset: 50460},
																																					run: (*parser).callonSection0Element464,
																																					expr: &litMatcher{
																																						pos:        position{line: 1306, col: 13, offset: 50460},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 231, col: 78, offset: 8292},
																																	run: (*parser).callonSection0Element466,
																																	expr: &seqExpr{
																																		pos: position{line: 231, col: 79, offset: 8293},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 231, col: 79, offset: 8293},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 80, offset: 8294},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 84, offset: 8298},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 85, offset: 8299},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 89, offset: 8303},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 90, offset: 8304},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 231, col: 95, offset: 8309,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 225, col: 40, offset: 7990},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 225, col: 44, offset: 7994},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 237, col: 19, offset: 8403},
																										run: (*parser).callonSection0Element477,
																										expr: &labeledExpr{
																											pos:   position{line: 237, col: 19, offset: 8403},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 237, col: 25, offset: 8409},
																												expr: &choiceExpr{
																													pos: position{line: 237, col: 26, offset: 8410},
																													alternatives: []interface{}{
																														&actionExpr{
																															pos: position{line: 1264, col: 14, offset: 49515},
																															run: (*parser).callonSection0Element481,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1264, col: 14, offset: 49515},
																																expr: &charClassMatcher{
																																	pos:        position{line: 1264, col: 14, offset: 49515},
																																	val:        "[a-zA-Z0-9]",
																																	ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 1278, col: 11, offset: 49909},
																															run: (*parser).callonSection0Element484,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1278, col: 11, offset: 49909},
																																expr: &choiceExpr{
																																	pos: position{line: 1306, col: 7, offset: 50454},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1306, col: 7, offset: 50454},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 1306, col: 13, offset: 50460},
																																			run: (*parser).callonSection0Element488,
																																			expr: &litMatcher{
																																				pos:        position{line: 1306, col: 13, offset: 50460},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 237, col: 47, offset: 8431},
																															run: (*parser).callonSection0Element490,
																															expr: &seqExpr{
																																pos: position{line: 237, col: 48, offset: 8432},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 237, col: 48, offset: 8432},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 49, offset: 8433},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 237, col: 53, offset: 8437},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 54, offset: 8438},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 237, col: 58, offset: 8442},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 59, offset: 8443},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 237, col: 64, offset: 8448,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 225, col: 67, offset: 8017},
																									expr: &litMatcher{
																										pos:        position{line: 225, col: 67, offset: 8017},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 225, col: 72, offset: 8022},
																									expr: &choiceExpr{
																										pos: position{line: 1306, col: 7, offset: 50454},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1306, col: 7, offset: 50454},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1306, col: 13, offset: 50460},
																												run: (*parser).callonSection0Element504,
																												expr: &litMatcher{
																													pos:        position{line: 1306, col: 13, offset: 50460},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 227, col: 5, offset: 8106},
																						run: (*parser).callonSection0Element506,
																						expr: &seqExpr{
																							pos: position{line: 227, col: 5, offset: 8106},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 227, col: 5, offset: 8106},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										run: (*parser).callonSection0Element509,
																										expr: &seqExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9116},
																														run: (*parser).callonSection0Element512,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9116},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 28, offset: 8242},
																													expr: &actionExpr{
																														pos: position{line: 282, col: 14, offset: 9780},
																														run: (*parser).callonSection0Element515,
																														expr: &litMatcher{
																															pos:        position{line: 282, col: 14, offset: 9780},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 39, offset: 8253},
																													expr: &actionExpr{
																														pos: position{line: 1229, col: 16, offset: 48642},
																														run: (*parser).callonSection0Element518,
																														expr: &litMatcher{
																															pos:        position{line: 1229, col: 16, offset: 48642},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 231, col: 52, offset: 8266},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 231, col: 56, offset: 8270},
																														expr: &choiceExpr{
																															pos: position{line: 231, col: 57, offset: 8271},
																															alternatives: []interface{}{
																																&actionExpr{
																																	pos: position{line: 1264, col: 14, offset: 49515},
																																	run: (*parser).callonSection0Element523,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		expr: &charClassMatcher{
																																			pos:        position{line: 1264, col: 14, offset: 49515},
																																			val:        "[a-zA-Z0-9]",
																																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 1278, col: 11, offset: 49909},
																																	run: (*parser).callonSection0Element526,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		expr: &choiceExpr{
																																			pos: position{line: 1306, col: 7, offset: 50454},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1306, col: 7, offset: 50454},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 1306, col: 13, offset: 50460},
																																					run: (*parser).callonSection0Element530,
																																					expr: &litMatcher{
																																						pos:        position{line: 1306, col: 13, offset: 50460},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 231, col: 78, offset: 8292},
																																	run: (*parser).callonSection0Element532,
																																	expr: &seqExpr{
																																		pos: position{line: 231, col: 79, offset: 8293},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 231, col: 79, offset: 8293},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 80, offset: 8294},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 84, offset: 8298},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 85, offset: 8299},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 89, offset: 8303},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 90, offset: 8304},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 231, col: 95, offset: 8309,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 227, col: 24, offset: 8125},
																									expr: &litMatcher{
																										pos:        position{line: 227, col: 24, offset: 8125},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 227, col: 29, offset: 8130},
																									expr: &choiceExpr{
																										pos: position{line: 1306, col: 7, offset: 50454},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1306, col: 7, offset: 50454},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1306, col: 13, offset: 50460},
																												run: (*parser).callonSection0Element546,
																												expr: &litMatcher{
																													pos:        position{line: 1306, col: 13, offset: 50460},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 221, col: 59, offset: 7879},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 165, col: 170, offset: 6018},
												expr: &choiceExpr{
													pos: position{line: 1306, col: 7, offset: 50454},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1306, col: 7, offset: 50454},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1306, col: 13, offset: 50460},
															run: (*parser).callonSection0Element552,
															expr: &litMatcher{
																pos:        position{line: 1306, col: 13, offset: 50460},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1314, col: 8, offset: 50552},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1310, col: 12, offset: 50512},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1310, col: 21, offset: 50521},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1312, col: 8, offset: 50541},
														expr: &anyMatcher{
															line: 1312, col: 9, offset: 50542,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 343, col: 5, offset: 11659},
							label: "element",
							expr: &choiceExpr{
								pos: position{line: 343, col: 14, offset: 11668},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 343, col: 14, offset: 11668},
										name: "Section1_5",
									},
									&ruleRefExpr{
										pos:  position{line: 343, col: 27, offset: 11681},
										name: "DocumentElement",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section1",
			pos:  position{line: 348, col: 1, offset: 11781},
			expr: &actionExpr{
				pos: position{line: 348, col: 13, offset: 11793},
				run: (*parser).callonSection11,
				expr: &seqExpr{
					pos: position{line: 348, col: 13, offset: 11793},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 348, col: 13, offset: 11793},
							label: "header",
							expr: &ruleRefExpr{
								pos:  position{line: 348, col: 21, offset: 11801},
								name: "Section1Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 348, col: 36, offset: 11816},
							label: "elements",
							expr: &zeroOrMoreExpr{
								pos: position{line: 348, col: 46, offset: 11826},
								expr: &ruleRefExpr{
									pos:  position{line: 348, col: 46, offset: 11826},
									name: "Section1Element",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section1Title",
			pos:  position{line: 354, col: 1, offset: 11968},
			expr: &actionExpr{
				pos: position{line: 354, col: 18, offset: 11985},
				run: (*parser).callonSection1Title1,
				expr: &seqExpr{
					pos: position{line: 354, col: 18, offset: 11985},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 352, col: 24, offset: 11958},
							val:        "==",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 352, col: 29, offset: 11963},
							expr: &choiceExpr{
								pos: position{line: 1306, col: 7, offset: 50454},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1306, col: 7, offset: 50454},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1306, col: 13, offset: 50460},
										run: (*parser).callonSection1Title7,
										expr: &litMatcher{
											pos:        position{line: 1306, col: 13, offset: 50460},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 354, col: 38, offset: 12005},
							label: "elements",
							expr: &ruleRefExpr{
								pos:  position{line: 354, col: 48, offset: 12015},
								name: "TitleElements",
							},
						},
						&labeledExpr{
							pos:   position{line: 354, col: 63, offset: 12030},
							label: "id",
							expr: &zeroOrMoreExpr{
								pos: position{line: 354, col: 67, offset: 12034},
								expr: &actionExpr{
									pos: position{line: 180, col: 20, offset: 6467},
									run: (*parser).callonSection1Title13,
									expr: &seqExpr{
										pos: position{line: 180, col: 20, offset: 6467},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 180, col: 20, offset: 6467},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 180, col: 25, offset: 6472},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 1288, col: 7, offset: 50075},
													run: (*parser).callonSection1Title17,
													expr: &oneOrMoreExpr{
														pos: position{line: 1288, col: 7, offset: 50075},
														expr: &choiceExpr{
															pos: position{line: 1288, col: 8, offset: 50076},
															alternatives: []interface{}{
																&actionExpr{
																	pos: position{line: 1264, col: 14, offset: 49515},
																	run: (*parser).callonSection1Title20,
																	expr: &oneOrMoreExpr{
																		pos: position{line: 1264, col: 14, offset: 49515},
																		expr: &charClassMatcher{
																			pos:        position{line: 1264, col: 14, offset: 49515},
																			val:        "[a-zA-Z0-9]",
																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 1288, col: 20, offset: 50088},
																	run: (*parser).callonSection1Title23,
																	expr: &seqExpr{
																		pos: position{line: 1288, col: 21, offset: 50089},
																		exprs: []interface{}{
																			&notExpr{
																				pos: position{line: 1288, col: 21, offset: 50089},
																				expr: &choiceExpr{
																					pos: position{line: 1310, col: 12, offset: 50512},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1310, col: 12, offset: 50512},
																							val:        "\r\n",
																							ignoreCase: false,
																						},
																						&charClassMatcher{
																							pos:        position{line: 1310, col: 21, offset: 50521},
																							val:        "[\\r\\n]",
																							chars:      []rune{'\r', '\n'},
																							ignoreCase: false,
																							inverted:   false,
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 1288, col: 30, offset: 50098},
																				expr: &choiceExpr{
																					pos: position{line: 1306, col: 7, offset: 50454},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1306, col: 7, offset: 50454},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1306, col: 13, offset: 50460},
																							run: (*parser).callonSection1Title32,
																							expr: &litMatcher{
																								pos:        position{line: 1306, col: 13, offset: 50460},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 1288, col: 34, offset: 50102},
																				expr: &litMatcher{
																					pos:        position{line: 1288, col: 35, offset: 50103},
																					val:        "[",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1288, col: 39, offset: 50107},
																				expr: &litMatcher{
																					pos:        position{line: 1288, col: 40, offset: 50108},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1288, col: 44, offset: 50112},
																				expr: &litMatcher{
																					pos:        position{line: 1288, col: 45, offset: 50113},
																					val:        "<<",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1288, col: 50, offset: 50118},
																				expr: &litMatcher{
																					pos:        position{line: 1288, col: 51, offset: 50119},
																					val:        ">>",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1288, col: 56, offset: 50124},
																				expr: &litMatcher{
																					pos:        position{line: 1288, col: 57, offset: 50125},
																					val:        ",",
																					ignoreCase: false,
																				},
																			},
																			&anyMatcher{
																				line: 1288, col: 62, offset: 50130,
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 180, col: 33, offset: 6480},
												val:        "]]",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 180, col: 38, offset: 6485},
												expr: &choiceExpr{
													pos: position{line: 1306, col: 7, offset: 50454},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1306, col: 7, offset: 50454},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1306, col: 13, offset: 50460},
															run: (*parser).callonSection1Title49,
															expr: &litMatcher{
																pos:        position{line: 1306, col: 13, offset: 50460},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1314, col: 8, offset: 50552},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1310, col: 12, offset: 50512},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1310, col: 21, offset: 50521},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1312, col: 8, offset: 50541},
									expr: &anyMatcher{
										line: 1312, col: 9, offset: 50542,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section1Element",
			pos:  position{line: 358, col: 1, offset: 12148},
			expr: &actionExpr{
				pos: position{line: 358, col: 20, offset: 12167},
				run: (*parser).callonSection1Element1,
				expr: &seqExpr{
					pos: position{line: 358, col: 20, offset: 12167},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 358, col: 20, offset: 12167},
							expr: &seqExpr{
								pos: position{line: 352, col: 24, offset: 11958},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 352, col: 24, offset: 11958},
										val:        "==",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 352, col: 29, offset: 11963},
										expr: &choiceExpr{
											pos: position{line: 1306, col: 7, offset: 50454},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1306, col: 7, offset: 50454},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1306, col: 13, offset: 50460},
													run: (*parser).callonSection1Element9,
													expr: &litMatcher{
														pos:        position{line: 1306, col: 13, offset: 50460},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 359, col: 5, offset: 12193},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 359, col: 16, offset: 12204},
								expr: &actionExpr{
									pos: position{line: 164, col: 21, offset: 5763},
									run: (*parser).callonSection1Element13,
									expr: &seqExpr{
										pos: position{line: 164, col: 21, offset: 5763},
										exprs: []interface{}{
											&andExpr{
												pos: position{line: 164, col: 21, offset: 5763},
												expr: &charClassMatcher{
													pos:        position{line: 164, col: 23, offset: 5765},
													val:        "[[.#]",
													chars:      []rune{'[', '.', '#'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&labeledExpr{
												pos:   position{line: 165, col: 5, offset: 5853},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 165, col: 11, offset: 5859},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 174, col: 14, offset: 6316},
															run: (*parser).callonSection1Element19,
															expr: &seqExpr{
																pos: position{line: 174, col: 14, offset: 6316},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 174, col: 14, offset: 6316},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 174, col: 19, offset: 6321},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1288, col: 7, offset: 50075},
																			run: (*parser).callonSection1Element23,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1288, col: 7, offset: 50075},
																				expr: &choiceExpr{
																					pos: position{line: 1288, col: 8, offset: 50076},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection1Element26,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1288, col: 20, offset: 50088},
																							run: (*parser).callonSection1Element29,
																							expr: &seqExpr{
																								pos: position{line: 1288, col: 21, offset: 50089},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1288, col: 21, offset: 50089},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 30, offset: 50098},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonSection1Element38,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 34, offset: 50102},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 35, offset: 50103},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 39, offset: 50107},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 40, offset: 50108},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 44, offset: 50112},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 45, offset: 50113},
																											val:        "<<",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 50, offset: 50118},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 51, offset: 50119},
																											val:        ">>",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 56, offset: 50124},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 57, offset: 50125},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1288, col: 62, offset: 50130,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 174, col: 27, offset: 6329},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 5, offset: 6383},
															run: (*parser).callonSection1Element52,
															expr: &seqExpr{
																pos: position{line: 176, col: 5, offset: 6383},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 5, offset: 6383},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 10, offset: 6388},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1288, col: 7, offset: 50075},
																			run: (*parser).callonSection1Element56,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1288, col: 7, offset: 50075},
																				expr: &choiceExpr{
																					pos: position{line: 1288, col: 8, offset: 50076},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection1Element59,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1288, col: 20, offset: 50088},
																							run: (*parser).callonSection1Element62,
																							expr: &seqExpr{
																								pos: position{line: 1288, col: 21, offset: 50089},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1288, col: 21, offset: 50089},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 30, offset: 50098},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonSection1Element71,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 34, offset: 50102},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 35, offset: 50103},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 39, offset: 50107},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 40, offset: 50108},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 44, offset: 50112},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 45, offset: 50113},
																											val:        "<<",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 50, offset: 50118},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 51, offset: 50119},
																											val:        ">>",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 56, offset: 50124},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 57, offset: 50125},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1288, col: 62, offset: 50130,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 18, offset: 6396},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 186, col: 17, offset: 6699},
															run: (*parser).callonSection1Element85,
															expr: &seqExpr{
																pos: position{line: 186, col: 17, offset: 6699},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 186, col: 17, offset: 6699},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 186, col: 21, offset: 6703},
																		expr: &litMatcher{
																			pos:        position{line: 186, col: 22, offset: 6704},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 186, col: 26, offset: 6708},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonSection1Element93,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 186, col: 30, offset: 6712},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 186, col: 37, offset: 6719},
																			run: (*parser).callonSection1Element96,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 186, col: 37, offset: 6719},
																				expr: &choiceExpr{
																					pos: position{line: 186, col: 38, offset: 6720},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection1Element99,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonSection1Element102,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection1Element106,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 186, col: 59, offset: 6741},
																							run: (*parser).callonSection1Element108,
																							expr: &seqExpr{
																								pos: position{line: 186, col: 60, offset: 6742},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 186, col: 60, offset: 6742},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 186, col: 70, offset: 6752,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 196, col: 16, offset: 6990},
															run: (*parser).callonSection1Element115,
															expr: &seqExpr{
																pos: position{line: 196, col: 16, offset: 6990},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 196, col: 16, offset: 6990},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 196, col: 21, offset: 6995},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonSection1Element121,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 196, col: 25, offset: 6999},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 196, col: 31, offset: 7005},
																			run: (*parser).callonSection1Element124,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 196, col: 31, offset: 7005},
																				expr: &choiceExpr{
																					pos: position{line: 196, col: 32, offset: 7006},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection1Element127,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonSection1Element130,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection1Element134,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 196, col: 53, offset: 7027},
																							run: (*parser).callonSection1Element136,
																							expr: &seqExpr{
																								pos: position{line: 196, col: 54, offset: 7028},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 196, col: 54, offset: 7028},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 196, col: 63, offset: 7037},
																										expr: &litMatcher{
																											pos:        position{line: 196, col: 64, offset: 7038},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 196, col: 69, offset: 7043,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 200, col: 4, offset: 7118},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 210, col: 21, offset: 7481},
															run: (*parser).callonSection1Element146,
															expr: &litMatcher{
																pos:        position{line: 210, col: 21, offset: 7481},
																val:        "[source]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 212, col: 5, offset: 7539},
															run: (*parser).callonSection1Element148,
															expr: &seqExpr{
																pos: position{line: 212, col: 5, offset: 7539},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 212, col: 5, offset: 7539},
																		val:        "[source,",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 212, col: 16, offset: 7550},
																		label: "language",
																		expr: &actionExpr{
																			pos: position{line: 212, col: 26, offset: 7560},
																			run: (*parser).callonSection1Element152,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 212, col: 26, offset: 7560},
																				expr: &choiceExpr{
																					pos: position{line: 212, col: 27, offset: 7561},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection1Element155,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonSection1Element158,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection1Element162,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 212, col: 48, offset: 7582},
																							run: (*parser).callonSection1Element164,
																							expr: &seqExpr{
																								pos: position{line: 212, col: 49, offset: 7583},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 212, col: 49, offset: 7583},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 212, col: 58, offset: 7592},
																										expr: &litMatcher{
																											pos:        position{line: 212, col: 59, offset: 7593},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 212, col: 64, offset: 7598,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 216, col: 7, offset: 7688},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 247, col: 20, offset: 8646},
															run: (*parser).callonSection1Element174,
															expr: &seqExpr{
																pos: position{line: 247, col: 20, offset: 8646},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 247, col: 20, offset: 8646},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 24, offset: 8650},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonSection1Element178,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 247, col: 41, offset: 8667},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonSection1Element183,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 45, offset: 8671},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 49, offset: 8675},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 286, col: 16, offset: 9839},
																			run: (*parser).callonSection1Element187,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 286, col: 16, offset: 9839},
																				expr: &choiceExpr{
																					pos: position{line: 286, col: 17, offset: 9840},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection1Element190,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonSection1Element193,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection1Element197,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 286, col: 38, offset: 9861},
																							run: (*parser).callonSection1Element199,
																							expr: &seqExpr{
																								pos: position{line: 286, col: 39, offset: 9862},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 286, col: 39, offset: 9862},
																										expr: &choiceExpr{
																											pos: position{line: 1314, col: 8, offset: 50552},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																												&notExpr{
																													pos: position{line: 1312, col: 8, offset: 50541},
																													expr: &anyMatcher{
																														line: 1312, col: 9, offset: 50542,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 44, offset: 9867},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 45, offset: 9868},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 49, offset: 9872},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 50, offset: 9873},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 286, col: 55, offset: 9878,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 70, offset: 8696},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 74, offset: 8700},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 292, col: 15, offset: 9967},
																			run: (*parser).callonSection1Element214,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 292, col: 15, offset: 9967},
																				expr: &choiceExpr{
																					pos: position{line: 292, col: 16, offset: 9968},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection1Element217,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonSection1Element220,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection1Element224,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&seqExpr{
																							pos: position{line: 292, col: 38, offset: 9990},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 292, col: 38, offset: 9990},
																									expr: &choiceExpr{
																										pos: position{line: 1314, col: 8, offset: 50552},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1310, col: 12, offset: 50512},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1310, col: 21, offset: 50521},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																											&notExpr{
																												pos: position{line: 1312, col: 8, offset: 50541},
																												expr: &anyMatcher{
																													line: 1312, col: 9, offset: 50542,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 292, col: 43, offset: 9995},
																									expr: &litMatcher{
																										pos:        position{line: 292, col: 44, offset: 9996},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 292, col: 48, offset: 10000},
																									expr: &litMatcher{
																										pos:        position{line: 292, col: 49, offset: 10001},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 292, col: 54, offset: 10006,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 93, offset: 8719},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 251, col: 1, offset: 8846},
															run: (*parser).callonSection1Element239,
															expr: &seqExpr{
																pos: position{line: 251, col: 1, offset: 8846},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 251, col: 1, offset: 8846},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 251, col: 5, offset: 8850},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonSection1Element243,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 251, col: 22, offset: 8867},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonSection1Element248,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 251, col: 26, offset: 8871},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 251, col: 30, offset: 8875},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 286, col: 16, offset: 9839},
																			run: (*parser).callonSection1Element252,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 286, col: 16, offset: 9839},
																				expr: &choiceExpr{
																					pos: position{line: 286, col: 17, offset: 9840},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection1Element255,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonSection1Element258,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection1Element262,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 286, col: 38, offset: 9861},
																							run: (*parser).callonSection1Element264,
																							expr: &seqExpr{
																								pos: position{line: 286, col: 39, offset: 9862},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 286, col: 39, offset: 9862},
																										expr: &choiceExpr{
																											pos: position{line: 1314, col: 8, offset: 50552},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																												&notExpr{
																													pos: position{line: 1312, col: 8, offset: 50541},
																													expr: &anyMatcher{
																														line: 1312, col: 9, offset: 50542,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 44, offset: 9867},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 45, offset: 9868},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 49, offset: 9872},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 50, offset: 9873},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 286, col: 55, offset: 9878,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 251, col: 51, offset: 8896},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 255, col: 1, offset: 9011},
															run: (*parser).callonSection1Element278,
															expr: &seqExpr{
																pos: position{line: 255, col: 1, offset: 9011},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 255, col: 1, offset: 9011},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 255, col: 5, offset: 9015},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonSection1Element282,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 255, col: 22, offset: 9032},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonSection1Element287,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 255, col: 26, offset: 9036},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 263, col: 20, offset: 9179},
															run: (*parser).callonSection1Element290,
															expr: &seqExpr{
																pos: position{line: 263, col: 20, offset: 9179},
																exprs: []interface{}{
																	&labeledExpr{
																		pos:   position{line: 263, col: 20, offset: 9179},
																		label: "attribute",
																		expr: &choiceExpr{
																			pos: position{line: 263, col: 31, offset: 9190},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 263, col: 31, offset: 9190},
																					run: (*parser).callonSection1Element294,
																					expr: &seqExpr{
																						pos: position{line: 263, col: 31, offset: 9190},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 263, col: 31, offset: 9190},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 35, offset: 9194},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonSection1Element298,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 263, col: 52, offset: 9211},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection1Element303,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 56, offset: 9215},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 60, offset: 9219},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 286, col: 16, offset: 9839},
																									run: (*parser).callonSection1Element307,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 286, col: 16, offset: 9839},
																										expr: &choiceExpr{
																											pos: position{line: 286, col: 17, offset: 9840},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1264, col: 14, offset: 49515},
																													run: (*parser).callonSection1Element310,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1264, col: 14, offset: 49515},
																														expr: &charClassMatcher{
																															pos:        position{line: 1264, col: 14, offset: 49515},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1278, col: 11, offset: 49909},
																													run: (*parser).callonSection1Element313,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1278, col: 11, offset: 49909},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonSection1Element317,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 286, col: 38, offset: 9861},
																													run: (*parser).callonSection1Element319,
																													expr: &seqExpr{
																														pos: position{line: 286, col: 39, offset: 9862},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 286, col: 39, offset: 9862},
																																expr: &choiceExpr{
																																	pos: position{line: 1314, col: 8, offset: 50552},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1310, col: 12, offset: 50512},
																																			val:        "\r\n",
																																			ignoreCase: false,
																																		},
																																		&charClassMatcher{
																																			pos:        position{line: 1310, col: 21, offset: 50521},
																																			val:        "[\\r\\n]",
																																			chars:      []rune{'\r', '\n'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																		&notExpr{
																																			pos: position{line: 1312, col: 8, offset: 50541},
																																			expr: &anyMatcher{
																																				line: 1312, col: 9, offset: 50542,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 44, offset: 9867},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 45, offset: 9868},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 49, offset: 9872},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 50, offset: 9873},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 286, col: 55, offset: 9878,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 81, offset: 9240},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 85, offset: 9244},
																								label: "title",
																								expr: &actionExpr{
																									pos: position{line: 292, col: 15, offset: 9967},
																									run: (*parser).callonSection1Element334,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 292, col: 15, offset: 9967},
																										expr: &choiceExpr{
																											pos: position{line: 292, col: 16, offset: 9968},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1264, col: 14, offset: 49515},
																													run: (*parser).callonSection1Element337,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1264, col: 14, offset: 49515},
																														expr: &charClassMatcher{
																															pos:        position{line: 1264, col: 14, offset: 49515},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1278, col: 11, offset: 49909},
																													run: (*parser).callonSection1Element340,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1278, col: 11, offset: 49909},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonSection1Element344,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&seqExpr{
																													pos: position{line: 292, col: 38, offset: 9990},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 292, col: 38, offset: 9990},
																															expr: &choiceExpr{
																																pos: position{line: 1314, col: 8, offset: 50552},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1310, col: 12, offset: 50512},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1310, col: 21, offset: 50521},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																	&notExpr{
																																		pos: position{line: 1312, col: 8, offset: 50541},
																																		expr: &anyMatcher{
																																			line: 1312, col: 9, offset: 50542,
																																		},
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 292, col: 43, offset: 9995},
																															expr: &litMatcher{
																																pos:        position{line: 292, col: 44, offset: 9996},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 292, col: 48, offset: 10000},
																															expr: &litMatcher{
																																pos:        position{line: 292, col: 49, offset: 10001},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 292, col: 54, offset: 10006,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 104, offset: 9263},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 267, col: 5, offset: 9406},
																					run: (*parser).callonSection1Element359,
																					expr: &seqExpr{
																						pos: position{line: 267, col: 5, offset: 9406},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 267, col: 5, offset: 9406},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 267, col: 9, offset: 9410},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonSection1Element363,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 267, col: 26, offset: 9427},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection1Element368,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 267, col: 30, offset: 9431},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 267, col: 34, offset: 9435},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 286, col: 16, offset: 9839},
																									run: (*parser).callonSection1Element372,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 286, col: 16, offset: 9839},
																										expr: &choiceExpr{
																											pos: position{line: 286, col: 17, offset: 9840},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1264, col: 14, offset: 49515},
																													run: (*parser).callonSection1Element375,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1264, col: 14, offset: 49515},
																														expr: &charClassMatcher{
																															pos:        position{line: 1264, col: 14, offset: 49515},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1278, col: 11, offset: 49909},
																													run: (*parser).callonSection1Element378,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1278, col: 11, offset: 49909},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonSection1Element382,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 286, col: 38, offset: 9861},
																													run: (*parser).callonSection1Element384,
																													expr: &seqExpr{
																														pos: position{line: 286, col: 39, offset: 9862},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 286, col: 39, offset: 9862},
																																expr: &choiceExpr{
																																	pos: position{line: 1314, col: 8, offset: 50552},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1310, col: 12, offset: 50512},
																																			val:        "\r\n",
																																			ignoreCase: false,
																																		},
																																		&charClassMatcher{
																																			pos:        position{line: 1310, col: 21, offset: 50521},
																																			val:        "[\\r\\n]",
																																			chars:      []rune{'\r', '\n'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																		&notExpr{
																																			pos: position{line: 1312, col: 8, offset: 50541},
																																			expr: &anyMatcher{
																																				line: 1312, col: 9, offset: 50542,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 44, offset: 9867},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 45, offset: 9868},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 49, offset: 9872},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 50, offset: 9873},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 286, col: 55, offset: 9878,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 267, col: 55, offset: 9456},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 271, col: 5, offset: 9587},
																					run: (*parser).callonSection1Element398,
																					expr: &seqExpr{
																						pos: position{line: 271, col: 5, offset: 9587},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 271, col: 5, offset: 9587},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 271, col: 9, offset: 9591},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonSection1Element402,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 271, col: 26, offset: 9608},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection1Element407,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 271, col: 30, offset: 9612},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&stateCodeExpr{
																		pos: position{line: 275, col: 1, offset: 9688},
																		run: (*parser).callonSection1Element410,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 205, col: 30, offset: 7283},
															run: (*parser).callonSection1Element411,
															expr: &seqExpr{
																pos: position{line: 205, col: 30, offset: 7283},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 205, col: 30, offset: 7283},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 205, col: 34, offset: 7287},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 598, col: 19, offset: 22218},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 598, col: 19, offset: 22218},
																					run: (*parser).callonSection1Element416,
																					expr: &litMatcher{
																						pos:        position{line: 598, col: 19, offset: 22218},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 600, col: 9, offset: 22264},
																					run: (*parser).callonSection1Element418,
																					expr: &litMatcher{
																						pos:        position{line: 600, col: 9, offset: 22264},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 602, col: 9, offset: 22312},
																					run: (*parser).callonSection1Element420,
																					expr: &litMatcher{
																						pos:        position{line: 602, col: 9, offset: 22312},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 604, col: 9, offset: 22370},
																					run: (*parser).callonSection1Element422,
																					expr: &litMatcher{
																						pos:        position{line: 604, col: 9, offset: 22370},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 606, col: 9, offset: 22424},
																					run: (*parser).callonSection1Element424,
																					expr: &litMatcher{
																						pos:        position{line: 606, col: 9, offset: 22424},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 205, col: 53, offset: 7306},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 243, col: 21, offset: 8543},
															run: (*parser).callonSection1Element427,
															expr: &litMatcher{
																pos:        position{line: 243, col: 21, offset: 8543},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 221, col: 19, offset: 7839},
															run: (*parser).callonSection1Element429,
															expr: &seqExpr{
																pos: position{line: 221, col: 19, offset: 7839},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 221, col: 19, offset: 7839},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 221, col: 23, offset: 7843},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonSection1Element435,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 221, col: 27, offset: 7847},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 221, col: 38, offset: 7858},
																			expr: &choiceExpr{
																				pos: position{line: 225, col: 21, offset: 7971},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 225, col: 21, offset: 7971},
																						run: (*parser).callonSection1Element440,
																						expr: &seqExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 225, col: 21, offset: 7971},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										run: (*parser).callonSection1Element443,
																										expr: &seqExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9116},
																														run: (*parser).callonSection1Element446,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9116},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 28, offset: 8242},
																													expr: &actionExpr{
																														pos: position{line: 282, col: 14, offset: 9780},
																														run: (*parser).callonSection1Element449,
																														expr: &litMatcher{
																															pos:        position{line: 282, col: 14, offset: 9780},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 39, offset: 8253},
																													expr: &actionExpr{
																														pos: position{line: 1229, col: 16, offset: 48642},
																														run: (*parser).callonSection1Element452,
																														expr: &litMatcher{
																															pos:        position{line: 1229, col: 16, offset: 48642},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 231, col: 52, offset: 8266},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 231, col: 56, offset: 8270},
																														expr: &choiceExpr{
																															pos: position{line: 231, col: 57, offset: 8271},
																															alternatives: []interface{}{
																																&actionExpr{
																																	pos: position{line: 1264, col: 14, offset: 49515},
																																	run: (*parser).callonSection1Element457,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		expr: &charClassMatcher{
																																			pos:        position{line: 1264, col: 14, offset: 49515},
																																			val:        "[a-zA-Z0-9]",
																																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 1278, col: 11, offset: 49909},
																																	run: (*parser).callonSection1Element460,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		expr: &choiceExpr{
																																			pos: position{line: 1306, col: 7, offset: 50454},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1306, col: 7, offset: 50454},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 1306, col: 13, offset: 50460},
																																					run: (*parser).callonSection1Element464,
																																					expr: &litMatcher{
																																						pos:        position{line: 1306, col: 13, offset: 50460},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 231, col: 78, offset: 8292},
																																	run: (*parser).callonSection1Element466,
																																	expr: &seqExpr{
																																		pos: position{line: 231, col: 79, offset: 8293},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 231, col: 79, offset: 8293},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 80, offset: 8294},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 84, offset: 8298},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 85, offset: 8299},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 89, offset: 8303},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 90, offset: 8304},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 231, col: 95, offset: 8309,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 225, col: 40, offset: 7990},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 225, col: 44, offset: 7994},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 237, col: 19, offset: 8403},
																										run: (*parser).callonSection1Element477,
																										expr: &labeledExpr{
																											pos:   position{line: 237, col: 19, offset: 8403},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 237, col: 25, offset: 8409},
																												expr: &choiceExpr{
																													pos: position{line: 237, col: 26, offset: 8410},
																													alternatives: []interface{}{
																														&actionExpr{
																															pos: position{line: 1264, col: 14, offset: 49515},
																															run: (*parser).callonSection1Element481,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1264, col: 14, offset: 49515},
																																expr: &charClassMatcher{
																																	pos:        position{line: 1264, col: 14, offset: 49515},
																																	val:        "[a-zA-Z0-9]",
																																	ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 1278, col: 11, offset: 49909},
																															run: (*parser).callonSection1Element484,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1278, col: 11, offset: 49909},
																																expr: &choiceExpr{
																																	pos: position{line: 1306, col: 7, offset: 50454},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1306, col: 7, offset: 50454},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 1306, col: 13, offset: 50460},
																																			run: (*parser).callonSection1Element488,
																																			expr: &litMatcher{
																																				pos:        position{line: 1306, col: 13, offset: 50460},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 237, col: 47, offset: 8431},
																															run: (*parser).callonSection1Element490,
																															expr: &seqExpr{
																																pos: position{line: 237, col: 48, offset: 8432},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 237, col: 48, offset: 8432},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 49, offset: 8433},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 237, col: 53, offset: 8437},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 54, offset: 8438},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 237, col: 58, offset: 8442},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 59, offset: 8443},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 237, col: 64, offset: 8448,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 225, col: 67, offset: 8017},
																									expr: &litMatcher{
																										pos:        position{line: 225, col: 67, offset: 8017},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 225, col: 72, offset: 8022},
																									expr: &choiceExpr{
																										pos: position{line: 1306, col: 7, offset: 50454},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1306, col: 7, offset: 50454},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1306, col: 13, offset: 50460},
																												run: (*parser).callonSection1Element504,
																												expr: &litMatcher{
																													pos:        position{line: 1306, col: 13, offset: 50460},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 227, col: 5, offset: 8106},
																						run: (*parser).callonSection1Element506,
																						expr: &seqExpr{
																							pos: position{line: 227, col: 5, offset: 8106},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 227, col: 5, offset: 8106},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										run: (*parser).callonSection1Element509,
																										expr: &seqExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9116},
																														run: (*parser).callonSection1Element512,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9116},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 28, offset: 8242},
																													expr: &actionExpr{
																														pos: position{line: 282, col: 14, offset: 9780},
																														run: (*parser).callonSection1Element515,
																														expr: &litMatcher{
																															pos:        position{line: 282, col: 14, offset: 9780},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 39, offset: 8253},
																													expr: &actionExpr{
																														pos: position{line: 1229, col: 16, offset: 48642},
																														run: (*parser).callonSection1Element518,
																														expr: &litMatcher{
																															pos:        position{line: 1229, col: 16, offset: 48642},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 231, col: 52, offset: 8266},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 231, col: 56, offset: 8270},
																														expr: &choiceExpr{
																															pos: position{line: 231, col: 57, offset: 8271},
																															alternatives: []interface{}{
																																&actionExpr{
																																	pos: position{line: 1264, col: 14, offset: 49515},
																																	run: (*parser).callonSection1Element523,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		expr: &charClassMatcher{
																																			pos:        position{line: 1264, col: 14, offset: 49515},
																																			val:        "[a-zA-Z0-9]",
																																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 1278, col: 11, offset: 49909},
																																	run: (*parser).callonSection1Element526,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		expr: &choiceExpr{
																																			pos: position{line: 1306, col: 7, offset: 50454},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1306, col: 7, offset: 50454},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 1306, col: 13, offset: 50460},
																																					run: (*parser).callonSection1Element530,
																																					expr: &litMatcher{
																																						pos:        position{line: 1306, col: 13, offset: 50460},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 231, col: 78, offset: 8292},
																																	run: (*parser).callonSection1Element532,
																																	expr: &seqExpr{
																																		pos: position{line: 231, col: 79, offset: 8293},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 231, col: 79, offset: 8293},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 80, offset: 8294},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 84, offset: 8298},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 85, offset: 8299},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 89, offset: 8303},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 90, offset: 8304},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 231, col: 95, offset: 8309,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 227, col: 24, offset: 8125},
																									expr: &litMatcher{
																										pos:        position{line: 227, col: 24, offset: 8125},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 227, col: 29, offset: 8130},
																									expr: &choiceExpr{
																										pos: position{line: 1306, col: 7, offset: 50454},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1306, col: 7, offset: 50454},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1306, col: 13, offset: 50460},
																												run: (*parser).callonSection1Element546,
																												expr: &litMatcher{
																													pos:        position{line: 1306, col: 13, offset: 50460},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 221, col: 59, offset: 7879},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 165, col: 170, offset: 6018},
												expr: &choiceExpr{
													pos: position{line: 1306, col: 7, offset: 50454},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1306, col: 7, offset: 50454},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1306, col: 13, offset: 50460},
															run: (*parser).callonSection1Element552,
															expr: &litMatcher{
																pos:        position{line: 1306, col: 13, offset: 50460},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1314, col: 8, offset: 50552},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1310, col: 12, offset: 50512},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1310, col: 21, offset: 50521},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1312, col: 8, offset: 50541},
														expr: &anyMatcher{
															line: 1312, col: 9, offset: 50542,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 360, col: 5, offset: 12229},
							label: "element",
							expr: &choiceExpr{
								pos: position{line: 360, col: 14, offset: 12238},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 360, col: 14, offset: 12238},
										name: "Section2_5",
									},
									&ruleRefExpr{
										pos:  position{line: 360, col: 27, offset: 12251},
										name: "DocumentElement",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section2",
			pos:  position{line: 364, col: 1, offset: 12346},
			expr: &actionExpr{
				pos: position{line: 364, col: 13, offset: 12358},
				run: (*parser).callonSection21,
				expr: &seqExpr{
					pos: position{line: 364, col: 13, offset: 12358},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 364, col: 13, offset: 12358},
							label: "header",
							expr: &ruleRefExpr{
								pos:  position{line: 364, col: 21, offset: 12366},
								name: "Section2Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 364, col: 36, offset: 12381},
							label: "elements",
							expr: &zeroOrMoreExpr{
								pos: position{line: 364, col: 46, offset: 12391},
								expr: &ruleRefExpr{
									pos:  position{line: 364, col: 46, offset: 12391},
									name: "Section2Element",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section2Title",
			pos:  position{line: 370, col: 1, offset: 12535},
			expr: &actionExpr{
				pos: position{line: 370, col: 18, offset: 12552},
				run: (*parser).callonSection2Title1,
				expr: &seqExpr{
					pos: position{line: 370, col: 18, offset: 12552},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 368, col: 24, offset: 12523},
							val:        "===",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 368, col: 30, offset: 12529},
							expr: &choiceExpr{
								pos: position{line: 1306, col: 7, offset: 50454},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1306, col: 7, offset: 50454},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1306, col: 13, offset: 50460},
										run: (*parser).callonSection2Title7,
										expr: &litMatcher{
											pos:        position{line: 1306, col: 13, offset: 50460},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 370, col: 38, offset: 12572},
							label: "elements",
							expr: &ruleRefExpr{
								pos:  position{line: 370, col: 48, offset: 12582},
								name: "TitleElements",
							},
						},
						&labeledExpr{
							pos:   position{line: 370, col: 63, offset: 12597},
							label: "id",
							expr: &zeroOrMoreExpr{
								pos: position{line: 370, col: 67, offset: 12601},
								expr: &actionExpr{
									pos: position{line: 180, col: 20, offset: 6467},
									run: (*parser).callonSection2Title13,
									expr: &seqExpr{
										pos: position{line: 180, col: 20, offset: 6467},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 180, col: 20, offset: 6467},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 180, col: 25, offset: 6472},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 1288, col: 7, offset: 50075},
													run: (*parser).callonSection2Title17,
													expr: &oneOrMoreExpr{
														pos: position{line: 1288, col: 7, offset: 50075},
														expr: &choiceExpr{
															pos: position{line: 1288, col: 8, offset: 50076},
															alternatives: []interface{}{
																&actionExpr{
																	pos: position{line: 1264, col: 14, offset: 49515},
																	run: (*parser).callonSection2Title20,
																	expr: &oneOrMoreExpr{
																		pos: position{line: 1264, col: 14, offset: 49515},
																		expr: &charClassMatcher{
																			pos:        position{line: 1264, col: 14, offset: 49515},
																			val:        "[a-zA-Z0-9]",
																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 1288, col: 20, offset: 50088},
																	run: (*parser).callonSection2Title23,
																	expr: &seqExpr{
																		pos: position{line: 1288, col: 21, offset: 50089},
																		exprs: []interface{}{
																			&notExpr{
																				pos: position{line: 1288, col: 21, offset: 50089},
																				expr: &choiceExpr{
																					pos: position{line: 1310, col: 12, offset: 50512},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1310, col: 12, offset: 50512},
																							val:        "\r\n",
																							ignoreCase: false,
																						},
																						&charClassMatcher{
																							pos:        position{line: 1310, col: 21, offset: 50521},
																							val:        "[\\r\\n]",
																							chars:      []rune{'\r', '\n'},
																							ignoreCase: false,
																							inverted:   false,
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 1288, col: 30, offset: 50098},
																				expr: &choiceExpr{
																					pos: position{line: 1306, col: 7, offset: 50454},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1306, col: 7, offset: 50454},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1306, col: 13, offset: 50460},
																							run: (*parser).callonSection2Title32,
																							expr: &litMatcher{
																								pos:        position{line: 1306, col: 13, offset: 50460},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 1288, col: 34, offset: 50102},
																				expr: &litMatcher{
																					pos:        position{line: 1288, col: 35, offset: 50103},
																					val:        "[",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1288, col: 39, offset: 50107},
																				expr: &litMatcher{
																					pos:        position{line: 1288, col: 40, offset: 50108},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1288, col: 44, offset: 50112},
																				expr: &litMatcher{
																					pos:        position{line: 1288, col: 45, offset: 50113},
																					val:        "<<",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1288, col: 50, offset: 50118},
																				expr: &litMatcher{
																					pos:        position{line: 1288, col: 51, offset: 50119},
																					val:        ">>",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1288, col: 56, offset: 50124},
																				expr: &litMatcher{
																					pos:        position{line: 1288, col: 57, offset: 50125},
																					val:        ",",
																					ignoreCase: false,
																				},
																			},
																			&anyMatcher{
																				line: 1288, col: 62, offset: 50130,
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 180, col: 33, offset: 6480},
												val:        "]]",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 180, col: 38, offset: 6485},
												expr: &choiceExpr{
													pos: position{line: 1306, col: 7, offset: 50454},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1306, col: 7, offset: 50454},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1306, col: 13, offset: 50460},
															run: (*parser).callonSection2Title49,
															expr: &litMatcher{
																pos:        position{line: 1306, col: 13, offset: 50460},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1314, col: 8, offset: 50552},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1310, col: 12, offset: 50512},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1310, col: 21, offset: 50521},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1312, col: 8, offset: 50541},
									expr: &anyMatcher{
										line: 1312, col: 9, offset: 50542,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section2Element",
			pos:  position{line: 378, col: 1, offset: 13071},
			expr: &actionExpr{
				pos: position{line: 378, col: 20, offset: 13090},
				run: (*parser).callonSection2Element1,
				expr: &seqExpr{
					pos: position{line: 378, col: 20, offset: 13090},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 378, col: 20, offset: 13090},
							expr: &seqExpr{
								pos: position{line: 352, col: 24, offset: 11958},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 352, col: 24, offset: 11958},
										val:        "==",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 352, col: 29, offset: 11963},
										expr: &choiceExpr{
											pos: position{line: 1306, col: 7, offset: 50454},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1306, col: 7, offset: 50454},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1306, col: 13, offset: 50460},
													run: (*parser).callonSection2Element9,
													expr: &litMatcher{
														pos:        position{line: 1306, col: 13, offset: 50460},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 378, col: 41, offset: 13111},
							expr: &seqExpr{
								pos: position{line: 368, col: 24, offset: 12523},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 368, col: 24, offset: 12523},
										val:        "===",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 368, col: 30, offset: 12529},
										expr: &choiceExpr{
											pos: position{line: 1306, col: 7, offset: 50454},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1306, col: 7, offset: 50454},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1306, col: 13, offset: 50460},
													run: (*parser).callonSection2Element17,
													expr: &litMatcher{
														pos:        position{line: 1306, col: 13, offset: 50460},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 379, col: 5, offset: 13137},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 379, col: 16, offset: 13148},
								expr: &actionExpr{
									pos: position{line: 164, col: 21, offset: 5763},
									run: (*parser).callonSection2Element21,
									expr: &seqExpr{
										pos: position{line: 164, col: 21, offset: 5763},
										exprs: []interface{}{
											&andExpr{
												pos: position{line: 164, col: 21, offset: 5763},
												expr: &charClassMatcher{
													pos:        position{line: 164, col: 23, offset: 5765},
													val:        "[[.#]",
													chars:      []rune{'[', '.', '#'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&labeledExpr{
												pos:   position{line: 165, col: 5, offset: 5853},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 165, col: 11, offset: 5859},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 174, col: 14, offset: 6316},
															run: (*parser).callonSection2Element27,
															expr: &seqExpr{
																pos: position{line: 174, col: 14, offset: 6316},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 174, col: 14, offset: 6316},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 174, col: 19, offset: 6321},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1288, col: 7, offset: 50075},
																			run: (*parser).callonSection2Element31,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1288, col: 7, offset: 50075},
																				expr: &choiceExpr{
																					pos: position{line: 1288, col: 8, offset: 50076},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection2Element34,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1288, col: 20, offset: 50088},
																							run: (*parser).callonSection2Element37,
																							expr: &seqExpr{
																								pos: position{line: 1288, col: 21, offset: 50089},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1288, col: 21, offset: 50089},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 30, offset: 50098},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonSection2Element46,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 34, offset: 50102},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 35, offset: 50103},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 39, offset: 50107},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 40, offset: 50108},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 44, offset: 50112},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 45, offset: 50113},
																											val:        "<<",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 50, offset: 50118},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 51, offset: 50119},
																											val:        ">>",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 56, offset: 50124},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 57, offset: 50125},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1288, col: 62, offset: 50130,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 174, col: 27, offset: 6329},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 5, offset: 6383},
															run: (*parser).callonSection2Element60,
															expr: &seqExpr{
																pos: position{line: 176, col: 5, offset: 6383},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 5, offset: 6383},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 10, offset: 6388},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1288, col: 7, offset: 50075},
																			run: (*parser).callonSection2Element64,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1288, col: 7, offset: 50075},
																				expr: &choiceExpr{
																					pos: position{line: 1288, col: 8, offset: 50076},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection2Element67,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1288, col: 20, offset: 50088},
																							run: (*parser).callonSection2Element70,
																							expr: &seqExpr{
																								pos: position{line: 1288, col: 21, offset: 50089},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1288, col: 21, offset: 50089},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 30, offset: 50098},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonSection2Element79,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 34, offset: 50102},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 35, offset: 50103},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 39, offset: 50107},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 40, offset: 50108},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 44, offset: 50112},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 45, offset: 50113},
																											val:        "<<",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 50, offset: 50118},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 51, offset: 50119},
																											val:        ">>",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 56, offset: 50124},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 57, offset: 50125},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1288, col: 62, offset: 50130,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 18, offset: 6396},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 186, col: 17, offset: 6699},
															run: (*parser).callonSection2Element93,
															expr: &seqExpr{
																pos: position{line: 186, col: 17, offset: 6699},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 186, col: 17, offset: 6699},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 186, col: 21, offset: 6703},
																		expr: &litMatcher{
																			pos:        position{line: 186, col: 22, offset: 6704},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 186, col: 26, offset: 6708},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonSection2Element101,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 186, col: 30, offset: 6712},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 186, col: 37, offset: 6719},
																			run: (*parser).callonSection2Element104,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 186, col: 37, offset: 6719},
																				expr: &choiceExpr{
																					pos: position{line: 186, col: 38, offset: 6720},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection2Element107,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonSection2Element110,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection2Element114,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 186, col: 59, offset: 6741},
																							run: (*parser).callonSection2Element116,
																							expr: &seqExpr{
																								pos: position{line: 186, col: 60, offset: 6742},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 186, col: 60, offset: 6742},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 186, col: 70, offset: 6752,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 196, col: 16, offset: 6990},
															run: (*parser).callonSection2Element123,
															expr: &seqExpr{
																pos: position{line: 196, col: 16, offset: 6990},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 196, col: 16, offset: 6990},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 196, col: 21, offset: 6995},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonSection2Element129,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 196, col: 25, offset: 6999},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 196, col: 31, offset: 7005},
																			run: (*parser).callonSection2Element132,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 196, col: 31, offset: 7005},
																				expr: &choiceExpr{
																					pos: position{line: 196, col: 32, offset: 7006},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection2Element135,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonSection2Element138,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection2Element142,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 196, col: 53, offset: 7027},
																							run: (*parser).callonSection2Element144,
																							expr: &seqExpr{
																								pos: position{line: 196, col: 54, offset: 7028},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 196, col: 54, offset: 7028},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 196, col: 63, offset: 7037},
																										expr: &litMatcher{
																											pos:        position{line: 196, col: 64, offset: 7038},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 196, col: 69, offset: 7043,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 200, col: 4, offset: 7118},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 210, col: 21, offset: 7481},
															run: (*parser).callonSection2Element154,
															expr: &litMatcher{
																pos:        position{line: 210, col: 21, offset: 7481},
																val:        "[source]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 212, col: 5, offset: 7539},
															run: (*parser).callonSection2Element156,
															expr: &seqExpr{
																pos: position{line: 212, col: 5, offset: 7539},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 212, col: 5, offset: 7539},
																		val:        "[source,",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 212, col: 16, offset: 7550},
																		label: "language",
																		expr: &actionExpr{
																			pos: position{line: 212, col: 26, offset: 7560},
																			run: (*parser).callonSection2Element160,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 212, col: 26, offset: 7560},
																				expr: &choiceExpr{
																					pos: position{line: 212, col: 27, offset: 7561},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection2Element163,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonSection2Element166,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection2Element170,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 212, col: 48, offset: 7582},
																							run: (*parser).callonSection2Element172,
																							expr: &seqExpr{
																								pos: position{line: 212, col: 49, offset: 7583},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 212, col: 49, offset: 7583},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 212, col: 58, offset: 7592},
																										expr: &litMatcher{
																											pos:        position{line: 212, col: 59, offset: 7593},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 212, col: 64, offset: 7598,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 216, col: 7, offset: 7688},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 247, col: 20, offset: 8646},
															run: (*parser).callonSection2Element182,
															expr: &seqExpr{
																pos: position{line: 247, col: 20, offset: 8646},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 247, col: 20, offset: 8646},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 24, offset: 8650},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonSection2Element186,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 247, col: 41, offset: 8667},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonSection2Element191,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 45, offset: 8671},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 49, offset: 8675},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 286, col: 16, offset: 9839},
																			run: (*parser).callonSection2Element195,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 286, col: 16, offset: 9839},
																				expr: &choiceExpr{
																					pos: position{line: 286, col: 17, offset: 9840},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection2Element198,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonSection2Element201,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection2Element205,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 286, col: 38, offset: 9861},
																							run: (*parser).callonSection2Element207,
																							expr: &seqExpr{
																								pos: position{line: 286, col: 39, offset: 9862},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 286, col: 39, offset: 9862},
																										expr: &choiceExpr{
																											pos: position{line: 1314, col: 8, offset: 50552},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																												&notExpr{
																													pos: position{line: 1312, col: 8, offset: 50541},
																													expr: &anyMatcher{
																														line: 1312, col: 9, offset: 50542,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 44, offset: 9867},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 45, offset: 9868},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 49, offset: 9872},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 50, offset: 9873},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 286, col: 55, offset: 9878,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 70, offset: 8696},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 74, offset: 8700},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 292, col: 15, offset: 9967},
																			run: (*parser).callonSection2Element222,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 292, col: 15, offset: 9967},
																				expr: &choiceExpr{
																					pos: position{line: 292, col: 16, offset: 9968},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection2Element225,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonSection2Element228,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection2Element232,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&seqExpr{
																							pos: position{line: 292, col: 38, offset: 9990},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 292, col: 38, offset: 9990},
																									expr: &choiceExpr{
																										pos: position{line: 1314, col: 8, offset: 50552},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1310, col: 12, offset: 50512},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1310, col: 21, offset: 50521},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																											&notExpr{
																												pos: position{line: 1312, col: 8, offset: 50541},
																												expr: &anyMatcher{
																													line: 1312, col: 9, offset: 50542,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 292, col: 43, offset: 9995},
																									expr: &litMatcher{
																										pos:        position{line: 292, col: 44, offset: 9996},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 292, col: 48, offset: 10000},
																									expr: &litMatcher{
																										pos:        position{line: 292, col: 49, offset: 10001},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 292, col: 54, offset: 10006,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 93, offset: 8719},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 251, col: 1, offset: 8846},
															run: (*parser).callonSection2Element247,
															expr: &seqExpr{
																pos: position{line: 251, col: 1, offset: 8846},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 251, col: 1, offset: 8846},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 251, col: 5, offset: 8850},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonSection2Element251,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 251, col: 22, offset: 8867},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonSection2Element256,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 251, col: 26, offset: 8871},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 251, col: 30, offset: 8875},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 286, col: 16, offset: 9839},
																			run: (*parser).callonSection2Element260,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 286, col: 16, offset: 9839},
																				expr: &choiceExpr{
																					pos: position{line: 286, col: 17, offset: 9840},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection2Element263,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonSection2Element266,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection2Element270,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 286, col: 38, offset: 9861},
																							run: (*parser).callonSection2Element272,
																							expr: &seqExpr{
																								pos: position{line: 286, col: 39, offset: 9862},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 286, col: 39, offset: 9862},
																										expr: &choiceExpr{
																											pos: position{line: 1314, col: 8, offset: 50552},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																												&notExpr{
																													pos: position{line: 1312, col: 8, offset: 50541},
																													expr: &anyMatcher{
																														line: 1312, col: 9, offset: 50542,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 44, offset: 9867},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 45, offset: 9868},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 49, offset: 9872},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 50, offset: 9873},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 286, col: 55, offset: 9878,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 251, col: 51, offset: 8896},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 255, col: 1, offset: 9011},
															run: (*parser).callonSection2Element286,
															expr: &seqExpr{
																pos: position{line: 255, col: 1, offset: 9011},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 255, col: 1, offset: 9011},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 255, col: 5, offset: 9015},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonSection2Element290,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 255, col: 22, offset: 9032},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonSection2Element295,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 255, col: 26, offset: 9036},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 263, col: 20, offset: 9179},
															run: (*parser).callonSection2Element298,
															expr: &seqExpr{
																pos: position{line: 263, col: 20, offset: 9179},
																exprs: []interface{}{
																	&labeledExpr{
																		pos:   position{line: 263, col: 20, offset: 9179},
																		label: "attribute",
																		expr: &choiceExpr{
																			pos: position{line: 263, col: 31, offset: 9190},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 263, col: 31, offset: 9190},
																					run: (*parser).callonSection2Element302,
																					expr: &seqExpr{
																						pos: position{line: 263, col: 31, offset: 9190},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 263, col: 31, offset: 9190},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 35, offset: 9194},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonSection2Element306,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 263, col: 52, offset: 9211},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection2Element311,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 56, offset: 9215},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 60, offset: 9219},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 286, col: 16, offset: 9839},
																									run: (*parser).callonSection2Element315,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 286, col: 16, offset: 9839},
																										expr: &choiceExpr{
																											pos: position{line: 286, col: 17, offset: 9840},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1264, col: 14, offset: 49515},
																													run: (*parser).callonSection2Element318,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1264, col: 14, offset: 49515},
																														expr: &charClassMatcher{
																															pos:        position{line: 1264, col: 14, offset: 49515},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1278, col: 11, offset: 49909},
																													run: (*parser).callonSection2Element321,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1278, col: 11, offset: 49909},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonSection2Element325,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 286, col: 38, offset: 9861},
																													run: (*parser).callonSection2Element327,
																													expr: &seqExpr{
																														pos: position{line: 286, col: 39, offset: 9862},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 286, col: 39, offset: 9862},
																																expr: &choiceExpr{
																																	pos: position{line: 1314, col: 8, offset: 50552},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1310, col: 12, offset: 50512},
																																			val:        "\r\n",
																																			ignoreCase: false,
																																		},
																																		&charClassMatcher{
																																			pos:        position{line: 1310, col: 21, offset: 50521},
																																			val:        "[\\r\\n]",
																																			chars:      []rune{'\r', '\n'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																		&notExpr{
																																			pos: position{line: 1312, col: 8, offset: 50541},
																																			expr: &anyMatcher{
																																				line: 1312, col: 9, offset: 50542,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 44, offset: 9867},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 45, offset: 9868},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 49, offset: 9872},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 50, offset: 9873},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 286, col: 55, offset: 9878,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 81, offset: 9240},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 85, offset: 9244},
																								label: "title",
																								expr: &actionExpr{
																									pos: position{line: 292, col: 15, offset: 9967},
																									run: (*parser).callonSection2Element342,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 292, col: 15, offset: 9967},
																										expr: &choiceExpr{
																											pos: position{line: 292, col: 16, offset: 9968},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1264, col: 14, offset: 49515},
																													run: (*parser).callonSection2Element345,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1264, col: 14, offset: 49515},
																														expr: &charClassMatcher{
																															pos:        position{line: 1264, col: 14, offset: 49515},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1278, col: 11, offset: 49909},
																													run: (*parser).callonSection2Element348,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1278, col: 11, offset: 49909},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonSection2Element352,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&seqExpr{
																													pos: position{line: 292, col: 38, offset: 9990},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 292, col: 38, offset: 9990},
																															expr: &choiceExpr{
																																pos: position{line: 1314, col: 8, offset: 50552},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1310, col: 12, offset: 50512},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1310, col: 21, offset: 50521},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																	&notExpr{
																																		pos: position{line: 1312, col: 8, offset: 50541},
																																		expr: &anyMatcher{
																																			line: 1312, col: 9, offset: 50542,
																																		},
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 292, col: 43, offset: 9995},
																															expr: &litMatcher{
																																pos:        position{line: 292, col: 44, offset: 9996},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 292, col: 48, offset: 10000},
																															expr: &litMatcher{
																																pos:        position{line: 292, col: 49, offset: 10001},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 292, col: 54, offset: 10006,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 104, offset: 9263},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 267, col: 5, offset: 9406},
																					run: (*parser).callonSection2Element367,
																					expr: &seqExpr{
																						pos: position{line: 267, col: 5, offset: 9406},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 267, col: 5, offset: 9406},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 267, col: 9, offset: 9410},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonSection2Element371,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 267, col: 26, offset: 9427},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection2Element376,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 267, col: 30, offset: 9431},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 267, col: 34, offset: 9435},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 286, col: 16, offset: 9839},
																									run: (*parser).callonSection2Element380,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 286, col: 16, offset: 9839},
																										expr: &choiceExpr{
																											pos: position{line: 286, col: 17, offset: 9840},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1264, col: 14, offset: 49515},
																													run: (*parser).callonSection2Element383,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1264, col: 14, offset: 49515},
																														expr: &charClassMatcher{
																															pos:        position{line: 1264, col: 14, offset: 49515},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1278, col: 11, offset: 49909},
																													run: (*parser).callonSection2Element386,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1278, col: 11, offset: 49909},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonSection2Element390,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 286, col: 38, offset: 9861},
																													run: (*parser).callonSection2Element392,
																													expr: &seqExpr{
																														pos: position{line: 286, col: 39, offset: 9862},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 286, col: 39, offset: 9862},
																																expr: &choiceExpr{
																																	pos: position{line: 1314, col: 8, offset: 50552},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1310, col: 12, offset: 50512},
																																			val:        "\r\n",
																																			ignoreCase: false,
																																		},
																																		&charClassMatcher{
																																			pos:        position{line: 1310, col: 21, offset: 50521},
																																			val:        "[\\r\\n]",
																																			chars:      []rune{'\r', '\n'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																		&notExpr{
																																			pos: position{line: 1312, col: 8, offset: 50541},
																																			expr: &anyMatcher{
																																				line: 1312, col: 9, offset: 50542,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 44, offset: 9867},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 45, offset: 9868},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 49, offset: 9872},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 50, offset: 9873},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 286, col: 55, offset: 9878,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 267, col: 55, offset: 9456},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 271, col: 5, offset: 9587},
																					run: (*parser).callonSection2Element406,
																					expr: &seqExpr{
																						pos: position{line: 271, col: 5, offset: 9587},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 271, col: 5, offset: 9587},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 271, col: 9, offset: 9591},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonSection2Element410,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 271, col: 26, offset: 9608},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection2Element415,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 271, col: 30, offset: 9612},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&stateCodeExpr{
																		pos: position{line: 275, col: 1, offset: 9688},
																		run: (*parser).callonSection2Element418,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 205, col: 30, offset: 7283},
															run: (*parser).callonSection2Element419,
															expr: &seqExpr{
																pos: position{line: 205, col: 30, offset: 7283},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 205, col: 30, offset: 7283},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 205, col: 34, offset: 7287},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 598, col: 19, offset: 22218},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 598, col: 19, offset: 22218},
																					run: (*parser).callonSection2Element424,
																					expr: &litMatcher{
																						pos:        position{line: 598, col: 19, offset: 22218},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 600, col: 9, offset: 22264},
																					run: (*parser).callonSection2Element426,
																					expr: &litMatcher{
																						pos:        position{line: 600, col: 9, offset: 22264},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 602, col: 9, offset: 22312},
																					run: (*parser).callonSection2Element428,
																					expr: &litMatcher{
																						pos:        position{line: 602, col: 9, offset: 22312},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 604, col: 9, offset: 22370},
																					run: (*parser).callonSection2Element430,
																					expr: &litMatcher{
																						pos:        position{line: 604, col: 9, offset: 22370},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 606, col: 9, offset: 22424},
																					run: (*parser).callonSection2Element432,
																					expr: &litMatcher{
																						pos:        position{line: 606, col: 9, offset: 22424},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 205, col: 53, offset: 7306},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 243, col: 21, offset: 8543},
															run: (*parser).callonSection2Element435,
															expr: &litMatcher{
																pos:        position{line: 243, col: 21, offset: 8543},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 221, col: 19, offset: 7839},
															run: (*parser).callonSection2Element437,
															expr: &seqExpr{
																pos: position{line: 221, col: 19, offset: 7839},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 221, col: 19, offset: 7839},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 221, col: 23, offset: 7843},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonSection2Element443,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 221, col: 27, offset: 7847},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 221, col: 38, offset: 7858},
																			expr: &choiceExpr{
																				pos: position{line: 225, col: 21, offset: 7971},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 225, col: 21, offset: 7971},
																						run: (*parser).callonSection2Element448,
																						expr: &seqExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 225, col: 21, offset: 7971},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										run: (*parser).callonSection2Element451,
																										expr: &seqExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9116},
																														run: (*parser).callonSection2Element454,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9116},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 28, offset: 8242},
																													expr: &actionExpr{
																														pos: position{line: 282, col: 14, offset: 9780},
																														run: (*parser).callonSection2Element457,
																														expr: &litMatcher{
																															pos:        position{line: 282, col: 14, offset: 9780},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 39, offset: 8253},
																													expr: &actionExpr{
																														pos: position{line: 1229, col: 16, offset: 48642},
																														run: (*parser).callonSection2Element460,
																														expr: &litMatcher{
																															pos:        position{line: 1229, col: 16, offset: 48642},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 231, col: 52, offset: 8266},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 231, col: 56, offset: 8270},
																														expr: &choiceExpr{
																															pos: position{line: 231, col: 57, offset: 8271},
																															alternatives: []interface{}{
																																&actionExpr{
																																	pos: position{line: 1264, col: 14, offset: 49515},
																																	run: (*parser).callonSection2Element465,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		expr: &charClassMatcher{
																																			pos:        position{line: 1264, col: 14, offset: 49515},
																																			val:        "[a-zA-Z0-9]",
																																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 1278, col: 11, offset: 49909},
																																	run: (*parser).callonSection2Element468,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		expr: &choiceExpr{
																																			pos: position{line: 1306, col: 7, offset: 50454},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1306, col: 7, offset: 50454},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 1306, col: 13, offset: 50460},
																																					run: (*parser).callonSection2Element472,
																																					expr: &litMatcher{
																																						pos:        position{line: 1306, col: 13, offset: 50460},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 231, col: 78, offset: 8292},
																																	run: (*parser).callonSection2Element474,
																																	expr: &seqExpr{
																																		pos: position{line: 231, col: 79, offset: 8293},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 231, col: 79, offset: 8293},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 80, offset: 8294},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 84, offset: 8298},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 85, offset: 8299},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 89, offset: 8303},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 90, offset: 8304},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 231, col: 95, offset: 8309,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 225, col: 40, offset: 7990},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 225, col: 44, offset: 7994},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 237, col: 19, offset: 8403},
																										run: (*parser).callonSection2Element485,
																										expr: &labeledExpr{
																											pos:   position{line: 237, col: 19, offset: 8403},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 237, col: 25, offset: 8409},
																												expr: &choiceExpr{
																													pos: position{line: 237, col: 26, offset: 8410},
																													alternatives: []interface{}{
																														&actionExpr{
																															pos: position{line: 1264, col: 14, offset: 49515},
																															run: (*parser).callonSection2Element489,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1264, col: 14, offset: 49515},
																																expr: &charClassMatcher{
																																	pos:        position{line: 1264, col: 14, offset: 49515},
																																	val:        "[a-zA-Z0-9]",
																																	ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 1278, col: 11, offset: 49909},
																															run: (*parser).callonSection2Element492,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1278, col: 11, offset: 49909},
																																expr: &choiceExpr{
																																	pos: position{line: 1306, col: 7, offset: 50454},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1306, col: 7, offset: 50454},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 1306, col: 13, offset: 50460},
																																			run: (*parser).callonSection2Element496,
																																			expr: &litMatcher{
																																				pos:        position{line: 1306, col: 13, offset: 50460},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 237, col: 47, offset: 8431},
																															run: (*parser).callonSection2Element498,
																															expr: &seqExpr{
																																pos: position{line: 237, col: 48, offset: 8432},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 237, col: 48, offset: 8432},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 49, offset: 8433},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 237, col: 53, offset: 8437},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 54, offset: 8438},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 237, col: 58, offset: 8442},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 59, offset: 8443},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 237, col: 64, offset: 8448,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 225, col: 67, offset: 8017},
																									expr: &litMatcher{
																										pos:        position{line: 225, col: 67, offset: 8017},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 225, col: 72, offset: 8022},
																									expr: &choiceExpr{
																										pos: position{line: 1306, col: 7, offset: 50454},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1306, col: 7, offset: 50454},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1306, col: 13, offset: 50460},
																												run: (*parser).callonSection2Element512,
																												expr: &litMatcher{
																													pos:        position{line: 1306, col: 13, offset: 50460},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 227, col: 5, offset: 8106},
																						run: (*parser).callonSection2Element514,
																						expr: &seqExpr{
																							pos: position{line: 227, col: 5, offset: 8106},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 227, col: 5, offset: 8106},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										run: (*parser).callonSection2Element517,
																										expr: &seqExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9116},
																														run: (*parser).callonSection2Element520,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9116},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 28, offset: 8242},
																													expr: &actionExpr{
																														pos: position{line: 282, col: 14, offset: 9780},
																														run: (*parser).callonSection2Element523,
																														expr: &litMatcher{
																															pos:        position{line: 282, col: 14, offset: 9780},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 39, offset: 8253},
																													expr: &actionExpr{
																														pos: position{line: 1229, col: 16, offset: 48642},
																														run: (*parser).callonSection2Element526,
																														expr: &litMatcher{
																															pos:        position{line: 1229, col: 16, offset: 48642},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 231, col: 52, offset: 8266},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 231, col: 56, offset: 8270},
																														expr: &choiceExpr{
																															pos: position{line: 231, col: 57, offset: 8271},
																															alternatives: []interface{}{
																																&actionExpr{
																																	pos: position{line: 1264, col: 14, offset: 49515},
																																	run: (*parser).callonSection2Element531,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		expr: &charClassMatcher{
																																			pos:        position{line: 1264, col: 14, offset: 49515},
																																			val:        "[a-zA-Z0-9]",
																																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 1278, col: 11, offset: 49909},
																																	run: (*parser).callonSection2Element534,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		expr: &choiceExpr{
																																			pos: position{line: 1306, col: 7, offset: 50454},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1306, col: 7, offset: 50454},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 1306, col: 13, offset: 50460},
																																					run: (*parser).callonSection2Element538,
																																					expr: &litMatcher{
																																						pos:        position{line: 1306, col: 13, offset: 50460},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 231, col: 78, offset: 8292},
																																	run: (*parser).callonSection2Element540,
																																	expr: &seqExpr{
																																		pos: position{line: 231, col: 79, offset: 8293},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 231, col: 79, offset: 8293},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 80, offset: 8294},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 84, offset: 8298},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 85, offset: 8299},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 89, offset: 8303},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 90, offset: 8304},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 231, col: 95, offset: 8309,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 227, col: 24, offset: 8125},
																									expr: &litMatcher{
																										pos:        position{line: 227, col: 24, offset: 8125},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 227, col: 29, offset: 8130},
																									expr: &choiceExpr{
																										pos: position{line: 1306, col: 7, offset: 50454},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1306, col: 7, offset: 50454},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1306, col: 13, offset: 50460},
																												run: (*parser).callonSection2Element554,
																												expr: &litMatcher{
																													pos:        position{line: 1306, col: 13, offset: 50460},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 221, col: 59, offset: 7879},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 165, col: 170, offset: 6018},
												expr: &choiceExpr{
													pos: position{line: 1306, col: 7, offset: 50454},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1306, col: 7, offset: 50454},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1306, col: 13, offset: 50460},
															run: (*parser).callonSection2Element560,
															expr: &litMatcher{
																pos:        position{line: 1306, col: 13, offset: 50460},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1314, col: 8, offset: 50552},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1310, col: 12, offset: 50512},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1310, col: 21, offset: 50521},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1312, col: 8, offset: 50541},
														expr: &anyMatcher{
															line: 1312, col: 9, offset: 50542,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 380, col: 5, offset: 13173},
							label: "element",
							expr: &choiceExpr{
								pos: position{line: 380, col: 14, offset: 13182},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 380, col: 14, offset: 13182},
										name: "Section3_5",
									},
									&ruleRefExpr{
										pos:  position{line: 380, col: 27, offset: 13195},
										name: "DocumentElement",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section3",
			pos:  position{line: 384, col: 1, offset: 13290},
			expr: &actionExpr{
				pos: position{line: 384, col: 13, offset: 13302},
				run: (*parser).callonSection31,
				expr: &seqExpr{
					pos: position{line: 384, col: 13, offset: 13302},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 384, col: 13, offset: 13302},
							label: "header",
							expr: &ruleRefExpr{
								pos:  position{line: 384, col: 21, offset: 13310},
								name: "Section3Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 384, col: 36, offset: 13325},
							label: "elements",
							expr: &zeroOrMoreExpr{
								pos: position{line: 384, col: 46, offset: 13335},
								expr: &ruleRefExpr{
									pos:  position{line: 384, col: 46, offset: 13335},
									name: "Section3Element",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section3Title",
			pos:  position{line: 390, col: 1, offset: 13480},
			expr: &actionExpr{
				pos: position{line: 390, col: 18, offset: 13497},
				run: (*parser).callonSection3Title1,
				expr: &seqExpr{
					pos: position{line: 390, col: 18, offset: 13497},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 388, col: 24, offset: 13467},
							val:        "====",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 388, col: 31, offset: 13474},
							expr: &choiceExpr{
								pos: position{line: 1306, col: 7, offset: 50454},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1306, col: 7, offset: 50454},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1306, col: 13, offset: 50460},
										run: (*parser).callonSection3Title7,
										expr: &litMatcher{
											pos:        position{line: 1306, col: 13, offset: 50460},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 390, col: 38, offset: 13517},
							label: "elements",
							expr: &ruleRefExpr{
								pos:  position{line: 390, col: 48, offset: 13527},
								name: "TitleElements",
							},
						},
						&labeledExpr{
							pos:   position{line: 390, col: 63, offset: 13542},
							label: "id",
							expr: &zeroOrMoreExpr{
								pos: position{line: 390, col: 67, offset: 13546},
								expr: &actionExpr{
									pos: position{line: 180, col: 20, offset: 6467},
									run: (*parser).callonSection3Title13,
									expr: &seqExpr{
										pos: position{line: 180, col: 20, offset: 6467},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 180, col: 20, offset: 6467},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 180, col: 25, offset: 6472},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 1288, col: 7, offset: 50075},
													run: (*parser).callonSection3Title17,
													expr: &oneOrMoreExpr{
														pos: position{line: 1288, col: 7, offset: 50075},
														expr: &choiceExpr{
															pos: position{line: 1288, col: 8, offset: 50076},
															alternatives: []interface{}{
																&actionExpr{
																	pos: position{line: 1264, col: 14, offset: 49515},
																	run: (*parser).callonSection3Title20,
																	expr: &oneOrMoreExpr{
																		pos: position{line: 1264, col: 14, offset: 49515},
																		expr: &charClassMatcher{
																			pos:        position{line: 1264, col: 14, offset: 49515},
																			val:        "[a-zA-Z0-9]",
																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 1288, col: 20, offset: 50088},
																	run: (*parser).callonSection3Title23,
																	expr: &seqExpr{
																		pos: position{line: 1288, col: 21, offset: 50089},
																		exprs: []interface{}{
																			&notExpr{
																				pos: position{line: 1288, col: 21, offset: 50089},
																				expr: &choiceExpr{
																					pos: position{line: 1310, col: 12, offset: 50512},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1310, col: 12, offset: 50512},
																							val:        "\r\n",
																							ignoreCase: false,
																						},
																						&charClassMatcher{
																							pos:        position{line: 1310, col: 21, offset: 50521},
																							val:        "[\\r\\n]",
																							chars:      []rune{'\r', '\n'},
																							ignoreCase: false,
																							inverted:   false,
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 1288, col: 30, offset: 50098},
																				expr: &choiceExpr{
																					pos: position{line: 1306, col: 7, offset: 50454},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1306, col: 7, offset: 50454},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1306, col: 13, offset: 50460},
																							run: (*parser).callonSection3Title32,
																							expr: &litMatcher{
																								pos:        position{line: 1306, col: 13, offset: 50460},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 1288, col: 34, offset: 50102},
																				expr: &litMatcher{
																					pos:        position{line: 1288, col: 35, offset: 50103},
																					val:        "[",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1288, col: 39, offset: 50107},
																				expr: &litMatcher{
																					pos:        position{line: 1288, col: 40, offset: 50108},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1288, col: 44, offset: 50112},
																				expr: &litMatcher{
																					pos:        position{line: 1288, col: 45, offset: 50113},
																					val:        "<<",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1288, col: 50, offset: 50118},
																				expr: &litMatcher{
																					pos:        position{line: 1288, col: 51, offset: 50119},
																					val:        ">>",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1288, col: 56, offset: 50124},
																				expr: &litMatcher{
																					pos:        position{line: 1288, col: 57, offset: 50125},
																					val:        ",",
																					ignoreCase: false,
																				},
																			},
																			&anyMatcher{
																				line: 1288, col: 62, offset: 50130,
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 180, col: 33, offset: 6480},
												val:        "]]",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 180, col: 38, offset: 6485},
												expr: &choiceExpr{
													pos: position{line: 1306, col: 7, offset: 50454},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1306, col: 7, offset: 50454},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1306, col: 13, offset: 50460},
															run: (*parser).callonSection3Title49,
															expr: &litMatcher{
																pos:        position{line: 1306, col: 13, offset: 50460},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1314, col: 8, offset: 50552},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1310, col: 12, offset: 50512},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1310, col: 21, offset: 50521},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1312, col: 8, offset: 50541},
									expr: &anyMatcher{
										line: 1312, col: 9, offset: 50542,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section3Element",
			pos:  position{line: 398, col: 1, offset: 14016},
			expr: &actionExpr{
				pos: position{line: 398, col: 20, offset: 14035},
				run: (*parser).callonSection3Element1,
				expr: &seqExpr{
					pos: position{line: 398, col: 20, offset: 14035},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 398, col: 20, offset: 14035},
							expr: &seqExpr{
								pos: position{line: 352, col: 24, offset: 11958},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 352, col: 24, offset: 11958},
										val:        "==",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 352, col: 29, offset: 11963},
										expr: &choiceExpr{
											pos: position{line: 1306, col: 7, offset: 50454},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1306, col: 7, offset: 50454},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1306, col: 13, offset: 50460},
													run: (*parser).callonSection3Element9,
													expr: &litMatcher{
														pos:        position{line: 1306, col: 13, offset: 50460},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 398, col: 41, offset: 14056},
							expr: &seqExpr{
								pos: position{line: 368, col: 24, offset: 12523},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 368, col: 24, offset: 12523},
										val:        "===",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 368, col: 30, offset: 12529},
										expr: &choiceExpr{
											pos: position{line: 1306, col: 7, offset: 50454},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1306, col: 7, offset: 50454},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1306, col: 13, offset: 50460},
													run: (*parser).callonSection3Element17,
													expr: &litMatcher{
														pos:        position{line: 1306, col: 13, offset: 50460},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 398, col: 62, offset: 14077},
							expr: &seqExpr{
								pos: position{line: 388, col: 24, offset: 13467},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 388, col: 24, offset: 13467},
										val:        "====",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 388, col: 31, offset: 13474},
										expr: &choiceExpr{
											pos: position{line: 1306, col: 7, offset: 50454},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1306, col: 7, offset: 50454},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1306, col: 13, offset: 50460},
													run: (*parser).callonSection3Element25,
													expr: &litMatcher{
														pos:        position{line: 1306, col: 13, offset: 50460},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 399, col: 5, offset: 14102},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 399, col: 16, offset: 14113},
								expr: &actionExpr{
									pos: position{line: 164, col: 21, offset: 5763},
									run: (*parser).callonSection3Element29,
									expr: &seqExpr{
										pos: position{line: 164, col: 21, offset: 5763},
										exprs: []interface{}{
											&andExpr{
												pos: position{line: 164, col: 21, offset: 5763},
												expr: &charClassMatcher{
													pos:        position{line: 164, col: 23, offset: 5765},
													val:        "[[.#]",
													chars:      []rune{'[', '.', '#'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&labeledExpr{
												pos:   position{line: 165, col: 5, offset: 5853},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 165, col: 11, offset: 5859},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 174, col: 14, offset: 6316},
															run: (*parser).callonSection3Element35,
															expr: &seqExpr{
																pos: position{line: 174, col: 14, offset: 6316},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 174, col: 14, offset: 6316},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 174, col: 19, offset: 6321},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1288, col: 7, offset: 50075},
																			run: (*parser).callonSection3Element39,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1288, col: 7, offset: 50075},
																				expr: &choiceExpr{
																					pos: position{line: 1288, col: 8, offset: 50076},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection3Element42,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1288, col: 20, offset: 50088},
																							run: (*parser).callonSection3Element45,
																							expr: &seqExpr{
																								pos: position{line: 1288, col: 21, offset: 50089},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1288, col: 21, offset: 50089},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 30, offset: 50098},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonSection3Element54,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 34, offset: 50102},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 35, offset: 50103},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 39, offset: 50107},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 40, offset: 50108},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 44, offset: 50112},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 45, offset: 50113},
																											val:        "<<",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 50, offset: 50118},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 51, offset: 50119},
																											val:        ">>",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 56, offset: 50124},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 57, offset: 50125},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1288, col: 62, offset: 50130,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 174, col: 27, offset: 6329},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 5, offset: 6383},
															run: (*parser).callonSection3Element68,
															expr: &seqExpr{
																pos: position{line: 176, col: 5, offset: 6383},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 5, offset: 6383},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 10, offset: 6388},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1288, col: 7, offset: 50075},
																			run: (*parser).callonSection3Element72,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1288, col: 7, offset: 50075},
																				expr: &choiceExpr{
																					pos: position{line: 1288, col: 8, offset: 50076},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection3Element75,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1288, col: 20, offset: 50088},
																							run: (*parser).callonSection3Element78,
																							expr: &seqExpr{
																								pos: position{line: 1288, col: 21, offset: 50089},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1288, col: 21, offset: 50089},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 30, offset: 50098},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonSection3Element87,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 34, offset: 50102},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 35, offset: 50103},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 39, offset: 50107},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 40, offset: 50108},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 44, offset: 50112},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 45, offset: 50113},
																											val:        "<<",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 50, offset: 50118},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 51, offset: 50119},
																											val:        ">>",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 56, offset: 50124},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 57, offset: 50125},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1288, col: 62, offset: 50130,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 18, offset: 6396},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 186, col: 17, offset: 6699},
															run: (*parser).callonSection3Element101,
															expr: &seqExpr{
																pos: position{line: 186, col: 17, offset: 6699},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 186, col: 17, offset: 6699},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 186, col: 21, offset: 6703},
																		expr: &litMatcher{
																			pos:        position{line: 186, col: 22, offset: 6704},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 186, col: 26, offset: 6708},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonSection3Element109,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 186, col: 30, offset: 6712},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 186, col: 37, offset: 6719},
																			run: (*parser).callonSection3Element112,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 186, col: 37, offset: 6719},
																				expr: &choiceExpr{
																					pos: position{line: 186, col: 38, offset: 6720},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection3Element115,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonSection3Element118,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection3Element122,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 186, col: 59, offset: 6741},
																							run: (*parser).callonSection3Element124,
																							expr: &seqExpr{
																								pos: position{line: 186, col: 60, offset: 6742},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 186, col: 60, offset: 6742},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 186, col: 70, offset: 6752,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 196, col: 16, offset: 6990},
															run: (*parser).callonSection3Element131,
															expr: &seqExpr{
																pos: position{line: 196, col: 16, offset: 6990},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 196, col: 16, offset: 6990},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 196, col: 21, offset: 6995},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonSection3Element137,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 196, col: 25, offset: 6999},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 196, col: 31, offset: 7005},
																			run: (*parser).callonSection3Element140,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 196, col: 31, offset: 7005},
																				expr: &choiceExpr{
																					pos: position{line: 196, col: 32, offset: 7006},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection3Element143,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonSection3Element146,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection3Element150,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 196, col: 53, offset: 7027},
																							run: (*parser).callonSection3Element152,
																							expr: &seqExpr{
																								pos: position{line: 196, col: 54, offset: 7028},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 196, col: 54, offset: 7028},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 196, col: 63, offset: 7037},
																										expr: &litMatcher{
																											pos:        position{line: 196, col: 64, offset: 7038},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 196, col: 69, offset: 7043,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 200, col: 4, offset: 7118},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 210, col: 21, offset: 7481},
															run: (*parser).callonSection3Element162,
															expr: &litMatcher{
																pos:        position{line: 210, col: 21, offset: 7481},
																val:        "[source]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 212, col: 5, offset: 7539},
															run: (*parser).callonSection3Element164,
															expr: &seqExpr{
																pos: position{line: 212, col: 5, offset: 7539},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 212, col: 5, offset: 7539},
																		val:        "[source,",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 212, col: 16, offset: 7550},
																		label: "language",
																		expr: &actionExpr{
																			pos: position{line: 212, col: 26, offset: 7560},
																			run: (*parser).callonSection3Element168,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 212, col: 26, offset: 7560},
																				expr: &choiceExpr{
																					pos: position{line: 212, col: 27, offset: 7561},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection3Element171,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonSection3Element174,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection3Element178,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 212, col: 48, offset: 7582},
																							run: (*parser).callonSection3Element180,
																							expr: &seqExpr{
																								pos: position{line: 212, col: 49, offset: 7583},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 212, col: 49, offset: 7583},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 212, col: 58, offset: 7592},
																										expr: &litMatcher{
																											pos:        position{line: 212, col: 59, offset: 7593},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 212, col: 64, offset: 7598,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 216, col: 7, offset: 7688},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 247, col: 20, offset: 8646},
															run: (*parser).callonSection3Element190,
															expr: &seqExpr{
																pos: position{line: 247, col: 20, offset: 8646},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 247, col: 20, offset: 8646},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 24, offset: 8650},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonSection3Element194,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 247, col: 41, offset: 8667},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonSection3Element199,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 45, offset: 8671},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 49, offset: 8675},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 286, col: 16, offset: 9839},
																			run: (*parser).callonSection3Element203,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 286, col: 16, offset: 9839},
																				expr: &choiceExpr{
																					pos: position{line: 286, col: 17, offset: 9840},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection3Element206,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonSection3Element209,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection3Element213,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 286, col: 38, offset: 9861},
																							run: (*parser).callonSection3Element215,
																							expr: &seqExpr{
																								pos: position{line: 286, col: 39, offset: 9862},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 286, col: 39, offset: 9862},
																										expr: &choiceExpr{
																											pos: position{line: 1314, col: 8, offset: 50552},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																												&notExpr{
																													pos: position{line: 1312, col: 8, offset: 50541},
																													expr: &anyMatcher{
																														line: 1312, col: 9, offset: 50542,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 44, offset: 9867},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 45, offset: 9868},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 49, offset: 9872},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 50, offset: 9873},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 286, col: 55, offset: 9878,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 70, offset: 8696},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 74, offset: 8700},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 292, col: 15, offset: 9967},
																			run: (*parser).callonSection3Element230,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 292, col: 15, offset: 9967},
																				expr: &choiceExpr{
																					pos: position{line: 292, col: 16, offset: 9968},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection3Element233,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonSection3Element236,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection3Element240,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&seqExpr{
																							pos: position{line: 292, col: 38, offset: 9990},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 292, col: 38, offset: 9990},
																									expr: &choiceExpr{
																										pos: position{line: 1314, col: 8, offset: 50552},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1310, col: 12, offset: 50512},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1310, col: 21, offset: 50521},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																											&notExpr{
																												pos: position{line: 1312, col: 8, offset: 50541},
																												expr: &anyMatcher{
																													line: 1312, col: 9, offset: 50542,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 292, col: 43, offset: 9995},
																									expr: &litMatcher{
																										pos:        position{line: 292, col: 44, offset: 9996},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 292, col: 48, offset: 10000},
																									expr: &litMatcher{
																										pos:        position{line: 292, col: 49, offset: 10001},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 292, col: 54, offset: 10006,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 93, offset: 8719},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 251, col: 1, offset: 8846},
															run: (*parser).callonSection3Element255,
															expr: &seqExpr{
																pos: position{line: 251, col: 1, offset: 8846},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 251, col: 1, offset: 8846},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 251, col: 5, offset: 8850},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonSection3Element259,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 251, col: 22, offset: 8867},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonSection3Element264,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 251, col: 26, offset: 8871},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 251, col: 30, offset: 8875},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 286, col: 16, offset: 9839},
																			run: (*parser).callonSection3Element268,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 286, col: 16, offset: 9839},
																				expr: &choiceExpr{
																					pos: position{line: 286, col: 17, offset: 9840},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection3Element271,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonSection3Element274,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection3Element278,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 286, col: 38, offset: 9861},
																							run: (*parser).callonSection3Element280,
																							expr: &seqExpr{
																								pos: position{line: 286, col: 39, offset: 9862},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 286, col: 39, offset: 9862},
																										expr: &choiceExpr{
																											pos: position{line: 1314, col: 8, offset: 50552},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																												&notExpr{
																													pos: position{line: 1312, col: 8, offset: 50541},
																													expr: &anyMatcher{
																														line: 1312, col: 9, offset: 50542,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 44, offset: 9867},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 45, offset: 9868},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 49, offset: 9872},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 50, offset: 9873},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 286, col: 55, offset: 9878,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 251, col: 51, offset: 8896},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 255, col: 1, offset: 9011},
															run: (*parser).callonSection3Element294,
															expr: &seqExpr{
																pos: position{line: 255, col: 1, offset: 9011},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 255, col: 1, offset: 9011},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 255, col: 5, offset: 9015},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonSection3Element298,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 255, col: 22, offset: 9032},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonSection3Element303,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 255, col: 26, offset: 9036},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 263, col: 20, offset: 9179},
															run: (*parser).callonSection3Element306,
															expr: &seqExpr{
																pos: position{line: 263, col: 20, offset: 9179},
																exprs: []interface{}{
																	&labeledExpr{
																		pos:   position{line: 263, col: 20, offset: 9179},
																		label: "attribute",
																		expr: &choiceExpr{
																			pos: position{line: 263, col: 31, offset: 9190},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 263, col: 31, offset: 9190},
																					run: (*parser).callonSection3Element310,
																					expr: &seqExpr{
																						pos: position{line: 263, col: 31, offset: 9190},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 263, col: 31, offset: 9190},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 35, offset: 9194},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonSection3Element314,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 263, col: 52, offset: 9211},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection3Element319,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 56, offset: 9215},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 60, offset: 9219},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 286, col: 16, offset: 9839},
																									run: (*parser).callonSection3Element323,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 286, col: 16, offset: 9839},
																										expr: &choiceExpr{
																											pos: position{line: 286, col: 17, offset: 9840},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1264, col: 14, offset: 49515},
																													run: (*parser).callonSection3Element326,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1264, col: 14, offset: 49515},
																														expr: &charClassMatcher{
																															pos:        position{line: 1264, col: 14, offset: 49515},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1278, col: 11, offset: 49909},
																													run: (*parser).callonSection3Element329,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1278, col: 11, offset: 49909},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonSection3Element333,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 286, col: 38, offset: 9861},
																													run: (*parser).callonSection3Element335,
																													expr: &seqExpr{
																														pos: position{line: 286, col: 39, offset: 9862},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 286, col: 39, offset: 9862},
																																expr: &choiceExpr{
																																	pos: position{line: 1314, col: 8, offset: 50552},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1310, col: 12, offset: 50512},
																																			val:        "\r\n",
																																			ignoreCase: false,
																																		},
																																		&charClassMatcher{
																																			pos:        position{line: 1310, col: 21, offset: 50521},
																																			val:        "[\\r\\n]",
																																			chars:      []rune{'\r', '\n'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																		&notExpr{
																																			pos: position{line: 1312, col: 8, offset: 50541},
																																			expr: &anyMatcher{
																																				line: 1312, col: 9, offset: 50542,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 44, offset: 9867},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 45, offset: 9868},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 49, offset: 9872},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 50, offset: 9873},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 286, col: 55, offset: 9878,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 81, offset: 9240},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 85, offset: 9244},
																								label: "title",
																								expr: &actionExpr{
																									pos: position{line: 292, col: 15, offset: 9967},
																									run: (*parser).callonSection3Element350,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 292, col: 15, offset: 9967},
																										expr: &choiceExpr{
																											pos: position{line: 292, col: 16, offset: 9968},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1264, col: 14, offset: 49515},
																													run: (*parser).callonSection3Element353,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1264, col: 14, offset: 49515},
																														expr: &charClassMatcher{
																															pos:        position{line: 1264, col: 14, offset: 49515},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1278, col: 11, offset: 49909},
																													run: (*parser).callonSection3Element356,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1278, col: 11, offset: 49909},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonSection3Element360,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&seqExpr{
																													pos: position{line: 292, col: 38, offset: 9990},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 292, col: 38, offset: 9990},
																															expr: &choiceExpr{
																																pos: position{line: 1314, col: 8, offset: 50552},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1310, col: 12, offset: 50512},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1310, col: 21, offset: 50521},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																	&notExpr{
																																		pos: position{line: 1312, col: 8, offset: 50541},
																																		expr: &anyMatcher{
																																			line: 1312, col: 9, offset: 50542,
																																		},
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 292, col: 43, offset: 9995},
																															expr: &litMatcher{
																																pos:        position{line: 292, col: 44, offset: 9996},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 292, col: 48, offset: 10000},
																															expr: &litMatcher{
																																pos:        position{line: 292, col: 49, offset: 10001},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 292, col: 54, offset: 10006,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 104, offset: 9263},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 267, col: 5, offset: 9406},
																					run: (*parser).callonSection3Element375,
																					expr: &seqExpr{
																						pos: position{line: 267, col: 5, offset: 9406},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 267, col: 5, offset: 9406},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 267, col: 9, offset: 9410},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonSection3Element379,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 267, col: 26, offset: 9427},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection3Element384,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 267, col: 30, offset: 9431},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 267, col: 34, offset: 9435},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 286, col: 16, offset: 9839},
																									run: (*parser).callonSection3Element388,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 286, col: 16, offset: 9839},
																										expr: &choiceExpr{
																											pos: position{line: 286, col: 17, offset: 9840},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1264, col: 14, offset: 49515},
																													run: (*parser).callonSection3Element391,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1264, col: 14, offset: 49515},
																														expr: &charClassMatcher{
																															pos:        position{line: 1264, col: 14, offset: 49515},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1278, col: 11, offset: 49909},
																													run: (*parser).callonSection3Element394,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1278, col: 11, offset: 49909},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonSection3Element398,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 286, col: 38, offset: 9861},
																													run: (*parser).callonSection3Element400,
																													expr: &seqExpr{
																														pos: position{line: 286, col: 39, offset: 9862},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 286, col: 39, offset: 9862},
																																expr: &choiceExpr{
																																	pos: position{line: 1314, col: 8, offset: 50552},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1310, col: 12, offset: 50512},
																																			val:        "\r\n",
																																			ignoreCase: false,
																																		},
																																		&charClassMatcher{
																																			pos:        position{line: 1310, col: 21, offset: 50521},
																																			val:        "[\\r\\n]",
																																			chars:      []rune{'\r', '\n'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																		&notExpr{
																																			pos: position{line: 1312, col: 8, offset: 50541},
																																			expr: &anyMatcher{
																																				line: 1312, col: 9, offset: 50542,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 44, offset: 9867},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 45, offset: 9868},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 49, offset: 9872},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 50, offset: 9873},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 286, col: 55, offset: 9878,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 267, col: 55, offset: 9456},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 271, col: 5, offset: 9587},
																					run: (*parser).callonSection3Element414,
																					expr: &seqExpr{
																						pos: position{line: 271, col: 5, offset: 9587},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 271, col: 5, offset: 9587},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 271, col: 9, offset: 9591},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonSection3Element418,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 271, col: 26, offset: 9608},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection3Element423,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 271, col: 30, offset: 9612},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&stateCodeExpr{
																		pos: position{line: 275, col: 1, offset: 9688},
																		run: (*parser).callonSection3Element426,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 205, col: 30, offset: 7283},
															run: (*parser).callonSection3Element427,
															expr: &seqExpr{
																pos: position{line: 205, col: 30, offset: 7283},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 205, col: 30, offset: 7283},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 205, col: 34, offset: 7287},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 598, col: 19, offset: 22218},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 598, col: 19, offset: 22218},
																					run: (*parser).callonSection3Element432,
																					expr: &litMatcher{
																						pos:        position{line: 598, col: 19, offset: 22218},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 600, col: 9, offset: 22264},
																					run: (*parser).callonSection3Element434,
																					expr: &litMatcher{
																						pos:        position{line: 600, col: 9, offset: 22264},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 602, col: 9, offset: 22312},
																					run: (*parser).callonSection3Element436,
																					expr: &litMatcher{
																						pos:        position{line: 602, col: 9, offset: 22312},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 604, col: 9, offset: 22370},
																					run: (*parser).callonSection3Element438,
																					expr: &litMatcher{
																						pos:        position{line: 604, col: 9, offset: 22370},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 606, col: 9, offset: 22424},
																					run: (*parser).callonSection3Element440,
																					expr: &litMatcher{
																						pos:        position{line: 606, col: 9, offset: 22424},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 205, col: 53, offset: 7306},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 243, col: 21, offset: 8543},
															run: (*parser).callonSection3Element443,
															expr: &litMatcher{
																pos:        position{line: 243, col: 21, offset: 8543},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 221, col: 19, offset: 7839},
															run: (*parser).callonSection3Element445,
															expr: &seqExpr{
																pos: position{line: 221, col: 19, offset: 7839},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 221, col: 19, offset: 7839},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 221, col: 23, offset: 7843},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonSection3Element451,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 221, col: 27, offset: 7847},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 221, col: 38, offset: 7858},
																			expr: &choiceExpr{
																				pos: position{line: 225, col: 21, offset: 7971},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 225, col: 21, offset: 7971},
																						run: (*parser).callonSection3Element456,
																						expr: &seqExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 225, col: 21, offset: 7971},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										run: (*parser).callonSection3Element459,
																										expr: &seqExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9116},
																														run: (*parser).callonSection3Element462,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9116},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 28, offset: 8242},
																													expr: &actionExpr{
																														pos: position{line: 282, col: 14, offset: 9780},
																														run: (*parser).callonSection3Element465,
																														expr: &litMatcher{
																															pos:        position{line: 282, col: 14, offset: 9780},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 39, offset: 8253},
																													expr: &actionExpr{
																														pos: position{line: 1229, col: 16, offset: 48642},
																														run: (*parser).callonSection3Element468,
																														expr: &litMatcher{
																															pos:        position{line: 1229, col: 16, offset: 48642},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 231, col: 52, offset: 8266},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 231, col: 56, offset: 8270},
																														expr: &choiceExpr{
																															pos: position{line: 231, col: 57, offset: 8271},
																															alternatives: []interface{}{
																																&actionExpr{
																																	pos: position{line: 1264, col: 14, offset: 49515},
																																	run: (*parser).callonSection3Element473,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		expr: &charClassMatcher{
																																			pos:        position{line: 1264, col: 14, offset: 49515},
																																			val:        "[a-zA-Z0-9]",
																																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 1278, col: 11, offset: 49909},
																																	run: (*parser).callonSection3Element476,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		expr: &choiceExpr{
																																			pos: position{line: 1306, col: 7, offset: 50454},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1306, col: 7, offset: 50454},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 1306, col: 13, offset: 50460},
																																					run: (*parser).callonSection3Element480,
																																					expr: &litMatcher{
																																						pos:        position{line: 1306, col: 13, offset: 50460},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 231, col: 78, offset: 8292},
																																	run: (*parser).callonSection3Element482,
																																	expr: &seqExpr{
																																		pos: position{line: 231, col: 79, offset: 8293},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 231, col: 79, offset: 8293},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 80, offset: 8294},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 84, offset: 8298},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 85, offset: 8299},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 89, offset: 8303},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 90, offset: 8304},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 231, col: 95, offset: 8309,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 225, col: 40, offset: 7990},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 225, col: 44, offset: 7994},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 237, col: 19, offset: 8403},
																										run: (*parser).callonSection3Element493,
																										expr: &labeledExpr{
																											pos:   position{line: 237, col: 19, offset: 8403},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 237, col: 25, offset: 8409},
																												expr: &choiceExpr{
																													pos: position{line: 237, col: 26, offset: 8410},
																													alternatives: []interface{}{
																														&actionExpr{
																															pos: position{line: 1264, col: 14, offset: 49515},
																															run: (*parser).callonSection3Element497,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1264, col: 14, offset: 49515},
																																expr: &charClassMatcher{
																																	pos:        position{line: 1264, col: 14, offset: 49515},
																																	val:        "[a-zA-Z0-9]",
																																	ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 1278, col: 11, offset: 49909},
																															run: (*parser).callonSection3Element500,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1278, col: 11, offset: 49909},
																																expr: &choiceExpr{
																																	pos: position{line: 1306, col: 7, offset: 50454},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1306, col: 7, offset: 50454},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 1306, col: 13, offset: 50460},
																																			run: (*parser).callonSection3Element504,
																																			expr: &litMatcher{
																																				pos:        position{line: 1306, col: 13, offset: 50460},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 237, col: 47, offset: 8431},
																															run: (*parser).callonSection3Element506,
																															expr: &seqExpr{
																																pos: position{line: 237, col: 48, offset: 8432},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 237, col: 48, offset: 8432},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 49, offset: 8433},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 237, col: 53, offset: 8437},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 54, offset: 8438},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 237, col: 58, offset: 8442},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 59, offset: 8443},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 237, col: 64, offset: 8448,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 225, col: 67, offset: 8017},
																									expr: &litMatcher{
																										pos:        position{line: 225, col: 67, offset: 8017},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 225, col: 72, offset: 8022},
																									expr: &choiceExpr{
																										pos: position{line: 1306, col: 7, offset: 50454},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1306, col: 7, offset: 50454},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1306, col: 13, offset: 50460},
																												run: (*parser).callonSection3Element520,
																												expr: &litMatcher{
																													pos:        position{line: 1306, col: 13, offset: 50460},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 227, col: 5, offset: 8106},
																						run: (*parser).callonSection3Element522,
																						expr: &seqExpr{
																							pos: position{line: 227, col: 5, offset: 8106},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 227, col: 5, offset: 8106},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										run: (*parser).callonSection3Element525,
																										expr: &seqExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9116},
																														run: (*parser).callonSection3Element528,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9116},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 28, offset: 8242},
																													expr: &actionExpr{
																														pos: position{line: 282, col: 14, offset: 9780},
																														run: (*parser).callonSection3Element531,
																														expr: &litMatcher{
																															pos:        position{line: 282, col: 14, offset: 9780},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 39, offset: 8253},
																													expr: &actionExpr{
																														pos: position{line: 1229, col: 16, offset: 48642},
																														run: (*parser).callonSection3Element534,
																														expr: &litMatcher{
																															pos:        position{line: 1229, col: 16, offset: 48642},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 231, col: 52, offset: 8266},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 231, col: 56, offset: 8270},
																														expr: &choiceExpr{
																															pos: position{line: 231, col: 57, offset: 8271},
																															alternatives: []interface{}{
																																&actionExpr{
																																	pos: position{line: 1264, col: 14, offset: 49515},
																																	run: (*parser).callonSection3Element539,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		expr: &charClassMatcher{
																																			pos:        position{line: 1264, col: 14, offset: 49515},
																																			val:        "[a-zA-Z0-9]",
																																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 1278, col: 11, offset: 49909},
																																	run: (*parser).callonSection3Element542,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		expr: &choiceExpr{
																																			pos: position{line: 1306, col: 7, offset: 50454},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1306, col: 7, offset: 50454},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 1306, col: 13, offset: 50460},
																																					run: (*parser).callonSection3Element546,
																																					expr: &litMatcher{
																																						pos:        position{line: 1306, col: 13, offset: 50460},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 231, col: 78, offset: 8292},
																																	run: (*parser).callonSection3Element548,
																																	expr: &seqExpr{
																																		pos: position{line: 231, col: 79, offset: 8293},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 231, col: 79, offset: 8293},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 80, offset: 8294},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 84, offset: 8298},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 85, offset: 8299},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 89, offset: 8303},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 90, offset: 8304},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 231, col: 95, offset: 8309,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 227, col: 24, offset: 8125},
																									expr: &litMatcher{
																										pos:        position{line: 227, col: 24, offset: 8125},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 227, col: 29, offset: 8130},
																									expr: &choiceExpr{
																										pos: position{line: 1306, col: 7, offset: 50454},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1306, col: 7, offset: 50454},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1306, col: 13, offset: 50460},
																												run: (*parser).callonSection3Element562,
																												expr: &litMatcher{
																													pos:        position{line: 1306, col: 13, offset: 50460},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 221, col: 59, offset: 7879},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 165, col: 170, offset: 6018},
												expr: &choiceExpr{
													pos: position{line: 1306, col: 7, offset: 50454},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1306, col: 7, offset: 50454},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1306, col: 13, offset: 50460},
															run: (*parser).callonSection3Element568,
															expr: &litMatcher{
																pos:        position{line: 1306, col: 13, offset: 50460},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1314, col: 8, offset: 50552},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1310, col: 12, offset: 50512},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1310, col: 21, offset: 50521},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1312, col: 8, offset: 50541},
														expr: &anyMatcher{
															line: 1312, col: 9, offset: 50542,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 400, col: 5, offset: 14138},
							label: "element",
							expr: &choiceExpr{
								pos: position{line: 400, col: 14, offset: 14147},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 400, col: 14, offset: 14147},
										name: "Section4_5",
									},
									&ruleRefExpr{
										pos:  position{line: 400, col: 27, offset: 14160},
										name: "DocumentElement",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section4",
			pos:  position{line: 404, col: 1, offset: 14255},
			expr: &actionExpr{
				pos: position{line: 404, col: 13, offset: 14267},
				run: (*parser).callonSection41,
				expr: &seqExpr{
					pos: position{line: 404, col: 13, offset: 14267},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 404, col: 13, offset: 14267},
							label: "header",
							expr: &ruleRefExpr{
								pos:  position{line: 404, col: 21, offset: 14275},
								name: "Section4Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 404, col: 36, offset: 14290},
							label: "elements",
							expr: &zeroOrMoreExpr{
								pos: position{line: 404, col: 46, offset: 14300},
								expr: &ruleRefExpr{
									pos:  position{line: 404, col: 46, offset: 14300},
									name: "Section4Element",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section4Title",
			pos:  position{line: 410, col: 1, offset: 14446},
			expr: &actionExpr{
				pos: position{line: 410, col: 18, offset: 14463},
				run: (*parser).callonSection4Title1,
				expr: &seqExpr{
					pos: position{line: 410, col: 18, offset: 14463},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 408, col: 24, offset: 14432},
							val:        "=====",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 408, col: 32, offset: 14440},
							expr: &choiceExpr{
								pos: position{line: 1306, col: 7, offset: 50454},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1306, col: 7, offset: 50454},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1306, col: 13, offset: 50460},
										run: (*parser).callonSection4Title7,
										expr: &litMatcher{
											pos:        position{line: 1306, col: 13, offset: 50460},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 410, col: 38, offset: 14483},
							label: "elements",
							expr: &ruleRefExpr{
								pos:  position{line: 410, col: 48, offset: 14493},
								name: "TitleElements",
							},
						},
						&labeledExpr{
							pos:   position{line: 410, col: 63, offset: 14508},
							label: "id",
							expr: &zeroOrMoreExpr{
								pos: position{line: 410, col: 67, offset: 14512},
								expr: &actionExpr{
									pos: position{line: 180, col: 20, offset: 6467},
									run: (*parser).callonSection4Title13,
									expr: &seqExpr{
										pos: position{line: 180, col: 20, offset: 6467},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 180, col: 20, offset: 6467},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 180, col: 25, offset: 6472},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 1288, col: 7, offset: 50075},
													run: (*parser).callonSection4Title17,
													expr: &oneOrMoreExpr{
														pos: position{line: 1288, col: 7, offset: 50075},
														expr: &choiceExpr{
															pos: position{line: 1288, col: 8, offset: 50076},
															alternatives: []interface{}{
																&actionExpr{
																	pos: position{line: 1264, col: 14, offset: 49515},
																	run: (*parser).callonSection4Title20,
																	expr: &oneOrMoreExpr{
																		pos: position{line: 1264, col: 14, offset: 49515},
																		expr: &charClassMatcher{
																			pos:        position{line: 1264, col: 14, offset: 49515},
																			val:        "[a-zA-Z0-9]",
																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 1288, col: 20, offset: 50088},
																	run: (*parser).callonSection4Title23,
																	expr: &seqExpr{
																		pos: position{line: 1288, col: 21, offset: 50089},
																		exprs: []interface{}{
																			&notExpr{
																				pos: position{line: 1288, col: 21, offset: 50089},
																				expr: &choiceExpr{
																					pos: position{line: 1310, col: 12, offset: 50512},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1310, col: 12, offset: 50512},
																							val:        "\r\n",
																							ignoreCase: false,
																						},
																						&charClassMatcher{
																							pos:        position{line: 1310, col: 21, offset: 50521},
																							val:        "[\\r\\n]",
																							chars:      []rune{'\r', '\n'},
																							ignoreCase: false,
																							inverted:   false,
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 1288, col: 30, offset: 50098},
																				expr: &choiceExpr{
																					pos: position{line: 1306, col: 7, offset: 50454},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1306, col: 7, offset: 50454},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1306, col: 13, offset: 50460},
																							run: (*parser).callonSection4Title32,
																							expr: &litMatcher{
																								pos:        position{line: 1306, col: 13, offset: 50460},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 1288, col: 34, offset: 50102},
																				expr: &litMatcher{
																					pos:        position{line: 1288, col: 35, offset: 50103},
																					val:        "[",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1288, col: 39, offset: 50107},
																				expr: &litMatcher{
																					pos:        position{line: 1288, col: 40, offset: 50108},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1288, col: 44, offset: 50112},
																				expr: &litMatcher{
																					pos:        position{line: 1288, col: 45, offset: 50113},
																					val:        "<<",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1288, col: 50, offset: 50118},
																				expr: &litMatcher{
																					pos:        position{line: 1288, col: 51, offset: 50119},
																					val:        ">>",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1288, col: 56, offset: 50124},
																				expr: &litMatcher{
																					pos:        position{line: 1288, col: 57, offset: 50125},
																					val:        ",",
																					ignoreCase: false,
																				},
																			},
																			&anyMatcher{
																				line: 1288, col: 62, offset: 50130,
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 180, col: 33, offset: 6480},
												val:        "]]",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 180, col: 38, offset: 6485},
												expr: &choiceExpr{
													pos: position{line: 1306, col: 7, offset: 50454},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1306, col: 7, offset: 50454},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1306, col: 13, offset: 50460},
															run: (*parser).callonSection4Title49,
															expr: &litMatcher{
																pos:        position{line: 1306, col: 13, offset: 50460},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1314, col: 8, offset: 50552},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1310, col: 12, offset: 50512},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1310, col: 21, offset: 50521},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1312, col: 8, offset: 50541},
									expr: &anyMatcher{
										line: 1312, col: 9, offset: 50542,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section4Element",
			pos:  position{line: 414, col: 1, offset: 14626},
			expr: &actionExpr{
				pos: position{line: 414, col: 20, offset: 14645},
				run: (*parser).callonSection4Element1,
				expr: &seqExpr{
					pos: position{line: 414, col: 20, offset: 14645},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 414, col: 20, offset: 14645},
							expr: &seqExpr{
								pos: position{line: 352, col: 24, offset: 11958},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 352, col: 24, offset: 11958},
										val:        "==",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 352, col: 29, offset: 11963},
										expr: &choiceExpr{
											pos: position{line: 1306, col: 7, offset: 50454},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1306, col: 7, offset: 50454},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1306, col: 13, offset: 50460},
													run: (*parser).callonSection4Element9,
													expr: &litMatcher{
														pos:        position{line: 1306, col: 13, offset: 50460},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 414, col: 41, offset: 14666},
							expr: &seqExpr{
								pos: position{line: 368, col: 24, offset: 12523},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 368, col: 24, offset: 12523},
										val:        "===",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 368, col: 30, offset: 12529},
										expr: &choiceExpr{
											pos: position{line: 1306, col: 7, offset: 50454},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1306, col: 7, offset: 50454},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1306, col: 13, offset: 50460},
													run: (*parser).callonSection4Element17,
													expr: &litMatcher{
														pos:        position{line: 1306, col: 13, offset: 50460},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 414, col: 62, offset: 14687},
							expr: &seqExpr{
								pos: position{line: 388, col: 24, offset: 13467},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 388, col: 24, offset: 13467},
										val:        "====",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 388, col: 31, offset: 13474},
										expr: &choiceExpr{
											pos: position{line: 1306, col: 7, offset: 50454},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1306, col: 7, offset: 50454},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1306, col: 13, offset: 50460},
													run: (*parser).callonSection4Element25,
													expr: &litMatcher{
														pos:        position{line: 1306, col: 13, offset: 50460},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 414, col: 83, offset: 14708},
							expr: &seqExpr{
								pos: position{line: 408, col: 24, offset: 14432},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 408, col: 24, offset: 14432},
										val:        "=====",
										ignoreCase: false,
									},
									&oneOrMoreExpr{
										pos: position{line: 408, col: 32, offset: 14440},
										expr: &choiceExpr{
											pos: position{line: 1306, col: 7, offset: 50454},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1306, col: 7, offset: 50454},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1306, col: 13, offset: 50460},
													run: (*parser).callonSection4Element33,
													expr: &litMatcher{
														pos:        position{line: 1306, col: 13, offset: 50460},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 415, col: 5, offset: 14733},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 415, col: 16, offset: 14744},
								expr: &actionExpr{
									pos: position{line: 164, col: 21, offset: 5763},
									run: (*parser).callonSection4Element37,
									expr: &seqExpr{
										pos: position{line: 164, col: 21, offset: 5763},
										exprs: []interface{}{
											&andExpr{
												pos: position{line: 164, col: 21, offset: 5763},
												expr: &charClassMatcher{
													pos:        position{line: 164, col: 23, offset: 5765},
													val:        "[[.#]",
													chars:      []rune{'[', '.', '#'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&labeledExpr{
												pos:   position{line: 165, col: 5, offset: 5853},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 165, col: 11, offset: 5859},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 174, col: 14, offset: 6316},
															run: (*parser).callonSection4Element43,
															expr: &seqExpr{
																pos: position{line: 174, col: 14, offset: 6316},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 174, col: 14, offset: 6316},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 174, col: 19, offset: 6321},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1288, col: 7, offset: 50075},
																			run: (*parser).callonSection4Element47,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1288, col: 7, offset: 50075},
																				expr: &choiceExpr{
																					pos: position{line: 1288, col: 8, offset: 50076},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection4Element50,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1288, col: 20, offset: 50088},
																							run: (*parser).callonSection4Element53,
																							expr: &seqExpr{
																								pos: position{line: 1288, col: 21, offset: 50089},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1288, col: 21, offset: 50089},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 30, offset: 50098},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonSection4Element62,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 34, offset: 50102},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 35, offset: 50103},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 39, offset: 50107},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 40, offset: 50108},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 44, offset: 50112},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 45, offset: 50113},
																											val:        "<<",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 50, offset: 50118},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 51, offset: 50119},
																											val:        ">>",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 56, offset: 50124},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 57, offset: 50125},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1288, col: 62, offset: 50130,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 174, col: 27, offset: 6329},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 5, offset: 6383},
															run: (*parser).callonSection4Element76,
															expr: &seqExpr{
																pos: position{line: 176, col: 5, offset: 6383},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 5, offset: 6383},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 10, offset: 6388},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1288, col: 7, offset: 50075},
																			run: (*parser).callonSection4Element80,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1288, col: 7, offset: 50075},
																				expr: &choiceExpr{
																					pos: position{line: 1288, col: 8, offset: 50076},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection4Element83,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1288, col: 20, offset: 50088},
																							run: (*parser).callonSection4Element86,
																							expr: &seqExpr{
																								pos: position{line: 1288, col: 21, offset: 50089},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1288, col: 21, offset: 50089},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 30, offset: 50098},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonSection4Element95,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 34, offset: 50102},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 35, offset: 50103},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 39, offset: 50107},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 40, offset: 50108},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 44, offset: 50112},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 45, offset: 50113},
																											val:        "<<",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 50, offset: 50118},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 51, offset: 50119},
																											val:        ">>",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 56, offset: 50124},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 57, offset: 50125},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1288, col: 62, offset: 50130,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 18, offset: 6396},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 186, col: 17, offset: 6699},
															run: (*parser).callonSection4Element109,
															expr: &seqExpr{
																pos: position{line: 186, col: 17, offset: 6699},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 186, col: 17, offset: 6699},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 186, col: 21, offset: 6703},
																		expr: &litMatcher{
																			pos:        position{line: 186, col: 22, offset: 6704},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 186, col: 26, offset: 6708},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonSection4Element117,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 186, col: 30, offset: 6712},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 186, col: 37, offset: 6719},
																			run: (*parser).callonSection4Element120,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 186, col: 37, offset: 6719},
																				expr: &choiceExpr{
																					pos: position{line: 186, col: 38, offset: 6720},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection4Element123,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonSection4Element126,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection4Element130,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 186, col: 59, offset: 6741},
																							run: (*parser).callonSection4Element132,
																							expr: &seqExpr{
																								pos: position{line: 186, col: 60, offset: 6742},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 186, col: 60, offset: 6742},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 186, col: 70, offset: 6752,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 196, col: 16, offset: 6990},
															run: (*parser).callonSection4Element139,
															expr: &seqExpr{
																pos: position{line: 196, col: 16, offset: 6990},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 196, col: 16, offset: 6990},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 196, col: 21, offset: 6995},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonSection4Element145,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 196, col: 25, offset: 6999},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 196, col: 31, offset: 7005},
																			run: (*parser).callonSection4Element148,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 196, col: 31, offset: 7005},
																				expr: &choiceExpr{
																					pos: position{line: 196, col: 32, offset: 7006},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection4Element151,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonSection4Element154,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection4Element158,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 196, col: 53, offset: 7027},
																							run: (*parser).callonSection4Element160,
																							expr: &seqExpr{
																								pos: position{line: 196, col: 54, offset: 7028},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 196, col: 54, offset: 7028},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 196, col: 63, offset: 7037},
																										expr: &litMatcher{
																											pos:        position{line: 196, col: 64, offset: 7038},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 196, col: 69, offset: 7043,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 200, col: 4, offset: 7118},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 210, col: 21, offset: 7481},
															run: (*parser).callonSection4Element170,
															expr: &litMatcher{
																pos:        position{line: 210, col: 21, offset: 7481},
																val:        "[source]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 212, col: 5, offset: 7539},
															run: (*parser).callonSection4Element172,
															expr: &seqExpr{
																pos: position{line: 212, col: 5, offset: 7539},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 212, col: 5, offset: 7539},
																		val:        "[source,",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 212, col: 16, offset: 7550},
																		label: "language",
																		expr: &actionExpr{
																			pos: position{line: 212, col: 26, offset: 7560},
																			run: (*parser).callonSection4Element176,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 212, col: 26, offset: 7560},
																				expr: &choiceExpr{
																					pos: position{line: 212, col: 27, offset: 7561},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection4Element179,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonSection4Element182,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection4Element186,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 212, col: 48, offset: 7582},
																							run: (*parser).callonSection4Element188,
																							expr: &seqExpr{
																								pos: position{line: 212, col: 49, offset: 7583},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 212, col: 49, offset: 7583},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 212, col: 58, offset: 7592},
																										expr: &litMatcher{
																											pos:        position{line: 212, col: 59, offset: 7593},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 212, col: 64, offset: 7598,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 216, col: 7, offset: 7688},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 247, col: 20, offset: 8646},
															run: (*parser).callonSection4Element198,
															expr: &seqExpr{
																pos: position{line: 247, col: 20, offset: 8646},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 247, col: 20, offset: 8646},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 24, offset: 8650},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonSection4Element202,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 247, col: 41, offset: 8667},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonSection4Element207,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 45, offset: 8671},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 49, offset: 8675},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 286, col: 16, offset: 9839},
																			run: (*parser).callonSection4Element211,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 286, col: 16, offset: 9839},
																				expr: &choiceExpr{
																					pos: position{line: 286, col: 17, offset: 9840},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection4Element214,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonSection4Element217,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection4Element221,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 286, col: 38, offset: 9861},
																							run: (*parser).callonSection4Element223,
																							expr: &seqExpr{
																								pos: position{line: 286, col: 39, offset: 9862},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 286, col: 39, offset: 9862},
																										expr: &choiceExpr{
																											pos: position{line: 1314, col: 8, offset: 50552},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																												&notExpr{
																													pos: position{line: 1312, col: 8, offset: 50541},
																													expr: &anyMatcher{
																														line: 1312, col: 9, offset: 50542,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 44, offset: 9867},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 45, offset: 9868},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 49, offset: 9872},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 50, offset: 9873},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 286, col: 55, offset: 9878,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 70, offset: 8696},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 74, offset: 8700},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 292, col: 15, offset: 9967},
																			run: (*parser).callonSection4Element238,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 292, col: 15, offset: 9967},
																				expr: &choiceExpr{
																					pos: position{line: 292, col: 16, offset: 9968},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection4Element241,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonSection4Element244,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection4Element248,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&seqExpr{
																							pos: position{line: 292, col: 38, offset: 9990},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 292, col: 38, offset: 9990},
																									expr: &choiceExpr{
																										pos: position{line: 1314, col: 8, offset: 50552},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1310, col: 12, offset: 50512},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1310, col: 21, offset: 50521},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																											&notExpr{
																												pos: position{line: 1312, col: 8, offset: 50541},
																												expr: &anyMatcher{
																													line: 1312, col: 9, offset: 50542,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 292, col: 43, offset: 9995},
																									expr: &litMatcher{
																										pos:        position{line: 292, col: 44, offset: 9996},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 292, col: 48, offset: 10000},
																									expr: &litMatcher{
																										pos:        position{line: 292, col: 49, offset: 10001},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 292, col: 54, offset: 10006,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 93, offset: 8719},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 251, col: 1, offset: 8846},
															run: (*parser).callonSection4Element263,
															expr: &seqExpr{
																pos: position{line: 251, col: 1, offset: 8846},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 251, col: 1, offset: 8846},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 251, col: 5, offset: 8850},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonSection4Element267,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 251, col: 22, offset: 8867},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonSection4Element272,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 251, col: 26, offset: 8871},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 251, col: 30, offset: 8875},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 286, col: 16, offset: 9839},
																			run: (*parser).callonSection4Element276,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 286, col: 16, offset: 9839},
																				expr: &choiceExpr{
																					pos: position{line: 286, col: 17, offset: 9840},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection4Element279,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonSection4Element282,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection4Element286,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 286, col: 38, offset: 9861},
																							run: (*parser).callonSection4Element288,
																							expr: &seqExpr{
																								pos: position{line: 286, col: 39, offset: 9862},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 286, col: 39, offset: 9862},
																										expr: &choiceExpr{
																											pos: position{line: 1314, col: 8, offset: 50552},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																												&notExpr{
																													pos: position{line: 1312, col: 8, offset: 50541},
																													expr: &anyMatcher{
																														line: 1312, col: 9, offset: 50542,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 44, offset: 9867},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 45, offset: 9868},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 49, offset: 9872},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 50, offset: 9873},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 286, col: 55, offset: 9878,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 251, col: 51, offset: 8896},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 255, col: 1, offset: 9011},
															run: (*parser).callonSection4Element302,
															expr: &seqExpr{
																pos: position{line: 255, col: 1, offset: 9011},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 255, col: 1, offset: 9011},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 255, col: 5, offset: 9015},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonSection4Element306,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 255, col: 22, offset: 9032},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonSection4Element311,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 255, col: 26, offset: 9036},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 263, col: 20, offset: 9179},
															run: (*parser).callonSection4Element314,
															expr: &seqExpr{
																pos: position{line: 263, col: 20, offset: 9179},
																exprs: []interface{}{
																	&labeledExpr{
																		pos:   position{line: 263, col: 20, offset: 9179},
																		label: "attribute",
																		expr: &choiceExpr{
																			pos: position{line: 263, col: 31, offset: 9190},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 263, col: 31, offset: 9190},
																					run: (*parser).callonSection4Element318,
																					expr: &seqExpr{
																						pos: position{line: 263, col: 31, offset: 9190},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 263, col: 31, offset: 9190},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 35, offset: 9194},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonSection4Element322,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 263, col: 52, offset: 9211},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection4Element327,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 56, offset: 9215},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 60, offset: 9219},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 286, col: 16, offset: 9839},
																									run: (*parser).callonSection4Element331,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 286, col: 16, offset: 9839},
																										expr: &choiceExpr{
																											pos: position{line: 286, col: 17, offset: 9840},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1264, col: 14, offset: 49515},
																													run: (*parser).callonSection4Element334,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1264, col: 14, offset: 49515},
																														expr: &charClassMatcher{
																															pos:        position{line: 1264, col: 14, offset: 49515},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1278, col: 11, offset: 49909},
																													run: (*parser).callonSection4Element337,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1278, col: 11, offset: 49909},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonSection4Element341,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 286, col: 38, offset: 9861},
																													run: (*parser).callonSection4Element343,
																													expr: &seqExpr{
																														pos: position{line: 286, col: 39, offset: 9862},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 286, col: 39, offset: 9862},
																																expr: &choiceExpr{
																																	pos: position{line: 1314, col: 8, offset: 50552},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1310, col: 12, offset: 50512},
																																			val:        "\r\n",
																																			ignoreCase: false,
																																		},
																																		&charClassMatcher{
																																			pos:        position{line: 1310, col: 21, offset: 50521},
																																			val:        "[\\r\\n]",
																																			chars:      []rune{'\r', '\n'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																		&notExpr{
																																			pos: position{line: 1312, col: 8, offset: 50541},
																																			expr: &anyMatcher{
																																				line: 1312, col: 9, offset: 50542,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 44, offset: 9867},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 45, offset: 9868},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 49, offset: 9872},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 50, offset: 9873},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 286, col: 55, offset: 9878,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 81, offset: 9240},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 85, offset: 9244},
																								label: "title",
																								expr: &actionExpr{
																									pos: position{line: 292, col: 15, offset: 9967},
																									run: (*parser).callonSection4Element358,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 292, col: 15, offset: 9967},
																										expr: &choiceExpr{
																											pos: position{line: 292, col: 16, offset: 9968},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1264, col: 14, offset: 49515},
																													run: (*parser).callonSection4Element361,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1264, col: 14, offset: 49515},
																														expr: &charClassMatcher{
																															pos:        position{line: 1264, col: 14, offset: 49515},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1278, col: 11, offset: 49909},
																													run: (*parser).callonSection4Element364,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1278, col: 11, offset: 49909},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonSection4Element368,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&seqExpr{
																													pos: position{line: 292, col: 38, offset: 9990},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 292, col: 38, offset: 9990},
																															expr: &choiceExpr{
																																pos: position{line: 1314, col: 8, offset: 50552},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1310, col: 12, offset: 50512},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1310, col: 21, offset: 50521},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																	&notExpr{
																																		pos: position{line: 1312, col: 8, offset: 50541},
																																		expr: &anyMatcher{
																																			line: 1312, col: 9, offset: 50542,
																																		},
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 292, col: 43, offset: 9995},
																															expr: &litMatcher{
																																pos:        position{line: 292, col: 44, offset: 9996},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 292, col: 48, offset: 10000},
																															expr: &litMatcher{
																																pos:        position{line: 292, col: 49, offset: 10001},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 292, col: 54, offset: 10006,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 104, offset: 9263},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 267, col: 5, offset: 9406},
																					run: (*parser).callonSection4Element383,
																					expr: &seqExpr{
																						pos: position{line: 267, col: 5, offset: 9406},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 267, col: 5, offset: 9406},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 267, col: 9, offset: 9410},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonSection4Element387,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 267, col: 26, offset: 9427},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection4Element392,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 267, col: 30, offset: 9431},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 267, col: 34, offset: 9435},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 286, col: 16, offset: 9839},
																									run: (*parser).callonSection4Element396,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 286, col: 16, offset: 9839},
																										expr: &choiceExpr{
																											pos: position{line: 286, col: 17, offset: 9840},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1264, col: 14, offset: 49515},
																													run: (*parser).callonSection4Element399,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1264, col: 14, offset: 49515},
																														expr: &charClassMatcher{
																															pos:        position{line: 1264, col: 14, offset: 49515},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1278, col: 11, offset: 49909},
																													run: (*parser).callonSection4Element402,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1278, col: 11, offset: 49909},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonSection4Element406,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 286, col: 38, offset: 9861},
																													run: (*parser).callonSection4Element408,
																													expr: &seqExpr{
																														pos: position{line: 286, col: 39, offset: 9862},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 286, col: 39, offset: 9862},
																																expr: &choiceExpr{
																																	pos: position{line: 1314, col: 8, offset: 50552},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1310, col: 12, offset: 50512},
																																			val:        "\r\n",
																																			ignoreCase: false,
																																		},
																																		&charClassMatcher{
																																			pos:        position{line: 1310, col: 21, offset: 50521},
																																			val:        "[\\r\\n]",
																																			chars:      []rune{'\r', '\n'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																		&notExpr{
																																			pos: position{line: 1312, col: 8, offset: 50541},
																																			expr: &anyMatcher{
																																				line: 1312, col: 9, offset: 50542,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 44, offset: 9867},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 45, offset: 9868},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 49, offset: 9872},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 50, offset: 9873},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 286, col: 55, offset: 9878,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 267, col: 55, offset: 9456},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 271, col: 5, offset: 9587},
																					run: (*parser).callonSection4Element422,
																					expr: &seqExpr{
																						pos: position{line: 271, col: 5, offset: 9587},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 271, col: 5, offset: 9587},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 271, col: 9, offset: 9591},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonSection4Element426,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 271, col: 26, offset: 9608},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection4Element431,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 271, col: 30, offset: 9612},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&stateCodeExpr{
																		pos: position{line: 275, col: 1, offset: 9688},
																		run: (*parser).callonSection4Element434,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 205, col: 30, offset: 7283},
															run: (*parser).callonSection4Element435,
															expr: &seqExpr{
																pos: position{line: 205, col: 30, offset: 7283},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 205, col: 30, offset: 7283},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 205, col: 34, offset: 7287},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 598, col: 19, offset: 22218},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 598, col: 19, offset: 22218},
																					run: (*parser).callonSection4Element440,
																					expr: &litMatcher{
																						pos:        position{line: 598, col: 19, offset: 22218},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 600, col: 9, offset: 22264},
																					run: (*parser).callonSection4Element442,
																					expr: &litMatcher{
																						pos:        position{line: 600, col: 9, offset: 22264},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 602, col: 9, offset: 22312},
																					run: (*parser).callonSection4Element444,
																					expr: &litMatcher{
																						pos:        position{line: 602, col: 9, offset: 22312},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 604, col: 9, offset: 22370},
																					run: (*parser).callonSection4Element446,
																					expr: &litMatcher{
																						pos:        position{line: 604, col: 9, offset: 22370},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 606, col: 9, offset: 22424},
																					run: (*parser).callonSection4Element448,
																					expr: &litMatcher{
																						pos:        position{line: 606, col: 9, offset: 22424},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 205, col: 53, offset: 7306},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 243, col: 21, offset: 8543},
															run: (*parser).callonSection4Element451,
															expr: &litMatcher{
																pos:        position{line: 243, col: 21, offset: 8543},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 221, col: 19, offset: 7839},
															run: (*parser).callonSection4Element453,
															expr: &seqExpr{
																pos: position{line: 221, col: 19, offset: 7839},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 221, col: 19, offset: 7839},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 221, col: 23, offset: 7843},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonSection4Element459,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 221, col: 27, offset: 7847},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 221, col: 38, offset: 7858},
																			expr: &choiceExpr{
																				pos: position{line: 225, col: 21, offset: 7971},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 225, col: 21, offset: 7971},
																						run: (*parser).callonSection4Element464,
																						expr: &seqExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 225, col: 21, offset: 7971},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										run: (*parser).callonSection4Element467,
																										expr: &seqExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9116},
																														run: (*parser).callonSection4Element470,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9116},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 28, offset: 8242},
																													expr: &actionExpr{
																														pos: position{line: 282, col: 14, offset: 9780},
																														run: (*parser).callonSection4Element473,
																														expr: &litMatcher{
																															pos:        position{line: 282, col: 14, offset: 9780},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 39, offset: 8253},
																													expr: &actionExpr{
																														pos: position{line: 1229, col: 16, offset: 48642},
																														run: (*parser).callonSection4Element476,
																														expr: &litMatcher{
																															pos:        position{line: 1229, col: 16, offset: 48642},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 231, col: 52, offset: 8266},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 231, col: 56, offset: 8270},
																														expr: &choiceExpr{
																															pos: position{line: 231, col: 57, offset: 8271},
																															alternatives: []interface{}{
																																&actionExpr{
																																	pos: position{line: 1264, col: 14, offset: 49515},
																																	run: (*parser).callonSection4Element481,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		expr: &charClassMatcher{
																																			pos:        position{line: 1264, col: 14, offset: 49515},
																																			val:        "[a-zA-Z0-9]",
																																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 1278, col: 11, offset: 49909},
																																	run: (*parser).callonSection4Element484,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		expr: &choiceExpr{
																																			pos: position{line: 1306, col: 7, offset: 50454},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1306, col: 7, offset: 50454},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 1306, col: 13, offset: 50460},
																																					run: (*parser).callonSection4Element488,
																																					expr: &litMatcher{
																																						pos:        position{line: 1306, col: 13, offset: 50460},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 231, col: 78, offset: 8292},
																																	run: (*parser).callonSection4Element490,
																																	expr: &seqExpr{
																																		pos: position{line: 231, col: 79, offset: 8293},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 231, col: 79, offset: 8293},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 80, offset: 8294},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 84, offset: 8298},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 85, offset: 8299},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 89, offset: 8303},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 90, offset: 8304},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 231, col: 95, offset: 8309,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 225, col: 40, offset: 7990},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 225, col: 44, offset: 7994},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 237, col: 19, offset: 8403},
																										run: (*parser).callonSection4Element501,
																										expr: &labeledExpr{
																											pos:   position{line: 237, col: 19, offset: 8403},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 237, col: 25, offset: 8409},
																												expr: &choiceExpr{
																													pos: position{line: 237, col: 26, offset: 8410},
																													alternatives: []interface{}{
																														&actionExpr{
																															pos: position{line: 1264, col: 14, offset: 49515},
																															run: (*parser).callonSection4Element505,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1264, col: 14, offset: 49515},
																																expr: &charClassMatcher{
																																	pos:        position{line: 1264, col: 14, offset: 49515},
																																	val:        "[a-zA-Z0-9]",
																																	ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 1278, col: 11, offset: 49909},
																															run: (*parser).callonSection4Element508,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1278, col: 11, offset: 49909},
																																expr: &choiceExpr{
																																	pos: position{line: 1306, col: 7, offset: 50454},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1306, col: 7, offset: 50454},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 1306, col: 13, offset: 50460},
																																			run: (*parser).callonSection4Element512,
																																			expr: &litMatcher{
																																				pos:        position{line: 1306, col: 13, offset: 50460},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 237, col: 47, offset: 8431},
																															run: (*parser).callonSection4Element514,
																															expr: &seqExpr{
																																pos: position{line: 237, col: 48, offset: 8432},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 237, col: 48, offset: 8432},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 49, offset: 8433},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 237, col: 53, offset: 8437},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 54, offset: 8438},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 237, col: 58, offset: 8442},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 59, offset: 8443},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 237, col: 64, offset: 8448,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 225, col: 67, offset: 8017},
																									expr: &litMatcher{
																										pos:        position{line: 225, col: 67, offset: 8017},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 225, col: 72, offset: 8022},
																									expr: &choiceExpr{
																										pos: position{line: 1306, col: 7, offset: 50454},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1306, col: 7, offset: 50454},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1306, col: 13, offset: 50460},
																												run: (*parser).callonSection4Element528,
																												expr: &litMatcher{
																													pos:        position{line: 1306, col: 13, offset: 50460},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 227, col: 5, offset: 8106},
																						run: (*parser).callonSection4Element530,
																						expr: &seqExpr{
																							pos: position{line: 227, col: 5, offset: 8106},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 227, col: 5, offset: 8106},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										run: (*parser).callonSection4Element533,
																										expr: &seqExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9116},
																														run: (*parser).callonSection4Element536,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9116},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 28, offset: 8242},
																													expr: &actionExpr{
																														pos: position{line: 282, col: 14, offset: 9780},
																														run: (*parser).callonSection4Element539,
																														expr: &litMatcher{
																															pos:        position{line: 282, col: 14, offset: 9780},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 39, offset: 8253},
																													expr: &actionExpr{
																														pos: position{line: 1229, col: 16, offset: 48642},
																														run: (*parser).callonSection4Element542,
																														expr: &litMatcher{
																															pos:        position{line: 1229, col: 16, offset: 48642},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 231, col: 52, offset: 8266},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 231, col: 56, offset: 8270},
																														expr: &choiceExpr{
																															pos: position{line: 231, col: 57, offset: 8271},
																															alternatives: []interface{}{
																																&actionExpr{
																																	pos: position{line: 1264, col: 14, offset: 49515},
																																	run: (*parser).callonSection4Element547,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		expr: &charClassMatcher{
																																			pos:        position{line: 1264, col: 14, offset: 49515},
																																			val:        "[a-zA-Z0-9]",
																																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 1278, col: 11, offset: 49909},
																																	run: (*parser).callonSection4Element550,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		expr: &choiceExpr{
																																			pos: position{line: 1306, col: 7, offset: 50454},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1306, col: 7, offset: 50454},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 1306, col: 13, offset: 50460},
																																					run: (*parser).callonSection4Element554,
																																					expr: &litMatcher{
																																						pos:        position{line: 1306, col: 13, offset: 50460},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 231, col: 78, offset: 8292},
																																	run: (*parser).callonSection4Element556,
																																	expr: &seqExpr{
																																		pos: position{line: 231, col: 79, offset: 8293},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 231, col: 79, offset: 8293},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 80, offset: 8294},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 84, offset: 8298},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 85, offset: 8299},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 89, offset: 8303},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 90, offset: 8304},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 231, col: 95, offset: 8309,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 227, col: 24, offset: 8125},
																									expr: &litMatcher{
																										pos:        position{line: 227, col: 24, offset: 8125},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 227, col: 29, offset: 8130},
																									expr: &choiceExpr{
																										pos: position{line: 1306, col: 7, offset: 50454},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1306, col: 7, offset: 50454},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1306, col: 13, offset: 50460},
																												run: (*parser).callonSection4Element570,
																												expr: &litMatcher{
																													pos:        position{line: 1306, col: 13, offset: 50460},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 221, col: 59, offset: 7879},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 165, col: 170, offset: 6018},
												expr: &choiceExpr{
													pos: position{line: 1306, col: 7, offset: 50454},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1306, col: 7, offset: 50454},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1306, col: 13, offset: 50460},
															run: (*parser).callonSection4Element576,
															expr: &litMatcher{
																pos:        position{line: 1306, col: 13, offset: 50460},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1314, col: 8, offset: 50552},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1310, col: 12, offset: 50512},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1310, col: 21, offset: 50521},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1312, col: 8, offset: 50541},
														expr: &anyMatcher{
															line: 1312, col: 9, offset: 50542,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 416, col: 5, offset: 14769},
							label: "element",
							expr: &choiceExpr{
								pos: position{line: 416, col: 14, offset: 14778},
								alternatives: []interface{}{
									&ruleRefExpr{
										pos:  position{line: 416, col: 14, offset: 14778},
										name: "Section5",
									},
									&ruleRefExpr{
										pos:  position{line: 416, col: 25, offset: 14789},
										name: "DocumentElement",
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section5",
			pos:  position{line: 420, col: 1, offset: 14884},
			expr: &actionExpr{
				pos: position{line: 420, col: 13, offset: 14896},
				run: (*parser).callonSection51,
				expr: &seqExpr{
					pos: position{line: 420, col: 13, offset: 14896},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 420, col: 13, offset: 14896},
							label: "header",
							expr: &ruleRefExpr{
								pos:  position{line: 420, col: 21, offset: 14904},
								name: "Section5Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 420, col: 36, offset: 14919},
							label: "elements",
							expr: &zeroOrMoreExpr{
								pos: position{line: 420, col: 46, offset: 14929},
								expr: &ruleRefExpr{
									pos:  position{line: 420, col: 46, offset: 14929},
									name: "Section5Element",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section5Title",
			pos:  position{line: 426, col: 1, offset: 15076},
			expr: &actionExpr{
				pos: position{line: 426, col: 18, offset: 15093},
				run: (*parser).callonSection5Title1,
				expr: &seqExpr{
					pos: position{line: 426, col: 18, offset: 15093},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 424, col: 24, offset: 15061},
							val:        "======",
							ignoreCase: false,
						},
						&oneOrMoreExpr{
							pos: position{line: 424, col: 33, offset: 15070},
							expr: &choiceExpr{
								pos: position{line: 1306, col: 7, offset: 50454},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1306, col: 7, offset: 50454},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1306, col: 13, offset: 50460},
										run: (*parser).callonSection5Title7,
										expr: &litMatcher{
											pos:        position{line: 1306, col: 13, offset: 50460},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 426, col: 38, offset: 15113},
							label: "elements",
							expr: &ruleRefExpr{
								pos:  position{line: 426, col: 48, offset: 15123},
								name: "TitleElements",
							},
						},
						&labeledExpr{
							pos:   position{line: 426, col: 63, offset: 15138},
							label: "id",
							expr: &zeroOrMoreExpr{
								pos: position{line: 426, col: 67, offset: 15142},
								expr: &actionExpr{
									pos: position{line: 180, col: 20, offset: 6467},
									run: (*parser).callonSection5Title13,
									expr: &seqExpr{
										pos: position{line: 180, col: 20, offset: 6467},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 180, col: 20, offset: 6467},
												val:        "[[",
												ignoreCase: false,
											},
											&labeledExpr{
												pos:   position{line: 180, col: 25, offset: 6472},
												label: "id",
												expr: &actionExpr{
													pos: position{line: 1288, col: 7, offset: 50075},
													run: (*parser).callonSection5Title17,
													expr: &oneOrMoreExpr{
														pos: position{line: 1288, col: 7, offset: 50075},
														expr: &choiceExpr{
															pos: position{line: 1288, col: 8, offset: 50076},
															alternatives: []interface{}{
																&actionExpr{
																	pos: position{line: 1264, col: 14, offset: 49515},
																	run: (*parser).callonSection5Title20,
																	expr: &oneOrMoreExpr{
																		pos: position{line: 1264, col: 14, offset: 49515},
																		expr: &charClassMatcher{
																			pos:        position{line: 1264, col: 14, offset: 49515},
																			val:        "[a-zA-Z0-9]",
																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 1288, col: 20, offset: 50088},
																	run: (*parser).callonSection5Title23,
																	expr: &seqExpr{
																		pos: position{line: 1288, col: 21, offset: 50089},
																		exprs: []interface{}{
																			&notExpr{
																				pos: position{line: 1288, col: 21, offset: 50089},
																				expr: &choiceExpr{
																					pos: position{line: 1310, col: 12, offset: 50512},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1310, col: 12, offset: 50512},
																							val:        "\r\n",
																							ignoreCase: false,
																						},
																						&charClassMatcher{
																							pos:        position{line: 1310, col: 21, offset: 50521},
																							val:        "[\\r\\n]",
																							chars:      []rune{'\r', '\n'},
																							ignoreCase: false,
																							inverted:   false,
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 1288, col: 30, offset: 50098},
																				expr: &choiceExpr{
																					pos: position{line: 1306, col: 7, offset: 50454},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1306, col: 7, offset: 50454},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1306, col: 13, offset: 50460},
																							run: (*parser).callonSection5Title32,
																							expr: &litMatcher{
																								pos:        position{line: 1306, col: 13, offset: 50460},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&notExpr{
																				pos: position{line: 1288, col: 34, offset: 50102},
																				expr: &litMatcher{
																					pos:        position{line: 1288, col: 35, offset: 50103},
																					val:        "[",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1288, col: 39, offset: 50107},
																				expr: &litMatcher{
																					pos:        position{line: 1288, col: 40, offset: 50108},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1288, col: 44, offset: 50112},
																				expr: &litMatcher{
																					pos:        position{line: 1288, col: 45, offset: 50113},
																					val:        "<<",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1288, col: 50, offset: 50118},
																				expr: &litMatcher{
																					pos:        position{line: 1288, col: 51, offset: 50119},
																					val:        ">>",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1288, col: 56, offset: 50124},
																				expr: &litMatcher{
																					pos:        position{line: 1288, col: 57, offset: 50125},
																					val:        ",",
																					ignoreCase: false,
																				},
																			},
																			&anyMatcher{
																				line: 1288, col: 62, offset: 50130,
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 180, col: 33, offset: 6480},
												val:        "]]",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 180, col: 38, offset: 6485},
												expr: &choiceExpr{
													pos: position{line: 1306, col: 7, offset: 50454},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1306, col: 7, offset: 50454},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1306, col: 13, offset: 50460},
															run: (*parser).callonSection5Title49,
															expr: &litMatcher{
																pos:        position{line: 1306, col: 13, offset: 50460},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1314, col: 8, offset: 50552},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1310, col: 12, offset: 50512},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1310, col: 21, offset: 50521},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1312, col: 8, offset: 50541},
									expr: &anyMatcher{
										line: 1312, col: 9, offset: 50542,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Section5Element",
			pos:  position{line: 430, col: 1, offset: 15256},
			expr: &actionExpr{
				pos: position{line: 431, col: 5, offset: 15280},
				run: (*parser).callonSection5Element1,
				expr: &seqExpr{
					pos: position{line: 431, col: 5, offset: 15280},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 431, col: 5, offset: 15280},
							expr: &ruleRefExpr{
								pos:  position{line: 431, col: 6, offset: 15281},
								name: "Section1Title",
							},
						},
						&notExpr{
							pos: position{line: 431, col: 20, offset: 15295},
							expr: &ruleRefExpr{
								pos:  position{line: 431, col: 21, offset: 15296},
								name: "Section2Title",
							},
						},
						&notExpr{
							pos: position{line: 431, col: 35, offset: 15310},
							expr: &ruleRefExpr{
								pos:  position{line: 431, col: 36, offset: 15311},
								name: "Section3Title",
							},
						},
						&notExpr{
							pos: position{line: 431, col: 50, offset: 15325},
							expr: &ruleRefExpr{
								pos:  position{line: 431, col: 51, offset: 15326},
								name: "Section4Title",
							},
						},
						&notExpr{
							pos: position{line: 431, col: 65, offset: 15340},
							expr: &ruleRefExpr{
								pos:  position{line: 431, col: 66, offset: 15341},
								name: "Section5Title",
							},
						},
						&labeledExpr{
							pos:   position{line: 432, col: 5, offset: 15360},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 432, col: 16, offset: 15371},
								expr: &actionExpr{
									pos: position{line: 164, col: 21, offset: 5763},
									run: (*parser).callonSection5Element15,
									expr: &seqExpr{
										pos: position{line: 164, col: 21, offset: 5763},
										exprs: []interface{}{
											&andExpr{
												pos: position{line: 164, col: 21, offset: 5763},
												expr: &charClassMatcher{
													pos:        position{line: 164, col: 23, offset: 5765},
													val:        "[[.#]",
													chars:      []rune{'[', '.', '#'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&labeledExpr{
												pos:   position{line: 165, col: 5, offset: 5853},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 165, col: 11, offset: 5859},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 174, col: 14, offset: 6316},
															run: (*parser).callonSection5Element21,
															expr: &seqExpr{
																pos: position{line: 174, col: 14, offset: 6316},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 174, col: 14, offset: 6316},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 174, col: 19, offset: 6321},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1288, col: 7, offset: 50075},
																			run: (*parser).callonSection5Element25,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1288, col: 7, offset: 50075},
																				expr: &choiceExpr{
																					pos: position{line: 1288, col: 8, offset: 50076},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection5Element28,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1288, col: 20, offset: 50088},
																							run: (*parser).callonSection5Element31,
																							expr: &seqExpr{
																								pos: position{line: 1288, col: 21, offset: 50089},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1288, col: 21, offset: 50089},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 30, offset: 50098},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonSection5Element40,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 34, offset: 50102},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 35, offset: 50103},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 39, offset: 50107},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 40, offset: 50108},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 44, offset: 50112},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 45, offset: 50113},
																											val:        "<<",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 50, offset: 50118},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 51, offset: 50119},
																											val:        ">>",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 56, offset: 50124},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 57, offset: 50125},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1288, col: 62, offset: 50130,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 174, col: 27, offset: 6329},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 5, offset: 6383},
															run: (*parser).callonSection5Element54,
															expr: &seqExpr{
																pos: position{line: 176, col: 5, offset: 6383},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 5, offset: 6383},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 10, offset: 6388},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1288, col: 7, offset: 50075},
																			run: (*parser).callonSection5Element58,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1288, col: 7, offset: 50075},
																				expr: &choiceExpr{
																					pos: position{line: 1288, col: 8, offset: 50076},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection5Element61,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1288, col: 20, offset: 50088},
																							run: (*parser).callonSection5Element64,
																							expr: &seqExpr{
																								pos: position{line: 1288, col: 21, offset: 50089},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1288, col: 21, offset: 50089},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 30, offset: 50098},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonSection5Element73,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 34, offset: 50102},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 35, offset: 50103},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 39, offset: 50107},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 40, offset: 50108},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 44, offset: 50112},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 45, offset: 50113},
																											val:        "<<",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 50, offset: 50118},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 51, offset: 50119},
																											val:        ">>",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 56, offset: 50124},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 57, offset: 50125},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1288, col: 62, offset: 50130,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 18, offset: 6396},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 186, col: 17, offset: 6699},
															run: (*parser).callonSection5Element87,
															expr: &seqExpr{
																pos: position{line: 186, col: 17, offset: 6699},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 186, col: 17, offset: 6699},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 186, col: 21, offset: 6703},
																		expr: &litMatcher{
																			pos:        position{line: 186, col: 22, offset: 6704},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 186, col: 26, offset: 6708},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonSection5Element95,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 186, col: 30, offset: 6712},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 186, col: 37, offset: 6719},
																			run: (*parser).callonSection5Element98,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 186, col: 37, offset: 6719},
																				expr: &choiceExpr{
																					pos: position{line: 186, col: 38, offset: 6720},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection5Element101,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonSection5Element104,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection5Element108,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 186, col: 59, offset: 6741},
																							run: (*parser).callonSection5Element110,
																							expr: &seqExpr{
																								pos: position{line: 186, col: 60, offset: 6742},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 186, col: 60, offset: 6742},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 186, col: 70, offset: 6752,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 196, col: 16, offset: 6990},
															run: (*parser).callonSection5Element117,
															expr: &seqExpr{
																pos: position{line: 196, col: 16, offset: 6990},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 196, col: 16, offset: 6990},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 196, col: 21, offset: 6995},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonSection5Element123,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 196, col: 25, offset: 6999},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 196, col: 31, offset: 7005},
																			run: (*parser).callonSection5Element126,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 196, col: 31, offset: 7005},
																				expr: &choiceExpr{
																					pos: position{line: 196, col: 32, offset: 7006},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection5Element129,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonSection5Element132,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection5Element136,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 196, col: 53, offset: 7027},
																							run: (*parser).callonSection5Element138,
																							expr: &seqExpr{
																								pos: position{line: 196, col: 54, offset: 7028},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 196, col: 54, offset: 7028},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 196, col: 63, offset: 7037},
																										expr: &litMatcher{
																											pos:        position{line: 196, col: 64, offset: 7038},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 196, col: 69, offset: 7043,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 200, col: 4, offset: 7118},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 210, col: 21, offset: 7481},
															run: (*parser).callonSection5Element148,
															expr: &litMatcher{
																pos:        position{line: 210, col: 21, offset: 7481},
																val:        "[source]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 212, col: 5, offset: 7539},
															run: (*parser).callonSection5Element150,
															expr: &seqExpr{
																pos: position{line: 212, col: 5, offset: 7539},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 212, col: 5, offset: 7539},
																		val:        "[source,",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 212, col: 16, offset: 7550},
																		label: "language",
																		expr: &actionExpr{
																			pos: position{line: 212, col: 26, offset: 7560},
																			run: (*parser).callonSection5Element154,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 212, col: 26, offset: 7560},
																				expr: &choiceExpr{
																					pos: position{line: 212, col: 27, offset: 7561},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection5Element157,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonSection5Element160,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection5Element164,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 212, col: 48, offset: 7582},
																							run: (*parser).callonSection5Element166,
																							expr: &seqExpr{
																								pos: position{line: 212, col: 49, offset: 7583},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 212, col: 49, offset: 7583},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 212, col: 58, offset: 7592},
																										expr: &litMatcher{
																											pos:        position{line: 212, col: 59, offset: 7593},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 212, col: 64, offset: 7598,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 216, col: 7, offset: 7688},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 247, col: 20, offset: 8646},
															run: (*parser).callonSection5Element176,
															expr: &seqExpr{
																pos: position{line: 247, col: 20, offset: 8646},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 247, col: 20, offset: 8646},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 24, offset: 8650},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonSection5Element180,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 247, col: 41, offset: 8667},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonSection5Element185,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 45, offset: 8671},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 49, offset: 8675},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 286, col: 16, offset: 9839},
																			run: (*parser).callonSection5Element189,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 286, col: 16, offset: 9839},
																				expr: &choiceExpr{
																					pos: position{line: 286, col: 17, offset: 9840},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection5Element192,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonSection5Element195,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection5Element199,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 286, col: 38, offset: 9861},
																							run: (*parser).callonSection5Element201,
																							expr: &seqExpr{
																								pos: position{line: 286, col: 39, offset: 9862},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 286, col: 39, offset: 9862},
																										expr: &choiceExpr{
																											pos: position{line: 1314, col: 8, offset: 50552},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																												&notExpr{
																													pos: position{line: 1312, col: 8, offset: 50541},
																													expr: &anyMatcher{
																														line: 1312, col: 9, offset: 50542,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 44, offset: 9867},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 45, offset: 9868},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 49, offset: 9872},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 50, offset: 9873},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 286, col: 55, offset: 9878,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 70, offset: 8696},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 74, offset: 8700},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 292, col: 15, offset: 9967},
																			run: (*parser).callonSection5Element216,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 292, col: 15, offset: 9967},
																				expr: &choiceExpr{
																					pos: position{line: 292, col: 16, offset: 9968},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection5Element219,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonSection5Element222,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection5Element226,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&seqExpr{
																							pos: position{line: 292, col: 38, offset: 9990},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 292, col: 38, offset: 9990},
																									expr: &choiceExpr{
																										pos: position{line: 1314, col: 8, offset: 50552},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1310, col: 12, offset: 50512},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1310, col: 21, offset: 50521},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																											&notExpr{
																												pos: position{line: 1312, col: 8, offset: 50541},
																												expr: &anyMatcher{
																													line: 1312, col: 9, offset: 50542,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 292, col: 43, offset: 9995},
																									expr: &litMatcher{
																										pos:        position{line: 292, col: 44, offset: 9996},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 292, col: 48, offset: 10000},
																									expr: &litMatcher{
																										pos:        position{line: 292, col: 49, offset: 10001},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 292, col: 54, offset: 10006,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 93, offset: 8719},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 251, col: 1, offset: 8846},
															run: (*parser).callonSection5Element241,
															expr: &seqExpr{
																pos: position{line: 251, col: 1, offset: 8846},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 251, col: 1, offset: 8846},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 251, col: 5, offset: 8850},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonSection5Element245,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 251, col: 22, offset: 8867},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonSection5Element250,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 251, col: 26, offset: 8871},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 251, col: 30, offset: 8875},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 286, col: 16, offset: 9839},
																			run: (*parser).callonSection5Element254,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 286, col: 16, offset: 9839},
																				expr: &choiceExpr{
																					pos: position{line: 286, col: 17, offset: 9840},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonSection5Element257,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonSection5Element260,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection5Element264,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 286, col: 38, offset: 9861},
																							run: (*parser).callonSection5Element266,
																							expr: &seqExpr{
																								pos: position{line: 286, col: 39, offset: 9862},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 286, col: 39, offset: 9862},
																										expr: &choiceExpr{
																											pos: position{line: 1314, col: 8, offset: 50552},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																												&notExpr{
																													pos: position{line: 1312, col: 8, offset: 50541},
																													expr: &anyMatcher{
																														line: 1312, col: 9, offset: 50542,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 44, offset: 9867},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 45, offset: 9868},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 49, offset: 9872},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 50, offset: 9873},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 286, col: 55, offset: 9878,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 251, col: 51, offset: 8896},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 255, col: 1, offset: 9011},
															run: (*parser).callonSection5Element280,
															expr: &seqExpr{
																pos: position{line: 255, col: 1, offset: 9011},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 255, col: 1, offset: 9011},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 255, col: 5, offset: 9015},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonSection5Element284,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 255, col: 22, offset: 9032},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonSection5Element289,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 255, col: 26, offset: 9036},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 263, col: 20, offset: 9179},
															run: (*parser).callonSection5Element292,
															expr: &seqExpr{
																pos: position{line: 263, col: 20, offset: 9179},
																exprs: []interface{}{
																	&labeledExpr{
																		pos:   position{line: 263, col: 20, offset: 9179},
																		label: "attribute",
																		expr: &choiceExpr{
																			pos: position{line: 263, col: 31, offset: 9190},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 263, col: 31, offset: 9190},
																					run: (*parser).callonSection5Element296,
																					expr: &seqExpr{
																						pos: position{line: 263, col: 31, offset: 9190},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 263, col: 31, offset: 9190},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 35, offset: 9194},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonSection5Element300,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 263, col: 52, offset: 9211},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection5Element305,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 56, offset: 9215},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 60, offset: 9219},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 286, col: 16, offset: 9839},
																									run: (*parser).callonSection5Element309,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 286, col: 16, offset: 9839},
																										expr: &choiceExpr{
																											pos: position{line: 286, col: 17, offset: 9840},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1264, col: 14, offset: 49515},
																													run: (*parser).callonSection5Element312,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1264, col: 14, offset: 49515},
																														expr: &charClassMatcher{
																															pos:        position{line: 1264, col: 14, offset: 49515},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1278, col: 11, offset: 49909},
																													run: (*parser).callonSection5Element315,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1278, col: 11, offset: 49909},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonSection5Element319,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 286, col: 38, offset: 9861},
																													run: (*parser).callonSection5Element321,
																													expr: &seqExpr{
																														pos: position{line: 286, col: 39, offset: 9862},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 286, col: 39, offset: 9862},
																																expr: &choiceExpr{
																																	pos: position{line: 1314, col: 8, offset: 50552},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1310, col: 12, offset: 50512},
																																			val:        "\r\n",
																																			ignoreCase: false,
																																		},
																																		&charClassMatcher{
																																			pos:        position{line: 1310, col: 21, offset: 50521},
																																			val:        "[\\r\\n]",
																																			chars:      []rune{'\r', '\n'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																		&notExpr{
																																			pos: position{line: 1312, col: 8, offset: 50541},
																																			expr: &anyMatcher{
																																				line: 1312, col: 9, offset: 50542,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 44, offset: 9867},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 45, offset: 9868},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 49, offset: 9872},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 50, offset: 9873},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 286, col: 55, offset: 9878,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 81, offset: 9240},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 85, offset: 9244},
																								label: "title",
																								expr: &actionExpr{
																									pos: position{line: 292, col: 15, offset: 9967},
																									run: (*parser).callonSection5Element336,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 292, col: 15, offset: 9967},
																										expr: &choiceExpr{
																											pos: position{line: 292, col: 16, offset: 9968},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1264, col: 14, offset: 49515},
																													run: (*parser).callonSection5Element339,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1264, col: 14, offset: 49515},
																														expr: &charClassMatcher{
																															pos:        position{line: 1264, col: 14, offset: 49515},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1278, col: 11, offset: 49909},
																													run: (*parser).callonSection5Element342,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1278, col: 11, offset: 49909},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonSection5Element346,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&seqExpr{
																													pos: position{line: 292, col: 38, offset: 9990},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 292, col: 38, offset: 9990},
																															expr: &choiceExpr{
																																pos: position{line: 1314, col: 8, offset: 50552},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1310, col: 12, offset: 50512},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1310, col: 21, offset: 50521},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																	&notExpr{
																																		pos: position{line: 1312, col: 8, offset: 50541},
																																		expr: &anyMatcher{
																																			line: 1312, col: 9, offset: 50542,
																																		},
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 292, col: 43, offset: 9995},
																															expr: &litMatcher{
																																pos:        position{line: 292, col: 44, offset: 9996},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 292, col: 48, offset: 10000},
																															expr: &litMatcher{
																																pos:        position{line: 292, col: 49, offset: 10001},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 292, col: 54, offset: 10006,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 104, offset: 9263},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 267, col: 5, offset: 9406},
																					run: (*parser).callonSection5Element361,
																					expr: &seqExpr{
																						pos: position{line: 267, col: 5, offset: 9406},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 267, col: 5, offset: 9406},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 267, col: 9, offset: 9410},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonSection5Element365,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 267, col: 26, offset: 9427},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection5Element370,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 267, col: 30, offset: 9431},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 267, col: 34, offset: 9435},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 286, col: 16, offset: 9839},
																									run: (*parser).callonSection5Element374,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 286, col: 16, offset: 9839},
																										expr: &choiceExpr{
																											pos: position{line: 286, col: 17, offset: 9840},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1264, col: 14, offset: 49515},
																													run: (*parser).callonSection5Element377,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1264, col: 14, offset: 49515},
																														expr: &charClassMatcher{
																															pos:        position{line: 1264, col: 14, offset: 49515},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1278, col: 11, offset: 49909},
																													run: (*parser).callonSection5Element380,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1278, col: 11, offset: 49909},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonSection5Element384,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 286, col: 38, offset: 9861},
																													run: (*parser).callonSection5Element386,
																													expr: &seqExpr{
																														pos: position{line: 286, col: 39, offset: 9862},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 286, col: 39, offset: 9862},
																																expr: &choiceExpr{
																																	pos: position{line: 1314, col: 8, offset: 50552},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1310, col: 12, offset: 50512},
																																			val:        "\r\n",
																																			ignoreCase: false,
																																		},
																																		&charClassMatcher{
																																			pos:        position{line: 1310, col: 21, offset: 50521},
																																			val:        "[\\r\\n]",
																																			chars:      []rune{'\r', '\n'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																		&notExpr{
																																			pos: position{line: 1312, col: 8, offset: 50541},
																																			expr: &anyMatcher{
																																				line: 1312, col: 9, offset: 50542,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 44, offset: 9867},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 45, offset: 9868},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 49, offset: 9872},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 50, offset: 9873},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 286, col: 55, offset: 9878,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 267, col: 55, offset: 9456},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 271, col: 5, offset: 9587},
																					run: (*parser).callonSection5Element400,
																					expr: &seqExpr{
																						pos: position{line: 271, col: 5, offset: 9587},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 271, col: 5, offset: 9587},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 271, col: 9, offset: 9591},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonSection5Element404,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 271, col: 26, offset: 9608},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonSection5Element409,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 271, col: 30, offset: 9612},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&stateCodeExpr{
																		pos: position{line: 275, col: 1, offset: 9688},
																		run: (*parser).callonSection5Element412,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 205, col: 30, offset: 7283},
															run: (*parser).callonSection5Element413,
															expr: &seqExpr{
																pos: position{line: 205, col: 30, offset: 7283},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 205, col: 30, offset: 7283},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 205, col: 34, offset: 7287},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 598, col: 19, offset: 22218},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 598, col: 19, offset: 22218},
																					run: (*parser).callonSection5Element418,
																					expr: &litMatcher{
																						pos:        position{line: 598, col: 19, offset: 22218},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 600, col: 9, offset: 22264},
																					run: (*parser).callonSection5Element420,
																					expr: &litMatcher{
																						pos:        position{line: 600, col: 9, offset: 22264},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 602, col: 9, offset: 22312},
																					run: (*parser).callonSection5Element422,
																					expr: &litMatcher{
																						pos:        position{line: 602, col: 9, offset: 22312},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 604, col: 9, offset: 22370},
																					run: (*parser).callonSection5Element424,
																					expr: &litMatcher{
																						pos:        position{line: 604, col: 9, offset: 22370},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 606, col: 9, offset: 22424},
																					run: (*parser).callonSection5Element426,
																					expr: &litMatcher{
																						pos:        position{line: 606, col: 9, offset: 22424},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 205, col: 53, offset: 7306},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 243, col: 21, offset: 8543},
															run: (*parser).callonSection5Element429,
															expr: &litMatcher{
																pos:        position{line: 243, col: 21, offset: 8543},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 221, col: 19, offset: 7839},
															run: (*parser).callonSection5Element431,
															expr: &seqExpr{
																pos: position{line: 221, col: 19, offset: 7839},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 221, col: 19, offset: 7839},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 221, col: 23, offset: 7843},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonSection5Element437,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 221, col: 27, offset: 7847},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 221, col: 38, offset: 7858},
																			expr: &choiceExpr{
																				pos: position{line: 225, col: 21, offset: 7971},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 225, col: 21, offset: 7971},
																						run: (*parser).callonSection5Element442,
																						expr: &seqExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 225, col: 21, offset: 7971},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										run: (*parser).callonSection5Element445,
																										expr: &seqExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9116},
																														run: (*parser).callonSection5Element448,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9116},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 28, offset: 8242},
																													expr: &actionExpr{
																														pos: position{line: 282, col: 14, offset: 9780},
																														run: (*parser).callonSection5Element451,
																														expr: &litMatcher{
																															pos:        position{line: 282, col: 14, offset: 9780},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 39, offset: 8253},
																													expr: &actionExpr{
																														pos: position{line: 1229, col: 16, offset: 48642},
																														run: (*parser).callonSection5Element454,
																														expr: &litMatcher{
																															pos:        position{line: 1229, col: 16, offset: 48642},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 231, col: 52, offset: 8266},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 231, col: 56, offset: 8270},
																														expr: &choiceExpr{
																															pos: position{line: 231, col: 57, offset: 8271},
																															alternatives: []interface{}{
																																&actionExpr{
																																	pos: position{line: 1264, col: 14, offset: 49515},
																																	run: (*parser).callonSection5Element459,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		expr: &charClassMatcher{
																																			pos:        position{line: 1264, col: 14, offset: 49515},
																																			val:        "[a-zA-Z0-9]",
																																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 1278, col: 11, offset: 49909},
																																	run: (*parser).callonSection5Element462,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		expr: &choiceExpr{
																																			pos: position{line: 1306, col: 7, offset: 50454},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1306, col: 7, offset: 50454},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 1306, col: 13, offset: 50460},
																																					run: (*parser).callonSection5Element466,
																																					expr: &litMatcher{
																																						pos:        position{line: 1306, col: 13, offset: 50460},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 231, col: 78, offset: 8292},
																																	run: (*parser).callonSection5Element468,
																																	expr: &seqExpr{
																																		pos: position{line: 231, col: 79, offset: 8293},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 231, col: 79, offset: 8293},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 80, offset: 8294},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 84, offset: 8298},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 85, offset: 8299},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 89, offset: 8303},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 90, offset: 8304},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 231, col: 95, offset: 8309,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 225, col: 40, offset: 7990},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 225, col: 44, offset: 7994},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 237, col: 19, offset: 8403},
																										run: (*parser).callonSection5Element479,
																										expr: &labeledExpr{
																											pos:   position{line: 237, col: 19, offset: 8403},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 237, col: 25, offset: 8409},
																												expr: &choiceExpr{
																													pos: position{line: 237, col: 26, offset: 8410},
																													alternatives: []interface{}{
																														&actionExpr{
																															pos: position{line: 1264, col: 14, offset: 49515},
																															run: (*parser).callonSection5Element483,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1264, col: 14, offset: 49515},
																																expr: &charClassMatcher{
																																	pos:        position{line: 1264, col: 14, offset: 49515},
																																	val:        "[a-zA-Z0-9]",
																																	ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 1278, col: 11, offset: 49909},
																															run: (*parser).callonSection5Element486,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1278, col: 11, offset: 49909},
																																expr: &choiceExpr{
																																	pos: position{line: 1306, col: 7, offset: 50454},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1306, col: 7, offset: 50454},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 1306, col: 13, offset: 50460},
																																			run: (*parser).callonSection5Element490,
																																			expr: &litMatcher{
																																				pos:        position{line: 1306, col: 13, offset: 50460},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 237, col: 47, offset: 8431},
																															run: (*parser).callonSection5Element492,
																															expr: &seqExpr{
																																pos: position{line: 237, col: 48, offset: 8432},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 237, col: 48, offset: 8432},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 49, offset: 8433},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 237, col: 53, offset: 8437},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 54, offset: 8438},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 237, col: 58, offset: 8442},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 59, offset: 8443},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 237, col: 64, offset: 8448,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 225, col: 67, offset: 8017},
																									expr: &litMatcher{
																										pos:        position{line: 225, col: 67, offset: 8017},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 225, col: 72, offset: 8022},
																									expr: &choiceExpr{
																										pos: position{line: 1306, col: 7, offset: 50454},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1306, col: 7, offset: 50454},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1306, col: 13, offset: 50460},
																												run: (*parser).callonSection5Element506,
																												expr: &litMatcher{
																													pos:        position{line: 1306, col: 13, offset: 50460},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 227, col: 5, offset: 8106},
																						run: (*parser).callonSection5Element508,
																						expr: &seqExpr{
																							pos: position{line: 227, col: 5, offset: 8106},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 227, col: 5, offset: 8106},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										run: (*parser).callonSection5Element511,
																										expr: &seqExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9116},
																														run: (*parser).callonSection5Element514,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9116},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 28, offset: 8242},
																													expr: &actionExpr{
																														pos: position{line: 282, col: 14, offset: 9780},
																														run: (*parser).callonSection5Element517,
																														expr: &litMatcher{
																															pos:        position{line: 282, col: 14, offset: 9780},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 39, offset: 8253},
																													expr: &actionExpr{
																														pos: position{line: 1229, col: 16, offset: 48642},
																														run: (*parser).callonSection5Element520,
																														expr: &litMatcher{
																															pos:        position{line: 1229, col: 16, offset: 48642},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 231, col: 52, offset: 8266},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 231, col: 56, offset: 8270},
																														expr: &choiceExpr{
																															pos: position{line: 231, col: 57, offset: 8271},
																															alternatives: []interface{}{
																																&actionExpr{
																																	pos: position{line: 1264, col: 14, offset: 49515},
																																	run: (*parser).callonSection5Element525,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		expr: &charClassMatcher{
																																			pos:        position{line: 1264, col: 14, offset: 49515},
																																			val:        "[a-zA-Z0-9]",
																																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 1278, col: 11, offset: 49909},
																																	run: (*parser).callonSection5Element528,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		expr: &choiceExpr{
																																			pos: position{line: 1306, col: 7, offset: 50454},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1306, col: 7, offset: 50454},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 1306, col: 13, offset: 50460},
																																					run: (*parser).callonSection5Element532,
																																					expr: &litMatcher{
																																						pos:        position{line: 1306, col: 13, offset: 50460},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 231, col: 78, offset: 8292},
																																	run: (*parser).callonSection5Element534,
																																	expr: &seqExpr{
																																		pos: position{line: 231, col: 79, offset: 8293},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 231, col: 79, offset: 8293},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 80, offset: 8294},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 84, offset: 8298},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 85, offset: 8299},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 89, offset: 8303},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 90, offset: 8304},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 231, col: 95, offset: 8309,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 227, col: 24, offset: 8125},
																									expr: &litMatcher{
																										pos:        position{line: 227, col: 24, offset: 8125},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 227, col: 29, offset: 8130},
																									expr: &choiceExpr{
																										pos: position{line: 1306, col: 7, offset: 50454},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1306, col: 7, offset: 50454},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1306, col: 13, offset: 50460},
																												run: (*parser).callonSection5Element548,
																												expr: &litMatcher{
																													pos:        position{line: 1306, col: 13, offset: 50460},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 221, col: 59, offset: 7879},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 165, col: 170, offset: 6018},
												expr: &choiceExpr{
													pos: position{line: 1306, col: 7, offset: 50454},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1306, col: 7, offset: 50454},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1306, col: 13, offset: 50460},
															run: (*parser).callonSection5Element554,
															expr: &litMatcher{
																pos:        position{line: 1306, col: 13, offset: 50460},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1314, col: 8, offset: 50552},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1310, col: 12, offset: 50512},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1310, col: 21, offset: 50521},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1312, col: 8, offset: 50541},
														expr: &anyMatcher{
															line: 1312, col: 9, offset: 50542,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 433, col: 5, offset: 15396},
							label: "element",
							expr: &ruleRefExpr{
								pos:  position{line: 433, col: 14, offset: 15405},
								name: "DocumentElement",
							},
						},
					},
				},
			},
		},
		{
			name: "TitleElements",
			pos:  position{line: 437, col: 1, offset: 15500},
			expr: &actionExpr{
				pos: position{line: 437, col: 18, offset: 15517},
				run: (*parser).callonTitleElements1,
				expr: &labeledExpr{
					pos:   position{line: 437, col: 18, offset: 15517},
					label: "elements",
					expr: &oneOrMoreExpr{
						pos: position{line: 437, col: 27, offset: 15526},
						expr: &seqExpr{
							pos: position{line: 437, col: 28, offset: 15527},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 437, col: 28, offset: 15527},
									expr: &choiceExpr{
										pos: position{line: 1310, col: 12, offset: 50512},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1310, col: 12, offset: 50512},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1310, col: 21, offset: 50521},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 437, col: 37, offset: 15536},
									expr: &actionExpr{
										pos: position{line: 180, col: 20, offset: 6467},
										run: (*parser).callonTitleElements10,
										expr: &seqExpr{
											pos: position{line: 180, col: 20, offset: 6467},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 180, col: 20, offset: 6467},
													val:        "[[",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 180, col: 25, offset: 6472},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 1288, col: 7, offset: 50075},
														run: (*parser).callonTitleElements14,
														expr: &oneOrMoreExpr{
															pos: position{line: 1288, col: 7, offset: 50075},
															expr: &choiceExpr{
																pos: position{line: 1288, col: 8, offset: 50076},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 1264, col: 14, offset: 49515},
																		run: (*parser).callonTitleElements17,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1264, col: 14, offset: 49515},
																			expr: &charClassMatcher{
																				pos:        position{line: 1264, col: 14, offset: 49515},
																				val:        "[a-zA-Z0-9]",
																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 1288, col: 20, offset: 50088},
																		run: (*parser).callonTitleElements20,
																		expr: &seqExpr{
																			pos: position{line: 1288, col: 21, offset: 50089},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 1288, col: 21, offset: 50089},
																					expr: &choiceExpr{
																						pos: position{line: 1310, col: 12, offset: 50512},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1310, col: 12, offset: 50512},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 1310, col: 21, offset: 50521},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 30, offset: 50098},
																					expr: &choiceExpr{
																						pos: position{line: 1306, col: 7, offset: 50454},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1306, col: 7, offset: 50454},
																								val:        " ",
																								ignoreCase: false,
																							},
																							&actionExpr{
																								pos: position{line: 1306, col: 13, offset: 50460},
																								run: (*parser).callonTitleElements29,
																								expr: &litMatcher{
																									pos:        position{line: 1306, col: 13, offset: 50460},
																									val:        "\t",
																									ignoreCase: false,
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 34, offset: 50102},
																					expr: &litMatcher{
																						pos:        position{line: 1288, col: 35, offset: 50103},
																						val:        "[",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 39, offset: 50107},
																					expr: &litMatcher{
																						pos:        position{line: 1288, col: 40, offset: 50108},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 44, offset: 50112},
																					expr: &litMatcher{
																						pos:        position{line: 1288, col: 45, offset: 50113},
																						val:        "<<",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 50, offset: 50118},
																					expr: &litMatcher{
																						pos:        position{line: 1288, col: 51, offset: 50119},
																						val:        ">>",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 56, offset: 50124},
																					expr: &litMatcher{
																						pos:        position{line: 1288, col: 57, offset: 50125},
																						val:        ",",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 1288, col: 62, offset: 50130,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 180, col: 33, offset: 6480},
													val:        "]]",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 180, col: 38, offset: 6485},
													expr: &choiceExpr{
														pos: position{line: 1306, col: 7, offset: 50454},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1306, col: 7, offset: 50454},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1306, col: 13, offset: 50460},
																run: (*parser).callonTitleElements46,
																expr: &litMatcher{
																	pos:        position{line: 1306, col: 13, offset: 50460},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&ruleRefExpr{
									pos:  position{line: 437, col: 54, offset: 15553},
									name: "TitleElement",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "TitleElement",
			pos:  position{line: 441, col: 1, offset: 15674},
			expr: &actionExpr{
				pos: position{line: 441, col: 17, offset: 15690},
				run: (*parser).callonTitleElement1,
				expr: &labeledExpr{
					pos:   position{line: 441, col: 17, offset: 15690},
					label: "element",
					expr: &choiceExpr{
						pos: position{line: 441, col: 26, offset: 15699},
						alternatives: []interface{}{
							&actionExpr{
								pos: position{line: 1278, col: 11, offset: 49909},
								run: (*parser).callonTitleElement4,
								expr: &oneOrMoreExpr{
									pos: position{line: 1278, col: 11, offset: 49909},
									expr: &choiceExpr{
										pos: position{line: 1306, col: 7, offset: 50454},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1306, col: 7, offset: 50454},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1306, col: 13, offset: 50460},
												run: (*parser).callonTitleElement8,
												expr: &litMatcher{
													pos:        position{line: 1306, col: 13, offset: 50460},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 1268, col: 8, offset: 49571},
								run: (*parser).callonTitleElement10,
								expr: &litMatcher{
									pos:        position{line: 1268, col: 8, offset: 49571},
									val:        ".",
									ignoreCase: false,
								},
							},
							&actionExpr{
								pos: position{line: 877, col: 19, offset: 35264},
								run: (*parser).callonTitleElement12,
								expr: &seqExpr{
									pos: position{line: 877, col: 19, offset: 35264},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 877, col: 19, offset: 35264},
											val:        "<<",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 877, col: 24, offset: 35269},
											label: "id",
											expr: &actionExpr{
												pos: position{line: 1288, col: 7, offset: 50075},
												run: (*parser).callonTitleElement16,
												expr: &oneOrMoreExpr{
													pos: position{line: 1288, col: 7, offset: 50075},
													expr: &choiceExpr{
														pos: position{line: 1288, col: 8, offset: 50076},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 1264, col: 14, offset: 49515},
																run: (*parser).callonTitleElement19,
																expr: &oneOrMoreExpr{
																	pos: position{line: 1264, col: 14, offset: 49515},
																	expr: &charClassMatcher{
																		pos:        position{line: 1264, col: 14, offset: 49515},
																		val:        "[a-zA-Z0-9]",
																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
															&actionExpr{
																pos: position{line: 1288, col: 20, offset: 50088},
																run: (*parser).callonTitleElement22,
																expr: &seqExpr{
																	pos: position{line: 1288, col: 21, offset: 50089},
																	exprs: []interface{}{
																		&notExpr{
																			pos: position{line: 1288, col: 21, offset: 50089},
																			expr: &choiceExpr{
																				pos: position{line: 1310, col: 12, offset: 50512},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1310, col: 12, offset: 50512},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 1310, col: 21, offset: 50521},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																				},
																			},
																		},
																		&notExpr{
																			pos: position{line: 1288, col: 30, offset: 50098},
																			expr: &choiceExpr{
																				pos: position{line: 1306, col: 7, offset: 50454},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1306, col: 7, offset: 50454},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1306, col: 13, offset: 50460},
																						run: (*parser).callonTitleElement31,
																						expr: &litMatcher{
																							pos:        position{line: 1306, col: 13, offset: 50460},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&notExpr{
																			pos: position{line: 1288, col: 34, offset: 50102},
																			expr: &litMatcher{
																				pos:        position{line: 1288, col: 35, offset: 50103},
																				val:        "[",
																				ignoreCase: false,
																			},
																		},
																		&notExpr{
																			pos: position{line: 1288, col: 39, offset: 50107},
																			expr: &litMatcher{
																				pos:        position{line: 1288, col: 40, offset: 50108},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																		&notExpr{
																			pos: position{line: 1288, col: 44, offset: 50112},
																			expr: &litMatcher{
																				pos:        position{line: 1288, col: 45, offset: 50113},
																				val:        "<<",
																				ignoreCase: false,
																			},
																		},
																		&notExpr{
																			pos: position{line: 1288, col: 50, offset: 50118},
																			expr: &litMatcher{
																				pos:        position{line: 1288, col: 51, offset: 50119},
																				val:        ">>",
																				ignoreCase: false,
																			},
																		},
																		&notExpr{
																			pos: position{line: 1288, col: 56, offset: 50124},
																			expr: &litMatcher{
																				pos:        position{line: 1288, col: 57, offset: 50125},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&anyMatcher{
																			line: 1288, col: 62, offset: 50130,
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 877, col: 32, offset: 35277},
											expr: &choiceExpr{
												pos: position{line: 1306, col: 7, offset: 50454},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1306, col: 7, offset: 50454},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1306, col: 13, offset: 50460},
														run: (*parser).callonTitleElement47,
														expr: &litMatcher{
															pos:        position{line: 1306, col: 13, offset: 50460},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 877, col: 36, offset: 35281},
											val:        ",",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 877, col: 40, offset: 35285},
											label: "label",
											expr: &actionExpr{
												pos: position{line: 883, col: 24, offset: 35487},
												run: (*parser).callonTitleElement51,
												expr: &oneOrMoreExpr{
													pos: position{line: 883, col: 24, offset: 35487},
													expr: &choiceExpr{
														pos: position{line: 883, col: 25, offset: 35488},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 1264, col: 14, offset: 49515},
																run: (*parser).callonTitleElement54,
																expr: &oneOrMoreExpr{
																	pos: position{line: 1264, col: 14, offset: 49515},
																	expr: &charClassMatcher{
																		pos:        position{line: 1264, col: 14, offset: 49515},
																		val:        "[a-zA-Z0-9]",
																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
															&actionExpr{
																pos: position{line: 1278, col: 11, offset: 49909},
																run: (*parser).callonTitleElement57,
																expr: &oneOrMoreExpr{
																	pos: position{line: 1278, col: 11, offset: 49909},
																	expr: &choiceExpr{
																		pos: position{line: 1306, col: 7, offset: 50454},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1306, col: 7, offset: 50454},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1306, col: 13, offset: 50460},
																				run: (*parser).callonTitleElement61,
																				expr: &litMatcher{
																					pos:        position{line: 1306, col: 13, offset: 50460},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 883, col: 46, offset: 35509},
																run: (*parser).callonTitleElement63,
																expr: &seqExpr{
																	pos: position{line: 883, col: 47, offset: 35510},
																	exprs: []interface{}{
																		&notExpr{
																			pos: position{line: 883, col: 47, offset: 35510},
																			expr: &litMatcher{
																				pos:        position{line: 883, col: 48, offset: 35511},
																				val:        ">>",
																				ignoreCase: false,
																			},
																		},
																		&anyMatcher{
																			line: 883, col: 54, offset: 35517,
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 877, col: 68, offset: 35313},
											val:        ">>",
											ignoreCase: false,
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 879, col: 5, offset: 35388},
								run: (*parser).callonTitleElement69,
								expr: &seqExpr{
									pos: position{line: 879, col: 5, offset: 35388},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 879, col: 5, offset: 35388},
											val:        "<<",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 879, col: 10, offset: 35393},
											label: "id",
											expr: &actionExpr{
												pos: position{line: 1288, col: 7, offset: 50075},
												run: (*parser).callonTitleElement73,
												expr: &oneOrMoreExpr{
													pos: position{line: 1288, col: 7, offset: 50075},
													expr: &choiceExpr{
														pos: position{line: 1288, col: 8, offset: 50076},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 1264, col: 14, offset: 49515},
																run: (*parser).callonTitleElement76,
																expr: &oneOrMoreExpr{
																	pos: position{line: 1264, col: 14, offset: 49515},
																	expr: &charClassMatcher{
																		pos:        position{line: 1264, col: 14, offset: 49515},
																		val:        "[a-zA-Z0-9]",
																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
															&actionExpr{
																pos: position{line: 1288, col: 20, offset: 50088},
																run: (*parser).callonTitleElement79,
																expr: &seqExpr{
																	pos: position{line: 1288, col: 21, offset: 50089},
																	exprs: []interface{}{
																		&notExpr{
																			pos: position{line: 1288, col: 21, offset: 50089},
																			expr: &choiceExpr{
																				pos: position{line: 1310, col: 12, offset: 50512},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1310, col: 12, offset: 50512},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 1310, col: 21, offset: 50521},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																				},
																			},
																		},
																		&notExpr{
																			pos: position{line: 1288, col: 30, offset: 50098},
																			expr: &choiceExpr{
																				pos: position{line: 1306, col: 7, offset: 50454},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1306, col: 7, offset: 50454},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1306, col: 13, offset: 50460},
																						run: (*parser).callonTitleElement88,
																						expr: &litMatcher{
																							pos:        position{line: 1306, col: 13, offset: 50460},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&notExpr{
																			pos: position{line: 1288, col: 34, offset: 50102},
																			expr: &litMatcher{
																				pos:        position{line: 1288, col: 35, offset: 50103},
																				val:        "[",
																				ignoreCase: false,
																			},
																		},
																		&notExpr{
																			pos: position{line: 1288, col: 39, offset: 50107},
																			expr: &litMatcher{
																				pos:        position{line: 1288, col: 40, offset: 50108},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																		&notExpr{
																			pos: position{line: 1288, col: 44, offset: 50112},
																			expr: &litMatcher{
																				pos:        position{line: 1288, col: 45, offset: 50113},
																				val:        "<<",
																				ignoreCase: false,
																			},
																		},
																		&notExpr{
																			pos: position{line: 1288, col: 50, offset: 50118},
																			expr: &litMatcher{
																				pos:        position{line: 1288, col: 51, offset: 50119},
																				val:        ">>",
																				ignoreCase: false,
																			},
																		},
																		&notExpr{
																			pos: position{line: 1288, col: 56, offset: 50124},
																			expr: &litMatcher{
																				pos:        position{line: 1288, col: 57, offset: 50125},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&anyMatcher{
																			line: 1288, col: 62, offset: 50130,
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 879, col: 18, offset: 35401},
											val:        ">>",
											ignoreCase: false,
										},
									},
								},
							},
							&ruleRefExpr{
								pos:  position{line: 441, col: 58, offset: 15731},
								name: "Passthrough",
							},
							&actionExpr{
								pos: position{line: 934, col: 16, offset: 37105},
								run: (*parser).callonTitleElement103,
								expr: &seqExpr{
									pos: position{line: 934, col: 16, offset: 37105},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 934, col: 16, offset: 37105},
											val:        "image:",
											ignoreCase: false,
										},
										&notExpr{
											pos: position{line: 934, col: 25, offset: 37114},
											expr: &litMatcher{
												pos:        position{line: 934, col: 26, offset: 37115},
												val:        ":",
												ignoreCase: false,
											},
										},
										&labeledExpr{
											pos:   position{line: 934, col: 30, offset: 37119},
											label: "path",
											expr: &actionExpr{
												pos: position{line: 1282, col: 8, offset: 49956},
												run: (*parser).callonTitleElement109,
												expr: &oneOrMoreExpr{
													pos: position{line: 1282, col: 8, offset: 49956},
													expr: &choiceExpr{
														pos: position{line: 1282, col: 9, offset: 49957},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 1264, col: 14, offset: 49515},
																run: (*parser).callonTitleElement112,
																expr: &oneOrMoreExpr{
																	pos: position{line: 1264, col: 14, offset: 49515},
																	expr: &charClassMatcher{
																		pos:        position{line: 1264, col: 14, offset: 49515},
																		val:        "[a-zA-Z0-9]",
																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
															&actionExpr{
																pos: position{line: 1282, col: 21, offset: 49969},
																run: (*parser).callonTitleElement115,
																expr: &seqExpr{
																	pos: position{line: 1282, col: 22, offset: 49970},
																	exprs: []interface{}{
																		&notExpr{
																			pos: position{line: 1282, col: 22, offset: 49970},
																			expr: &choiceExpr{
																				pos: position{line: 1310, col: 12, offset: 50512},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1310, col: 12, offset: 50512},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 1310, col: 21, offset: 50521},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																				},
																			},
																		},
																		&notExpr{
																			pos: position{line: 1282, col: 31, offset: 49979},
																			expr: &choiceExpr{
																				pos: position{line: 1306, col: 7, offset: 50454},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1306, col: 7, offset: 50454},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1306, col: 13, offset: 50460},
																						run: (*parser).callonTitleElement124,
																						expr: &litMatcher{
																							pos:        position{line: 1306, col: 13, offset: 50460},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																		&notExpr{
																			pos: position{line: 1282, col: 35, offset: 49983},
																			expr: &litMatcher{
																				pos:        position{line: 1282, col: 36, offset: 49984},
																				val:        "[",
																				ignoreCase: false,
																			},
																		},
																		&notExpr{
																			pos: position{line: 1282, col: 40, offset: 49988},
																			expr: &litMatcher{
																				pos:        position{line: 1282, col: 41, offset: 49989},
																				val:        "]",
																				ignoreCase: false,
																			},
																		},
																		&anyMatcher{
																			line: 1282, col: 46, offset: 49994,
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 934, col: 41, offset: 37130},
											label: "inlineAttributes",
											expr: &choiceExpr{
												pos: position{line: 939, col: 20, offset: 37387},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 939, col: 20, offset: 37387},
														run: (*parser).callonTitleElement133,
														expr: &seqExpr{
															pos: position{line: 939, col: 20, offset: 37387},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 939, col: 20, offset: 37387},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 939, col: 24, offset: 37391},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 956, col: 19, offset: 38110},
																		run: (*parser).callonTitleElement137,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 956, col: 19, offset: 38110},
																			expr: &choiceExpr{
																				pos: position{line: 956, col: 20, offset: 38111},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 1264, col: 14, offset: 49515},
																						run: (*parser).callonTitleElement140,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							expr: &charClassMatcher{
																								pos:        position{line: 1264, col: 14, offset: 49515},
																								val:        "[a-zA-Z0-9]",
																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 1278, col: 11, offset: 49909},
																						run: (*parser).callonTitleElement143,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							expr: &choiceExpr{
																								pos: position{line: 1306, col: 7, offset: 50454},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1306, col: 7, offset: 50454},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1306, col: 13, offset: 50460},
																										run: (*parser).callonTitleElement147,
																										expr: &litMatcher{
																											pos:        position{line: 1306, col: 13, offset: 50460},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 956, col: 41, offset: 38132},
																						run: (*parser).callonTitleElement149,
																						expr: &seqExpr{
																							pos: position{line: 956, col: 42, offset: 38133},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 956, col: 42, offset: 38133},
																									expr: &litMatcher{
																										pos:        position{line: 956, col: 43, offset: 38134},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 956, col: 47, offset: 38138},
																									expr: &litMatcher{
																										pos:        position{line: 956, col: 48, offset: 38139},
																										val:        "=",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 956, col: 52, offset: 38143},
																									expr: &litMatcher{
																										pos:        position{line: 956, col: 53, offset: 38144},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 956, col: 57, offset: 38148,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 939, col: 45, offset: 37412},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 940, col: 5, offset: 37420},
																	label: "width",
																	expr: &actionExpr{
																		pos: position{line: 956, col: 19, offset: 38110},
																		run: (*parser).callonTitleElement160,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 956, col: 19, offset: 38110},
																			expr: &choiceExpr{
																				pos: position{line: 956, col: 20, offset: 38111},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 1264, col: 14, offset: 49515},
																						run: (*parser).callonTitleElement163,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							expr: &charClassMatcher{
																								pos:        position{line: 1264, col: 14, offset: 49515},
																								val:        "[a-zA-Z0-9]",
																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 1278, col: 11, offset: 49909},
																						run: (*parser).callonTitleElement166,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							expr: &choiceExpr{
																								pos: position{line: 1306, col: 7, offset: 50454},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1306, col: 7, offset: 50454},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1306, col: 13, offset: 50460},
																										run: (*parser).callonTitleElement170,
																										expr: &litMatcher{
																											pos:        position{line: 1306, col: 13, offset: 50460},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 956, col: 41, offset: 38132},
																						run: (*parser).callonTitleElement172,
																						expr: &seqExpr{
																							pos: position{line: 956, col: 42, offset: 38133},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 956, col: 42, offset: 38133},
																									expr: &litMatcher{
																										pos:        position{line: 956, col: 43, offset: 38134},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 956, col: 47, offset: 38138},
																									expr: &litMatcher{
																										pos:        position{line: 956, col: 48, offset: 38139},
																										val:        "=",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 956, col: 52, offset: 38143},
																									expr: &litMatcher{
																										pos:        position{line: 956, col: 53, offset: 38144},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 956, col: 57, offset: 38148,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 940, col: 29, offset: 37444},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 941, col: 5, offset: 37452},
																	label: "height",
																	expr: &actionExpr{
																		pos: position{line: 956, col: 19, offset: 38110},
																		run: (*parser).callonTitleElement183,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 956, col: 19, offset: 38110},
																			expr: &choiceExpr{
																				pos: position{line: 956, col: 20, offset: 38111},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 1264, col: 14, offset: 49515},
																						run: (*parser).callonTitleElement186,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							expr: &charClassMatcher{
																								pos:        position{line: 1264, col: 14, offset: 49515},
																								val:        "[a-zA-Z0-9]",
																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 1278, col: 11, offset: 49909},
																						run: (*parser).callonTitleElement189,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							expr: &choiceExpr{
																								pos: position{line: 1306, col: 7, offset: 50454},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1306, col: 7, offset: 50454},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1306, col: 13, offset: 50460},
																										run: (*parser).callonTitleElement193,
																										expr: &litMatcher{
																											pos:        position{line: 1306, col: 13, offset: 50460},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 956, col: 41, offset: 38132},
																						run: (*parser).callonTitleElement195,
																						expr: &seqExpr{
																							pos: position{line: 956, col: 42, offset: 38133},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 956, col: 42, offset: 38133},
																									expr: &litMatcher{
																										pos:        position{line: 956, col: 43, offset: 38134},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 956, col: 47, offset: 38138},
																									expr: &litMatcher{
																										pos:        position{line: 956, col: 48, offset: 38139},
																										val:        "=",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 956, col: 52, offset: 38143},
																									expr: &litMatcher{
																										pos:        position{line: 956, col: 53, offset: 38144},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 956, col: 57, offset: 38148,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&zeroOrOneExpr{
																	pos: position{line: 941, col: 29, offset: 37476},
																	expr: &litMatcher{
																		pos:        position{line: 941, col: 29, offset: 37476},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&labeledExpr{
																	pos:   position{line: 942, col: 5, offset: 37485},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 942, col: 16, offset: 37496},
																		expr: &choiceExpr{
																			pos: position{line: 225, col: 21, offset: 7971},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 225, col: 21, offset: 7971},
																					run: (*parser).callonTitleElement209,
																					expr: &seqExpr{
																						pos: position{line: 225, col: 21, offset: 7971},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 225, col: 21, offset: 7971},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 231, col: 17, offset: 8231},
																									run: (*parser).callonTitleElement212,
																									expr: &seqExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												expr: &actionExpr{
																													pos: position{line: 259, col: 14, offset: 9116},
																													run: (*parser).callonTitleElement215,
																													expr: &litMatcher{
																														pos:        position{line: 259, col: 14, offset: 9116},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 231, col: 28, offset: 8242},
																												expr: &actionExpr{
																													pos: position{line: 282, col: 14, offset: 9780},
																													run: (*parser).callonTitleElement218,
																													expr: &litMatcher{
																														pos:        position{line: 282, col: 14, offset: 9780},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 231, col: 39, offset: 8253},
																												expr: &actionExpr{
																													pos: position{line: 1229, col: 16, offset: 48642},
																													run: (*parser).callonTitleElement221,
																													expr: &litMatcher{
																														pos:        position{line: 1229, col: 16, offset: 48642},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 231, col: 52, offset: 8266},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 231, col: 56, offset: 8270},
																													expr: &choiceExpr{
																														pos: position{line: 231, col: 57, offset: 8271},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1264, col: 14, offset: 49515},
																																run: (*parser).callonTitleElement226,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1264, col: 14, offset: 49515},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1264, col: 14, offset: 49515},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1278, col: 11, offset: 49909},
																																run: (*parser).callonTitleElement229,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1278, col: 11, offset: 49909},
																																	expr: &choiceExpr{
																																		pos: position{line: 1306, col: 7, offset: 50454},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1306, col: 7, offset: 50454},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1306, col: 13, offset: 50460},
																																				run: (*parser).callonTitleElement233,
																																				expr: &litMatcher{
																																					pos:        position{line: 1306, col: 13, offset: 50460},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 231, col: 78, offset: 8292},
																																run: (*parser).callonTitleElement235,
																																expr: &seqExpr{
																																	pos: position{line: 231, col: 79, offset: 8293},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 80, offset: 8294},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 231, col: 84, offset: 8298},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 85, offset: 8299},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 231, col: 89, offset: 8303},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 90, offset: 8304},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 231, col: 95, offset: 8309,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 225, col: 40, offset: 7990},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 225, col: 44, offset: 7994},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 237, col: 19, offset: 8403},
																									run: (*parser).callonTitleElement246,
																									expr: &labeledExpr{
																										pos:   position{line: 237, col: 19, offset: 8403},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 237, col: 25, offset: 8409},
																											expr: &choiceExpr{
																												pos: position{line: 237, col: 26, offset: 8410},
																												alternatives: []interface{}{
																													&actionExpr{
																														pos: position{line: 1264, col: 14, offset: 49515},
																														run: (*parser).callonTitleElement250,
																														expr: &oneOrMoreExpr{
																															pos: position{line: 1264, col: 14, offset: 49515},
																															expr: &charClassMatcher{
																																pos:        position{line: 1264, col: 14, offset: 49515},
																																val:        "[a-zA-Z0-9]",
																																ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																														},
																													},
																													&actionExpr{
																														pos: position{line: 1278, col: 11, offset: 49909},
																														run: (*parser).callonTitleElement253,
																														expr: &oneOrMoreExpr{
																															pos: position{line: 1278, col: 11, offset: 49909},
																															expr: &choiceExpr{
																																pos: position{line: 1306, col: 7, offset: 50454},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1306, col: 7, offset: 50454},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 1306, col: 13, offset: 50460},
																																		run: (*parser).callonTitleElement257,
																																		expr: &litMatcher{
																																			pos:        position{line: 1306, col: 13, offset: 50460},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&actionExpr{
																														pos: position{line: 237, col: 47, offset: 8431},
																														run: (*parser).callonTitleElement259,
																														expr: &seqExpr{
																															pos: position{line: 237, col: 48, offset: 8432},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 237, col: 48, offset: 8432},
																																	expr: &litMatcher{
																																		pos:        position{line: 237, col: 49, offset: 8433},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 237, col: 53, offset: 8437},
																																	expr: &litMatcher{
																																		pos:        position{line: 237, col: 54, offset: 8438},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 237, col: 58, offset: 8442},
																																	expr: &litMatcher{
																																		pos:        position{line: 237, col: 59, offset: 8443},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 237, col: 64, offset: 8448,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 225, col: 67, offset: 8017},
																								expr: &litMatcher{
																									pos:        position{line: 225, col: 67, offset: 8017},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 225, col: 72, offset: 8022},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonTitleElement273,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 227, col: 5, offset: 8106},
																					run: (*parser).callonTitleElement275,
																					expr: &seqExpr{
																						pos: position{line: 227, col: 5, offset: 8106},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 227, col: 5, offset: 8106},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 231, col: 17, offset: 8231},
																									run: (*parser).callonTitleElement278,
																									expr: &seqExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												expr: &actionExpr{
																													pos: position{line: 259, col: 14, offset: 9116},
																													run: (*parser).callonTitleElement281,
																													expr: &litMatcher{
																														pos:        position{line: 259, col: 14, offset: 9116},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 231, col: 28, offset: 8242},
																												expr: &actionExpr{
																													pos: position{line: 282, col: 14, offset: 9780},
																													run: (*parser).callonTitleElement284,
																													expr: &litMatcher{
																														pos:        position{line: 282, col: 14, offset: 9780},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 231, col: 39, offset: 8253},
																												expr: &actionExpr{
																													pos: position{line: 1229, col: 16, offset: 48642},
																													run: (*parser).callonTitleElement287,
																													expr: &litMatcher{
																														pos:        position{line: 1229, col: 16, offset: 48642},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 231, col: 52, offset: 8266},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 231, col: 56, offset: 8270},
																													expr: &choiceExpr{
																														pos: position{line: 231, col: 57, offset: 8271},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1264, col: 14, offset: 49515},
																																run: (*parser).callonTitleElement292,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1264, col: 14, offset: 49515},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1264, col: 14, offset: 49515},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1278, col: 11, offset: 49909},
																																run: (*parser).callonTitleElement295,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1278, col: 11, offset: 49909},
																																	expr: &choiceExpr{
																																		pos: position{line: 1306, col: 7, offset: 50454},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1306, col: 7, offset: 50454},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1306, col: 13, offset: 50460},
																																				run: (*parser).callonTitleElement299,
																																				expr: &litMatcher{
																																					pos:        position{line: 1306, col: 13, offset: 50460},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 231, col: 78, offset: 8292},
																																run: (*parser).callonTitleElement301,
																																expr: &seqExpr{
																																	pos: position{line: 231, col: 79, offset: 8293},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 80, offset: 8294},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 231, col: 84, offset: 8298},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 85, offset: 8299},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 231, col: 89, offset: 8303},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 90, offset: 8304},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 231, col: 95, offset: 8309,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 227, col: 24, offset: 8125},
																								expr: &litMatcher{
																									pos:        position{line: 227, col: 24, offset: 8125},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 227, col: 29, offset: 8130},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonTitleElement315,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 942, col: 36, offset: 37516},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 944, col: 5, offset: 37614},
														run: (*parser).callonTitleElement318,
														expr: &seqExpr{
															pos: position{line: 944, col: 5, offset: 37614},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 944, col: 5, offset: 37614},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 944, col: 9, offset: 37618},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 956, col: 19, offset: 38110},
																		run: (*parser).callonTitleElement322,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 956, col: 19, offset: 38110},
																			expr: &choiceExpr{
																				pos: position{line: 956, col: 20, offset: 38111},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 1264, col: 14, offset: 49515},
																						run: (*parser).callonTitleElement325,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							expr: &charClassMatcher{
																								pos:        position{line: 1264, col: 14, offset: 49515},
																								val:        "[a-zA-Z0-9]",
																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 1278, col: 11, offset: 49909},
																						run: (*parser).callonTitleElement328,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							expr: &choiceExpr{
																								pos: position{line: 1306, col: 7, offset: 50454},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1306, col: 7, offset: 50454},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1306, col: 13, offset: 50460},
																										run: (*parser).callonTitleElement332,
																										expr: &litMatcher{
																											pos:        position{line: 1306, col: 13, offset: 50460},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 956, col: 41, offset: 38132},
																						run: (*parser).callonTitleElement334,
																						expr: &seqExpr{
																							pos: position{line: 956, col: 42, offset: 38133},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 956, col: 42, offset: 38133},
																									expr: &litMatcher{
																										pos:        position{line: 956, col: 43, offset: 38134},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 956, col: 47, offset: 38138},
																									expr: &litMatcher{
																										pos:        position{line: 956, col: 48, offset: 38139},
																										val:        "=",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 956, col: 52, offset: 38143},
																									expr: &litMatcher{
																										pos:        position{line: 956, col: 53, offset: 38144},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 956, col: 57, offset: 38148,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 944, col: 30, offset: 37639},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 945, col: 5, offset: 37647},
																	label: "width",
																	expr: &actionExpr{
																		pos: position{line: 956, col: 19, offset: 38110},
																		run: (*parser).callonTitleElement345,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 956, col: 19, offset: 38110},
																			expr: &choiceExpr{
																				pos: position{line: 956, col: 20, offset: 38111},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 1264, col: 14, offset: 49515},
																						run: (*parser).callonTitleElement348,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							expr: &charClassMatcher{
																								pos:        position{line: 1264, col: 14, offset: 49515},
																								val:        "[a-zA-Z0-9]",
																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 1278, col: 11, offset: 49909},
																						run: (*parser).callonTitleElement351,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							expr: &choiceExpr{
																								pos: position{line: 1306, col: 7, offset: 50454},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1306, col: 7, offset: 50454},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1306, col: 13, offset: 50460},
																										run: (*parser).callonTitleElement355,
																										expr: &litMatcher{
																											pos:        position{line: 1306, col: 13, offset: 50460},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 956, col: 41, offset: 38132},
																						run: (*parser).callonTitleElement357,
																						expr: &seqExpr{
																							pos: position{line: 956, col: 42, offset: 38133},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 956, col: 42, offset: 38133},
																									expr: &litMatcher{
																										pos:        position{line: 956, col: 43, offset: 38134},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 956, col: 47, offset: 38138},
																									expr: &litMatcher{
																										pos:        position{line: 956, col: 48, offset: 38139},
																										val:        "=",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 956, col: 52, offset: 38143},
																									expr: &litMatcher{
																										pos:        position{line: 956, col: 53, offset: 38144},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 956, col: 57, offset: 38148,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&zeroOrOneExpr{
																	pos: position{line: 945, col: 28, offset: 37670},
																	expr: &litMatcher{
																		pos:        position{line: 945, col: 28, offset: 37670},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&labeledExpr{
																	pos:   position{line: 946, col: 5, offset: 37679},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 946, col: 16, offset: 37690},
																		expr: &choiceExpr{
																			pos: position{line: 225, col: 21, offset: 7971},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 225, col: 21, offset: 7971},
																					run: (*parser).callonTitleElement371,
																					expr: &seqExpr{
																						pos: position{line: 225, col: 21, offset: 7971},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 225, col: 21, offset: 7971},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 231, col: 17, offset: 8231},
																									run: (*parser).callonTitleElement374,
																									expr: &seqExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												expr: &actionExpr{
																													pos: position{line: 259, col: 14, offset: 9116},
																													run: (*parser).callonTitleElement377,
																													expr: &litMatcher{
																														pos:        position{line: 259, col: 14, offset: 9116},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 231, col: 28, offset: 8242},
																												expr: &actionExpr{
																													pos: position{line: 282, col: 14, offset: 9780},
																													run: (*parser).callonTitleElement380,
																													expr: &litMatcher{
																														pos:        position{line: 282, col: 14, offset: 9780},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 231, col: 39, offset: 8253},
																												expr: &actionExpr{
																													pos: position{line: 1229, col: 16, offset: 48642},
																													run: (*parser).callonTitleElement383,
																													expr: &litMatcher{
																														pos:        position{line: 1229, col: 16, offset: 48642},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 231, col: 52, offset: 8266},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 231, col: 56, offset: 8270},
																													expr: &choiceExpr{
																														pos: position{line: 231, col: 57, offset: 8271},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1264, col: 14, offset: 49515},
																																run: (*parser).callonTitleElement388,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1264, col: 14, offset: 49515},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1264, col: 14, offset: 49515},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1278, col: 11, offset: 49909},
																																run: (*parser).callonTitleElement391,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1278, col: 11, offset: 49909},
																																	expr: &choiceExpr{
																																		pos: position{line: 1306, col: 7, offset: 50454},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1306, col: 7, offset: 50454},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1306, col: 13, offset: 50460},
																																				run: (*parser).callonTitleElement395,
																																				expr: &litMatcher{
																																					pos:        position{line: 1306, col: 13, offset: 50460},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 231, col: 78, offset: 8292},
																																run: (*parser).callonTitleElement397,
																																expr: &seqExpr{
																																	pos: position{line: 231, col: 79, offset: 8293},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 80, offset: 8294},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 231, col: 84, offset: 8298},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 85, offset: 8299},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 231, col: 89, offset: 8303},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 90, offset: 8304},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 231, col: 95, offset: 8309,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 225, col: 40, offset: 7990},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 225, col: 44, offset: 7994},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 237, col: 19, offset: 8403},
																									run: (*parser).callonTitleElement408,
																									expr: &labeledExpr{
																										pos:   position{line: 237, col: 19, offset: 8403},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 237, col: 25, offset: 8409},
																											expr: &choiceExpr{
																												pos: position{line: 237, col: 26, offset: 8410},
																												alternatives: []interface{}{
																													&actionExpr{
																														pos: position{line: 1264, col: 14, offset: 49515},
																														run: (*parser).callonTitleElement412,
																														expr: &oneOrMoreExpr{
																															pos: position{line: 1264, col: 14, offset: 49515},
																															expr: &charClassMatcher{
																																pos:        position{line: 1264, col: 14, offset: 49515},
																																val:        "[a-zA-Z0-9]",
																																ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																														},
																													},
																													&actionExpr{
																														pos: position{line: 1278, col: 11, offset: 49909},
																														run: (*parser).callonTitleElement415,
																														expr: &oneOrMoreExpr{
																															pos: position{line: 1278, col: 11, offset: 49909},
																															expr: &choiceExpr{
																																pos: position{line: 1306, col: 7, offset: 50454},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1306, col: 7, offset: 50454},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 1306, col: 13, offset: 50460},
																																		run: (*parser).callonTitleElement419,
																																		expr: &litMatcher{
																																			pos:        position{line: 1306, col: 13, offset: 50460},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&actionExpr{
																														pos: position{line: 237, col: 47, offset: 8431},
																														run: (*parser).callonTitleElement421,
																														expr: &seqExpr{
																															pos: position{line: 237, col: 48, offset: 8432},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 237, col: 48, offset: 8432},
																																	expr: &litMatcher{
																																		pos:        position{line: 237, col: 49, offset: 8433},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 237, col: 53, offset: 8437},
																																	expr: &litMatcher{
																																		pos:        position{line: 237, col: 54, offset: 8438},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 237, col: 58, offset: 8442},
																																	expr: &litMatcher{
																																		pos:        position{line: 237, col: 59, offset: 8443},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 237, col: 64, offset: 8448,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 225, col: 67, offset: 8017},
																								expr: &litMatcher{
																									pos:        position{line: 225, col: 67, offset: 8017},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 225, col: 72, offset: 8022},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonTitleElement435,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 227, col: 5, offset: 8106},
																					run: (*parser).callonTitleElement437,
																					expr: &seqExpr{
																						pos: position{line: 227, col: 5, offset: 8106},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 227, col: 5, offset: 8106},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 231, col: 17, offset: 8231},
																									run: (*parser).callonTitleElement440,
																									expr: &seqExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												expr: &actionExpr{
																													pos: position{line: 259, col: 14, offset: 9116},
																													run: (*parser).callonTitleElement443,
																													expr: &litMatcher{
																														pos:        position{line: 259, col: 14, offset: 9116},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 231, col: 28, offset: 8242},
																												expr: &actionExpr{
																													pos: position{line: 282, col: 14, offset: 9780},
																													run: (*parser).callonTitleElement446,
																													expr: &litMatcher{
																														pos:        position{line: 282, col: 14, offset: 9780},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 231, col: 39, offset: 8253},
																												expr: &actionExpr{
																													pos: position{line: 1229, col: 16, offset: 48642},
																													run: (*parser).callonTitleElement449,
																													expr: &litMatcher{
																														pos:        position{line: 1229, col: 16, offset: 48642},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 231, col: 52, offset: 8266},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 231, col: 56, offset: 8270},
																													expr: &choiceExpr{
																														pos: position{line: 231, col: 57, offset: 8271},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1264, col: 14, offset: 49515},
																																run: (*parser).callonTitleElement454,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1264, col: 14, offset: 49515},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1264, col: 14, offset: 49515},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1278, col: 11, offset: 49909},
																																run: (*parser).callonTitleElement457,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1278, col: 11, offset: 49909},
																																	expr: &choiceExpr{
																																		pos: position{line: 1306, col: 7, offset: 50454},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1306, col: 7, offset: 50454},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1306, col: 13, offset: 50460},
																																				run: (*parser).callonTitleElement461,
																																				expr: &litMatcher{
																																					pos:        position{line: 1306, col: 13, offset: 50460},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 231, col: 78, offset: 8292},
																																run: (*parser).callonTitleElement463,
																																expr: &seqExpr{
																																	pos: position{line: 231, col: 79, offset: 8293},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 80, offset: 8294},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 231, col: 84, offset: 8298},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 85, offset: 8299},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 231, col: 89, offset: 8303},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 90, offset: 8304},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 231, col: 95, offset: 8309,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 227, col: 24, offset: 8125},
																								expr: &litMatcher{
																									pos:        position{line: 227, col: 24, offset: 8125},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 227, col: 29, offset: 8130},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonTitleElement477,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 946, col: 36, offset: 37710},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 948, col: 5, offset: 37805},
														run: (*parser).callonTitleElement480,
														expr: &seqExpr{
															pos: position{line: 948, col: 5, offset: 37805},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 948, col: 5, offset: 37805},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 948, col: 9, offset: 37809},
																	label: "alt",
																	expr: &actionExpr{
																		pos: position{line: 956, col: 19, offset: 38110},
																		run: (*parser).callonTitleElement484,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 956, col: 19, offset: 38110},
																			expr: &choiceExpr{
																				pos: position{line: 956, col: 20, offset: 38111},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 1264, col: 14, offset: 49515},
																						run: (*parser).callonTitleElement487,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							expr: &charClassMatcher{
																								pos:        position{line: 1264, col: 14, offset: 49515},
																								val:        "[a-zA-Z0-9]",
																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 1278, col: 11, offset: 49909},
																						run: (*parser).callonTitleElement490,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							expr: &choiceExpr{
																								pos: position{line: 1306, col: 7, offset: 50454},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1306, col: 7, offset: 50454},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1306, col: 13, offset: 50460},
																										run: (*parser).callonTitleElement494,
																										expr: &litMatcher{
																											pos:        position{line: 1306, col: 13, offset: 50460},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 956, col: 41, offset: 38132},
																						run: (*parser).callonTitleElement496,
																						expr: &seqExpr{
																							pos: position{line: 956, col: 42, offset: 38133},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 956, col: 42, offset: 38133},
																									expr: &litMatcher{
																										pos:        position{line: 956, col: 43, offset: 38134},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 956, col: 47, offset: 38138},
																									expr: &litMatcher{
																										pos:        position{line: 956, col: 48, offset: 38139},
																										val:        "=",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 956, col: 52, offset: 38143},
																									expr: &litMatcher{
																										pos:        position{line: 956, col: 53, offset: 38144},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 956, col: 57, offset: 38148,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&zeroOrOneExpr{
																	pos: position{line: 948, col: 30, offset: 37830},
																	expr: &litMatcher{
																		pos:        position{line: 948, col: 30, offset: 37830},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&labeledExpr{
																	pos:   position{line: 949, col: 5, offset: 37839},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 949, col: 16, offset: 37850},
																		expr: &choiceExpr{
																			pos: position{line: 225, col: 21, offset: 7971},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 225, col: 21, offset: 7971},
																					run: (*parser).callonTitleElement510,
																					expr: &seqExpr{
																						pos: position{line: 225, col: 21, offset: 7971},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 225, col: 21, offset: 7971},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 231, col: 17, offset: 8231},
																									run: (*parser).callonTitleElement513,
																									expr: &seqExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												expr: &actionExpr{
																													pos: position{line: 259, col: 14, offset: 9116},
																													run: (*parser).callonTitleElement516,
																													expr: &litMatcher{
																														pos:        position{line: 259, col: 14, offset: 9116},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 231, col: 28, offset: 8242},
																												expr: &actionExpr{
																													pos: position{line: 282, col: 14, offset: 9780},
																													run: (*parser).callonTitleElement519,
																													expr: &litMatcher{
																														pos:        position{line: 282, col: 14, offset: 9780},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 231, col: 39, offset: 8253},
																												expr: &actionExpr{
																													pos: position{line: 1229, col: 16, offset: 48642},
																													run: (*parser).callonTitleElement522,
																													expr: &litMatcher{
																														pos:        position{line: 1229, col: 16, offset: 48642},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 231, col: 52, offset: 8266},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 231, col: 56, offset: 8270},
																													expr: &choiceExpr{
																														pos: position{line: 231, col: 57, offset: 8271},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1264, col: 14, offset: 49515},
																																run: (*parser).callonTitleElement527,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1264, col: 14, offset: 49515},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1264, col: 14, offset: 49515},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1278, col: 11, offset: 49909},
																																run: (*parser).callonTitleElement530,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1278, col: 11, offset: 49909},
																																	expr: &choiceExpr{
																																		pos: position{line: 1306, col: 7, offset: 50454},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1306, col: 7, offset: 50454},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1306, col: 13, offset: 50460},
																																				run: (*parser).callonTitleElement534,
																																				expr: &litMatcher{
																																					pos:        position{line: 1306, col: 13, offset: 50460},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 231, col: 78, offset: 8292},
																																run: (*parser).callonTitleElement536,
																																expr: &seqExpr{
																																	pos: position{line: 231, col: 79, offset: 8293},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 80, offset: 8294},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 231, col: 84, offset: 8298},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 85, offset: 8299},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 231, col: 89, offset: 8303},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 90, offset: 8304},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 231, col: 95, offset: 8309,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 225, col: 40, offset: 7990},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 225, col: 44, offset: 7994},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 237, col: 19, offset: 8403},
																									run: (*parser).callonTitleElement547,
																									expr: &labeledExpr{
																										pos:   position{line: 237, col: 19, offset: 8403},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 237, col: 25, offset: 8409},
																											expr: &choiceExpr{
																												pos: position{line: 237, col: 26, offset: 8410},
																												alternatives: []interface{}{
																													&actionExpr{
																														pos: position{line: 1264, col: 14, offset: 49515},
																														run: (*parser).callonTitleElement551,
																														expr: &oneOrMoreExpr{
																															pos: position{line: 1264, col: 14, offset: 49515},
																															expr: &charClassMatcher{
																																pos:        position{line: 1264, col: 14, offset: 49515},
																																val:        "[a-zA-Z0-9]",
																																ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																														},
																													},
																													&actionExpr{
																														pos: position{line: 1278, col: 11, offset: 49909},
																														run: (*parser).callonTitleElement554,
																														expr: &oneOrMoreExpr{
																															pos: position{line: 1278, col: 11, offset: 49909},
																															expr: &choiceExpr{
																																pos: position{line: 1306, col: 7, offset: 50454},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1306, col: 7, offset: 50454},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 1306, col: 13, offset: 50460},
																																		run: (*parser).callonTitleElement558,
																																		expr: &litMatcher{
																																			pos:        position{line: 1306, col: 13, offset: 50460},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&actionExpr{
																														pos: position{line: 237, col: 47, offset: 8431},
																														run: (*parser).callonTitleElement560,
																														expr: &seqExpr{
																															pos: position{line: 237, col: 48, offset: 8432},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 237, col: 48, offset: 8432},
																																	expr: &litMatcher{
																																		pos:        position{line: 237, col: 49, offset: 8433},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 237, col: 53, offset: 8437},
																																	expr: &litMatcher{
																																		pos:        position{line: 237, col: 54, offset: 8438},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 237, col: 58, offset: 8442},
																																	expr: &litMatcher{
																																		pos:        position{line: 237, col: 59, offset: 8443},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 237, col: 64, offset: 8448,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 225, col: 67, offset: 8017},
																								expr: &litMatcher{
																									pos:        position{line: 225, col: 67, offset: 8017},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 225, col: 72, offset: 8022},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonTitleElement574,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 227, col: 5, offset: 8106},
																					run: (*parser).callonTitleElement576,
																					expr: &seqExpr{
																						pos: position{line: 227, col: 5, offset: 8106},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 227, col: 5, offset: 8106},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 231, col: 17, offset: 8231},
																									run: (*parser).callonTitleElement579,
																									expr: &seqExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												expr: &actionExpr{
																													pos: position{line: 259, col: 14, offset: 9116},
																													run: (*parser).callonTitleElement582,
																													expr: &litMatcher{
																														pos:        position{line: 259, col: 14, offset: 9116},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 231, col: 28, offset: 8242},
																												expr: &actionExpr{
																													pos: position{line: 282, col: 14, offset: 9780},
																													run: (*parser).callonTitleElement585,
																													expr: &litMatcher{
																														pos:        position{line: 282, col: 14, offset: 9780},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 231, col: 39, offset: 8253},
																												expr: &actionExpr{
																													pos: position{line: 1229, col: 16, offset: 48642},
																													run: (*parser).callonTitleElement588,
																													expr: &litMatcher{
																														pos:        position{line: 1229, col: 16, offset: 48642},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 231, col: 52, offset: 8266},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 231, col: 56, offset: 8270},
																													expr: &choiceExpr{
																														pos: position{line: 231, col: 57, offset: 8271},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1264, col: 14, offset: 49515},
																																run: (*parser).callonTitleElement593,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1264, col: 14, offset: 49515},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1264, col: 14, offset: 49515},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1278, col: 11, offset: 49909},
																																run: (*parser).callonTitleElement596,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1278, col: 11, offset: 49909},
																																	expr: &choiceExpr{
																																		pos: position{line: 1306, col: 7, offset: 50454},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1306, col: 7, offset: 50454},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1306, col: 13, offset: 50460},
																																				run: (*parser).callonTitleElement600,
																																				expr: &litMatcher{
																																					pos:        position{line: 1306, col: 13, offset: 50460},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 231, col: 78, offset: 8292},
																																run: (*parser).callonTitleElement602,
																																expr: &seqExpr{
																																	pos: position{line: 231, col: 79, offset: 8293},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 80, offset: 8294},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 231, col: 84, offset: 8298},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 85, offset: 8299},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 231, col: 89, offset: 8303},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 90, offset: 8304},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 231, col: 95, offset: 8309,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 227, col: 24, offset: 8125},
																								expr: &litMatcher{
																									pos:        position{line: 227, col: 24, offset: 8125},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 227, col: 29, offset: 8130},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonTitleElement616,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 949, col: 36, offset: 37870},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 951, col: 5, offset: 37963},
														run: (*parser).callonTitleElement619,
														expr: &seqExpr{
															pos: position{line: 951, col: 5, offset: 37963},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 951, col: 5, offset: 37963},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 951, col: 9, offset: 37967},
																	label: "otherAttrs",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 951, col: 20, offset: 37978},
																		expr: &choiceExpr{
																			pos: position{line: 225, col: 21, offset: 7971},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 225, col: 21, offset: 7971},
																					run: (*parser).callonTitleElement625,
																					expr: &seqExpr{
																						pos: position{line: 225, col: 21, offset: 7971},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 225, col: 21, offset: 7971},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 231, col: 17, offset: 8231},
																									run: (*parser).callonTitleElement628,
																									expr: &seqExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												expr: &actionExpr{
																													pos: position{line: 259, col: 14, offset: 9116},
																													run: (*parser).callonTitleElement631,
																													expr: &litMatcher{
																														pos:        position{line: 259, col: 14, offset: 9116},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 231, col: 28, offset: 8242},
																												expr: &actionExpr{
																													pos: position{line: 282, col: 14, offset: 9780},
																													run: (*parser).callonTitleElement634,
																													expr: &litMatcher{
																														pos:        position{line: 282, col: 14, offset: 9780},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 231, col: 39, offset: 8253},
																												expr: &actionExpr{
																													pos: position{line: 1229, col: 16, offset: 48642},
																													run: (*parser).callonTitleElement637,
																													expr: &litMatcher{
																														pos:        position{line: 1229, col: 16, offset: 48642},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 231, col: 52, offset: 8266},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 231, col: 56, offset: 8270},
																													expr: &choiceExpr{
																														pos: position{line: 231, col: 57, offset: 8271},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1264, col: 14, offset: 49515},
																																run: (*parser).callonTitleElement642,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1264, col: 14, offset: 49515},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1264, col: 14, offset: 49515},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1278, col: 11, offset: 49909},
																																run: (*parser).callonTitleElement645,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1278, col: 11, offset: 49909},
																																	expr: &choiceExpr{
																																		pos: position{line: 1306, col: 7, offset: 50454},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1306, col: 7, offset: 50454},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1306, col: 13, offset: 50460},
																																				run: (*parser).callonTitleElement649,
																																				expr: &litMatcher{
																																					pos:        position{line: 1306, col: 13, offset: 50460},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 231, col: 78, offset: 8292},
																																run: (*parser).callonTitleElement651,
																																expr: &seqExpr{
																																	pos: position{line: 231, col: 79, offset: 8293},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 80, offset: 8294},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 231, col: 84, offset: 8298},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 85, offset: 8299},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 231, col: 89, offset: 8303},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 90, offset: 8304},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 231, col: 95, offset: 8309,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 225, col: 40, offset: 7990},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 225, col: 44, offset: 7994},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 237, col: 19, offset: 8403},
																									run: (*parser).callonTitleElement662,
																									expr: &labeledExpr{
																										pos:   position{line: 237, col: 19, offset: 8403},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 237, col: 25, offset: 8409},
																											expr: &choiceExpr{
																												pos: position{line: 237, col: 26, offset: 8410},
																												alternatives: []interface{}{
																													&actionExpr{
																														pos: position{line: 1264, col: 14, offset: 49515},
																														run: (*parser).callonTitleElement666,
																														expr: &oneOrMoreExpr{
																															pos: position{line: 1264, col: 14, offset: 49515},
																															expr: &charClassMatcher{
																																pos:        position{line: 1264, col: 14, offset: 49515},
																																val:        "[a-zA-Z0-9]",
																																ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																														},
																													},
																													&actionExpr{
																														pos: position{line: 1278, col: 11, offset: 49909},
																														run: (*parser).callonTitleElement669,
																														expr: &oneOrMoreExpr{
																															pos: position{line: 1278, col: 11, offset: 49909},
																															expr: &choiceExpr{
																																pos: position{line: 1306, col: 7, offset: 50454},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1306, col: 7, offset: 50454},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 1306, col: 13, offset: 50460},
																																		run: (*parser).callonTitleElement673,
																																		expr: &litMatcher{
																																			pos:        position{line: 1306, col: 13, offset: 50460},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&actionExpr{
																														pos: position{line: 237, col: 47, offset: 8431},
																														run: (*parser).callonTitleElement675,
																														expr: &seqExpr{
																															pos: position{line: 237, col: 48, offset: 8432},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 237, col: 48, offset: 8432},
																																	expr: &litMatcher{
																																		pos:        position{line: 237, col: 49, offset: 8433},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 237, col: 53, offset: 8437},
																																	expr: &litMatcher{
																																		pos:        position{line: 237, col: 54, offset: 8438},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 237, col: 58, offset: 8442},
																																	expr: &litMatcher{
																																		pos:        position{line: 237, col: 59, offset: 8443},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 237, col: 64, offset: 8448,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 225, col: 67, offset: 8017},
																								expr: &litMatcher{
																									pos:        position{line: 225, col: 67, offset: 8017},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 225, col: 72, offset: 8022},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonTitleElement689,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 227, col: 5, offset: 8106},
																					run: (*parser).callonTitleElement691,
																					expr: &seqExpr{
																						pos: position{line: 227, col: 5, offset: 8106},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 227, col: 5, offset: 8106},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 231, col: 17, offset: 8231},
																									run: (*parser).callonTitleElement694,
																									expr: &seqExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												expr: &actionExpr{
																													pos: position{line: 259, col: 14, offset: 9116},
																													run: (*parser).callonTitleElement697,
																													expr: &litMatcher{
																														pos:        position{line: 259, col: 14, offset: 9116},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 231, col: 28, offset: 8242},
																												expr: &actionExpr{
																													pos: position{line: 282, col: 14, offset: 9780},
																													run: (*parser).callonTitleElement700,
																													expr: &litMatcher{
																														pos:        position{line: 282, col: 14, offset: 9780},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 231, col: 39, offset: 8253},
																												expr: &actionExpr{
																													pos: position{line: 1229, col: 16, offset: 48642},
																													run: (*parser).callonTitleElement703,
																													expr: &litMatcher{
																														pos:        position{line: 1229, col: 16, offset: 48642},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 231, col: 52, offset: 8266},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 231, col: 56, offset: 8270},
																													expr: &choiceExpr{
																														pos: position{line: 231, col: 57, offset: 8271},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1264, col: 14, offset: 49515},
																																run: (*parser).callonTitleElement708,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1264, col: 14, offset: 49515},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1264, col: 14, offset: 49515},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1278, col: 11, offset: 49909},
																																run: (*parser).callonTitleElement711,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1278, col: 11, offset: 49909},
																																	expr: &choiceExpr{
																																		pos: position{line: 1306, col: 7, offset: 50454},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1306, col: 7, offset: 50454},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1306, col: 13, offset: 50460},
																																				run: (*parser).callonTitleElement715,
																																				expr: &litMatcher{
																																					pos:        position{line: 1306, col: 13, offset: 50460},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 231, col: 78, offset: 8292},
																																run: (*parser).callonTitleElement717,
																																expr: &seqExpr{
																																	pos: position{line: 231, col: 79, offset: 8293},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 80, offset: 8294},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 231, col: 84, offset: 8298},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 85, offset: 8299},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 231, col: 89, offset: 8303},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 90, offset: 8304},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 231, col: 95, offset: 8309,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 227, col: 24, offset: 8125},
																								expr: &litMatcher{
																									pos:        position{line: 227, col: 24, offset: 8125},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 227, col: 29, offset: 8130},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonTitleElement731,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 951, col: 40, offset: 37998},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 892, col: 9, offset: 35701},
								run: (*parser).callonTitleElement734,
								expr: &labeledExpr{
									pos:   position{line: 892, col: 9, offset: 35701},
									label: "link",
									expr: &choiceExpr{
										pos: position{line: 892, col: 15, offset: 35707},
										alternatives: []interface{}{
											&actionExpr{
												pos: position{line: 907, col: 17, offset: 36159},
												run: (*parser).callonTitleElement737,
												expr: &seqExpr{
													pos: position{line: 907, col: 17, offset: 36159},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 907, col: 17, offset: 36159},
															val:        "link:",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 907, col: 25, offset: 36167},
															label: "url",
															expr: &actionExpr{
																pos: position{line: 911, col: 20, offset: 36336},
																run: (*parser).callonTitleElement741,
																expr: &seqExpr{
																	pos: position{line: 911, col: 20, offset: 36336},
																	exprs: []interface{}{
																		&zeroOrOneExpr{
																			pos: position{line: 911, col: 20, offset: 36336},
																			expr: &choiceExpr{
																				pos: position{line: 1300, col: 15, offset: 50339},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1300, col: 15, offset: 50339},
																						val:        "http://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 1300, col: 27, offset: 50351},
																						val:        "https://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 1300, col: 40, offset: 50364},
																						val:        "ftp://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 1300, col: 51, offset: 50375},
																						val:        "irc://",
																						ignoreCase: false,
																					},
																					&litMatcher{
																						pos:        position{line: 1300, col: 62, offset: 50386},
																						val:        "mailto:",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 1282, col: 8, offset: 49956},
																			run: (*parser).callonTitleElement750,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1282, col: 8, offset: 49956},
																				expr: &choiceExpr{
																					pos: position{line: 1282, col: 9, offset: 49957},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonTitleElement753,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1282, col: 21, offset: 49969},
																							run: (*parser).callonTitleElement756,
																							expr: &seqExpr{
																								pos: position{line: 1282, col: 22, offset: 49970},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1282, col: 22, offset: 49970},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1282, col: 31, offset: 49979},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonTitleElement765,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1282, col: 35, offset: 49983},
																										expr: &litMatcher{
																											pos:        position{line: 1282, col: 36, offset: 49984},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1282, col: 40, offset: 49988},
																										expr: &litMatcher{
																											pos:        position{line: 1282, col: 41, offset: 49989},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1282, col: 46, offset: 49994,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&labeledExpr{
															pos:   position{line: 907, col: 47, offset: 36189},
															label: "inlineAttributes",
															expr: &choiceExpr{
																pos: position{line: 915, col: 19, offset: 36406},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 915, col: 19, offset: 36406},
																		run: (*parser).callonTitleElement774,
																		expr: &seqExpr{
																			pos: position{line: 915, col: 19, offset: 36406},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 915, col: 19, offset: 36406},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 915, col: 23, offset: 36410},
																					label: "text",
																					expr: &actionExpr{
																						pos: position{line: 921, col: 22, offset: 36700},
																						run: (*parser).callonTitleElement778,
																						expr: &zeroOrMoreExpr{
																							pos: position{line: 921, col: 22, offset: 36700},
																							expr: &choiceExpr{
																								pos: position{line: 921, col: 23, offset: 36701},
																								alternatives: []interface{}{
																									&actionExpr{
																										pos: position{line: 1264, col: 14, offset: 49515},
																										run: (*parser).callonTitleElement781,
																										expr: &oneOrMoreExpr{
																											pos: position{line: 1264, col: 14, offset: 49515},
																											expr: &charClassMatcher{
																												pos:        position{line: 1264, col: 14, offset: 49515},
																												val:        "[a-zA-Z0-9]",
																												ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																									&actionExpr{
																										pos: position{line: 1278, col: 11, offset: 49909},
																										run: (*parser).callonTitleElement784,
																										expr: &oneOrMoreExpr{
																											pos: position{line: 1278, col: 11, offset: 49909},
																											expr: &choiceExpr{
																												pos: position{line: 1306, col: 7, offset: 50454},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1306, col: 7, offset: 50454},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 1306, col: 13, offset: 50460},
																														run: (*parser).callonTitleElement788,
																														expr: &litMatcher{
																															pos:        position{line: 1306, col: 13, offset: 50460},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																									},
																									&actionExpr{
																										pos: position{line: 921, col: 44, offset: 36722},
																										run: (*parser).callonTitleElement790,
																										expr: &seqExpr{
																											pos: position{line: 921, col: 45, offset: 36723},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 921, col: 45, offset: 36723},
																													expr: &litMatcher{
																														pos:        position{line: 921, col: 46, offset: 36724},
																														val:        "=",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 921, col: 50, offset: 36728},
																													expr: &litMatcher{
																														pos:        position{line: 921, col: 51, offset: 36729},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 921, col: 55, offset: 36733},
																													expr: &litMatcher{
																														pos:        position{line: 921, col: 56, offset: 36734},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 921, col: 61, offset: 36739,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&zeroOrOneExpr{
																					pos: position{line: 915, col: 48, offset: 36435},
																					expr: &litMatcher{
																						pos:        position{line: 915, col: 48, offset: 36435},
																						val:        ",",
																						ignoreCase: false,
																					},
																				},
																				&zeroOrMoreExpr{
																					pos: position{line: 915, col: 53, offset: 36440},
																					expr: &choiceExpr{
																						pos: position{line: 1306, col: 7, offset: 50454},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1306, col: 7, offset: 50454},
																								val:        " ",
																								ignoreCase: false,
																							},
																							&actionExpr{
																								pos: position{line: 1306, col: 13, offset: 50460},
																								run: (*parser).callonTitleElement804,
																								expr: &litMatcher{
																									pos:        position{line: 1306, col: 13, offset: 50460},
																									val:        "\t",
																									ignoreCase: false,
																								},
																							},
																						},
																					},
																				},
																				&labeledExpr{
																					pos:   position{line: 915, col: 57, offset: 36444},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 915, col: 68, offset: 36455},
																						expr: &choiceExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 225, col: 21, offset: 7971},
																									run: (*parser).callonTitleElement809,
																									expr: &seqExpr{
																										pos: position{line: 225, col: 21, offset: 7971},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 225, col: 21, offset: 7971},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													run: (*parser).callonTitleElement812,
																													expr: &seqExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																expr: &actionExpr{
																																	pos: position{line: 259, col: 14, offset: 9116},
																																	run: (*parser).callonTitleElement815,
																																	expr: &litMatcher{
																																		pos:        position{line: 259, col: 14, offset: 9116},
																																		val:        "quote",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 231, col: 28, offset: 8242},
																																expr: &actionExpr{
																																	pos: position{line: 282, col: 14, offset: 9780},
																																	run: (*parser).callonTitleElement818,
																																	expr: &litMatcher{
																																		pos:        position{line: 282, col: 14, offset: 9780},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 231, col: 39, offset: 8253},
																																expr: &actionExpr{
																																	pos: position{line: 1229, col: 16, offset: 48642},
																																	run: (*parser).callonTitleElement821,
																																	expr: &litMatcher{
																																		pos:        position{line: 1229, col: 16, offset: 48642},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 231, col: 52, offset: 8266},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 231, col: 56, offset: 8270},
																																	expr: &choiceExpr{
																																		pos: position{line: 231, col: 57, offset: 8271},
																																		alternatives: []interface{}{
																																			&actionExpr{
																																				pos: position{line: 1264, col: 14, offset: 49515},
																																				run: (*parser).callonTitleElement826,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1264, col: 14, offset: 49515},
																																					expr: &charClassMatcher{
																																						pos:        position{line: 1264, col: 14, offset: 49515},
																																						val:        "[a-zA-Z0-9]",
																																						ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																						ignoreCase: false,
																																						inverted:   false,
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 1278, col: 11, offset: 49909},
																																				run: (*parser).callonTitleElement829,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1278, col: 11, offset: 49909},
																																					expr: &choiceExpr{
																																						pos: position{line: 1306, col: 7, offset: 50454},
																																						alternatives: []interface{}{
																																							&litMatcher{
																																								pos:        position{line: 1306, col: 7, offset: 50454},
																																								val:        " ",
																																								ignoreCase: false,
																																							},
																																							&actionExpr{
																																								pos: position{line: 1306, col: 13, offset: 50460},
																																								run: (*parser).callonTitleElement833,
																																								expr: &litMatcher{
																																									pos:        position{line: 1306, col: 13, offset: 50460},
																																									val:        "\t",
																																									ignoreCase: false,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 231, col: 78, offset: 8292},
																																				run: (*parser).callonTitleElement835,
																																				expr: &seqExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 80, offset: 8294},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 231, col: 84, offset: 8298},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 85, offset: 8299},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 231, col: 89, offset: 8303},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 90, offset: 8304},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 231, col: 95, offset: 8309,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 225, col: 40, offset: 7990},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 225, col: 44, offset: 7994},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 237, col: 19, offset: 8403},
																													run: (*parser).callonTitleElement846,
																													expr: &labeledExpr{
																														pos:   position{line: 237, col: 19, offset: 8403},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 237, col: 25, offset: 8409},
																															expr: &choiceExpr{
																																pos: position{line: 237, col: 26, offset: 8410},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		run: (*parser).callonTitleElement850,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1264, col: 14, offset: 49515},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1264, col: 14, offset: 49515},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		run: (*parser).callonTitleElement853,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1278, col: 11, offset: 49909},
																																			expr: &choiceExpr{
																																				pos: position{line: 1306, col: 7, offset: 50454},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1306, col: 7, offset: 50454},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1306, col: 13, offset: 50460},
																																						run: (*parser).callonTitleElement857,
																																						expr: &litMatcher{
																																							pos:        position{line: 1306, col: 13, offset: 50460},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 237, col: 47, offset: 8431},
																																		run: (*parser).callonTitleElement859,
																																		expr: &seqExpr{
																																			pos: position{line: 237, col: 48, offset: 8432},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 237, col: 48, offset: 8432},
																																					expr: &litMatcher{
																																						pos:        position{line: 237, col: 49, offset: 8433},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 237, col: 53, offset: 8437},
																																					expr: &litMatcher{
																																						pos:        position{line: 237, col: 54, offset: 8438},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 237, col: 58, offset: 8442},
																																					expr: &litMatcher{
																																						pos:        position{line: 237, col: 59, offset: 8443},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 237, col: 64, offset: 8448,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 225, col: 67, offset: 8017},
																												expr: &litMatcher{
																													pos:        position{line: 225, col: 67, offset: 8017},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 225, col: 72, offset: 8022},
																												expr: &choiceExpr{
																													pos: position{line: 1306, col: 7, offset: 50454},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1306, col: 7, offset: 50454},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1306, col: 13, offset: 50460},
																															run: (*parser).callonTitleElement873,
																															expr: &litMatcher{
																																pos:        position{line: 1306, col: 13, offset: 50460},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 227, col: 5, offset: 8106},
																									run: (*parser).callonTitleElement875,
																									expr: &seqExpr{
																										pos: position{line: 227, col: 5, offset: 8106},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 227, col: 5, offset: 8106},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													run: (*parser).callonTitleElement878,
																													expr: &seqExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																expr: &actionExpr{
																																	pos: position{line: 259, col: 14, offset: 9116},
																																	run: (*parser).callonTitleElement881,
																																	expr: &litMatcher{
																																		pos:        position{line: 259, col: 14, offset: 9116},
																																		val:        "quote",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 231, col: 28, offset: 8242},
																																expr: &actionExpr{
																																	pos: position{line: 282, col: 14, offset: 9780},
																																	run: (*parser).callonTitleElement884,
																																	expr: &litMatcher{
																																		pos:        position{line: 282, col: 14, offset: 9780},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 231, col: 39, offset: 8253},
																																expr: &actionExpr{
																																	pos: position{line: 1229, col: 16, offset: 48642},
																																	run: (*parser).callonTitleElement887,
																																	expr: &litMatcher{
																																		pos:        position{line: 1229, col: 16, offset: 48642},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 231, col: 52, offset: 8266},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 231, col: 56, offset: 8270},
																																	expr: &choiceExpr{
																																		pos: position{line: 231, col: 57, offset: 8271},
																																		alternatives: []interface{}{
																																			&actionExpr{
																																				pos: position{line: 1264, col: 14, offset: 49515},
																																				run: (*parser).callonTitleElement892,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1264, col: 14, offset: 49515},
																																					expr: &charClassMatcher{
																																						pos:        position{line: 1264, col: 14, offset: 49515},
																																						val:        "[a-zA-Z0-9]",
																																						ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																						ignoreCase: false,
																																						inverted:   false,
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 1278, col: 11, offset: 49909},
																																				run: (*parser).callonTitleElement895,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1278, col: 11, offset: 49909},
																																					expr: &choiceExpr{
																																						pos: position{line: 1306, col: 7, offset: 50454},
																																						alternatives: []interface{}{
																																							&litMatcher{
																																								pos:        position{line: 1306, col: 7, offset: 50454},
																																								val:        " ",
																																								ignoreCase: false,
																																							},
																																							&actionExpr{
																																								pos: position{line: 1306, col: 13, offset: 50460},
																																								run: (*parser).callonTitleElement899,
																																								expr: &litMatcher{
																																									pos:        position{line: 1306, col: 13, offset: 50460},
																																									val:        "\t",
																																									ignoreCase: false,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 231, col: 78, offset: 8292},
																																				run: (*parser).callonTitleElement901,
																																				expr: &seqExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 80, offset: 8294},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 231, col: 84, offset: 8298},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 85, offset: 8299},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 231, col: 89, offset: 8303},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 90, offset: 8304},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 231, col: 95, offset: 8309,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 227, col: 24, offset: 8125},
																												expr: &litMatcher{
																													pos:        position{line: 227, col: 24, offset: 8125},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 227, col: 29, offset: 8130},
																												expr: &choiceExpr{
																													pos: position{line: 1306, col: 7, offset: 50454},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1306, col: 7, offset: 50454},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1306, col: 13, offset: 50460},
																															run: (*parser).callonTitleElement915,
																															expr: &litMatcher{
																																pos:        position{line: 1306, col: 13, offset: 50460},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 915, col: 88, offset: 36475},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 917, col: 5, offset: 36560},
																		run: (*parser).callonTitleElement918,
																		expr: &seqExpr{
																			pos: position{line: 917, col: 5, offset: 36560},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 917, col: 5, offset: 36560},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 917, col: 9, offset: 36564},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 917, col: 20, offset: 36575},
																						expr: &choiceExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 225, col: 21, offset: 7971},
																									run: (*parser).callonTitleElement924,
																									expr: &seqExpr{
																										pos: position{line: 225, col: 21, offset: 7971},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 225, col: 21, offset: 7971},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													run: (*parser).callonTitleElement927,
																													expr: &seqExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																expr: &actionExpr{
																																	pos: position{line: 259, col: 14, offset: 9116},
																																	run: (*parser).callonTitleElement930,
																																	expr: &litMatcher{
																																		pos:        position{line: 259, col: 14, offset: 9116},
																																		val:        "quote",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 231, col: 28, offset: 8242},
																																expr: &actionExpr{
																																	pos: position{line: 282, col: 14, offset: 9780},
																																	run: (*parser).callonTitleElement933,
																																	expr: &litMatcher{
																																		pos:        position{line: 282, col: 14, offset: 9780},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 231, col: 39, offset: 8253},
																																expr: &actionExpr{
																																	pos: position{line: 1229, col: 16, offset: 48642},
																																	run: (*parser).callonTitleElement936,
																																	expr: &litMatcher{
																																		pos:        position{line: 1229, col: 16, offset: 48642},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 231, col: 52, offset: 8266},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 231, col: 56, offset: 8270},
																																	expr: &choiceExpr{
																																		pos: position{line: 231, col: 57, offset: 8271},
																																		alternatives: []interface{}{
																																			&actionExpr{
																																				pos: position{line: 1264, col: 14, offset: 49515},
																																				run: (*parser).callonTitleElement941,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1264, col: 14, offset: 49515},
																																					expr: &charClassMatcher{
																																						pos:        position{line: 1264, col: 14, offset: 49515},
																																						val:        "[a-zA-Z0-9]",
																																						ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																						ignoreCase: false,
																																						inverted:   false,
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 1278, col: 11, offset: 49909},
																																				run: (*parser).callonTitleElement944,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1278, col: 11, offset: 49909},
																																					expr: &choiceExpr{
																																						pos: position{line: 1306, col: 7, offset: 50454},
																																						alternatives: []interface{}{
																																							&litMatcher{
																																								pos:        position{line: 1306, col: 7, offset: 50454},
																																								val:        " ",
																																								ignoreCase: false,
																																							},
																																							&actionExpr{
																																								pos: position{line: 1306, col: 13, offset: 50460},
																																								run: (*parser).callonTitleElement948,
																																								expr: &litMatcher{
																																									pos:        position{line: 1306, col: 13, offset: 50460},
																																									val:        "\t",
																																									ignoreCase: false,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 231, col: 78, offset: 8292},
																																				run: (*parser).callonTitleElement950,
																																				expr: &seqExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 80, offset: 8294},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 231, col: 84, offset: 8298},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 85, offset: 8299},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 231, col: 89, offset: 8303},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 90, offset: 8304},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 231, col: 95, offset: 8309,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 225, col: 40, offset: 7990},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 225, col: 44, offset: 7994},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 237, col: 19, offset: 8403},
																													run: (*parser).callonTitleElement961,
																													expr: &labeledExpr{
																														pos:   position{line: 237, col: 19, offset: 8403},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 237, col: 25, offset: 8409},
																															expr: &choiceExpr{
																																pos: position{line: 237, col: 26, offset: 8410},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		run: (*parser).callonTitleElement965,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1264, col: 14, offset: 49515},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1264, col: 14, offset: 49515},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		run: (*parser).callonTitleElement968,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1278, col: 11, offset: 49909},
																																			expr: &choiceExpr{
																																				pos: position{line: 1306, col: 7, offset: 50454},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1306, col: 7, offset: 50454},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1306, col: 13, offset: 50460},
																																						run: (*parser).callonTitleElement972,
																																						expr: &litMatcher{
																																							pos:        position{line: 1306, col: 13, offset: 50460},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 237, col: 47, offset: 8431},
																																		run: (*parser).callonTitleElement974,
																																		expr: &seqExpr{
																																			pos: position{line: 237, col: 48, offset: 8432},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 237, col: 48, offset: 8432},
																																					expr: &litMatcher{
																																						pos:        position{line: 237, col: 49, offset: 8433},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 237, col: 53, offset: 8437},
																																					expr: &litMatcher{
																																						pos:        position{line: 237, col: 54, offset: 8438},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 237, col: 58, offset: 8442},
																																					expr: &litMatcher{
																																						pos:        position{line: 237, col: 59, offset: 8443},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 237, col: 64, offset: 8448,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 225, col: 67, offset: 8017},
																												expr: &litMatcher{
																													pos:        position{line: 225, col: 67, offset: 8017},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 225, col: 72, offset: 8022},
																												expr: &choiceExpr{
																													pos: position{line: 1306, col: 7, offset: 50454},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1306, col: 7, offset: 50454},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1306, col: 13, offset: 50460},
																															run: (*parser).callonTitleElement988,
																															expr: &litMatcher{
																																pos:        position{line: 1306, col: 13, offset: 50460},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 227, col: 5, offset: 8106},
																									run: (*parser).callonTitleElement990,
																									expr: &seqExpr{
																										pos: position{line: 227, col: 5, offset: 8106},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 227, col: 5, offset: 8106},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													run: (*parser).callonTitleElement993,
																													expr: &seqExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																expr: &actionExpr{
																																	pos: position{line: 259, col: 14, offset: 9116},
																																	run: (*parser).callonTitleElement996,
																																	expr: &litMatcher{
																																		pos:        position{line: 259, col: 14, offset: 9116},
																																		val:        "quote",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 231, col: 28, offset: 8242},
																																expr: &actionExpr{
																																	pos: position{line: 282, col: 14, offset: 9780},
																																	run: (*parser).callonTitleElement999,
																																	expr: &litMatcher{
																																		pos:        position{line: 282, col: 14, offset: 9780},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 231, col: 39, offset: 8253},
																																expr: &actionExpr{
																																	pos: position{line: 1229, col: 16, offset: 48642},
																																	run: (*parser).callonTitleElement1002,
																																	expr: &litMatcher{
																																		pos:        position{line: 1229, col: 16, offset: 48642},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 231, col: 52, offset: 8266},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 231, col: 56, offset: 8270},
																																	expr: &choiceExpr{
																																		pos: position{line: 231, col: 57, offset: 8271},
																																		alternatives: []interface{}{
																																			&actionExpr{
																																				pos: position{line: 1264, col: 14, offset: 49515},
																																				run: (*parser).callonTitleElement1007,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1264, col: 14, offset: 49515},
																																					expr: &charClassMatcher{
																																						pos:        position{line: 1264, col: 14, offset: 49515},
																																						val:        "[a-zA-Z0-9]",
																																						ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																						ignoreCase: false,
																																						inverted:   false,
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 1278, col: 11, offset: 49909},
																																				run: (*parser).callonTitleElement1010,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1278, col: 11, offset: 49909},
																																					expr: &choiceExpr{
																																						pos: position{line: 1306, col: 7, offset: 50454},
																																						alternatives: []interface{}{
																																							&litMatcher{
																																								pos:        position{line: 1306, col: 7, offset: 50454},
																																								val:        " ",
																																								ignoreCase: false,
																																							},
																																							&actionExpr{
																																								pos: position{line: 1306, col: 13, offset: 50460},
																																								run: (*parser).callonTitleElement1014,
																																								expr: &litMatcher{
																																									pos:        position{line: 1306, col: 13, offset: 50460},
																																									val:        "\t",
																																									ignoreCase: false,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 231, col: 78, offset: 8292},
																																				run: (*parser).callonTitleElement1016,
																																				expr: &seqExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 80, offset: 8294},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 231, col: 84, offset: 8298},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 85, offset: 8299},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 231, col: 89, offset: 8303},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 90, offset: 8304},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 231, col: 95, offset: 8309,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 227, col: 24, offset: 8125},
																												expr: &litMatcher{
																													pos:        position{line: 227, col: 24, offset: 8125},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 227, col: 29, offset: 8130},
																												expr: &choiceExpr{
																													pos: position{line: 1306, col: 7, offset: 50454},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1306, col: 7, offset: 50454},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1306, col: 13, offset: 50460},
																															run: (*parser).callonTitleElement1030,
																															expr: &litMatcher{
																																pos:        position{line: 1306, col: 13, offset: 50460},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 917, col: 40, offset: 36595},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&actionExpr{
												pos: position{line: 896, col: 17, offset: 35778},
												run: (*parser).callonTitleElement1033,
												expr: &seqExpr{
													pos: position{line: 896, col: 17, offset: 35778},
													exprs: []interface{}{
														&labeledExpr{
															pos:   position{line: 896, col: 17, offset: 35778},
															label: "url",
															expr: &actionExpr{
																pos: position{line: 902, col: 20, offset: 36025},
																run: (*parser).callonTitleElement1036,
																expr: &seqExpr{
																	pos: position{line: 902, col: 20, offset: 36025},
																	exprs: []interface{}{
																		&choiceExpr{
																			pos: position{line: 1300, col: 15, offset: 50339},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1300, col: 15, offset: 50339},
																					val:        "http://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1300, col: 27, offset: 50351},
																					val:        "https://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1300, col: 40, offset: 50364},
																					val:        "ftp://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1300, col: 51, offset: 50375},
																					val:        "irc://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1300, col: 62, offset: 50386},
																					val:        "mailto:",
																					ignoreCase: false,
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 1282, col: 8, offset: 49956},
																			run: (*parser).callonTitleElement1044,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1282, col: 8, offset: 49956},
																				expr: &choiceExpr{
																					pos: position{line: 1282, col: 9, offset: 49957},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonTitleElement1047,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1282, col: 21, offset: 49969},
																							run: (*parser).callonTitleElement1050,
																							expr: &seqExpr{
																								pos: position{line: 1282, col: 22, offset: 49970},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1282, col: 22, offset: 49970},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1282, col: 31, offset: 49979},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonTitleElement1059,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1282, col: 35, offset: 49983},
																										expr: &litMatcher{
																											pos:        position{line: 1282, col: 36, offset: 49984},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1282, col: 40, offset: 49988},
																										expr: &litMatcher{
																											pos:        position{line: 1282, col: 41, offset: 49989},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1282, col: 46, offset: 49994,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&labeledExpr{
															pos:   position{line: 896, col: 39, offset: 35800},
															label: "inlineAttributes",
															expr: &choiceExpr{
																pos: position{line: 915, col: 19, offset: 36406},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 915, col: 19, offset: 36406},
																		run: (*parser).callonTitleElement1068,
																		expr: &seqExpr{
																			pos: position{line: 915, col: 19, offset: 36406},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 915, col: 19, offset: 36406},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 915, col: 23, offset: 36410},
																					label: "text",
																					expr: &actionExpr{
																						pos: position{line: 921, col: 22, offset: 36700},
																						run: (*parser).callonTitleElement1072,
																						expr: &zeroOrMoreExpr{
																							pos: position{line: 921, col: 22, offset: 36700},
																							expr: &choiceExpr{
																								pos: position{line: 921, col: 23, offset: 36701},
																								alternatives: []interface{}{
																									&actionExpr{
																										pos: position{line: 1264, col: 14, offset: 49515},
																										run: (*parser).callonTitleElement1075,
																										expr: &oneOrMoreExpr{
																											pos: position{line: 1264, col: 14, offset: 49515},
																											expr: &charClassMatcher{
																												pos:        position{line: 1264, col: 14, offset: 49515},
																												val:        "[a-zA-Z0-9]",
																												ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																									&actionExpr{
																										pos: position{line: 1278, col: 11, offset: 49909},
																										run: (*parser).callonTitleElement1078,
																										expr: &oneOrMoreExpr{
																											pos: position{line: 1278, col: 11, offset: 49909},
																											expr: &choiceExpr{
																												pos: position{line: 1306, col: 7, offset: 50454},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1306, col: 7, offset: 50454},
																														val:        " ",
																														ignoreCase: false,
																													},
																													&actionExpr{
																														pos: position{line: 1306, col: 13, offset: 50460},
																														run: (*parser).callonTitleElement1082,
																														expr: &litMatcher{
																															pos:        position{line: 1306, col: 13, offset: 50460},
																															val:        "\t",
																															ignoreCase: false,
																														},
																													},
																												},
																											},
																										},
																									},
																									&actionExpr{
																										pos: position{line: 921, col: 44, offset: 36722},
																										run: (*parser).callonTitleElement1084,
																										expr: &seqExpr{
																											pos: position{line: 921, col: 45, offset: 36723},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 921, col: 45, offset: 36723},
																													expr: &litMatcher{
																														pos:        position{line: 921, col: 46, offset: 36724},
																														val:        "=",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 921, col: 50, offset: 36728},
																													expr: &litMatcher{
																														pos:        position{line: 921, col: 51, offset: 36729},
																														val:        ",",
																														ignoreCase: false,
																													},
																												},
																												&notExpr{
																													pos: position{line: 921, col: 55, offset: 36733},
																													expr: &litMatcher{
																														pos:        position{line: 921, col: 56, offset: 36734},
																														val:        "]",
																														ignoreCase: false,
																													},
																												},
																												&anyMatcher{
																													line: 921, col: 61, offset: 36739,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&zeroOrOneExpr{
																					pos: position{line: 915, col: 48, offset: 36435},
																					expr: &litMatcher{
																						pos:        position{line: 915, col: 48, offset: 36435},
																						val:        ",",
																						ignoreCase: false,
																					},
																				},
																				&zeroOrMoreExpr{
																					pos: position{line: 915, col: 53, offset: 36440},
																					expr: &choiceExpr{
																						pos: position{line: 1306, col: 7, offset: 50454},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1306, col: 7, offset: 50454},
																								val:        " ",
																								ignoreCase: false,
																							},
																							&actionExpr{
																								pos: position{line: 1306, col: 13, offset: 50460},
																								run: (*parser).callonTitleElement1098,
																								expr: &litMatcher{
																									pos:        position{line: 1306, col: 13, offset: 50460},
																									val:        "\t",
																									ignoreCase: false,
																								},
																							},
																						},
																					},
																				},
																				&labeledExpr{
																					pos:   position{line: 915, col: 57, offset: 36444},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 915, col: 68, offset: 36455},
																						expr: &choiceExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 225, col: 21, offset: 7971},
																									run: (*parser).callonTitleElement1103,
																									expr: &seqExpr{
																										pos: position{line: 225, col: 21, offset: 7971},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 225, col: 21, offset: 7971},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													run: (*parser).callonTitleElement1106,
																													expr: &seqExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																expr: &actionExpr{
																																	pos: position{line: 259, col: 14, offset: 9116},
																																	run: (*parser).callonTitleElement1109,
																																	expr: &litMatcher{
																																		pos:        position{line: 259, col: 14, offset: 9116},
																																		val:        "quote",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 231, col: 28, offset: 8242},
																																expr: &actionExpr{
																																	pos: position{line: 282, col: 14, offset: 9780},
																																	run: (*parser).callonTitleElement1112,
																																	expr: &litMatcher{
																																		pos:        position{line: 282, col: 14, offset: 9780},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 231, col: 39, offset: 8253},
																																expr: &actionExpr{
																																	pos: position{line: 1229, col: 16, offset: 48642},
																																	run: (*parser).callonTitleElement1115,
																																	expr: &litMatcher{
																																		pos:        position{line: 1229, col: 16, offset: 48642},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 231, col: 52, offset: 8266},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 231, col: 56, offset: 8270},
																																	expr: &choiceExpr{
																																		pos: position{line: 231, col: 57, offset: 8271},
																																		alternatives: []interface{}{
																																			&actionExpr{
																																				pos: position{line: 1264, col: 14, offset: 49515},
																																				run: (*parser).callonTitleElement1120,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1264, col: 14, offset: 49515},
																																					expr: &charClassMatcher{
																																						pos:        position{line: 1264, col: 14, offset: 49515},
																																						val:        "[a-zA-Z0-9]",
																																						ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																						ignoreCase: false,
																																						inverted:   false,
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 1278, col: 11, offset: 49909},
																																				run: (*parser).callonTitleElement1123,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1278, col: 11, offset: 49909},
																																					expr: &choiceExpr{
																																						pos: position{line: 1306, col: 7, offset: 50454},
																																						alternatives: []interface{}{
																																							&litMatcher{
																																								pos:        position{line: 1306, col: 7, offset: 50454},
																																								val:        " ",
																																								ignoreCase: false,
																																							},
																																							&actionExpr{
																																								pos: position{line: 1306, col: 13, offset: 50460},
																																								run: (*parser).callonTitleElement1127,
																																								expr: &litMatcher{
																																									pos:        position{line: 1306, col: 13, offset: 50460},
																																									val:        "\t",
																																									ignoreCase: false,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 231, col: 78, offset: 8292},
																																				run: (*parser).callonTitleElement1129,
																																				expr: &seqExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 80, offset: 8294},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 231, col: 84, offset: 8298},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 85, offset: 8299},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 231, col: 89, offset: 8303},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 90, offset: 8304},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 231, col: 95, offset: 8309,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 225, col: 40, offset: 7990},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 225, col: 44, offset: 7994},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 237, col: 19, offset: 8403},
																													run: (*parser).callonTitleElement1140,
																													expr: &labeledExpr{
																														pos:   position{line: 237, col: 19, offset: 8403},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 237, col: 25, offset: 8409},
																															expr: &choiceExpr{
																																pos: position{line: 237, col: 26, offset: 8410},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		run: (*parser).callonTitleElement1144,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1264, col: 14, offset: 49515},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1264, col: 14, offset: 49515},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		run: (*parser).callonTitleElement1147,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1278, col: 11, offset: 49909},
																																			expr: &choiceExpr{
																																				pos: position{line: 1306, col: 7, offset: 50454},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1306, col: 7, offset: 50454},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1306, col: 13, offset: 50460},
																																						run: (*parser).callonTitleElement1151,
																																						expr: &litMatcher{
																																							pos:        position{line: 1306, col: 13, offset: 50460},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 237, col: 47, offset: 8431},
																																		run: (*parser).callonTitleElement1153,
																																		expr: &seqExpr{
																																			pos: position{line: 237, col: 48, offset: 8432},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 237, col: 48, offset: 8432},
																																					expr: &litMatcher{
																																						pos:        position{line: 237, col: 49, offset: 8433},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 237, col: 53, offset: 8437},
																																					expr: &litMatcher{
																																						pos:        position{line: 237, col: 54, offset: 8438},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 237, col: 58, offset: 8442},
																																					expr: &litMatcher{
																																						pos:        position{line: 237, col: 59, offset: 8443},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 237, col: 64, offset: 8448,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 225, col: 67, offset: 8017},
																												expr: &litMatcher{
																													pos:        position{line: 225, col: 67, offset: 8017},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 225, col: 72, offset: 8022},
																												expr: &choiceExpr{
																													pos: position{line: 1306, col: 7, offset: 50454},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1306, col: 7, offset: 50454},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1306, col: 13, offset: 50460},
																															run: (*parser).callonTitleElement1167,
																															expr: &litMatcher{
																																pos:        position{line: 1306, col: 13, offset: 50460},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 227, col: 5, offset: 8106},
																									run: (*parser).callonTitleElement1169,
																									expr: &seqExpr{
																										pos: position{line: 227, col: 5, offset: 8106},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 227, col: 5, offset: 8106},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													run: (*parser).callonTitleElement1172,
																													expr: &seqExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																expr: &actionExpr{
																																	pos: position{line: 259, col: 14, offset: 9116},
																																	run: (*parser).callonTitleElement1175,
																																	expr: &litMatcher{
																																		pos:        position{line: 259, col: 14, offset: 9116},
																																		val:        "quote",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 231, col: 28, offset: 8242},
																																expr: &actionExpr{
																																	pos: position{line: 282, col: 14, offset: 9780},
																																	run: (*parser).callonTitleElement1178,
																																	expr: &litMatcher{
																																		pos:        position{line: 282, col: 14, offset: 9780},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 231, col: 39, offset: 8253},
																																expr: &actionExpr{
																																	pos: position{line: 1229, col: 16, offset: 48642},
																																	run: (*parser).callonTitleElement1181,
																																	expr: &litMatcher{
																																		pos:        position{line: 1229, col: 16, offset: 48642},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 231, col: 52, offset: 8266},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 231, col: 56, offset: 8270},
																																	expr: &choiceExpr{
																																		pos: position{line: 231, col: 57, offset: 8271},
																																		alternatives: []interface{}{
																																			&actionExpr{
																																				pos: position{line: 1264, col: 14, offset: 49515},
																																				run: (*parser).callonTitleElement1186,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1264, col: 14, offset: 49515},
																																					expr: &charClassMatcher{
																																						pos:        position{line: 1264, col: 14, offset: 49515},
																																						val:        "[a-zA-Z0-9]",
																																						ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																						ignoreCase: false,
																																						inverted:   false,
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 1278, col: 11, offset: 49909},
																																				run: (*parser).callonTitleElement1189,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1278, col: 11, offset: 49909},
																																					expr: &choiceExpr{
																																						pos: position{line: 1306, col: 7, offset: 50454},
																																						alternatives: []interface{}{
																																							&litMatcher{
																																								pos:        position{line: 1306, col: 7, offset: 50454},
																																								val:        " ",
																																								ignoreCase: false,
																																							},
																																							&actionExpr{
																																								pos: position{line: 1306, col: 13, offset: 50460},
																																								run: (*parser).callonTitleElement1193,
																																								expr: &litMatcher{
																																									pos:        position{line: 1306, col: 13, offset: 50460},
																																									val:        "\t",
																																									ignoreCase: false,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 231, col: 78, offset: 8292},
																																				run: (*parser).callonTitleElement1195,
																																				expr: &seqExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 80, offset: 8294},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 231, col: 84, offset: 8298},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 85, offset: 8299},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 231, col: 89, offset: 8303},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 90, offset: 8304},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 231, col: 95, offset: 8309,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 227, col: 24, offset: 8125},
																												expr: &litMatcher{
																													pos:        position{line: 227, col: 24, offset: 8125},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 227, col: 29, offset: 8130},
																												expr: &choiceExpr{
																													pos: position{line: 1306, col: 7, offset: 50454},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1306, col: 7, offset: 50454},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1306, col: 13, offset: 50460},
																															run: (*parser).callonTitleElement1209,
																															expr: &litMatcher{
																																pos:        position{line: 1306, col: 13, offset: 50460},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 915, col: 88, offset: 36475},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 917, col: 5, offset: 36560},
																		run: (*parser).callonTitleElement1212,
																		expr: &seqExpr{
																			pos: position{line: 917, col: 5, offset: 36560},
																			exprs: []interface{}{
																				&litMatcher{
																					pos:        position{line: 917, col: 5, offset: 36560},
																					val:        "[",
																					ignoreCase: false,
																				},
																				&labeledExpr{
																					pos:   position{line: 917, col: 9, offset: 36564},
																					label: "otherAttrs",
																					expr: &zeroOrMoreExpr{
																						pos: position{line: 917, col: 20, offset: 36575},
																						expr: &choiceExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 225, col: 21, offset: 7971},
																									run: (*parser).callonTitleElement1218,
																									expr: &seqExpr{
																										pos: position{line: 225, col: 21, offset: 7971},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 225, col: 21, offset: 7971},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													run: (*parser).callonTitleElement1221,
																													expr: &seqExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																expr: &actionExpr{
																																	pos: position{line: 259, col: 14, offset: 9116},
																																	run: (*parser).callonTitleElement1224,
																																	expr: &litMatcher{
																																		pos:        position{line: 259, col: 14, offset: 9116},
																																		val:        "quote",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 231, col: 28, offset: 8242},
																																expr: &actionExpr{
																																	pos: position{line: 282, col: 14, offset: 9780},
																																	run: (*parser).callonTitleElement1227,
																																	expr: &litMatcher{
																																		pos:        position{line: 282, col: 14, offset: 9780},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 231, col: 39, offset: 8253},
																																expr: &actionExpr{
																																	pos: position{line: 1229, col: 16, offset: 48642},
																																	run: (*parser).callonTitleElement1230,
																																	expr: &litMatcher{
																																		pos:        position{line: 1229, col: 16, offset: 48642},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 231, col: 52, offset: 8266},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 231, col: 56, offset: 8270},
																																	expr: &choiceExpr{
																																		pos: position{line: 231, col: 57, offset: 8271},
																																		alternatives: []interface{}{
																																			&actionExpr{
																																				pos: position{line: 1264, col: 14, offset: 49515},
																																				run: (*parser).callonTitleElement1235,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1264, col: 14, offset: 49515},
																																					expr: &charClassMatcher{
																																						pos:        position{line: 1264, col: 14, offset: 49515},
																																						val:        "[a-zA-Z0-9]",
																																						ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																						ignoreCase: false,
																																						inverted:   false,
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 1278, col: 11, offset: 49909},
																																				run: (*parser).callonTitleElement1238,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1278, col: 11, offset: 49909},
																																					expr: &choiceExpr{
																																						pos: position{line: 1306, col: 7, offset: 50454},
																																						alternatives: []interface{}{
																																							&litMatcher{
																																								pos:        position{line: 1306, col: 7, offset: 50454},
																																								val:        " ",
																																								ignoreCase: false,
																																							},
																																							&actionExpr{
																																								pos: position{line: 1306, col: 13, offset: 50460},
																																								run: (*parser).callonTitleElement1242,
																																								expr: &litMatcher{
																																									pos:        position{line: 1306, col: 13, offset: 50460},
																																									val:        "\t",
																																									ignoreCase: false,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 231, col: 78, offset: 8292},
																																				run: (*parser).callonTitleElement1244,
																																				expr: &seqExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 80, offset: 8294},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 231, col: 84, offset: 8298},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 85, offset: 8299},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 231, col: 89, offset: 8303},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 90, offset: 8304},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 231, col: 95, offset: 8309,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&litMatcher{
																												pos:        position{line: 225, col: 40, offset: 7990},
																												val:        "=",
																												ignoreCase: false,
																											},
																											&labeledExpr{
																												pos:   position{line: 225, col: 44, offset: 7994},
																												label: "value",
																												expr: &actionExpr{
																													pos: position{line: 237, col: 19, offset: 8403},
																													run: (*parser).callonTitleElement1255,
																													expr: &labeledExpr{
																														pos:   position{line: 237, col: 19, offset: 8403},
																														label: "value",
																														expr: &zeroOrMoreExpr{
																															pos: position{line: 237, col: 25, offset: 8409},
																															expr: &choiceExpr{
																																pos: position{line: 237, col: 26, offset: 8410},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		run: (*parser).callonTitleElement1259,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1264, col: 14, offset: 49515},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1264, col: 14, offset: 49515},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		run: (*parser).callonTitleElement1262,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1278, col: 11, offset: 49909},
																																			expr: &choiceExpr{
																																				pos: position{line: 1306, col: 7, offset: 50454},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1306, col: 7, offset: 50454},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1306, col: 13, offset: 50460},
																																						run: (*parser).callonTitleElement1266,
																																						expr: &litMatcher{
																																							pos:        position{line: 1306, col: 13, offset: 50460},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 237, col: 47, offset: 8431},
																																		run: (*parser).callonTitleElement1268,
																																		expr: &seqExpr{
																																			pos: position{line: 237, col: 48, offset: 8432},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 237, col: 48, offset: 8432},
																																					expr: &litMatcher{
																																						pos:        position{line: 237, col: 49, offset: 8433},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 237, col: 53, offset: 8437},
																																					expr: &litMatcher{
																																						pos:        position{line: 237, col: 54, offset: 8438},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 237, col: 58, offset: 8442},
																																					expr: &litMatcher{
																																						pos:        position{line: 237, col: 59, offset: 8443},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 237, col: 64, offset: 8448,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 225, col: 67, offset: 8017},
																												expr: &litMatcher{
																													pos:        position{line: 225, col: 67, offset: 8017},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 225, col: 72, offset: 8022},
																												expr: &choiceExpr{
																													pos: position{line: 1306, col: 7, offset: 50454},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1306, col: 7, offset: 50454},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1306, col: 13, offset: 50460},
																															run: (*parser).callonTitleElement1282,
																															expr: &litMatcher{
																																pos:        position{line: 1306, col: 13, offset: 50460},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 227, col: 5, offset: 8106},
																									run: (*parser).callonTitleElement1284,
																									expr: &seqExpr{
																										pos: position{line: 227, col: 5, offset: 8106},
																										exprs: []interface{}{
																											&labeledExpr{
																												pos:   position{line: 227, col: 5, offset: 8106},
																												label: "key",
																												expr: &actionExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													run: (*parser).callonTitleElement1287,
																													expr: &seqExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																expr: &actionExpr{
																																	pos: position{line: 259, col: 14, offset: 9116},
																																	run: (*parser).callonTitleElement1290,
																																	expr: &litMatcher{
																																		pos:        position{line: 259, col: 14, offset: 9116},
																																		val:        "quote",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 231, col: 28, offset: 8242},
																																expr: &actionExpr{
																																	pos: position{line: 282, col: 14, offset: 9780},
																																	run: (*parser).callonTitleElement1293,
																																	expr: &litMatcher{
																																		pos:        position{line: 282, col: 14, offset: 9780},
																																		val:        "verse",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 231, col: 39, offset: 8253},
																																expr: &actionExpr{
																																	pos: position{line: 1229, col: 16, offset: 48642},
																																	run: (*parser).callonTitleElement1296,
																																	expr: &litMatcher{
																																		pos:        position{line: 1229, col: 16, offset: 48642},
																																		val:        "literal",
																																		ignoreCase: false,
																																	},
																																},
																															},
																															&labeledExpr{
																																pos:   position{line: 231, col: 52, offset: 8266},
																																label: "key",
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 231, col: 56, offset: 8270},
																																	expr: &choiceExpr{
																																		pos: position{line: 231, col: 57, offset: 8271},
																																		alternatives: []interface{}{
																																			&actionExpr{
																																				pos: position{line: 1264, col: 14, offset: 49515},
																																				run: (*parser).callonTitleElement1301,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1264, col: 14, offset: 49515},
																																					expr: &charClassMatcher{
																																						pos:        position{line: 1264, col: 14, offset: 49515},
																																						val:        "[a-zA-Z0-9]",
																																						ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																						ignoreCase: false,
																																						inverted:   false,
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 1278, col: 11, offset: 49909},
																																				run: (*parser).callonTitleElement1304,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1278, col: 11, offset: 49909},
																																					expr: &choiceExpr{
																																						pos: position{line: 1306, col: 7, offset: 50454},
																																						alternatives: []interface{}{
																																							&litMatcher{
																																								pos:        position{line: 1306, col: 7, offset: 50454},
																																								val:        " ",
																																								ignoreCase: false,
																																							},
																																							&actionExpr{
																																								pos: position{line: 1306, col: 13, offset: 50460},
																																								run: (*parser).callonTitleElement1308,
																																								expr: &litMatcher{
																																									pos:        position{line: 1306, col: 13, offset: 50460},
																																									val:        "\t",
																																									ignoreCase: false,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 231, col: 78, offset: 8292},
																																				run: (*parser).callonTitleElement1310,
																																				expr: &seqExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 80, offset: 8294},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 231, col: 84, offset: 8298},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 85, offset: 8299},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 231, col: 89, offset: 8303},
																																							expr: &litMatcher{
																																								pos:        position{line: 231, col: 90, offset: 8304},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 231, col: 95, offset: 8309,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																											&zeroOrOneExpr{
																												pos: position{line: 227, col: 24, offset: 8125},
																												expr: &litMatcher{
																													pos:        position{line: 227, col: 24, offset: 8125},
																													val:        ",",
																													ignoreCase: false,
																												},
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 227, col: 29, offset: 8130},
																												expr: &choiceExpr{
																													pos: position{line: 1306, col: 7, offset: 50454},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1306, col: 7, offset: 50454},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1306, col: 13, offset: 50460},
																															run: (*parser).callonTitleElement1324,
																															expr: &litMatcher{
																																pos:        position{line: 1306, col: 13, offset: 50460},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&litMatcher{
																					pos:        position{line: 917, col: 40, offset: 36595},
																					val:        "]",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
											&actionExpr{
												pos: position{line: 898, col: 5, offset: 35929},
												run: (*parser).callonTitleElement1327,
												expr: &labeledExpr{
													pos:   position{line: 898, col: 5, offset: 35929},
													label: "url",
													expr: &actionExpr{
														pos: position{line: 902, col: 20, offset: 36025},
														run: (*parser).callonTitleElement1329,
														expr: &seqExpr{
															pos: position{line: 902, col: 20, offset: 36025},
															exprs: []interface{}{
																&choiceExpr{
																	pos: position{line: 1300, col: 15, offset: 50339},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1300, col: 15, offset: 50339},
																			val:        "http://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 1300, col: 27, offset: 50351},
																			val:        "https://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 1300, col: 40, offset: 50364},
																			val:        "ftp://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 1300, col: 51, offset: 50375},
																			val:        "irc://",
																			ignoreCase: false,
																		},
																		&litMatcher{
																			pos:        position{line: 1300, col: 62, offset: 50386},
																			val:        "mailto:",
																			ignoreCase: false,
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 1282, col: 8, offset: 49956},
																	run: (*parser).callonTitleElement1337,
																	expr: &oneOrMoreExpr{
																		pos: position{line: 1282, col: 8, offset: 49956},
																		expr: &choiceExpr{
																			pos: position{line: 1282, col: 9, offset: 49957},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 1264, col: 14, offset: 49515},
																					run: (*parser).callonTitleElement1340,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1264, col: 14, offset: 49515},
																						expr: &charClassMatcher{
																							pos:        position{line: 1264, col: 14, offset: 49515},
																							val:        "[a-zA-Z0-9]",
																							ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																							ignoreCase: false,
																							inverted:   false,
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 1282, col: 21, offset: 49969},
																					run: (*parser).callonTitleElement1343,
																					expr: &seqExpr{
																						pos: position{line: 1282, col: 22, offset: 49970},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 1282, col: 22, offset: 49970},
																								expr: &choiceExpr{
																									pos: position{line: 1310, col: 12, offset: 50512},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1310, col: 12, offset: 50512},
																											val:        "\r\n",
																											ignoreCase: false,
																										},
																										&charClassMatcher{
																											pos:        position{line: 1310, col: 21, offset: 50521},
																											val:        "[\\r\\n]",
																											chars:      []rune{'\r', '\n'},
																											ignoreCase: false,
																											inverted:   false,
																										},
																									},
																								},
																							},
																							&notExpr{
																								pos: position{line: 1282, col: 31, offset: 49979},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonTitleElement1352,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&notExpr{
																								pos: position{line: 1282, col: 35, offset: 49983},
																								expr: &litMatcher{
																									pos:        position{line: 1282, col: 36, offset: 49984},
																									val:        "[",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 1282, col: 40, offset: 49988},
																								expr: &litMatcher{
																									pos:        position{line: 1282, col: 41, offset: 49989},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 1282, col: 46, offset: 49994,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
							&ruleRefExpr{
								pos:  position{line: 441, col: 93, offset: 15766},
								name: "InlineFootnote",
							},
							&actionExpr{
								pos: position{line: 1264, col: 14, offset: 49515},
								run: (*parser).callonTitleElement1360,
								expr: &oneOrMoreExpr{
									pos: position{line: 1264, col: 14, offset: 49515},
									expr: &charClassMatcher{
										pos:        position{line: 1264, col: 14, offset: 49515},
										val:        "[a-zA-Z0-9]",
										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
										ignoreCase: false,
										inverted:   false,
									},
								},
							},
							&ruleRefExpr{
								pos:  position{line: 441, col: 122, offset: 15795},
								name: "QuotedText",
							},
							&actionExpr{
								pos: position{line: 120, col: 34, offset: 4391},
								run: (*parser).callonTitleElement1364,
								expr: &seqExpr{
									pos: position{line: 120, col: 34, offset: 4391},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 120, col: 34, offset: 4391},
											val:        "{",
											ignoreCase: false,
										},
										&labeledExpr{
											pos:   position{line: 120, col: 38, offset: 4395},
											label: "name",
											expr: &actionExpr{
												pos: position{line: 127, col: 26, offset: 4690},
												run: (*parser).callonTitleElement1368,
												expr: &seqExpr{
													pos: position{line: 127, col: 26, offset: 4690},
													exprs: []interface{}{
														&charClassMatcher{
															pos:        position{line: 127, col: 27, offset: 4691},
															val:        "[_A-Za-z0-9]",
															chars:      []rune{'_'},
															ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
															ignoreCase: false,
															inverted:   false,
														},
														&zeroOrMoreExpr{
															pos: position{line: 127, col: 56, offset: 4720},
															expr: &charClassMatcher{
																pos:        position{line: 127, col: 57, offset: 4721},
																val:        "[-A-Za-z0-9]",
																chars:      []rune{'-'},
																ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																ignoreCase: false,
																inverted:   false,
															},
														},
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 120, col: 67, offset: 4424},
											val:        "}",
											ignoreCase: false,
										},
									},
								},
							},
							&charClassMatcher{
								pos:        position{line: 1262, col: 16, offset: 49479},
								val:        "[()[]]",
								chars:      []rune{'(', ')', '[', ']'},
								ignoreCase: false,
								inverted:   false,
							},
							&actionExpr{
								pos: position{line: 697, col: 14, offset: 25447},
								run: (*parser).callonTitleElement1375,
								expr: &seqExpr{
									pos: position{line: 697, col: 14, offset: 25447},
									exprs: []interface{}{
										&choiceExpr{
											pos: position{line: 1306, col: 7, offset: 50454},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1306, col: 7, offset: 50454},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1306, col: 13, offset: 50460},
													run: (*parser).callonTitleElement1379,
													expr: &litMatcher{
														pos:        position{line: 1306, col: 13, offset: 50460},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 697, col: 17, offset: 25450},
											val:        "+",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 697, col: 21, offset: 25454},
											expr: &choiceExpr{
												pos: position{line: 1306, col: 7, offset: 50454},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1306, col: 7, offset: 50454},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1306, col: 13, offset: 50460},
														run: (*parser).callonTitleElement1385,
														expr: &litMatcher{
															pos:        position{line: 1306, col: 13, offset: 50460},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&andExpr{
											pos: position{line: 697, col: 25, offset: 25458},
											expr: &choiceExpr{
												pos: position{line: 1314, col: 8, offset: 50552},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1310, col: 12, offset: 50512},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1310, col: 21, offset: 50521},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1312, col: 8, offset: 50541},
														expr: &anyMatcher{
															line: 1312, col: 9, offset: 50542,
														},
													},
												},
											},
										},
									},
								},
							},
							&actionExpr{
								pos: position{line: 1272, col: 9, offset: 49619},
								run: (*parser).callonTitleElement1393,
								expr: &choiceExpr{
									pos: position{line: 1272, col: 10, offset: 49620},
									alternatives: []interface{}{
										&actionExpr{
											pos: position{line: 1264, col: 14, offset: 49515},
											run: (*parser).callonTitleElement1395,
											expr: &oneOrMoreExpr{
												pos: position{line: 1264, col: 14, offset: 49515},
												expr: &charClassMatcher{
													pos:        position{line: 1264, col: 14, offset: 49515},
													val:        "[a-zA-Z0-9]",
													ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
													ignoreCase: false,
													inverted:   false,
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 1272, col: 22, offset: 49632},
											expr: &actionExpr{
												pos: position{line: 1272, col: 23, offset: 49633},
												run: (*parser).callonTitleElement1399,
												expr: &seqExpr{
													pos: position{line: 1272, col: 24, offset: 49634},
													exprs: []interface{}{
														&notExpr{
															pos: position{line: 1272, col: 24, offset: 49634},
															expr: &choiceExpr{
																pos: position{line: 1310, col: 12, offset: 50512},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1310, col: 12, offset: 50512},
																		val:        "\r\n",
																		ignoreCase: false,
																	},
																	&charClassMatcher{
																		pos:        position{line: 1310, col: 21, offset: 50521},
																		val:        "[\\r\\n]",
																		chars:      []rune{'\r', '\n'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
														&notExpr{
															pos: position{line: 1272, col: 33, offset: 49643},
															expr: &choiceExpr{
																pos: position{line: 1306, col: 7, offset: 50454},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1306, col: 7, offset: 50454},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1306, col: 13, offset: 50460},
																		run: (*parser).callonTitleElement1408,
																		expr: &litMatcher{
																			pos:        position{line: 1306, col: 13, offset: 50460},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
														&notExpr{
															pos: position{line: 1272, col: 37, offset: 49647},
															expr: &charClassMatcher{
																pos:        position{line: 1262, col: 16, offset: 49479},
																val:        "[()[]]",
																chars:      []rune{'(', ')', '[', ']'},
																ignoreCase: false,
																inverted:   false,
															},
														},
														&notExpr{
															pos: position{line: 1272, col: 50, offset: 49660},
															expr: &litMatcher{
																pos:        position{line: 1272, col: 51, offset: 49661},
																val:        ".",
																ignoreCase: false,
															},
														},
														&notExpr{
															pos: position{line: 1272, col: 55, offset: 49665},
															expr: &choiceExpr{
																pos: position{line: 716, col: 33, offset: 26229},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 716, col: 33, offset: 26229},
																		val:        "^",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 716, col: 39, offset: 26235},
																		run: (*parser).callonTitleElement1417,
																		expr: &litMatcher{
																			pos:        position{line: 716, col: 39, offset: 26235},
																			val:        "~",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
														&anyMatcher{
															line: 1272, col: 86, offset: 49696,
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 1274, col: 7, offset: 49737},
											expr: &litMatcher{
												pos:        position{line: 1274, col: 7, offset: 49737},
												val:        ".",
												ignoreCase: false,
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "List",
			pos:  position{line: 453, col: 1, offset: 16158},
			expr: &actionExpr{
				pos: position{line: 455, col: 5, offset: 16239},
				run: (*parser).callonList1,
				expr: &labeledExpr{
					pos:   position{line: 455, col: 5, offset: 16239},
					label: "elements",
					expr: &ruleRefExpr{
						pos:  position{line: 455, col: 14, offset: 16248},
						name: "ListItems",
					},
				},
			},
		},
		{
			name: "ListItems",
			pos:  position{line: 459, col: 1, offset: 16314},
			expr: &oneOrMoreExpr{
				pos: position{line: 459, col: 14, offset: 16327},
				expr: &choiceExpr{
					pos: position{line: 459, col: 15, offset: 16328},
					alternatives: []interface{}{
						&ruleRefExpr{
							pos:  position{line: 459, col: 15, offset: 16328},
							name: "OrderedListItem",
						},
						&ruleRefExpr{
							pos:  position{line: 459, col: 33, offset: 16346},
							name: "UnorderedListItem",
						},
						&ruleRefExpr{
							pos:  position{line: 459, col: 53, offset: 16366},
							name: "LabeledListItem",
						},
					},
				},
			},
		},
		{
			name: "ListParagraph",
			pos:  position{line: 461, col: 1, offset: 16385},
			expr: &actionExpr{
				pos: position{line: 461, col: 18, offset: 16402},
				run: (*parser).callonListParagraph1,
				expr: &labeledExpr{
					pos:   position{line: 461, col: 18, offset: 16402},
					label: "lines",
					expr: &oneOrMoreExpr{
						pos: position{line: 461, col: 24, offset: 16408},
						expr: &ruleRefExpr{
							pos:  position{line: 461, col: 25, offset: 16409},
							name: "ListParagraphLine",
						},
					},
				},
			},
		},
		{
			name: "ListParagraphLine",
			pos:  position{line: 465, col: 1, offset: 16488},
			expr: &actionExpr{
				pos: position{line: 466, col: 5, offset: 16514},
				run: (*parser).callonListParagraphLine1,
				expr: &seqExpr{
					pos: position{line: 466, col: 5, offset: 16514},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 466, col: 5, offset: 16514},
							expr: &actionExpr{
								pos: position{line: 1253, col: 14, offset: 49283},
								run: (*parser).callonListParagraphLine4,
								expr: &seqExpr{
									pos: position{line: 1253, col: 14, offset: 49283},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 1253, col: 14, offset: 49283},
											expr: &notExpr{
												pos: position{line: 1312, col: 8, offset: 50541},
												expr: &anyMatcher{
													line: 1312, col: 9, offset: 50542,
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 1253, col: 19, offset: 49288},
											expr: &choiceExpr{
												pos: position{line: 1306, col: 7, offset: 50454},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1306, col: 7, offset: 50454},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1306, col: 13, offset: 50460},
														run: (*parser).callonListParagraphLine12,
														expr: &litMatcher{
															pos:        position{line: 1306, col: 13, offset: 50460},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1314, col: 8, offset: 50552},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1310, col: 12, offset: 50512},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1310, col: 21, offset: 50521},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1312, col: 8, offset: 50541},
													expr: &anyMatcher{
														line: 1312, col: 9, offset: 50542,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 467, col: 5, offset: 16530},
							expr: &actionExpr{
								pos: position{line: 495, col: 26, offset: 17590},
								run: (*parser).callonListParagraphLine20,
								expr: &seqExpr{
									pos: position{line: 495, col: 26, offset: 17590},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 495, col: 26, offset: 17590},
											expr: &choiceExpr{
												pos: position{line: 1306, col: 7, offset: 50454},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1306, col: 7, offset: 50454},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1306, col: 13, offset: 50460},
														run: (*parser).callonListParagraphLine25,
														expr: &litMatcher{
															pos:        position{line: 1306, col: 13, offset: 50460},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 495, col: 30, offset: 17594},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 497, col: 5, offset: 17649},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 497, col: 5, offset: 17649},
														run: (*parser).callonListParagraphLine29,
														expr: &litMatcher{
															pos:        position{line: 497, col: 5, offset: 17649},
															val:        ".....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 499, col: 9, offset: 17762},
														run: (*parser).callonListParagraphLine31,
														expr: &litMatcher{
															pos:        position{line: 499, col: 9, offset: 17762},
															val:        "....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 501, col: 9, offset: 17873},
														run: (*parser).callonListParagraphLine33,
														expr: &litMatcher{
															pos:        position{line: 501, col: 9, offset: 17873},
															val:        "...",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 503, col: 9, offset: 17982},
														run: (*parser).callonListParagraphLine35,
														expr: &litMatcher{
															pos:        position{line: 503, col: 9, offset: 17982},
															val:        "..",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 505, col: 9, offset: 18089},
														run: (*parser).callonListParagraphLine37,
														expr: &litMatcher{
															pos:        position{line: 505, col: 9, offset: 18089},
															val:        ".",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 508, col: 9, offset: 18216},
														run: (*parser).callonListParagraphLine39,
														expr: &seqExpr{
															pos: position{line: 508, col: 9, offset: 18216},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 508, col: 9, offset: 18216},
																	expr: &charClassMatcher{
																		pos:        position{line: 508, col: 10, offset: 18217},
																		val:        "[0-9]",
																		ranges:     []rune{'0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 508, col: 18, offset: 18225},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 510, col: 9, offset: 18328},
														run: (*parser).callonListParagraphLine44,
														expr: &seqExpr{
															pos: position{line: 510, col: 9, offset: 18328},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 510, col: 10, offset: 18329},
																	val:        "[a-z]",
																	ranges:     []rune{'a', 'z'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&litMatcher{
																	pos:        position{line: 510, col: 17, offset: 18336},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 512, col: 9, offset: 18442},
														run: (*parser).callonListParagraphLine48,
														expr: &seqExpr{
															pos: position{line: 512, col: 9, offset: 18442},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 512, col: 10, offset: 18443},
																	val:        "[A-Z]",
																	ranges:     []rune{'A', 'Z'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&litMatcher{
																	pos:        position{line: 512, col: 17, offset: 18450},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 514, col: 9, offset: 18556},
														run: (*parser).callonListParagraphLine52,
														expr: &seqExpr{
															pos: position{line: 514, col: 9, offset: 18556},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 514, col: 9, offset: 18556},
																	expr: &charClassMatcher{
																		pos:        position{line: 514, col: 10, offset: 18557},
																		val:        "[a-z]",
																		ranges:     []rune{'a', 'z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 514, col: 18, offset: 18565},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 516, col: 9, offset: 18671},
														run: (*parser).callonListParagraphLine57,
														expr: &seqExpr{
															pos: position{line: 516, col: 9, offset: 18671},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 516, col: 9, offset: 18671},
																	expr: &charClassMatcher{
																		pos:        position{line: 516, col: 10, offset: 18672},
																		val:        "[A-Z]",
																		ranges:     []rune{'A', 'Z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 516, col: 18, offset: 18680},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 518, col: 8, offset: 18785},
											expr: &choiceExpr{
												pos: position{line: 1306, col: 7, offset: 50454},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1306, col: 7, offset: 50454},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1306, col: 13, offset: 50460},
														run: (*parser).callonListParagraphLine65,
														expr: &litMatcher{
															pos:        position{line: 1306, col: 13, offset: 50460},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 468, col: 5, offset: 16557},
							expr: &actionExpr{
								pos: position{line: 534, col: 5, offset: 19495},
								run: (*parser).callonListParagraphLine68,
								expr: &seqExpr{
									pos: position{line: 534, col: 5, offset: 19495},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 534, col: 5, offset: 19495},
											expr: &choiceExpr{
												pos: position{line: 1306, col: 7, offset: 50454},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1306, col: 7, offset: 50454},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1306, col: 13, offset: 50460},
														run: (*parser).callonListParagraphLine73,
														expr: &litMatcher{
															pos:        position{line: 1306, col: 13, offset: 50460},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 534, col: 9, offset: 19499},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 535, col: 9, offset: 19516},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 535, col: 9, offset: 19516},
														run: (*parser).callonListParagraphLine77,
														expr: &litMatcher{
															pos:        position{line: 535, col: 9, offset: 19516},
															val:        "*****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 538, col: 11, offset: 19685},
														run: (*parser).callonListParagraphLine79,
														expr: &litMatcher{
															pos:        position{line: 538, col: 11, offset: 19685},
															val:        "****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 541, col: 11, offset: 19854},
														run: (*parser).callonListParagraphLine81,
														expr: &litMatcher{
															pos:        position{line: 541, col: 11, offset: 19854},
															val:        "***",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 544, col: 11, offset: 20023},
														run: (*parser).callonListParagraphLine83,
														expr: &litMatcher{
															pos:        position{line: 544, col: 11, offset: 20023},
															val:        "**",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 547, col: 11, offset: 20189},
														run: (*parser).callonListParagraphLine85,
														expr: &litMatcher{
															pos:        position{line: 547, col: 11, offset: 20189},
															val:        "*",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 550, col: 11, offset: 20353},
														run: (*parser).callonListParagraphLine87,
														expr: &litMatcher{
															pos:        position{line: 550, col: 11, offset: 20353},
															val:        "-",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 552, col: 12, offset: 20500},
											expr: &choiceExpr{
												pos: position{line: 1306, col: 7, offset: 50454},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1306, col: 7, offset: 50454},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1306, col: 13, offset: 50460},
														run: (*parser).callonListParagraphLine92,
														expr: &litMatcher{
															pos:        position{line: 1306, col: 13, offset: 50460},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 469, col: 5, offset: 16586},
							expr: &seqExpr{
								pos: position{line: 469, col: 7, offset: 16588},
								exprs: []interface{}{
									&actionExpr{
										pos: position{line: 575, col: 24, offset: 21401},
										run: (*parser).callonListParagraphLine96,
										expr: &zeroOrMoreExpr{
											pos: position{line: 575, col: 24, offset: 21401},
											expr: &choiceExpr{
												pos: position{line: 575, col: 25, offset: 21402},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 1264, col: 14, offset: 49515},
														run: (*parser).callonListParagraphLine99,
														expr: &oneOrMoreExpr{
															pos: position{line: 1264, col: 14, offset: 49515},
															expr: &charClassMatcher{
																pos:        position{line: 1264, col: 14, offset: 49515},
																val:        "[a-zA-Z0-9]",
																ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																ignoreCase: false,
																inverted:   false,
															},
														},
													},
													&actionExpr{
														pos: position{line: 1278, col: 11, offset: 49909},
														run: (*parser).callonListParagraphLine102,
														expr: &oneOrMoreExpr{
															pos: position{line: 1278, col: 11, offset: 49909},
															expr: &choiceExpr{
																pos: position{line: 1306, col: 7, offset: 50454},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1306, col: 7, offset: 50454},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1306, col: 13, offset: 50460},
																		run: (*parser).callonListParagraphLine106,
																		expr: &litMatcher{
																			pos:        position{line: 1306, col: 13, offset: 50460},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 575, col: 46, offset: 21423},
														run: (*parser).callonListParagraphLine108,
														expr: &seqExpr{
															pos: position{line: 575, col: 47, offset: 21424},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 575, col: 47, offset: 21424},
																	expr: &choiceExpr{
																		pos: position{line: 1310, col: 12, offset: 50512},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1310, col: 12, offset: 50512},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1310, col: 21, offset: 50521},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 575, col: 56, offset: 21433},
																	expr: &litMatcher{
																		pos:        position{line: 575, col: 57, offset: 21434},
																		val:        "::",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 575, col: 63, offset: 21440,
																},
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 582, col: 29, offset: 21621},
										run: (*parser).callonListParagraphLine117,
										expr: &choiceExpr{
											pos: position{line: 582, col: 30, offset: 21622},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 582, col: 30, offset: 21622},
													val:        "::::",
													ignoreCase: false,
												},
												&litMatcher{
													pos:        position{line: 582, col: 39, offset: 21631},
													val:        ":::",
													ignoreCase: false,
												},
												&litMatcher{
													pos:        position{line: 582, col: 47, offset: 21639},
													val:        "::",
													ignoreCase: false,
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 470, col: 5, offset: 16639},
							expr: &actionExpr{
								pos: position{line: 480, col: 25, offset: 17034},
								run: (*parser).callonListParagraphLine123,
								expr: &seqExpr{
									pos: position{line: 480, col: 25, offset: 17034},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 480, col: 25, offset: 17034},
											val:        "+",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 480, col: 29, offset: 17038},
											expr: &choiceExpr{
												pos: position{line: 1306, col: 7, offset: 50454},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1306, col: 7, offset: 50454},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1306, col: 13, offset: 50460},
														run: (*parser).callonListParagraphLine129,
														expr: &litMatcher{
															pos:        position{line: 1306, col: 13, offset: 50460},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1314, col: 8, offset: 50552},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1310, col: 12, offset: 50512},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1310, col: 21, offset: 50521},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1312, col: 8, offset: 50541},
													expr: &anyMatcher{
														line: 1312, col: 9, offset: 50542,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 471, col: 5, offset: 16665},
							expr: &actionExpr{
								pos: position{line: 164, col: 21, offset: 5763},
								run: (*parser).callonListParagraphLine137,
								expr: &seqExpr{
									pos: position{line: 164, col: 21, offset: 5763},
									exprs: []interface{}{
										&andExpr{
											pos: position{line: 164, col: 21, offset: 5763},
											expr: &charClassMatcher{
												pos:        position{line: 164, col: 23, offset: 5765},
												val:        "[[.#]",
												chars:      []rune{'[', '.', '#'},
												ignoreCase: false,
												inverted:   false,
											},
										},
										&labeledExpr{
											pos:   position{line: 165, col: 5, offset: 5853},
											label: "attr",
											expr: &choiceExpr{
												pos: position{line: 165, col: 11, offset: 5859},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 174, col: 14, offset: 6316},
														run: (*parser).callonListParagraphLine143,
														expr: &seqExpr{
															pos: position{line: 174, col: 14, offset: 6316},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 174, col: 14, offset: 6316},
																	val:        "[[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 174, col: 19, offset: 6321},
																	label: "id",
																	expr: &actionExpr{
																		pos: position{line: 1288, col: 7, offset: 50075},
																		run: (*parser).callonListParagraphLine147,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1288, col: 7, offset: 50075},
																			expr: &choiceExpr{
																				pos: position{line: 1288, col: 8, offset: 50076},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 1264, col: 14, offset: 49515},
																						run: (*parser).callonListParagraphLine150,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							expr: &charClassMatcher{
																								pos:        position{line: 1264, col: 14, offset: 49515},
																								val:        "[a-zA-Z0-9]",
																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 1288, col: 20, offset: 50088},
																						run: (*parser).callonListParagraphLine153,
																						expr: &seqExpr{
																							pos: position{line: 1288, col: 21, offset: 50089},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 1288, col: 21, offset: 50089},
																									expr: &choiceExpr{
																										pos: position{line: 1310, col: 12, offset: 50512},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1310, col: 12, offset: 50512},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1310, col: 21, offset: 50521},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1288, col: 30, offset: 50098},
																									expr: &choiceExpr{
																										pos: position{line: 1306, col: 7, offset: 50454},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1306, col: 7, offset: 50454},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1306, col: 13, offset: 50460},
																												run: (*parser).callonListParagraphLine162,
																												expr: &litMatcher{
																													pos:        position{line: 1306, col: 13, offset: 50460},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1288, col: 34, offset: 50102},
																									expr: &litMatcher{
																										pos:        position{line: 1288, col: 35, offset: 50103},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1288, col: 39, offset: 50107},
																									expr: &litMatcher{
																										pos:        position{line: 1288, col: 40, offset: 50108},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1288, col: 44, offset: 50112},
																									expr: &litMatcher{
																										pos:        position{line: 1288, col: 45, offset: 50113},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1288, col: 50, offset: 50118},
																									expr: &litMatcher{
																										pos:        position{line: 1288, col: 51, offset: 50119},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1288, col: 56, offset: 50124},
																									expr: &litMatcher{
																										pos:        position{line: 1288, col: 57, offset: 50125},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 1288, col: 62, offset: 50130,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 174, col: 27, offset: 6329},
																	val:        "]]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 176, col: 5, offset: 6383},
														run: (*parser).callonListParagraphLine176,
														expr: &seqExpr{
															pos: position{line: 176, col: 5, offset: 6383},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 176, col: 5, offset: 6383},
																	val:        "[#",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 176, col: 10, offset: 6388},
																	label: "id",
																	expr: &actionExpr{
																		pos: position{line: 1288, col: 7, offset: 50075},
																		run: (*parser).callonListParagraphLine180,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1288, col: 7, offset: 50075},
																			expr: &choiceExpr{
																				pos: position{line: 1288, col: 8, offset: 50076},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 1264, col: 14, offset: 49515},
																						run: (*parser).callonListParagraphLine183,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							expr: &charClassMatcher{
																								pos:        position{line: 1264, col: 14, offset: 49515},
																								val:        "[a-zA-Z0-9]",
																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 1288, col: 20, offset: 50088},
																						run: (*parser).callonListParagraphLine186,
																						expr: &seqExpr{
																							pos: position{line: 1288, col: 21, offset: 50089},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 1288, col: 21, offset: 50089},
																									expr: &choiceExpr{
																										pos: position{line: 1310, col: 12, offset: 50512},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1310, col: 12, offset: 50512},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1310, col: 21, offset: 50521},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1288, col: 30, offset: 50098},
																									expr: &choiceExpr{
																										pos: position{line: 1306, col: 7, offset: 50454},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1306, col: 7, offset: 50454},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1306, col: 13, offset: 50460},
																												run: (*parser).callonListParagraphLine195,
																												expr: &litMatcher{
																													pos:        position{line: 1306, col: 13, offset: 50460},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1288, col: 34, offset: 50102},
																									expr: &litMatcher{
																										pos:        position{line: 1288, col: 35, offset: 50103},
																										val:        "[",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1288, col: 39, offset: 50107},
																									expr: &litMatcher{
																										pos:        position{line: 1288, col: 40, offset: 50108},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1288, col: 44, offset: 50112},
																									expr: &litMatcher{
																										pos:        position{line: 1288, col: 45, offset: 50113},
																										val:        "<<",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1288, col: 50, offset: 50118},
																									expr: &litMatcher{
																										pos:        position{line: 1288, col: 51, offset: 50119},
																										val:        ">>",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 1288, col: 56, offset: 50124},
																									expr: &litMatcher{
																										pos:        position{line: 1288, col: 57, offset: 50125},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 1288, col: 62, offset: 50130,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 176, col: 18, offset: 6396},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 186, col: 17, offset: 6699},
														run: (*parser).callonListParagraphLine209,
														expr: &seqExpr{
															pos: position{line: 186, col: 17, offset: 6699},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 186, col: 17, offset: 6699},
																	val:        ".",
																	ignoreCase: false,
																},
																&notExpr{
																	pos: position{line: 186, col: 21, offset: 6703},
																	expr: &litMatcher{
																		pos:        position{line: 186, col: 22, offset: 6704},
																		val:        ".",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 186, col: 26, offset: 6708},
																	expr: &choiceExpr{
																		pos: position{line: 1306, col: 7, offset: 50454},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1306, col: 7, offset: 50454},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1306, col: 13, offset: 50460},
																				run: (*parser).callonListParagraphLine217,
																				expr: &litMatcher{
																					pos:        position{line: 1306, col: 13, offset: 50460},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 186, col: 30, offset: 6712},
																	label: "title",
																	expr: &actionExpr{
																		pos: position{line: 186, col: 37, offset: 6719},
																		run: (*parser).callonListParagraphLine220,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 186, col: 37, offset: 6719},
																			expr: &choiceExpr{
																				pos: position{line: 186, col: 38, offset: 6720},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 1264, col: 14, offset: 49515},
																						run: (*parser).callonListParagraphLine223,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							expr: &charClassMatcher{
																								pos:        position{line: 1264, col: 14, offset: 49515},
																								val:        "[a-zA-Z0-9]",
																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 1278, col: 11, offset: 49909},
																						run: (*parser).callonListParagraphLine226,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							expr: &choiceExpr{
																								pos: position{line: 1306, col: 7, offset: 50454},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1306, col: 7, offset: 50454},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1306, col: 13, offset: 50460},
																										run: (*parser).callonListParagraphLine230,
																										expr: &litMatcher{
																											pos:        position{line: 1306, col: 13, offset: 50460},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 186, col: 59, offset: 6741},
																						run: (*parser).callonListParagraphLine232,
																						expr: &seqExpr{
																							pos: position{line: 186, col: 60, offset: 6742},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 186, col: 60, offset: 6742},
																									expr: &choiceExpr{
																										pos: position{line: 1310, col: 12, offset: 50512},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1310, col: 12, offset: 50512},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1310, col: 21, offset: 50521},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&anyMatcher{
																									line: 186, col: 70, offset: 6752,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 196, col: 16, offset: 6990},
														run: (*parser).callonListParagraphLine239,
														expr: &seqExpr{
															pos: position{line: 196, col: 16, offset: 6990},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 196, col: 16, offset: 6990},
																	val:        "[.",
																	ignoreCase: false,
																},
																&notExpr{
																	pos: position{line: 196, col: 21, offset: 6995},
																	expr: &choiceExpr{
																		pos: position{line: 1306, col: 7, offset: 50454},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1306, col: 7, offset: 50454},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1306, col: 13, offset: 50460},
																				run: (*parser).callonListParagraphLine245,
																				expr: &litMatcher{
																					pos:        position{line: 1306, col: 13, offset: 50460},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 196, col: 25, offset: 6999},
																	label: "role",
																	expr: &actionExpr{
																		pos: position{line: 196, col: 31, offset: 7005},
																		run: (*parser).callonListParagraphLine248,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 196, col: 31, offset: 7005},
																			expr: &choiceExpr{
																				pos: position{line: 196, col: 32, offset: 7006},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 1264, col: 14, offset: 49515},
																						run: (*parser).callonListParagraphLine251,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							expr: &charClassMatcher{
																								pos:        position{line: 1264, col: 14, offset: 49515},
																								val:        "[a-zA-Z0-9]",
																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 1278, col: 11, offset: 49909},
																						run: (*parser).callonListParagraphLine254,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							expr: &choiceExpr{
																								pos: position{line: 1306, col: 7, offset: 50454},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1306, col: 7, offset: 50454},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1306, col: 13, offset: 50460},
																										run: (*parser).callonListParagraphLine258,
																										expr: &litMatcher{
																											pos:        position{line: 1306, col: 13, offset: 50460},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 196, col: 53, offset: 7027},
																						run: (*parser).callonListParagraphLine260,
																						expr: &seqExpr{
																							pos: position{line: 196, col: 54, offset: 7028},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 196, col: 54, offset: 7028},
																									expr: &choiceExpr{
																										pos: position{line: 1310, col: 12, offset: 50512},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1310, col: 12, offset: 50512},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1310, col: 21, offset: 50521},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 196, col: 63, offset: 7037},
																									expr: &litMatcher{
																										pos:        position{line: 196, col: 64, offset: 7038},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 196, col: 69, offset: 7043,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 200, col: 4, offset: 7118},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 210, col: 21, offset: 7481},
														run: (*parser).callonListParagraphLine270,
														expr: &litMatcher{
															pos:        position{line: 210, col: 21, offset: 7481},
															val:        "[source]",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 212, col: 5, offset: 7539},
														run: (*parser).callonListParagraphLine272,
														expr: &seqExpr{
															pos: position{line: 212, col: 5, offset: 7539},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 212, col: 5, offset: 7539},
																	val:        "[source,",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 212, col: 16, offset: 7550},
																	label: "language",
																	expr: &actionExpr{
																		pos: position{line: 212, col: 26, offset: 7560},
																		run: (*parser).callonListParagraphLine276,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 212, col: 26, offset: 7560},
																			expr: &choiceExpr{
																				pos: position{line: 212, col: 27, offset: 7561},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 1264, col: 14, offset: 49515},
																						run: (*parser).callonListParagraphLine279,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							expr: &charClassMatcher{
																								pos:        position{line: 1264, col: 14, offset: 49515},
																								val:        "[a-zA-Z0-9]",
																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 1278, col: 11, offset: 49909},
																						run: (*parser).callonListParagraphLine282,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							expr: &choiceExpr{
																								pos: position{line: 1306, col: 7, offset: 50454},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1306, col: 7, offset: 50454},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1306, col: 13, offset: 50460},
																										run: (*parser).callonListParagraphLine286,
																										expr: &litMatcher{
																											pos:        position{line: 1306, col: 13, offset: 50460},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 212, col: 48, offset: 7582},
																						run: (*parser).callonListParagraphLine288,
																						expr: &seqExpr{
																							pos: position{line: 212, col: 49, offset: 7583},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 212, col: 49, offset: 7583},
																									expr: &choiceExpr{
																										pos: position{line: 1310, col: 12, offset: 50512},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1310, col: 12, offset: 50512},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1310, col: 21, offset: 50521},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 212, col: 58, offset: 7592},
																									expr: &litMatcher{
																										pos:        position{line: 212, col: 59, offset: 7593},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 212, col: 64, offset: 7598,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 216, col: 7, offset: 7688},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 247, col: 20, offset: 8646},
														run: (*parser).callonListParagraphLine298,
														expr: &seqExpr{
															pos: position{line: 247, col: 20, offset: 8646},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 247, col: 20, offset: 8646},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 247, col: 24, offset: 8650},
																	label: "kind",
																	expr: &actionExpr{
																		pos: position{line: 259, col: 14, offset: 9116},
																		run: (*parser).callonListParagraphLine302,
																		expr: &litMatcher{
																			pos:        position{line: 259, col: 14, offset: 9116},
																			val:        "quote",
																			ignoreCase: false,
																		},
																	},
																},
																&zeroOrMoreExpr{
																	pos: position{line: 247, col: 41, offset: 8667},
																	expr: &choiceExpr{
																		pos: position{line: 1306, col: 7, offset: 50454},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1306, col: 7, offset: 50454},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1306, col: 13, offset: 50460},
																				run: (*parser).callonListParagraphLine307,
																				expr: &litMatcher{
																					pos:        position{line: 1306, col: 13, offset: 50460},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 247, col: 45, offset: 8671},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 247, col: 49, offset: 8675},
																	label: "author",
																	expr: &actionExpr{
																		pos: position{line: 286, col: 16, offset: 9839},
																		run: (*parser).callonListParagraphLine311,
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 286, col: 16, offset: 9839},
																			expr: &choiceExpr{
																				pos: position{line: 286, col: 17, offset: 9840},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 1264, col: 14, offset: 49515},
																						run: (*parser).callonListParagraphLine314,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							expr: &charClassMatcher{
																								pos:        position{line: 1264, col: 14, offset: 49515},
																								val:        "[a-zA-Z0-9]",
																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 1278, col: 11, offset: 49909},
																						run: (*parser).callonListParagraphLine317,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							expr: &choiceExpr{
																								pos: position{line: 1306, col: 7, offset: 50454},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1306, col: 7, offset: 50454},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1306, col: 13, offset: 50460},
																										run: (*parser).callonListParagraphLine321,
																										expr: &litMatcher{
																											pos:        position{line: 1306, col: 13, offset: 50460},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 286, col: 38, offset: 9861},
																						run: (*parser).callonListParagraphLine323,
																						expr: &seqExpr{
																							pos: position{line: 286, col: 39, offset: 9862},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 286, col: 39, offset: 9862},
																									expr: &choiceExpr{
																										pos: position{line: 1314, col: 8, offset: 50552},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1310, col: 12, offset: 50512},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1310, col: 21, offset: 50521},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																											&notExpr{
																												pos: position{line: 1312, col: 8, offset: 50541},
																												expr: &anyMatcher{
																													line: 1312, col: 9, offset: 50542,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 286, col: 44, offset: 9867},
																									expr: &litMatcher{
																										pos:        position{line: 286, col: 45, offset: 9868},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 286, col: 49, offset: 9872},
																									expr: &litMatcher{
																										pos:        position{line: 286, col: 50, offset: 9873},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 286, col: 55, offset: 9878,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 247, col: 70, offset: 8696},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 247, col: 74, offset: 8700},
																	label: "title",
																	expr: &actionExpr{
																		pos: position{line: 292, col: 15, offset: 9967},
																		run: (*parser).callonListParagraphLine338,
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 292, col: 15, offset: 9967},
																			expr: &choiceExpr{
																				pos: position{line: 292, col: 16, offset: 9968},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 1264, col: 14, offset: 49515},
																						run: (*parser).callonListParagraphLine341,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							expr: &charClassMatcher{
																								pos:        position{line: 1264, col: 14, offset: 49515},
																								val:        "[a-zA-Z0-9]",
																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 1278, col: 11, offset: 49909},
																						run: (*parser).callonListParagraphLine344,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							expr: &choiceExpr{
																								pos: position{line: 1306, col: 7, offset: 50454},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1306, col: 7, offset: 50454},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1306, col: 13, offset: 50460},
																										run: (*parser).callonListParagraphLine348,
																										expr: &litMatcher{
																											pos:        position{line: 1306, col: 13, offset: 50460},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																					&seqExpr{
																						pos: position{line: 292, col: 38, offset: 9990},
																						exprs: []interface{}{
																							&notExpr{
																								pos: position{line: 292, col: 38, offset: 9990},
																								expr: &choiceExpr{
																									pos: position{line: 1314, col: 8, offset: 50552},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1310, col: 12, offset: 50512},
																											val:        "\r\n",
																											ignoreCase: false,
																										},
																										&charClassMatcher{
																											pos:        position{line: 1310, col: 21, offset: 50521},
																											val:        "[\\r\\n]",
																											chars:      []rune{'\r', '\n'},
																											ignoreCase: false,
																											inverted:   false,
																										},
																										&notExpr{
																											pos: position{line: 1312, col: 8, offset: 50541},
																											expr: &anyMatcher{
																												line: 1312, col: 9, offset: 50542,
																											},
																										},
																									},
																								},
																							},
																							&notExpr{
																								pos: position{line: 292, col: 43, offset: 9995},
																								expr: &litMatcher{
																									pos:        position{line: 292, col: 44, offset: 9996},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&notExpr{
																								pos: position{line: 292, col: 48, offset: 10000},
																								expr: &litMatcher{
																									pos:        position{line: 292, col: 49, offset: 10001},
																									val:        "]",
																									ignoreCase: false,
																								},
																							},
																							&anyMatcher{
																								line: 292, col: 54, offset: 10006,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 247, col: 93, offset: 8719},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 251, col: 1, offset: 8846},
														run: (*parser).callonListParagraphLine363,
														expr: &seqExpr{
															pos: position{line: 251, col: 1, offset: 8846},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 251, col: 1, offset: 8846},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 251, col: 5, offset: 8850},
																	label: "kind",
																	expr: &actionExpr{
																		pos: position{line: 259, col: 14, offset: 9116},
																		run: (*parser).callonListParagraphLine367,
																		expr: &litMatcher{
																			pos:        position{line: 259, col: 14, offset: 9116},
																			val:        "quote",
																			ignoreCase: false,
																		},
																	},
																},
																&zeroOrMoreExpr{
																	pos: position{line: 251, col: 22, offset: 8867},
																	expr: &choiceExpr{
																		pos: position{line: 1306, col: 7, offset: 50454},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1306, col: 7, offset: 50454},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1306, col: 13, offset: 50460},
																				run: (*parser).callonListParagraphLine372,
																				expr: &litMatcher{
																					pos:        position{line: 1306, col: 13, offset: 50460},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 251, col: 26, offset: 8871},
																	val:        ",",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 251, col: 30, offset: 8875},
																	label: "author",
																	expr: &actionExpr{
																		pos: position{line: 286, col: 16, offset: 9839},
																		run: (*parser).callonListParagraphLine376,
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 286, col: 16, offset: 9839},
																			expr: &choiceExpr{
																				pos: position{line: 286, col: 17, offset: 9840},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 1264, col: 14, offset: 49515},
																						run: (*parser).callonListParagraphLine379,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							expr: &charClassMatcher{
																								pos:        position{line: 1264, col: 14, offset: 49515},
																								val:        "[a-zA-Z0-9]",
																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 1278, col: 11, offset: 49909},
																						run: (*parser).callonListParagraphLine382,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							expr: &choiceExpr{
																								pos: position{line: 1306, col: 7, offset: 50454},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1306, col: 7, offset: 50454},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1306, col: 13, offset: 50460},
																										run: (*parser).callonListParagraphLine386,
																										expr: &litMatcher{
																											pos:        position{line: 1306, col: 13, offset: 50460},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 286, col: 38, offset: 9861},
																						run: (*parser).callonListParagraphLine388,
																						expr: &seqExpr{
																							pos: position{line: 286, col: 39, offset: 9862},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 286, col: 39, offset: 9862},
																									expr: &choiceExpr{
																										pos: position{line: 1314, col: 8, offset: 50552},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1310, col: 12, offset: 50512},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1310, col: 21, offset: 50521},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																											&notExpr{
																												pos: position{line: 1312, col: 8, offset: 50541},
																												expr: &anyMatcher{
																													line: 1312, col: 9, offset: 50542,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 286, col: 44, offset: 9867},
																									expr: &litMatcher{
																										pos:        position{line: 286, col: 45, offset: 9868},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 286, col: 49, offset: 9872},
																									expr: &litMatcher{
																										pos:        position{line: 286, col: 50, offset: 9873},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 286, col: 55, offset: 9878,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 251, col: 51, offset: 8896},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 255, col: 1, offset: 9011},
														run: (*parser).callonListParagraphLine402,
														expr: &seqExpr{
															pos: position{line: 255, col: 1, offset: 9011},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 255, col: 1, offset: 9011},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 255, col: 5, offset: 9015},
																	label: "kind",
																	expr: &actionExpr{
																		pos: position{line: 259, col: 14, offset: 9116},
																		run: (*parser).callonListParagraphLine406,
																		expr: &litMatcher{
																			pos:        position{line: 259, col: 14, offset: 9116},
																			val:        "quote",
																			ignoreCase: false,
																		},
																	},
																},
																&zeroOrMoreExpr{
																	pos: position{line: 255, col: 22, offset: 9032},
																	expr: &choiceExpr{
																		pos: position{line: 1306, col: 7, offset: 50454},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1306, col: 7, offset: 50454},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1306, col: 13, offset: 50460},
																				run: (*parser).callonListParagraphLine411,
																				expr: &litMatcher{
																					pos:        position{line: 1306, col: 13, offset: 50460},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 255, col: 26, offset: 9036},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 263, col: 20, offset: 9179},
														run: (*parser).callonListParagraphLine414,
														expr: &seqExpr{
															pos: position{line: 263, col: 20, offset: 9179},
															exprs: []interface{}{
																&labeledExpr{
																	pos:   position{line: 263, col: 20, offset: 9179},
																	label: "attribute",
																	expr: &choiceExpr{
																		pos: position{line: 263, col: 31, offset: 9190},
																		alternatives: []interface{}{
																			&actionExpr{
																				pos: position{line: 263, col: 31, offset: 9190},
																				run: (*parser).callonListParagraphLine418,
																				expr: &seqExpr{
																					pos: position{line: 263, col: 31, offset: 9190},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 263, col: 31, offset: 9190},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 263, col: 35, offset: 9194},
																							label: "kind",
																							expr: &actionExpr{
																								pos: position{line: 282, col: 14, offset: 9780},
																								run: (*parser).callonListParagraphLine422,
																								expr: &litMatcher{
																									pos:        position{line: 282, col: 14, offset: 9780},
																									val:        "verse",
																									ignoreCase: false,
																								},
																							},
																						},
																						&zeroOrMoreExpr{
																							pos: position{line: 263, col: 52, offset: 9211},
																							expr: &choiceExpr{
																								pos: position{line: 1306, col: 7, offset: 50454},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1306, col: 7, offset: 50454},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1306, col: 13, offset: 50460},
																										run: (*parser).callonListParagraphLine427,
																										expr: &litMatcher{
																											pos:        position{line: 1306, col: 13, offset: 50460},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 263, col: 56, offset: 9215},
																							val:        ",",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 263, col: 60, offset: 9219},
																							label: "author",
																							expr: &actionExpr{
																								pos: position{line: 286, col: 16, offset: 9839},
																								run: (*parser).callonListParagraphLine431,
																								expr: &zeroOrMoreExpr{
																									pos: position{line: 286, col: 16, offset: 9839},
																									expr: &choiceExpr{
																										pos: position{line: 286, col: 17, offset: 9840},
																										alternatives: []interface{}{
																											&actionExpr{
																												pos: position{line: 1264, col: 14, offset: 49515},
																												run: (*parser).callonListParagraphLine434,
																												expr: &oneOrMoreExpr{
																													pos: position{line: 1264, col: 14, offset: 49515},
																													expr: &charClassMatcher{
																														pos:        position{line: 1264, col: 14, offset: 49515},
																														val:        "[a-zA-Z0-9]",
																														ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																											&actionExpr{
																												pos: position{line: 1278, col: 11, offset: 49909},
																												run: (*parser).callonListParagraphLine437,
																												expr: &oneOrMoreExpr{
																													pos: position{line: 1278, col: 11, offset: 49909},
																													expr: &choiceExpr{
																														pos: position{line: 1306, col: 7, offset: 50454},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1306, col: 7, offset: 50454},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1306, col: 13, offset: 50460},
																																run: (*parser).callonListParagraphLine441,
																																expr: &litMatcher{
																																	pos:        position{line: 1306, col: 13, offset: 50460},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																											&actionExpr{
																												pos: position{line: 286, col: 38, offset: 9861},
																												run: (*parser).callonListParagraphLine443,
																												expr: &seqExpr{
																													pos: position{line: 286, col: 39, offset: 9862},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 286, col: 39, offset: 9862},
																															expr: &choiceExpr{
																																pos: position{line: 1314, col: 8, offset: 50552},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1310, col: 12, offset: 50512},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1310, col: 21, offset: 50521},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																	&notExpr{
																																		pos: position{line: 1312, col: 8, offset: 50541},
																																		expr: &anyMatcher{
																																			line: 1312, col: 9, offset: 50542,
																																		},
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 286, col: 44, offset: 9867},
																															expr: &litMatcher{
																																pos:        position{line: 286, col: 45, offset: 9868},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 286, col: 49, offset: 9872},
																															expr: &litMatcher{
																																pos:        position{line: 286, col: 50, offset: 9873},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 286, col: 55, offset: 9878,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 263, col: 81, offset: 9240},
																							val:        ",",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 263, col: 85, offset: 9244},
																							label: "title",
																							expr: &actionExpr{
																								pos: position{line: 292, col: 15, offset: 9967},
																								run: (*parser).callonListParagraphLine458,
																								expr: &zeroOrMoreExpr{
																									pos: position{line: 292, col: 15, offset: 9967},
																									expr: &choiceExpr{
																										pos: position{line: 292, col: 16, offset: 9968},
																										alternatives: []interface{}{
																											&actionExpr{
																												pos: position{line: 1264, col: 14, offset: 49515},
																												run: (*parser).callonListParagraphLine461,
																												expr: &oneOrMoreExpr{
																													pos: position{line: 1264, col: 14, offset: 49515},
																													expr: &charClassMatcher{
																														pos:        position{line: 1264, col: 14, offset: 49515},
																														val:        "[a-zA-Z0-9]",
																														ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																											&actionExpr{
																												pos: position{line: 1278, col: 11, offset: 49909},
																												run: (*parser).callonListParagraphLine464,
																												expr: &oneOrMoreExpr{
																													pos: position{line: 1278, col: 11, offset: 49909},
																													expr: &choiceExpr{
																														pos: position{line: 1306, col: 7, offset: 50454},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1306, col: 7, offset: 50454},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1306, col: 13, offset: 50460},
																																run: (*parser).callonListParagraphLine468,
																																expr: &litMatcher{
																																	pos:        position{line: 1306, col: 13, offset: 50460},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																											&seqExpr{
																												pos: position{line: 292, col: 38, offset: 9990},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 292, col: 38, offset: 9990},
																														expr: &choiceExpr{
																															pos: position{line: 1314, col: 8, offset: 50552},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1310, col: 12, offset: 50512},
																																	val:        "\r\n",
																																	ignoreCase: false,
																																},
																																&charClassMatcher{
																																	pos:        position{line: 1310, col: 21, offset: 50521},
																																	val:        "[\\r\\n]",
																																	chars:      []rune{'\r', '\n'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																																&notExpr{
																																	pos: position{line: 1312, col: 8, offset: 50541},
																																	expr: &anyMatcher{
																																		line: 1312, col: 9, offset: 50542,
																																	},
																																},
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 292, col: 43, offset: 9995},
																														expr: &litMatcher{
																															pos:        position{line: 292, col: 44, offset: 9996},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&notExpr{
																														pos: position{line: 292, col: 48, offset: 10000},
																														expr: &litMatcher{
																															pos:        position{line: 292, col: 49, offset: 10001},
																															val:        "]",
																															ignoreCase: false,
																														},
																													},
																													&anyMatcher{
																														line: 292, col: 54, offset: 10006,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 263, col: 104, offset: 9263},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																			&actionExpr{
																				pos: position{line: 267, col: 5, offset: 9406},
																				run: (*parser).callonListParagraphLine483,
																				expr: &seqExpr{
																					pos: position{line: 267, col: 5, offset: 9406},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 267, col: 5, offset: 9406},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 267, col: 9, offset: 9410},
																							label: "kind",
																							expr: &actionExpr{
																								pos: position{line: 282, col: 14, offset: 9780},
																								run: (*parser).callonListParagraphLine487,
																								expr: &litMatcher{
																									pos:        position{line: 282, col: 14, offset: 9780},
																									val:        "verse",
																									ignoreCase: false,
																								},
																							},
																						},
																						&zeroOrMoreExpr{
																							pos: position{line: 267, col: 26, offset: 9427},
																							expr: &choiceExpr{
																								pos: position{line: 1306, col: 7, offset: 50454},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1306, col: 7, offset: 50454},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1306, col: 13, offset: 50460},
																										run: (*parser).callonListParagraphLine492,
																										expr: &litMatcher{
																											pos:        position{line: 1306, col: 13, offset: 50460},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 267, col: 30, offset: 9431},
																							val:        ",",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 267, col: 34, offset: 9435},
																							label: "author",
																							expr: &actionExpr{
																								pos: position{line: 286, col: 16, offset: 9839},
																								run: (*parser).callonListParagraphLine496,
																								expr: &zeroOrMoreExpr{
																									pos: position{line: 286, col: 16, offset: 9839},
																									expr: &choiceExpr{
																										pos: position{line: 286, col: 17, offset: 9840},
																										alternatives: []interface{}{
																											&actionExpr{
																												pos: position{line: 1264, col: 14, offset: 49515},
																												run: (*parser).callonListParagraphLine499,
																												expr: &oneOrMoreExpr{
																													pos: position{line: 1264, col: 14, offset: 49515},
																													expr: &charClassMatcher{
																														pos:        position{line: 1264, col: 14, offset: 49515},
																														val:        "[a-zA-Z0-9]",
																														ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																											&actionExpr{
																												pos: position{line: 1278, col: 11, offset: 49909},
																												run: (*parser).callonListParagraphLine502,
																												expr: &oneOrMoreExpr{
																													pos: position{line: 1278, col: 11, offset: 49909},
																													expr: &choiceExpr{
																														pos: position{line: 1306, col: 7, offset: 50454},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1306, col: 7, offset: 50454},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1306, col: 13, offset: 50460},
																																run: (*parser).callonListParagraphLine506,
																																expr: &litMatcher{
																																	pos:        position{line: 1306, col: 13, offset: 50460},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																											&actionExpr{
																												pos: position{line: 286, col: 38, offset: 9861},
																												run: (*parser).callonListParagraphLine508,
																												expr: &seqExpr{
																													pos: position{line: 286, col: 39, offset: 9862},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 286, col: 39, offset: 9862},
																															expr: &choiceExpr{
																																pos: position{line: 1314, col: 8, offset: 50552},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1310, col: 12, offset: 50512},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1310, col: 21, offset: 50521},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																	&notExpr{
																																		pos: position{line: 1312, col: 8, offset: 50541},
																																		expr: &anyMatcher{
																																			line: 1312, col: 9, offset: 50542,
																																		},
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 286, col: 44, offset: 9867},
																															expr: &litMatcher{
																																pos:        position{line: 286, col: 45, offset: 9868},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 286, col: 49, offset: 9872},
																															expr: &litMatcher{
																																pos:        position{line: 286, col: 50, offset: 9873},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 286, col: 55, offset: 9878,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 267, col: 55, offset: 9456},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																			&actionExpr{
																				pos: position{line: 271, col: 5, offset: 9587},
																				run: (*parser).callonListParagraphLine522,
																				expr: &seqExpr{
																					pos: position{line: 271, col: 5, offset: 9587},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 271, col: 5, offset: 9587},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 271, col: 9, offset: 9591},
																							label: "kind",
																							expr: &actionExpr{
																								pos: position{line: 282, col: 14, offset: 9780},
																								run: (*parser).callonListParagraphLine526,
																								expr: &litMatcher{
																									pos:        position{line: 282, col: 14, offset: 9780},
																									val:        "verse",
																									ignoreCase: false,
																								},
																							},
																						},
																						&zeroOrMoreExpr{
																							pos: position{line: 271, col: 26, offset: 9608},
																							expr: &choiceExpr{
																								pos: position{line: 1306, col: 7, offset: 50454},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1306, col: 7, offset: 50454},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1306, col: 13, offset: 50460},
																										run: (*parser).callonListParagraphLine531,
																										expr: &litMatcher{
																											pos:        position{line: 1306, col: 13, offset: 50460},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 271, col: 30, offset: 9612},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&stateCodeExpr{
																	pos: position{line: 275, col: 1, offset: 9688},
																	run: (*parser).callonListParagraphLine534,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 205, col: 30, offset: 7283},
														run: (*parser).callonListParagraphLine535,
														expr: &seqExpr{
															pos: position{line: 205, col: 30, offset: 7283},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 205, col: 30, offset: 7283},
																	val:        "[",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 205, col: 34, offset: 7287},
																	label: "k",
																	expr: &choiceExpr{
																		pos: position{line: 598, col: 19, offset: 22218},
																		alternatives: []interface{}{
																			&actionExpr{
																				pos: position{line: 598, col: 19, offset: 22218},
																				run: (*parser).callonListParagraphLine540,
																				expr: &litMatcher{
																					pos:        position{line: 598, col: 19, offset: 22218},
																					val:        "TIP",
																					ignoreCase: false,
																				},
																			},
																			&actionExpr{
																				pos: position{line: 600, col: 9, offset: 22264},
																				run: (*parser).callonListParagraphLine542,
																				expr: &litMatcher{
																					pos:        position{line: 600, col: 9, offset: 22264},
																					val:        "NOTE",
																					ignoreCase: false,
																				},
																			},
																			&actionExpr{
																				pos: position{line: 602, col: 9, offset: 22312},
																				run: (*parser).callonListParagraphLine544,
																				expr: &litMatcher{
																					pos:        position{line: 602, col: 9, offset: 22312},
																					val:        "IMPORTANT",
																					ignoreCase: false,
																				},
																			},
																			&actionExpr{
																				pos: position{line: 604, col: 9, offset: 22370},
																				run: (*parser).callonListParagraphLine546,
																				expr: &litMatcher{
																					pos:        position{line: 604, col: 9, offset: 22370},
																					val:        "WARNING",
																					ignoreCase: false,
																				},
																			},
																			&actionExpr{
																				pos: position{line: 606, col: 9, offset: 22424},
																				run: (*parser).callonListParagraphLine548,
																				expr: &litMatcher{
																					pos:        position{line: 606, col: 9, offset: 22424},
																					val:        "CAUTION",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 205, col: 53, offset: 7306},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 243, col: 21, offset: 8543},
														run: (*parser).callonListParagraphLine551,
														expr: &litMatcher{
															pos:        position{line: 243, col: 21, offset: 8543},
															val:        "[horizontal]",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 221, col: 19, offset: 7839},
														run: (*parser).callonListParagraphLine553,
														expr: &seqExpr{
															pos: position{line: 221, col: 19, offset: 7839},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 221, col: 19, offset: 7839},
																	val:        "[",
																	ignoreCase: false,
																},
																&notExpr{
																	pos: position{line: 221, col: 23, offset: 7843},
																	expr: &choiceExpr{
																		pos: position{line: 1306, col: 7, offset: 50454},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1306, col: 7, offset: 50454},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1306, col: 13, offset: 50460},
																				run: (*parser).callonListParagraphLine559,
																				expr: &litMatcher{
																					pos:        position{line: 1306, col: 13, offset: 50460},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 221, col: 27, offset: 7847},
																	label: "attributes",
																	expr: &zeroOrMoreExpr{
																		pos: position{line: 221, col: 38, offset: 7858},
																		expr: &choiceExpr{
																			pos: position{line: 225, col: 21, offset: 7971},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 225, col: 21, offset: 7971},
																					run: (*parser).callonListParagraphLine564,
																					expr: &seqExpr{
																						pos: position{line: 225, col: 21, offset: 7971},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 225, col: 21, offset: 7971},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 231, col: 17, offset: 8231},
																									run: (*parser).callonListParagraphLine567,
																									expr: &seqExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												expr: &actionExpr{
																													pos: position{line: 259, col: 14, offset: 9116},
																													run: (*parser).callonListParagraphLine570,
																													expr: &litMatcher{
																														pos:        position{line: 259, col: 14, offset: 9116},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 231, col: 28, offset: 8242},
																												expr: &actionExpr{
																													pos: position{line: 282, col: 14, offset: 9780},
																													run: (*parser).callonListParagraphLine573,
																													expr: &litMatcher{
																														pos:        position{line: 282, col: 14, offset: 9780},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 231, col: 39, offset: 8253},
																												expr: &actionExpr{
																													pos: position{line: 1229, col: 16, offset: 48642},
																													run: (*parser).callonListParagraphLine576,
																													expr: &litMatcher{
																														pos:        position{line: 1229, col: 16, offset: 48642},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 231, col: 52, offset: 8266},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 231, col: 56, offset: 8270},
																													expr: &choiceExpr{
																														pos: position{line: 231, col: 57, offset: 8271},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1264, col: 14, offset: 49515},
																																run: (*parser).callonListParagraphLine581,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1264, col: 14, offset: 49515},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1264, col: 14, offset: 49515},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1278, col: 11, offset: 49909},
																																run: (*parser).callonListParagraphLine584,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1278, col: 11, offset: 49909},
																																	expr: &choiceExpr{
																																		pos: position{line: 1306, col: 7, offset: 50454},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1306, col: 7, offset: 50454},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1306, col: 13, offset: 50460},
																																				run: (*parser).callonListParagraphLine588,
																																				expr: &litMatcher{
																																					pos:        position{line: 1306, col: 13, offset: 50460},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 231, col: 78, offset: 8292},
																																run: (*parser).callonListParagraphLine590,
																																expr: &seqExpr{
																																	pos: position{line: 231, col: 79, offset: 8293},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 80, offset: 8294},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 231, col: 84, offset: 8298},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 85, offset: 8299},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 231, col: 89, offset: 8303},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 90, offset: 8304},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 231, col: 95, offset: 8309,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 225, col: 40, offset: 7990},
																								val:        "=",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 225, col: 44, offset: 7994},
																								label: "value",
																								expr: &actionExpr{
																									pos: position{line: 237, col: 19, offset: 8403},
																									run: (*parser).callonListParagraphLine601,
																									expr: &labeledExpr{
																										pos:   position{line: 237, col: 19, offset: 8403},
																										label: "value",
																										expr: &zeroOrMoreExpr{
																											pos: position{line: 237, col: 25, offset: 8409},
																											expr: &choiceExpr{
																												pos: position{line: 237, col: 26, offset: 8410},
																												alternatives: []interface{}{
																													&actionExpr{
																														pos: position{line: 1264, col: 14, offset: 49515},
																														run: (*parser).callonListParagraphLine605,
																														expr: &oneOrMoreExpr{
																															pos: position{line: 1264, col: 14, offset: 49515},
																															expr: &charClassMatcher{
																																pos:        position{line: 1264, col: 14, offset: 49515},
																																val:        "[a-zA-Z0-9]",
																																ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																ignoreCase: false,
																																inverted:   false,
																															},
																														},
																													},
																													&actionExpr{
																														pos: position{line: 1278, col: 11, offset: 49909},
																														run: (*parser).callonListParagraphLine608,
																														expr: &oneOrMoreExpr{
																															pos: position{line: 1278, col: 11, offset: 49909},
																															expr: &choiceExpr{
																																pos: position{line: 1306, col: 7, offset: 50454},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1306, col: 7, offset: 50454},
																																		val:        " ",
																																		ignoreCase: false,
																																	},
																																	&actionExpr{
																																		pos: position{line: 1306, col: 13, offset: 50460},
																																		run: (*parser).callonListParagraphLine612,
																																		expr: &litMatcher{
																																			pos:        position{line: 1306, col: 13, offset: 50460},
																																			val:        "\t",
																																			ignoreCase: false,
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&actionExpr{
																														pos: position{line: 237, col: 47, offset: 8431},
																														run: (*parser).callonListParagraphLine614,
																														expr: &seqExpr{
																															pos: position{line: 237, col: 48, offset: 8432},
																															exprs: []interface{}{
																																&notExpr{
																																	pos: position{line: 237, col: 48, offset: 8432},
																																	expr: &litMatcher{
																																		pos:        position{line: 237, col: 49, offset: 8433},
																																		val:        "=",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 237, col: 53, offset: 8437},
																																	expr: &litMatcher{
																																		pos:        position{line: 237, col: 54, offset: 8438},
																																		val:        ",",
																																		ignoreCase: false,
																																	},
																																},
																																&notExpr{
																																	pos: position{line: 237, col: 58, offset: 8442},
																																	expr: &litMatcher{
																																		pos:        position{line: 237, col: 59, offset: 8443},
																																		val:        "]",
																																		ignoreCase: false,
																																	},
																																},
																																&anyMatcher{
																																	line: 237, col: 64, offset: 8448,
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 225, col: 67, offset: 8017},
																								expr: &litMatcher{
																									pos:        position{line: 225, col: 67, offset: 8017},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 225, col: 72, offset: 8022},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonListParagraphLine628,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 227, col: 5, offset: 8106},
																					run: (*parser).callonListParagraphLine630,
																					expr: &seqExpr{
																						pos: position{line: 227, col: 5, offset: 8106},
																						exprs: []interface{}{
																							&labeledExpr{
																								pos:   position{line: 227, col: 5, offset: 8106},
																								label: "key",
																								expr: &actionExpr{
																									pos: position{line: 231, col: 17, offset: 8231},
																									run: (*parser).callonListParagraphLine633,
																									expr: &seqExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												expr: &actionExpr{
																													pos: position{line: 259, col: 14, offset: 9116},
																													run: (*parser).callonListParagraphLine636,
																													expr: &litMatcher{
																														pos:        position{line: 259, col: 14, offset: 9116},
																														val:        "quote",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 231, col: 28, offset: 8242},
																												expr: &actionExpr{
																													pos: position{line: 282, col: 14, offset: 9780},
																													run: (*parser).callonListParagraphLine639,
																													expr: &litMatcher{
																														pos:        position{line: 282, col: 14, offset: 9780},
																														val:        "verse",
																														ignoreCase: false,
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 231, col: 39, offset: 8253},
																												expr: &actionExpr{
																													pos: position{line: 1229, col: 16, offset: 48642},
																													run: (*parser).callonListParagraphLine642,
																													expr: &litMatcher{
																														pos:        position{line: 1229, col: 16, offset: 48642},
																														val:        "literal",
																														ignoreCase: false,
																													},
																												},
																											},
																											&labeledExpr{
																												pos:   position{line: 231, col: 52, offset: 8266},
																												label: "key",
																												expr: &oneOrMoreExpr{
																													pos: position{line: 231, col: 56, offset: 8270},
																													expr: &choiceExpr{
																														pos: position{line: 231, col: 57, offset: 8271},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1264, col: 14, offset: 49515},
																																run: (*parser).callonListParagraphLine647,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1264, col: 14, offset: 49515},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1264, col: 14, offset: 49515},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1278, col: 11, offset: 49909},
																																run: (*parser).callonListParagraphLine650,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1278, col: 11, offset: 49909},
																																	expr: &choiceExpr{
																																		pos: position{line: 1306, col: 7, offset: 50454},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1306, col: 7, offset: 50454},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1306, col: 13, offset: 50460},
																																				run: (*parser).callonListParagraphLine654,
																																				expr: &litMatcher{
																																					pos:        position{line: 1306, col: 13, offset: 50460},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 231, col: 78, offset: 8292},
																																run: (*parser).callonListParagraphLine656,
																																expr: &seqExpr{
																																	pos: position{line: 231, col: 79, offset: 8293},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 80, offset: 8294},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 231, col: 84, offset: 8298},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 85, offset: 8299},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 231, col: 89, offset: 8303},
																																			expr: &litMatcher{
																																				pos:        position{line: 231, col: 90, offset: 8304},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 231, col: 95, offset: 8309,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&zeroOrOneExpr{
																								pos: position{line: 227, col: 24, offset: 8125},
																								expr: &litMatcher{
																									pos:        position{line: 227, col: 24, offset: 8125},
																									val:        ",",
																									ignoreCase: false,
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 227, col: 29, offset: 8130},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonListParagraphLine670,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&litMatcher{
																	pos:        position{line: 221, col: 59, offset: 7879},
																	val:        "]",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 165, col: 170, offset: 6018},
											expr: &choiceExpr{
												pos: position{line: 1306, col: 7, offset: 50454},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1306, col: 7, offset: 50454},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1306, col: 13, offset: 50460},
														run: (*parser).callonListParagraphLine676,
														expr: &litMatcher{
															pos:        position{line: 1306, col: 13, offset: 50460},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1314, col: 8, offset: 50552},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1310, col: 12, offset: 50512},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1310, col: 21, offset: 50521},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1312, col: 8, offset: 50541},
													expr: &anyMatcher{
														line: 1312, col: 9, offset: 50542,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 472, col: 5, offset: 16687},
							expr: &choiceExpr{
								pos: position{line: 995, col: 19, offset: 39728},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1179, col: 26, offset: 46634},
										val:        "....",
										ignoreCase: false,
									},
									&seqExpr{
										pos: position{line: 1007, col: 25, offset: 40213},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 1007, col: 25, offset: 40213},
												val:        "```",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 1007, col: 31, offset: 40219},
												expr: &choiceExpr{
													pos: position{line: 1306, col: 7, offset: 50454},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1306, col: 7, offset: 50454},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1306, col: 13, offset: 50460},
															run: (*parser).callonListParagraphLine691,
															expr: &litMatcher{
																pos:        position{line: 1306, col: 13, offset: 50460},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1314, col: 8, offset: 50552},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1310, col: 12, offset: 50512},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1310, col: 21, offset: 50521},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1312, col: 8, offset: 50541},
														expr: &anyMatcher{
															line: 1312, col: 9, offset: 50542,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 1018, col: 26, offset: 40692},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 1018, col: 26, offset: 40692},
												val:        "----",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 1018, col: 33, offset: 40699},
												expr: &choiceExpr{
													pos: position{line: 1306, col: 7, offset: 50454},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1306, col: 7, offset: 50454},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1306, col: 13, offset: 50460},
															run: (*parser).callonListParagraphLine703,
															expr: &litMatcher{
																pos:        position{line: 1306, col: 13, offset: 50460},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1314, col: 8, offset: 50552},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1310, col: 12, offset: 50512},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1310, col: 21, offset: 50521},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1312, col: 8, offset: 50541},
														expr: &anyMatcher{
															line: 1312, col: 9, offset: 50542,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 1042, col: 26, offset: 41655},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 1042, col: 26, offset: 41655},
												val:        "====",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 1042, col: 33, offset: 41662},
												expr: &choiceExpr{
													pos: position{line: 1306, col: 7, offset: 50454},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1306, col: 7, offset: 50454},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1306, col: 13, offset: 50460},
															run: (*parser).callonListParagraphLine715,
															expr: &litMatcher{
																pos:        position{line: 1306, col: 13, offset: 50460},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1314, col: 8, offset: 50552},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1310, col: 12, offset: 50512},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1310, col: 21, offset: 50521},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1312, col: 8, offset: 50541},
														expr: &anyMatcher{
															line: 1312, col: 9, offset: 50542,
														},
													},
												},
											},
										},
									},
									&litMatcher{
										pos:        position{line: 1151, col: 26, offset: 45573},
										val:        "////",
										ignoreCase: false,
									},
									&seqExpr{
										pos: position{line: 1065, col: 24, offset: 42480},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 1065, col: 24, offset: 42480},
												val:        "____",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 1065, col: 31, offset: 42487},
												expr: &choiceExpr{
													pos: position{line: 1306, col: 7, offset: 50454},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1306, col: 7, offset: 50454},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1306, col: 13, offset: 50460},
															run: (*parser).callonListParagraphLine728,
															expr: &litMatcher{
																pos:        position{line: 1306, col: 13, offset: 50460},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1314, col: 8, offset: 50552},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1310, col: 12, offset: 50512},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1310, col: 21, offset: 50521},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1312, col: 8, offset: 50541},
														expr: &anyMatcher{
															line: 1312, col: 9, offset: 50542,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 1109, col: 26, offset: 44081},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 1109, col: 26, offset: 44081},
												val:        "****",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 1109, col: 33, offset: 44088},
												expr: &choiceExpr{
													pos: position{line: 1306, col: 7, offset: 50454},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1306, col: 7, offset: 50454},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1306, col: 13, offset: 50460},
															run: (*parser).callonListParagraphLine740,
															expr: &litMatcher{
																pos:        position{line: 1306, col: 13, offset: 50460},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1314, col: 8, offset: 50552},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1310, col: 12, offset: 50512},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1310, col: 21, offset: 50521},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1312, col: 8, offset: 50541},
														expr: &anyMatcher{
															line: 1312, col: 9, offset: 50542,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 473, col: 5, offset: 16707},
							label: "line",
							expr: &actionExpr{
								pos: position{line: 474, col: 9, offset: 16722},
								run: (*parser).callonListParagraphLine748,
								expr: &seqExpr{
									pos: position{line: 474, col: 9, offset: 16722},
									exprs: []interface{}{
										&labeledExpr{
											pos:   position{line: 474, col: 9, offset: 16722},
											label: "elements",
											expr: &oneOrMoreExpr{
												pos: position{line: 474, col: 18, offset: 16731},
												expr: &ruleRefExpr{
													pos:  position{line: 474, col: 19, offset: 16732},
													name: "InlineElement",
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 474, col: 35, offset: 16748},
											label: "linebreak",
											expr: &zeroOrOneExpr{
												pos: position{line: 474, col: 45, offset: 16758},
												expr: &actionExpr{
													pos: position{line: 697, col: 14, offset: 25447},
													run: (*parser).callonListParagraphLine755,
													expr: &seqExpr{
														pos: position{line: 697, col: 14, offset: 25447},
														exprs: []interface{}{
															&choiceExpr{
																pos: position{line: 1306, col: 7, offset: 50454},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1306, col: 7, offset: 50454},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1306, col: 13, offset: 50460},
																		run: (*parser).callonListParagraphLine759,
																		expr: &litMatcher{
																			pos:        position{line: 1306, col: 13, offset: 50460},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&litMatcher{
																pos:        position{line: 697, col: 17, offset: 25450},
																val:        "+",
																ignoreCase: false,
															},
															&zeroOrMoreExpr{
																pos: position{line: 697, col: 21, offset: 25454},
																expr: &choiceExpr{
																	pos: position{line: 1306, col: 7, offset: 50454},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1306, col: 7, offset: 50454},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 1306, col: 13, offset: 50460},
																			run: (*parser).callonListParagraphLine765,
																			expr: &litMatcher{
																				pos:        position{line: 1306, col: 13, offset: 50460},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&andExpr{
																pos: position{line: 697, col: 25, offset: 25458},
																expr: &choiceExpr{
																	pos: position{line: 1314, col: 8, offset: 50552},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1310, col: 12, offset: 50512},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1310, col: 21, offset: 50521},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1312, col: 8, offset: 50541},
																			expr: &anyMatcher{
																				line: 1312, col: 9, offset: 50542,
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1314, col: 8, offset: 50552},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1310, col: 12, offset: 50512},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1310, col: 21, offset: 50521},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1312, col: 8, offset: 50541},
									expr: &anyMatcher{
										line: 1312, col: 9, offset: 50542,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "ContinuedDocumentElement",
			pos:  position{line: 484, col: 1, offset: 17094},
			expr: &actionExpr{
				pos: position{line: 484, col: 28, offset: 17121},
				run: (*parser).callonContinuedDocumentElement1,
				expr: &seqExpr{
					pos: position{line: 484, col: 28, offset: 17121},
					exprs: []interface{}{
						&actionExpr{
							pos: position{line: 480, col: 25, offset: 17034},
							run: (*parser).callonContinuedDocumentElement3,
							expr: &seqExpr{
								pos: position{line: 480, col: 25, offset: 17034},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 480, col: 25, offset: 17034},
										val:        "+",
										ignoreCase: false,
									},
									&zeroOrMoreExpr{
										pos: position{line: 480, col: 29, offset: 17038},
										expr: &choiceExpr{
											pos: position{line: 1306, col: 7, offset: 50454},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1306, col: 7, offset: 50454},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1306, col: 13, offset: 50460},
													run: (*parser).callonContinuedDocumentElement9,
													expr: &litMatcher{
														pos:        position{line: 1306, col: 13, offset: 50460},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&choiceExpr{
										pos: position{line: 1314, col: 8, offset: 50552},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1310, col: 12, offset: 50512},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1310, col: 21, offset: 50521},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1312, col: 8, offset: 50541},
												expr: &anyMatcher{
													line: 1312, col: 9, offset: 50542,
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 484, col: 49, offset: 17142},
							label: "element",
							expr: &ruleRefExpr{
								pos:  position{line: 484, col: 57, offset: 17150},
								name: "DocumentElement",
							},
						},
					},
				},
			},
		},
		{
			name: "OrderedListItem",
			pos:  position{line: 491, col: 1, offset: 17308},
			expr: &actionExpr{
				pos: position{line: 491, col: 20, offset: 17327},
				run: (*parser).callonOrderedListItem1,
				expr: &seqExpr{
					pos: position{line: 491, col: 20, offset: 17327},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 491, col: 20, offset: 17327},
							label: "attributes",
							expr: &zeroOrMoreExpr{
								pos: position{line: 491, col: 31, offset: 17338},
								expr: &actionExpr{
									pos: position{line: 164, col: 21, offset: 5763},
									run: (*parser).callonOrderedListItem5,
									expr: &seqExpr{
										pos: position{line: 164, col: 21, offset: 5763},
										exprs: []interface{}{
											&andExpr{
												pos: position{line: 164, col: 21, offset: 5763},
												expr: &charClassMatcher{
													pos:        position{line: 164, col: 23, offset: 5765},
													val:        "[[.#]",
													chars:      []rune{'[', '.', '#'},
													ignoreCase: false,
													inverted:   false,
												},
											},
											&labeledExpr{
												pos:   position{line: 165, col: 5, offset: 5853},
												label: "attr",
												expr: &choiceExpr{
													pos: position{line: 165, col: 11, offset: 5859},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 174, col: 14, offset: 6316},
															run: (*parser).callonOrderedListItem11,
															expr: &seqExpr{
																pos: position{line: 174, col: 14, offset: 6316},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 174, col: 14, offset: 6316},
																		val:        "[[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 174, col: 19, offset: 6321},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1288, col: 7, offset: 50075},
																			run: (*parser).callonOrderedListItem15,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1288, col: 7, offset: 50075},
																				expr: &choiceExpr{
																					pos: position{line: 1288, col: 8, offset: 50076},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonOrderedListItem18,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1288, col: 20, offset: 50088},
																							run: (*parser).callonOrderedListItem21,
																							expr: &seqExpr{
																								pos: position{line: 1288, col: 21, offset: 50089},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1288, col: 21, offset: 50089},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 30, offset: 50098},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonOrderedListItem30,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 34, offset: 50102},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 35, offset: 50103},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 39, offset: 50107},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 40, offset: 50108},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 44, offset: 50112},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 45, offset: 50113},
																											val:        "<<",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 50, offset: 50118},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 51, offset: 50119},
																											val:        ">>",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 56, offset: 50124},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 57, offset: 50125},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1288, col: 62, offset: 50130,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 174, col: 27, offset: 6329},
																		val:        "]]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 176, col: 5, offset: 6383},
															run: (*parser).callonOrderedListItem44,
															expr: &seqExpr{
																pos: position{line: 176, col: 5, offset: 6383},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 176, col: 5, offset: 6383},
																		val:        "[#",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 176, col: 10, offset: 6388},
																		label: "id",
																		expr: &actionExpr{
																			pos: position{line: 1288, col: 7, offset: 50075},
																			run: (*parser).callonOrderedListItem48,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1288, col: 7, offset: 50075},
																				expr: &choiceExpr{
																					pos: position{line: 1288, col: 8, offset: 50076},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonOrderedListItem51,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1288, col: 20, offset: 50088},
																							run: (*parser).callonOrderedListItem54,
																							expr: &seqExpr{
																								pos: position{line: 1288, col: 21, offset: 50089},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1288, col: 21, offset: 50089},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 30, offset: 50098},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonOrderedListItem63,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 34, offset: 50102},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 35, offset: 50103},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 39, offset: 50107},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 40, offset: 50108},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 44, offset: 50112},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 45, offset: 50113},
																											val:        "<<",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 50, offset: 50118},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 51, offset: 50119},
																											val:        ">>",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1288, col: 56, offset: 50124},
																										expr: &litMatcher{
																											pos:        position{line: 1288, col: 57, offset: 50125},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1288, col: 62, offset: 50130,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 176, col: 18, offset: 6396},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 186, col: 17, offset: 6699},
															run: (*parser).callonOrderedListItem77,
															expr: &seqExpr{
																pos: position{line: 186, col: 17, offset: 6699},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 186, col: 17, offset: 6699},
																		val:        ".",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 186, col: 21, offset: 6703},
																		expr: &litMatcher{
																			pos:        position{line: 186, col: 22, offset: 6704},
																			val:        ".",
																			ignoreCase: false,
																		},
																	},
																	&notExpr{
																		pos: position{line: 186, col: 26, offset: 6708},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonOrderedListItem85,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 186, col: 30, offset: 6712},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 186, col: 37, offset: 6719},
																			run: (*parser).callonOrderedListItem88,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 186, col: 37, offset: 6719},
																				expr: &choiceExpr{
																					pos: position{line: 186, col: 38, offset: 6720},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonOrderedListItem91,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonOrderedListItem94,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonOrderedListItem98,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 186, col: 59, offset: 6741},
																							run: (*parser).callonOrderedListItem100,
																							expr: &seqExpr{
																								pos: position{line: 186, col: 60, offset: 6742},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 186, col: 60, offset: 6742},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&anyMatcher{
																										line: 186, col: 70, offset: 6752,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 196, col: 16, offset: 6990},
															run: (*parser).callonOrderedListItem107,
															expr: &seqExpr{
																pos: position{line: 196, col: 16, offset: 6990},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 196, col: 16, offset: 6990},
																		val:        "[.",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 196, col: 21, offset: 6995},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonOrderedListItem113,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 196, col: 25, offset: 6999},
																		label: "role",
																		expr: &actionExpr{
																			pos: position{line: 196, col: 31, offset: 7005},
																			run: (*parser).callonOrderedListItem116,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 196, col: 31, offset: 7005},
																				expr: &choiceExpr{
																					pos: position{line: 196, col: 32, offset: 7006},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonOrderedListItem119,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonOrderedListItem122,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonOrderedListItem126,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 196, col: 53, offset: 7027},
																							run: (*parser).callonOrderedListItem128,
																							expr: &seqExpr{
																								pos: position{line: 196, col: 54, offset: 7028},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 196, col: 54, offset: 7028},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 196, col: 63, offset: 7037},
																										expr: &litMatcher{
																											pos:        position{line: 196, col: 64, offset: 7038},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 196, col: 69, offset: 7043,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 200, col: 4, offset: 7118},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 210, col: 21, offset: 7481},
															run: (*parser).callonOrderedListItem138,
															expr: &litMatcher{
																pos:        position{line: 210, col: 21, offset: 7481},
																val:        "[source]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 212, col: 5, offset: 7539},
															run: (*parser).callonOrderedListItem140,
															expr: &seqExpr{
																pos: position{line: 212, col: 5, offset: 7539},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 212, col: 5, offset: 7539},
																		val:        "[source,",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 212, col: 16, offset: 7550},
																		label: "language",
																		expr: &actionExpr{
																			pos: position{line: 212, col: 26, offset: 7560},
																			run: (*parser).callonOrderedListItem144,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 212, col: 26, offset: 7560},
																				expr: &choiceExpr{
																					pos: position{line: 212, col: 27, offset: 7561},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonOrderedListItem147,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonOrderedListItem150,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonOrderedListItem154,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 212, col: 48, offset: 7582},
																							run: (*parser).callonOrderedListItem156,
																							expr: &seqExpr{
																								pos: position{line: 212, col: 49, offset: 7583},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 212, col: 49, offset: 7583},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 212, col: 58, offset: 7592},
																										expr: &litMatcher{
																											pos:        position{line: 212, col: 59, offset: 7593},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 212, col: 64, offset: 7598,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 216, col: 7, offset: 7688},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 247, col: 20, offset: 8646},
															run: (*parser).callonOrderedListItem166,
															expr: &seqExpr{
																pos: position{line: 247, col: 20, offset: 8646},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 247, col: 20, offset: 8646},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 24, offset: 8650},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonOrderedListItem170,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 247, col: 41, offset: 8667},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonOrderedListItem175,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 45, offset: 8671},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 49, offset: 8675},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 286, col: 16, offset: 9839},
																			run: (*parser).callonOrderedListItem179,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 286, col: 16, offset: 9839},
																				expr: &choiceExpr{
																					pos: position{line: 286, col: 17, offset: 9840},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonOrderedListItem182,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonOrderedListItem185,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonOrderedListItem189,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 286, col: 38, offset: 9861},
																							run: (*parser).callonOrderedListItem191,
																							expr: &seqExpr{
																								pos: position{line: 286, col: 39, offset: 9862},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 286, col: 39, offset: 9862},
																										expr: &choiceExpr{
																											pos: position{line: 1314, col: 8, offset: 50552},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																												&notExpr{
																													pos: position{line: 1312, col: 8, offset: 50541},
																													expr: &anyMatcher{
																														line: 1312, col: 9, offset: 50542,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 44, offset: 9867},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 45, offset: 9868},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 49, offset: 9872},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 50, offset: 9873},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 286, col: 55, offset: 9878,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 70, offset: 8696},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 247, col: 74, offset: 8700},
																		label: "title",
																		expr: &actionExpr{
																			pos: position{line: 292, col: 15, offset: 9967},
																			run: (*parser).callonOrderedListItem206,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 292, col: 15, offset: 9967},
																				expr: &choiceExpr{
																					pos: position{line: 292, col: 16, offset: 9968},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonOrderedListItem209,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonOrderedListItem212,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonOrderedListItem216,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&seqExpr{
																							pos: position{line: 292, col: 38, offset: 9990},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 292, col: 38, offset: 9990},
																									expr: &choiceExpr{
																										pos: position{line: 1314, col: 8, offset: 50552},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1310, col: 12, offset: 50512},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1310, col: 21, offset: 50521},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																											&notExpr{
																												pos: position{line: 1312, col: 8, offset: 50541},
																												expr: &anyMatcher{
																													line: 1312, col: 9, offset: 50542,
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 292, col: 43, offset: 9995},
																									expr: &litMatcher{
																										pos:        position{line: 292, col: 44, offset: 9996},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&notExpr{
																									pos: position{line: 292, col: 48, offset: 10000},
																									expr: &litMatcher{
																										pos:        position{line: 292, col: 49, offset: 10001},
																										val:        "]",
																										ignoreCase: false,
																									},
																								},
																								&anyMatcher{
																									line: 292, col: 54, offset: 10006,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 247, col: 93, offset: 8719},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 251, col: 1, offset: 8846},
															run: (*parser).callonOrderedListItem231,
															expr: &seqExpr{
																pos: position{line: 251, col: 1, offset: 8846},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 251, col: 1, offset: 8846},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 251, col: 5, offset: 8850},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonOrderedListItem235,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 251, col: 22, offset: 8867},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonOrderedListItem240,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 251, col: 26, offset: 8871},
																		val:        ",",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 251, col: 30, offset: 8875},
																		label: "author",
																		expr: &actionExpr{
																			pos: position{line: 286, col: 16, offset: 9839},
																			run: (*parser).callonOrderedListItem244,
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 286, col: 16, offset: 9839},
																				expr: &choiceExpr{
																					pos: position{line: 286, col: 17, offset: 9840},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonOrderedListItem247,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							run: (*parser).callonOrderedListItem250,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonOrderedListItem254,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 286, col: 38, offset: 9861},
																							run: (*parser).callonOrderedListItem256,
																							expr: &seqExpr{
																								pos: position{line: 286, col: 39, offset: 9862},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 286, col: 39, offset: 9862},
																										expr: &choiceExpr{
																											pos: position{line: 1314, col: 8, offset: 50552},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																												&notExpr{
																													pos: position{line: 1312, col: 8, offset: 50541},
																													expr: &anyMatcher{
																														line: 1312, col: 9, offset: 50542,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 44, offset: 9867},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 45, offset: 9868},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 286, col: 49, offset: 9872},
																										expr: &litMatcher{
																											pos:        position{line: 286, col: 50, offset: 9873},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 286, col: 55, offset: 9878,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 251, col: 51, offset: 8896},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 255, col: 1, offset: 9011},
															run: (*parser).callonOrderedListItem270,
															expr: &seqExpr{
																pos: position{line: 255, col: 1, offset: 9011},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 255, col: 1, offset: 9011},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 255, col: 5, offset: 9015},
																		label: "kind",
																		expr: &actionExpr{
																			pos: position{line: 259, col: 14, offset: 9116},
																			run: (*parser).callonOrderedListItem274,
																			expr: &litMatcher{
																				pos:        position{line: 259, col: 14, offset: 9116},
																				val:        "quote",
																				ignoreCase: false,
																			},
																		},
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 255, col: 22, offset: 9032},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonOrderedListItem279,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 255, col: 26, offset: 9036},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 263, col: 20, offset: 9179},
															run: (*parser).callonOrderedListItem282,
															expr: &seqExpr{
																pos: position{line: 263, col: 20, offset: 9179},
																exprs: []interface{}{
																	&labeledExpr{
																		pos:   position{line: 263, col: 20, offset: 9179},
																		label: "attribute",
																		expr: &choiceExpr{
																			pos: position{line: 263, col: 31, offset: 9190},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 263, col: 31, offset: 9190},
																					run: (*parser).callonOrderedListItem286,
																					expr: &seqExpr{
																						pos: position{line: 263, col: 31, offset: 9190},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 263, col: 31, offset: 9190},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 35, offset: 9194},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonOrderedListItem290,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 263, col: 52, offset: 9211},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonOrderedListItem295,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 56, offset: 9215},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 60, offset: 9219},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 286, col: 16, offset: 9839},
																									run: (*parser).callonOrderedListItem299,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 286, col: 16, offset: 9839},
																										expr: &choiceExpr{
																											pos: position{line: 286, col: 17, offset: 9840},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1264, col: 14, offset: 49515},
																													run: (*parser).callonOrderedListItem302,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1264, col: 14, offset: 49515},
																														expr: &charClassMatcher{
																															pos:        position{line: 1264, col: 14, offset: 49515},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1278, col: 11, offset: 49909},
																													run: (*parser).callonOrderedListItem305,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1278, col: 11, offset: 49909},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonOrderedListItem309,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 286, col: 38, offset: 9861},
																													run: (*parser).callonOrderedListItem311,
																													expr: &seqExpr{
																														pos: position{line: 286, col: 39, offset: 9862},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 286, col: 39, offset: 9862},
																																expr: &choiceExpr{
																																	pos: position{line: 1314, col: 8, offset: 50552},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1310, col: 12, offset: 50512},
																																			val:        "\r\n",
																																			ignoreCase: false,
																																		},
																																		&charClassMatcher{
																																			pos:        position{line: 1310, col: 21, offset: 50521},
																																			val:        "[\\r\\n]",
																																			chars:      []rune{'\r', '\n'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																		&notExpr{
																																			pos: position{line: 1312, col: 8, offset: 50541},
																																			expr: &anyMatcher{
																																				line: 1312, col: 9, offset: 50542,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 44, offset: 9867},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 45, offset: 9868},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 49, offset: 9872},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 50, offset: 9873},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 286, col: 55, offset: 9878,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 81, offset: 9240},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 263, col: 85, offset: 9244},
																								label: "title",
																								expr: &actionExpr{
																									pos: position{line: 292, col: 15, offset: 9967},
																									run: (*parser).callonOrderedListItem326,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 292, col: 15, offset: 9967},
																										expr: &choiceExpr{
																											pos: position{line: 292, col: 16, offset: 9968},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1264, col: 14, offset: 49515},
																													run: (*parser).callonOrderedListItem329,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1264, col: 14, offset: 49515},
																														expr: &charClassMatcher{
																															pos:        position{line: 1264, col: 14, offset: 49515},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1278, col: 11, offset: 49909},
																													run: (*parser).callonOrderedListItem332,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1278, col: 11, offset: 49909},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonOrderedListItem336,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&seqExpr{
																													pos: position{line: 292, col: 38, offset: 9990},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 292, col: 38, offset: 9990},
																															expr: &choiceExpr{
																																pos: position{line: 1314, col: 8, offset: 50552},
																																alternatives: []interface{}{
																																	&litMatcher{
																																		pos:        position{line: 1310, col: 12, offset: 50512},
																																		val:        "\r\n",
																																		ignoreCase: false,
																																	},
																																	&charClassMatcher{
																																		pos:        position{line: 1310, col: 21, offset: 50521},
																																		val:        "[\\r\\n]",
																																		chars:      []rune{'\r', '\n'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																	&notExpr{
																																		pos: position{line: 1312, col: 8, offset: 50541},
																																		expr: &anyMatcher{
																																			line: 1312, col: 9, offset: 50542,
																																		},
																																	},
																																},
																															},
																														},
																														&notExpr{
																															pos: position{line: 292, col: 43, offset: 9995},
																															expr: &litMatcher{
																																pos:        position{line: 292, col: 44, offset: 9996},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 292, col: 48, offset: 10000},
																															expr: &litMatcher{
																																pos:        position{line: 292, col: 49, offset: 10001},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 292, col: 54, offset: 10006,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 263, col: 104, offset: 9263},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 267, col: 5, offset: 9406},
																					run: (*parser).callonOrderedListItem351,
																					expr: &seqExpr{
																						pos: position{line: 267, col: 5, offset: 9406},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 267, col: 5, offset: 9406},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 267, col: 9, offset: 9410},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonOrderedListItem355,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 267, col: 26, offset: 9427},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonOrderedListItem360,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 267, col: 30, offset: 9431},
																								val:        ",",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 267, col: 34, offset: 9435},
																								label: "author",
																								expr: &actionExpr{
																									pos: position{line: 286, col: 16, offset: 9839},
																									run: (*parser).callonOrderedListItem364,
																									expr: &zeroOrMoreExpr{
																										pos: position{line: 286, col: 16, offset: 9839},
																										expr: &choiceExpr{
																											pos: position{line: 286, col: 17, offset: 9840},
																											alternatives: []interface{}{
																												&actionExpr{
																													pos: position{line: 1264, col: 14, offset: 49515},
																													run: (*parser).callonOrderedListItem367,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1264, col: 14, offset: 49515},
																														expr: &charClassMatcher{
																															pos:        position{line: 1264, col: 14, offset: 49515},
																															val:        "[a-zA-Z0-9]",
																															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 1278, col: 11, offset: 49909},
																													run: (*parser).callonOrderedListItem370,
																													expr: &oneOrMoreExpr{
																														pos: position{line: 1278, col: 11, offset: 49909},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonOrderedListItem374,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																												&actionExpr{
																													pos: position{line: 286, col: 38, offset: 9861},
																													run: (*parser).callonOrderedListItem376,
																													expr: &seqExpr{
																														pos: position{line: 286, col: 39, offset: 9862},
																														exprs: []interface{}{
																															&notExpr{
																																pos: position{line: 286, col: 39, offset: 9862},
																																expr: &choiceExpr{
																																	pos: position{line: 1314, col: 8, offset: 50552},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1310, col: 12, offset: 50512},
																																			val:        "\r\n",
																																			ignoreCase: false,
																																		},
																																		&charClassMatcher{
																																			pos:        position{line: 1310, col: 21, offset: 50521},
																																			val:        "[\\r\\n]",
																																			chars:      []rune{'\r', '\n'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																		&notExpr{
																																			pos: position{line: 1312, col: 8, offset: 50541},
																																			expr: &anyMatcher{
																																				line: 1312, col: 9, offset: 50542,
																																			},
																																		},
																																	},
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 44, offset: 9867},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 45, offset: 9868},
																																	val:        ",",
																																	ignoreCase: false,
																																},
																															},
																															&notExpr{
																																pos: position{line: 286, col: 49, offset: 9872},
																																expr: &litMatcher{
																																	pos:        position{line: 286, col: 50, offset: 9873},
																																	val:        "]",
																																	ignoreCase: false,
																																},
																															},
																															&anyMatcher{
																																line: 286, col: 55, offset: 9878,
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 267, col: 55, offset: 9456},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 271, col: 5, offset: 9587},
																					run: (*parser).callonOrderedListItem390,
																					expr: &seqExpr{
																						pos: position{line: 271, col: 5, offset: 9587},
																						exprs: []interface{}{
																							&litMatcher{
																								pos:        position{line: 271, col: 5, offset: 9587},
																								val:        "[",
																								ignoreCase: false,
																							},
																							&labeledExpr{
																								pos:   position{line: 271, col: 9, offset: 9591},
																								label: "kind",
																								expr: &actionExpr{
																									pos: position{line: 282, col: 14, offset: 9780},
																									run: (*parser).callonOrderedListItem394,
																									expr: &litMatcher{
																										pos:        position{line: 282, col: 14, offset: 9780},
																										val:        "verse",
																										ignoreCase: false,
																									},
																								},
																							},
																							&zeroOrMoreExpr{
																								pos: position{line: 271, col: 26, offset: 9608},
																								expr: &choiceExpr{
																									pos: position{line: 1306, col: 7, offset: 50454},
																									alternatives: []interface{}{
																										&litMatcher{
																											pos:        position{line: 1306, col: 7, offset: 50454},
																											val:        " ",
																											ignoreCase: false,
																										},
																										&actionExpr{
																											pos: position{line: 1306, col: 13, offset: 50460},
																											run: (*parser).callonOrderedListItem399,
																											expr: &litMatcher{
																												pos:        position{line: 1306, col: 13, offset: 50460},
																												val:        "\t",
																												ignoreCase: false,
																											},
																										},
																									},
																								},
																							},
																							&litMatcher{
																								pos:        position{line: 271, col: 30, offset: 9612},
																								val:        "]",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&stateCodeExpr{
																		pos: position{line: 275, col: 1, offset: 9688},
																		run: (*parser).callonOrderedListItem402,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 205, col: 30, offset: 7283},
															run: (*parser).callonOrderedListItem403,
															expr: &seqExpr{
																pos: position{line: 205, col: 30, offset: 7283},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 205, col: 30, offset: 7283},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&labeledExpr{
																		pos:   position{line: 205, col: 34, offset: 7287},
																		label: "k",
																		expr: &choiceExpr{
																			pos: position{line: 598, col: 19, offset: 22218},
																			alternatives: []interface{}{
																				&actionExpr{
																					pos: position{line: 598, col: 19, offset: 22218},
																					run: (*parser).callonOrderedListItem408,
																					expr: &litMatcher{
																						pos:        position{line: 598, col: 19, offset: 22218},
																						val:        "TIP",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 600, col: 9, offset: 22264},
																					run: (*parser).callonOrderedListItem410,
																					expr: &litMatcher{
																						pos:        position{line: 600, col: 9, offset: 22264},
																						val:        "NOTE",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 602, col: 9, offset: 22312},
																					run: (*parser).callonOrderedListItem412,
																					expr: &litMatcher{
																						pos:        position{line: 602, col: 9, offset: 22312},
																						val:        "IMPORTANT",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 604, col: 9, offset: 22370},
																					run: (*parser).callonOrderedListItem414,
																					expr: &litMatcher{
																						pos:        position{line: 604, col: 9, offset: 22370},
																						val:        "WARNING",
																						ignoreCase: false,
																					},
																				},
																				&actionExpr{
																					pos: position{line: 606, col: 9, offset: 22424},
																					run: (*parser).callonOrderedListItem416,
																					expr: &litMatcher{
																						pos:        position{line: 606, col: 9, offset: 22424},
																						val:        "CAUTION",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 205, col: 53, offset: 7306},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
														&actionExpr{
															pos: position{line: 243, col: 21, offset: 8543},
															run: (*parser).callonOrderedListItem419,
															expr: &litMatcher{
																pos:        position{line: 243, col: 21, offset: 8543},
																val:        "[horizontal]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 221, col: 19, offset: 7839},
															run: (*parser).callonOrderedListItem421,
															expr: &seqExpr{
																pos: position{line: 221, col: 19, offset: 7839},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 221, col: 19, offset: 7839},
																		val:        "[",
																		ignoreCase: false,
																	},
																	&notExpr{
																		pos: position{line: 221, col: 23, offset: 7843},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonOrderedListItem427,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&labeledExpr{
																		pos:   position{line: 221, col: 27, offset: 7847},
																		label: "attributes",
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 221, col: 38, offset: 7858},
																			expr: &choiceExpr{
																				pos: position{line: 225, col: 21, offset: 7971},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 225, col: 21, offset: 7971},
																						run: (*parser).callonOrderedListItem432,
																						expr: &seqExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 225, col: 21, offset: 7971},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										run: (*parser).callonOrderedListItem435,
																										expr: &seqExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9116},
																														run: (*parser).callonOrderedListItem438,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9116},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 28, offset: 8242},
																													expr: &actionExpr{
																														pos: position{line: 282, col: 14, offset: 9780},
																														run: (*parser).callonOrderedListItem441,
																														expr: &litMatcher{
																															pos:        position{line: 282, col: 14, offset: 9780},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 39, offset: 8253},
																													expr: &actionExpr{
																														pos: position{line: 1229, col: 16, offset: 48642},
																														run: (*parser).callonOrderedListItem444,
																														expr: &litMatcher{
																															pos:        position{line: 1229, col: 16, offset: 48642},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 231, col: 52, offset: 8266},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 231, col: 56, offset: 8270},
																														expr: &choiceExpr{
																															pos: position{line: 231, col: 57, offset: 8271},
																															alternatives: []interface{}{
																																&actionExpr{
																																	pos: position{line: 1264, col: 14, offset: 49515},
																																	run: (*parser).callonOrderedListItem449,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		expr: &charClassMatcher{
																																			pos:        position{line: 1264, col: 14, offset: 49515},
																																			val:        "[a-zA-Z0-9]",
																																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 1278, col: 11, offset: 49909},
																																	run: (*parser).callonOrderedListItem452,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		expr: &choiceExpr{
																																			pos: position{line: 1306, col: 7, offset: 50454},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1306, col: 7, offset: 50454},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 1306, col: 13, offset: 50460},
																																					run: (*parser).callonOrderedListItem456,
																																					expr: &litMatcher{
																																						pos:        position{line: 1306, col: 13, offset: 50460},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 231, col: 78, offset: 8292},
																																	run: (*parser).callonOrderedListItem458,
																																	expr: &seqExpr{
																																		pos: position{line: 231, col: 79, offset: 8293},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 231, col: 79, offset: 8293},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 80, offset: 8294},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 84, offset: 8298},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 85, offset: 8299},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 89, offset: 8303},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 90, offset: 8304},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 231, col: 95, offset: 8309,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&litMatcher{
																									pos:        position{line: 225, col: 40, offset: 7990},
																									val:        "=",
																									ignoreCase: false,
																								},
																								&labeledExpr{
																									pos:   position{line: 225, col: 44, offset: 7994},
																									label: "value",
																									expr: &actionExpr{
																										pos: position{line: 237, col: 19, offset: 8403},
																										run: (*parser).callonOrderedListItem469,
																										expr: &labeledExpr{
																											pos:   position{line: 237, col: 19, offset: 8403},
																											label: "value",
																											expr: &zeroOrMoreExpr{
																												pos: position{line: 237, col: 25, offset: 8409},
																												expr: &choiceExpr{
																													pos: position{line: 237, col: 26, offset: 8410},
																													alternatives: []interface{}{
																														&actionExpr{
																															pos: position{line: 1264, col: 14, offset: 49515},
																															run: (*parser).callonOrderedListItem473,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1264, col: 14, offset: 49515},
																																expr: &charClassMatcher{
																																	pos:        position{line: 1264, col: 14, offset: 49515},
																																	val:        "[a-zA-Z0-9]",
																																	ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																	ignoreCase: false,
																																	inverted:   false,
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 1278, col: 11, offset: 49909},
																															run: (*parser).callonOrderedListItem476,
																															expr: &oneOrMoreExpr{
																																pos: position{line: 1278, col: 11, offset: 49909},
																																expr: &choiceExpr{
																																	pos: position{line: 1306, col: 7, offset: 50454},
																																	alternatives: []interface{}{
																																		&litMatcher{
																																			pos:        position{line: 1306, col: 7, offset: 50454},
																																			val:        " ",
																																			ignoreCase: false,
																																		},
																																		&actionExpr{
																																			pos: position{line: 1306, col: 13, offset: 50460},
																																			run: (*parser).callonOrderedListItem480,
																																			expr: &litMatcher{
																																				pos:        position{line: 1306, col: 13, offset: 50460},
																																				val:        "\t",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																														&actionExpr{
																															pos: position{line: 237, col: 47, offset: 8431},
																															run: (*parser).callonOrderedListItem482,
																															expr: &seqExpr{
																																pos: position{line: 237, col: 48, offset: 8432},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 237, col: 48, offset: 8432},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 49, offset: 8433},
																																			val:        "=",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 237, col: 53, offset: 8437},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 54, offset: 8438},
																																			val:        ",",
																																			ignoreCase: false,
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 237, col: 58, offset: 8442},
																																		expr: &litMatcher{
																																			pos:        position{line: 237, col: 59, offset: 8443},
																																			val:        "]",
																																			ignoreCase: false,
																																		},
																																	},
																																	&anyMatcher{
																																		line: 237, col: 64, offset: 8448,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 225, col: 67, offset: 8017},
																									expr: &litMatcher{
																										pos:        position{line: 225, col: 67, offset: 8017},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 225, col: 72, offset: 8022},
																									expr: &choiceExpr{
																										pos: position{line: 1306, col: 7, offset: 50454},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1306, col: 7, offset: 50454},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1306, col: 13, offset: 50460},
																												run: (*parser).callonOrderedListItem496,
																												expr: &litMatcher{
																													pos:        position{line: 1306, col: 13, offset: 50460},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 227, col: 5, offset: 8106},
																						run: (*parser).callonOrderedListItem498,
																						expr: &seqExpr{
																							pos: position{line: 227, col: 5, offset: 8106},
																							exprs: []interface{}{
																								&labeledExpr{
																									pos:   position{line: 227, col: 5, offset: 8106},
																									label: "key",
																									expr: &actionExpr{
																										pos: position{line: 231, col: 17, offset: 8231},
																										run: (*parser).callonOrderedListItem501,
																										expr: &seqExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											exprs: []interface{}{
																												&notExpr{
																													pos: position{line: 231, col: 17, offset: 8231},
																													expr: &actionExpr{
																														pos: position{line: 259, col: 14, offset: 9116},
																														run: (*parser).callonOrderedListItem504,
																														expr: &litMatcher{
																															pos:        position{line: 259, col: 14, offset: 9116},
																															val:        "quote",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 28, offset: 8242},
																													expr: &actionExpr{
																														pos: position{line: 282, col: 14, offset: 9780},
																														run: (*parser).callonOrderedListItem507,
																														expr: &litMatcher{
																															pos:        position{line: 282, col: 14, offset: 9780},
																															val:        "verse",
																															ignoreCase: false,
																														},
																													},
																												},
																												&notExpr{
																													pos: position{line: 231, col: 39, offset: 8253},
																													expr: &actionExpr{
																														pos: position{line: 1229, col: 16, offset: 48642},
																														run: (*parser).callonOrderedListItem510,
																														expr: &litMatcher{
																															pos:        position{line: 1229, col: 16, offset: 48642},
																															val:        "literal",
																															ignoreCase: false,
																														},
																													},
																												},
																												&labeledExpr{
																													pos:   position{line: 231, col: 52, offset: 8266},
																													label: "key",
																													expr: &oneOrMoreExpr{
																														pos: position{line: 231, col: 56, offset: 8270},
																														expr: &choiceExpr{
																															pos: position{line: 231, col: 57, offset: 8271},
																															alternatives: []interface{}{
																																&actionExpr{
																																	pos: position{line: 1264, col: 14, offset: 49515},
																																	run: (*parser).callonOrderedListItem515,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		expr: &charClassMatcher{
																																			pos:        position{line: 1264, col: 14, offset: 49515},
																																			val:        "[a-zA-Z0-9]",
																																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																			ignoreCase: false,
																																			inverted:   false,
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 1278, col: 11, offset: 49909},
																																	run: (*parser).callonOrderedListItem518,
																																	expr: &oneOrMoreExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		expr: &choiceExpr{
																																			pos: position{line: 1306, col: 7, offset: 50454},
																																			alternatives: []interface{}{
																																				&litMatcher{
																																					pos:        position{line: 1306, col: 7, offset: 50454},
																																					val:        " ",
																																					ignoreCase: false,
																																				},
																																				&actionExpr{
																																					pos: position{line: 1306, col: 13, offset: 50460},
																																					run: (*parser).callonOrderedListItem522,
																																					expr: &litMatcher{
																																						pos:        position{line: 1306, col: 13, offset: 50460},
																																						val:        "\t",
																																						ignoreCase: false,
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																																&actionExpr{
																																	pos: position{line: 231, col: 78, offset: 8292},
																																	run: (*parser).callonOrderedListItem524,
																																	expr: &seqExpr{
																																		pos: position{line: 231, col: 79, offset: 8293},
																																		exprs: []interface{}{
																																			&notExpr{
																																				pos: position{line: 231, col: 79, offset: 8293},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 80, offset: 8294},
																																					val:        "=",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 84, offset: 8298},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 85, offset: 8299},
																																					val:        ",",
																																					ignoreCase: false,
																																				},
																																			},
																																			&notExpr{
																																				pos: position{line: 231, col: 89, offset: 8303},
																																				expr: &litMatcher{
																																					pos:        position{line: 231, col: 90, offset: 8304},
																																					val:        "]",
																																					ignoreCase: false,
																																				},
																																			},
																																			&anyMatcher{
																																				line: 231, col: 95, offset: 8309,
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&zeroOrOneExpr{
																									pos: position{line: 227, col: 24, offset: 8125},
																									expr: &litMatcher{
																										pos:        position{line: 227, col: 24, offset: 8125},
																										val:        ",",
																										ignoreCase: false,
																									},
																								},
																								&zeroOrMoreExpr{
																									pos: position{line: 227, col: 29, offset: 8130},
																									expr: &choiceExpr{
																										pos: position{line: 1306, col: 7, offset: 50454},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1306, col: 7, offset: 50454},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1306, col: 13, offset: 50460},
																												run: (*parser).callonOrderedListItem538,
																												expr: &litMatcher{
																													pos:        position{line: 1306, col: 13, offset: 50460},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 221, col: 59, offset: 7879},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
											&zeroOrMoreExpr{
												pos: position{line: 165, col: 170, offset: 6018},
												expr: &choiceExpr{
													pos: position{line: 1306, col: 7, offset: 50454},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1306, col: 7, offset: 50454},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1306, col: 13, offset: 50460},
															run: (*parser).callonOrderedListItem544,
															expr: &litMatcher{
																pos:        position{line: 1306, col: 13, offset: 50460},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1314, col: 8, offset: 50552},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1310, col: 12, offset: 50512},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1310, col: 21, offset: 50521},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1312, col: 8, offset: 50541},
														expr: &anyMatcher{
															line: 1312, col: 9, offset: 50542,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 491, col: 51, offset: 17358},
							label: "prefix",
							expr: &actionExpr{
								pos: position{line: 495, col: 26, offset: 17590},
								run: (*parser).callonOrderedListItem552,
								expr: &seqExpr{
									pos: position{line: 495, col: 26, offset: 17590},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 495, col: 26, offset: 17590},
											expr: &choiceExpr{
												pos: position{line: 1306, col: 7, offset: 50454},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1306, col: 7, offset: 50454},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1306, col: 13, offset: 50460},
														run: (*parser).callonOrderedListItem557,
														expr: &litMatcher{
															pos:        position{line: 1306, col: 13, offset: 50460},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 495, col: 30, offset: 17594},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 497, col: 5, offset: 17649},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 497, col: 5, offset: 17649},
														run: (*parser).callonOrderedListItem561,
														expr: &litMatcher{
															pos:        position{line: 497, col: 5, offset: 17649},
															val:        ".....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 499, col: 9, offset: 17762},
														run: (*parser).callonOrderedListItem563,
														expr: &litMatcher{
															pos:        position{line: 499, col: 9, offset: 17762},
															val:        "....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 501, col: 9, offset: 17873},
														run: (*parser).callonOrderedListItem565,
														expr: &litMatcher{
															pos:        position{line: 501, col: 9, offset: 17873},
															val:        "...",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 503, col: 9, offset: 17982},
														run: (*parser).callonOrderedListItem567,
														expr: &litMatcher{
															pos:        position{line: 503, col: 9, offset: 17982},
															val:        "..",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 505, col: 9, offset: 18089},
														run: (*parser).callonOrderedListItem569,
														expr: &litMatcher{
															pos:        position{line: 505, col: 9, offset: 18089},
															val:        ".",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 508, col: 9, offset: 18216},
														run: (*parser).callonOrderedListItem571,
														expr: &seqExpr{
															pos: position{line: 508, col: 9, offset: 18216},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 508, col: 9, offset: 18216},
																	expr: &charClassMatcher{
																		pos:        position{line: 508, col: 10, offset: 18217},
																		val:        "[0-9]",
																		ranges:     []rune{'0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 508, col: 18, offset: 18225},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 510, col: 9, offset: 18328},
														run: (*parser).callonOrderedListItem576,
														expr: &seqExpr{
															pos: position{line: 510, col: 9, offset: 18328},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 510, col: 10, offset: 18329},
																	val:        "[a-z]",
																	ranges:     []rune{'a', 'z'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&litMatcher{
																	pos:        position{line: 510, col: 17, offset: 18336},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 512, col: 9, offset: 18442},
														run: (*parser).callonOrderedListItem580,
														expr: &seqExpr{
															pos: position{line: 512, col: 9, offset: 18442},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 512, col: 10, offset: 18443},
																	val:        "[A-Z]",
																	ranges:     []rune{'A', 'Z'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&litMatcher{
																	pos:        position{line: 512, col: 17, offset: 18450},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 514, col: 9, offset: 18556},
														run: (*parser).callonOrderedListItem584,
														expr: &seqExpr{
															pos: position{line: 514, col: 9, offset: 18556},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 514, col: 9, offset: 18556},
																	expr: &charClassMatcher{
																		pos:        position{line: 514, col: 10, offset: 18557},
																		val:        "[a-z]",
																		ranges:     []rune{'a', 'z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 514, col: 18, offset: 18565},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 516, col: 9, offset: 18671},
														run: (*parser).callonOrderedListItem589,
														expr: &seqExpr{
															pos: position{line: 516, col: 9, offset: 18671},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 516, col: 9, offset: 18671},
																	expr: &charClassMatcher{
																		pos:        position{line: 516, col: 10, offset: 18672},
																		val:        "[A-Z]",
																		ranges:     []rune{'A', 'Z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 516, col: 18, offset: 18680},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 518, col: 8, offset: 18785},
											expr: &choiceExpr{
												pos: position{line: 1306, col: 7, offset: 50454},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1306, col: 7, offset: 50454},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1306, col: 13, offset: 50460},
														run: (*parser).callonOrderedListItem597,
														expr: &litMatcher{
															pos:        position{line: 1306, col: 13, offset: 50460},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 491, col: 82, offset: 17389},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 491, col: 91, offset: 17398},
								name: "OrderedListItemContent",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 491, col: 115, offset: 17422},
							expr: &actionExpr{
								pos: position{line: 1253, col: 14, offset: 49283},
								run: (*parser).callonOrderedListItem602,
								expr: &seqExpr{
									pos: position{line: 1253, col: 14, offset: 49283},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 1253, col: 14, offset: 49283},
											expr: &notExpr{
												pos: position{line: 1312, col: 8, offset: 50541},
												expr: &anyMatcher{
													line: 1312, col: 9, offset: 50542,
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 1253, col: 19, offset: 49288},
											expr: &choiceExpr{
												pos: position{line: 1306, col: 7, offset: 50454},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1306, col: 7, offset: 50454},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1306, col: 13, offset: 50460},
														run: (*parser).callonOrderedListItem610,
														expr: &litMatcher{
															pos:        position{line: 1306, col: 13, offset: 50460},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1314, col: 8, offset: 50552},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1310, col: 12, offset: 50512},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1310, col: 21, offset: 50521},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1312, col: 8, offset: 50541},
													expr: &anyMatcher{
														line: 1312, col: 9, offset: 50542,
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "OrderedListItemContent",
			pos:  position{line: 522, col: 1, offset: 18821},
			expr: &actionExpr{
				pos: position{line: 522, col: 27, offset: 18847},
				run: (*parser).callonOrderedListItemContent1,
				expr: &labeledExpr{
					pos:   position{line: 522, col: 27, offset: 18847},
					label: "elements",
					expr: &seqExpr{
						pos: position{line: 522, col: 37, offset: 18857},
						exprs: []interface{}{
							&oneOrMoreExpr{
								pos: position{line: 522, col: 37, offset: 18857},
								expr: &ruleRefExpr{
									pos:  position{line: 522, col: 37, offset: 18857},
									name: "ListParagraph",
								},
							},
							&zeroOrMoreExpr{
								pos: position{line: 522, col: 52, offset: 18872},
								expr: &ruleRefExpr{
									pos:  position{line: 522, col: 52, offset: 18872},
									name: "ContinuedDocumentElement",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "UnorderedListItem",
			pos:  position{line: 529, col: 1, offset: 19201},
			expr: &actionExpr{
				pos: position{line: 529, col: 22, offset: 19222},
				run: (*parser).callonUnorderedListItem1,
				expr: &seqExpr{
					pos: position{line: 529, col: 22, offset: 19222},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 529, col: 22, offset: 19222},
							label: "prefix",
							expr: &actionExpr{
								pos: position{line: 534, col: 5, offset: 19495},
								run: (*parser).callonUnorderedListItem4,
								expr: &seqExpr{
									pos: position{line: 534, col: 5, offset: 19495},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 534, col: 5, offset: 19495},
											expr: &choiceExpr{
												pos: position{line: 1306, col: 7, offset: 50454},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1306, col: 7, offset: 50454},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1306, col: 13, offset: 50460},
														run: (*parser).callonUnorderedListItem9,
														expr: &litMatcher{
															pos:        position{line: 1306, col: 13, offset: 50460},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 534, col: 9, offset: 19499},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 535, col: 9, offset: 19516},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 535, col: 9, offset: 19516},
														run: (*parser).callonUnorderedListItem13,
														expr: &litMatcher{
															pos:        position{line: 535, col: 9, offset: 19516},
															val:        "*****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 538, col: 11, offset: 19685},
														run: (*parser).callonUnorderedListItem15,
														expr: &litMatcher{
															pos:        position{line: 538, col: 11, offset: 19685},
															val:        "****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 541, col: 11, offset: 19854},
														run: (*parser).callonUnorderedListItem17,
														expr: &litMatcher{
															pos:        position{line: 541, col: 11, offset: 19854},
															val:        "***",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 544, col: 11, offset: 20023},
														run: (*parser).callonUnorderedListItem19,
														expr: &litMatcher{
															pos:        position{line: 544, col: 11, offset: 20023},
															val:        "**",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 547, col: 11, offset: 20189},
														run: (*parser).callonUnorderedListItem21,
														expr: &litMatcher{
															pos:        position{line: 547, col: 11, offset: 20189},
															val:        "*",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 550, col: 11, offset: 20353},
														run: (*parser).callonUnorderedListItem23,
														expr: &litMatcher{
															pos:        position{line: 550, col: 11, offset: 20353},
															val:        "-",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 552, col: 12, offset: 20500},
											expr: &choiceExpr{
												pos: position{line: 1306, col: 7, offset: 50454},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1306, col: 7, offset: 50454},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1306, col: 13, offset: 50460},
														run: (*parser).callonUnorderedListItem28,
														expr: &litMatcher{
															pos:        position{line: 1306, col: 13, offset: 50460},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 529, col: 55, offset: 19255},
							label: "checkstyle",
							expr: &zeroOrOneExpr{
								pos: position{line: 529, col: 66, offset: 19266},
								expr: &actionExpr{
									pos: position{line: 556, col: 32, offset: 20572},
									run: (*parser).callonUnorderedListItem32,
									expr: &seqExpr{
										pos: position{line: 556, col: 32, offset: 20572},
										exprs: []interface{}{
											&andExpr{
												pos: position{line: 556, col: 32, offset: 20572},
												expr: &litMatcher{
													pos:        position{line: 556, col: 33, offset: 20573},
													val:        "[",
													ignoreCase: false,
												},
											},
											&labeledExpr{
												pos:   position{line: 556, col: 37, offset: 20577},
												label: "style",
												expr: &choiceExpr{
													pos: position{line: 557, col: 7, offset: 20591},
													alternatives: []interface{}{
														&actionExpr{
															pos: position{line: 557, col: 7, offset: 20591},
															run: (*parser).callonUnorderedListItem38,
															expr: &litMatcher{
																pos:        position{line: 557, col: 7, offset: 20591},
																val:        "[ ]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 558, col: 7, offset: 20636},
															run: (*parser).callonUnorderedListItem40,
															expr: &litMatcher{
																pos:        position{line: 558, col: 7, offset: 20636},
																val:        "[*]",
																ignoreCase: false,
															},
														},
														&actionExpr{
															pos: position{line: 559, col: 7, offset: 20679},
															run: (*parser).callonUnorderedListItem42,
															expr: &litMatcher{
																pos:        position{line: 559, col: 7, offset: 20679},
																val:        "[x]",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&oneOrMoreExpr{
												pos: position{line: 560, col: 7, offset: 20721},
												expr: &choiceExpr{
													pos: position{line: 1306, col: 7, offset: 50454},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1306, col: 7, offset: 50454},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1306, col: 13, offset: 50460},
															run: (*parser).callonUnorderedListItem47,
															expr: &litMatcher{
																pos:        position{line: 1306, col: 13, offset: 50460},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 529, col: 97, offset: 19297},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 529, col: 106, offset: 19306},
								name: "UnorderedListItemContent",
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 529, col: 132, offset: 19332},
							expr: &actionExpr{
								pos: position{line: 1253, col: 14, offset: 49283},
								run: (*parser).callonUnorderedListItem52,
								expr: &seqExpr{
									pos: position{line: 1253, col: 14, offset: 49283},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 1253, col: 14, offset: 49283},
											expr: &notExpr{
												pos: position{line: 1312, col: 8, offset: 50541},
												expr: &anyMatcher{
													line: 1312, col: 9, offset: 50542,
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 1253, col: 19, offset: 49288},
											expr: &choiceExpr{
												pos: position{line: 1306, col: 7, offset: 50454},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1306, col: 7, offset: 50454},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1306, col: 13, offset: 50460},
														run: (*parser).callonUnorderedListItem60,
														expr: &litMatcher{
															pos:        position{line: 1306, col: 13, offset: 50460},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1314, col: 8, offset: 50552},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1310, col: 12, offset: 50512},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1310, col: 21, offset: 50521},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1312, col: 8, offset: 50541},
													expr: &anyMatcher{
														line: 1312, col: 9, offset: 50542,
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "UnorderedListItemContent",
			pos:  position{line: 564, col: 1, offset: 20760},
			expr: &actionExpr{
				pos: position{line: 564, col: 29, offset: 20788},
				run: (*parser).callonUnorderedListItemContent1,
				expr: &labeledExpr{
					pos:   position{line: 564, col: 29, offset: 20788},
					label: "elements",
					expr: &seqExpr{
						pos: position{line: 564, col: 39, offset: 20798},
						exprs: []interface{}{
							&oneOrMoreExpr{
								pos: position{line: 564, col: 39, offset: 20798},
								expr: &ruleRefExpr{
									pos:  position{line: 564, col: 39, offset: 20798},
									name: "ListParagraph",
								},
							},
							&zeroOrMoreExpr{
								pos: position{line: 564, col: 54, offset: 20813},
								expr: &ruleRefExpr{
									pos:  position{line: 564, col: 54, offset: 20813},
									name: "ContinuedDocumentElement",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "LabeledListItem",
			pos:  position{line: 571, col: 1, offset: 21140},
			expr: &actionExpr{
				pos: position{line: 571, col: 20, offset: 21159},
				run: (*parser).callonLabeledListItem1,
				expr: &seqExpr{
					pos: position{line: 571, col: 20, offset: 21159},
					exprs: []interface{}{
						&labeledExpr{
							pos:   position{line: 571, col: 20, offset: 21159},
							label: "term",
							expr: &actionExpr{
								pos: position{line: 575, col: 24, offset: 21401},
								run: (*parser).callonLabeledListItem4,
								expr: &zeroOrMoreExpr{
									pos: position{line: 575, col: 24, offset: 21401},
									expr: &choiceExpr{
										pos: position{line: 575, col: 25, offset: 21402},
										alternatives: []interface{}{
											&actionExpr{
												pos: position{line: 1264, col: 14, offset: 49515},
												run: (*parser).callonLabeledListItem7,
												expr: &oneOrMoreExpr{
													pos: position{line: 1264, col: 14, offset: 49515},
													expr: &charClassMatcher{
														pos:        position{line: 1264, col: 14, offset: 49515},
														val:        "[a-zA-Z0-9]",
														ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
														ignoreCase: false,
														inverted:   false,
													},
												},
											},
											&actionExpr{
												pos: position{line: 1278, col: 11, offset: 49909},
												run: (*parser).callonLabeledListItem10,
												expr: &oneOrMoreExpr{
													pos: position{line: 1278, col: 11, offset: 49909},
													expr: &choiceExpr{
														pos: position{line: 1306, col: 7, offset: 50454},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1306, col: 7, offset: 50454},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1306, col: 13, offset: 50460},
																run: (*parser).callonLabeledListItem14,
																expr: &litMatcher{
																	pos:        position{line: 1306, col: 13, offset: 50460},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
											&actionExpr{
												pos: position{line: 575, col: 46, offset: 21423},
												run: (*parser).callonLabeledListItem16,
												expr: &seqExpr{
													pos: position{line: 575, col: 47, offset: 21424},
													exprs: []interface{}{
														&notExpr{
															pos: position{line: 575, col: 47, offset: 21424},
															expr: &choiceExpr{
																pos: position{line: 1310, col: 12, offset: 50512},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1310, col: 12, offset: 50512},
																		val:        "\r\n",
																		ignoreCase: false,
																	},
																	&charClassMatcher{
																		pos:        position{line: 1310, col: 21, offset: 50521},
																		val:        "[\\r\\n]",
																		chars:      []rune{'\r', '\n'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
														&notExpr{
															pos: position{line: 575, col: 56, offset: 21433},
															expr: &litMatcher{
																pos:        position{line: 575, col: 57, offset: 21434},
																val:        "::",
																ignoreCase: false,
															},
														},
														&anyMatcher{
															line: 575, col: 63, offset: 21440,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 571, col: 47, offset: 21186},
							label: "separator",
							expr: &actionExpr{
								pos: position{line: 582, col: 29, offset: 21621},
								run: (*parser).callonLabeledListItem26,
								expr: &choiceExpr{
									pos: position{line: 582, col: 30, offset: 21622},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 582, col: 30, offset: 21622},
											val:        "::::",
											ignoreCase: false,
										},
										&litMatcher{
											pos:        position{line: 582, col: 39, offset: 21631},
											val:        ":::",
											ignoreCase: false,
										},
										&litMatcher{
											pos:        position{line: 582, col: 47, offset: 21639},
											val:        "::",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 571, col: 84, offset: 21223},
							label: "description",
							expr: &ruleRefExpr{
								pos:  position{line: 571, col: 97, offset: 21236},
								name: "LabeledListItemDescription",
							},
						},
					},
				},
			},
		},
		{
			name: "LabeledListItemDescription",
			pos:  position{line: 587, col: 1, offset: 21687},
			expr: &choiceExpr{
				pos: position{line: 588, col: 5, offset: 21722},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 588, col: 5, offset: 21722},
						run: (*parser).callonLabeledListItemDescription2,
						expr: &seqExpr{
							pos: position{line: 588, col: 5, offset: 21722},
							exprs: []interface{}{
								&oneOrMoreExpr{
									pos: position{line: 588, col: 5, offset: 21722},
									expr: &choiceExpr{
										pos: position{line: 588, col: 6, offset: 21723},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1306, col: 7, offset: 50454},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1306, col: 13, offset: 50460},
												run: (*parser).callonLabeledListItemDescription7,
												expr: &litMatcher{
													pos:        position{line: 1306, col: 13, offset: 50460},
													val:        "\t",
													ignoreCase: false,
												},
											},
											&litMatcher{
												pos:        position{line: 1310, col: 12, offset: 50512},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1310, col: 21, offset: 50521},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 588, col: 21, offset: 21738},
									label: "elements",
									expr: &zeroOrMoreExpr{
										pos: position{line: 588, col: 30, offset: 21747},
										expr: &choiceExpr{
											pos: position{line: 588, col: 31, offset: 21748},
											alternatives: []interface{}{
												&ruleRefExpr{
													pos:  position{line: 588, col: 31, offset: 21748},
													name: "ListParagraph",
												},
												&ruleRefExpr{
													pos:  position{line: 588, col: 47, offset: 21764},
													name: "ContinuedDocumentElement",
												},
											},
										},
									},
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 590, col: 9, offset: 21978},
						run: (*parser).callonLabeledListItemDescription16,
						expr: &seqExpr{
							pos: position{line: 590, col: 9, offset: 21978},
							exprs: []interface{}{
								&zeroOrMoreExpr{
									pos: position{line: 590, col: 9, offset: 21978},
									expr: &choiceExpr{
										pos: position{line: 1306, col: 7, offset: 50454},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1306, col: 7, offset: 50454},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1306, col: 13, offset: 50460},
												run: (*parser).callonLabeledListItemDescription21,
												expr: &litMatcher{
													pos:        position{line: 1306, col: 13, offset: 50460},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 1314, col: 8, offset: 50552},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 1310, col: 12, offset: 50512},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 1310, col: 21, offset: 50521},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
										&notExpr{
											pos: position{line: 1312, col: 8, offset: 50541},
											expr: &anyMatcher{
												line: 1312, col: 9, offset: 50542,
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Paragraph",
			pos:  position{line: 615, col: 1, offset: 22731},
			expr: &choiceExpr{
				pos: position{line: 617, col: 5, offset: 22778},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 617, col: 5, offset: 22778},
						run: (*parser).callonParagraph2,
						expr: &seqExpr{
							pos: position{line: 617, col: 5, offset: 22778},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 617, col: 5, offset: 22778},
									expr: &seqExpr{
										pos: position{line: 617, col: 7, offset: 22780},
										exprs: []interface{}{
											&oneOrMoreExpr{
												pos: position{line: 617, col: 7, offset: 22780},
												expr: &litMatcher{
													pos:        position{line: 617, col: 7, offset: 22780},
													val:        "=",
													ignoreCase: false,
												},
											},
											&oneOrMoreExpr{
												pos: position{line: 617, col: 12, offset: 22785},
												expr: &choiceExpr{
													pos: position{line: 1306, col: 7, offset: 50454},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1306, col: 7, offset: 50454},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1306, col: 13, offset: 50460},
															run: (*parser).callonParagraph11,
															expr: &litMatcher{
																pos:        position{line: 1306, col: 13, offset: 50460},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 617, col: 16, offset: 22789},
												expr: &choiceExpr{
													pos: position{line: 1310, col: 12, offset: 50512},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1310, col: 12, offset: 50512},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1310, col: 21, offset: 50521},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 617, col: 26, offset: 22799},
									label: "t",
									expr: &choiceExpr{
										pos: position{line: 598, col: 19, offset: 22218},
										alternatives: []interface{}{
											&actionExpr{
												pos: position{line: 598, col: 19, offset: 22218},
												run: (*parser).callonParagraph19,
												expr: &litMatcher{
													pos:        position{line: 598, col: 19, offset: 22218},
													val:        "TIP",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 600, col: 9, offset: 22264},
												run: (*parser).callonParagraph21,
												expr: &litMatcher{
													pos:        position{line: 600, col: 9, offset: 22264},
													val:        "NOTE",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 602, col: 9, offset: 22312},
												run: (*parser).callonParagraph23,
												expr: &litMatcher{
													pos:        position{line: 602, col: 9, offset: 22312},
													val:        "IMPORTANT",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 604, col: 9, offset: 22370},
												run: (*parser).callonParagraph25,
												expr: &litMatcher{
													pos:        position{line: 604, col: 9, offset: 22370},
													val:        "WARNING",
													ignoreCase: false,
												},
											},
											&actionExpr{
												pos: position{line: 606, col: 9, offset: 22424},
												run: (*parser).callonParagraph27,
												expr: &litMatcher{
													pos:        position{line: 606, col: 9, offset: 22424},
													val:        "CAUTION",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 617, col: 45, offset: 22818},
									val:        ": ",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 617, col: 50, offset: 22823},
									label: "lines",
									expr: &oneOrMoreExpr{
										pos: position{line: 617, col: 56, offset: 22829},
										expr: &ruleRefExpr{
											pos:  position{line: 617, col: 57, offset: 22830},
											name: "InlineElements",
										},
									},
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 621, col: 5, offset: 23010},
						run: (*parser).callonParagraph33,
						expr: &seqExpr{
							pos: position{line: 621, col: 5, offset: 23010},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 621, col: 5, offset: 23010},
									expr: &seqExpr{
										pos: position{line: 621, col: 7, offset: 23012},
										exprs: []interface{}{
											&oneOrMoreExpr{
												pos: position{line: 621, col: 7, offset: 23012},
												expr: &litMatcher{
													pos:        position{line: 621, col: 7, offset: 23012},
													val:        "=",
													ignoreCase: false,
												},
											},
											&oneOrMoreExpr{
												pos: position{line: 621, col: 12, offset: 23017},
												expr: &choiceExpr{
													pos: position{line: 1306, col: 7, offset: 50454},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1306, col: 7, offset: 50454},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1306, col: 13, offset: 50460},
															run: (*parser).callonParagraph42,
															expr: &litMatcher{
																pos:        position{line: 1306, col: 13, offset: 50460},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&notExpr{
												pos: position{line: 621, col: 16, offset: 23021},
												expr: &choiceExpr{
													pos: position{line: 1310, col: 12, offset: 50512},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1310, col: 12, offset: 50512},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1310, col: 21, offset: 50521},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 621, col: 26, offset: 23031},
									label: "lines",
									expr: &oneOrMoreExpr{
										pos: position{line: 621, col: 32, offset: 23037},
										expr: &ruleRefExpr{
											pos:  position{line: 621, col: 33, offset: 23038},
											name: "InlineElements",
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "VerseParagraph",
			pos:  position{line: 625, col: 1, offset: 23119},
			expr: &actionExpr{
				pos: position{line: 626, col: 5, offset: 23142},
				run: (*parser).callonVerseParagraph1,
				expr: &seqExpr{
					pos: position{line: 626, col: 5, offset: 23142},
					exprs: []interface{}{
						&andCodeExpr{
							pos: position{line: 626, col: 5, offset: 23142},
							run: (*parser).callonVerseParagraph3,
						},
						&labeledExpr{
							pos:   position{line: 630, col: 5, offset: 23234},
							label: "verse",
							expr: &choiceExpr{
								pos: position{line: 632, col: 9, offset: 23283},
								alternatives: []interface{}{
									&actionExpr{
										pos: position{line: 632, col: 9, offset: 23283},
										run: (*parser).callonVerseParagraph6,
										expr: &seqExpr{
											pos: position{line: 632, col: 9, offset: 23283},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 632, col: 9, offset: 23283},
													expr: &seqExpr{
														pos: position{line: 632, col: 11, offset: 23285},
														exprs: []interface{}{
															&oneOrMoreExpr{
																pos: position{line: 632, col: 11, offset: 23285},
																expr: &litMatcher{
																	pos:        position{line: 632, col: 11, offset: 23285},
																	val:        "=",
																	ignoreCase: false,
																},
															},
															&oneOrMoreExpr{
																pos: position{line: 632, col: 16, offset: 23290},
																expr: &choiceExpr{
																	pos: position{line: 1306, col: 7, offset: 50454},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1306, col: 7, offset: 50454},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 1306, col: 13, offset: 50460},
																			run: (*parser).callonVerseParagraph15,
																			expr: &litMatcher{
																				pos:        position{line: 1306, col: 13, offset: 50460},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 632, col: 20, offset: 23294},
																expr: &choiceExpr{
																	pos: position{line: 1310, col: 12, offset: 50512},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1310, col: 12, offset: 50512},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1310, col: 21, offset: 50521},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 632, col: 30, offset: 23304},
													label: "t",
													expr: &choiceExpr{
														pos: position{line: 598, col: 19, offset: 22218},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 598, col: 19, offset: 22218},
																run: (*parser).callonVerseParagraph23,
																expr: &litMatcher{
																	pos:        position{line: 598, col: 19, offset: 22218},
																	val:        "TIP",
																	ignoreCase: false,
																},
															},
															&actionExpr{
																pos: position{line: 600, col: 9, offset: 22264},
																run: (*parser).callonVerseParagraph25,
																expr: &litMatcher{
																	pos:        position{line: 600, col: 9, offset: 22264},
																	val:        "NOTE",
																	ignoreCase: false,
																},
															},
															&actionExpr{
																pos: position{line: 602, col: 9, offset: 22312},
																run: (*parser).callonVerseParagraph27,
																expr: &litMatcher{
																	pos:        position{line: 602, col: 9, offset: 22312},
																	val:        "IMPORTANT",
																	ignoreCase: false,
																},
															},
															&actionExpr{
																pos: position{line: 604, col: 9, offset: 22370},
																run: (*parser).callonVerseParagraph29,
																expr: &litMatcher{
																	pos:        position{line: 604, col: 9, offset: 22370},
																	val:        "WARNING",
																	ignoreCase: false,
																},
															},
															&actionExpr{
																pos: position{line: 606, col: 9, offset: 22424},
																run: (*parser).callonVerseParagraph31,
																expr: &litMatcher{
																	pos:        position{line: 606, col: 9, offset: 22424},
																	val:        "CAUTION",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 632, col: 49, offset: 23323},
													val:        ": ",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 632, col: 54, offset: 23328},
													label: "lines",
													expr: &oneOrMoreExpr{
														pos: position{line: 632, col: 60, offset: 23334},
														expr: &ruleRefExpr{
															pos:  position{line: 632, col: 61, offset: 23335},
															name: "InlineElements",
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 636, col: 9, offset: 23531},
										run: (*parser).callonVerseParagraph37,
										expr: &seqExpr{
											pos: position{line: 636, col: 9, offset: 23531},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 636, col: 9, offset: 23531},
													expr: &seqExpr{
														pos: position{line: 636, col: 11, offset: 23533},
														exprs: []interface{}{
															&oneOrMoreExpr{
																pos: position{line: 636, col: 11, offset: 23533},
																expr: &litMatcher{
																	pos:        position{line: 636, col: 11, offset: 23533},
																	val:        "=",
																	ignoreCase: false,
																},
															},
															&oneOrMoreExpr{
																pos: position{line: 636, col: 16, offset: 23538},
																expr: &choiceExpr{
																	pos: position{line: 1306, col: 7, offset: 50454},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1306, col: 7, offset: 50454},
																			val:        " ",
																			ignoreCase: false,
																		},
																		&actionExpr{
																			pos: position{line: 1306, col: 13, offset: 50460},
																			run: (*parser).callonVerseParagraph46,
																			expr: &litMatcher{
																				pos:        position{line: 1306, col: 13, offset: 50460},
																				val:        "\t",
																				ignoreCase: false,
																			},
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 636, col: 20, offset: 23542},
																expr: &choiceExpr{
																	pos: position{line: 1310, col: 12, offset: 50512},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1310, col: 12, offset: 50512},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1310, col: 21, offset: 50521},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 636, col: 30, offset: 23552},
													label: "lines",
													expr: &oneOrMoreExpr{
														pos: position{line: 636, col: 36, offset: 23558},
														expr: &ruleRefExpr{
															pos:  position{line: 636, col: 37, offset: 23559},
															name: "InlineElements",
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&stateCodeExpr{
							pos: position{line: 639, col: 7, offset: 23657},
							run: (*parser).callonVerseParagraph55,
						},
					},
				},
			},
		},
		{
			name: "InlineElements",
			pos:  position{line: 646, col: 1, offset: 23749},
			expr: &actionExpr{
				pos: position{line: 646, col: 19, offset: 23767},
				run: (*parser).callonInlineElements1,
				expr: &seqExpr{
					pos: position{line: 646, col: 19, offset: 23767},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 646, col: 19, offset: 23767},
							expr: &actionExpr{
								pos: position{line: 1253, col: 14, offset: 49283},
								run: (*parser).callonInlineElements4,
								expr: &seqExpr{
									pos: position{line: 1253, col: 14, offset: 49283},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 1253, col: 14, offset: 49283},
											expr: &notExpr{
												pos: position{line: 1312, col: 8, offset: 50541},
												expr: &anyMatcher{
													line: 1312, col: 9, offset: 50542,
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 1253, col: 19, offset: 49288},
											expr: &choiceExpr{
												pos: position{line: 1306, col: 7, offset: 50454},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1306, col: 7, offset: 50454},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1306, col: 13, offset: 50460},
														run: (*parser).callonInlineElements12,
														expr: &litMatcher{
															pos:        position{line: 1306, col: 13, offset: 50460},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1314, col: 8, offset: 50552},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1310, col: 12, offset: 50512},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1310, col: 21, offset: 50521},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1312, col: 8, offset: 50541},
													expr: &anyMatcher{
														line: 1312, col: 9, offset: 50542,
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 647, col: 5, offset: 23783},
							label: "elements",
							expr: &choiceExpr{
								pos: position{line: 647, col: 15, offset: 23793},
								alternatives: []interface{}{
									&actionExpr{
										pos: position{line: 647, col: 15, offset: 23793},
										run: (*parser).callonInlineElements21,
										expr: &labeledExpr{
											pos:   position{line: 647, col: 15, offset: 23793},
											label: "comment",
											expr: &actionExpr{
												pos: position{line: 1163, col: 22, offset: 45968},
												run: (*parser).callonInlineElements23,
												expr: &seqExpr{
													pos: position{line: 1163, col: 22, offset: 45968},
													exprs: []interface{}{
														&notExpr{
															pos: position{line: 1163, col: 22, offset: 45968},
															expr: &litMatcher{
																pos:        position{line: 1151, col: 26, offset: 45573},
																val:        "////",
																ignoreCase: false,
															},
														},
														&litMatcher{
															pos:        position{line: 1163, col: 45, offset: 45991},
															val:        "//",
															ignoreCase: false,
														},
														&labeledExpr{
															pos:   position{line: 1163, col: 50, offset: 45996},
															label: "content",
															expr: &actionExpr{
																pos: position{line: 1167, col: 29, offset: 46124},
																run: (*parser).callonInlineElements29,
																expr: &zeroOrMoreExpr{
																	pos: position{line: 1167, col: 29, offset: 46124},
																	expr: &choiceExpr{
																		pos: position{line: 1167, col: 30, offset: 46125},
																		alternatives: []interface{}{
																			&actionExpr{
																				pos: position{line: 1264, col: 14, offset: 49515},
																				run: (*parser).callonInlineElements32,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 1264, col: 14, offset: 49515},
																					expr: &charClassMatcher{
																						pos:        position{line: 1264, col: 14, offset: 49515},
																						val:        "[a-zA-Z0-9]",
																						ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																				},
																			},
																			&actionExpr{
																				pos: position{line: 1278, col: 11, offset: 49909},
																				run: (*parser).callonInlineElements35,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 1278, col: 11, offset: 49909},
																					expr: &choiceExpr{
																						pos: position{line: 1306, col: 7, offset: 50454},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1306, col: 7, offset: 50454},
																								val:        " ",
																								ignoreCase: false,
																							},
																							&actionExpr{
																								pos: position{line: 1306, col: 13, offset: 50460},
																								run: (*parser).callonInlineElements39,
																								expr: &litMatcher{
																									pos:        position{line: 1306, col: 13, offset: 50460},
																									val:        "\t",
																									ignoreCase: false,
																								},
																							},
																						},
																					},
																				},
																			},
																			&actionExpr{
																				pos: position{line: 1167, col: 51, offset: 46146},
																				run: (*parser).callonInlineElements41,
																				expr: &seqExpr{
																					pos: position{line: 1167, col: 52, offset: 46147},
																					exprs: []interface{}{
																						&notExpr{
																							pos: position{line: 1167, col: 52, offset: 46147},
																							expr: &choiceExpr{
																								pos: position{line: 1314, col: 8, offset: 50552},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1310, col: 12, offset: 50512},
																										val:        "\r\n",
																										ignoreCase: false,
																									},
																									&charClassMatcher{
																										pos:        position{line: 1310, col: 21, offset: 50521},
																										val:        "[\\r\\n]",
																										chars:      []rune{'\r', '\n'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																									&notExpr{
																										pos: position{line: 1312, col: 8, offset: 50541},
																										expr: &anyMatcher{
																											line: 1312, col: 9, offset: 50542,
																										},
																									},
																								},
																							},
																						},
																						&anyMatcher{
																							line: 1167, col: 58, offset: 46153,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
														&choiceExpr{
															pos: position{line: 1314, col: 8, offset: 50552},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1310, col: 12, offset: 50512},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1310, col: 21, offset: 50521},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&notExpr{
																	pos: position{line: 1312, col: 8, offset: 50541},
																	expr: &anyMatcher{
																		line: 1312, col: 9, offset: 50542,
																	},
																},
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 649, col: 9, offset: 23894},
										run: (*parser).callonInlineElements55,
										expr: &seqExpr{
											pos: position{line: 649, col: 9, offset: 23894},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 649, col: 9, offset: 23894},
													expr: &choiceExpr{
														pos: position{line: 995, col: 19, offset: 39728},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1179, col: 26, offset: 46634},
																val:        "....",
																ignoreCase: false,
															},
															&seqExpr{
																pos: position{line: 1007, col: 25, offset: 40213},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1007, col: 25, offset: 40213},
																		val:        "```",
																		ignoreCase: false,
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 1007, col: 31, offset: 40219},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonInlineElements65,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&choiceExpr{
																		pos: position{line: 1314, col: 8, offset: 50552},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1310, col: 12, offset: 50512},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1310, col: 21, offset: 50521},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																			&notExpr{
																				pos: position{line: 1312, col: 8, offset: 50541},
																				expr: &anyMatcher{
																					line: 1312, col: 9, offset: 50542,
																				},
																			},
																		},
																	},
																},
															},
															&seqExpr{
																pos: position{line: 1018, col: 26, offset: 40692},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1018, col: 26, offset: 40692},
																		val:        "----",
																		ignoreCase: false,
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 1018, col: 33, offset: 40699},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonInlineElements77,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&choiceExpr{
																		pos: position{line: 1314, col: 8, offset: 50552},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1310, col: 12, offset: 50512},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1310, col: 21, offset: 50521},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																			&notExpr{
																				pos: position{line: 1312, col: 8, offset: 50541},
																				expr: &anyMatcher{
																					line: 1312, col: 9, offset: 50542,
																				},
																			},
																		},
																	},
																},
															},
															&seqExpr{
																pos: position{line: 1042, col: 26, offset: 41655},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1042, col: 26, offset: 41655},
																		val:        "====",
																		ignoreCase: false,
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 1042, col: 33, offset: 41662},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonInlineElements89,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&choiceExpr{
																		pos: position{line: 1314, col: 8, offset: 50552},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1310, col: 12, offset: 50512},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1310, col: 21, offset: 50521},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																			&notExpr{
																				pos: position{line: 1312, col: 8, offset: 50541},
																				expr: &anyMatcher{
																					line: 1312, col: 9, offset: 50542,
																				},
																			},
																		},
																	},
																},
															},
															&litMatcher{
																pos:        position{line: 1151, col: 26, offset: 45573},
																val:        "////",
																ignoreCase: false,
															},
															&seqExpr{
																pos: position{line: 1065, col: 24, offset: 42480},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1065, col: 24, offset: 42480},
																		val:        "____",
																		ignoreCase: false,
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 1065, col: 31, offset: 42487},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonInlineElements102,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&choiceExpr{
																		pos: position{line: 1314, col: 8, offset: 50552},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1310, col: 12, offset: 50512},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1310, col: 21, offset: 50521},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																			&notExpr{
																				pos: position{line: 1312, col: 8, offset: 50541},
																				expr: &anyMatcher{
																					line: 1312, col: 9, offset: 50542,
																				},
																			},
																		},
																	},
																},
															},
															&seqExpr{
																pos: position{line: 1109, col: 26, offset: 44081},
																exprs: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1109, col: 26, offset: 44081},
																		val:        "****",
																		ignoreCase: false,
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 1109, col: 33, offset: 44088},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonInlineElements114,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&choiceExpr{
																		pos: position{line: 1314, col: 8, offset: 50552},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1310, col: 12, offset: 50512},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1310, col: 21, offset: 50521},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																			&notExpr{
																				pos: position{line: 1312, col: 8, offset: 50541},
																				expr: &anyMatcher{
																					line: 1312, col: 9, offset: 50542,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 649, col: 25, offset: 23910},
													label: "elements",
													expr: &oneOrMoreExpr{
														pos: position{line: 649, col: 34, offset: 23919},
														expr: &ruleRefExpr{
															pos:  position{line: 649, col: 35, offset: 23920},
															name: "InlineElement",
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 649, col: 51, offset: 23936},
													label: "linebreak",
													expr: &zeroOrOneExpr{
														pos: position{line: 649, col: 61, offset: 23946},
														expr: &actionExpr{
															pos: position{line: 697, col: 14, offset: 25447},
															run: (*parser).callonInlineElements126,
															expr: &seqExpr{
																pos: position{line: 697, col: 14, offset: 25447},
																exprs: []interface{}{
																	&choiceExpr{
																		pos: position{line: 1306, col: 7, offset: 50454},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1306, col: 7, offset: 50454},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1306, col: 13, offset: 50460},
																				run: (*parser).callonInlineElements130,
																				expr: &litMatcher{
																					pos:        position{line: 1306, col: 13, offset: 50460},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																	&litMatcher{
																		pos:        position{line: 697, col: 17, offset: 25450},
																		val:        "+",
																		ignoreCase: false,
																	},
																	&zeroOrMoreExpr{
																		pos: position{line: 697, col: 21, offset: 25454},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonInlineElements136,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																	&andExpr{
																		pos: position{line: 697, col: 25, offset: 25458},
																		expr: &choiceExpr{
																			pos: position{line: 1314, col: 8, offset: 50552},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1310, col: 12, offset: 50512},
																					val:        "\r\n",
																					ignoreCase: false,
																				},
																				&charClassMatcher{
																					pos:        position{line: 1310, col: 21, offset: 50521},
																					val:        "[\\r\\n]",
																					chars:      []rune{'\r', '\n'},
																					ignoreCase: false,
																					inverted:   false,
																				},
																				&notExpr{
																					pos: position{line: 1312, col: 8, offset: 50541},
																					expr: &anyMatcher{
																						line: 1312, col: 9, offset: 50542,
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1314, col: 8, offset: 50552},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1310, col: 12, offset: 50512},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1310, col: 21, offset: 50521},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1312, col: 8, offset: 50541},
															expr: &anyMatcher{
																line: 1312, col: 9, offset: 50542,
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "InlineElement",
			pos:  position{line: 655, col: 1, offset: 24095},
			expr: &actionExpr{
				pos: position{line: 655, col: 18, offset: 24112},
				run: (*parser).callonInlineElement1,
				expr: &seqExpr{
					pos: position{line: 655, col: 18, offset: 24112},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 655, col: 18, offset: 24112},
							expr: &choiceExpr{
								pos: position{line: 1314, col: 8, offset: 50552},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1310, col: 12, offset: 50512},
										val:        "\r\n",
										ignoreCase: false,
									},
									&charClassMatcher{
										pos:        position{line: 1310, col: 21, offset: 50521},
										val:        "[\\r\\n]",
										chars:      []rune{'\r', '\n'},
										ignoreCase: false,
										inverted:   false,
									},
									&notExpr{
										pos: position{line: 1312, col: 8, offset: 50541},
										expr: &anyMatcher{
											line: 1312, col: 9, offset: 50542,
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 655, col: 23, offset: 24117},
							expr: &actionExpr{
								pos: position{line: 697, col: 14, offset: 25447},
								run: (*parser).callonInlineElement10,
								expr: &seqExpr{
									pos: position{line: 697, col: 14, offset: 25447},
									exprs: []interface{}{
										&choiceExpr{
											pos: position{line: 1306, col: 7, offset: 50454},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1306, col: 7, offset: 50454},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1306, col: 13, offset: 50460},
													run: (*parser).callonInlineElement14,
													expr: &litMatcher{
														pos:        position{line: 1306, col: 13, offset: 50460},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 697, col: 17, offset: 25450},
											val:        "+",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 697, col: 21, offset: 25454},
											expr: &choiceExpr{
												pos: position{line: 1306, col: 7, offset: 50454},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1306, col: 7, offset: 50454},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1306, col: 13, offset: 50460},
														run: (*parser).callonInlineElement20,
														expr: &litMatcher{
															pos:        position{line: 1306, col: 13, offset: 50460},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&andExpr{
											pos: position{line: 697, col: 25, offset: 25458},
											expr: &choiceExpr{
												pos: position{line: 1314, col: 8, offset: 50552},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1310, col: 12, offset: 50512},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1310, col: 21, offset: 50521},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1312, col: 8, offset: 50541},
														expr: &anyMatcher{
															line: 1312, col: 9, offset: 50542,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 656, col: 5, offset: 24133},
							label: "element",
							expr: &choiceExpr{
								pos: position{line: 656, col: 14, offset: 24142},
								alternatives: []interface{}{
									&actionExpr{
										pos: position{line: 1278, col: 11, offset: 49909},
										run: (*parser).callonInlineElement30,
										expr: &oneOrMoreExpr{
											pos: position{line: 1278, col: 11, offset: 49909},
											expr: &choiceExpr{
												pos: position{line: 1306, col: 7, offset: 50454},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1306, col: 7, offset: 50454},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1306, col: 13, offset: 50460},
														run: (*parser).callonInlineElement34,
														expr: &litMatcher{
															pos:        position{line: 1306, col: 13, offset: 50460},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 1268, col: 8, offset: 49571},
										run: (*parser).callonInlineElement36,
										expr: &litMatcher{
											pos:        position{line: 1268, col: 8, offset: 49571},
											val:        ".",
											ignoreCase: false,
										},
									},
									&actionExpr{
										pos: position{line: 934, col: 16, offset: 37105},
										run: (*parser).callonInlineElement38,
										expr: &seqExpr{
											pos: position{line: 934, col: 16, offset: 37105},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 934, col: 16, offset: 37105},
													val:        "image:",
													ignoreCase: false,
												},
												&notExpr{
													pos: position{line: 934, col: 25, offset: 37114},
													expr: &litMatcher{
														pos:        position{line: 934, col: 26, offset: 37115},
														val:        ":",
														ignoreCase: false,
													},
												},
												&labeledExpr{
													pos:   position{line: 934, col: 30, offset: 37119},
													label: "path",
													expr: &actionExpr{
														pos: position{line: 1282, col: 8, offset: 49956},
														run: (*parser).callonInlineElement44,
														expr: &oneOrMoreExpr{
															pos: position{line: 1282, col: 8, offset: 49956},
															expr: &choiceExpr{
																pos: position{line: 1282, col: 9, offset: 49957},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 1264, col: 14, offset: 49515},
																		run: (*parser).callonInlineElement47,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1264, col: 14, offset: 49515},
																			expr: &charClassMatcher{
																				pos:        position{line: 1264, col: 14, offset: 49515},
																				val:        "[a-zA-Z0-9]",
																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 1282, col: 21, offset: 49969},
																		run: (*parser).callonInlineElement50,
																		expr: &seqExpr{
																			pos: position{line: 1282, col: 22, offset: 49970},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 1282, col: 22, offset: 49970},
																					expr: &choiceExpr{
																						pos: position{line: 1310, col: 12, offset: 50512},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1310, col: 12, offset: 50512},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 1310, col: 21, offset: 50521},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1282, col: 31, offset: 49979},
																					expr: &choiceExpr{
																						pos: position{line: 1306, col: 7, offset: 50454},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1306, col: 7, offset: 50454},
																								val:        " ",
																								ignoreCase: false,
																							},
																							&actionExpr{
																								pos: position{line: 1306, col: 13, offset: 50460},
																								run: (*parser).callonInlineElement59,
																								expr: &litMatcher{
																									pos:        position{line: 1306, col: 13, offset: 50460},
																									val:        "\t",
																									ignoreCase: false,
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1282, col: 35, offset: 49983},
																					expr: &litMatcher{
																						pos:        position{line: 1282, col: 36, offset: 49984},
																						val:        "[",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1282, col: 40, offset: 49988},
																					expr: &litMatcher{
																						pos:        position{line: 1282, col: 41, offset: 49989},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 1282, col: 46, offset: 49994,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 934, col: 41, offset: 37130},
													label: "inlineAttributes",
													expr: &choiceExpr{
														pos: position{line: 939, col: 20, offset: 37387},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 939, col: 20, offset: 37387},
																run: (*parser).callonInlineElement68,
																expr: &seqExpr{
																	pos: position{line: 939, col: 20, offset: 37387},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 939, col: 20, offset: 37387},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 939, col: 24, offset: 37391},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 956, col: 19, offset: 38110},
																				run: (*parser).callonInlineElement72,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 956, col: 19, offset: 38110},
																					expr: &choiceExpr{
																						pos: position{line: 956, col: 20, offset: 38111},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								run: (*parser).callonInlineElement75,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1264, col: 14, offset: 49515},
																									expr: &charClassMatcher{
																										pos:        position{line: 1264, col: 14, offset: 49515},
																										val:        "[a-zA-Z0-9]",
																										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								run: (*parser).callonInlineElement78,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1278, col: 11, offset: 49909},
																									expr: &choiceExpr{
																										pos: position{line: 1306, col: 7, offset: 50454},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1306, col: 7, offset: 50454},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1306, col: 13, offset: 50460},
																												run: (*parser).callonInlineElement82,
																												expr: &litMatcher{
																													pos:        position{line: 1306, col: 13, offset: 50460},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 956, col: 41, offset: 38132},
																								run: (*parser).callonInlineElement84,
																								expr: &seqExpr{
																									pos: position{line: 956, col: 42, offset: 38133},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 956, col: 42, offset: 38133},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 43, offset: 38134},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 956, col: 47, offset: 38138},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 48, offset: 38139},
																												val:        "=",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 956, col: 52, offset: 38143},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 53, offset: 38144},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 956, col: 57, offset: 38148,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 939, col: 45, offset: 37412},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 940, col: 5, offset: 37420},
																			label: "width",
																			expr: &actionExpr{
																				pos: position{line: 956, col: 19, offset: 38110},
																				run: (*parser).callonInlineElement95,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 956, col: 19, offset: 38110},
																					expr: &choiceExpr{
																						pos: position{line: 956, col: 20, offset: 38111},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								run: (*parser).callonInlineElement98,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1264, col: 14, offset: 49515},
																									expr: &charClassMatcher{
																										pos:        position{line: 1264, col: 14, offset: 49515},
																										val:        "[a-zA-Z0-9]",
																										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								run: (*parser).callonInlineElement101,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1278, col: 11, offset: 49909},
																									expr: &choiceExpr{
																										pos: position{line: 1306, col: 7, offset: 50454},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1306, col: 7, offset: 50454},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1306, col: 13, offset: 50460},
																												run: (*parser).callonInlineElement105,
																												expr: &litMatcher{
																													pos:        position{line: 1306, col: 13, offset: 50460},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 956, col: 41, offset: 38132},
																								run: (*parser).callonInlineElement107,
																								expr: &seqExpr{
																									pos: position{line: 956, col: 42, offset: 38133},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 956, col: 42, offset: 38133},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 43, offset: 38134},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 956, col: 47, offset: 38138},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 48, offset: 38139},
																												val:        "=",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 956, col: 52, offset: 38143},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 53, offset: 38144},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 956, col: 57, offset: 38148,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 940, col: 29, offset: 37444},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 941, col: 5, offset: 37452},
																			label: "height",
																			expr: &actionExpr{
																				pos: position{line: 956, col: 19, offset: 38110},
																				run: (*parser).callonInlineElement118,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 956, col: 19, offset: 38110},
																					expr: &choiceExpr{
																						pos: position{line: 956, col: 20, offset: 38111},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								run: (*parser).callonInlineElement121,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1264, col: 14, offset: 49515},
																									expr: &charClassMatcher{
																										pos:        position{line: 1264, col: 14, offset: 49515},
																										val:        "[a-zA-Z0-9]",
																										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								run: (*parser).callonInlineElement124,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1278, col: 11, offset: 49909},
																									expr: &choiceExpr{
																										pos: position{line: 1306, col: 7, offset: 50454},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1306, col: 7, offset: 50454},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1306, col: 13, offset: 50460},
																												run: (*parser).callonInlineElement128,
																												expr: &litMatcher{
																													pos:        position{line: 1306, col: 13, offset: 50460},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 956, col: 41, offset: 38132},
																								run: (*parser).callonInlineElement130,
																								expr: &seqExpr{
																									pos: position{line: 956, col: 42, offset: 38133},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 956, col: 42, offset: 38133},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 43, offset: 38134},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 956, col: 47, offset: 38138},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 48, offset: 38139},
																												val:        "=",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 956, col: 52, offset: 38143},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 53, offset: 38144},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 956, col: 57, offset: 38148,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 941, col: 29, offset: 37476},
																			expr: &litMatcher{
																				pos:        position{line: 941, col: 29, offset: 37476},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 942, col: 5, offset: 37485},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 942, col: 16, offset: 37496},
																				expr: &choiceExpr{
																					pos: position{line: 225, col: 21, offset: 7971},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							run: (*parser).callonInlineElement144,
																							expr: &seqExpr{
																								pos: position{line: 225, col: 21, offset: 7971},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 225, col: 21, offset: 7971},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonInlineElement147,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonInlineElement150,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonInlineElement153,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1229, col: 16, offset: 48642},
																															run: (*parser).callonInlineElement156,
																															expr: &litMatcher{
																																pos:        position{line: 1229, col: 16, offset: 48642},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		run: (*parser).callonInlineElement161,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1264, col: 14, offset: 49515},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1264, col: 14, offset: 49515},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		run: (*parser).callonInlineElement164,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1278, col: 11, offset: 49909},
																																			expr: &choiceExpr{
																																				pos: position{line: 1306, col: 7, offset: 50454},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1306, col: 7, offset: 50454},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1306, col: 13, offset: 50460},
																																						run: (*parser).callonInlineElement168,
																																						expr: &litMatcher{
																																							pos:        position{line: 1306, col: 13, offset: 50460},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonInlineElement170,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 225, col: 40, offset: 7990},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 225, col: 44, offset: 7994},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 237, col: 19, offset: 8403},
																											run: (*parser).callonInlineElement181,
																											expr: &labeledExpr{
																												pos:   position{line: 237, col: 19, offset: 8403},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 237, col: 25, offset: 8409},
																													expr: &choiceExpr{
																														pos: position{line: 237, col: 26, offset: 8410},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1264, col: 14, offset: 49515},
																																run: (*parser).callonInlineElement185,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1264, col: 14, offset: 49515},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1264, col: 14, offset: 49515},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1278, col: 11, offset: 49909},
																																run: (*parser).callonInlineElement188,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1278, col: 11, offset: 49909},
																																	expr: &choiceExpr{
																																		pos: position{line: 1306, col: 7, offset: 50454},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1306, col: 7, offset: 50454},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1306, col: 13, offset: 50460},
																																				run: (*parser).callonInlineElement192,
																																				expr: &litMatcher{
																																					pos:        position{line: 1306, col: 13, offset: 50460},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 237, col: 47, offset: 8431},
																																run: (*parser).callonInlineElement194,
																																expr: &seqExpr{
																																	pos: position{line: 237, col: 48, offset: 8432},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 237, col: 48, offset: 8432},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 49, offset: 8433},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 53, offset: 8437},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 54, offset: 8438},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 58, offset: 8442},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 59, offset: 8443},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 237, col: 64, offset: 8448,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 225, col: 67, offset: 8017},
																										expr: &litMatcher{
																											pos:        position{line: 225, col: 67, offset: 8017},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 225, col: 72, offset: 8022},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonInlineElement208,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 227, col: 5, offset: 8106},
																							run: (*parser).callonInlineElement210,
																							expr: &seqExpr{
																								pos: position{line: 227, col: 5, offset: 8106},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 227, col: 5, offset: 8106},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonInlineElement213,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonInlineElement216,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonInlineElement219,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1229, col: 16, offset: 48642},
																															run: (*parser).callonInlineElement222,
																															expr: &litMatcher{
																																pos:        position{line: 1229, col: 16, offset: 48642},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		run: (*parser).callonInlineElement227,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1264, col: 14, offset: 49515},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1264, col: 14, offset: 49515},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		run: (*parser).callonInlineElement230,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1278, col: 11, offset: 49909},
																																			expr: &choiceExpr{
																																				pos: position{line: 1306, col: 7, offset: 50454},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1306, col: 7, offset: 50454},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1306, col: 13, offset: 50460},
																																						run: (*parser).callonInlineElement234,
																																						expr: &litMatcher{
																																							pos:        position{line: 1306, col: 13, offset: 50460},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonInlineElement236,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 227, col: 24, offset: 8125},
																										expr: &litMatcher{
																											pos:        position{line: 227, col: 24, offset: 8125},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 227, col: 29, offset: 8130},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonInlineElement250,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 942, col: 36, offset: 37516},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 944, col: 5, offset: 37614},
																run: (*parser).callonInlineElement253,
																expr: &seqExpr{
																	pos: position{line: 944, col: 5, offset: 37614},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 944, col: 5, offset: 37614},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 944, col: 9, offset: 37618},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 956, col: 19, offset: 38110},
																				run: (*parser).callonInlineElement257,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 956, col: 19, offset: 38110},
																					expr: &choiceExpr{
																						pos: position{line: 956, col: 20, offset: 38111},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								run: (*parser).callonInlineElement260,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1264, col: 14, offset: 49515},
																									expr: &charClassMatcher{
																										pos:        position{line: 1264, col: 14, offset: 49515},
																										val:        "[a-zA-Z0-9]",
																										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								run: (*parser).callonInlineElement263,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1278, col: 11, offset: 49909},
																									expr: &choiceExpr{
																										pos: position{line: 1306, col: 7, offset: 50454},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1306, col: 7, offset: 50454},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1306, col: 13, offset: 50460},
																												run: (*parser).callonInlineElement267,
																												expr: &litMatcher{
																													pos:        position{line: 1306, col: 13, offset: 50460},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 956, col: 41, offset: 38132},
																								run: (*parser).callonInlineElement269,
																								expr: &seqExpr{
																									pos: position{line: 956, col: 42, offset: 38133},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 956, col: 42, offset: 38133},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 43, offset: 38134},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 956, col: 47, offset: 38138},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 48, offset: 38139},
																												val:        "=",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 956, col: 52, offset: 38143},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 53, offset: 38144},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 956, col: 57, offset: 38148,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 944, col: 30, offset: 37639},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 945, col: 5, offset: 37647},
																			label: "width",
																			expr: &actionExpr{
																				pos: position{line: 956, col: 19, offset: 38110},
																				run: (*parser).callonInlineElement280,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 956, col: 19, offset: 38110},
																					expr: &choiceExpr{
																						pos: position{line: 956, col: 20, offset: 38111},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								run: (*parser).callonInlineElement283,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1264, col: 14, offset: 49515},
																									expr: &charClassMatcher{
																										pos:        position{line: 1264, col: 14, offset: 49515},
																										val:        "[a-zA-Z0-9]",
																										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								run: (*parser).callonInlineElement286,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1278, col: 11, offset: 49909},
																									expr: &choiceExpr{
																										pos: position{line: 1306, col: 7, offset: 50454},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1306, col: 7, offset: 50454},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1306, col: 13, offset: 50460},
																												run: (*parser).callonInlineElement290,
																												expr: &litMatcher{
																													pos:        position{line: 1306, col: 13, offset: 50460},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 956, col: 41, offset: 38132},
																								run: (*parser).callonInlineElement292,
																								expr: &seqExpr{
																									pos: position{line: 956, col: 42, offset: 38133},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 956, col: 42, offset: 38133},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 43, offset: 38134},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 956, col: 47, offset: 38138},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 48, offset: 38139},
																												val:        "=",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 956, col: 52, offset: 38143},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 53, offset: 38144},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 956, col: 57, offset: 38148,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 945, col: 28, offset: 37670},
																			expr: &litMatcher{
																				pos:        position{line: 945, col: 28, offset: 37670},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 946, col: 5, offset: 37679},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 946, col: 16, offset: 37690},
																				expr: &choiceExpr{
																					pos: position{line: 225, col: 21, offset: 7971},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							run: (*parser).callonInlineElement306,
																							expr: &seqExpr{
																								pos: position{line: 225, col: 21, offset: 7971},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 225, col: 21, offset: 7971},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonInlineElement309,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonInlineElement312,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonInlineElement315,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1229, col: 16, offset: 48642},
																															run: (*parser).callonInlineElement318,
																															expr: &litMatcher{
																																pos:        position{line: 1229, col: 16, offset: 48642},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		run: (*parser).callonInlineElement323,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1264, col: 14, offset: 49515},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1264, col: 14, offset: 49515},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		run: (*parser).callonInlineElement326,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1278, col: 11, offset: 49909},
																																			expr: &choiceExpr{
																																				pos: position{line: 1306, col: 7, offset: 50454},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1306, col: 7, offset: 50454},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1306, col: 13, offset: 50460},
																																						run: (*parser).callonInlineElement330,
																																						expr: &litMatcher{
																																							pos:        position{line: 1306, col: 13, offset: 50460},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonInlineElement332,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 225, col: 40, offset: 7990},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 225, col: 44, offset: 7994},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 237, col: 19, offset: 8403},
																											run: (*parser).callonInlineElement343,
																											expr: &labeledExpr{
																												pos:   position{line: 237, col: 19, offset: 8403},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 237, col: 25, offset: 8409},
																													expr: &choiceExpr{
																														pos: position{line: 237, col: 26, offset: 8410},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1264, col: 14, offset: 49515},
																																run: (*parser).callonInlineElement347,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1264, col: 14, offset: 49515},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1264, col: 14, offset: 49515},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1278, col: 11, offset: 49909},
																																run: (*parser).callonInlineElement350,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1278, col: 11, offset: 49909},
																																	expr: &choiceExpr{
																																		pos: position{line: 1306, col: 7, offset: 50454},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1306, col: 7, offset: 50454},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1306, col: 13, offset: 50460},
																																				run: (*parser).callonInlineElement354,
																																				expr: &litMatcher{
																																					pos:        position{line: 1306, col: 13, offset: 50460},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 237, col: 47, offset: 8431},
																																run: (*parser).callonInlineElement356,
																																expr: &seqExpr{
																																	pos: position{line: 237, col: 48, offset: 8432},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 237, col: 48, offset: 8432},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 49, offset: 8433},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 53, offset: 8437},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 54, offset: 8438},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 58, offset: 8442},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 59, offset: 8443},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 237, col: 64, offset: 8448,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 225, col: 67, offset: 8017},
																										expr: &litMatcher{
																											pos:        position{line: 225, col: 67, offset: 8017},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 225, col: 72, offset: 8022},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonInlineElement370,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 227, col: 5, offset: 8106},
																							run: (*parser).callonInlineElement372,
																							expr: &seqExpr{
																								pos: position{line: 227, col: 5, offset: 8106},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 227, col: 5, offset: 8106},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonInlineElement375,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonInlineElement378,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonInlineElement381,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1229, col: 16, offset: 48642},
																															run: (*parser).callonInlineElement384,
																															expr: &litMatcher{
																																pos:        position{line: 1229, col: 16, offset: 48642},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		run: (*parser).callonInlineElement389,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1264, col: 14, offset: 49515},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1264, col: 14, offset: 49515},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		run: (*parser).callonInlineElement392,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1278, col: 11, offset: 49909},
																																			expr: &choiceExpr{
																																				pos: position{line: 1306, col: 7, offset: 50454},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1306, col: 7, offset: 50454},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1306, col: 13, offset: 50460},
																																						run: (*parser).callonInlineElement396,
																																						expr: &litMatcher{
																																							pos:        position{line: 1306, col: 13, offset: 50460},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonInlineElement398,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 227, col: 24, offset: 8125},
																										expr: &litMatcher{
																											pos:        position{line: 227, col: 24, offset: 8125},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 227, col: 29, offset: 8130},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonInlineElement412,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 946, col: 36, offset: 37710},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 948, col: 5, offset: 37805},
																run: (*parser).callonInlineElement415,
																expr: &seqExpr{
																	pos: position{line: 948, col: 5, offset: 37805},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 948, col: 5, offset: 37805},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 948, col: 9, offset: 37809},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 956, col: 19, offset: 38110},
																				run: (*parser).callonInlineElement419,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 956, col: 19, offset: 38110},
																					expr: &choiceExpr{
																						pos: position{line: 956, col: 20, offset: 38111},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								run: (*parser).callonInlineElement422,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1264, col: 14, offset: 49515},
																									expr: &charClassMatcher{
																										pos:        position{line: 1264, col: 14, offset: 49515},
																										val:        "[a-zA-Z0-9]",
																										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								run: (*parser).callonInlineElement425,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1278, col: 11, offset: 49909},
																									expr: &choiceExpr{
																										pos: position{line: 1306, col: 7, offset: 50454},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1306, col: 7, offset: 50454},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1306, col: 13, offset: 50460},
																												run: (*parser).callonInlineElement429,
																												expr: &litMatcher{
																													pos:        position{line: 1306, col: 13, offset: 50460},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 956, col: 41, offset: 38132},
																								run: (*parser).callonInlineElement431,
																								expr: &seqExpr{
																									pos: position{line: 956, col: 42, offset: 38133},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 956, col: 42, offset: 38133},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 43, offset: 38134},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 956, col: 47, offset: 38138},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 48, offset: 38139},
																												val:        "=",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 956, col: 52, offset: 38143},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 53, offset: 38144},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 956, col: 57, offset: 38148,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 948, col: 30, offset: 37830},
																			expr: &litMatcher{
																				pos:        position{line: 948, col: 30, offset: 37830},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 949, col: 5, offset: 37839},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 949, col: 16, offset: 37850},
																				expr: &choiceExpr{
																					pos: position{line: 225, col: 21, offset: 7971},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							run: (*parser).callonInlineElement445,
																							expr: &seqExpr{
																								pos: position{line: 225, col: 21, offset: 7971},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 225, col: 21, offset: 7971},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonInlineElement448,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonInlineElement451,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonInlineElement454,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1229, col: 16, offset: 48642},
																															run: (*parser).callonInlineElement457,
																															expr: &litMatcher{
																																pos:        position{line: 1229, col: 16, offset: 48642},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		run: (*parser).callonInlineElement462,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1264, col: 14, offset: 49515},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1264, col: 14, offset: 49515},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		run: (*parser).callonInlineElement465,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1278, col: 11, offset: 49909},
																																			expr: &choiceExpr{
																																				pos: position{line: 1306, col: 7, offset: 50454},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1306, col: 7, offset: 50454},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1306, col: 13, offset: 50460},
																																						run: (*parser).callonInlineElement469,
																																						expr: &litMatcher{
																																							pos:        position{line: 1306, col: 13, offset: 50460},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonInlineElement471,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 225, col: 40, offset: 7990},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 225, col: 44, offset: 7994},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 237, col: 19, offset: 8403},
																											run: (*parser).callonInlineElement482,
																											expr: &labeledExpr{
																												pos:   position{line: 237, col: 19, offset: 8403},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 237, col: 25, offset: 8409},
																													expr: &choiceExpr{
																														pos: position{line: 237, col: 26, offset: 8410},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1264, col: 14, offset: 49515},
																																run: (*parser).callonInlineElement486,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1264, col: 14, offset: 49515},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1264, col: 14, offset: 49515},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1278, col: 11, offset: 49909},
																																run: (*parser).callonInlineElement489,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1278, col: 11, offset: 49909},
																																	expr: &choiceExpr{
																																		pos: position{line: 1306, col: 7, offset: 50454},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1306, col: 7, offset: 50454},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1306, col: 13, offset: 50460},
																																				run: (*parser).callonInlineElement493,
																																				expr: &litMatcher{
																																					pos:        position{line: 1306, col: 13, offset: 50460},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 237, col: 47, offset: 8431},
																																run: (*parser).callonInlineElement495,
																																expr: &seqExpr{
																																	pos: position{line: 237, col: 48, offset: 8432},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 237, col: 48, offset: 8432},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 49, offset: 8433},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 53, offset: 8437},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 54, offset: 8438},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 58, offset: 8442},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 59, offset: 8443},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 237, col: 64, offset: 8448,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 225, col: 67, offset: 8017},
																										expr: &litMatcher{
																											pos:        position{line: 225, col: 67, offset: 8017},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 225, col: 72, offset: 8022},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonInlineElement509,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 227, col: 5, offset: 8106},
																							run: (*parser).callonInlineElement511,
																							expr: &seqExpr{
																								pos: position{line: 227, col: 5, offset: 8106},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 227, col: 5, offset: 8106},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonInlineElement514,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonInlineElement517,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonInlineElement520,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1229, col: 16, offset: 48642},
																															run: (*parser).callonInlineElement523,
																															expr: &litMatcher{
																																pos:        position{line: 1229, col: 16, offset: 48642},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		run: (*parser).callonInlineElement528,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1264, col: 14, offset: 49515},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1264, col: 14, offset: 49515},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		run: (*parser).callonInlineElement531,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1278, col: 11, offset: 49909},
																																			expr: &choiceExpr{
																																				pos: position{line: 1306, col: 7, offset: 50454},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1306, col: 7, offset: 50454},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1306, col: 13, offset: 50460},
																																						run: (*parser).callonInlineElement535,
																																						expr: &litMatcher{
																																							pos:        position{line: 1306, col: 13, offset: 50460},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonInlineElement537,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 227, col: 24, offset: 8125},
																										expr: &litMatcher{
																											pos:        position{line: 227, col: 24, offset: 8125},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 227, col: 29, offset: 8130},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonInlineElement551,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 949, col: 36, offset: 37870},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 951, col: 5, offset: 37963},
																run: (*parser).callonInlineElement554,
																expr: &seqExpr{
																	pos: position{line: 951, col: 5, offset: 37963},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 951, col: 5, offset: 37963},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 951, col: 9, offset: 37967},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 951, col: 20, offset: 37978},
																				expr: &choiceExpr{
																					pos: position{line: 225, col: 21, offset: 7971},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							run: (*parser).callonInlineElement560,
																							expr: &seqExpr{
																								pos: position{line: 225, col: 21, offset: 7971},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 225, col: 21, offset: 7971},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonInlineElement563,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonInlineElement566,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonInlineElement569,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1229, col: 16, offset: 48642},
																															run: (*parser).callonInlineElement572,
																															expr: &litMatcher{
																																pos:        position{line: 1229, col: 16, offset: 48642},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		run: (*parser).callonInlineElement577,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1264, col: 14, offset: 49515},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1264, col: 14, offset: 49515},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		run: (*parser).callonInlineElement580,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1278, col: 11, offset: 49909},
																																			expr: &choiceExpr{
																																				pos: position{line: 1306, col: 7, offset: 50454},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1306, col: 7, offset: 50454},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1306, col: 13, offset: 50460},
																																						run: (*parser).callonInlineElement584,
																																						expr: &litMatcher{
																																							pos:        position{line: 1306, col: 13, offset: 50460},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonInlineElement586,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 225, col: 40, offset: 7990},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 225, col: 44, offset: 7994},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 237, col: 19, offset: 8403},
																											run: (*parser).callonInlineElement597,
																											expr: &labeledExpr{
																												pos:   position{line: 237, col: 19, offset: 8403},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 237, col: 25, offset: 8409},
																													expr: &choiceExpr{
																														pos: position{line: 237, col: 26, offset: 8410},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1264, col: 14, offset: 49515},
																																run: (*parser).callonInlineElement601,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1264, col: 14, offset: 49515},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1264, col: 14, offset: 49515},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1278, col: 11, offset: 49909},
																																run: (*parser).callonInlineElement604,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1278, col: 11, offset: 49909},
																																	expr: &choiceExpr{
																																		pos: position{line: 1306, col: 7, offset: 50454},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1306, col: 7, offset: 50454},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1306, col: 13, offset: 50460},
																																				run: (*parser).callonInlineElement608,
																																				expr: &litMatcher{
																																					pos:        position{line: 1306, col: 13, offset: 50460},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 237, col: 47, offset: 8431},
																																run: (*parser).callonInlineElement610,
																																expr: &seqExpr{
																																	pos: position{line: 237, col: 48, offset: 8432},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 237, col: 48, offset: 8432},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 49, offset: 8433},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 53, offset: 8437},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 54, offset: 8438},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 58, offset: 8442},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 59, offset: 8443},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 237, col: 64, offset: 8448,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 225, col: 67, offset: 8017},
																										expr: &litMatcher{
																											pos:        position{line: 225, col: 67, offset: 8017},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 225, col: 72, offset: 8022},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonInlineElement624,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 227, col: 5, offset: 8106},
																							run: (*parser).callonInlineElement626,
																							expr: &seqExpr{
																								pos: position{line: 227, col: 5, offset: 8106},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 227, col: 5, offset: 8106},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonInlineElement629,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonInlineElement632,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonInlineElement635,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1229, col: 16, offset: 48642},
																															run: (*parser).callonInlineElement638,
																															expr: &litMatcher{
																																pos:        position{line: 1229, col: 16, offset: 48642},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		run: (*parser).callonInlineElement643,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1264, col: 14, offset: 49515},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1264, col: 14, offset: 49515},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		run: (*parser).callonInlineElement646,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1278, col: 11, offset: 49909},
																																			expr: &choiceExpr{
																																				pos: position{line: 1306, col: 7, offset: 50454},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1306, col: 7, offset: 50454},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1306, col: 13, offset: 50460},
																																						run: (*parser).callonInlineElement650,
																																						expr: &litMatcher{
																																							pos:        position{line: 1306, col: 13, offset: 50460},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonInlineElement652,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 227, col: 24, offset: 8125},
																										expr: &litMatcher{
																											pos:        position{line: 227, col: 24, offset: 8125},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 227, col: 29, offset: 8130},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonInlineElement666,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 951, col: 40, offset: 37998},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 892, col: 9, offset: 35701},
										run: (*parser).callonInlineElement669,
										expr: &labeledExpr{
											pos:   position{line: 892, col: 9, offset: 35701},
											label: "link",
											expr: &choiceExpr{
												pos: position{line: 892, col: 15, offset: 35707},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 907, col: 17, offset: 36159},
														run: (*parser).callonInlineElement672,
														expr: &seqExpr{
															pos: position{line: 907, col: 17, offset: 36159},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 907, col: 17, offset: 36159},
																	val:        "link:",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 907, col: 25, offset: 36167},
																	label: "url",
																	expr: &actionExpr{
																		pos: position{line: 911, col: 20, offset: 36336},
																		run: (*parser).callonInlineElement676,
																		expr: &seqExpr{
																			pos: position{line: 911, col: 20, offset: 36336},
																			exprs: []interface{}{
																				&zeroOrOneExpr{
																					pos: position{line: 911, col: 20, offset: 36336},
																					expr: &choiceExpr{
																						pos: position{line: 1300, col: 15, offset: 50339},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1300, col: 15, offset: 50339},
																								val:        "http://",
																								ignoreCase: false,
																							},
																							&litMatcher{
																								pos:        position{line: 1300, col: 27, offset: 50351},
																								val:        "https://",
																								ignoreCase: false,
																							},
																							&litMatcher{
																								pos:        position{line: 1300, col: 40, offset: 50364},
																								val:        "ftp://",
																								ignoreCase: false,
																							},
																							&litMatcher{
																								pos:        position{line: 1300, col: 51, offset: 50375},
																								val:        "irc://",
																								ignoreCase: false,
																							},
																							&litMatcher{
																								pos:        position{line: 1300, col: 62, offset: 50386},
																								val:        "mailto:",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 1282, col: 8, offset: 49956},
																					run: (*parser).callonInlineElement685,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1282, col: 8, offset: 49956},
																						expr: &choiceExpr{
																							pos: position{line: 1282, col: 9, offset: 49957},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 1264, col: 14, offset: 49515},
																									run: (*parser).callonInlineElement688,
																									expr: &oneOrMoreExpr{
																										pos: position{line: 1264, col: 14, offset: 49515},
																										expr: &charClassMatcher{
																											pos:        position{line: 1264, col: 14, offset: 49515},
																											val:        "[a-zA-Z0-9]",
																											ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																											ignoreCase: false,
																											inverted:   false,
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 1282, col: 21, offset: 49969},
																									run: (*parser).callonInlineElement691,
																									expr: &seqExpr{
																										pos: position{line: 1282, col: 22, offset: 49970},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 1282, col: 22, offset: 49970},
																												expr: &choiceExpr{
																													pos: position{line: 1310, col: 12, offset: 50512},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1310, col: 12, offset: 50512},
																															val:        "\r\n",
																															ignoreCase: false,
																														},
																														&charClassMatcher{
																															pos:        position{line: 1310, col: 21, offset: 50521},
																															val:        "[\\r\\n]",
																															chars:      []rune{'\r', '\n'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 1282, col: 31, offset: 49979},
																												expr: &choiceExpr{
																													pos: position{line: 1306, col: 7, offset: 50454},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1306, col: 7, offset: 50454},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1306, col: 13, offset: 50460},
																															run: (*parser).callonInlineElement700,
																															expr: &litMatcher{
																																pos:        position{line: 1306, col: 13, offset: 50460},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 1282, col: 35, offset: 49983},
																												expr: &litMatcher{
																													pos:        position{line: 1282, col: 36, offset: 49984},
																													val:        "[",
																													ignoreCase: false,
																												},
																											},
																											&notExpr{
																												pos: position{line: 1282, col: 40, offset: 49988},
																												expr: &litMatcher{
																													pos:        position{line: 1282, col: 41, offset: 49989},
																													val:        "]",
																													ignoreCase: false,
																												},
																											},
																											&anyMatcher{
																												line: 1282, col: 46, offset: 49994,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 907, col: 47, offset: 36189},
																	label: "inlineAttributes",
																	expr: &choiceExpr{
																		pos: position{line: 915, col: 19, offset: 36406},
																		alternatives: []interface{}{
																			&actionExpr{
																				pos: position{line: 915, col: 19, offset: 36406},
																				run: (*parser).callonInlineElement709,
																				expr: &seqExpr{
																					pos: position{line: 915, col: 19, offset: 36406},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 915, col: 19, offset: 36406},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 915, col: 23, offset: 36410},
																							label: "text",
																							expr: &actionExpr{
																								pos: position{line: 921, col: 22, offset: 36700},
																								run: (*parser).callonInlineElement713,
																								expr: &zeroOrMoreExpr{
																									pos: position{line: 921, col: 22, offset: 36700},
																									expr: &choiceExpr{
																										pos: position{line: 921, col: 23, offset: 36701},
																										alternatives: []interface{}{
																											&actionExpr{
																												pos: position{line: 1264, col: 14, offset: 49515},
																												run: (*parser).callonInlineElement716,
																												expr: &oneOrMoreExpr{
																													pos: position{line: 1264, col: 14, offset: 49515},
																													expr: &charClassMatcher{
																														pos:        position{line: 1264, col: 14, offset: 49515},
																														val:        "[a-zA-Z0-9]",
																														ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																											&actionExpr{
																												pos: position{line: 1278, col: 11, offset: 49909},
																												run: (*parser).callonInlineElement719,
																												expr: &oneOrMoreExpr{
																													pos: position{line: 1278, col: 11, offset: 49909},
																													expr: &choiceExpr{
																														pos: position{line: 1306, col: 7, offset: 50454},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1306, col: 7, offset: 50454},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1306, col: 13, offset: 50460},
																																run: (*parser).callonInlineElement723,
																																expr: &litMatcher{
																																	pos:        position{line: 1306, col: 13, offset: 50460},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																											&actionExpr{
																												pos: position{line: 921, col: 44, offset: 36722},
																												run: (*parser).callonInlineElement725,
																												expr: &seqExpr{
																													pos: position{line: 921, col: 45, offset: 36723},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 921, col: 45, offset: 36723},
																															expr: &litMatcher{
																																pos:        position{line: 921, col: 46, offset: 36724},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 921, col: 50, offset: 36728},
																															expr: &litMatcher{
																																pos:        position{line: 921, col: 51, offset: 36729},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 921, col: 55, offset: 36733},
																															expr: &litMatcher{
																																pos:        position{line: 921, col: 56, offset: 36734},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 921, col: 61, offset: 36739,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&zeroOrOneExpr{
																							pos: position{line: 915, col: 48, offset: 36435},
																							expr: &litMatcher{
																								pos:        position{line: 915, col: 48, offset: 36435},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&zeroOrMoreExpr{
																							pos: position{line: 915, col: 53, offset: 36440},
																							expr: &choiceExpr{
																								pos: position{line: 1306, col: 7, offset: 50454},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1306, col: 7, offset: 50454},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1306, col: 13, offset: 50460},
																										run: (*parser).callonInlineElement739,
																										expr: &litMatcher{
																											pos:        position{line: 1306, col: 13, offset: 50460},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&labeledExpr{
																							pos:   position{line: 915, col: 57, offset: 36444},
																							label: "otherAttrs",
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 915, col: 68, offset: 36455},
																								expr: &choiceExpr{
																									pos: position{line: 225, col: 21, offset: 7971},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 225, col: 21, offset: 7971},
																											run: (*parser).callonInlineElement744,
																											expr: &seqExpr{
																												pos: position{line: 225, col: 21, offset: 7971},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 225, col: 21, offset: 7971},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 231, col: 17, offset: 8231},
																															run: (*parser).callonInlineElement747,
																															expr: &seqExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 231, col: 17, offset: 8231},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9116},
																																			run: (*parser).callonInlineElement750,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9116},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 28, offset: 8242},
																																		expr: &actionExpr{
																																			pos: position{line: 282, col: 14, offset: 9780},
																																			run: (*parser).callonInlineElement753,
																																			expr: &litMatcher{
																																				pos:        position{line: 282, col: 14, offset: 9780},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 39, offset: 8253},
																																		expr: &actionExpr{
																																			pos: position{line: 1229, col: 16, offset: 48642},
																																			run: (*parser).callonInlineElement756,
																																			expr: &litMatcher{
																																				pos:        position{line: 1229, col: 16, offset: 48642},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 231, col: 52, offset: 8266},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 231, col: 56, offset: 8270},
																																			expr: &choiceExpr{
																																				pos: position{line: 231, col: 57, offset: 8271},
																																				alternatives: []interface{}{
																																					&actionExpr{
																																						pos: position{line: 1264, col: 14, offset: 49515},
																																						run: (*parser).callonInlineElement761,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1264, col: 14, offset: 49515},
																																							expr: &charClassMatcher{
																																								pos:        position{line: 1264, col: 14, offset: 49515},
																																								val:        "[a-zA-Z0-9]",
																																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																								ignoreCase: false,
																																								inverted:   false,
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 1278, col: 11, offset: 49909},
																																						run: (*parser).callonInlineElement764,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1278, col: 11, offset: 49909},
																																							expr: &choiceExpr{
																																								pos: position{line: 1306, col: 7, offset: 50454},
																																								alternatives: []interface{}{
																																									&litMatcher{
																																										pos:        position{line: 1306, col: 7, offset: 50454},
																																										val:        " ",
																																										ignoreCase: false,
																																									},
																																									&actionExpr{
																																										pos: position{line: 1306, col: 13, offset: 50460},
																																										run: (*parser).callonInlineElement768,
																																										expr: &litMatcher{
																																											pos:        position{line: 1306, col: 13, offset: 50460},
																																											val:        "\t",
																																											ignoreCase: false,
																																										},
																																									},
																																								},
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 231, col: 78, offset: 8292},
																																						run: (*parser).callonInlineElement770,
																																						expr: &seqExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							exprs: []interface{}{
																																								&notExpr{
																																									pos: position{line: 231, col: 79, offset: 8293},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 80, offset: 8294},
																																										val:        "=",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 84, offset: 8298},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 85, offset: 8299},
																																										val:        ",",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 89, offset: 8303},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 90, offset: 8304},
																																										val:        "]",
																																										ignoreCase: false,
																																									},
																																								},
																																								&anyMatcher{
																																									line: 231, col: 95, offset: 8309,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&litMatcher{
																														pos:        position{line: 225, col: 40, offset: 7990},
																														val:        "=",
																														ignoreCase: false,
																													},
																													&labeledExpr{
																														pos:   position{line: 225, col: 44, offset: 7994},
																														label: "value",
																														expr: &actionExpr{
																															pos: position{line: 237, col: 19, offset: 8403},
																															run: (*parser).callonInlineElement781,
																															expr: &labeledExpr{
																																pos:   position{line: 237, col: 19, offset: 8403},
																																label: "value",
																																expr: &zeroOrMoreExpr{
																																	pos: position{line: 237, col: 25, offset: 8409},
																																	expr: &choiceExpr{
																																		pos: position{line: 237, col: 26, offset: 8410},
																																		alternatives: []interface{}{
																																			&actionExpr{
																																				pos: position{line: 1264, col: 14, offset: 49515},
																																				run: (*parser).callonInlineElement785,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1264, col: 14, offset: 49515},
																																					expr: &charClassMatcher{
																																						pos:        position{line: 1264, col: 14, offset: 49515},
																																						val:        "[a-zA-Z0-9]",
																																						ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																						ignoreCase: false,
																																						inverted:   false,
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 1278, col: 11, offset: 49909},
																																				run: (*parser).callonInlineElement788,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1278, col: 11, offset: 49909},
																																					expr: &choiceExpr{
																																						pos: position{line: 1306, col: 7, offset: 50454},
																																						alternatives: []interface{}{
																																							&litMatcher{
																																								pos:        position{line: 1306, col: 7, offset: 50454},
																																								val:        " ",
																																								ignoreCase: false,
																																							},
																																							&actionExpr{
																																								pos: position{line: 1306, col: 13, offset: 50460},
																																								run: (*parser).callonInlineElement792,
																																								expr: &litMatcher{
																																									pos:        position{line: 1306, col: 13, offset: 50460},
																																									val:        "\t",
																																									ignoreCase: false,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 237, col: 47, offset: 8431},
																																				run: (*parser).callonInlineElement794,
																																				expr: &seqExpr{
																																					pos: position{line: 237, col: 48, offset: 8432},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 237, col: 48, offset: 8432},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 49, offset: 8433},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 237, col: 53, offset: 8437},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 54, offset: 8438},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 237, col: 58, offset: 8442},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 59, offset: 8443},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 237, col: 64, offset: 8448,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 225, col: 67, offset: 8017},
																														expr: &litMatcher{
																															pos:        position{line: 225, col: 67, offset: 8017},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 225, col: 72, offset: 8022},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonInlineElement808,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 227, col: 5, offset: 8106},
																											run: (*parser).callonInlineElement810,
																											expr: &seqExpr{
																												pos: position{line: 227, col: 5, offset: 8106},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 227, col: 5, offset: 8106},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 231, col: 17, offset: 8231},
																															run: (*parser).callonInlineElement813,
																															expr: &seqExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 231, col: 17, offset: 8231},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9116},
																																			run: (*parser).callonInlineElement816,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9116},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 28, offset: 8242},
																																		expr: &actionExpr{
																																			pos: position{line: 282, col: 14, offset: 9780},
																																			run: (*parser).callonInlineElement819,
																																			expr: &litMatcher{
																																				pos:        position{line: 282, col: 14, offset: 9780},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 39, offset: 8253},
																																		expr: &actionExpr{
																																			pos: position{line: 1229, col: 16, offset: 48642},
																																			run: (*parser).callonInlineElement822,
																																			expr: &litMatcher{
																																				pos:        position{line: 1229, col: 16, offset: 48642},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 231, col: 52, offset: 8266},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 231, col: 56, offset: 8270},
																																			expr: &choiceExpr{
																																				pos: position{line: 231, col: 57, offset: 8271},
																																				alternatives: []interface{}{
																																					&actionExpr{
																																						pos: position{line: 1264, col: 14, offset: 49515},
																																						run: (*parser).callonInlineElement827,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1264, col: 14, offset: 49515},
																																							expr: &charClassMatcher{
																																								pos:        position{line: 1264, col: 14, offset: 49515},
																																								val:        "[a-zA-Z0-9]",
																																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																								ignoreCase: false,
																																								inverted:   false,
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 1278, col: 11, offset: 49909},
																																						run: (*parser).callonInlineElement830,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1278, col: 11, offset: 49909},
																																							expr: &choiceExpr{
																																								pos: position{line: 1306, col: 7, offset: 50454},
																																								alternatives: []interface{}{
																																									&litMatcher{
																																										pos:        position{line: 1306, col: 7, offset: 50454},
																																										val:        " ",
																																										ignoreCase: false,
																																									},
																																									&actionExpr{
																																										pos: position{line: 1306, col: 13, offset: 50460},
																																										run: (*parser).callonInlineElement834,
																																										expr: &litMatcher{
																																											pos:        position{line: 1306, col: 13, offset: 50460},
																																											val:        "\t",
																																											ignoreCase: false,
																																										},
																																									},
																																								},
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 231, col: 78, offset: 8292},
																																						run: (*parser).callonInlineElement836,
																																						expr: &seqExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							exprs: []interface{}{
																																								&notExpr{
																																									pos: position{line: 231, col: 79, offset: 8293},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 80, offset: 8294},
																																										val:        "=",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 84, offset: 8298},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 85, offset: 8299},
																																										val:        ",",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 89, offset: 8303},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 90, offset: 8304},
																																										val:        "]",
																																										ignoreCase: false,
																																									},
																																								},
																																								&anyMatcher{
																																									line: 231, col: 95, offset: 8309,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 227, col: 24, offset: 8125},
																														expr: &litMatcher{
																															pos:        position{line: 227, col: 24, offset: 8125},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 227, col: 29, offset: 8130},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonInlineElement850,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 915, col: 88, offset: 36475},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																			&actionExpr{
																				pos: position{line: 917, col: 5, offset: 36560},
																				run: (*parser).callonInlineElement853,
																				expr: &seqExpr{
																					pos: position{line: 917, col: 5, offset: 36560},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 917, col: 5, offset: 36560},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 917, col: 9, offset: 36564},
																							label: "otherAttrs",
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 917, col: 20, offset: 36575},
																								expr: &choiceExpr{
																									pos: position{line: 225, col: 21, offset: 7971},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 225, col: 21, offset: 7971},
																											run: (*parser).callonInlineElement859,
																											expr: &seqExpr{
																												pos: position{line: 225, col: 21, offset: 7971},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 225, col: 21, offset: 7971},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 231, col: 17, offset: 8231},
																															run: (*parser).callonInlineElement862,
																															expr: &seqExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 231, col: 17, offset: 8231},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9116},
																																			run: (*parser).callonInlineElement865,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9116},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 28, offset: 8242},
																																		expr: &actionExpr{
																																			pos: position{line: 282, col: 14, offset: 9780},
																																			run: (*parser).callonInlineElement868,
																																			expr: &litMatcher{
																																				pos:        position{line: 282, col: 14, offset: 9780},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 39, offset: 8253},
																																		expr: &actionExpr{
																																			pos: position{line: 1229, col: 16, offset: 48642},
																																			run: (*parser).callonInlineElement871,
																																			expr: &litMatcher{
																																				pos:        position{line: 1229, col: 16, offset: 48642},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 231, col: 52, offset: 8266},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 231, col: 56, offset: 8270},
																																			expr: &choiceExpr{
																																				pos: position{line: 231, col: 57, offset: 8271},
																																				alternatives: []interface{}{
																																					&actionExpr{
																																						pos: position{line: 1264, col: 14, offset: 49515},
																																						run: (*parser).callonInlineElement876,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1264, col: 14, offset: 49515},
																																							expr: &charClassMatcher{
																																								pos:        position{line: 1264, col: 14, offset: 49515},
																																								val:        "[a-zA-Z0-9]",
																																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																								ignoreCase: false,
																																								inverted:   false,
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 1278, col: 11, offset: 49909},
																																						run: (*parser).callonInlineElement879,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1278, col: 11, offset: 49909},
																																							expr: &choiceExpr{
																																								pos: position{line: 1306, col: 7, offset: 50454},
																																								alternatives: []interface{}{
																																									&litMatcher{
																																										pos:        position{line: 1306, col: 7, offset: 50454},
																																										val:        " ",
																																										ignoreCase: false,
																																									},
																																									&actionExpr{
																																										pos: position{line: 1306, col: 13, offset: 50460},
																																										run: (*parser).callonInlineElement883,
																																										expr: &litMatcher{
																																											pos:        position{line: 1306, col: 13, offset: 50460},
																																											val:        "\t",
																																											ignoreCase: false,
																																										},
																																									},
																																								},
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 231, col: 78, offset: 8292},
																																						run: (*parser).callonInlineElement885,
																																						expr: &seqExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							exprs: []interface{}{
																																								&notExpr{
																																									pos: position{line: 231, col: 79, offset: 8293},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 80, offset: 8294},
																																										val:        "=",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 84, offset: 8298},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 85, offset: 8299},
																																										val:        ",",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 89, offset: 8303},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 90, offset: 8304},
																																										val:        "]",
																																										ignoreCase: false,
																																									},
																																								},
																																								&anyMatcher{
																																									line: 231, col: 95, offset: 8309,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&litMatcher{
																														pos:        position{line: 225, col: 40, offset: 7990},
																														val:        "=",
																														ignoreCase: false,
																													},
																													&labeledExpr{
																														pos:   position{line: 225, col: 44, offset: 7994},
																														label: "value",
																														expr: &actionExpr{
																															pos: position{line: 237, col: 19, offset: 8403},
																															run: (*parser).callonInlineElement896,
																															expr: &labeledExpr{
																																pos:   position{line: 237, col: 19, offset: 8403},
																																label: "value",
																																expr: &zeroOrMoreExpr{
																																	pos: position{line: 237, col: 25, offset: 8409},
																																	expr: &choiceExpr{
																																		pos: position{line: 237, col: 26, offset: 8410},
																																		alternatives: []interface{}{
																																			&actionExpr{
																																				pos: position{line: 1264, col: 14, offset: 49515},
																																				run: (*parser).callonInlineElement900,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1264, col: 14, offset: 49515},
																																					expr: &charClassMatcher{
																																						pos:        position{line: 1264, col: 14, offset: 49515},
																																						val:        "[a-zA-Z0-9]",
																																						ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																						ignoreCase: false,
																																						inverted:   false,
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 1278, col: 11, offset: 49909},
																																				run: (*parser).callonInlineElement903,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1278, col: 11, offset: 49909},
																																					expr: &choiceExpr{
																																						pos: position{line: 1306, col: 7, offset: 50454},
																																						alternatives: []interface{}{
																																							&litMatcher{
																																								pos:        position{line: 1306, col: 7, offset: 50454},
																																								val:        " ",
																																								ignoreCase: false,
																																							},
																																							&actionExpr{
																																								pos: position{line: 1306, col: 13, offset: 50460},
																																								run: (*parser).callonInlineElement907,
																																								expr: &litMatcher{
																																									pos:        position{line: 1306, col: 13, offset: 50460},
																																									val:        "\t",
																																									ignoreCase: false,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 237, col: 47, offset: 8431},
																																				run: (*parser).callonInlineElement909,
																																				expr: &seqExpr{
																																					pos: position{line: 237, col: 48, offset: 8432},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 237, col: 48, offset: 8432},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 49, offset: 8433},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 237, col: 53, offset: 8437},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 54, offset: 8438},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 237, col: 58, offset: 8442},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 59, offset: 8443},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 237, col: 64, offset: 8448,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 225, col: 67, offset: 8017},
																														expr: &litMatcher{
																															pos:        position{line: 225, col: 67, offset: 8017},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 225, col: 72, offset: 8022},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonInlineElement923,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 227, col: 5, offset: 8106},
																											run: (*parser).callonInlineElement925,
																											expr: &seqExpr{
																												pos: position{line: 227, col: 5, offset: 8106},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 227, col: 5, offset: 8106},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 231, col: 17, offset: 8231},
																															run: (*parser).callonInlineElement928,
																															expr: &seqExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 231, col: 17, offset: 8231},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9116},
																																			run: (*parser).callonInlineElement931,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9116},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 28, offset: 8242},
																																		expr: &actionExpr{
																																			pos: position{line: 282, col: 14, offset: 9780},
																																			run: (*parser).callonInlineElement934,
																																			expr: &litMatcher{
																																				pos:        position{line: 282, col: 14, offset: 9780},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 39, offset: 8253},
																																		expr: &actionExpr{
																																			pos: position{line: 1229, col: 16, offset: 48642},
																																			run: (*parser).callonInlineElement937,
																																			expr: &litMatcher{
																																				pos:        position{line: 1229, col: 16, offset: 48642},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 231, col: 52, offset: 8266},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 231, col: 56, offset: 8270},
																																			expr: &choiceExpr{
																																				pos: position{line: 231, col: 57, offset: 8271},
																																				alternatives: []interface{}{
																																					&actionExpr{
																																						pos: position{line: 1264, col: 14, offset: 49515},
																																						run: (*parser).callonInlineElement942,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1264, col: 14, offset: 49515},
																																							expr: &charClassMatcher{
																																								pos:        position{line: 1264, col: 14, offset: 49515},
																																								val:        "[a-zA-Z0-9]",
																																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																								ignoreCase: false,
																																								inverted:   false,
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 1278, col: 11, offset: 49909},
																																						run: (*parser).callonInlineElement945,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1278, col: 11, offset: 49909},
																																							expr: &choiceExpr{
																																								pos: position{line: 1306, col: 7, offset: 50454},
																																								alternatives: []interface{}{
																																									&litMatcher{
																																										pos:        position{line: 1306, col: 7, offset: 50454},
																																										val:        " ",
																																										ignoreCase: false,
																																									},
																																									&actionExpr{
																																										pos: position{line: 1306, col: 13, offset: 50460},
																																										run: (*parser).callonInlineElement949,
																																										expr: &litMatcher{
																																											pos:        position{line: 1306, col: 13, offset: 50460},
																																											val:        "\t",
																																											ignoreCase: false,
																																										},
																																									},
																																								},
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 231, col: 78, offset: 8292},
																																						run: (*parser).callonInlineElement951,
																																						expr: &seqExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							exprs: []interface{}{
																																								&notExpr{
																																									pos: position{line: 231, col: 79, offset: 8293},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 80, offset: 8294},
																																										val:        "=",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 84, offset: 8298},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 85, offset: 8299},
																																										val:        ",",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 89, offset: 8303},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 90, offset: 8304},
																																										val:        "]",
																																										ignoreCase: false,
																																									},
																																								},
																																								&anyMatcher{
																																									line: 231, col: 95, offset: 8309,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 227, col: 24, offset: 8125},
																														expr: &litMatcher{
																															pos:        position{line: 227, col: 24, offset: 8125},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 227, col: 29, offset: 8130},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonInlineElement965,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 917, col: 40, offset: 36595},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 896, col: 17, offset: 35778},
														run: (*parser).callonInlineElement968,
														expr: &seqExpr{
															pos: position{line: 896, col: 17, offset: 35778},
															exprs: []interface{}{
																&labeledExpr{
																	pos:   position{line: 896, col: 17, offset: 35778},
																	label: "url",
																	expr: &actionExpr{
																		pos: position{line: 902, col: 20, offset: 36025},
																		run: (*parser).callonInlineElement971,
																		expr: &seqExpr{
																			pos: position{line: 902, col: 20, offset: 36025},
																			exprs: []interface{}{
																				&choiceExpr{
																					pos: position{line: 1300, col: 15, offset: 50339},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1300, col: 15, offset: 50339},
																							val:        "http://",
																							ignoreCase: false,
																						},
																						&litMatcher{
																							pos:        position{line: 1300, col: 27, offset: 50351},
																							val:        "https://",
																							ignoreCase: false,
																						},
																						&litMatcher{
																							pos:        position{line: 1300, col: 40, offset: 50364},
																							val:        "ftp://",
																							ignoreCase: false,
																						},
																						&litMatcher{
																							pos:        position{line: 1300, col: 51, offset: 50375},
																							val:        "irc://",
																							ignoreCase: false,
																						},
																						&litMatcher{
																							pos:        position{line: 1300, col: 62, offset: 50386},
																							val:        "mailto:",
																							ignoreCase: false,
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 1282, col: 8, offset: 49956},
																					run: (*parser).callonInlineElement979,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1282, col: 8, offset: 49956},
																						expr: &choiceExpr{
																							pos: position{line: 1282, col: 9, offset: 49957},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 1264, col: 14, offset: 49515},
																									run: (*parser).callonInlineElement982,
																									expr: &oneOrMoreExpr{
																										pos: position{line: 1264, col: 14, offset: 49515},
																										expr: &charClassMatcher{
																											pos:        position{line: 1264, col: 14, offset: 49515},
																											val:        "[a-zA-Z0-9]",
																											ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																											ignoreCase: false,
																											inverted:   false,
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 1282, col: 21, offset: 49969},
																									run: (*parser).callonInlineElement985,
																									expr: &seqExpr{
																										pos: position{line: 1282, col: 22, offset: 49970},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 1282, col: 22, offset: 49970},
																												expr: &choiceExpr{
																													pos: position{line: 1310, col: 12, offset: 50512},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1310, col: 12, offset: 50512},
																															val:        "\r\n",
																															ignoreCase: false,
																														},
																														&charClassMatcher{
																															pos:        position{line: 1310, col: 21, offset: 50521},
																															val:        "[\\r\\n]",
																															chars:      []rune{'\r', '\n'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 1282, col: 31, offset: 49979},
																												expr: &choiceExpr{
																													pos: position{line: 1306, col: 7, offset: 50454},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1306, col: 7, offset: 50454},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1306, col: 13, offset: 50460},
																															run: (*parser).callonInlineElement994,
																															expr: &litMatcher{
																																pos:        position{line: 1306, col: 13, offset: 50460},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 1282, col: 35, offset: 49983},
																												expr: &litMatcher{
																													pos:        position{line: 1282, col: 36, offset: 49984},
																													val:        "[",
																													ignoreCase: false,
																												},
																											},
																											&notExpr{
																												pos: position{line: 1282, col: 40, offset: 49988},
																												expr: &litMatcher{
																													pos:        position{line: 1282, col: 41, offset: 49989},
																													val:        "]",
																													ignoreCase: false,
																												},
																											},
																											&anyMatcher{
																												line: 1282, col: 46, offset: 49994,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 896, col: 39, offset: 35800},
																	label: "inlineAttributes",
																	expr: &choiceExpr{
																		pos: position{line: 915, col: 19, offset: 36406},
																		alternatives: []interface{}{
																			&actionExpr{
																				pos: position{line: 915, col: 19, offset: 36406},
																				run: (*parser).callonInlineElement1003,
																				expr: &seqExpr{
																					pos: position{line: 915, col: 19, offset: 36406},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 915, col: 19, offset: 36406},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 915, col: 23, offset: 36410},
																							label: "text",
																							expr: &actionExpr{
																								pos: position{line: 921, col: 22, offset: 36700},
																								run: (*parser).callonInlineElement1007,
																								expr: &zeroOrMoreExpr{
																									pos: position{line: 921, col: 22, offset: 36700},
																									expr: &choiceExpr{
																										pos: position{line: 921, col: 23, offset: 36701},
																										alternatives: []interface{}{
																											&actionExpr{
																												pos: position{line: 1264, col: 14, offset: 49515},
																												run: (*parser).callonInlineElement1010,
																												expr: &oneOrMoreExpr{
																													pos: position{line: 1264, col: 14, offset: 49515},
																													expr: &charClassMatcher{
																														pos:        position{line: 1264, col: 14, offset: 49515},
																														val:        "[a-zA-Z0-9]",
																														ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																											&actionExpr{
																												pos: position{line: 1278, col: 11, offset: 49909},
																												run: (*parser).callonInlineElement1013,
																												expr: &oneOrMoreExpr{
																													pos: position{line: 1278, col: 11, offset: 49909},
																													expr: &choiceExpr{
																														pos: position{line: 1306, col: 7, offset: 50454},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1306, col: 7, offset: 50454},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1306, col: 13, offset: 50460},
																																run: (*parser).callonInlineElement1017,
																																expr: &litMatcher{
																																	pos:        position{line: 1306, col: 13, offset: 50460},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																											&actionExpr{
																												pos: position{line: 921, col: 44, offset: 36722},
																												run: (*parser).callonInlineElement1019,
																												expr: &seqExpr{
																													pos: position{line: 921, col: 45, offset: 36723},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 921, col: 45, offset: 36723},
																															expr: &litMatcher{
																																pos:        position{line: 921, col: 46, offset: 36724},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 921, col: 50, offset: 36728},
																															expr: &litMatcher{
																																pos:        position{line: 921, col: 51, offset: 36729},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 921, col: 55, offset: 36733},
																															expr: &litMatcher{
																																pos:        position{line: 921, col: 56, offset: 36734},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 921, col: 61, offset: 36739,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&zeroOrOneExpr{
																							pos: position{line: 915, col: 48, offset: 36435},
																							expr: &litMatcher{
																								pos:        position{line: 915, col: 48, offset: 36435},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&zeroOrMoreExpr{
																							pos: position{line: 915, col: 53, offset: 36440},
																							expr: &choiceExpr{
																								pos: position{line: 1306, col: 7, offset: 50454},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1306, col: 7, offset: 50454},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1306, col: 13, offset: 50460},
																										run: (*parser).callonInlineElement1033,
																										expr: &litMatcher{
																											pos:        position{line: 1306, col: 13, offset: 50460},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&labeledExpr{
																							pos:   position{line: 915, col: 57, offset: 36444},
																							label: "otherAttrs",
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 915, col: 68, offset: 36455},
																								expr: &choiceExpr{
																									pos: position{line: 225, col: 21, offset: 7971},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 225, col: 21, offset: 7971},
																											run: (*parser).callonInlineElement1038,
																											expr: &seqExpr{
																												pos: position{line: 225, col: 21, offset: 7971},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 225, col: 21, offset: 7971},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 231, col: 17, offset: 8231},
																															run: (*parser).callonInlineElement1041,
																															expr: &seqExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 231, col: 17, offset: 8231},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9116},
																																			run: (*parser).callonInlineElement1044,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9116},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 28, offset: 8242},
																																		expr: &actionExpr{
																																			pos: position{line: 282, col: 14, offset: 9780},
																																			run: (*parser).callonInlineElement1047,
																																			expr: &litMatcher{
																																				pos:        position{line: 282, col: 14, offset: 9780},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 39, offset: 8253},
																																		expr: &actionExpr{
																																			pos: position{line: 1229, col: 16, offset: 48642},
																																			run: (*parser).callonInlineElement1050,
																																			expr: &litMatcher{
																																				pos:        position{line: 1229, col: 16, offset: 48642},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 231, col: 52, offset: 8266},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 231, col: 56, offset: 8270},
																																			expr: &choiceExpr{
																																				pos: position{line: 231, col: 57, offset: 8271},
																																				alternatives: []interface{}{
																																					&actionExpr{
																																						pos: position{line: 1264, col: 14, offset: 49515},
																																						run: (*parser).callonInlineElement1055,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1264, col: 14, offset: 49515},
																																							expr: &charClassMatcher{
																																								pos:        position{line: 1264, col: 14, offset: 49515},
																																								val:        "[a-zA-Z0-9]",
																																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																								ignoreCase: false,
																																								inverted:   false,
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 1278, col: 11, offset: 49909},
																																						run: (*parser).callonInlineElement1058,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1278, col: 11, offset: 49909},
																																							expr: &choiceExpr{
																																								pos: position{line: 1306, col: 7, offset: 50454},
																																								alternatives: []interface{}{
																																									&litMatcher{
																																										pos:        position{line: 1306, col: 7, offset: 50454},
																																										val:        " ",
																																										ignoreCase: false,
																																									},
																																									&actionExpr{
																																										pos: position{line: 1306, col: 13, offset: 50460},
																																										run: (*parser).callonInlineElement1062,
																																										expr: &litMatcher{
																																											pos:        position{line: 1306, col: 13, offset: 50460},
																																											val:        "\t",
																																											ignoreCase: false,
																																										},
																																									},
																																								},
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 231, col: 78, offset: 8292},
																																						run: (*parser).callonInlineElement1064,
																																						expr: &seqExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							exprs: []interface{}{
																																								&notExpr{
																																									pos: position{line: 231, col: 79, offset: 8293},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 80, offset: 8294},
																																										val:        "=",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 84, offset: 8298},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 85, offset: 8299},
																																										val:        ",",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 89, offset: 8303},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 90, offset: 8304},
																																										val:        "]",
																																										ignoreCase: false,
																																									},
																																								},
																																								&anyMatcher{
																																									line: 231, col: 95, offset: 8309,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&litMatcher{
																														pos:        position{line: 225, col: 40, offset: 7990},
																														val:        "=",
																														ignoreCase: false,
																													},
																													&labeledExpr{
																														pos:   position{line: 225, col: 44, offset: 7994},
																														label: "value",
																														expr: &actionExpr{
																															pos: position{line: 237, col: 19, offset: 8403},
																															run: (*parser).callonInlineElement1075,
																															expr: &labeledExpr{
																																pos:   position{line: 237, col: 19, offset: 8403},
																																label: "value",
																																expr: &zeroOrMoreExpr{
																																	pos: position{line: 237, col: 25, offset: 8409},
																																	expr: &choiceExpr{
																																		pos: position{line: 237, col: 26, offset: 8410},
																																		alternatives: []interface{}{
																																			&actionExpr{
																																				pos: position{line: 1264, col: 14, offset: 49515},
																																				run: (*parser).callonInlineElement1079,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1264, col: 14, offset: 49515},
																																					expr: &charClassMatcher{
																																						pos:        position{line: 1264, col: 14, offset: 49515},
																																						val:        "[a-zA-Z0-9]",
																																						ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																						ignoreCase: false,
																																						inverted:   false,
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 1278, col: 11, offset: 49909},
																																				run: (*parser).callonInlineElement1082,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1278, col: 11, offset: 49909},
																																					expr: &choiceExpr{
																																						pos: position{line: 1306, col: 7, offset: 50454},
																																						alternatives: []interface{}{
																																							&litMatcher{
																																								pos:        position{line: 1306, col: 7, offset: 50454},
																																								val:        " ",
																																								ignoreCase: false,
																																							},
																																							&actionExpr{
																																								pos: position{line: 1306, col: 13, offset: 50460},
																																								run: (*parser).callonInlineElement1086,
																																								expr: &litMatcher{
																																									pos:        position{line: 1306, col: 13, offset: 50460},
																																									val:        "\t",
																																									ignoreCase: false,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 237, col: 47, offset: 8431},
																																				run: (*parser).callonInlineElement1088,
																																				expr: &seqExpr{
																																					pos: position{line: 237, col: 48, offset: 8432},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 237, col: 48, offset: 8432},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 49, offset: 8433},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 237, col: 53, offset: 8437},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 54, offset: 8438},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 237, col: 58, offset: 8442},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 59, offset: 8443},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 237, col: 64, offset: 8448,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 225, col: 67, offset: 8017},
																														expr: &litMatcher{
																															pos:        position{line: 225, col: 67, offset: 8017},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 225, col: 72, offset: 8022},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonInlineElement1102,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 227, col: 5, offset: 8106},
																											run: (*parser).callonInlineElement1104,
																											expr: &seqExpr{
																												pos: position{line: 227, col: 5, offset: 8106},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 227, col: 5, offset: 8106},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 231, col: 17, offset: 8231},
																															run: (*parser).callonInlineElement1107,
																															expr: &seqExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 231, col: 17, offset: 8231},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9116},
																																			run: (*parser).callonInlineElement1110,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9116},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 28, offset: 8242},
																																		expr: &actionExpr{
																																			pos: position{line: 282, col: 14, offset: 9780},
																																			run: (*parser).callonInlineElement1113,
																																			expr: &litMatcher{
																																				pos:        position{line: 282, col: 14, offset: 9780},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 39, offset: 8253},
																																		expr: &actionExpr{
																																			pos: position{line: 1229, col: 16, offset: 48642},
																																			run: (*parser).callonInlineElement1116,
																																			expr: &litMatcher{
																																				pos:        position{line: 1229, col: 16, offset: 48642},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 231, col: 52, offset: 8266},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 231, col: 56, offset: 8270},
																																			expr: &choiceExpr{
																																				pos: position{line: 231, col: 57, offset: 8271},
																																				alternatives: []interface{}{
																																					&actionExpr{
																																						pos: position{line: 1264, col: 14, offset: 49515},
																																						run: (*parser).callonInlineElement1121,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1264, col: 14, offset: 49515},
																																							expr: &charClassMatcher{
																																								pos:        position{line: 1264, col: 14, offset: 49515},
																																								val:        "[a-zA-Z0-9]",
																																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																								ignoreCase: false,
																																								inverted:   false,
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 1278, col: 11, offset: 49909},
																																						run: (*parser).callonInlineElement1124,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1278, col: 11, offset: 49909},
																																							expr: &choiceExpr{
																																								pos: position{line: 1306, col: 7, offset: 50454},
																																								alternatives: []interface{}{
																																									&litMatcher{
																																										pos:        position{line: 1306, col: 7, offset: 50454},
																																										val:        " ",
																																										ignoreCase: false,
																																									},
																																									&actionExpr{
																																										pos: position{line: 1306, col: 13, offset: 50460},
																																										run: (*parser).callonInlineElement1128,
																																										expr: &litMatcher{
																																											pos:        position{line: 1306, col: 13, offset: 50460},
																																											val:        "\t",
																																											ignoreCase: false,
																																										},
																																									},
																																								},
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 231, col: 78, offset: 8292},
																																						run: (*parser).callonInlineElement1130,
																																						expr: &seqExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							exprs: []interface{}{
																																								&notExpr{
																																									pos: position{line: 231, col: 79, offset: 8293},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 80, offset: 8294},
																																										val:        "=",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 84, offset: 8298},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 85, offset: 8299},
																																										val:        ",",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 89, offset: 8303},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 90, offset: 8304},
																																										val:        "]",
																																										ignoreCase: false,
																																									},
																																								},
																																								&anyMatcher{
																																									line: 231, col: 95, offset: 8309,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 227, col: 24, offset: 8125},
																														expr: &litMatcher{
																															pos:        position{line: 227, col: 24, offset: 8125},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 227, col: 29, offset: 8130},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonInlineElement1144,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 915, col: 88, offset: 36475},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																			&actionExpr{
																				pos: position{line: 917, col: 5, offset: 36560},
																				run: (*parser).callonInlineElement1147,
																				expr: &seqExpr{
																					pos: position{line: 917, col: 5, offset: 36560},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 917, col: 5, offset: 36560},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 917, col: 9, offset: 36564},
																							label: "otherAttrs",
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 917, col: 20, offset: 36575},
																								expr: &choiceExpr{
																									pos: position{line: 225, col: 21, offset: 7971},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 225, col: 21, offset: 7971},
																											run: (*parser).callonInlineElement1153,
																											expr: &seqExpr{
																												pos: position{line: 225, col: 21, offset: 7971},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 225, col: 21, offset: 7971},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 231, col: 17, offset: 8231},
																															run: (*parser).callonInlineElement1156,
																															expr: &seqExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 231, col: 17, offset: 8231},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9116},
																																			run: (*parser).callonInlineElement1159,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9116},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 28, offset: 8242},
																																		expr: &actionExpr{
																																			pos: position{line: 282, col: 14, offset: 9780},
																																			run: (*parser).callonInlineElement1162,
																																			expr: &litMatcher{
																																				pos:        position{line: 282, col: 14, offset: 9780},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 39, offset: 8253},
																																		expr: &actionExpr{
																																			pos: position{line: 1229, col: 16, offset: 48642},
																																			run: (*parser).callonInlineElement1165,
																																			expr: &litMatcher{
																																				pos:        position{line: 1229, col: 16, offset: 48642},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 231, col: 52, offset: 8266},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 231, col: 56, offset: 8270},
																																			expr: &choiceExpr{
																																				pos: position{line: 231, col: 57, offset: 8271},
																																				alternatives: []interface{}{
																																					&actionExpr{
																																						pos: position{line: 1264, col: 14, offset: 49515},
																																						run: (*parser).callonInlineElement1170,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1264, col: 14, offset: 49515},
																																							expr: &charClassMatcher{
																																								pos:        position{line: 1264, col: 14, offset: 49515},
																																								val:        "[a-zA-Z0-9]",
																																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																								ignoreCase: false,
																																								inverted:   false,
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 1278, col: 11, offset: 49909},
																																						run: (*parser).callonInlineElement1173,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1278, col: 11, offset: 49909},
																																							expr: &choiceExpr{
																																								pos: position{line: 1306, col: 7, offset: 50454},
																																								alternatives: []interface{}{
																																									&litMatcher{
																																										pos:        position{line: 1306, col: 7, offset: 50454},
																																										val:        " ",
																																										ignoreCase: false,
																																									},
																																									&actionExpr{
																																										pos: position{line: 1306, col: 13, offset: 50460},
																																										run: (*parser).callonInlineElement1177,
																																										expr: &litMatcher{
																																											pos:        position{line: 1306, col: 13, offset: 50460},
																																											val:        "\t",
																																											ignoreCase: false,
																																										},
																																									},
																																								},
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 231, col: 78, offset: 8292},
																																						run: (*parser).callonInlineElement1179,
																																						expr: &seqExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							exprs: []interface{}{
																																								&notExpr{
																																									pos: position{line: 231, col: 79, offset: 8293},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 80, offset: 8294},
																																										val:        "=",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 84, offset: 8298},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 85, offset: 8299},
																																										val:        ",",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 89, offset: 8303},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 90, offset: 8304},
																																										val:        "]",
																																										ignoreCase: false,
																																									},
																																								},
																																								&anyMatcher{
																																									line: 231, col: 95, offset: 8309,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&litMatcher{
																														pos:        position{line: 225, col: 40, offset: 7990},
																														val:        "=",
																														ignoreCase: false,
																													},
																													&labeledExpr{
																														pos:   position{line: 225, col: 44, offset: 7994},
																														label: "value",
																														expr: &actionExpr{
																															pos: position{line: 237, col: 19, offset: 8403},
																															run: (*parser).callonInlineElement1190,
																															expr: &labeledExpr{
																																pos:   position{line: 237, col: 19, offset: 8403},
																																label: "value",
																																expr: &zeroOrMoreExpr{
																																	pos: position{line: 237, col: 25, offset: 8409},
																																	expr: &choiceExpr{
																																		pos: position{line: 237, col: 26, offset: 8410},
																																		alternatives: []interface{}{
																																			&actionExpr{
																																				pos: position{line: 1264, col: 14, offset: 49515},
																																				run: (*parser).callonInlineElement1194,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1264, col: 14, offset: 49515},
																																					expr: &charClassMatcher{
																																						pos:        position{line: 1264, col: 14, offset: 49515},
																																						val:        "[a-zA-Z0-9]",
																																						ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																						ignoreCase: false,
																																						inverted:   false,
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 1278, col: 11, offset: 49909},
																																				run: (*parser).callonInlineElement1197,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1278, col: 11, offset: 49909},
																																					expr: &choiceExpr{
																																						pos: position{line: 1306, col: 7, offset: 50454},
																																						alternatives: []interface{}{
																																							&litMatcher{
																																								pos:        position{line: 1306, col: 7, offset: 50454},
																																								val:        " ",
																																								ignoreCase: false,
																																							},
																																							&actionExpr{
																																								pos: position{line: 1306, col: 13, offset: 50460},
																																								run: (*parser).callonInlineElement1201,
																																								expr: &litMatcher{
																																									pos:        position{line: 1306, col: 13, offset: 50460},
																																									val:        "\t",
																																									ignoreCase: false,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 237, col: 47, offset: 8431},
																																				run: (*parser).callonInlineElement1203,
																																				expr: &seqExpr{
																																					pos: position{line: 237, col: 48, offset: 8432},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 237, col: 48, offset: 8432},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 49, offset: 8433},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 237, col: 53, offset: 8437},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 54, offset: 8438},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 237, col: 58, offset: 8442},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 59, offset: 8443},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 237, col: 64, offset: 8448,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 225, col: 67, offset: 8017},
																														expr: &litMatcher{
																															pos:        position{line: 225, col: 67, offset: 8017},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 225, col: 72, offset: 8022},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonInlineElement1217,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 227, col: 5, offset: 8106},
																											run: (*parser).callonInlineElement1219,
																											expr: &seqExpr{
																												pos: position{line: 227, col: 5, offset: 8106},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 227, col: 5, offset: 8106},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 231, col: 17, offset: 8231},
																															run: (*parser).callonInlineElement1222,
																															expr: &seqExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 231, col: 17, offset: 8231},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9116},
																																			run: (*parser).callonInlineElement1225,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9116},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 28, offset: 8242},
																																		expr: &actionExpr{
																																			pos: position{line: 282, col: 14, offset: 9780},
																																			run: (*parser).callonInlineElement1228,
																																			expr: &litMatcher{
																																				pos:        position{line: 282, col: 14, offset: 9780},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 39, offset: 8253},
																																		expr: &actionExpr{
																																			pos: position{line: 1229, col: 16, offset: 48642},
																																			run: (*parser).callonInlineElement1231,
																																			expr: &litMatcher{
																																				pos:        position{line: 1229, col: 16, offset: 48642},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 231, col: 52, offset: 8266},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 231, col: 56, offset: 8270},
																																			expr: &choiceExpr{
																																				pos: position{line: 231, col: 57, offset: 8271},
																																				alternatives: []interface{}{
																																					&actionExpr{
																																						pos: position{line: 1264, col: 14, offset: 49515},
																																						run: (*parser).callonInlineElement1236,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1264, col: 14, offset: 49515},
																																							expr: &charClassMatcher{
																																								pos:        position{line: 1264, col: 14, offset: 49515},
																																								val:        "[a-zA-Z0-9]",
																																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																								ignoreCase: false,
																																								inverted:   false,
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 1278, col: 11, offset: 49909},
																																						run: (*parser).callonInlineElement1239,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1278, col: 11, offset: 49909},
																																							expr: &choiceExpr{
																																								pos: position{line: 1306, col: 7, offset: 50454},
																																								alternatives: []interface{}{
																																									&litMatcher{
																																										pos:        position{line: 1306, col: 7, offset: 50454},
																																										val:        " ",
																																										ignoreCase: false,
																																									},
																																									&actionExpr{
																																										pos: position{line: 1306, col: 13, offset: 50460},
																																										run: (*parser).callonInlineElement1243,
																																										expr: &litMatcher{
																																											pos:        position{line: 1306, col: 13, offset: 50460},
																																											val:        "\t",
																																											ignoreCase: false,
																																										},
																																									},
																																								},
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 231, col: 78, offset: 8292},
																																						run: (*parser).callonInlineElement1245,
																																						expr: &seqExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							exprs: []interface{}{
																																								&notExpr{
																																									pos: position{line: 231, col: 79, offset: 8293},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 80, offset: 8294},
																																										val:        "=",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 84, offset: 8298},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 85, offset: 8299},
																																										val:        ",",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 89, offset: 8303},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 90, offset: 8304},
																																										val:        "]",
																																										ignoreCase: false,
																																									},
																																								},
																																								&anyMatcher{
																																									line: 231, col: 95, offset: 8309,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 227, col: 24, offset: 8125},
																														expr: &litMatcher{
																															pos:        position{line: 227, col: 24, offset: 8125},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 227, col: 29, offset: 8130},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonInlineElement1259,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 917, col: 40, offset: 36595},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 898, col: 5, offset: 35929},
														run: (*parser).callonInlineElement1262,
														expr: &labeledExpr{
															pos:   position{line: 898, col: 5, offset: 35929},
															label: "url",
															expr: &actionExpr{
																pos: position{line: 902, col: 20, offset: 36025},
																run: (*parser).callonInlineElement1264,
																expr: &seqExpr{
																	pos: position{line: 902, col: 20, offset: 36025},
																	exprs: []interface{}{
																		&choiceExpr{
																			pos: position{line: 1300, col: 15, offset: 50339},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1300, col: 15, offset: 50339},
																					val:        "http://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1300, col: 27, offset: 50351},
																					val:        "https://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1300, col: 40, offset: 50364},
																					val:        "ftp://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1300, col: 51, offset: 50375},
																					val:        "irc://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1300, col: 62, offset: 50386},
																					val:        "mailto:",
																					ignoreCase: false,
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 1282, col: 8, offset: 49956},
																			run: (*parser).callonInlineElement1272,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1282, col: 8, offset: 49956},
																				expr: &choiceExpr{
																					pos: position{line: 1282, col: 9, offset: 49957},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonInlineElement1275,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1282, col: 21, offset: 49969},
																							run: (*parser).callonInlineElement1278,
																							expr: &seqExpr{
																								pos: position{line: 1282, col: 22, offset: 49970},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1282, col: 22, offset: 49970},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1282, col: 31, offset: 49979},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonInlineElement1287,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1282, col: 35, offset: 49983},
																										expr: &litMatcher{
																											pos:        position{line: 1282, col: 36, offset: 49984},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1282, col: 40, offset: 49988},
																										expr: &litMatcher{
																											pos:        position{line: 1282, col: 41, offset: 49989},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1282, col: 46, offset: 49994,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 660, col: 11, offset: 24214},
										name: "Passthrough",
									},
									&ruleRefExpr{
										pos:  position{line: 661, col: 11, offset: 24237},
										name: "InlineFootnote",
									},
									&actionExpr{
										pos: position{line: 1264, col: 14, offset: 49515},
										run: (*parser).callonInlineElement1296,
										expr: &oneOrMoreExpr{
											pos: position{line: 1264, col: 14, offset: 49515},
											expr: &charClassMatcher{
												pos:        position{line: 1264, col: 14, offset: 49515},
												val:        "[a-zA-Z0-9]",
												ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
												ignoreCase: false,
												inverted:   false,
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 663, col: 11, offset: 24284},
										name: "QuotedText",
									},
									&actionExpr{
										pos: position{line: 877, col: 19, offset: 35264},
										run: (*parser).callonInlineElement1300,
										expr: &seqExpr{
											pos: position{line: 877, col: 19, offset: 35264},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 877, col: 19, offset: 35264},
													val:        "<<",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 877, col: 24, offset: 35269},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 1288, col: 7, offset: 50075},
														run: (*parser).callonInlineElement1304,
														expr: &oneOrMoreExpr{
															pos: position{line: 1288, col: 7, offset: 50075},
															expr: &choiceExpr{
																pos: position{line: 1288, col: 8, offset: 50076},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 1264, col: 14, offset: 49515},
																		run: (*parser).callonInlineElement1307,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1264, col: 14, offset: 49515},
																			expr: &charClassMatcher{
																				pos:        position{line: 1264, col: 14, offset: 49515},
																				val:        "[a-zA-Z0-9]",
																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 1288, col: 20, offset: 50088},
																		run: (*parser).callonInlineElement1310,
																		expr: &seqExpr{
																			pos: position{line: 1288, col: 21, offset: 50089},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 1288, col: 21, offset: 50089},
																					expr: &choiceExpr{
																						pos: position{line: 1310, col: 12, offset: 50512},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1310, col: 12, offset: 50512},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 1310, col: 21, offset: 50521},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 30, offset: 50098},
																					expr: &choiceExpr{
																						pos: position{line: 1306, col: 7, offset: 50454},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1306, col: 7, offset: 50454},
																								val:        " ",
																								ignoreCase: false,
																							},
																							&actionExpr{
																								pos: position{line: 1306, col: 13, offset: 50460},
																								run: (*parser).callonInlineElement1319,
																								expr: &litMatcher{
																									pos:        position{line: 1306, col: 13, offset: 50460},
																									val:        "\t",
																									ignoreCase: false,
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 34, offset: 50102},
																					expr: &litMatcher{
																						pos:        position{line: 1288, col: 35, offset: 50103},
																						val:        "[",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 39, offset: 50107},
																					expr: &litMatcher{
																						pos:        position{line: 1288, col: 40, offset: 50108},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 44, offset: 50112},
																					expr: &litMatcher{
																						pos:        position{line: 1288, col: 45, offset: 50113},
																						val:        "<<",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 50, offset: 50118},
																					expr: &litMatcher{
																						pos:        position{line: 1288, col: 51, offset: 50119},
																						val:        ">>",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 56, offset: 50124},
																					expr: &litMatcher{
																						pos:        position{line: 1288, col: 57, offset: 50125},
																						val:        ",",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 1288, col: 62, offset: 50130,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 877, col: 32, offset: 35277},
													expr: &choiceExpr{
														pos: position{line: 1306, col: 7, offset: 50454},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1306, col: 7, offset: 50454},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1306, col: 13, offset: 50460},
																run: (*parser).callonInlineElement1335,
																expr: &litMatcher{
																	pos:        position{line: 1306, col: 13, offset: 50460},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 877, col: 36, offset: 35281},
													val:        ",",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 877, col: 40, offset: 35285},
													label: "label",
													expr: &actionExpr{
														pos: position{line: 883, col: 24, offset: 35487},
														run: (*parser).callonInlineElement1339,
														expr: &oneOrMoreExpr{
															pos: position{line: 883, col: 24, offset: 35487},
															expr: &choiceExpr{
																pos: position{line: 883, col: 25, offset: 35488},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 1264, col: 14, offset: 49515},
																		run: (*parser).callonInlineElement1342,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1264, col: 14, offset: 49515},
																			expr: &charClassMatcher{
																				pos:        position{line: 1264, col: 14, offset: 49515},
																				val:        "[a-zA-Z0-9]",
																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 1278, col: 11, offset: 49909},
																		run: (*parser).callonInlineElement1345,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1278, col: 11, offset: 49909},
																			expr: &choiceExpr{
																				pos: position{line: 1306, col: 7, offset: 50454},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1306, col: 7, offset: 50454},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1306, col: 13, offset: 50460},
																						run: (*parser).callonInlineElement1349,
																						expr: &litMatcher{
																							pos:        position{line: 1306, col: 13, offset: 50460},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 883, col: 46, offset: 35509},
																		run: (*parser).callonInlineElement1351,
																		expr: &seqExpr{
																			pos: position{line: 883, col: 47, offset: 35510},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 883, col: 47, offset: 35510},
																					expr: &litMatcher{
																						pos:        position{line: 883, col: 48, offset: 35511},
																						val:        ">>",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 883, col: 54, offset: 35517,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 877, col: 68, offset: 35313},
													val:        ">>",
													ignoreCase: false,
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 879, col: 5, offset: 35388},
										run: (*parser).callonInlineElement1357,
										expr: &seqExpr{
											pos: position{line: 879, col: 5, offset: 35388},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 879, col: 5, offset: 35388},
													val:        "<<",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 879, col: 10, offset: 35393},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 1288, col: 7, offset: 50075},
														run: (*parser).callonInlineElement1361,
														expr: &oneOrMoreExpr{
															pos: position{line: 1288, col: 7, offset: 50075},
															expr: &choiceExpr{
																pos: position{line: 1288, col: 8, offset: 50076},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 1264, col: 14, offset: 49515},
																		run: (*parser).callonInlineElement1364,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1264, col: 14, offset: 49515},
																			expr: &charClassMatcher{
																				pos:        position{line: 1264, col: 14, offset: 49515},
																				val:        "[a-zA-Z0-9]",
																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 1288, col: 20, offset: 50088},
																		run: (*parser).callonInlineElement1367,
																		expr: &seqExpr{
																			pos: position{line: 1288, col: 21, offset: 50089},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 1288, col: 21, offset: 50089},
																					expr: &choiceExpr{
																						pos: position{line: 1310, col: 12, offset: 50512},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1310, col: 12, offset: 50512},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 1310, col: 21, offset: 50521},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 30, offset: 50098},
																					expr: &choiceExpr{
																						pos: position{line: 1306, col: 7, offset: 50454},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1306, col: 7, offset: 50454},
																								val:        " ",
																								ignoreCase: false,
																							},
																							&actionExpr{
																								pos: position{line: 1306, col: 13, offset: 50460},
																								run: (*parser).callonInlineElement1376,
																								expr: &litMatcher{
																									pos:        position{line: 1306, col: 13, offset: 50460},
																									val:        "\t",
																									ignoreCase: false,
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 34, offset: 50102},
																					expr: &litMatcher{
																						pos:        position{line: 1288, col: 35, offset: 50103},
																						val:        "[",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 39, offset: 50107},
																					expr: &litMatcher{
																						pos:        position{line: 1288, col: 40, offset: 50108},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 44, offset: 50112},
																					expr: &litMatcher{
																						pos:        position{line: 1288, col: 45, offset: 50113},
																						val:        "<<",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 50, offset: 50118},
																					expr: &litMatcher{
																						pos:        position{line: 1288, col: 51, offset: 50119},
																						val:        ">>",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 56, offset: 50124},
																					expr: &litMatcher{
																						pos:        position{line: 1288, col: 57, offset: 50125},
																						val:        ",",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 1288, col: 62, offset: 50130,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 879, col: 18, offset: 35401},
													val:        ">>",
													ignoreCase: false,
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 120, col: 34, offset: 4391},
										run: (*parser).callonInlineElement1390,
										expr: &seqExpr{
											pos: position{line: 120, col: 34, offset: 4391},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 120, col: 34, offset: 4391},
													val:        "{",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 120, col: 38, offset: 4395},
													label: "name",
													expr: &actionExpr{
														pos: position{line: 127, col: 26, offset: 4690},
														run: (*parser).callonInlineElement1394,
														expr: &seqExpr{
															pos: position{line: 127, col: 26, offset: 4690},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 127, col: 27, offset: 4691},
																	val:        "[_A-Za-z0-9]",
																	chars:      []rune{'_'},
																	ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&zeroOrMoreExpr{
																	pos: position{line: 127, col: 56, offset: 4720},
																	expr: &charClassMatcher{
																		pos:        position{line: 127, col: 57, offset: 4721},
																		val:        "[-A-Za-z0-9]",
																		chars:      []rune{'-'},
																		ranges:     []rune{'A', 'Z', 'a', 'z', '0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 120, col: 67, offset: 4424},
													val:        "}",
													ignoreCase: false,
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 180, col: 20, offset: 6467},
										run: (*parser).callonInlineElement1400,
										expr: &seqExpr{
											pos: position{line: 180, col: 20, offset: 6467},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 180, col: 20, offset: 6467},
													val:        "[[",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 180, col: 25, offset: 6472},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 1288, col: 7, offset: 50075},
														run: (*parser).callonInlineElement1404,
														expr: &oneOrMoreExpr{
															pos: position{line: 1288, col: 7, offset: 50075},
															expr: &choiceExpr{
																pos: position{line: 1288, col: 8, offset: 50076},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 1264, col: 14, offset: 49515},
																		run: (*parser).callonInlineElement1407,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1264, col: 14, offset: 49515},
																			expr: &charClassMatcher{
																				pos:        position{line: 1264, col: 14, offset: 49515},
																				val:        "[a-zA-Z0-9]",
																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 1288, col: 20, offset: 50088},
																		run: (*parser).callonInlineElement1410,
																		expr: &seqExpr{
																			pos: position{line: 1288, col: 21, offset: 50089},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 1288, col: 21, offset: 50089},
																					expr: &choiceExpr{
																						pos: position{line: 1310, col: 12, offset: 50512},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1310, col: 12, offset: 50512},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 1310, col: 21, offset: 50521},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 30, offset: 50098},
																					expr: &choiceExpr{
																						pos: position{line: 1306, col: 7, offset: 50454},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1306, col: 7, offset: 50454},
																								val:        " ",
																								ignoreCase: false,
																							},
																							&actionExpr{
																								pos: position{line: 1306, col: 13, offset: 50460},
																								run: (*parser).callonInlineElement1419,
																								expr: &litMatcher{
																									pos:        position{line: 1306, col: 13, offset: 50460},
																									val:        "\t",
																									ignoreCase: false,
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 34, offset: 50102},
																					expr: &litMatcher{
																						pos:        position{line: 1288, col: 35, offset: 50103},
																						val:        "[",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 39, offset: 50107},
																					expr: &litMatcher{
																						pos:        position{line: 1288, col: 40, offset: 50108},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 44, offset: 50112},
																					expr: &litMatcher{
																						pos:        position{line: 1288, col: 45, offset: 50113},
																						val:        "<<",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 50, offset: 50118},
																					expr: &litMatcher{
																						pos:        position{line: 1288, col: 51, offset: 50119},
																						val:        ">>",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 56, offset: 50124},
																					expr: &litMatcher{
																						pos:        position{line: 1288, col: 57, offset: 50125},
																						val:        ",",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 1288, col: 62, offset: 50130,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 180, col: 33, offset: 6480},
													val:        "]]",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 180, col: 38, offset: 6485},
													expr: &choiceExpr{
														pos: position{line: 1306, col: 7, offset: 50454},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1306, col: 7, offset: 50454},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1306, col: 13, offset: 50460},
																run: (*parser).callonInlineElement1436,
																expr: &litMatcher{
																	pos:        position{line: 1306, col: 13, offset: 50460},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
									&charClassMatcher{
										pos:        position{line: 1262, col: 16, offset: 49479},
										val:        "[()[]]",
										chars:      []rune{'(', ')', '[', ']'},
										ignoreCase: false,
										inverted:   false,
									},
									&actionExpr{
										pos: position{line: 1272, col: 9, offset: 49619},
										run: (*parser).callonInlineElement1439,
										expr: &choiceExpr{
											pos: position{line: 1272, col: 10, offset: 49620},
											alternatives: []interface{}{
												&actionExpr{
													pos: position{line: 1264, col: 14, offset: 49515},
													run: (*parser).callonInlineElement1441,
													expr: &oneOrMoreExpr{
														pos: position{line: 1264, col: 14, offset: 49515},
														expr: &charClassMatcher{
															pos:        position{line: 1264, col: 14, offset: 49515},
															val:        "[a-zA-Z0-9]",
															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
												&oneOrMoreExpr{
													pos: position{line: 1272, col: 22, offset: 49632},
													expr: &actionExpr{
														pos: position{line: 1272, col: 23, offset: 49633},
														run: (*parser).callonInlineElement1445,
														expr: &seqExpr{
															pos: position{line: 1272, col: 24, offset: 49634},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 1272, col: 24, offset: 49634},
																	expr: &choiceExpr{
																		pos: position{line: 1310, col: 12, offset: 50512},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1310, col: 12, offset: 50512},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1310, col: 21, offset: 50521},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1272, col: 33, offset: 49643},
																	expr: &choiceExpr{
																		pos: position{line: 1306, col: 7, offset: 50454},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1306, col: 7, offset: 50454},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1306, col: 13, offset: 50460},
																				run: (*parser).callonInlineElement1454,
																				expr: &litMatcher{
																					pos:        position{line: 1306, col: 13, offset: 50460},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1272, col: 37, offset: 49647},
																	expr: &charClassMatcher{
																		pos:        position{line: 1262, col: 16, offset: 49479},
																		val:        "[()[]]",
																		chars:      []rune{'(', ')', '[', ']'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&notExpr{
																	pos: position{line: 1272, col: 50, offset: 49660},
																	expr: &litMatcher{
																		pos:        position{line: 1272, col: 51, offset: 49661},
																		val:        ".",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1272, col: 55, offset: 49665},
																	expr: &choiceExpr{
																		pos: position{line: 716, col: 33, offset: 26229},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 716, col: 33, offset: 26229},
																				val:        "^",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 716, col: 39, offset: 26235},
																				run: (*parser).callonInlineElement1463,
																				expr: &litMatcher{
																					pos:        position{line: 716, col: 39, offset: 26235},
																					val:        "~",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&anyMatcher{
																	line: 1272, col: 86, offset: 49696,
																},
															},
														},
													},
												},
												&oneOrMoreExpr{
													pos: position{line: 1274, col: 7, offset: 49737},
													expr: &litMatcher{
														pos:        position{line: 1274, col: 7, offset: 49737},
														val:        ".",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "InlineElementsWithoutSubtitution",
			pos:  position{line: 675, col: 1, offset: 24678},
			expr: &actionExpr{
				pos: position{line: 675, col: 37, offset: 24714},
				run: (*parser).callonInlineElementsWithoutSubtitution1,
				expr: &seqExpr{
					pos: position{line: 675, col: 37, offset: 24714},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 675, col: 37, offset: 24714},
							expr: &actionExpr{
								pos: position{line: 1253, col: 14, offset: 49283},
								run: (*parser).callonInlineElementsWithoutSubtitution4,
								expr: &seqExpr{
									pos: position{line: 1253, col: 14, offset: 49283},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 1253, col: 14, offset: 49283},
											expr: &notExpr{
												pos: position{line: 1312, col: 8, offset: 50541},
												expr: &anyMatcher{
													line: 1312, col: 9, offset: 50542,
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 1253, col: 19, offset: 49288},
											expr: &choiceExpr{
												pos: position{line: 1306, col: 7, offset: 50454},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1306, col: 7, offset: 50454},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1306, col: 13, offset: 50460},
														run: (*parser).callonInlineElementsWithoutSubtitution12,
														expr: &litMatcher{
															pos:        position{line: 1306, col: 13, offset: 50460},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1314, col: 8, offset: 50552},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1310, col: 12, offset: 50512},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1310, col: 21, offset: 50521},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1312, col: 8, offset: 50541},
													expr: &anyMatcher{
														line: 1312, col: 9, offset: 50542,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 675, col: 48, offset: 24725},
							expr: &choiceExpr{
								pos: position{line: 995, col: 19, offset: 39728},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1179, col: 26, offset: 46634},
										val:        "....",
										ignoreCase: false,
									},
									&seqExpr{
										pos: position{line: 1007, col: 25, offset: 40213},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 1007, col: 25, offset: 40213},
												val:        "```",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 1007, col: 31, offset: 40219},
												expr: &choiceExpr{
													pos: position{line: 1306, col: 7, offset: 50454},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1306, col: 7, offset: 50454},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1306, col: 13, offset: 50460},
															run: (*parser).callonInlineElementsWithoutSubtitution27,
															expr: &litMatcher{
																pos:        position{line: 1306, col: 13, offset: 50460},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1314, col: 8, offset: 50552},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1310, col: 12, offset: 50512},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1310, col: 21, offset: 50521},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1312, col: 8, offset: 50541},
														expr: &anyMatcher{
															line: 1312, col: 9, offset: 50542,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 1018, col: 26, offset: 40692},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 1018, col: 26, offset: 40692},
												val:        "----",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 1018, col: 33, offset: 40699},
												expr: &choiceExpr{
													pos: position{line: 1306, col: 7, offset: 50454},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1306, col: 7, offset: 50454},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1306, col: 13, offset: 50460},
															run: (*parser).callonInlineElementsWithoutSubtitution39,
															expr: &litMatcher{
																pos:        position{line: 1306, col: 13, offset: 50460},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1314, col: 8, offset: 50552},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1310, col: 12, offset: 50512},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1310, col: 21, offset: 50521},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1312, col: 8, offset: 50541},
														expr: &anyMatcher{
															line: 1312, col: 9, offset: 50542,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 1042, col: 26, offset: 41655},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 1042, col: 26, offset: 41655},
												val:        "====",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 1042, col: 33, offset: 41662},
												expr: &choiceExpr{
													pos: position{line: 1306, col: 7, offset: 50454},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1306, col: 7, offset: 50454},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1306, col: 13, offset: 50460},
															run: (*parser).callonInlineElementsWithoutSubtitution51,
															expr: &litMatcher{
																pos:        position{line: 1306, col: 13, offset: 50460},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1314, col: 8, offset: 50552},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1310, col: 12, offset: 50512},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1310, col: 21, offset: 50521},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1312, col: 8, offset: 50541},
														expr: &anyMatcher{
															line: 1312, col: 9, offset: 50542,
														},
													},
												},
											},
										},
									},
									&litMatcher{
										pos:        position{line: 1151, col: 26, offset: 45573},
										val:        "////",
										ignoreCase: false,
									},
									&seqExpr{
										pos: position{line: 1065, col: 24, offset: 42480},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 1065, col: 24, offset: 42480},
												val:        "____",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 1065, col: 31, offset: 42487},
												expr: &choiceExpr{
													pos: position{line: 1306, col: 7, offset: 50454},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1306, col: 7, offset: 50454},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1306, col: 13, offset: 50460},
															run: (*parser).callonInlineElementsWithoutSubtitution64,
															expr: &litMatcher{
																pos:        position{line: 1306, col: 13, offset: 50460},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1314, col: 8, offset: 50552},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1310, col: 12, offset: 50512},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1310, col: 21, offset: 50521},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1312, col: 8, offset: 50541},
														expr: &anyMatcher{
															line: 1312, col: 9, offset: 50542,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 1109, col: 26, offset: 44081},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 1109, col: 26, offset: 44081},
												val:        "****",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 1109, col: 33, offset: 44088},
												expr: &choiceExpr{
													pos: position{line: 1306, col: 7, offset: 50454},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1306, col: 7, offset: 50454},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1306, col: 13, offset: 50460},
															run: (*parser).callonInlineElementsWithoutSubtitution76,
															expr: &litMatcher{
																pos:        position{line: 1306, col: 13, offset: 50460},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1314, col: 8, offset: 50552},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1310, col: 12, offset: 50512},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1310, col: 21, offset: 50521},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1312, col: 8, offset: 50541},
														expr: &anyMatcher{
															line: 1312, col: 9, offset: 50542,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 675, col: 64, offset: 24741},
							label: "elements",
							expr: &oneOrMoreExpr{
								pos: position{line: 675, col: 73, offset: 24750},
								expr: &ruleRefExpr{
									pos:  position{line: 675, col: 74, offset: 24751},
									name: "InlineElementWithoutSubtitution",
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 675, col: 108, offset: 24785},
							label: "linebreak",
							expr: &zeroOrOneExpr{
								pos: position{line: 675, col: 118, offset: 24795},
								expr: &actionExpr{
									pos: position{line: 697, col: 14, offset: 25447},
									run: (*parser).callonInlineElementsWithoutSubtitution88,
									expr: &seqExpr{
										pos: position{line: 697, col: 14, offset: 25447},
										exprs: []interface{}{
											&choiceExpr{
												pos: position{line: 1306, col: 7, offset: 50454},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1306, col: 7, offset: 50454},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1306, col: 13, offset: 50460},
														run: (*parser).callonInlineElementsWithoutSubtitution92,
														expr: &litMatcher{
															pos:        position{line: 1306, col: 13, offset: 50460},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
											&litMatcher{
												pos:        position{line: 697, col: 17, offset: 25450},
												val:        "+",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 697, col: 21, offset: 25454},
												expr: &choiceExpr{
													pos: position{line: 1306, col: 7, offset: 50454},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1306, col: 7, offset: 50454},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1306, col: 13, offset: 50460},
															run: (*parser).callonInlineElementsWithoutSubtitution98,
															expr: &litMatcher{
																pos:        position{line: 1306, col: 13, offset: 50460},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&andExpr{
												pos: position{line: 697, col: 25, offset: 25458},
												expr: &choiceExpr{
													pos: position{line: 1314, col: 8, offset: 50552},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1310, col: 12, offset: 50512},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1310, col: 21, offset: 50521},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1312, col: 8, offset: 50541},
															expr: &anyMatcher{
																line: 1312, col: 9, offset: 50542,
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1314, col: 8, offset: 50552},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1310, col: 12, offset: 50512},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1310, col: 21, offset: 50521},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1312, col: 8, offset: 50541},
									expr: &anyMatcher{
										line: 1312, col: 9, offset: 50542,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "InlineElementWithoutSubtitution",
			pos:  position{line: 679, col: 1, offset: 24937},
			expr: &actionExpr{
				pos: position{line: 679, col: 36, offset: 24972},
				run: (*parser).callonInlineElementWithoutSubtitution1,
				expr: &seqExpr{
					pos: position{line: 679, col: 36, offset: 24972},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 679, col: 36, offset: 24972},
							expr: &choiceExpr{
								pos: position{line: 1314, col: 8, offset: 50552},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1310, col: 12, offset: 50512},
										val:        "\r\n",
										ignoreCase: false,
									},
									&charClassMatcher{
										pos:        position{line: 1310, col: 21, offset: 50521},
										val:        "[\\r\\n]",
										chars:      []rune{'\r', '\n'},
										ignoreCase: false,
										inverted:   false,
									},
									&notExpr{
										pos: position{line: 1312, col: 8, offset: 50541},
										expr: &anyMatcher{
											line: 1312, col: 9, offset: 50542,
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 679, col: 41, offset: 24977},
							expr: &actionExpr{
								pos: position{line: 697, col: 14, offset: 25447},
								run: (*parser).callonInlineElementWithoutSubtitution10,
								expr: &seqExpr{
									pos: position{line: 697, col: 14, offset: 25447},
									exprs: []interface{}{
										&choiceExpr{
											pos: position{line: 1306, col: 7, offset: 50454},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1306, col: 7, offset: 50454},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1306, col: 13, offset: 50460},
													run: (*parser).callonInlineElementWithoutSubtitution14,
													expr: &litMatcher{
														pos:        position{line: 1306, col: 13, offset: 50460},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
										&litMatcher{
											pos:        position{line: 697, col: 17, offset: 25450},
											val:        "+",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 697, col: 21, offset: 25454},
											expr: &choiceExpr{
												pos: position{line: 1306, col: 7, offset: 50454},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1306, col: 7, offset: 50454},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1306, col: 13, offset: 50460},
														run: (*parser).callonInlineElementWithoutSubtitution20,
														expr: &litMatcher{
															pos:        position{line: 1306, col: 13, offset: 50460},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&andExpr{
											pos: position{line: 697, col: 25, offset: 25458},
											expr: &choiceExpr{
												pos: position{line: 1314, col: 8, offset: 50552},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1310, col: 12, offset: 50512},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1310, col: 21, offset: 50521},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1312, col: 8, offset: 50541},
														expr: &anyMatcher{
															line: 1312, col: 9, offset: 50542,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 680, col: 5, offset: 24993},
							label: "element",
							expr: &choiceExpr{
								pos: position{line: 680, col: 14, offset: 25002},
								alternatives: []interface{}{
									&actionExpr{
										pos: position{line: 1278, col: 11, offset: 49909},
										run: (*parser).callonInlineElementWithoutSubtitution30,
										expr: &oneOrMoreExpr{
											pos: position{line: 1278, col: 11, offset: 49909},
											expr: &choiceExpr{
												pos: position{line: 1306, col: 7, offset: 50454},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1306, col: 7, offset: 50454},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1306, col: 13, offset: 50460},
														run: (*parser).callonInlineElementWithoutSubtitution34,
														expr: &litMatcher{
															pos:        position{line: 1306, col: 13, offset: 50460},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 1268, col: 8, offset: 49571},
										run: (*parser).callonInlineElementWithoutSubtitution36,
										expr: &litMatcher{
											pos:        position{line: 1268, col: 8, offset: 49571},
											val:        ".",
											ignoreCase: false,
										},
									},
									&actionExpr{
										pos: position{line: 934, col: 16, offset: 37105},
										run: (*parser).callonInlineElementWithoutSubtitution38,
										expr: &seqExpr{
											pos: position{line: 934, col: 16, offset: 37105},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 934, col: 16, offset: 37105},
													val:        "image:",
													ignoreCase: false,
												},
												&notExpr{
													pos: position{line: 934, col: 25, offset: 37114},
													expr: &litMatcher{
														pos:        position{line: 934, col: 26, offset: 37115},
														val:        ":",
														ignoreCase: false,
													},
												},
												&labeledExpr{
													pos:   position{line: 934, col: 30, offset: 37119},
													label: "path",
													expr: &actionExpr{
														pos: position{line: 1282, col: 8, offset: 49956},
														run: (*parser).callonInlineElementWithoutSubtitution44,
														expr: &oneOrMoreExpr{
															pos: position{line: 1282, col: 8, offset: 49956},
															expr: &choiceExpr{
																pos: position{line: 1282, col: 9, offset: 49957},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 1264, col: 14, offset: 49515},
																		run: (*parser).callonInlineElementWithoutSubtitution47,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1264, col: 14, offset: 49515},
																			expr: &charClassMatcher{
																				pos:        position{line: 1264, col: 14, offset: 49515},
																				val:        "[a-zA-Z0-9]",
																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 1282, col: 21, offset: 49969},
																		run: (*parser).callonInlineElementWithoutSubtitution50,
																		expr: &seqExpr{
																			pos: position{line: 1282, col: 22, offset: 49970},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 1282, col: 22, offset: 49970},
																					expr: &choiceExpr{
																						pos: position{line: 1310, col: 12, offset: 50512},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1310, col: 12, offset: 50512},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 1310, col: 21, offset: 50521},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1282, col: 31, offset: 49979},
																					expr: &choiceExpr{
																						pos: position{line: 1306, col: 7, offset: 50454},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1306, col: 7, offset: 50454},
																								val:        " ",
																								ignoreCase: false,
																							},
																							&actionExpr{
																								pos: position{line: 1306, col: 13, offset: 50460},
																								run: (*parser).callonInlineElementWithoutSubtitution59,
																								expr: &litMatcher{
																									pos:        position{line: 1306, col: 13, offset: 50460},
																									val:        "\t",
																									ignoreCase: false,
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1282, col: 35, offset: 49983},
																					expr: &litMatcher{
																						pos:        position{line: 1282, col: 36, offset: 49984},
																						val:        "[",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1282, col: 40, offset: 49988},
																					expr: &litMatcher{
																						pos:        position{line: 1282, col: 41, offset: 49989},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 1282, col: 46, offset: 49994,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&labeledExpr{
													pos:   position{line: 934, col: 41, offset: 37130},
													label: "inlineAttributes",
													expr: &choiceExpr{
														pos: position{line: 939, col: 20, offset: 37387},
														alternatives: []interface{}{
															&actionExpr{
																pos: position{line: 939, col: 20, offset: 37387},
																run: (*parser).callonInlineElementWithoutSubtitution68,
																expr: &seqExpr{
																	pos: position{line: 939, col: 20, offset: 37387},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 939, col: 20, offset: 37387},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 939, col: 24, offset: 37391},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 956, col: 19, offset: 38110},
																				run: (*parser).callonInlineElementWithoutSubtitution72,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 956, col: 19, offset: 38110},
																					expr: &choiceExpr{
																						pos: position{line: 956, col: 20, offset: 38111},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								run: (*parser).callonInlineElementWithoutSubtitution75,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1264, col: 14, offset: 49515},
																									expr: &charClassMatcher{
																										pos:        position{line: 1264, col: 14, offset: 49515},
																										val:        "[a-zA-Z0-9]",
																										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								run: (*parser).callonInlineElementWithoutSubtitution78,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1278, col: 11, offset: 49909},
																									expr: &choiceExpr{
																										pos: position{line: 1306, col: 7, offset: 50454},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1306, col: 7, offset: 50454},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1306, col: 13, offset: 50460},
																												run: (*parser).callonInlineElementWithoutSubtitution82,
																												expr: &litMatcher{
																													pos:        position{line: 1306, col: 13, offset: 50460},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 956, col: 41, offset: 38132},
																								run: (*parser).callonInlineElementWithoutSubtitution84,
																								expr: &seqExpr{
																									pos: position{line: 956, col: 42, offset: 38133},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 956, col: 42, offset: 38133},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 43, offset: 38134},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 956, col: 47, offset: 38138},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 48, offset: 38139},
																												val:        "=",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 956, col: 52, offset: 38143},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 53, offset: 38144},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 956, col: 57, offset: 38148,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 939, col: 45, offset: 37412},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 940, col: 5, offset: 37420},
																			label: "width",
																			expr: &actionExpr{
																				pos: position{line: 956, col: 19, offset: 38110},
																				run: (*parser).callonInlineElementWithoutSubtitution95,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 956, col: 19, offset: 38110},
																					expr: &choiceExpr{
																						pos: position{line: 956, col: 20, offset: 38111},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								run: (*parser).callonInlineElementWithoutSubtitution98,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1264, col: 14, offset: 49515},
																									expr: &charClassMatcher{
																										pos:        position{line: 1264, col: 14, offset: 49515},
																										val:        "[a-zA-Z0-9]",
																										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								run: (*parser).callonInlineElementWithoutSubtitution101,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1278, col: 11, offset: 49909},
																									expr: &choiceExpr{
																										pos: position{line: 1306, col: 7, offset: 50454},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1306, col: 7, offset: 50454},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1306, col: 13, offset: 50460},
																												run: (*parser).callonInlineElementWithoutSubtitution105,
																												expr: &litMatcher{
																													pos:        position{line: 1306, col: 13, offset: 50460},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 956, col: 41, offset: 38132},
																								run: (*parser).callonInlineElementWithoutSubtitution107,
																								expr: &seqExpr{
																									pos: position{line: 956, col: 42, offset: 38133},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 956, col: 42, offset: 38133},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 43, offset: 38134},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 956, col: 47, offset: 38138},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 48, offset: 38139},
																												val:        "=",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 956, col: 52, offset: 38143},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 53, offset: 38144},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 956, col: 57, offset: 38148,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 940, col: 29, offset: 37444},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 941, col: 5, offset: 37452},
																			label: "height",
																			expr: &actionExpr{
																				pos: position{line: 956, col: 19, offset: 38110},
																				run: (*parser).callonInlineElementWithoutSubtitution118,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 956, col: 19, offset: 38110},
																					expr: &choiceExpr{
																						pos: position{line: 956, col: 20, offset: 38111},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								run: (*parser).callonInlineElementWithoutSubtitution121,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1264, col: 14, offset: 49515},
																									expr: &charClassMatcher{
																										pos:        position{line: 1264, col: 14, offset: 49515},
																										val:        "[a-zA-Z0-9]",
																										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								run: (*parser).callonInlineElementWithoutSubtitution124,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1278, col: 11, offset: 49909},
																									expr: &choiceExpr{
																										pos: position{line: 1306, col: 7, offset: 50454},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1306, col: 7, offset: 50454},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1306, col: 13, offset: 50460},
																												run: (*parser).callonInlineElementWithoutSubtitution128,
																												expr: &litMatcher{
																													pos:        position{line: 1306, col: 13, offset: 50460},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 956, col: 41, offset: 38132},
																								run: (*parser).callonInlineElementWithoutSubtitution130,
																								expr: &seqExpr{
																									pos: position{line: 956, col: 42, offset: 38133},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 956, col: 42, offset: 38133},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 43, offset: 38134},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 956, col: 47, offset: 38138},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 48, offset: 38139},
																												val:        "=",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 956, col: 52, offset: 38143},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 53, offset: 38144},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 956, col: 57, offset: 38148,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 941, col: 29, offset: 37476},
																			expr: &litMatcher{
																				pos:        position{line: 941, col: 29, offset: 37476},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 942, col: 5, offset: 37485},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 942, col: 16, offset: 37496},
																				expr: &choiceExpr{
																					pos: position{line: 225, col: 21, offset: 7971},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							run: (*parser).callonInlineElementWithoutSubtitution144,
																							expr: &seqExpr{
																								pos: position{line: 225, col: 21, offset: 7971},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 225, col: 21, offset: 7971},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonInlineElementWithoutSubtitution147,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonInlineElementWithoutSubtitution150,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonInlineElementWithoutSubtitution153,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1229, col: 16, offset: 48642},
																															run: (*parser).callonInlineElementWithoutSubtitution156,
																															expr: &litMatcher{
																																pos:        position{line: 1229, col: 16, offset: 48642},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		run: (*parser).callonInlineElementWithoutSubtitution161,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1264, col: 14, offset: 49515},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1264, col: 14, offset: 49515},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		run: (*parser).callonInlineElementWithoutSubtitution164,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1278, col: 11, offset: 49909},
																																			expr: &choiceExpr{
																																				pos: position{line: 1306, col: 7, offset: 50454},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1306, col: 7, offset: 50454},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1306, col: 13, offset: 50460},
																																						run: (*parser).callonInlineElementWithoutSubtitution168,
																																						expr: &litMatcher{
																																							pos:        position{line: 1306, col: 13, offset: 50460},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonInlineElementWithoutSubtitution170,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 225, col: 40, offset: 7990},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 225, col: 44, offset: 7994},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 237, col: 19, offset: 8403},
																											run: (*parser).callonInlineElementWithoutSubtitution181,
																											expr: &labeledExpr{
																												pos:   position{line: 237, col: 19, offset: 8403},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 237, col: 25, offset: 8409},
																													expr: &choiceExpr{
																														pos: position{line: 237, col: 26, offset: 8410},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1264, col: 14, offset: 49515},
																																run: (*parser).callonInlineElementWithoutSubtitution185,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1264, col: 14, offset: 49515},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1264, col: 14, offset: 49515},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1278, col: 11, offset: 49909},
																																run: (*parser).callonInlineElementWithoutSubtitution188,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1278, col: 11, offset: 49909},
																																	expr: &choiceExpr{
																																		pos: position{line: 1306, col: 7, offset: 50454},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1306, col: 7, offset: 50454},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1306, col: 13, offset: 50460},
																																				run: (*parser).callonInlineElementWithoutSubtitution192,
																																				expr: &litMatcher{
																																					pos:        position{line: 1306, col: 13, offset: 50460},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 237, col: 47, offset: 8431},
																																run: (*parser).callonInlineElementWithoutSubtitution194,
																																expr: &seqExpr{
																																	pos: position{line: 237, col: 48, offset: 8432},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 237, col: 48, offset: 8432},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 49, offset: 8433},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 53, offset: 8437},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 54, offset: 8438},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 58, offset: 8442},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 59, offset: 8443},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 237, col: 64, offset: 8448,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 225, col: 67, offset: 8017},
																										expr: &litMatcher{
																											pos:        position{line: 225, col: 67, offset: 8017},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 225, col: 72, offset: 8022},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonInlineElementWithoutSubtitution208,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 227, col: 5, offset: 8106},
																							run: (*parser).callonInlineElementWithoutSubtitution210,
																							expr: &seqExpr{
																								pos: position{line: 227, col: 5, offset: 8106},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 227, col: 5, offset: 8106},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonInlineElementWithoutSubtitution213,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonInlineElementWithoutSubtitution216,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonInlineElementWithoutSubtitution219,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1229, col: 16, offset: 48642},
																															run: (*parser).callonInlineElementWithoutSubtitution222,
																															expr: &litMatcher{
																																pos:        position{line: 1229, col: 16, offset: 48642},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		run: (*parser).callonInlineElementWithoutSubtitution227,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1264, col: 14, offset: 49515},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1264, col: 14, offset: 49515},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		run: (*parser).callonInlineElementWithoutSubtitution230,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1278, col: 11, offset: 49909},
																																			expr: &choiceExpr{
																																				pos: position{line: 1306, col: 7, offset: 50454},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1306, col: 7, offset: 50454},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1306, col: 13, offset: 50460},
																																						run: (*parser).callonInlineElementWithoutSubtitution234,
																																						expr: &litMatcher{
																																							pos:        position{line: 1306, col: 13, offset: 50460},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonInlineElementWithoutSubtitution236,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 227, col: 24, offset: 8125},
																										expr: &litMatcher{
																											pos:        position{line: 227, col: 24, offset: 8125},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 227, col: 29, offset: 8130},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonInlineElementWithoutSubtitution250,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 942, col: 36, offset: 37516},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 944, col: 5, offset: 37614},
																run: (*parser).callonInlineElementWithoutSubtitution253,
																expr: &seqExpr{
																	pos: position{line: 944, col: 5, offset: 37614},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 944, col: 5, offset: 37614},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 944, col: 9, offset: 37618},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 956, col: 19, offset: 38110},
																				run: (*parser).callonInlineElementWithoutSubtitution257,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 956, col: 19, offset: 38110},
																					expr: &choiceExpr{
																						pos: position{line: 956, col: 20, offset: 38111},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								run: (*parser).callonInlineElementWithoutSubtitution260,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1264, col: 14, offset: 49515},
																									expr: &charClassMatcher{
																										pos:        position{line: 1264, col: 14, offset: 49515},
																										val:        "[a-zA-Z0-9]",
																										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								run: (*parser).callonInlineElementWithoutSubtitution263,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1278, col: 11, offset: 49909},
																									expr: &choiceExpr{
																										pos: position{line: 1306, col: 7, offset: 50454},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1306, col: 7, offset: 50454},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1306, col: 13, offset: 50460},
																												run: (*parser).callonInlineElementWithoutSubtitution267,
																												expr: &litMatcher{
																													pos:        position{line: 1306, col: 13, offset: 50460},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 956, col: 41, offset: 38132},
																								run: (*parser).callonInlineElementWithoutSubtitution269,
																								expr: &seqExpr{
																									pos: position{line: 956, col: 42, offset: 38133},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 956, col: 42, offset: 38133},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 43, offset: 38134},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 956, col: 47, offset: 38138},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 48, offset: 38139},
																												val:        "=",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 956, col: 52, offset: 38143},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 53, offset: 38144},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 956, col: 57, offset: 38148,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 944, col: 30, offset: 37639},
																			val:        ",",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 945, col: 5, offset: 37647},
																			label: "width",
																			expr: &actionExpr{
																				pos: position{line: 956, col: 19, offset: 38110},
																				run: (*parser).callonInlineElementWithoutSubtitution280,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 956, col: 19, offset: 38110},
																					expr: &choiceExpr{
																						pos: position{line: 956, col: 20, offset: 38111},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								run: (*parser).callonInlineElementWithoutSubtitution283,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1264, col: 14, offset: 49515},
																									expr: &charClassMatcher{
																										pos:        position{line: 1264, col: 14, offset: 49515},
																										val:        "[a-zA-Z0-9]",
																										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								run: (*parser).callonInlineElementWithoutSubtitution286,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1278, col: 11, offset: 49909},
																									expr: &choiceExpr{
																										pos: position{line: 1306, col: 7, offset: 50454},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1306, col: 7, offset: 50454},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1306, col: 13, offset: 50460},
																												run: (*parser).callonInlineElementWithoutSubtitution290,
																												expr: &litMatcher{
																													pos:        position{line: 1306, col: 13, offset: 50460},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 956, col: 41, offset: 38132},
																								run: (*parser).callonInlineElementWithoutSubtitution292,
																								expr: &seqExpr{
																									pos: position{line: 956, col: 42, offset: 38133},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 956, col: 42, offset: 38133},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 43, offset: 38134},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 956, col: 47, offset: 38138},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 48, offset: 38139},
																												val:        "=",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 956, col: 52, offset: 38143},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 53, offset: 38144},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 956, col: 57, offset: 38148,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 945, col: 28, offset: 37670},
																			expr: &litMatcher{
																				pos:        position{line: 945, col: 28, offset: 37670},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 946, col: 5, offset: 37679},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 946, col: 16, offset: 37690},
																				expr: &choiceExpr{
																					pos: position{line: 225, col: 21, offset: 7971},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							run: (*parser).callonInlineElementWithoutSubtitution306,
																							expr: &seqExpr{
																								pos: position{line: 225, col: 21, offset: 7971},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 225, col: 21, offset: 7971},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonInlineElementWithoutSubtitution309,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonInlineElementWithoutSubtitution312,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonInlineElementWithoutSubtitution315,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1229, col: 16, offset: 48642},
																															run: (*parser).callonInlineElementWithoutSubtitution318,
																															expr: &litMatcher{
																																pos:        position{line: 1229, col: 16, offset: 48642},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		run: (*parser).callonInlineElementWithoutSubtitution323,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1264, col: 14, offset: 49515},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1264, col: 14, offset: 49515},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		run: (*parser).callonInlineElementWithoutSubtitution326,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1278, col: 11, offset: 49909},
																																			expr: &choiceExpr{
																																				pos: position{line: 1306, col: 7, offset: 50454},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1306, col: 7, offset: 50454},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1306, col: 13, offset: 50460},
																																						run: (*parser).callonInlineElementWithoutSubtitution330,
																																						expr: &litMatcher{
																																							pos:        position{line: 1306, col: 13, offset: 50460},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonInlineElementWithoutSubtitution332,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 225, col: 40, offset: 7990},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 225, col: 44, offset: 7994},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 237, col: 19, offset: 8403},
																											run: (*parser).callonInlineElementWithoutSubtitution343,
																											expr: &labeledExpr{
																												pos:   position{line: 237, col: 19, offset: 8403},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 237, col: 25, offset: 8409},
																													expr: &choiceExpr{
																														pos: position{line: 237, col: 26, offset: 8410},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1264, col: 14, offset: 49515},
																																run: (*parser).callonInlineElementWithoutSubtitution347,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1264, col: 14, offset: 49515},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1264, col: 14, offset: 49515},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1278, col: 11, offset: 49909},
																																run: (*parser).callonInlineElementWithoutSubtitution350,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1278, col: 11, offset: 49909},
																																	expr: &choiceExpr{
																																		pos: position{line: 1306, col: 7, offset: 50454},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1306, col: 7, offset: 50454},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1306, col: 13, offset: 50460},
																																				run: (*parser).callonInlineElementWithoutSubtitution354,
																																				expr: &litMatcher{
																																					pos:        position{line: 1306, col: 13, offset: 50460},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 237, col: 47, offset: 8431},
																																run: (*parser).callonInlineElementWithoutSubtitution356,
																																expr: &seqExpr{
																																	pos: position{line: 237, col: 48, offset: 8432},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 237, col: 48, offset: 8432},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 49, offset: 8433},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 53, offset: 8437},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 54, offset: 8438},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 58, offset: 8442},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 59, offset: 8443},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 237, col: 64, offset: 8448,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 225, col: 67, offset: 8017},
																										expr: &litMatcher{
																											pos:        position{line: 225, col: 67, offset: 8017},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 225, col: 72, offset: 8022},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonInlineElementWithoutSubtitution370,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 227, col: 5, offset: 8106},
																							run: (*parser).callonInlineElementWithoutSubtitution372,
																							expr: &seqExpr{
																								pos: position{line: 227, col: 5, offset: 8106},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 227, col: 5, offset: 8106},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonInlineElementWithoutSubtitution375,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonInlineElementWithoutSubtitution378,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonInlineElementWithoutSubtitution381,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1229, col: 16, offset: 48642},
																															run: (*parser).callonInlineElementWithoutSubtitution384,
																															expr: &litMatcher{
																																pos:        position{line: 1229, col: 16, offset: 48642},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		run: (*parser).callonInlineElementWithoutSubtitution389,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1264, col: 14, offset: 49515},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1264, col: 14, offset: 49515},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		run: (*parser).callonInlineElementWithoutSubtitution392,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1278, col: 11, offset: 49909},
																																			expr: &choiceExpr{
																																				pos: position{line: 1306, col: 7, offset: 50454},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1306, col: 7, offset: 50454},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1306, col: 13, offset: 50460},
																																						run: (*parser).callonInlineElementWithoutSubtitution396,
																																						expr: &litMatcher{
																																							pos:        position{line: 1306, col: 13, offset: 50460},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonInlineElementWithoutSubtitution398,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 227, col: 24, offset: 8125},
																										expr: &litMatcher{
																											pos:        position{line: 227, col: 24, offset: 8125},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 227, col: 29, offset: 8130},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonInlineElementWithoutSubtitution412,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 946, col: 36, offset: 37710},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 948, col: 5, offset: 37805},
																run: (*parser).callonInlineElementWithoutSubtitution415,
																expr: &seqExpr{
																	pos: position{line: 948, col: 5, offset: 37805},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 948, col: 5, offset: 37805},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 948, col: 9, offset: 37809},
																			label: "alt",
																			expr: &actionExpr{
																				pos: position{line: 956, col: 19, offset: 38110},
																				run: (*parser).callonInlineElementWithoutSubtitution419,
																				expr: &oneOrMoreExpr{
																					pos: position{line: 956, col: 19, offset: 38110},
																					expr: &choiceExpr{
																						pos: position{line: 956, col: 20, offset: 38111},
																						alternatives: []interface{}{
																							&actionExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								run: (*parser).callonInlineElementWithoutSubtitution422,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1264, col: 14, offset: 49515},
																									expr: &charClassMatcher{
																										pos:        position{line: 1264, col: 14, offset: 49515},
																										val:        "[a-zA-Z0-9]",
																										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																										ignoreCase: false,
																										inverted:   false,
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 1278, col: 11, offset: 49909},
																								run: (*parser).callonInlineElementWithoutSubtitution425,
																								expr: &oneOrMoreExpr{
																									pos: position{line: 1278, col: 11, offset: 49909},
																									expr: &choiceExpr{
																										pos: position{line: 1306, col: 7, offset: 50454},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1306, col: 7, offset: 50454},
																												val:        " ",
																												ignoreCase: false,
																											},
																											&actionExpr{
																												pos: position{line: 1306, col: 13, offset: 50460},
																												run: (*parser).callonInlineElementWithoutSubtitution429,
																												expr: &litMatcher{
																													pos:        position{line: 1306, col: 13, offset: 50460},
																													val:        "\t",
																													ignoreCase: false,
																												},
																											},
																										},
																									},
																								},
																							},
																							&actionExpr{
																								pos: position{line: 956, col: 41, offset: 38132},
																								run: (*parser).callonInlineElementWithoutSubtitution431,
																								expr: &seqExpr{
																									pos: position{line: 956, col: 42, offset: 38133},
																									exprs: []interface{}{
																										&notExpr{
																											pos: position{line: 956, col: 42, offset: 38133},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 43, offset: 38134},
																												val:        ",",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 956, col: 47, offset: 38138},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 48, offset: 38139},
																												val:        "=",
																												ignoreCase: false,
																											},
																										},
																										&notExpr{
																											pos: position{line: 956, col: 52, offset: 38143},
																											expr: &litMatcher{
																												pos:        position{line: 956, col: 53, offset: 38144},
																												val:        "]",
																												ignoreCase: false,
																											},
																										},
																										&anyMatcher{
																											line: 956, col: 57, offset: 38148,
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&zeroOrOneExpr{
																			pos: position{line: 948, col: 30, offset: 37830},
																			expr: &litMatcher{
																				pos:        position{line: 948, col: 30, offset: 37830},
																				val:        ",",
																				ignoreCase: false,
																			},
																		},
																		&labeledExpr{
																			pos:   position{line: 949, col: 5, offset: 37839},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 949, col: 16, offset: 37850},
																				expr: &choiceExpr{
																					pos: position{line: 225, col: 21, offset: 7971},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							run: (*parser).callonInlineElementWithoutSubtitution445,
																							expr: &seqExpr{
																								pos: position{line: 225, col: 21, offset: 7971},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 225, col: 21, offset: 7971},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonInlineElementWithoutSubtitution448,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonInlineElementWithoutSubtitution451,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonInlineElementWithoutSubtitution454,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1229, col: 16, offset: 48642},
																															run: (*parser).callonInlineElementWithoutSubtitution457,
																															expr: &litMatcher{
																																pos:        position{line: 1229, col: 16, offset: 48642},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		run: (*parser).callonInlineElementWithoutSubtitution462,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1264, col: 14, offset: 49515},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1264, col: 14, offset: 49515},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		run: (*parser).callonInlineElementWithoutSubtitution465,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1278, col: 11, offset: 49909},
																																			expr: &choiceExpr{
																																				pos: position{line: 1306, col: 7, offset: 50454},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1306, col: 7, offset: 50454},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1306, col: 13, offset: 50460},
																																						run: (*parser).callonInlineElementWithoutSubtitution469,
																																						expr: &litMatcher{
																																							pos:        position{line: 1306, col: 13, offset: 50460},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonInlineElementWithoutSubtitution471,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 225, col: 40, offset: 7990},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 225, col: 44, offset: 7994},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 237, col: 19, offset: 8403},
																											run: (*parser).callonInlineElementWithoutSubtitution482,
																											expr: &labeledExpr{
																												pos:   position{line: 237, col: 19, offset: 8403},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 237, col: 25, offset: 8409},
																													expr: &choiceExpr{
																														pos: position{line: 237, col: 26, offset: 8410},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1264, col: 14, offset: 49515},
																																run: (*parser).callonInlineElementWithoutSubtitution486,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1264, col: 14, offset: 49515},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1264, col: 14, offset: 49515},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1278, col: 11, offset: 49909},
																																run: (*parser).callonInlineElementWithoutSubtitution489,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1278, col: 11, offset: 49909},
																																	expr: &choiceExpr{
																																		pos: position{line: 1306, col: 7, offset: 50454},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1306, col: 7, offset: 50454},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1306, col: 13, offset: 50460},
																																				run: (*parser).callonInlineElementWithoutSubtitution493,
																																				expr: &litMatcher{
																																					pos:        position{line: 1306, col: 13, offset: 50460},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 237, col: 47, offset: 8431},
																																run: (*parser).callonInlineElementWithoutSubtitution495,
																																expr: &seqExpr{
																																	pos: position{line: 237, col: 48, offset: 8432},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 237, col: 48, offset: 8432},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 49, offset: 8433},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 53, offset: 8437},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 54, offset: 8438},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 58, offset: 8442},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 59, offset: 8443},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 237, col: 64, offset: 8448,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 225, col: 67, offset: 8017},
																										expr: &litMatcher{
																											pos:        position{line: 225, col: 67, offset: 8017},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 225, col: 72, offset: 8022},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonInlineElementWithoutSubtitution509,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 227, col: 5, offset: 8106},
																							run: (*parser).callonInlineElementWithoutSubtitution511,
																							expr: &seqExpr{
																								pos: position{line: 227, col: 5, offset: 8106},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 227, col: 5, offset: 8106},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonInlineElementWithoutSubtitution514,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonInlineElementWithoutSubtitution517,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonInlineElementWithoutSubtitution520,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1229, col: 16, offset: 48642},
																															run: (*parser).callonInlineElementWithoutSubtitution523,
																															expr: &litMatcher{
																																pos:        position{line: 1229, col: 16, offset: 48642},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		run: (*parser).callonInlineElementWithoutSubtitution528,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1264, col: 14, offset: 49515},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1264, col: 14, offset: 49515},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		run: (*parser).callonInlineElementWithoutSubtitution531,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1278, col: 11, offset: 49909},
																																			expr: &choiceExpr{
																																				pos: position{line: 1306, col: 7, offset: 50454},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1306, col: 7, offset: 50454},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1306, col: 13, offset: 50460},
																																						run: (*parser).callonInlineElementWithoutSubtitution535,
																																						expr: &litMatcher{
																																							pos:        position{line: 1306, col: 13, offset: 50460},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonInlineElementWithoutSubtitution537,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 227, col: 24, offset: 8125},
																										expr: &litMatcher{
																											pos:        position{line: 227, col: 24, offset: 8125},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 227, col: 29, offset: 8130},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonInlineElementWithoutSubtitution551,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 949, col: 36, offset: 37870},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
															&actionExpr{
																pos: position{line: 951, col: 5, offset: 37963},
																run: (*parser).callonInlineElementWithoutSubtitution554,
																expr: &seqExpr{
																	pos: position{line: 951, col: 5, offset: 37963},
																	exprs: []interface{}{
																		&litMatcher{
																			pos:        position{line: 951, col: 5, offset: 37963},
																			val:        "[",
																			ignoreCase: false,
																		},
																		&labeledExpr{
																			pos:   position{line: 951, col: 9, offset: 37967},
																			label: "otherAttrs",
																			expr: &zeroOrMoreExpr{
																				pos: position{line: 951, col: 20, offset: 37978},
																				expr: &choiceExpr{
																					pos: position{line: 225, col: 21, offset: 7971},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 225, col: 21, offset: 7971},
																							run: (*parser).callonInlineElementWithoutSubtitution560,
																							expr: &seqExpr{
																								pos: position{line: 225, col: 21, offset: 7971},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 225, col: 21, offset: 7971},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonInlineElementWithoutSubtitution563,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonInlineElementWithoutSubtitution566,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonInlineElementWithoutSubtitution569,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1229, col: 16, offset: 48642},
																															run: (*parser).callonInlineElementWithoutSubtitution572,
																															expr: &litMatcher{
																																pos:        position{line: 1229, col: 16, offset: 48642},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		run: (*parser).callonInlineElementWithoutSubtitution577,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1264, col: 14, offset: 49515},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1264, col: 14, offset: 49515},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		run: (*parser).callonInlineElementWithoutSubtitution580,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1278, col: 11, offset: 49909},
																																			expr: &choiceExpr{
																																				pos: position{line: 1306, col: 7, offset: 50454},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1306, col: 7, offset: 50454},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1306, col: 13, offset: 50460},
																																						run: (*parser).callonInlineElementWithoutSubtitution584,
																																						expr: &litMatcher{
																																							pos:        position{line: 1306, col: 13, offset: 50460},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonInlineElementWithoutSubtitution586,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&litMatcher{
																										pos:        position{line: 225, col: 40, offset: 7990},
																										val:        "=",
																										ignoreCase: false,
																									},
																									&labeledExpr{
																										pos:   position{line: 225, col: 44, offset: 7994},
																										label: "value",
																										expr: &actionExpr{
																											pos: position{line: 237, col: 19, offset: 8403},
																											run: (*parser).callonInlineElementWithoutSubtitution597,
																											expr: &labeledExpr{
																												pos:   position{line: 237, col: 19, offset: 8403},
																												label: "value",
																												expr: &zeroOrMoreExpr{
																													pos: position{line: 237, col: 25, offset: 8409},
																													expr: &choiceExpr{
																														pos: position{line: 237, col: 26, offset: 8410},
																														alternatives: []interface{}{
																															&actionExpr{
																																pos: position{line: 1264, col: 14, offset: 49515},
																																run: (*parser).callonInlineElementWithoutSubtitution601,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1264, col: 14, offset: 49515},
																																	expr: &charClassMatcher{
																																		pos:        position{line: 1264, col: 14, offset: 49515},
																																		val:        "[a-zA-Z0-9]",
																																		ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																		ignoreCase: false,
																																		inverted:   false,
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 1278, col: 11, offset: 49909},
																																run: (*parser).callonInlineElementWithoutSubtitution604,
																																expr: &oneOrMoreExpr{
																																	pos: position{line: 1278, col: 11, offset: 49909},
																																	expr: &choiceExpr{
																																		pos: position{line: 1306, col: 7, offset: 50454},
																																		alternatives: []interface{}{
																																			&litMatcher{
																																				pos:        position{line: 1306, col: 7, offset: 50454},
																																				val:        " ",
																																				ignoreCase: false,
																																			},
																																			&actionExpr{
																																				pos: position{line: 1306, col: 13, offset: 50460},
																																				run: (*parser).callonInlineElementWithoutSubtitution608,
																																				expr: &litMatcher{
																																					pos:        position{line: 1306, col: 13, offset: 50460},
																																					val:        "\t",
																																					ignoreCase: false,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																															&actionExpr{
																																pos: position{line: 237, col: 47, offset: 8431},
																																run: (*parser).callonInlineElementWithoutSubtitution610,
																																expr: &seqExpr{
																																	pos: position{line: 237, col: 48, offset: 8432},
																																	exprs: []interface{}{
																																		&notExpr{
																																			pos: position{line: 237, col: 48, offset: 8432},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 49, offset: 8433},
																																				val:        "=",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 53, offset: 8437},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 54, offset: 8438},
																																				val:        ",",
																																				ignoreCase: false,
																																			},
																																		},
																																		&notExpr{
																																			pos: position{line: 237, col: 58, offset: 8442},
																																			expr: &litMatcher{
																																				pos:        position{line: 237, col: 59, offset: 8443},
																																				val:        "]",
																																				ignoreCase: false,
																																			},
																																		},
																																		&anyMatcher{
																																			line: 237, col: 64, offset: 8448,
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 225, col: 67, offset: 8017},
																										expr: &litMatcher{
																											pos:        position{line: 225, col: 67, offset: 8017},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 225, col: 72, offset: 8022},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonInlineElementWithoutSubtitution624,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 227, col: 5, offset: 8106},
																							run: (*parser).callonInlineElementWithoutSubtitution626,
																							expr: &seqExpr{
																								pos: position{line: 227, col: 5, offset: 8106},
																								exprs: []interface{}{
																									&labeledExpr{
																										pos:   position{line: 227, col: 5, offset: 8106},
																										label: "key",
																										expr: &actionExpr{
																											pos: position{line: 231, col: 17, offset: 8231},
																											run: (*parser).callonInlineElementWithoutSubtitution629,
																											expr: &seqExpr{
																												pos: position{line: 231, col: 17, offset: 8231},
																												exprs: []interface{}{
																													&notExpr{
																														pos: position{line: 231, col: 17, offset: 8231},
																														expr: &actionExpr{
																															pos: position{line: 259, col: 14, offset: 9116},
																															run: (*parser).callonInlineElementWithoutSubtitution632,
																															expr: &litMatcher{
																																pos:        position{line: 259, col: 14, offset: 9116},
																																val:        "quote",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 28, offset: 8242},
																														expr: &actionExpr{
																															pos: position{line: 282, col: 14, offset: 9780},
																															run: (*parser).callonInlineElementWithoutSubtitution635,
																															expr: &litMatcher{
																																pos:        position{line: 282, col: 14, offset: 9780},
																																val:        "verse",
																																ignoreCase: false,
																															},
																														},
																													},
																													&notExpr{
																														pos: position{line: 231, col: 39, offset: 8253},
																														expr: &actionExpr{
																															pos: position{line: 1229, col: 16, offset: 48642},
																															run: (*parser).callonInlineElementWithoutSubtitution638,
																															expr: &litMatcher{
																																pos:        position{line: 1229, col: 16, offset: 48642},
																																val:        "literal",
																																ignoreCase: false,
																															},
																														},
																													},
																													&labeledExpr{
																														pos:   position{line: 231, col: 52, offset: 8266},
																														label: "key",
																														expr: &oneOrMoreExpr{
																															pos: position{line: 231, col: 56, offset: 8270},
																															expr: &choiceExpr{
																																pos: position{line: 231, col: 57, offset: 8271},
																																alternatives: []interface{}{
																																	&actionExpr{
																																		pos: position{line: 1264, col: 14, offset: 49515},
																																		run: (*parser).callonInlineElementWithoutSubtitution643,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1264, col: 14, offset: 49515},
																																			expr: &charClassMatcher{
																																				pos:        position{line: 1264, col: 14, offset: 49515},
																																				val:        "[a-zA-Z0-9]",
																																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																				ignoreCase: false,
																																				inverted:   false,
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 1278, col: 11, offset: 49909},
																																		run: (*parser).callonInlineElementWithoutSubtitution646,
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 1278, col: 11, offset: 49909},
																																			expr: &choiceExpr{
																																				pos: position{line: 1306, col: 7, offset: 50454},
																																				alternatives: []interface{}{
																																					&litMatcher{
																																						pos:        position{line: 1306, col: 7, offset: 50454},
																																						val:        " ",
																																						ignoreCase: false,
																																					},
																																					&actionExpr{
																																						pos: position{line: 1306, col: 13, offset: 50460},
																																						run: (*parser).callonInlineElementWithoutSubtitution650,
																																						expr: &litMatcher{
																																							pos:        position{line: 1306, col: 13, offset: 50460},
																																							val:        "\t",
																																							ignoreCase: false,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																	&actionExpr{
																																		pos: position{line: 231, col: 78, offset: 8292},
																																		run: (*parser).callonInlineElementWithoutSubtitution652,
																																		expr: &seqExpr{
																																			pos: position{line: 231, col: 79, offset: 8293},
																																			exprs: []interface{}{
																																				&notExpr{
																																					pos: position{line: 231, col: 79, offset: 8293},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 80, offset: 8294},
																																						val:        "=",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 84, offset: 8298},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 85, offset: 8299},
																																						val:        ",",
																																						ignoreCase: false,
																																					},
																																				},
																																				&notExpr{
																																					pos: position{line: 231, col: 89, offset: 8303},
																																					expr: &litMatcher{
																																						pos:        position{line: 231, col: 90, offset: 8304},
																																						val:        "]",
																																						ignoreCase: false,
																																					},
																																				},
																																				&anyMatcher{
																																					line: 231, col: 95, offset: 8309,
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																									&zeroOrOneExpr{
																										pos: position{line: 227, col: 24, offset: 8125},
																										expr: &litMatcher{
																											pos:        position{line: 227, col: 24, offset: 8125},
																											val:        ",",
																											ignoreCase: false,
																										},
																									},
																									&zeroOrMoreExpr{
																										pos: position{line: 227, col: 29, offset: 8130},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonInlineElementWithoutSubtitution666,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																		&litMatcher{
																			pos:        position{line: 951, col: 40, offset: 37998},
																			val:        "]",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 892, col: 9, offset: 35701},
										run: (*parser).callonInlineElementWithoutSubtitution669,
										expr: &labeledExpr{
											pos:   position{line: 892, col: 9, offset: 35701},
											label: "link",
											expr: &choiceExpr{
												pos: position{line: 892, col: 15, offset: 35707},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 907, col: 17, offset: 36159},
														run: (*parser).callonInlineElementWithoutSubtitution672,
														expr: &seqExpr{
															pos: position{line: 907, col: 17, offset: 36159},
															exprs: []interface{}{
																&litMatcher{
																	pos:        position{line: 907, col: 17, offset: 36159},
																	val:        "link:",
																	ignoreCase: false,
																},
																&labeledExpr{
																	pos:   position{line: 907, col: 25, offset: 36167},
																	label: "url",
																	expr: &actionExpr{
																		pos: position{line: 911, col: 20, offset: 36336},
																		run: (*parser).callonInlineElementWithoutSubtitution676,
																		expr: &seqExpr{
																			pos: position{line: 911, col: 20, offset: 36336},
																			exprs: []interface{}{
																				&zeroOrOneExpr{
																					pos: position{line: 911, col: 20, offset: 36336},
																					expr: &choiceExpr{
																						pos: position{line: 1300, col: 15, offset: 50339},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1300, col: 15, offset: 50339},
																								val:        "http://",
																								ignoreCase: false,
																							},
																							&litMatcher{
																								pos:        position{line: 1300, col: 27, offset: 50351},
																								val:        "https://",
																								ignoreCase: false,
																							},
																							&litMatcher{
																								pos:        position{line: 1300, col: 40, offset: 50364},
																								val:        "ftp://",
																								ignoreCase: false,
																							},
																							&litMatcher{
																								pos:        position{line: 1300, col: 51, offset: 50375},
																								val:        "irc://",
																								ignoreCase: false,
																							},
																							&litMatcher{
																								pos:        position{line: 1300, col: 62, offset: 50386},
																								val:        "mailto:",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 1282, col: 8, offset: 49956},
																					run: (*parser).callonInlineElementWithoutSubtitution685,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1282, col: 8, offset: 49956},
																						expr: &choiceExpr{
																							pos: position{line: 1282, col: 9, offset: 49957},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 1264, col: 14, offset: 49515},
																									run: (*parser).callonInlineElementWithoutSubtitution688,
																									expr: &oneOrMoreExpr{
																										pos: position{line: 1264, col: 14, offset: 49515},
																										expr: &charClassMatcher{
																											pos:        position{line: 1264, col: 14, offset: 49515},
																											val:        "[a-zA-Z0-9]",
																											ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																											ignoreCase: false,
																											inverted:   false,
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 1282, col: 21, offset: 49969},
																									run: (*parser).callonInlineElementWithoutSubtitution691,
																									expr: &seqExpr{
																										pos: position{line: 1282, col: 22, offset: 49970},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 1282, col: 22, offset: 49970},
																												expr: &choiceExpr{
																													pos: position{line: 1310, col: 12, offset: 50512},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1310, col: 12, offset: 50512},
																															val:        "\r\n",
																															ignoreCase: false,
																														},
																														&charClassMatcher{
																															pos:        position{line: 1310, col: 21, offset: 50521},
																															val:        "[\\r\\n]",
																															chars:      []rune{'\r', '\n'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 1282, col: 31, offset: 49979},
																												expr: &choiceExpr{
																													pos: position{line: 1306, col: 7, offset: 50454},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1306, col: 7, offset: 50454},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1306, col: 13, offset: 50460},
																															run: (*parser).callonInlineElementWithoutSubtitution700,
																															expr: &litMatcher{
																																pos:        position{line: 1306, col: 13, offset: 50460},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 1282, col: 35, offset: 49983},
																												expr: &litMatcher{
																													pos:        position{line: 1282, col: 36, offset: 49984},
																													val:        "[",
																													ignoreCase: false,
																												},
																											},
																											&notExpr{
																												pos: position{line: 1282, col: 40, offset: 49988},
																												expr: &litMatcher{
																													pos:        position{line: 1282, col: 41, offset: 49989},
																													val:        "]",
																													ignoreCase: false,
																												},
																											},
																											&anyMatcher{
																												line: 1282, col: 46, offset: 49994,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 907, col: 47, offset: 36189},
																	label: "inlineAttributes",
																	expr: &choiceExpr{
																		pos: position{line: 915, col: 19, offset: 36406},
																		alternatives: []interface{}{
																			&actionExpr{
																				pos: position{line: 915, col: 19, offset: 36406},
																				run: (*parser).callonInlineElementWithoutSubtitution709,
																				expr: &seqExpr{
																					pos: position{line: 915, col: 19, offset: 36406},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 915, col: 19, offset: 36406},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 915, col: 23, offset: 36410},
																							label: "text",
																							expr: &actionExpr{
																								pos: position{line: 921, col: 22, offset: 36700},
																								run: (*parser).callonInlineElementWithoutSubtitution713,
																								expr: &zeroOrMoreExpr{
																									pos: position{line: 921, col: 22, offset: 36700},
																									expr: &choiceExpr{
																										pos: position{line: 921, col: 23, offset: 36701},
																										alternatives: []interface{}{
																											&actionExpr{
																												pos: position{line: 1264, col: 14, offset: 49515},
																												run: (*parser).callonInlineElementWithoutSubtitution716,
																												expr: &oneOrMoreExpr{
																													pos: position{line: 1264, col: 14, offset: 49515},
																													expr: &charClassMatcher{
																														pos:        position{line: 1264, col: 14, offset: 49515},
																														val:        "[a-zA-Z0-9]",
																														ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																											&actionExpr{
																												pos: position{line: 1278, col: 11, offset: 49909},
																												run: (*parser).callonInlineElementWithoutSubtitution719,
																												expr: &oneOrMoreExpr{
																													pos: position{line: 1278, col: 11, offset: 49909},
																													expr: &choiceExpr{
																														pos: position{line: 1306, col: 7, offset: 50454},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1306, col: 7, offset: 50454},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1306, col: 13, offset: 50460},
																																run: (*parser).callonInlineElementWithoutSubtitution723,
																																expr: &litMatcher{
																																	pos:        position{line: 1306, col: 13, offset: 50460},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																											&actionExpr{
																												pos: position{line: 921, col: 44, offset: 36722},
																												run: (*parser).callonInlineElementWithoutSubtitution725,
																												expr: &seqExpr{
																													pos: position{line: 921, col: 45, offset: 36723},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 921, col: 45, offset: 36723},
																															expr: &litMatcher{
																																pos:        position{line: 921, col: 46, offset: 36724},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 921, col: 50, offset: 36728},
																															expr: &litMatcher{
																																pos:        position{line: 921, col: 51, offset: 36729},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 921, col: 55, offset: 36733},
																															expr: &litMatcher{
																																pos:        position{line: 921, col: 56, offset: 36734},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 921, col: 61, offset: 36739,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&zeroOrOneExpr{
																							pos: position{line: 915, col: 48, offset: 36435},
																							expr: &litMatcher{
																								pos:        position{line: 915, col: 48, offset: 36435},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&zeroOrMoreExpr{
																							pos: position{line: 915, col: 53, offset: 36440},
																							expr: &choiceExpr{
																								pos: position{line: 1306, col: 7, offset: 50454},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1306, col: 7, offset: 50454},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1306, col: 13, offset: 50460},
																										run: (*parser).callonInlineElementWithoutSubtitution739,
																										expr: &litMatcher{
																											pos:        position{line: 1306, col: 13, offset: 50460},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&labeledExpr{
																							pos:   position{line: 915, col: 57, offset: 36444},
																							label: "otherAttrs",
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 915, col: 68, offset: 36455},
																								expr: &choiceExpr{
																									pos: position{line: 225, col: 21, offset: 7971},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 225, col: 21, offset: 7971},
																											run: (*parser).callonInlineElementWithoutSubtitution744,
																											expr: &seqExpr{
																												pos: position{line: 225, col: 21, offset: 7971},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 225, col: 21, offset: 7971},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 231, col: 17, offset: 8231},
																															run: (*parser).callonInlineElementWithoutSubtitution747,
																															expr: &seqExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 231, col: 17, offset: 8231},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9116},
																																			run: (*parser).callonInlineElementWithoutSubtitution750,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9116},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 28, offset: 8242},
																																		expr: &actionExpr{
																																			pos: position{line: 282, col: 14, offset: 9780},
																																			run: (*parser).callonInlineElementWithoutSubtitution753,
																																			expr: &litMatcher{
																																				pos:        position{line: 282, col: 14, offset: 9780},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 39, offset: 8253},
																																		expr: &actionExpr{
																																			pos: position{line: 1229, col: 16, offset: 48642},
																																			run: (*parser).callonInlineElementWithoutSubtitution756,
																																			expr: &litMatcher{
																																				pos:        position{line: 1229, col: 16, offset: 48642},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 231, col: 52, offset: 8266},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 231, col: 56, offset: 8270},
																																			expr: &choiceExpr{
																																				pos: position{line: 231, col: 57, offset: 8271},
																																				alternatives: []interface{}{
																																					&actionExpr{
																																						pos: position{line: 1264, col: 14, offset: 49515},
																																						run: (*parser).callonInlineElementWithoutSubtitution761,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1264, col: 14, offset: 49515},
																																							expr: &charClassMatcher{
																																								pos:        position{line: 1264, col: 14, offset: 49515},
																																								val:        "[a-zA-Z0-9]",
																																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																								ignoreCase: false,
																																								inverted:   false,
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 1278, col: 11, offset: 49909},
																																						run: (*parser).callonInlineElementWithoutSubtitution764,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1278, col: 11, offset: 49909},
																																							expr: &choiceExpr{
																																								pos: position{line: 1306, col: 7, offset: 50454},
																																								alternatives: []interface{}{
																																									&litMatcher{
																																										pos:        position{line: 1306, col: 7, offset: 50454},
																																										val:        " ",
																																										ignoreCase: false,
																																									},
																																									&actionExpr{
																																										pos: position{line: 1306, col: 13, offset: 50460},
																																										run: (*parser).callonInlineElementWithoutSubtitution768,
																																										expr: &litMatcher{
																																											pos:        position{line: 1306, col: 13, offset: 50460},
																																											val:        "\t",
																																											ignoreCase: false,
																																										},
																																									},
																																								},
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 231, col: 78, offset: 8292},
																																						run: (*parser).callonInlineElementWithoutSubtitution770,
																																						expr: &seqExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							exprs: []interface{}{
																																								&notExpr{
																																									pos: position{line: 231, col: 79, offset: 8293},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 80, offset: 8294},
																																										val:        "=",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 84, offset: 8298},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 85, offset: 8299},
																																										val:        ",",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 89, offset: 8303},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 90, offset: 8304},
																																										val:        "]",
																																										ignoreCase: false,
																																									},
																																								},
																																								&anyMatcher{
																																									line: 231, col: 95, offset: 8309,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&litMatcher{
																														pos:        position{line: 225, col: 40, offset: 7990},
																														val:        "=",
																														ignoreCase: false,
																													},
																													&labeledExpr{
																														pos:   position{line: 225, col: 44, offset: 7994},
																														label: "value",
																														expr: &actionExpr{
																															pos: position{line: 237, col: 19, offset: 8403},
																															run: (*parser).callonInlineElementWithoutSubtitution781,
																															expr: &labeledExpr{
																																pos:   position{line: 237, col: 19, offset: 8403},
																																label: "value",
																																expr: &zeroOrMoreExpr{
																																	pos: position{line: 237, col: 25, offset: 8409},
																																	expr: &choiceExpr{
																																		pos: position{line: 237, col: 26, offset: 8410},
																																		alternatives: []interface{}{
																																			&actionExpr{
																																				pos: position{line: 1264, col: 14, offset: 49515},
																																				run: (*parser).callonInlineElementWithoutSubtitution785,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1264, col: 14, offset: 49515},
																																					expr: &charClassMatcher{
																																						pos:        position{line: 1264, col: 14, offset: 49515},
																																						val:        "[a-zA-Z0-9]",
																																						ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																						ignoreCase: false,
																																						inverted:   false,
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 1278, col: 11, offset: 49909},
																																				run: (*parser).callonInlineElementWithoutSubtitution788,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1278, col: 11, offset: 49909},
																																					expr: &choiceExpr{
																																						pos: position{line: 1306, col: 7, offset: 50454},
																																						alternatives: []interface{}{
																																							&litMatcher{
																																								pos:        position{line: 1306, col: 7, offset: 50454},
																																								val:        " ",
																																								ignoreCase: false,
																																							},
																																							&actionExpr{
																																								pos: position{line: 1306, col: 13, offset: 50460},
																																								run: (*parser).callonInlineElementWithoutSubtitution792,
																																								expr: &litMatcher{
																																									pos:        position{line: 1306, col: 13, offset: 50460},
																																									val:        "\t",
																																									ignoreCase: false,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 237, col: 47, offset: 8431},
																																				run: (*parser).callonInlineElementWithoutSubtitution794,
																																				expr: &seqExpr{
																																					pos: position{line: 237, col: 48, offset: 8432},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 237, col: 48, offset: 8432},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 49, offset: 8433},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 237, col: 53, offset: 8437},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 54, offset: 8438},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 237, col: 58, offset: 8442},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 59, offset: 8443},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 237, col: 64, offset: 8448,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 225, col: 67, offset: 8017},
																														expr: &litMatcher{
																															pos:        position{line: 225, col: 67, offset: 8017},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 225, col: 72, offset: 8022},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonInlineElementWithoutSubtitution808,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 227, col: 5, offset: 8106},
																											run: (*parser).callonInlineElementWithoutSubtitution810,
																											expr: &seqExpr{
																												pos: position{line: 227, col: 5, offset: 8106},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 227, col: 5, offset: 8106},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 231, col: 17, offset: 8231},
																															run: (*parser).callonInlineElementWithoutSubtitution813,
																															expr: &seqExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 231, col: 17, offset: 8231},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9116},
																																			run: (*parser).callonInlineElementWithoutSubtitution816,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9116},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 28, offset: 8242},
																																		expr: &actionExpr{
																																			pos: position{line: 282, col: 14, offset: 9780},
																																			run: (*parser).callonInlineElementWithoutSubtitution819,
																																			expr: &litMatcher{
																																				pos:        position{line: 282, col: 14, offset: 9780},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 39, offset: 8253},
																																		expr: &actionExpr{
																																			pos: position{line: 1229, col: 16, offset: 48642},
																																			run: (*parser).callonInlineElementWithoutSubtitution822,
																																			expr: &litMatcher{
																																				pos:        position{line: 1229, col: 16, offset: 48642},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 231, col: 52, offset: 8266},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 231, col: 56, offset: 8270},
																																			expr: &choiceExpr{
																																				pos: position{line: 231, col: 57, offset: 8271},
																																				alternatives: []interface{}{
																																					&actionExpr{
																																						pos: position{line: 1264, col: 14, offset: 49515},
																																						run: (*parser).callonInlineElementWithoutSubtitution827,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1264, col: 14, offset: 49515},
																																							expr: &charClassMatcher{
																																								pos:        position{line: 1264, col: 14, offset: 49515},
																																								val:        "[a-zA-Z0-9]",
																																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																								ignoreCase: false,
																																								inverted:   false,
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 1278, col: 11, offset: 49909},
																																						run: (*parser).callonInlineElementWithoutSubtitution830,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1278, col: 11, offset: 49909},
																																							expr: &choiceExpr{
																																								pos: position{line: 1306, col: 7, offset: 50454},
																																								alternatives: []interface{}{
																																									&litMatcher{
																																										pos:        position{line: 1306, col: 7, offset: 50454},
																																										val:        " ",
																																										ignoreCase: false,
																																									},
																																									&actionExpr{
																																										pos: position{line: 1306, col: 13, offset: 50460},
																																										run: (*parser).callonInlineElementWithoutSubtitution834,
																																										expr: &litMatcher{
																																											pos:        position{line: 1306, col: 13, offset: 50460},
																																											val:        "\t",
																																											ignoreCase: false,
																																										},
																																									},
																																								},
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 231, col: 78, offset: 8292},
																																						run: (*parser).callonInlineElementWithoutSubtitution836,
																																						expr: &seqExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							exprs: []interface{}{
																																								&notExpr{
																																									pos: position{line: 231, col: 79, offset: 8293},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 80, offset: 8294},
																																										val:        "=",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 84, offset: 8298},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 85, offset: 8299},
																																										val:        ",",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 89, offset: 8303},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 90, offset: 8304},
																																										val:        "]",
																																										ignoreCase: false,
																																									},
																																								},
																																								&anyMatcher{
																																									line: 231, col: 95, offset: 8309,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 227, col: 24, offset: 8125},
																														expr: &litMatcher{
																															pos:        position{line: 227, col: 24, offset: 8125},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 227, col: 29, offset: 8130},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonInlineElementWithoutSubtitution850,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 915, col: 88, offset: 36475},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																			&actionExpr{
																				pos: position{line: 917, col: 5, offset: 36560},
																				run: (*parser).callonInlineElementWithoutSubtitution853,
																				expr: &seqExpr{
																					pos: position{line: 917, col: 5, offset: 36560},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 917, col: 5, offset: 36560},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 917, col: 9, offset: 36564},
																							label: "otherAttrs",
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 917, col: 20, offset: 36575},
																								expr: &choiceExpr{
																									pos: position{line: 225, col: 21, offset: 7971},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 225, col: 21, offset: 7971},
																											run: (*parser).callonInlineElementWithoutSubtitution859,
																											expr: &seqExpr{
																												pos: position{line: 225, col: 21, offset: 7971},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 225, col: 21, offset: 7971},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 231, col: 17, offset: 8231},
																															run: (*parser).callonInlineElementWithoutSubtitution862,
																															expr: &seqExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 231, col: 17, offset: 8231},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9116},
																																			run: (*parser).callonInlineElementWithoutSubtitution865,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9116},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 28, offset: 8242},
																																		expr: &actionExpr{
																																			pos: position{line: 282, col: 14, offset: 9780},
																																			run: (*parser).callonInlineElementWithoutSubtitution868,
																																			expr: &litMatcher{
																																				pos:        position{line: 282, col: 14, offset: 9780},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 39, offset: 8253},
																																		expr: &actionExpr{
																																			pos: position{line: 1229, col: 16, offset: 48642},
																																			run: (*parser).callonInlineElementWithoutSubtitution871,
																																			expr: &litMatcher{
																																				pos:        position{line: 1229, col: 16, offset: 48642},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 231, col: 52, offset: 8266},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 231, col: 56, offset: 8270},
																																			expr: &choiceExpr{
																																				pos: position{line: 231, col: 57, offset: 8271},
																																				alternatives: []interface{}{
																																					&actionExpr{
																																						pos: position{line: 1264, col: 14, offset: 49515},
																																						run: (*parser).callonInlineElementWithoutSubtitution876,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1264, col: 14, offset: 49515},
																																							expr: &charClassMatcher{
																																								pos:        position{line: 1264, col: 14, offset: 49515},
																																								val:        "[a-zA-Z0-9]",
																																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																								ignoreCase: false,
																																								inverted:   false,
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 1278, col: 11, offset: 49909},
																																						run: (*parser).callonInlineElementWithoutSubtitution879,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1278, col: 11, offset: 49909},
																																							expr: &choiceExpr{
																																								pos: position{line: 1306, col: 7, offset: 50454},
																																								alternatives: []interface{}{
																																									&litMatcher{
																																										pos:        position{line: 1306, col: 7, offset: 50454},
																																										val:        " ",
																																										ignoreCase: false,
																																									},
																																									&actionExpr{
																																										pos: position{line: 1306, col: 13, offset: 50460},
																																										run: (*parser).callonInlineElementWithoutSubtitution883,
																																										expr: &litMatcher{
																																											pos:        position{line: 1306, col: 13, offset: 50460},
																																											val:        "\t",
																																											ignoreCase: false,
																																										},
																																									},
																																								},
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 231, col: 78, offset: 8292},
																																						run: (*parser).callonInlineElementWithoutSubtitution885,
																																						expr: &seqExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							exprs: []interface{}{
																																								&notExpr{
																																									pos: position{line: 231, col: 79, offset: 8293},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 80, offset: 8294},
																																										val:        "=",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 84, offset: 8298},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 85, offset: 8299},
																																										val:        ",",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 89, offset: 8303},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 90, offset: 8304},
																																										val:        "]",
																																										ignoreCase: false,
																																									},
																																								},
																																								&anyMatcher{
																																									line: 231, col: 95, offset: 8309,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&litMatcher{
																														pos:        position{line: 225, col: 40, offset: 7990},
																														val:        "=",
																														ignoreCase: false,
																													},
																													&labeledExpr{
																														pos:   position{line: 225, col: 44, offset: 7994},
																														label: "value",
																														expr: &actionExpr{
																															pos: position{line: 237, col: 19, offset: 8403},
																															run: (*parser).callonInlineElementWithoutSubtitution896,
																															expr: &labeledExpr{
																																pos:   position{line: 237, col: 19, offset: 8403},
																																label: "value",
																																expr: &zeroOrMoreExpr{
																																	pos: position{line: 237, col: 25, offset: 8409},
																																	expr: &choiceExpr{
																																		pos: position{line: 237, col: 26, offset: 8410},
																																		alternatives: []interface{}{
																																			&actionExpr{
																																				pos: position{line: 1264, col: 14, offset: 49515},
																																				run: (*parser).callonInlineElementWithoutSubtitution900,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1264, col: 14, offset: 49515},
																																					expr: &charClassMatcher{
																																						pos:        position{line: 1264, col: 14, offset: 49515},
																																						val:        "[a-zA-Z0-9]",
																																						ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																						ignoreCase: false,
																																						inverted:   false,
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 1278, col: 11, offset: 49909},
																																				run: (*parser).callonInlineElementWithoutSubtitution903,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1278, col: 11, offset: 49909},
																																					expr: &choiceExpr{
																																						pos: position{line: 1306, col: 7, offset: 50454},
																																						alternatives: []interface{}{
																																							&litMatcher{
																																								pos:        position{line: 1306, col: 7, offset: 50454},
																																								val:        " ",
																																								ignoreCase: false,
																																							},
																																							&actionExpr{
																																								pos: position{line: 1306, col: 13, offset: 50460},
																																								run: (*parser).callonInlineElementWithoutSubtitution907,
																																								expr: &litMatcher{
																																									pos:        position{line: 1306, col: 13, offset: 50460},
																																									val:        "\t",
																																									ignoreCase: false,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 237, col: 47, offset: 8431},
																																				run: (*parser).callonInlineElementWithoutSubtitution909,
																																				expr: &seqExpr{
																																					pos: position{line: 237, col: 48, offset: 8432},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 237, col: 48, offset: 8432},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 49, offset: 8433},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 237, col: 53, offset: 8437},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 54, offset: 8438},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 237, col: 58, offset: 8442},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 59, offset: 8443},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 237, col: 64, offset: 8448,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 225, col: 67, offset: 8017},
																														expr: &litMatcher{
																															pos:        position{line: 225, col: 67, offset: 8017},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 225, col: 72, offset: 8022},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonInlineElementWithoutSubtitution923,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 227, col: 5, offset: 8106},
																											run: (*parser).callonInlineElementWithoutSubtitution925,
																											expr: &seqExpr{
																												pos: position{line: 227, col: 5, offset: 8106},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 227, col: 5, offset: 8106},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 231, col: 17, offset: 8231},
																															run: (*parser).callonInlineElementWithoutSubtitution928,
																															expr: &seqExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 231, col: 17, offset: 8231},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9116},
																																			run: (*parser).callonInlineElementWithoutSubtitution931,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9116},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 28, offset: 8242},
																																		expr: &actionExpr{
																																			pos: position{line: 282, col: 14, offset: 9780},
																																			run: (*parser).callonInlineElementWithoutSubtitution934,
																																			expr: &litMatcher{
																																				pos:        position{line: 282, col: 14, offset: 9780},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 39, offset: 8253},
																																		expr: &actionExpr{
																																			pos: position{line: 1229, col: 16, offset: 48642},
																																			run: (*parser).callonInlineElementWithoutSubtitution937,
																																			expr: &litMatcher{
																																				pos:        position{line: 1229, col: 16, offset: 48642},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 231, col: 52, offset: 8266},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 231, col: 56, offset: 8270},
																																			expr: &choiceExpr{
																																				pos: position{line: 231, col: 57, offset: 8271},
																																				alternatives: []interface{}{
																																					&actionExpr{
																																						pos: position{line: 1264, col: 14, offset: 49515},
																																						run: (*parser).callonInlineElementWithoutSubtitution942,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1264, col: 14, offset: 49515},
																																							expr: &charClassMatcher{
																																								pos:        position{line: 1264, col: 14, offset: 49515},
																																								val:        "[a-zA-Z0-9]",
																																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																								ignoreCase: false,
																																								inverted:   false,
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 1278, col: 11, offset: 49909},
																																						run: (*parser).callonInlineElementWithoutSubtitution945,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1278, col: 11, offset: 49909},
																																							expr: &choiceExpr{
																																								pos: position{line: 1306, col: 7, offset: 50454},
																																								alternatives: []interface{}{
																																									&litMatcher{
																																										pos:        position{line: 1306, col: 7, offset: 50454},
																																										val:        " ",
																																										ignoreCase: false,
																																									},
																																									&actionExpr{
																																										pos: position{line: 1306, col: 13, offset: 50460},
																																										run: (*parser).callonInlineElementWithoutSubtitution949,
																																										expr: &litMatcher{
																																											pos:        position{line: 1306, col: 13, offset: 50460},
																																											val:        "\t",
																																											ignoreCase: false,
																																										},
																																									},
																																								},
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 231, col: 78, offset: 8292},
																																						run: (*parser).callonInlineElementWithoutSubtitution951,
																																						expr: &seqExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							exprs: []interface{}{
																																								&notExpr{
																																									pos: position{line: 231, col: 79, offset: 8293},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 80, offset: 8294},
																																										val:        "=",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 84, offset: 8298},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 85, offset: 8299},
																																										val:        ",",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 89, offset: 8303},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 90, offset: 8304},
																																										val:        "]",
																																										ignoreCase: false,
																																									},
																																								},
																																								&anyMatcher{
																																									line: 231, col: 95, offset: 8309,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 227, col: 24, offset: 8125},
																														expr: &litMatcher{
																															pos:        position{line: 227, col: 24, offset: 8125},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 227, col: 29, offset: 8130},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonInlineElementWithoutSubtitution965,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 917, col: 40, offset: 36595},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 896, col: 17, offset: 35778},
														run: (*parser).callonInlineElementWithoutSubtitution968,
														expr: &seqExpr{
															pos: position{line: 896, col: 17, offset: 35778},
															exprs: []interface{}{
																&labeledExpr{
																	pos:   position{line: 896, col: 17, offset: 35778},
																	label: "url",
																	expr: &actionExpr{
																		pos: position{line: 902, col: 20, offset: 36025},
																		run: (*parser).callonInlineElementWithoutSubtitution971,
																		expr: &seqExpr{
																			pos: position{line: 902, col: 20, offset: 36025},
																			exprs: []interface{}{
																				&choiceExpr{
																					pos: position{line: 1300, col: 15, offset: 50339},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1300, col: 15, offset: 50339},
																							val:        "http://",
																							ignoreCase: false,
																						},
																						&litMatcher{
																							pos:        position{line: 1300, col: 27, offset: 50351},
																							val:        "https://",
																							ignoreCase: false,
																						},
																						&litMatcher{
																							pos:        position{line: 1300, col: 40, offset: 50364},
																							val:        "ftp://",
																							ignoreCase: false,
																						},
																						&litMatcher{
																							pos:        position{line: 1300, col: 51, offset: 50375},
																							val:        "irc://",
																							ignoreCase: false,
																						},
																						&litMatcher{
																							pos:        position{line: 1300, col: 62, offset: 50386},
																							val:        "mailto:",
																							ignoreCase: false,
																						},
																					},
																				},
																				&actionExpr{
																					pos: position{line: 1282, col: 8, offset: 49956},
																					run: (*parser).callonInlineElementWithoutSubtitution979,
																					expr: &oneOrMoreExpr{
																						pos: position{line: 1282, col: 8, offset: 49956},
																						expr: &choiceExpr{
																							pos: position{line: 1282, col: 9, offset: 49957},
																							alternatives: []interface{}{
																								&actionExpr{
																									pos: position{line: 1264, col: 14, offset: 49515},
																									run: (*parser).callonInlineElementWithoutSubtitution982,
																									expr: &oneOrMoreExpr{
																										pos: position{line: 1264, col: 14, offset: 49515},
																										expr: &charClassMatcher{
																											pos:        position{line: 1264, col: 14, offset: 49515},
																											val:        "[a-zA-Z0-9]",
																											ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																											ignoreCase: false,
																											inverted:   false,
																										},
																									},
																								},
																								&actionExpr{
																									pos: position{line: 1282, col: 21, offset: 49969},
																									run: (*parser).callonInlineElementWithoutSubtitution985,
																									expr: &seqExpr{
																										pos: position{line: 1282, col: 22, offset: 49970},
																										exprs: []interface{}{
																											&notExpr{
																												pos: position{line: 1282, col: 22, offset: 49970},
																												expr: &choiceExpr{
																													pos: position{line: 1310, col: 12, offset: 50512},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1310, col: 12, offset: 50512},
																															val:        "\r\n",
																															ignoreCase: false,
																														},
																														&charClassMatcher{
																															pos:        position{line: 1310, col: 21, offset: 50521},
																															val:        "[\\r\\n]",
																															chars:      []rune{'\r', '\n'},
																															ignoreCase: false,
																															inverted:   false,
																														},
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 1282, col: 31, offset: 49979},
																												expr: &choiceExpr{
																													pos: position{line: 1306, col: 7, offset: 50454},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1306, col: 7, offset: 50454},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1306, col: 13, offset: 50460},
																															run: (*parser).callonInlineElementWithoutSubtitution994,
																															expr: &litMatcher{
																																pos:        position{line: 1306, col: 13, offset: 50460},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																											&notExpr{
																												pos: position{line: 1282, col: 35, offset: 49983},
																												expr: &litMatcher{
																													pos:        position{line: 1282, col: 36, offset: 49984},
																													val:        "[",
																													ignoreCase: false,
																												},
																											},
																											&notExpr{
																												pos: position{line: 1282, col: 40, offset: 49988},
																												expr: &litMatcher{
																													pos:        position{line: 1282, col: 41, offset: 49989},
																													val:        "]",
																													ignoreCase: false,
																												},
																											},
																											&anyMatcher{
																												line: 1282, col: 46, offset: 49994,
																											},
																										},
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 896, col: 39, offset: 35800},
																	label: "inlineAttributes",
																	expr: &choiceExpr{
																		pos: position{line: 915, col: 19, offset: 36406},
																		alternatives: []interface{}{
																			&actionExpr{
																				pos: position{line: 915, col: 19, offset: 36406},
																				run: (*parser).callonInlineElementWithoutSubtitution1003,
																				expr: &seqExpr{
																					pos: position{line: 915, col: 19, offset: 36406},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 915, col: 19, offset: 36406},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 915, col: 23, offset: 36410},
																							label: "text",
																							expr: &actionExpr{
																								pos: position{line: 921, col: 22, offset: 36700},
																								run: (*parser).callonInlineElementWithoutSubtitution1007,
																								expr: &zeroOrMoreExpr{
																									pos: position{line: 921, col: 22, offset: 36700},
																									expr: &choiceExpr{
																										pos: position{line: 921, col: 23, offset: 36701},
																										alternatives: []interface{}{
																											&actionExpr{
																												pos: position{line: 1264, col: 14, offset: 49515},
																												run: (*parser).callonInlineElementWithoutSubtitution1010,
																												expr: &oneOrMoreExpr{
																													pos: position{line: 1264, col: 14, offset: 49515},
																													expr: &charClassMatcher{
																														pos:        position{line: 1264, col: 14, offset: 49515},
																														val:        "[a-zA-Z0-9]",
																														ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																												},
																											},
																											&actionExpr{
																												pos: position{line: 1278, col: 11, offset: 49909},
																												run: (*parser).callonInlineElementWithoutSubtitution1013,
																												expr: &oneOrMoreExpr{
																													pos: position{line: 1278, col: 11, offset: 49909},
																													expr: &choiceExpr{
																														pos: position{line: 1306, col: 7, offset: 50454},
																														alternatives: []interface{}{
																															&litMatcher{
																																pos:        position{line: 1306, col: 7, offset: 50454},
																																val:        " ",
																																ignoreCase: false,
																															},
																															&actionExpr{
																																pos: position{line: 1306, col: 13, offset: 50460},
																																run: (*parser).callonInlineElementWithoutSubtitution1017,
																																expr: &litMatcher{
																																	pos:        position{line: 1306, col: 13, offset: 50460},
																																	val:        "\t",
																																	ignoreCase: false,
																																},
																															},
																														},
																													},
																												},
																											},
																											&actionExpr{
																												pos: position{line: 921, col: 44, offset: 36722},
																												run: (*parser).callonInlineElementWithoutSubtitution1019,
																												expr: &seqExpr{
																													pos: position{line: 921, col: 45, offset: 36723},
																													exprs: []interface{}{
																														&notExpr{
																															pos: position{line: 921, col: 45, offset: 36723},
																															expr: &litMatcher{
																																pos:        position{line: 921, col: 46, offset: 36724},
																																val:        "=",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 921, col: 50, offset: 36728},
																															expr: &litMatcher{
																																pos:        position{line: 921, col: 51, offset: 36729},
																																val:        ",",
																																ignoreCase: false,
																															},
																														},
																														&notExpr{
																															pos: position{line: 921, col: 55, offset: 36733},
																															expr: &litMatcher{
																																pos:        position{line: 921, col: 56, offset: 36734},
																																val:        "]",
																																ignoreCase: false,
																															},
																														},
																														&anyMatcher{
																															line: 921, col: 61, offset: 36739,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&zeroOrOneExpr{
																							pos: position{line: 915, col: 48, offset: 36435},
																							expr: &litMatcher{
																								pos:        position{line: 915, col: 48, offset: 36435},
																								val:        ",",
																								ignoreCase: false,
																							},
																						},
																						&zeroOrMoreExpr{
																							pos: position{line: 915, col: 53, offset: 36440},
																							expr: &choiceExpr{
																								pos: position{line: 1306, col: 7, offset: 50454},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1306, col: 7, offset: 50454},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1306, col: 13, offset: 50460},
																										run: (*parser).callonInlineElementWithoutSubtitution1033,
																										expr: &litMatcher{
																											pos:        position{line: 1306, col: 13, offset: 50460},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																						&labeledExpr{
																							pos:   position{line: 915, col: 57, offset: 36444},
																							label: "otherAttrs",
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 915, col: 68, offset: 36455},
																								expr: &choiceExpr{
																									pos: position{line: 225, col: 21, offset: 7971},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 225, col: 21, offset: 7971},
																											run: (*parser).callonInlineElementWithoutSubtitution1038,
																											expr: &seqExpr{
																												pos: position{line: 225, col: 21, offset: 7971},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 225, col: 21, offset: 7971},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 231, col: 17, offset: 8231},
																															run: (*parser).callonInlineElementWithoutSubtitution1041,
																															expr: &seqExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 231, col: 17, offset: 8231},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9116},
																																			run: (*parser).callonInlineElementWithoutSubtitution1044,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9116},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 28, offset: 8242},
																																		expr: &actionExpr{
																																			pos: position{line: 282, col: 14, offset: 9780},
																																			run: (*parser).callonInlineElementWithoutSubtitution1047,
																																			expr: &litMatcher{
																																				pos:        position{line: 282, col: 14, offset: 9780},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 39, offset: 8253},
																																		expr: &actionExpr{
																																			pos: position{line: 1229, col: 16, offset: 48642},
																																			run: (*parser).callonInlineElementWithoutSubtitution1050,
																																			expr: &litMatcher{
																																				pos:        position{line: 1229, col: 16, offset: 48642},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 231, col: 52, offset: 8266},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 231, col: 56, offset: 8270},
																																			expr: &choiceExpr{
																																				pos: position{line: 231, col: 57, offset: 8271},
																																				alternatives: []interface{}{
																																					&actionExpr{
																																						pos: position{line: 1264, col: 14, offset: 49515},
																																						run: (*parser).callonInlineElementWithoutSubtitution1055,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1264, col: 14, offset: 49515},
																																							expr: &charClassMatcher{
																																								pos:        position{line: 1264, col: 14, offset: 49515},
																																								val:        "[a-zA-Z0-9]",
																																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																								ignoreCase: false,
																																								inverted:   false,
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 1278, col: 11, offset: 49909},
																																						run: (*parser).callonInlineElementWithoutSubtitution1058,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1278, col: 11, offset: 49909},
																																							expr: &choiceExpr{
																																								pos: position{line: 1306, col: 7, offset: 50454},
																																								alternatives: []interface{}{
																																									&litMatcher{
																																										pos:        position{line: 1306, col: 7, offset: 50454},
																																										val:        " ",
																																										ignoreCase: false,
																																									},
																																									&actionExpr{
																																										pos: position{line: 1306, col: 13, offset: 50460},
																																										run: (*parser).callonInlineElementWithoutSubtitution1062,
																																										expr: &litMatcher{
																																											pos:        position{line: 1306, col: 13, offset: 50460},
																																											val:        "\t",
																																											ignoreCase: false,
																																										},
																																									},
																																								},
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 231, col: 78, offset: 8292},
																																						run: (*parser).callonInlineElementWithoutSubtitution1064,
																																						expr: &seqExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							exprs: []interface{}{
																																								&notExpr{
																																									pos: position{line: 231, col: 79, offset: 8293},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 80, offset: 8294},
																																										val:        "=",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 84, offset: 8298},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 85, offset: 8299},
																																										val:        ",",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 89, offset: 8303},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 90, offset: 8304},
																																										val:        "]",
																																										ignoreCase: false,
																																									},
																																								},
																																								&anyMatcher{
																																									line: 231, col: 95, offset: 8309,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&litMatcher{
																														pos:        position{line: 225, col: 40, offset: 7990},
																														val:        "=",
																														ignoreCase: false,
																													},
																													&labeledExpr{
																														pos:   position{line: 225, col: 44, offset: 7994},
																														label: "value",
																														expr: &actionExpr{
																															pos: position{line: 237, col: 19, offset: 8403},
																															run: (*parser).callonInlineElementWithoutSubtitution1075,
																															expr: &labeledExpr{
																																pos:   position{line: 237, col: 19, offset: 8403},
																																label: "value",
																																expr: &zeroOrMoreExpr{
																																	pos: position{line: 237, col: 25, offset: 8409},
																																	expr: &choiceExpr{
																																		pos: position{line: 237, col: 26, offset: 8410},
																																		alternatives: []interface{}{
																																			&actionExpr{
																																				pos: position{line: 1264, col: 14, offset: 49515},
																																				run: (*parser).callonInlineElementWithoutSubtitution1079,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1264, col: 14, offset: 49515},
																																					expr: &charClassMatcher{
																																						pos:        position{line: 1264, col: 14, offset: 49515},
																																						val:        "[a-zA-Z0-9]",
																																						ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																						ignoreCase: false,
																																						inverted:   false,
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 1278, col: 11, offset: 49909},
																																				run: (*parser).callonInlineElementWithoutSubtitution1082,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1278, col: 11, offset: 49909},
																																					expr: &choiceExpr{
																																						pos: position{line: 1306, col: 7, offset: 50454},
																																						alternatives: []interface{}{
																																							&litMatcher{
																																								pos:        position{line: 1306, col: 7, offset: 50454},
																																								val:        " ",
																																								ignoreCase: false,
																																							},
																																							&actionExpr{
																																								pos: position{line: 1306, col: 13, offset: 50460},
																																								run: (*parser).callonInlineElementWithoutSubtitution1086,
																																								expr: &litMatcher{
																																									pos:        position{line: 1306, col: 13, offset: 50460},
																																									val:        "\t",
																																									ignoreCase: false,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 237, col: 47, offset: 8431},
																																				run: (*parser).callonInlineElementWithoutSubtitution1088,
																																				expr: &seqExpr{
																																					pos: position{line: 237, col: 48, offset: 8432},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 237, col: 48, offset: 8432},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 49, offset: 8433},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 237, col: 53, offset: 8437},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 54, offset: 8438},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 237, col: 58, offset: 8442},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 59, offset: 8443},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 237, col: 64, offset: 8448,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 225, col: 67, offset: 8017},
																														expr: &litMatcher{
																															pos:        position{line: 225, col: 67, offset: 8017},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 225, col: 72, offset: 8022},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonInlineElementWithoutSubtitution1102,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 227, col: 5, offset: 8106},
																											run: (*parser).callonInlineElementWithoutSubtitution1104,
																											expr: &seqExpr{
																												pos: position{line: 227, col: 5, offset: 8106},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 227, col: 5, offset: 8106},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 231, col: 17, offset: 8231},
																															run: (*parser).callonInlineElementWithoutSubtitution1107,
																															expr: &seqExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 231, col: 17, offset: 8231},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9116},
																																			run: (*parser).callonInlineElementWithoutSubtitution1110,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9116},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 28, offset: 8242},
																																		expr: &actionExpr{
																																			pos: position{line: 282, col: 14, offset: 9780},
																																			run: (*parser).callonInlineElementWithoutSubtitution1113,
																																			expr: &litMatcher{
																																				pos:        position{line: 282, col: 14, offset: 9780},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 39, offset: 8253},
																																		expr: &actionExpr{
																																			pos: position{line: 1229, col: 16, offset: 48642},
																																			run: (*parser).callonInlineElementWithoutSubtitution1116,
																																			expr: &litMatcher{
																																				pos:        position{line: 1229, col: 16, offset: 48642},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 231, col: 52, offset: 8266},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 231, col: 56, offset: 8270},
																																			expr: &choiceExpr{
																																				pos: position{line: 231, col: 57, offset: 8271},
																																				alternatives: []interface{}{
																																					&actionExpr{
																																						pos: position{line: 1264, col: 14, offset: 49515},
																																						run: (*parser).callonInlineElementWithoutSubtitution1121,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1264, col: 14, offset: 49515},
																																							expr: &charClassMatcher{
																																								pos:        position{line: 1264, col: 14, offset: 49515},
																																								val:        "[a-zA-Z0-9]",
																																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																								ignoreCase: false,
																																								inverted:   false,
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 1278, col: 11, offset: 49909},
																																						run: (*parser).callonInlineElementWithoutSubtitution1124,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1278, col: 11, offset: 49909},
																																							expr: &choiceExpr{
																																								pos: position{line: 1306, col: 7, offset: 50454},
																																								alternatives: []interface{}{
																																									&litMatcher{
																																										pos:        position{line: 1306, col: 7, offset: 50454},
																																										val:        " ",
																																										ignoreCase: false,
																																									},
																																									&actionExpr{
																																										pos: position{line: 1306, col: 13, offset: 50460},
																																										run: (*parser).callonInlineElementWithoutSubtitution1128,
																																										expr: &litMatcher{
																																											pos:        position{line: 1306, col: 13, offset: 50460},
																																											val:        "\t",
																																											ignoreCase: false,
																																										},
																																									},
																																								},
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 231, col: 78, offset: 8292},
																																						run: (*parser).callonInlineElementWithoutSubtitution1130,
																																						expr: &seqExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							exprs: []interface{}{
																																								&notExpr{
																																									pos: position{line: 231, col: 79, offset: 8293},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 80, offset: 8294},
																																										val:        "=",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 84, offset: 8298},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 85, offset: 8299},
																																										val:        ",",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 89, offset: 8303},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 90, offset: 8304},
																																										val:        "]",
																																										ignoreCase: false,
																																									},
																																								},
																																								&anyMatcher{
																																									line: 231, col: 95, offset: 8309,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 227, col: 24, offset: 8125},
																														expr: &litMatcher{
																															pos:        position{line: 227, col: 24, offset: 8125},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 227, col: 29, offset: 8130},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonInlineElementWithoutSubtitution1144,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 915, col: 88, offset: 36475},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																			&actionExpr{
																				pos: position{line: 917, col: 5, offset: 36560},
																				run: (*parser).callonInlineElementWithoutSubtitution1147,
																				expr: &seqExpr{
																					pos: position{line: 917, col: 5, offset: 36560},
																					exprs: []interface{}{
																						&litMatcher{
																							pos:        position{line: 917, col: 5, offset: 36560},
																							val:        "[",
																							ignoreCase: false,
																						},
																						&labeledExpr{
																							pos:   position{line: 917, col: 9, offset: 36564},
																							label: "otherAttrs",
																							expr: &zeroOrMoreExpr{
																								pos: position{line: 917, col: 20, offset: 36575},
																								expr: &choiceExpr{
																									pos: position{line: 225, col: 21, offset: 7971},
																									alternatives: []interface{}{
																										&actionExpr{
																											pos: position{line: 225, col: 21, offset: 7971},
																											run: (*parser).callonInlineElementWithoutSubtitution1153,
																											expr: &seqExpr{
																												pos: position{line: 225, col: 21, offset: 7971},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 225, col: 21, offset: 7971},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 231, col: 17, offset: 8231},
																															run: (*parser).callonInlineElementWithoutSubtitution1156,
																															expr: &seqExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 231, col: 17, offset: 8231},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9116},
																																			run: (*parser).callonInlineElementWithoutSubtitution1159,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9116},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 28, offset: 8242},
																																		expr: &actionExpr{
																																			pos: position{line: 282, col: 14, offset: 9780},
																																			run: (*parser).callonInlineElementWithoutSubtitution1162,
																																			expr: &litMatcher{
																																				pos:        position{line: 282, col: 14, offset: 9780},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 39, offset: 8253},
																																		expr: &actionExpr{
																																			pos: position{line: 1229, col: 16, offset: 48642},
																																			run: (*parser).callonInlineElementWithoutSubtitution1165,
																																			expr: &litMatcher{
																																				pos:        position{line: 1229, col: 16, offset: 48642},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 231, col: 52, offset: 8266},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 231, col: 56, offset: 8270},
																																			expr: &choiceExpr{
																																				pos: position{line: 231, col: 57, offset: 8271},
																																				alternatives: []interface{}{
																																					&actionExpr{
																																						pos: position{line: 1264, col: 14, offset: 49515},
																																						run: (*parser).callonInlineElementWithoutSubtitution1170,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1264, col: 14, offset: 49515},
																																							expr: &charClassMatcher{
																																								pos:        position{line: 1264, col: 14, offset: 49515},
																																								val:        "[a-zA-Z0-9]",
																																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																								ignoreCase: false,
																																								inverted:   false,
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 1278, col: 11, offset: 49909},
																																						run: (*parser).callonInlineElementWithoutSubtitution1173,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1278, col: 11, offset: 49909},
																																							expr: &choiceExpr{
																																								pos: position{line: 1306, col: 7, offset: 50454},
																																								alternatives: []interface{}{
																																									&litMatcher{
																																										pos:        position{line: 1306, col: 7, offset: 50454},
																																										val:        " ",
																																										ignoreCase: false,
																																									},
																																									&actionExpr{
																																										pos: position{line: 1306, col: 13, offset: 50460},
																																										run: (*parser).callonInlineElementWithoutSubtitution1177,
																																										expr: &litMatcher{
																																											pos:        position{line: 1306, col: 13, offset: 50460},
																																											val:        "\t",
																																											ignoreCase: false,
																																										},
																																									},
																																								},
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 231, col: 78, offset: 8292},
																																						run: (*parser).callonInlineElementWithoutSubtitution1179,
																																						expr: &seqExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							exprs: []interface{}{
																																								&notExpr{
																																									pos: position{line: 231, col: 79, offset: 8293},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 80, offset: 8294},
																																										val:        "=",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 84, offset: 8298},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 85, offset: 8299},
																																										val:        ",",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 89, offset: 8303},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 90, offset: 8304},
																																										val:        "]",
																																										ignoreCase: false,
																																									},
																																								},
																																								&anyMatcher{
																																									line: 231, col: 95, offset: 8309,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&litMatcher{
																														pos:        position{line: 225, col: 40, offset: 7990},
																														val:        "=",
																														ignoreCase: false,
																													},
																													&labeledExpr{
																														pos:   position{line: 225, col: 44, offset: 7994},
																														label: "value",
																														expr: &actionExpr{
																															pos: position{line: 237, col: 19, offset: 8403},
																															run: (*parser).callonInlineElementWithoutSubtitution1190,
																															expr: &labeledExpr{
																																pos:   position{line: 237, col: 19, offset: 8403},
																																label: "value",
																																expr: &zeroOrMoreExpr{
																																	pos: position{line: 237, col: 25, offset: 8409},
																																	expr: &choiceExpr{
																																		pos: position{line: 237, col: 26, offset: 8410},
																																		alternatives: []interface{}{
																																			&actionExpr{
																																				pos: position{line: 1264, col: 14, offset: 49515},
																																				run: (*parser).callonInlineElementWithoutSubtitution1194,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1264, col: 14, offset: 49515},
																																					expr: &charClassMatcher{
																																						pos:        position{line: 1264, col: 14, offset: 49515},
																																						val:        "[a-zA-Z0-9]",
																																						ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																						ignoreCase: false,
																																						inverted:   false,
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 1278, col: 11, offset: 49909},
																																				run: (*parser).callonInlineElementWithoutSubtitution1197,
																																				expr: &oneOrMoreExpr{
																																					pos: position{line: 1278, col: 11, offset: 49909},
																																					expr: &choiceExpr{
																																						pos: position{line: 1306, col: 7, offset: 50454},
																																						alternatives: []interface{}{
																																							&litMatcher{
																																								pos:        position{line: 1306, col: 7, offset: 50454},
																																								val:        " ",
																																								ignoreCase: false,
																																							},
																																							&actionExpr{
																																								pos: position{line: 1306, col: 13, offset: 50460},
																																								run: (*parser).callonInlineElementWithoutSubtitution1201,
																																								expr: &litMatcher{
																																									pos:        position{line: 1306, col: 13, offset: 50460},
																																									val:        "\t",
																																									ignoreCase: false,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																			&actionExpr{
																																				pos: position{line: 237, col: 47, offset: 8431},
																																				run: (*parser).callonInlineElementWithoutSubtitution1203,
																																				expr: &seqExpr{
																																					pos: position{line: 237, col: 48, offset: 8432},
																																					exprs: []interface{}{
																																						&notExpr{
																																							pos: position{line: 237, col: 48, offset: 8432},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 49, offset: 8433},
																																								val:        "=",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 237, col: 53, offset: 8437},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 54, offset: 8438},
																																								val:        ",",
																																								ignoreCase: false,
																																							},
																																						},
																																						&notExpr{
																																							pos: position{line: 237, col: 58, offset: 8442},
																																							expr: &litMatcher{
																																								pos:        position{line: 237, col: 59, offset: 8443},
																																								val:        "]",
																																								ignoreCase: false,
																																							},
																																						},
																																						&anyMatcher{
																																							line: 237, col: 64, offset: 8448,
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 225, col: 67, offset: 8017},
																														expr: &litMatcher{
																															pos:        position{line: 225, col: 67, offset: 8017},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 225, col: 72, offset: 8022},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonInlineElementWithoutSubtitution1217,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																										&actionExpr{
																											pos: position{line: 227, col: 5, offset: 8106},
																											run: (*parser).callonInlineElementWithoutSubtitution1219,
																											expr: &seqExpr{
																												pos: position{line: 227, col: 5, offset: 8106},
																												exprs: []interface{}{
																													&labeledExpr{
																														pos:   position{line: 227, col: 5, offset: 8106},
																														label: "key",
																														expr: &actionExpr{
																															pos: position{line: 231, col: 17, offset: 8231},
																															run: (*parser).callonInlineElementWithoutSubtitution1222,
																															expr: &seqExpr{
																																pos: position{line: 231, col: 17, offset: 8231},
																																exprs: []interface{}{
																																	&notExpr{
																																		pos: position{line: 231, col: 17, offset: 8231},
																																		expr: &actionExpr{
																																			pos: position{line: 259, col: 14, offset: 9116},
																																			run: (*parser).callonInlineElementWithoutSubtitution1225,
																																			expr: &litMatcher{
																																				pos:        position{line: 259, col: 14, offset: 9116},
																																				val:        "quote",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 28, offset: 8242},
																																		expr: &actionExpr{
																																			pos: position{line: 282, col: 14, offset: 9780},
																																			run: (*parser).callonInlineElementWithoutSubtitution1228,
																																			expr: &litMatcher{
																																				pos:        position{line: 282, col: 14, offset: 9780},
																																				val:        "verse",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&notExpr{
																																		pos: position{line: 231, col: 39, offset: 8253},
																																		expr: &actionExpr{
																																			pos: position{line: 1229, col: 16, offset: 48642},
																																			run: (*parser).callonInlineElementWithoutSubtitution1231,
																																			expr: &litMatcher{
																																				pos:        position{line: 1229, col: 16, offset: 48642},
																																				val:        "literal",
																																				ignoreCase: false,
																																			},
																																		},
																																	},
																																	&labeledExpr{
																																		pos:   position{line: 231, col: 52, offset: 8266},
																																		label: "key",
																																		expr: &oneOrMoreExpr{
																																			pos: position{line: 231, col: 56, offset: 8270},
																																			expr: &choiceExpr{
																																				pos: position{line: 231, col: 57, offset: 8271},
																																				alternatives: []interface{}{
																																					&actionExpr{
																																						pos: position{line: 1264, col: 14, offset: 49515},
																																						run: (*parser).callonInlineElementWithoutSubtitution1236,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1264, col: 14, offset: 49515},
																																							expr: &charClassMatcher{
																																								pos:        position{line: 1264, col: 14, offset: 49515},
																																								val:        "[a-zA-Z0-9]",
																																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																																								ignoreCase: false,
																																								inverted:   false,
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 1278, col: 11, offset: 49909},
																																						run: (*parser).callonInlineElementWithoutSubtitution1239,
																																						expr: &oneOrMoreExpr{
																																							pos: position{line: 1278, col: 11, offset: 49909},
																																							expr: &choiceExpr{
																																								pos: position{line: 1306, col: 7, offset: 50454},
																																								alternatives: []interface{}{
																																									&litMatcher{
																																										pos:        position{line: 1306, col: 7, offset: 50454},
																																										val:        " ",
																																										ignoreCase: false,
																																									},
																																									&actionExpr{
																																										pos: position{line: 1306, col: 13, offset: 50460},
																																										run: (*parser).callonInlineElementWithoutSubtitution1243,
																																										expr: &litMatcher{
																																											pos:        position{line: 1306, col: 13, offset: 50460},
																																											val:        "\t",
																																											ignoreCase: false,
																																										},
																																									},
																																								},
																																							},
																																						},
																																					},
																																					&actionExpr{
																																						pos: position{line: 231, col: 78, offset: 8292},
																																						run: (*parser).callonInlineElementWithoutSubtitution1245,
																																						expr: &seqExpr{
																																							pos: position{line: 231, col: 79, offset: 8293},
																																							exprs: []interface{}{
																																								&notExpr{
																																									pos: position{line: 231, col: 79, offset: 8293},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 80, offset: 8294},
																																										val:        "=",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 84, offset: 8298},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 85, offset: 8299},
																																										val:        ",",
																																										ignoreCase: false,
																																									},
																																								},
																																								&notExpr{
																																									pos: position{line: 231, col: 89, offset: 8303},
																																									expr: &litMatcher{
																																										pos:        position{line: 231, col: 90, offset: 8304},
																																										val:        "]",
																																										ignoreCase: false,
																																									},
																																								},
																																								&anyMatcher{
																																									line: 231, col: 95, offset: 8309,
																																								},
																																							},
																																						},
																																					},
																																				},
																																			},
																																		},
																																	},
																																},
																															},
																														},
																													},
																													&zeroOrOneExpr{
																														pos: position{line: 227, col: 24, offset: 8125},
																														expr: &litMatcher{
																															pos:        position{line: 227, col: 24, offset: 8125},
																															val:        ",",
																															ignoreCase: false,
																														},
																													},
																													&zeroOrMoreExpr{
																														pos: position{line: 227, col: 29, offset: 8130},
																														expr: &choiceExpr{
																															pos: position{line: 1306, col: 7, offset: 50454},
																															alternatives: []interface{}{
																																&litMatcher{
																																	pos:        position{line: 1306, col: 7, offset: 50454},
																																	val:        " ",
																																	ignoreCase: false,
																																},
																																&actionExpr{
																																	pos: position{line: 1306, col: 13, offset: 50460},
																																	run: (*parser).callonInlineElementWithoutSubtitution1259,
																																	expr: &litMatcher{
																																		pos:        position{line: 1306, col: 13, offset: 50460},
																																		val:        "\t",
																																		ignoreCase: false,
																																	},
																																},
																															},
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																							},
																						},
																						&litMatcher{
																							pos:        position{line: 917, col: 40, offset: 36595},
																							val:        "]",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 898, col: 5, offset: 35929},
														run: (*parser).callonInlineElementWithoutSubtitution1262,
														expr: &labeledExpr{
															pos:   position{line: 898, col: 5, offset: 35929},
															label: "url",
															expr: &actionExpr{
																pos: position{line: 902, col: 20, offset: 36025},
																run: (*parser).callonInlineElementWithoutSubtitution1264,
																expr: &seqExpr{
																	pos: position{line: 902, col: 20, offset: 36025},
																	exprs: []interface{}{
																		&choiceExpr{
																			pos: position{line: 1300, col: 15, offset: 50339},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1300, col: 15, offset: 50339},
																					val:        "http://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1300, col: 27, offset: 50351},
																					val:        "https://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1300, col: 40, offset: 50364},
																					val:        "ftp://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1300, col: 51, offset: 50375},
																					val:        "irc://",
																					ignoreCase: false,
																				},
																				&litMatcher{
																					pos:        position{line: 1300, col: 62, offset: 50386},
																					val:        "mailto:",
																					ignoreCase: false,
																				},
																			},
																		},
																		&actionExpr{
																			pos: position{line: 1282, col: 8, offset: 49956},
																			run: (*parser).callonInlineElementWithoutSubtitution1272,
																			expr: &oneOrMoreExpr{
																				pos: position{line: 1282, col: 8, offset: 49956},
																				expr: &choiceExpr{
																					pos: position{line: 1282, col: 9, offset: 49957},
																					alternatives: []interface{}{
																						&actionExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							run: (*parser).callonInlineElementWithoutSubtitution1275,
																							expr: &oneOrMoreExpr{
																								pos: position{line: 1264, col: 14, offset: 49515},
																								expr: &charClassMatcher{
																									pos:        position{line: 1264, col: 14, offset: 49515},
																									val:        "[a-zA-Z0-9]",
																									ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																									ignoreCase: false,
																									inverted:   false,
																								},
																							},
																						},
																						&actionExpr{
																							pos: position{line: 1282, col: 21, offset: 49969},
																							run: (*parser).callonInlineElementWithoutSubtitution1278,
																							expr: &seqExpr{
																								pos: position{line: 1282, col: 22, offset: 49970},
																								exprs: []interface{}{
																									&notExpr{
																										pos: position{line: 1282, col: 22, offset: 49970},
																										expr: &choiceExpr{
																											pos: position{line: 1310, col: 12, offset: 50512},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1310, col: 12, offset: 50512},
																													val:        "\r\n",
																													ignoreCase: false,
																												},
																												&charClassMatcher{
																													pos:        position{line: 1310, col: 21, offset: 50521},
																													val:        "[\\r\\n]",
																													chars:      []rune{'\r', '\n'},
																													ignoreCase: false,
																													inverted:   false,
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1282, col: 31, offset: 49979},
																										expr: &choiceExpr{
																											pos: position{line: 1306, col: 7, offset: 50454},
																											alternatives: []interface{}{
																												&litMatcher{
																													pos:        position{line: 1306, col: 7, offset: 50454},
																													val:        " ",
																													ignoreCase: false,
																												},
																												&actionExpr{
																													pos: position{line: 1306, col: 13, offset: 50460},
																													run: (*parser).callonInlineElementWithoutSubtitution1287,
																													expr: &litMatcher{
																														pos:        position{line: 1306, col: 13, offset: 50460},
																														val:        "\t",
																														ignoreCase: false,
																													},
																												},
																											},
																										},
																									},
																									&notExpr{
																										pos: position{line: 1282, col: 35, offset: 49983},
																										expr: &litMatcher{
																											pos:        position{line: 1282, col: 36, offset: 49984},
																											val:        "[",
																											ignoreCase: false,
																										},
																									},
																									&notExpr{
																										pos: position{line: 1282, col: 40, offset: 49988},
																										expr: &litMatcher{
																											pos:        position{line: 1282, col: 41, offset: 49989},
																											val:        "]",
																											ignoreCase: false,
																										},
																									},
																									&anyMatcher{
																										line: 1282, col: 46, offset: 49994,
																									},
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 684, col: 11, offset: 25074},
										name: "Passthrough",
									},
									&actionExpr{
										pos: position{line: 1264, col: 14, offset: 49515},
										run: (*parser).callonInlineElementWithoutSubtitution1295,
										expr: &oneOrMoreExpr{
											pos: position{line: 1264, col: 14, offset: 49515},
											expr: &charClassMatcher{
												pos:        position{line: 1264, col: 14, offset: 49515},
												val:        "[a-zA-Z0-9]",
												ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
												ignoreCase: false,
												inverted:   false,
											},
										},
									},
									&ruleRefExpr{
										pos:  position{line: 686, col: 11, offset: 25118},
										name: "QuotedText",
									},
									&actionExpr{
										pos: position{line: 877, col: 19, offset: 35264},
										run: (*parser).callonInlineElementWithoutSubtitution1299,
										expr: &seqExpr{
											pos: position{line: 877, col: 19, offset: 35264},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 877, col: 19, offset: 35264},
													val:        "<<",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 877, col: 24, offset: 35269},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 1288, col: 7, offset: 50075},
														run: (*parser).callonInlineElementWithoutSubtitution1303,
														expr: &oneOrMoreExpr{
															pos: position{line: 1288, col: 7, offset: 50075},
															expr: &choiceExpr{
																pos: position{line: 1288, col: 8, offset: 50076},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 1264, col: 14, offset: 49515},
																		run: (*parser).callonInlineElementWithoutSubtitution1306,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1264, col: 14, offset: 49515},
																			expr: &charClassMatcher{
																				pos:        position{line: 1264, col: 14, offset: 49515},
																				val:        "[a-zA-Z0-9]",
																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 1288, col: 20, offset: 50088},
																		run: (*parser).callonInlineElementWithoutSubtitution1309,
																		expr: &seqExpr{
																			pos: position{line: 1288, col: 21, offset: 50089},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 1288, col: 21, offset: 50089},
																					expr: &choiceExpr{
																						pos: position{line: 1310, col: 12, offset: 50512},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1310, col: 12, offset: 50512},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 1310, col: 21, offset: 50521},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 30, offset: 50098},
																					expr: &choiceExpr{
																						pos: position{line: 1306, col: 7, offset: 50454},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1306, col: 7, offset: 50454},
																								val:        " ",
																								ignoreCase: false,
																							},
																							&actionExpr{
																								pos: position{line: 1306, col: 13, offset: 50460},
																								run: (*parser).callonInlineElementWithoutSubtitution1318,
																								expr: &litMatcher{
																									pos:        position{line: 1306, col: 13, offset: 50460},
																									val:        "\t",
																									ignoreCase: false,
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 34, offset: 50102},
																					expr: &litMatcher{
																						pos:        position{line: 1288, col: 35, offset: 50103},
																						val:        "[",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 39, offset: 50107},
																					expr: &litMatcher{
																						pos:        position{line: 1288, col: 40, offset: 50108},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 44, offset: 50112},
																					expr: &litMatcher{
																						pos:        position{line: 1288, col: 45, offset: 50113},
																						val:        "<<",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 50, offset: 50118},
																					expr: &litMatcher{
																						pos:        position{line: 1288, col: 51, offset: 50119},
																						val:        ">>",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 56, offset: 50124},
																					expr: &litMatcher{
																						pos:        position{line: 1288, col: 57, offset: 50125},
																						val:        ",",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 1288, col: 62, offset: 50130,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&zeroOrMoreExpr{
													pos: position{line: 877, col: 32, offset: 35277},
													expr: &choiceExpr{
														pos: position{line: 1306, col: 7, offset: 50454},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1306, col: 7, offset: 50454},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1306, col: 13, offset: 50460},
																run: (*parser).callonInlineElementWithoutSubtitution1334,
																expr: &litMatcher{
																	pos:        position{line: 1306, col: 13, offset: 50460},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 877, col: 36, offset: 35281},
													val:        ",",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 877, col: 40, offset: 35285},
													label: "label",
													expr: &actionExpr{
														pos: position{line: 883, col: 24, offset: 35487},
														run: (*parser).callonInlineElementWithoutSubtitution1338,
														expr: &oneOrMoreExpr{
															pos: position{line: 883, col: 24, offset: 35487},
															expr: &choiceExpr{
																pos: position{line: 883, col: 25, offset: 35488},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 1264, col: 14, offset: 49515},
																		run: (*parser).callonInlineElementWithoutSubtitution1341,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1264, col: 14, offset: 49515},
																			expr: &charClassMatcher{
																				pos:        position{line: 1264, col: 14, offset: 49515},
																				val:        "[a-zA-Z0-9]",
																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 1278, col: 11, offset: 49909},
																		run: (*parser).callonInlineElementWithoutSubtitution1344,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1278, col: 11, offset: 49909},
																			expr: &choiceExpr{
																				pos: position{line: 1306, col: 7, offset: 50454},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1306, col: 7, offset: 50454},
																						val:        " ",
																						ignoreCase: false,
																					},
																					&actionExpr{
																						pos: position{line: 1306, col: 13, offset: 50460},
																						run: (*parser).callonInlineElementWithoutSubtitution1348,
																						expr: &litMatcher{
																							pos:        position{line: 1306, col: 13, offset: 50460},
																							val:        "\t",
																							ignoreCase: false,
																						},
																					},
																				},
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 883, col: 46, offset: 35509},
																		run: (*parser).callonInlineElementWithoutSubtitution1350,
																		expr: &seqExpr{
																			pos: position{line: 883, col: 47, offset: 35510},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 883, col: 47, offset: 35510},
																					expr: &litMatcher{
																						pos:        position{line: 883, col: 48, offset: 35511},
																						val:        ">>",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 883, col: 54, offset: 35517,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 877, col: 68, offset: 35313},
													val:        ">>",
													ignoreCase: false,
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 879, col: 5, offset: 35388},
										run: (*parser).callonInlineElementWithoutSubtitution1356,
										expr: &seqExpr{
											pos: position{line: 879, col: 5, offset: 35388},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 879, col: 5, offset: 35388},
													val:        "<<",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 879, col: 10, offset: 35393},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 1288, col: 7, offset: 50075},
														run: (*parser).callonInlineElementWithoutSubtitution1360,
														expr: &oneOrMoreExpr{
															pos: position{line: 1288, col: 7, offset: 50075},
															expr: &choiceExpr{
																pos: position{line: 1288, col: 8, offset: 50076},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 1264, col: 14, offset: 49515},
																		run: (*parser).callonInlineElementWithoutSubtitution1363,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1264, col: 14, offset: 49515},
																			expr: &charClassMatcher{
																				pos:        position{line: 1264, col: 14, offset: 49515},
																				val:        "[a-zA-Z0-9]",
																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 1288, col: 20, offset: 50088},
																		run: (*parser).callonInlineElementWithoutSubtitution1366,
																		expr: &seqExpr{
																			pos: position{line: 1288, col: 21, offset: 50089},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 1288, col: 21, offset: 50089},
																					expr: &choiceExpr{
																						pos: position{line: 1310, col: 12, offset: 50512},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1310, col: 12, offset: 50512},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 1310, col: 21, offset: 50521},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 30, offset: 50098},
																					expr: &choiceExpr{
																						pos: position{line: 1306, col: 7, offset: 50454},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1306, col: 7, offset: 50454},
																								val:        " ",
																								ignoreCase: false,
																							},
																							&actionExpr{
																								pos: position{line: 1306, col: 13, offset: 50460},
																								run: (*parser).callonInlineElementWithoutSubtitution1375,
																								expr: &litMatcher{
																									pos:        position{line: 1306, col: 13, offset: 50460},
																									val:        "\t",
																									ignoreCase: false,
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 34, offset: 50102},
																					expr: &litMatcher{
																						pos:        position{line: 1288, col: 35, offset: 50103},
																						val:        "[",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 39, offset: 50107},
																					expr: &litMatcher{
																						pos:        position{line: 1288, col: 40, offset: 50108},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 44, offset: 50112},
																					expr: &litMatcher{
																						pos:        position{line: 1288, col: 45, offset: 50113},
																						val:        "<<",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 50, offset: 50118},
																					expr: &litMatcher{
																						pos:        position{line: 1288, col: 51, offset: 50119},
																						val:        ">>",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 56, offset: 50124},
																					expr: &litMatcher{
																						pos:        position{line: 1288, col: 57, offset: 50125},
																						val:        ",",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 1288, col: 62, offset: 50130,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 879, col: 18, offset: 35401},
													val:        ">>",
													ignoreCase: false,
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 180, col: 20, offset: 6467},
										run: (*parser).callonInlineElementWithoutSubtitution1389,
										expr: &seqExpr{
											pos: position{line: 180, col: 20, offset: 6467},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 180, col: 20, offset: 6467},
													val:        "[[",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 180, col: 25, offset: 6472},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 1288, col: 7, offset: 50075},
														run: (*parser).callonInlineElementWithoutSubtitution1393,
														expr: &oneOrMoreExpr{
															pos: position{line: 1288, col: 7, offset: 50075},
															expr: &choiceExpr{
																pos: position{line: 1288, col: 8, offset: 50076},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 1264, col: 14, offset: 49515},
																		run: (*parser).callonInlineElementWithoutSubtitution1396,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1264, col: 14, offset: 49515},
																			expr: &charClassMatcher{
																				pos:        position{line: 1264, col: 14, offset: 49515},
																				val:        "[a-zA-Z0-9]",
																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 1288, col: 20, offset: 50088},
																		run: (*parser).callonInlineElementWithoutSubtitution1399,
																		expr: &seqExpr{
																			pos: position{line: 1288, col: 21, offset: 50089},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 1288, col: 21, offset: 50089},
																					expr: &choiceExpr{
																						pos: position{line: 1310, col: 12, offset: 50512},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1310, col: 12, offset: 50512},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 1310, col: 21, offset: 50521},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 30, offset: 50098},
																					expr: &choiceExpr{
																						pos: position{line: 1306, col: 7, offset: 50454},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1306, col: 7, offset: 50454},
																								val:        " ",
																								ignoreCase: false,
																							},
																							&actionExpr{
																								pos: position{line: 1306, col: 13, offset: 50460},
																								run: (*parser).callonInlineElementWithoutSubtitution1408,
																								expr: &litMatcher{
																									pos:        position{line: 1306, col: 13, offset: 50460},
																									val:        "\t",
																									ignoreCase: false,
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 34, offset: 50102},
																					expr: &litMatcher{
																						pos:        position{line: 1288, col: 35, offset: 50103},
																						val:        "[",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 39, offset: 50107},
																					expr: &litMatcher{
																						pos:        position{line: 1288, col: 40, offset: 50108},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 44, offset: 50112},
																					expr: &litMatcher{
																						pos:        position{line: 1288, col: 45, offset: 50113},
																						val:        "<<",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 50, offset: 50118},
																					expr: &litMatcher{
																						pos:        position{line: 1288, col: 51, offset: 50119},
																						val:        ">>",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 56, offset: 50124},
																					expr: &litMatcher{
																						pos:        position{line: 1288, col: 57, offset: 50125},
																						val:        ",",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 1288, col: 62, offset: 50130,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 180, col: 33, offset: 6480},
													val:        "]]",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 180, col: 38, offset: 6485},
													expr: &choiceExpr{
														pos: position{line: 1306, col: 7, offset: 50454},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1306, col: 7, offset: 50454},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1306, col: 13, offset: 50460},
																run: (*parser).callonInlineElementWithoutSubtitution1425,
																expr: &litMatcher{
																	pos:        position{line: 1306, col: 13, offset: 50460},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
									&charClassMatcher{
										pos:        position{line: 1262, col: 16, offset: 49479},
										val:        "[()[]]",
										chars:      []rune{'(', ')', '[', ']'},
										ignoreCase: false,
										inverted:   false,
									},
									&actionExpr{
										pos: position{line: 1272, col: 9, offset: 49619},
										run: (*parser).callonInlineElementWithoutSubtitution1428,
										expr: &choiceExpr{
											pos: position{line: 1272, col: 10, offset: 49620},
											alternatives: []interface{}{
												&actionExpr{
													pos: position{line: 1264, col: 14, offset: 49515},
													run: (*parser).callonInlineElementWithoutSubtitution1430,
													expr: &oneOrMoreExpr{
														pos: position{line: 1264, col: 14, offset: 49515},
														expr: &charClassMatcher{
															pos:        position{line: 1264, col: 14, offset: 49515},
															val:        "[a-zA-Z0-9]",
															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
												&oneOrMoreExpr{
													pos: position{line: 1272, col: 22, offset: 49632},
													expr: &actionExpr{
														pos: position{line: 1272, col: 23, offset: 49633},
														run: (*parser).callonInlineElementWithoutSubtitution1434,
														expr: &seqExpr{
															pos: position{line: 1272, col: 24, offset: 49634},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 1272, col: 24, offset: 49634},
																	expr: &choiceExpr{
																		pos: position{line: 1310, col: 12, offset: 50512},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1310, col: 12, offset: 50512},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1310, col: 21, offset: 50521},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1272, col: 33, offset: 49643},
																	expr: &choiceExpr{
																		pos: position{line: 1306, col: 7, offset: 50454},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1306, col: 7, offset: 50454},
																				val:        " ",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 1306, col: 13, offset: 50460},
																				run: (*parser).callonInlineElementWithoutSubtitution1443,
																				expr: &litMatcher{
																					pos:        position{line: 1306, col: 13, offset: 50460},
																					val:        "\t",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1272, col: 37, offset: 49647},
																	expr: &charClassMatcher{
																		pos:        position{line: 1262, col: 16, offset: 49479},
																		val:        "[()[]]",
																		chars:      []rune{'(', ')', '[', ']'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&notExpr{
																	pos: position{line: 1272, col: 50, offset: 49660},
																	expr: &litMatcher{
																		pos:        position{line: 1272, col: 51, offset: 49661},
																		val:        ".",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 1272, col: 55, offset: 49665},
																	expr: &choiceExpr{
																		pos: position{line: 716, col: 33, offset: 26229},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 716, col: 33, offset: 26229},
																				val:        "^",
																				ignoreCase: false,
																			},
																			&actionExpr{
																				pos: position{line: 716, col: 39, offset: 26235},
																				run: (*parser).callonInlineElementWithoutSubtitution1452,
																				expr: &litMatcher{
																					pos:        position{line: 716, col: 39, offset: 26235},
																					val:        "~",
																					ignoreCase: false,
																				},
																			},
																		},
																	},
																},
																&anyMatcher{
																	line: 1272, col: 86, offset: 49696,
																},
															},
														},
													},
												},
												&oneOrMoreExpr{
													pos: position{line: 1274, col: 7, offset: 49737},
													expr: &litMatcher{
														pos:        position{line: 1274, col: 7, offset: 49737},
														val:        ".",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "QuotedText",
			pos:  position{line: 704, col: 1, offset: 25743},
			expr: &choiceExpr{
				pos: position{line: 704, col: 15, offset: 25757},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 704, col: 15, offset: 25757},
						name: "BoldText",
					},
					&ruleRefExpr{
						pos:  position{line: 705, col: 15, offset: 25781},
						name: "ItalicText",
					},
					&ruleRefExpr{
						pos:  position{line: 706, col: 15, offset: 25807},
						name: "MonospaceText",
					},
					&ruleRefExpr{
						pos:  position{line: 707, col: 15, offset: 25836},
						name: "SubscriptText",
					},
					&ruleRefExpr{
						pos:  position{line: 708, col: 15, offset: 25865},
						name: "SuperscriptText",
					},
					&ruleRefExpr{
						pos:  position{line: 709, col: 15, offset: 25896},
						name: "EscapedBoldText",
					},
					&ruleRefExpr{
						pos:  position{line: 710, col: 15, offset: 25927},
						name: "EscapedItalicText",
					},
					&ruleRefExpr{
						pos:  position{line: 711, col: 15, offset: 25960},
						name: "EscapedMonospaceText",
					},
					&ruleRefExpr{
						pos:  position{line: 712, col: 15, offset: 25996},
						name: "EscapedSubscriptText",
					},
					&ruleRefExpr{
						pos:  position{line: 713, col: 15, offset: 26032},
						name: "EscapedSuperscriptText",
					},
					&litMatcher{
						pos:        position{line: 716, col: 33, offset: 26229},
						val:        "^",
						ignoreCase: false,
					},
					&actionExpr{
						pos: position{line: 716, col: 39, offset: 26235},
						run: (*parser).callonQuotedText13,
						expr: &litMatcher{
							pos:        position{line: 716, col: 39, offset: 26235},
							val:        "~",
							ignoreCase: false,
						},
					},
				},
			},
		},
		{
			name: "BoldText",
			pos:  position{line: 720, col: 1, offset: 26368},
			expr: &choiceExpr{
				pos: position{line: 721, col: 5, offset: 26385},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 721, col: 5, offset: 26385},
						run: (*parser).callonBoldText2,
						expr: &seqExpr{
							pos: position{line: 721, col: 5, offset: 26385},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 721, col: 5, offset: 26385},
									expr: &litMatcher{
										pos:        position{line: 721, col: 6, offset: 26386},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 721, col: 11, offset: 26391},
									val:        "**",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 721, col: 16, offset: 26396},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 721, col: 25, offset: 26405},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 721, col: 44, offset: 26424},
									val:        "**",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 723, col: 9, offset: 26557},
						run: (*parser).callonBoldText10,
						expr: &seqExpr{
							pos: position{line: 723, col: 9, offset: 26557},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 723, col: 9, offset: 26557},
									expr: &litMatcher{
										pos:        position{line: 723, col: 10, offset: 26558},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 723, col: 15, offset: 26563},
									val:        "**",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 723, col: 20, offset: 26568},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 723, col: 29, offset: 26577},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 723, col: 48, offset: 26596},
									val:        "*",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 726, col: 9, offset: 26773},
						run: (*parser).callonBoldText18,
						expr: &seqExpr{
							pos: position{line: 726, col: 9, offset: 26773},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 726, col: 9, offset: 26773},
									expr: &litMatcher{
										pos:        position{line: 726, col: 10, offset: 26774},
										val:        "\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 726, col: 14, offset: 26778},
									val:        "*",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 726, col: 18, offset: 26782},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 726, col: 27, offset: 26791},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 726, col: 46, offset: 26810},
									val:        "*",
									ignoreCase: false,
								},
								&notExpr{
									pos: position{line: 726, col: 50, offset: 26814},
									expr: &charClassMatcher{
										pos:        position{line: 1260, col: 13, offset: 49451},
										val:        "[a-zA-Z0-9]",
										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
										ignoreCase: false,
										inverted:   false,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "EscapedBoldText",
			pos:  position{line: 730, col: 1, offset: 27004},
			expr: &choiceExpr{
				pos: position{line: 731, col: 5, offset: 27028},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 731, col: 5, offset: 27028},
						run: (*parser).callonEscapedBoldText2,
						expr: &seqExpr{
							pos: position{line: 731, col: 5, offset: 27028},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 731, col: 5, offset: 27028},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 744, col: 25, offset: 27828},
										run: (*parser).callonEscapedBoldText5,
										expr: &seqExpr{
											pos: position{line: 744, col: 25, offset: 27828},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 744, col: 25, offset: 27828},
													val:        "\\\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 744, col: 30, offset: 27833},
													expr: &litMatcher{
														pos:        position{line: 744, col: 30, offset: 27833},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 731, col: 40, offset: 27063},
									val:        "**",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 731, col: 45, offset: 27068},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 731, col: 54, offset: 27077},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 731, col: 73, offset: 27096},
									val:        "**",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 733, col: 9, offset: 27252},
						run: (*parser).callonEscapedBoldText14,
						expr: &seqExpr{
							pos: position{line: 733, col: 9, offset: 27252},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 733, col: 9, offset: 27252},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 740, col: 25, offset: 27759},
										run: (*parser).callonEscapedBoldText17,
										expr: &seqExpr{
											pos: position{line: 740, col: 25, offset: 27759},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 740, col: 25, offset: 27759},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 740, col: 29, offset: 27763},
													expr: &litMatcher{
														pos:        position{line: 740, col: 29, offset: 27763},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 733, col: 44, offset: 27287},
									val:        "**",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 733, col: 49, offset: 27292},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 733, col: 58, offset: 27301},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 733, col: 77, offset: 27320},
									val:        "*",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 736, col: 9, offset: 27519},
						run: (*parser).callonEscapedBoldText26,
						expr: &seqExpr{
							pos: position{line: 736, col: 9, offset: 27519},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 736, col: 9, offset: 27519},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 740, col: 25, offset: 27759},
										run: (*parser).callonEscapedBoldText29,
										expr: &seqExpr{
											pos: position{line: 740, col: 25, offset: 27759},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 740, col: 25, offset: 27759},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 740, col: 29, offset: 27763},
													expr: &litMatcher{
														pos:        position{line: 740, col: 29, offset: 27763},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 736, col: 44, offset: 27554},
									val:        "*",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 736, col: 48, offset: 27558},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 736, col: 57, offset: 27567},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 736, col: 76, offset: 27586},
									val:        "*",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "ItalicText",
			pos:  position{line: 748, col: 1, offset: 27874},
			expr: &choiceExpr{
				pos: position{line: 749, col: 5, offset: 27893},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 749, col: 5, offset: 27893},
						run: (*parser).callonItalicText2,
						expr: &seqExpr{
							pos: position{line: 749, col: 5, offset: 27893},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 749, col: 5, offset: 27893},
									expr: &litMatcher{
										pos:        position{line: 749, col: 6, offset: 27894},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 749, col: 11, offset: 27899},
									val:        "__",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 749, col: 16, offset: 27904},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 749, col: 25, offset: 27913},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 749, col: 44, offset: 27932},
									val:        "__",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 751, col: 9, offset: 28021},
						run: (*parser).callonItalicText10,
						expr: &seqExpr{
							pos: position{line: 751, col: 9, offset: 28021},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 751, col: 9, offset: 28021},
									expr: &litMatcher{
										pos:        position{line: 751, col: 10, offset: 28022},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 751, col: 15, offset: 28027},
									val:        "__",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 751, col: 20, offset: 28032},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 751, col: 29, offset: 28041},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 751, col: 48, offset: 28060},
									val:        "_",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 754, col: 9, offset: 28239},
						run: (*parser).callonItalicText18,
						expr: &seqExpr{
							pos: position{line: 754, col: 9, offset: 28239},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 754, col: 9, offset: 28239},
									expr: &litMatcher{
										pos:        position{line: 754, col: 10, offset: 28240},
										val:        "\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 754, col: 14, offset: 28244},
									val:        "_",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 754, col: 18, offset: 28248},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 754, col: 27, offset: 28257},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 754, col: 46, offset: 28276},
									val:        "_",
									ignoreCase: false,
								},
								&notExpr{
									pos: position{line: 754, col: 50, offset: 28280},
									expr: &charClassMatcher{
										pos:        position{line: 1260, col: 13, offset: 49451},
										val:        "[a-zA-Z0-9]",
										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
										ignoreCase: false,
										inverted:   false,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "EscapedItalicText",
			pos:  position{line: 758, col: 1, offset: 28471},
			expr: &choiceExpr{
				pos: position{line: 759, col: 5, offset: 28497},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 759, col: 5, offset: 28497},
						run: (*parser).callonEscapedItalicText2,
						expr: &seqExpr{
							pos: position{line: 759, col: 5, offset: 28497},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 759, col: 5, offset: 28497},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 744, col: 25, offset: 27828},
										run: (*parser).callonEscapedItalicText5,
										expr: &seqExpr{
											pos: position{line: 744, col: 25, offset: 27828},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 744, col: 25, offset: 27828},
													val:        "\\\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 744, col: 30, offset: 27833},
													expr: &litMatcher{
														pos:        position{line: 744, col: 30, offset: 27833},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 759, col: 40, offset: 28532},
									val:        "__",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 759, col: 45, offset: 28537},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 759, col: 54, offset: 28546},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 759, col: 73, offset: 28565},
									val:        "__",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 761, col: 9, offset: 28721},
						run: (*parser).callonEscapedItalicText14,
						expr: &seqExpr{
							pos: position{line: 761, col: 9, offset: 28721},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 761, col: 9, offset: 28721},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 740, col: 25, offset: 27759},
										run: (*parser).callonEscapedItalicText17,
										expr: &seqExpr{
											pos: position{line: 740, col: 25, offset: 27759},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 740, col: 25, offset: 27759},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 740, col: 29, offset: 27763},
													expr: &litMatcher{
														pos:        position{line: 740, col: 29, offset: 27763},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 761, col: 44, offset: 28756},
									val:        "__",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 761, col: 49, offset: 28761},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 761, col: 58, offset: 28770},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 761, col: 77, offset: 28789},
									val:        "_",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 764, col: 9, offset: 28988},
						run: (*parser).callonEscapedItalicText26,
						expr: &seqExpr{
							pos: position{line: 764, col: 9, offset: 28988},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 764, col: 9, offset: 28988},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 740, col: 25, offset: 27759},
										run: (*parser).callonEscapedItalicText29,
										expr: &seqExpr{
											pos: position{line: 740, col: 25, offset: 27759},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 740, col: 25, offset: 27759},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 740, col: 29, offset: 27763},
													expr: &litMatcher{
														pos:        position{line: 740, col: 29, offset: 27763},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 764, col: 44, offset: 29023},
									val:        "_",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 764, col: 48, offset: 29027},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 764, col: 57, offset: 29036},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 764, col: 76, offset: 29055},
									val:        "_",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "MonospaceText",
			pos:  position{line: 768, col: 1, offset: 29204},
			expr: &choiceExpr{
				pos: position{line: 769, col: 5, offset: 29226},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 769, col: 5, offset: 29226},
						run: (*parser).callonMonospaceText2,
						expr: &seqExpr{
							pos: position{line: 769, col: 5, offset: 29226},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 769, col: 5, offset: 29226},
									expr: &litMatcher{
										pos:        position{line: 769, col: 6, offset: 29227},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 769, col: 11, offset: 29232},
									val:        "``",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 769, col: 16, offset: 29237},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 769, col: 25, offset: 29246},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 769, col: 44, offset: 29265},
									val:        "``",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 771, col: 9, offset: 29403},
						run: (*parser).callonMonospaceText10,
						expr: &seqExpr{
							pos: position{line: 771, col: 9, offset: 29403},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 771, col: 9, offset: 29403},
									expr: &litMatcher{
										pos:        position{line: 771, col: 10, offset: 29404},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 771, col: 15, offset: 29409},
									val:        "``",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 771, col: 20, offset: 29414},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 771, col: 29, offset: 29423},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 771, col: 48, offset: 29442},
									val:        "`",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 774, col: 9, offset: 29624},
						run: (*parser).callonMonospaceText18,
						expr: &seqExpr{
							pos: position{line: 774, col: 9, offset: 29624},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 774, col: 9, offset: 29624},
									expr: &litMatcher{
										pos:        position{line: 774, col: 10, offset: 29625},
										val:        "\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 774, col: 14, offset: 29629},
									val:        "`",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 774, col: 18, offset: 29633},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 774, col: 27, offset: 29642},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 774, col: 46, offset: 29661},
									val:        "`",
									ignoreCase: false,
								},
								&notExpr{
									pos: position{line: 774, col: 50, offset: 29665},
									expr: &charClassMatcher{
										pos:        position{line: 1260, col: 13, offset: 49451},
										val:        "[a-zA-Z0-9]",
										ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
										ignoreCase: false,
										inverted:   false,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "EscapedMonospaceText",
			pos:  position{line: 778, col: 1, offset: 29859},
			expr: &choiceExpr{
				pos: position{line: 779, col: 5, offset: 29888},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 779, col: 5, offset: 29888},
						run: (*parser).callonEscapedMonospaceText2,
						expr: &seqExpr{
							pos: position{line: 779, col: 5, offset: 29888},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 779, col: 5, offset: 29888},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 744, col: 25, offset: 27828},
										run: (*parser).callonEscapedMonospaceText5,
										expr: &seqExpr{
											pos: position{line: 744, col: 25, offset: 27828},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 744, col: 25, offset: 27828},
													val:        "\\\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 744, col: 30, offset: 27833},
													expr: &litMatcher{
														pos:        position{line: 744, col: 30, offset: 27833},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 779, col: 40, offset: 29923},
									val:        "``",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 779, col: 45, offset: 29928},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 779, col: 54, offset: 29937},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 779, col: 73, offset: 29956},
									val:        "``",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 781, col: 9, offset: 30112},
						run: (*parser).callonEscapedMonospaceText14,
						expr: &seqExpr{
							pos: position{line: 781, col: 9, offset: 30112},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 781, col: 9, offset: 30112},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 740, col: 25, offset: 27759},
										run: (*parser).callonEscapedMonospaceText17,
										expr: &seqExpr{
											pos: position{line: 740, col: 25, offset: 27759},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 740, col: 25, offset: 27759},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 740, col: 29, offset: 27763},
													expr: &litMatcher{
														pos:        position{line: 740, col: 29, offset: 27763},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 781, col: 44, offset: 30147},
									val:        "``",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 781, col: 49, offset: 30152},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 781, col: 58, offset: 30161},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 781, col: 77, offset: 30180},
									val:        "`",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 784, col: 9, offset: 30379},
						run: (*parser).callonEscapedMonospaceText26,
						expr: &seqExpr{
							pos: position{line: 784, col: 9, offset: 30379},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 784, col: 9, offset: 30379},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 740, col: 25, offset: 27759},
										run: (*parser).callonEscapedMonospaceText29,
										expr: &seqExpr{
											pos: position{line: 740, col: 25, offset: 27759},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 740, col: 25, offset: 27759},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 740, col: 29, offset: 27763},
													expr: &litMatcher{
														pos:        position{line: 740, col: 29, offset: 27763},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 784, col: 44, offset: 30414},
									val:        "`",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 784, col: 48, offset: 30418},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 784, col: 57, offset: 30427},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 784, col: 76, offset: 30446},
									val:        "`",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "SubscriptText",
			pos:  position{line: 788, col: 1, offset: 30595},
			expr: &choiceExpr{
				pos: position{line: 789, col: 5, offset: 30617},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 789, col: 5, offset: 30617},
						run: (*parser).callonSubscriptText2,
						expr: &seqExpr{
							pos: position{line: 789, col: 5, offset: 30617},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 789, col: 5, offset: 30617},
									expr: &litMatcher{
										pos:        position{line: 789, col: 6, offset: 30618},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 789, col: 11, offset: 30623},
									val:        "~~",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 789, col: 16, offset: 30628},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 789, col: 25, offset: 30637},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 789, col: 44, offset: 30656},
									val:        "~~",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 791, col: 9, offset: 30794},
						run: (*parser).callonSubscriptText10,
						expr: &seqExpr{
							pos: position{line: 791, col: 9, offset: 30794},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 791, col: 9, offset: 30794},
									expr: &litMatcher{
										pos:        position{line: 791, col: 10, offset: 30795},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 791, col: 15, offset: 30800},
									val:        "~~",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 791, col: 20, offset: 30805},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 791, col: 29, offset: 30814},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 791, col: 48, offset: 30833},
									val:        "~",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 794, col: 9, offset: 31015},
						run: (*parser).callonSubscriptText18,
						expr: &seqExpr{
							pos: position{line: 794, col: 9, offset: 31015},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 794, col: 9, offset: 31015},
									expr: &litMatcher{
										pos:        position{line: 794, col: 10, offset: 31016},
										val:        "\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 794, col: 14, offset: 31020},
									val:        "~",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 794, col: 18, offset: 31024},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 794, col: 27, offset: 31033},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 794, col: 46, offset: 31052},
									val:        "~",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "EscapedSubscriptText",
			pos:  position{line: 798, col: 1, offset: 31240},
			expr: &choiceExpr{
				pos: position{line: 799, col: 5, offset: 31269},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 799, col: 5, offset: 31269},
						run: (*parser).callonEscapedSubscriptText2,
						expr: &seqExpr{
							pos: position{line: 799, col: 5, offset: 31269},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 799, col: 5, offset: 31269},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 744, col: 25, offset: 27828},
										run: (*parser).callonEscapedSubscriptText5,
										expr: &seqExpr{
											pos: position{line: 744, col: 25, offset: 27828},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 744, col: 25, offset: 27828},
													val:        "\\\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 744, col: 30, offset: 27833},
													expr: &litMatcher{
														pos:        position{line: 744, col: 30, offset: 27833},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 799, col: 40, offset: 31304},
									val:        "~~",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 799, col: 45, offset: 31309},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 799, col: 54, offset: 31318},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 799, col: 73, offset: 31337},
									val:        "~~",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 801, col: 9, offset: 31493},
						run: (*parser).callonEscapedSubscriptText14,
						expr: &seqExpr{
							pos: position{line: 801, col: 9, offset: 31493},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 801, col: 9, offset: 31493},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 740, col: 25, offset: 27759},
										run: (*parser).callonEscapedSubscriptText17,
										expr: &seqExpr{
											pos: position{line: 740, col: 25, offset: 27759},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 740, col: 25, offset: 27759},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 740, col: 29, offset: 27763},
													expr: &litMatcher{
														pos:        position{line: 740, col: 29, offset: 27763},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 801, col: 44, offset: 31528},
									val:        "~~",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 801, col: 49, offset: 31533},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 801, col: 58, offset: 31542},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 801, col: 77, offset: 31561},
									val:        "~",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 804, col: 9, offset: 31760},
						run: (*parser).callonEscapedSubscriptText26,
						expr: &seqExpr{
							pos: position{line: 804, col: 9, offset: 31760},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 804, col: 9, offset: 31760},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 740, col: 25, offset: 27759},
										run: (*parser).callonEscapedSubscriptText29,
										expr: &seqExpr{
											pos: position{line: 740, col: 25, offset: 27759},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 740, col: 25, offset: 27759},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 740, col: 29, offset: 27763},
													expr: &litMatcher{
														pos:        position{line: 740, col: 29, offset: 27763},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 804, col: 44, offset: 31795},
									val:        "~",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 804, col: 48, offset: 31799},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 804, col: 57, offset: 31808},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 804, col: 76, offset: 31827},
									val:        "~",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "SuperscriptText",
			pos:  position{line: 808, col: 1, offset: 31976},
			expr: &choiceExpr{
				pos: position{line: 809, col: 5, offset: 32000},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 809, col: 5, offset: 32000},
						run: (*parser).callonSuperscriptText2,
						expr: &seqExpr{
							pos: position{line: 809, col: 5, offset: 32000},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 809, col: 5, offset: 32000},
									expr: &litMatcher{
										pos:        position{line: 809, col: 6, offset: 32001},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 809, col: 11, offset: 32006},
									val:        "^^",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 809, col: 16, offset: 32011},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 809, col: 25, offset: 32020},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 809, col: 44, offset: 32039},
									val:        "^^",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 811, col: 9, offset: 32179},
						run: (*parser).callonSuperscriptText10,
						expr: &seqExpr{
							pos: position{line: 811, col: 9, offset: 32179},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 811, col: 9, offset: 32179},
									expr: &litMatcher{
										pos:        position{line: 811, col: 10, offset: 32180},
										val:        "\\\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 811, col: 15, offset: 32185},
									val:        "^^",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 811, col: 20, offset: 32190},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 811, col: 29, offset: 32199},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 811, col: 48, offset: 32218},
									val:        "^",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 814, col: 9, offset: 32402},
						run: (*parser).callonSuperscriptText18,
						expr: &seqExpr{
							pos: position{line: 814, col: 9, offset: 32402},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 814, col: 9, offset: 32402},
									expr: &litMatcher{
										pos:        position{line: 814, col: 10, offset: 32403},
										val:        "\\",
										ignoreCase: false,
									},
								},
								&litMatcher{
									pos:        position{line: 814, col: 14, offset: 32407},
									val:        "^",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 814, col: 18, offset: 32411},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 814, col: 27, offset: 32420},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 814, col: 46, offset: 32439},
									val:        "^",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "EscapedSuperscriptText",
			pos:  position{line: 818, col: 1, offset: 32629},
			expr: &choiceExpr{
				pos: position{line: 819, col: 5, offset: 32660},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 819, col: 5, offset: 32660},
						run: (*parser).callonEscapedSuperscriptText2,
						expr: &seqExpr{
							pos: position{line: 819, col: 5, offset: 32660},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 819, col: 5, offset: 32660},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 744, col: 25, offset: 27828},
										run: (*parser).callonEscapedSuperscriptText5,
										expr: &seqExpr{
											pos: position{line: 744, col: 25, offset: 27828},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 744, col: 25, offset: 27828},
													val:        "\\\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 744, col: 30, offset: 27833},
													expr: &litMatcher{
														pos:        position{line: 744, col: 30, offset: 27833},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 819, col: 40, offset: 32695},
									val:        "^^",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 819, col: 45, offset: 32700},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 819, col: 54, offset: 32709},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 819, col: 73, offset: 32728},
									val:        "^^",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 821, col: 9, offset: 32884},
						run: (*parser).callonEscapedSuperscriptText14,
						expr: &seqExpr{
							pos: position{line: 821, col: 9, offset: 32884},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 821, col: 9, offset: 32884},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 740, col: 25, offset: 27759},
										run: (*parser).callonEscapedSuperscriptText17,
										expr: &seqExpr{
											pos: position{line: 740, col: 25, offset: 27759},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 740, col: 25, offset: 27759},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 740, col: 29, offset: 27763},
													expr: &litMatcher{
														pos:        position{line: 740, col: 29, offset: 27763},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 821, col: 44, offset: 32919},
									val:        "^^",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 821, col: 49, offset: 32924},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 821, col: 58, offset: 32933},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 821, col: 77, offset: 32952},
									val:        "^",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 824, col: 9, offset: 33151},
						run: (*parser).callonEscapedSuperscriptText26,
						expr: &seqExpr{
							pos: position{line: 824, col: 9, offset: 33151},
							exprs: []interface{}{
								&labeledExpr{
									pos:   position{line: 824, col: 9, offset: 33151},
									label: "backslashes",
									expr: &actionExpr{
										pos: position{line: 740, col: 25, offset: 27759},
										run: (*parser).callonEscapedSuperscriptText29,
										expr: &seqExpr{
											pos: position{line: 740, col: 25, offset: 27759},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 740, col: 25, offset: 27759},
													val:        "\\",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 740, col: 29, offset: 27763},
													expr: &litMatcher{
														pos:        position{line: 740, col: 29, offset: 27763},
														val:        "\\",
														ignoreCase: false,
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 824, col: 44, offset: 33186},
									val:        "^",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 824, col: 48, offset: 33190},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 824, col: 57, offset: 33199},
										name: "QuotedTextContent",
									},
								},
								&litMatcher{
									pos:        position{line: 824, col: 76, offset: 33218},
									val:        "^",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "QuotedTextContent",
			pos:  position{line: 828, col: 1, offset: 33367},
			expr: &seqExpr{
				pos: position{line: 828, col: 22, offset: 33388},
				exprs: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 828, col: 22, offset: 33388},
						name: "QuotedTextContentElement",
					},
					&zeroOrMoreExpr{
						pos: position{line: 828, col: 47, offset: 33413},
						expr: &seqExpr{
							pos: position{line: 828, col: 48, offset: 33414},
							exprs: []interface{}{
								&oneOrMoreExpr{
									pos: position{line: 828, col: 48, offset: 33414},
									expr: &choiceExpr{
										pos: position{line: 1306, col: 7, offset: 50454},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1306, col: 7, offset: 50454},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1306, col: 13, offset: 50460},
												run: (*parser).callonQuotedTextContent8,
												expr: &litMatcher{
													pos:        position{line: 1306, col: 13, offset: 50460},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&ruleRefExpr{
									pos:  position{line: 828, col: 52, offset: 33418},
									name: "QuotedTextContentElement",
								},
							},
						},
					},
				},
			},
		},
		{
			name: "QuotedTextContentElement",
			pos:  position{line: 830, col: 1, offset: 33446},
			expr: &choiceExpr{
				pos: position{line: 830, col: 29, offset: 33474},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 830, col: 29, offset: 33474},
						name: "QuotedText",
					},
					&actionExpr{
						pos: position{line: 832, col: 19, offset: 33651},
						run: (*parser).callonQuotedTextContentElement3,
						expr: &oneOrMoreExpr{
							pos: position{line: 832, col: 19, offset: 33651},
							expr: &choiceExpr{
								pos: position{line: 832, col: 20, offset: 33652},
								alternatives: []interface{}{
									&actionExpr{
										pos: position{line: 1264, col: 14, offset: 49515},
										run: (*parser).callonQuotedTextContentElement6,
										expr: &oneOrMoreExpr{
											pos: position{line: 1264, col: 14, offset: 49515},
											expr: &charClassMatcher{
												pos:        position{line: 1264, col: 14, offset: 49515},
												val:        "[a-zA-Z0-9]",
												ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
												ignoreCase: false,
												inverted:   false,
											},
										},
									},
									&actionExpr{
										pos: position{line: 832, col: 32, offset: 33664},
										run: (*parser).callonQuotedTextContentElement9,
										expr: &seqExpr{
											pos: position{line: 832, col: 33, offset: 33665},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 832, col: 33, offset: 33665},
													expr: &choiceExpr{
														pos: position{line: 1310, col: 12, offset: 50512},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1310, col: 12, offset: 50512},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1310, col: 21, offset: 50521},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
														},
													},
												},
												&notExpr{
													pos: position{line: 832, col: 42, offset: 33674},
													expr: &choiceExpr{
														pos: position{line: 1306, col: 7, offset: 50454},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1306, col: 7, offset: 50454},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1306, col: 13, offset: 50460},
																run: (*parser).callonQuotedTextContentElement18,
																expr: &litMatcher{
																	pos:        position{line: 1306, col: 13, offset: 50460},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&notExpr{
													pos: position{line: 832, col: 46, offset: 33678},
													expr: &litMatcher{
														pos:        position{line: 832, col: 47, offset: 33679},
														val:        "*",
														ignoreCase: false,
													},
												},
												&notExpr{
													pos: position{line: 832, col: 51, offset: 33683},
													expr: &litMatcher{
														pos:        position{line: 832, col: 52, offset: 33684},
														val:        "_",
														ignoreCase: false,
													},
												},
												&notExpr{
													pos: position{line: 832, col: 56, offset: 33688},
													expr: &litMatcher{
														pos:        position{line: 832, col: 57, offset: 33689},
														val:        "`",
														ignoreCase: false,
													},
												},
												&notExpr{
													pos: position{line: 832, col: 61, offset: 33693},
													expr: &litMatcher{
														pos:        position{line: 832, col: 62, offset: 33694},
														val:        "~",
														ignoreCase: false,
													},
												},
												&notExpr{
													pos: position{line: 832, col: 66, offset: 33698},
													expr: &litMatcher{
														pos:        position{line: 832, col: 67, offset: 33699},
														val:        "^",
														ignoreCase: false,
													},
												},
												&anyMatcher{
													line: 832, col: 71, offset: 33703,
												},
											},
										},
									},
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 838, col: 29, offset: 33848},
						run: (*parser).callonQuotedTextContentElement31,
						expr: &oneOrMoreExpr{
							pos: position{line: 838, col: 29, offset: 33848},
							expr: &choiceExpr{
								pos: position{line: 838, col: 30, offset: 33849},
								alternatives: []interface{}{
									&actionExpr{
										pos: position{line: 1264, col: 14, offset: 49515},
										run: (*parser).callonQuotedTextContentElement34,
										expr: &oneOrMoreExpr{
											pos: position{line: 1264, col: 14, offset: 49515},
											expr: &charClassMatcher{
												pos:        position{line: 1264, col: 14, offset: 49515},
												val:        "[a-zA-Z0-9]",
												ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
												ignoreCase: false,
												inverted:   false,
											},
										},
									},
									&actionExpr{
										pos: position{line: 838, col: 42, offset: 33861},
										run: (*parser).callonQuotedTextContentElement37,
										expr: &seqExpr{
											pos: position{line: 838, col: 43, offset: 33862},
											exprs: []interface{}{
												&notExpr{
													pos: position{line: 838, col: 43, offset: 33862},
													expr: &choiceExpr{
														pos: position{line: 1310, col: 12, offset: 50512},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1310, col: 12, offset: 50512},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1310, col: 21, offset: 50521},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
														},
													},
												},
												&notExpr{
													pos: position{line: 838, col: 52, offset: 33871},
													expr: &choiceExpr{
														pos: position{line: 1306, col: 7, offset: 50454},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1306, col: 7, offset: 50454},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1306, col: 13, offset: 50460},
																run: (*parser).callonQuotedTextContentElement46,
																expr: &litMatcher{
																	pos:        position{line: 1306, col: 13, offset: 50460},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&anyMatcher{
													line: 838, col: 56, offset: 33875,
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Passthrough",
			pos:  position{line: 850, col: 1, offset: 34234},
			expr: &choiceExpr{
				pos: position{line: 850, col: 16, offset: 34249},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 858, col: 26, offset: 34549},
						run: (*parser).callonPassthrough2,
						expr: &seqExpr{
							pos: position{line: 858, col: 26, offset: 34549},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 858, col: 26, offset: 34549},
									val:        "+++",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 858, col: 32, offset: 34555},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 858, col: 40, offset: 34563},
										expr: &choiceExpr{
											pos: position{line: 858, col: 41, offset: 34564},
											alternatives: []interface{}{
												&actionExpr{
													pos: position{line: 1264, col: 14, offset: 49515},
													run: (*parser).callonPassthrough8,
													expr: &oneOrMoreExpr{
														pos: position{line: 1264, col: 14, offset: 49515},
														expr: &charClassMatcher{
															pos:        position{line: 1264, col: 14, offset: 49515},
															val:        "[a-zA-Z0-9]",
															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
												&actionExpr{
													pos: position{line: 1278, col: 11, offset: 49909},
													run: (*parser).callonPassthrough11,
													expr: &oneOrMoreExpr{
														pos: position{line: 1278, col: 11, offset: 49909},
														expr: &choiceExpr{
															pos: position{line: 1306, col: 7, offset: 50454},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1306, col: 7, offset: 50454},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1306, col: 13, offset: 50460},
																	run: (*parser).callonPassthrough15,
																	expr: &litMatcher{
																		pos:        position{line: 1306, col: 13, offset: 50460},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
												&actionExpr{
													pos: position{line: 858, col: 62, offset: 34585},
													run: (*parser).callonPassthrough17,
													expr: &seqExpr{
														pos: position{line: 858, col: 63, offset: 34586},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 858, col: 63, offset: 34586},
																expr: &litMatcher{
																	pos:        position{line: 858, col: 64, offset: 34587},
																	val:        "+++",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 858, col: 70, offset: 34593,
															},
														},
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 860, col: 5, offset: 34633},
									val:        "+++",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 852, col: 26, offset: 34340},
						run: (*parser).callonPassthrough23,
						expr: &seqExpr{
							pos: position{line: 852, col: 26, offset: 34340},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 852, col: 26, offset: 34340},
									val:        "+",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 852, col: 30, offset: 34344},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 852, col: 38, offset: 34352},
										expr: &choiceExpr{
											pos: position{line: 852, col: 39, offset: 34353},
											alternatives: []interface{}{
												&actionExpr{
													pos: position{line: 1264, col: 14, offset: 49515},
													run: (*parser).callonPassthrough29,
													expr: &oneOrMoreExpr{
														pos: position{line: 1264, col: 14, offset: 49515},
														expr: &charClassMatcher{
															pos:        position{line: 1264, col: 14, offset: 49515},
															val:        "[a-zA-Z0-9]",
															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
												&actionExpr{
													pos: position{line: 1278, col: 11, offset: 49909},
													run: (*parser).callonPassthrough32,
													expr: &oneOrMoreExpr{
														pos: position{line: 1278, col: 11, offset: 49909},
														expr: &choiceExpr{
															pos: position{line: 1306, col: 7, offset: 50454},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1306, col: 7, offset: 50454},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1306, col: 13, offset: 50460},
																	run: (*parser).callonPassthrough36,
																	expr: &litMatcher{
																		pos:        position{line: 1306, col: 13, offset: 50460},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
												&actionExpr{
													pos: position{line: 852, col: 60, offset: 34374},
													run: (*parser).callonPassthrough38,
													expr: &seqExpr{
														pos: position{line: 852, col: 61, offset: 34375},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 852, col: 61, offset: 34375},
																expr: &choiceExpr{
																	pos: position{line: 1310, col: 12, offset: 50512},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1310, col: 12, offset: 50512},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1310, col: 21, offset: 50521},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
															},
															&notExpr{
																pos: position{line: 852, col: 70, offset: 34384},
																expr: &litMatcher{
																	pos:        position{line: 852, col: 71, offset: 34385},
																	val:        "+",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 852, col: 75, offset: 34389,
															},
														},
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 854, col: 5, offset: 34429},
									val:        "+",
									ignoreCase: false,
								},
							},
						},
					},
					&ruleRefExpr{
						pos:  position{line: 850, col: 64, offset: 34297},
						name: "PassthroughMacro",
					},
				},
			},
		},
		{
			name: "PassthroughMacro",
			pos:  position{line: 864, col: 1, offset: 34730},
			expr: &choiceExpr{
				pos: position{line: 864, col: 21, offset: 34750},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 864, col: 21, offset: 34750},
						run: (*parser).callonPassthroughMacro2,
						expr: &seqExpr{
							pos: position{line: 864, col: 21, offset: 34750},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 864, col: 21, offset: 34750},
									val:        "pass:[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 864, col: 30, offset: 34759},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 864, col: 38, offset: 34767},
										expr: &choiceExpr{
											pos: position{line: 870, col: 31, offset: 35067},
											alternatives: []interface{}{
												&actionExpr{
													pos: position{line: 1264, col: 14, offset: 49515},
													run: (*parser).callonPassthroughMacro8,
													expr: &oneOrMoreExpr{
														pos: position{line: 1264, col: 14, offset: 49515},
														expr: &charClassMatcher{
															pos:        position{line: 1264, col: 14, offset: 49515},
															val:        "[a-zA-Z0-9]",
															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
												&actionExpr{
													pos: position{line: 1278, col: 11, offset: 49909},
													run: (*parser).callonPassthroughMacro11,
													expr: &oneOrMoreExpr{
														pos: position{line: 1278, col: 11, offset: 49909},
														expr: &choiceExpr{
															pos: position{line: 1306, col: 7, offset: 50454},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1306, col: 7, offset: 50454},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1306, col: 13, offset: 50460},
																	run: (*parser).callonPassthroughMacro15,
																	expr: &litMatcher{
																		pos:        position{line: 1306, col: 13, offset: 50460},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
												&actionExpr{
													pos: position{line: 870, col: 52, offset: 35088},
													run: (*parser).callonPassthroughMacro17,
													expr: &seqExpr{
														pos: position{line: 870, col: 53, offset: 35089},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 870, col: 53, offset: 35089},
																expr: &litMatcher{
																	pos:        position{line: 870, col: 54, offset: 35090},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 870, col: 59, offset: 35095,
															},
														},
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 864, col: 67, offset: 34796},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 866, col: 5, offset: 34887},
						run: (*parser).callonPassthroughMacro23,
						expr: &seqExpr{
							pos: position{line: 866, col: 5, offset: 34887},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 866, col: 5, offset: 34887},
									val:        "pass:q[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 866, col: 15, offset: 34897},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 866, col: 23, offset: 34905},
										expr: &choiceExpr{
											pos: position{line: 866, col: 24, offset: 34906},
											alternatives: []interface{}{
												&ruleRefExpr{
													pos:  position{line: 866, col: 24, offset: 34906},
													name: "QuotedText",
												},
												&actionExpr{
													pos: position{line: 1264, col: 14, offset: 49515},
													run: (*parser).callonPassthroughMacro30,
													expr: &oneOrMoreExpr{
														pos: position{line: 1264, col: 14, offset: 49515},
														expr: &charClassMatcher{
															pos:        position{line: 1264, col: 14, offset: 49515},
															val:        "[a-zA-Z0-9]",
															ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
															ignoreCase: false,
															inverted:   false,
														},
													},
												},
												&actionExpr{
													pos: position{line: 1278, col: 11, offset: 49909},
													run: (*parser).callonPassthroughMacro33,
													expr: &oneOrMoreExpr{
														pos: position{line: 1278, col: 11, offset: 49909},
														expr: &choiceExpr{
															pos: position{line: 1306, col: 7, offset: 50454},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1306, col: 7, offset: 50454},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1306, col: 13, offset: 50460},
																	run: (*parser).callonPassthroughMacro37,
																	expr: &litMatcher{
																		pos:        position{line: 1306, col: 13, offset: 50460},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
												&actionExpr{
													pos: position{line: 870, col: 52, offset: 35088},
													run: (*parser).callonPassthroughMacro39,
													expr: &seqExpr{
														pos: position{line: 870, col: 53, offset: 35089},
														exprs: []interface{}{
															&notExpr{
																pos: position{line: 870, col: 53, offset: 35089},
																expr: &litMatcher{
																	pos:        position{line: 870, col: 54, offset: 35090},
																	val:        "]",
																	ignoreCase: false,
																},
															},
															&anyMatcher{
																line: 870, col: 59, offset: 35095,
															},
														},
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 866, col: 65, offset: 34947},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "InlineFootnote",
			pos:  position{line: 965, col: 1, offset: 38491},
			expr: &choiceExpr{
				pos: position{line: 965, col: 19, offset: 38509},
				alternatives: []interface{}{
					&actionExpr{
						pos: position{line: 965, col: 19, offset: 38509},
						run: (*parser).callonInlineFootnote2,
						expr: &seqExpr{
							pos: position{line: 965, col: 19, offset: 38509},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 965, col: 19, offset: 38509},
									val:        "footnote:[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 965, col: 32, offset: 38522},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 965, col: 41, offset: 38531},
										name: "FootnoteContent",
									},
								},
								&litMatcher{
									pos:        position{line: 965, col: 58, offset: 38548},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 967, col: 5, offset: 38623},
						run: (*parser).callonInlineFootnote8,
						expr: &seqExpr{
							pos: position{line: 967, col: 5, offset: 38623},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 967, col: 5, offset: 38623},
									val:        "footnoteref:[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 967, col: 21, offset: 38639},
									label: "ref",
									expr: &actionExpr{
										pos: position{line: 973, col: 16, offset: 38936},
										run: (*parser).callonInlineFootnote12,
										expr: &zeroOrMoreExpr{
											pos: position{line: 973, col: 16, offset: 38936},
											expr: &choiceExpr{
												pos: position{line: 973, col: 17, offset: 38937},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 1264, col: 14, offset: 49515},
														run: (*parser).callonInlineFootnote15,
														expr: &oneOrMoreExpr{
															pos: position{line: 1264, col: 14, offset: 49515},
															expr: &charClassMatcher{
																pos:        position{line: 1264, col: 14, offset: 49515},
																val:        "[a-zA-Z0-9]",
																ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																ignoreCase: false,
																inverted:   false,
															},
														},
													},
													&actionExpr{
														pos: position{line: 1278, col: 11, offset: 49909},
														run: (*parser).callonInlineFootnote18,
														expr: &oneOrMoreExpr{
															pos: position{line: 1278, col: 11, offset: 49909},
															expr: &choiceExpr{
																pos: position{line: 1306, col: 7, offset: 50454},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1306, col: 7, offset: 50454},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1306, col: 13, offset: 50460},
																		run: (*parser).callonInlineFootnote22,
																		expr: &litMatcher{
																			pos:        position{line: 1306, col: 13, offset: 50460},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 973, col: 38, offset: 38958},
														run: (*parser).callonInlineFootnote24,
														expr: &seqExpr{
															pos: position{line: 973, col: 39, offset: 38959},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 973, col: 39, offset: 38959},
																	expr: &litMatcher{
																		pos:        position{line: 973, col: 40, offset: 38960},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 973, col: 44, offset: 38964},
																	expr: &litMatcher{
																		pos:        position{line: 973, col: 45, offset: 38965},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 973, col: 49, offset: 38969},
																	expr: &choiceExpr{
																		pos: position{line: 1314, col: 8, offset: 50552},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1310, col: 12, offset: 50512},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1310, col: 21, offset: 50521},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																			&notExpr{
																				pos: position{line: 1312, col: 8, offset: 50541},
																				expr: &anyMatcher{
																					line: 1312, col: 9, offset: 50542,
																				},
																			},
																		},
																	},
																},
																&anyMatcher{
																	line: 973, col: 55, offset: 38975,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 967, col: 39, offset: 38657},
									val:        ",",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 967, col: 43, offset: 38661},
									label: "content",
									expr: &ruleRefExpr{
										pos:  position{line: 967, col: 52, offset: 38670},
										name: "FootnoteContent",
									},
								},
								&litMatcher{
									pos:        position{line: 967, col: 69, offset: 38687},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
					&actionExpr{
						pos: position{line: 969, col: 5, offset: 38772},
						run: (*parser).callonInlineFootnote41,
						expr: &seqExpr{
							pos: position{line: 969, col: 5, offset: 38772},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 969, col: 5, offset: 38772},
									val:        "footnoteref:[",
									ignoreCase: false,
								},
								&labeledExpr{
									pos:   position{line: 969, col: 21, offset: 38788},
									label: "ref",
									expr: &actionExpr{
										pos: position{line: 973, col: 16, offset: 38936},
										run: (*parser).callonInlineFootnote45,
										expr: &zeroOrMoreExpr{
											pos: position{line: 973, col: 16, offset: 38936},
											expr: &choiceExpr{
												pos: position{line: 973, col: 17, offset: 38937},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 1264, col: 14, offset: 49515},
														run: (*parser).callonInlineFootnote48,
														expr: &oneOrMoreExpr{
															pos: position{line: 1264, col: 14, offset: 49515},
															expr: &charClassMatcher{
																pos:        position{line: 1264, col: 14, offset: 49515},
																val:        "[a-zA-Z0-9]",
																ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																ignoreCase: false,
																inverted:   false,
															},
														},
													},
													&actionExpr{
														pos: position{line: 1278, col: 11, offset: 49909},
														run: (*parser).callonInlineFootnote51,
														expr: &oneOrMoreExpr{
															pos: position{line: 1278, col: 11, offset: 49909},
															expr: &choiceExpr{
																pos: position{line: 1306, col: 7, offset: 50454},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1306, col: 7, offset: 50454},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1306, col: 13, offset: 50460},
																		run: (*parser).callonInlineFootnote55,
																		expr: &litMatcher{
																			pos:        position{line: 1306, col: 13, offset: 50460},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 973, col: 38, offset: 38958},
														run: (*parser).callonInlineFootnote57,
														expr: &seqExpr{
															pos: position{line: 973, col: 39, offset: 38959},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 973, col: 39, offset: 38959},
																	expr: &litMatcher{
																		pos:        position{line: 973, col: 40, offset: 38960},
																		val:        ",",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 973, col: 44, offset: 38964},
																	expr: &litMatcher{
																		pos:        position{line: 973, col: 45, offset: 38965},
																		val:        "]",
																		ignoreCase: false,
																	},
																},
																&notExpr{
																	pos: position{line: 973, col: 49, offset: 38969},
																	expr: &choiceExpr{
																		pos: position{line: 1314, col: 8, offset: 50552},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1310, col: 12, offset: 50512},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1310, col: 21, offset: 50521},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																			&notExpr{
																				pos: position{line: 1312, col: 8, offset: 50541},
																				expr: &anyMatcher{
																					line: 1312, col: 9, offset: 50542,
																				},
																			},
																		},
																	},
																},
																&anyMatcher{
																	line: 973, col: 55, offset: 38975,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&litMatcher{
									pos:        position{line: 969, col: 39, offset: 38806},
									val:        "]",
									ignoreCase: false,
								},
							},
						},
					},
				},
			},
		},
		{
			name: "FootnoteContent",
			pos:  position{line: 979, col: 1, offset: 39094},
			expr: &actionExpr{
				pos: position{line: 979, col: 20, offset: 39113},
				run: (*parser).callonFootnoteContent1,
				expr: &labeledExpr{
					pos:   position{line: 979, col: 20, offset: 39113},
					label: "elements",
					expr: &oneOrMoreExpr{
						pos: position{line: 979, col: 29, offset: 39122},
						expr: &seqExpr{
							pos: position{line: 979, col: 30, offset: 39123},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 979, col: 30, offset: 39123},
									expr: &litMatcher{
										pos:        position{line: 979, col: 31, offset: 39124},
										val:        "]",
										ignoreCase: false,
									},
								},
								&notExpr{
									pos: position{line: 979, col: 35, offset: 39128},
									expr: &choiceExpr{
										pos: position{line: 1314, col: 8, offset: 50552},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1310, col: 12, offset: 50512},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1310, col: 21, offset: 50521},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1312, col: 8, offset: 50541},
												expr: &anyMatcher{
													line: 1312, col: 9, offset: 50542,
												},
											},
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 979, col: 40, offset: 39133},
									expr: &choiceExpr{
										pos: position{line: 1306, col: 7, offset: 50454},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1306, col: 7, offset: 50454},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1306, col: 13, offset: 50460},
												run: (*parser).callonFootnoteContent16,
												expr: &litMatcher{
													pos:        position{line: 1306, col: 13, offset: 50460},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 979, col: 44, offset: 39137},
									expr: &actionExpr{
										pos: position{line: 180, col: 20, offset: 6467},
										run: (*parser).callonFootnoteContent19,
										expr: &seqExpr{
											pos: position{line: 180, col: 20, offset: 6467},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 180, col: 20, offset: 6467},
													val:        "[[",
													ignoreCase: false,
												},
												&labeledExpr{
													pos:   position{line: 180, col: 25, offset: 6472},
													label: "id",
													expr: &actionExpr{
														pos: position{line: 1288, col: 7, offset: 50075},
														run: (*parser).callonFootnoteContent23,
														expr: &oneOrMoreExpr{
															pos: position{line: 1288, col: 7, offset: 50075},
															expr: &choiceExpr{
																pos: position{line: 1288, col: 8, offset: 50076},
																alternatives: []interface{}{
																	&actionExpr{
																		pos: position{line: 1264, col: 14, offset: 49515},
																		run: (*parser).callonFootnoteContent26,
																		expr: &oneOrMoreExpr{
																			pos: position{line: 1264, col: 14, offset: 49515},
																			expr: &charClassMatcher{
																				pos:        position{line: 1264, col: 14, offset: 49515},
																				val:        "[a-zA-Z0-9]",
																				ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																	&actionExpr{
																		pos: position{line: 1288, col: 20, offset: 50088},
																		run: (*parser).callonFootnoteContent29,
																		expr: &seqExpr{
																			pos: position{line: 1288, col: 21, offset: 50089},
																			exprs: []interface{}{
																				&notExpr{
																					pos: position{line: 1288, col: 21, offset: 50089},
																					expr: &choiceExpr{
																						pos: position{line: 1310, col: 12, offset: 50512},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1310, col: 12, offset: 50512},
																								val:        "\r\n",
																								ignoreCase: false,
																							},
																							&charClassMatcher{
																								pos:        position{line: 1310, col: 21, offset: 50521},
																								val:        "[\\r\\n]",
																								chars:      []rune{'\r', '\n'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 30, offset: 50098},
																					expr: &choiceExpr{
																						pos: position{line: 1306, col: 7, offset: 50454},
																						alternatives: []interface{}{
																							&litMatcher{
																								pos:        position{line: 1306, col: 7, offset: 50454},
																								val:        " ",
																								ignoreCase: false,
																							},
																							&actionExpr{
																								pos: position{line: 1306, col: 13, offset: 50460},
																								run: (*parser).callonFootnoteContent38,
																								expr: &litMatcher{
																									pos:        position{line: 1306, col: 13, offset: 50460},
																									val:        "\t",
																									ignoreCase: false,
																								},
																							},
																						},
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 34, offset: 50102},
																					expr: &litMatcher{
																						pos:        position{line: 1288, col: 35, offset: 50103},
																						val:        "[",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 39, offset: 50107},
																					expr: &litMatcher{
																						pos:        position{line: 1288, col: 40, offset: 50108},
																						val:        "]",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 44, offset: 50112},
																					expr: &litMatcher{
																						pos:        position{line: 1288, col: 45, offset: 50113},
																						val:        "<<",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 50, offset: 50118},
																					expr: &litMatcher{
																						pos:        position{line: 1288, col: 51, offset: 50119},
																						val:        ">>",
																						ignoreCase: false,
																					},
																				},
																				&notExpr{
																					pos: position{line: 1288, col: 56, offset: 50124},
																					expr: &litMatcher{
																						pos:        position{line: 1288, col: 57, offset: 50125},
																						val:        ",",
																						ignoreCase: false,
																					},
																				},
																				&anyMatcher{
																					line: 1288, col: 62, offset: 50130,
																				},
																			},
																		},
																	},
																},
															},
														},
													},
												},
												&litMatcher{
													pos:        position{line: 180, col: 33, offset: 6480},
													val:        "]]",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 180, col: 38, offset: 6485},
													expr: &choiceExpr{
														pos: position{line: 1306, col: 7, offset: 50454},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1306, col: 7, offset: 50454},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1306, col: 13, offset: 50460},
																run: (*parser).callonFootnoteContent55,
																expr: &litMatcher{
																	pos:        position{line: 1306, col: 13, offset: 50460},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&ruleRefExpr{
									pos:  position{line: 979, col: 61, offset: 39154},
									name: "InlineElement",
								},
								&zeroOrMoreExpr{
									pos: position{line: 979, col: 75, offset: 39168},
									expr: &choiceExpr{
										pos: position{line: 1306, col: 7, offset: 50454},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1306, col: 7, offset: 50454},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1306, col: 13, offset: 50460},
												run: (*parser).callonFootnoteContent61,
												expr: &litMatcher{
													pos:        position{line: 1306, col: 13, offset: 50460},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "DelimitedBlock",
			pos:  position{line: 987, col: 1, offset: 39491},
			expr: &choiceExpr{
				pos: position{line: 987, col: 19, offset: 39509},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 987, col: 19, offset: 39509},
						name: "FencedBlock",
					},
					&actionExpr{
						pos: position{line: 1021, col: 17, offset: 40759},
						run: (*parser).callonDelimitedBlock3,
						expr: &seqExpr{
							pos: position{line: 1021, col: 17, offset: 40759},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 1018, col: 26, offset: 40692},
									val:        "----",
									ignoreCase: false,
								},
								&zeroOrMoreExpr{
									pos: position{line: 1018, col: 33, offset: 40699},
									expr: &choiceExpr{
										pos: position{line: 1306, col: 7, offset: 50454},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1306, col: 7, offset: 50454},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1306, col: 13, offset: 50460},
												run: (*parser).callonDelimitedBlock9,
												expr: &litMatcher{
													pos:        position{line: 1306, col: 13, offset: 50460},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 1314, col: 8, offset: 50552},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 1310, col: 12, offset: 50512},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 1310, col: 21, offset: 50521},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
										&notExpr{
											pos: position{line: 1312, col: 8, offset: 50541},
											expr: &anyMatcher{
												line: 1312, col: 9, offset: 50542,
											},
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 1021, col: 39, offset: 40781},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 1021, col: 47, offset: 40789},
										expr: &actionExpr{
											pos: position{line: 1025, col: 24, offset: 40959},
											run: (*parser).callonDelimitedBlock18,
											expr: &labeledExpr{
												pos:   position{line: 1025, col: 24, offset: 40959},
												label: "lines",
												expr: &oneOrMoreExpr{
													pos: position{line: 1025, col: 30, offset: 40965},
													expr: &actionExpr{
														pos: position{line: 1029, col: 21, offset: 41068},
														run: (*parser).callonDelimitedBlock21,
														expr: &seqExpr{
															pos: position{line: 1029, col: 21, offset: 41068},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 1029, col: 21, offset: 41068},
																	expr: &seqExpr{
																		pos: position{line: 1018, col: 26, offset: 40692},
																		exprs: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1018, col: 26, offset: 40692},
																				val:        "----",
																				ignoreCase: false,
																			},
																			&zeroOrMoreExpr{
																				pos: position{line: 1018, col: 33, offset: 40699},
																				expr: &choiceExpr{
																					pos: position{line: 1306, col: 7, offset: 50454},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1306, col: 7, offset: 50454},
																							val:        " ",
																							ignoreCase: false,
																						},
																						&actionExpr{
																							pos: position{line: 1306, col: 13, offset: 50460},
																							run: (*parser).callonDelimitedBlock29,
																							expr: &litMatcher{
																								pos:        position{line: 1306, col: 13, offset: 50460},
																								val:        "\t",
																								ignoreCase: false,
																							},
																						},
																					},
																				},
																			},
																			&choiceExpr{
																				pos: position{line: 1314, col: 8, offset: 50552},
																				alternatives: []interface{}{
																					&litMatcher{
																						pos:        position{line: 1310, col: 12, offset: 50512},
																						val:        "\r\n",
																						ignoreCase: false,
																					},
																					&charClassMatcher{
																						pos:        position{line: 1310, col: 21, offset: 50521},
																						val:        "[\\r\\n]",
																						chars:      []rune{'\r', '\n'},
																						ignoreCase: false,
																						inverted:   false,
																					},
																					&notExpr{
																						pos: position{line: 1312, col: 8, offset: 50541},
																						expr: &anyMatcher{
																							line: 1312, col: 9, offset: 50542,
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 1029, col: 44, offset: 41091},
																	expr: &notExpr{
																		pos: position{line: 1312, col: 8, offset: 50541},
																		expr: &anyMatcher{
																			line: 1312, col: 9, offset: 50542,
																		},
																	},
																},
																&labeledExpr{
																	pos:   position{line: 1029, col: 49, offset: 41096},
																	label: "line",
																	expr: &actionExpr{
																		pos: position{line: 1033, col: 28, offset: 41207},
																		run: (*parser).callonDelimitedBlock40,
																		expr: &zeroOrMoreExpr{
																			pos: position{line: 1033, col: 28, offset: 41207},
																			expr: &choiceExpr{
																				pos: position{line: 1033, col: 29, offset: 41208},
																				alternatives: []interface{}{
																					&actionExpr{
																						pos: position{line: 1264, col: 14, offset: 49515},
																						run: (*parser).callonDelimitedBlock43,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1264, col: 14, offset: 49515},
																							expr: &charClassMatcher{
																								pos:        position{line: 1264, col: 14, offset: 49515},
																								val:        "[a-zA-Z0-9]",
																								ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																								ignoreCase: false,
																								inverted:   false,
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 1278, col: 11, offset: 49909},
																						run: (*parser).callonDelimitedBlock46,
																						expr: &oneOrMoreExpr{
																							pos: position{line: 1278, col: 11, offset: 49909},
																							expr: &choiceExpr{
																								pos: position{line: 1306, col: 7, offset: 50454},
																								alternatives: []interface{}{
																									&litMatcher{
																										pos:        position{line: 1306, col: 7, offset: 50454},
																										val:        " ",
																										ignoreCase: false,
																									},
																									&actionExpr{
																										pos: position{line: 1306, col: 13, offset: 50460},
																										run: (*parser).callonDelimitedBlock50,
																										expr: &litMatcher{
																											pos:        position{line: 1306, col: 13, offset: 50460},
																											val:        "\t",
																											ignoreCase: false,
																										},
																									},
																								},
																							},
																						},
																					},
																					&actionExpr{
																						pos: position{line: 1033, col: 50, offset: 41229},
																						run: (*parser).callonDelimitedBlock52,
																						expr: &seqExpr{
																							pos: position{line: 1033, col: 51, offset: 41230},
																							exprs: []interface{}{
																								&notExpr{
																									pos: position{line: 1033, col: 51, offset: 41230},
																									expr: &seqExpr{
																										pos: position{line: 1018, col: 26, offset: 40692},
																										exprs: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1018, col: 26, offset: 40692},
																												val:        "----",
																												ignoreCase: false,
																											},
																											&zeroOrMoreExpr{
																												pos: position{line: 1018, col: 33, offset: 40699},
																												expr: &choiceExpr{
																													pos: position{line: 1306, col: 7, offset: 50454},
																													alternatives: []interface{}{
																														&litMatcher{
																															pos:        position{line: 1306, col: 7, offset: 50454},
																															val:        " ",
																															ignoreCase: false,
																														},
																														&actionExpr{
																															pos: position{line: 1306, col: 13, offset: 50460},
																															run: (*parser).callonDelimitedBlock60,
																															expr: &litMatcher{
																																pos:        position{line: 1306, col: 13, offset: 50460},
																																val:        "\t",
																																ignoreCase: false,
																															},
																														},
																													},
																												},
																											},
																											&choiceExpr{
																												pos: position{line: 1314, col: 8, offset: 50552},
																												alternatives: []interface{}{
																													&litMatcher{
																														pos:        position{line: 1310, col: 12, offset: 50512},
																														val:        "\r\n",
																														ignoreCase: false,
																													},
																													&charClassMatcher{
																														pos:        position{line: 1310, col: 21, offset: 50521},
																														val:        "[\\r\\n]",
																														chars:      []rune{'\r', '\n'},
																														ignoreCase: false,
																														inverted:   false,
																													},
																													&notExpr{
																														pos: position{line: 1312, col: 8, offset: 50541},
																														expr: &anyMatcher{
																															line: 1312, col: 9, offset: 50542,
																														},
																													},
																												},
																											},
																										},
																									},
																								},
																								&notExpr{
																									pos: position{line: 1033, col: 74, offset: 41253},
																									expr: &choiceExpr{
																										pos: position{line: 1314, col: 8, offset: 50552},
																										alternatives: []interface{}{
																											&litMatcher{
																												pos:        position{line: 1310, col: 12, offset: 50512},
																												val:        "\r\n",
																												ignoreCase: false,
																											},
																											&charClassMatcher{
																												pos:        position{line: 1310, col: 21, offset: 50521},
																												val:        "[\\r\\n]",
																												chars:      []rune{'\r', '\n'},
																												ignoreCase: false,
																												inverted:   false,
																											},
																											&notExpr{
																												pos: position{line: 1312, col: 8, offset: 50541},
																												expr: &anyMatcher{
																													line: 1312, col: 9, offset: 50542,
																												},
																											},
																										},
																									},
																								},
																								&anyMatcher{
																									line: 1033, col: 80, offset: 41259,
																								},
																							},
																						},
																					},
																				},
																			},
																		},
																	},
																},
																&choiceExpr{
																	pos: position{line: 1314, col: 8, offset: 50552},
																	alternatives: []interface{}{
																		&litMatcher{
																			pos:        position{line: 1310, col: 12, offset: 50512},
																			val:        "\r\n",
																			ignoreCase: false,
																		},
																		&charClassMatcher{
																			pos:        position{line: 1310, col: 21, offset: 50521},
																			val:        "[\\r\\n]",
																			chars:      []rune{'\r', '\n'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																		&notExpr{
																			pos: position{line: 1312, col: 8, offset: 50541},
																			expr: &anyMatcher{
																				line: 1312, col: 9, offset: 50542,
																			},
																		},
																	},
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 1021, col: 71, offset: 40813},
									alternatives: []interface{}{
										&seqExpr{
											pos: position{line: 1018, col: 26, offset: 40692},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 1018, col: 26, offset: 40692},
													val:        "----",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 1018, col: 33, offset: 40699},
													expr: &choiceExpr{
														pos: position{line: 1306, col: 7, offset: 50454},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1306, col: 7, offset: 50454},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1306, col: 13, offset: 50460},
																run: (*parser).callonDelimitedBlock85,
																expr: &litMatcher{
																	pos:        position{line: 1306, col: 13, offset: 50460},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1314, col: 8, offset: 50552},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1310, col: 12, offset: 50512},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1310, col: 21, offset: 50521},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1312, col: 8, offset: 50541},
															expr: &anyMatcher{
																line: 1312, col: 9, offset: 50542,
															},
														},
													},
												},
											},
										},
										&notExpr{
											pos: position{line: 1312, col: 8, offset: 50541},
											expr: &anyMatcher{
												line: 1312, col: 9, offset: 50542,
											},
										},
									},
								},
							},
						},
					},
					&ruleRefExpr{
						pos:  position{line: 989, col: 19, offset: 39572},
						name: "ExampleBlock",
					},
					&actionExpr{
						pos: position{line: 1153, col: 17, offset: 45597},
						run: (*parser).callonDelimitedBlock95,
						expr: &seqExpr{
							pos: position{line: 1153, col: 17, offset: 45597},
							exprs: []interface{}{
								&litMatcher{
									pos:        position{line: 1151, col: 26, offset: 45573},
									val:        "////",
									ignoreCase: false,
								},
								&zeroOrMoreExpr{
									pos: position{line: 1153, col: 39, offset: 45619},
									expr: &choiceExpr{
										pos: position{line: 1306, col: 7, offset: 50454},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1306, col: 7, offset: 50454},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1306, col: 13, offset: 50460},
												run: (*parser).callonDelimitedBlock101,
												expr: &litMatcher{
													pos:        position{line: 1306, col: 13, offset: 50460},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 1310, col: 12, offset: 50512},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 1310, col: 12, offset: 50512},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 1310, col: 21, offset: 50521},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
									},
								},
								&labeledExpr{
									pos:   position{line: 1153, col: 51, offset: 45631},
									label: "content",
									expr: &zeroOrMoreExpr{
										pos: position{line: 1153, col: 59, offset: 45639},
										expr: &actionExpr{
											pos: position{line: 1157, col: 21, offset: 45816},
											run: (*parser).callonDelimitedBlock108,
											expr: &seqExpr{
												pos: position{line: 1157, col: 21, offset: 45816},
												exprs: []interface{}{
													&zeroOrMoreExpr{
														pos: position{line: 1157, col: 21, offset: 45816},
														expr: &choiceExpr{
															pos: position{line: 1157, col: 22, offset: 45817},
															alternatives: []interface{}{
																&actionExpr{
																	pos: position{line: 1264, col: 14, offset: 49515},
																	run: (*parser).callonDelimitedBlock112,
																	expr: &oneOrMoreExpr{
																		pos: position{line: 1264, col: 14, offset: 49515},
																		expr: &charClassMatcher{
																			pos:        position{line: 1264, col: 14, offset: 49515},
																			val:        "[a-zA-Z0-9]",
																			ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																			ignoreCase: false,
																			inverted:   false,
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 1278, col: 11, offset: 49909},
																	run: (*parser).callonDelimitedBlock115,
																	expr: &oneOrMoreExpr{
																		pos: position{line: 1278, col: 11, offset: 49909},
																		expr: &choiceExpr{
																			pos: position{line: 1306, col: 7, offset: 50454},
																			alternatives: []interface{}{
																				&litMatcher{
																					pos:        position{line: 1306, col: 7, offset: 50454},
																					val:        " ",
																					ignoreCase: false,
																				},
																				&actionExpr{
																					pos: position{line: 1306, col: 13, offset: 50460},
																					run: (*parser).callonDelimitedBlock119,
																					expr: &litMatcher{
																						pos:        position{line: 1306, col: 13, offset: 50460},
																						val:        "\t",
																						ignoreCase: false,
																					},
																				},
																			},
																		},
																	},
																},
																&actionExpr{
																	pos: position{line: 1157, col: 43, offset: 45838},
																	run: (*parser).callonDelimitedBlock121,
																	expr: &seqExpr{
																		pos: position{line: 1157, col: 44, offset: 45839},
																		exprs: []interface{}{
																			&notExpr{
																				pos: position{line: 1157, col: 44, offset: 45839},
																				expr: &litMatcher{
																					pos:        position{line: 1151, col: 26, offset: 45573},
																					val:        "////",
																					ignoreCase: false,
																				},
																			},
																			&notExpr{
																				pos: position{line: 1157, col: 67, offset: 45862},
																				expr: &choiceExpr{
																					pos: position{line: 1314, col: 8, offset: 50552},
																					alternatives: []interface{}{
																						&litMatcher{
																							pos:        position{line: 1310, col: 12, offset: 50512},
																							val:        "\r\n",
																							ignoreCase: false,
																						},
																						&charClassMatcher{
																							pos:        position{line: 1310, col: 21, offset: 50521},
																							val:        "[\\r\\n]",
																							chars:      []rune{'\r', '\n'},
																							ignoreCase: false,
																							inverted:   false,
																						},
																						&notExpr{
																							pos: position{line: 1312, col: 8, offset: 50541},
																							expr: &anyMatcher{
																								line: 1312, col: 9, offset: 50542,
																							},
																						},
																					},
																				},
																			},
																			&anyMatcher{
																				line: 1157, col: 73, offset: 45868,
																			},
																		},
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1314, col: 8, offset: 50552},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1310, col: 12, offset: 50512},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1310, col: 21, offset: 50521},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1312, col: 8, offset: 50541},
																expr: &anyMatcher{
																	line: 1312, col: 9, offset: 50542,
																},
															},
														},
													},
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 1153, col: 81, offset: 45661},
									alternatives: []interface{}{
										&seqExpr{
											pos: position{line: 1153, col: 82, offset: 45662},
											exprs: []interface{}{
												&litMatcher{
													pos:        position{line: 1151, col: 26, offset: 45573},
													val:        "////",
													ignoreCase: false,
												},
												&zeroOrMoreExpr{
													pos: position{line: 1153, col: 104, offset: 45684},
													expr: &choiceExpr{
														pos: position{line: 1306, col: 7, offset: 50454},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1306, col: 7, offset: 50454},
																val:        " ",
																ignoreCase: false,
															},
															&actionExpr{
																pos: position{line: 1306, col: 13, offset: 50460},
																run: (*parser).callonDelimitedBlock143,
																expr: &litMatcher{
																	pos:        position{line: 1306, col: 13, offset: 50460},
																	val:        "\t",
																	ignoreCase: false,
																},
															},
														},
													},
												},
												&choiceExpr{
													pos: position{line: 1314, col: 8, offset: 50552},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1310, col: 12, offset: 50512},
															val:        "\r\n",
															ignoreCase: false,
														},
														&charClassMatcher{
															pos:        position{line: 1310, col: 21, offset: 50521},
															val:        "[\\r\\n]",
															chars:      []rune{'\r', '\n'},
															ignoreCase: false,
															inverted:   false,
														},
														&notExpr{
															pos: position{line: 1312, col: 8, offset: 50541},
															expr: &anyMatcher{
																line: 1312, col: 9, offset: 50542,
															},
														},
													},
												},
											},
										},
										&notExpr{
											pos: position{line: 1312, col: 8, offset: 50541},
											expr: &anyMatcher{
												line: 1312, col: 9, offset: 50542,
											},
										},
									},
								},
							},
						},
					},
					&ruleRefExpr{
						pos:  position{line: 991, col: 19, offset: 39636},
						name: "VerseBlock",
					},
					&ruleRefExpr{
						pos:  position{line: 992, col: 19, offset: 39666},
						name: "QuoteBlock",
					},
					&ruleRefExpr{
						pos:  position{line: 993, col: 19, offset: 39696},
						name: "SidebarBlock",
					},
				},
			},
		},
		{
			name: "FencedBlock",
			pos:  position{line: 1009, col: 1, offset: 40228},
			expr: &actionExpr{
				pos: position{line: 1009, col: 16, offset: 40243},
				run: (*parser).callonFencedBlock1,
				expr: &seqExpr{
					pos: position{line: 1009, col: 16, offset: 40243},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 1007, col: 25, offset: 40213},
							val:        "```",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 1007, col: 31, offset: 40219},
							expr: &choiceExpr{
								pos: position{line: 1306, col: 7, offset: 50454},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1306, col: 7, offset: 50454},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1306, col: 13, offset: 50460},
										run: (*parser).callonFencedBlock7,
										expr: &litMatcher{
											pos:        position{line: 1306, col: 13, offset: 50460},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1314, col: 8, offset: 50552},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1310, col: 12, offset: 50512},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1310, col: 21, offset: 50521},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1312, col: 8, offset: 50541},
									expr: &anyMatcher{
										line: 1312, col: 9, offset: 50542,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 1009, col: 37, offset: 40264},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 1009, col: 45, offset: 40272},
								expr: &ruleRefExpr{
									pos:  position{line: 1009, col: 46, offset: 40273},
									name: "FencedBlockContent",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1009, col: 68, offset: 40295},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 1007, col: 25, offset: 40213},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 1007, col: 25, offset: 40213},
											val:        "```",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 1007, col: 31, offset: 40219},
											expr: &choiceExpr{
												pos: position{line: 1306, col: 7, offset: 50454},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1306, col: 7, offset: 50454},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1306, col: 13, offset: 50460},
														run: (*parser).callonFencedBlock23,
														expr: &litMatcher{
															pos:        position{line: 1306, col: 13, offset: 50460},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1314, col: 8, offset: 50552},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1310, col: 12, offset: 50512},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1310, col: 21, offset: 50521},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1312, col: 8, offset: 50541},
													expr: &anyMatcher{
														line: 1312, col: 9, offset: 50542,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 1312, col: 8, offset: 50541},
									expr: &anyMatcher{
										line: 1312, col: 9, offset: 50542,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "FencedBlockContent",
			pos:  position{line: 1013, col: 1, offset: 40414},
			expr: &choiceExpr{
				pos: position{line: 1013, col: 23, offset: 40436},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 1013, col: 23, offset: 40436},
						name: "List",
					},
					&ruleRefExpr{
						pos:  position{line: 1013, col: 30, offset: 40443},
						name: "BlockParagraph",
					},
					&actionExpr{
						pos: position{line: 1253, col: 14, offset: 49283},
						run: (*parser).callonFencedBlockContent4,
						expr: &seqExpr{
							pos: position{line: 1253, col: 14, offset: 49283},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 1253, col: 14, offset: 49283},
									expr: &notExpr{
										pos: position{line: 1312, col: 8, offset: 50541},
										expr: &anyMatcher{
											line: 1312, col: 9, offset: 50542,
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 1253, col: 19, offset: 49288},
									expr: &choiceExpr{
										pos: position{line: 1306, col: 7, offset: 50454},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1306, col: 7, offset: 50454},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1306, col: 13, offset: 50460},
												run: (*parser).callonFencedBlockContent12,
												expr: &litMatcher{
													pos:        position{line: 1306, col: 13, offset: 50460},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 1314, col: 8, offset: 50552},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 1310, col: 12, offset: 50512},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 1310, col: 21, offset: 50521},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
										&notExpr{
											pos: position{line: 1312, col: 8, offset: 50541},
											expr: &anyMatcher{
												line: 1312, col: 9, offset: 50542,
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "ExampleBlock",
			pos:  position{line: 1044, col: 1, offset: 41671},
			expr: &actionExpr{
				pos: position{line: 1044, col: 17, offset: 41687},
				run: (*parser).callonExampleBlock1,
				expr: &seqExpr{
					pos: position{line: 1044, col: 17, offset: 41687},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 1042, col: 26, offset: 41655},
							val:        "====",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 1042, col: 33, offset: 41662},
							expr: &choiceExpr{
								pos: position{line: 1306, col: 7, offset: 50454},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1306, col: 7, offset: 50454},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1306, col: 13, offset: 50460},
										run: (*parser).callonExampleBlock7,
										expr: &litMatcher{
											pos:        position{line: 1306, col: 13, offset: 50460},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1314, col: 8, offset: 50552},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1310, col: 12, offset: 50512},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1310, col: 21, offset: 50521},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1312, col: 8, offset: 50541},
									expr: &anyMatcher{
										line: 1312, col: 9, offset: 50542,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 1044, col: 39, offset: 41709},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 1044, col: 47, offset: 41717},
								expr: &choiceExpr{
									pos: position{line: 1044, col: 48, offset: 41718},
									alternatives: []interface{}{
										&ruleRefExpr{
											pos:  position{line: 1044, col: 48, offset: 41718},
											name: "List",
										},
										&ruleRefExpr{
											pos:  position{line: 1044, col: 55, offset: 41725},
											name: "BlockParagraph",
										},
										&actionExpr{
											pos: position{line: 1253, col: 14, offset: 49283},
											run: (*parser).callonExampleBlock19,
											expr: &seqExpr{
												pos: position{line: 1253, col: 14, offset: 49283},
												exprs: []interface{}{
													&notExpr{
														pos: position{line: 1253, col: 14, offset: 49283},
														expr: &notExpr{
															pos: position{line: 1312, col: 8, offset: 50541},
															expr: &anyMatcher{
																line: 1312, col: 9, offset: 50542,
															},
														},
													},
													&zeroOrMoreExpr{
														pos: position{line: 1253, col: 19, offset: 49288},
														expr: &choiceExpr{
															pos: position{line: 1306, col: 7, offset: 50454},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1306, col: 7, offset: 50454},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1306, col: 13, offset: 50460},
																	run: (*parser).callonExampleBlock27,
																	expr: &litMatcher{
																		pos:        position{line: 1306, col: 13, offset: 50460},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
													&choiceExpr{
														pos: position{line: 1314, col: 8, offset: 50552},
														alternatives: []interface{}{
															&litMatcher{
																pos:        position{line: 1310, col: 12, offset: 50512},
																val:        "\r\n",
																ignoreCase: false,
															},
															&charClassMatcher{
																pos:        position{line: 1310, col: 21, offset: 50521},
																val:        "[\\r\\n]",
																chars:      []rune{'\r', '\n'},
																ignoreCase: false,
																inverted:   false,
															},
															&notExpr{
																pos: position{line: 1312, col: 8, offset: 50541},
																expr: &anyMatcher{
																	line: 1312, col: 9, offset: 50542,
																},
															},
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1044, col: 86, offset: 41756},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 1042, col: 26, offset: 41655},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 1042, col: 26, offset: 41655},
											val:        "====",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 1042, col: 33, offset: 41662},
											expr: &choiceExpr{
												pos: position{line: 1306, col: 7, offset: 50454},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1306, col: 7, offset: 50454},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1306, col: 13, offset: 50460},
														run: (*parser).callonExampleBlock40,
														expr: &litMatcher{
															pos:        position{line: 1306, col: 13, offset: 50460},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1314, col: 8, offset: 50552},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1310, col: 12, offset: 50512},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1310, col: 21, offset: 50521},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1312, col: 8, offset: 50541},
													expr: &anyMatcher{
														line: 1312, col: 9, offset: 50542,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 1312, col: 8, offset: 50541},
									expr: &anyMatcher{
										line: 1312, col: 9, offset: 50542,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "BlockParagraph",
			pos:  position{line: 1049, col: 1, offset: 41895},
			expr: &actionExpr{
				pos: position{line: 1049, col: 20, offset: 41914},
				run: (*parser).callonBlockParagraph1,
				expr: &labeledExpr{
					pos:   position{line: 1049, col: 20, offset: 41914},
					label: "lines",
					expr: &oneOrMoreExpr{
						pos: position{line: 1049, col: 26, offset: 41920},
						expr: &ruleRefExpr{
							pos:  position{line: 1049, col: 27, offset: 41921},
							name: "BlockParagraphLine",
						},
					},
				},
			},
		},
		{
			name: "BlockParagraphLine",
			pos:  position{line: 1053, col: 1, offset: 42006},
			expr: &actionExpr{
				pos: position{line: 1053, col: 23, offset: 42028},
				run: (*parser).callonBlockParagraphLine1,
				expr: &seqExpr{
					pos: position{line: 1053, col: 23, offset: 42028},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 1053, col: 23, offset: 42028},
							expr: &actionExpr{
								pos: position{line: 495, col: 26, offset: 17590},
								run: (*parser).callonBlockParagraphLine4,
								expr: &seqExpr{
									pos: position{line: 495, col: 26, offset: 17590},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 495, col: 26, offset: 17590},
											expr: &choiceExpr{
												pos: position{line: 1306, col: 7, offset: 50454},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1306, col: 7, offset: 50454},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1306, col: 13, offset: 50460},
														run: (*parser).callonBlockParagraphLine9,
														expr: &litMatcher{
															pos:        position{line: 1306, col: 13, offset: 50460},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 495, col: 30, offset: 17594},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 497, col: 5, offset: 17649},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 497, col: 5, offset: 17649},
														run: (*parser).callonBlockParagraphLine13,
														expr: &litMatcher{
															pos:        position{line: 497, col: 5, offset: 17649},
															val:        ".....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 499, col: 9, offset: 17762},
														run: (*parser).callonBlockParagraphLine15,
														expr: &litMatcher{
															pos:        position{line: 499, col: 9, offset: 17762},
															val:        "....",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 501, col: 9, offset: 17873},
														run: (*parser).callonBlockParagraphLine17,
														expr: &litMatcher{
															pos:        position{line: 501, col: 9, offset: 17873},
															val:        "...",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 503, col: 9, offset: 17982},
														run: (*parser).callonBlockParagraphLine19,
														expr: &litMatcher{
															pos:        position{line: 503, col: 9, offset: 17982},
															val:        "..",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 505, col: 9, offset: 18089},
														run: (*parser).callonBlockParagraphLine21,
														expr: &litMatcher{
															pos:        position{line: 505, col: 9, offset: 18089},
															val:        ".",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 508, col: 9, offset: 18216},
														run: (*parser).callonBlockParagraphLine23,
														expr: &seqExpr{
															pos: position{line: 508, col: 9, offset: 18216},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 508, col: 9, offset: 18216},
																	expr: &charClassMatcher{
																		pos:        position{line: 508, col: 10, offset: 18217},
																		val:        "[0-9]",
																		ranges:     []rune{'0', '9'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 508, col: 18, offset: 18225},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 510, col: 9, offset: 18328},
														run: (*parser).callonBlockParagraphLine28,
														expr: &seqExpr{
															pos: position{line: 510, col: 9, offset: 18328},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 510, col: 10, offset: 18329},
																	val:        "[a-z]",
																	ranges:     []rune{'a', 'z'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&litMatcher{
																	pos:        position{line: 510, col: 17, offset: 18336},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 512, col: 9, offset: 18442},
														run: (*parser).callonBlockParagraphLine32,
														expr: &seqExpr{
															pos: position{line: 512, col: 9, offset: 18442},
															exprs: []interface{}{
																&charClassMatcher{
																	pos:        position{line: 512, col: 10, offset: 18443},
																	val:        "[A-Z]",
																	ranges:     []rune{'A', 'Z'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&litMatcher{
																	pos:        position{line: 512, col: 17, offset: 18450},
																	val:        ".",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 514, col: 9, offset: 18556},
														run: (*parser).callonBlockParagraphLine36,
														expr: &seqExpr{
															pos: position{line: 514, col: 9, offset: 18556},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 514, col: 9, offset: 18556},
																	expr: &charClassMatcher{
																		pos:        position{line: 514, col: 10, offset: 18557},
																		val:        "[a-z]",
																		ranges:     []rune{'a', 'z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 514, col: 18, offset: 18565},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 516, col: 9, offset: 18671},
														run: (*parser).callonBlockParagraphLine41,
														expr: &seqExpr{
															pos: position{line: 516, col: 9, offset: 18671},
															exprs: []interface{}{
																&oneOrMoreExpr{
																	pos: position{line: 516, col: 9, offset: 18671},
																	expr: &charClassMatcher{
																		pos:        position{line: 516, col: 10, offset: 18672},
																		val:        "[A-Z]",
																		ranges:     []rune{'A', 'Z'},
																		ignoreCase: false,
																		inverted:   false,
																	},
																},
																&litMatcher{
																	pos:        position{line: 516, col: 18, offset: 18680},
																	val:        ")",
																	ignoreCase: false,
																},
															},
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 518, col: 8, offset: 18785},
											expr: &choiceExpr{
												pos: position{line: 1306, col: 7, offset: 50454},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1306, col: 7, offset: 50454},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1306, col: 13, offset: 50460},
														run: (*parser).callonBlockParagraphLine49,
														expr: &litMatcher{
															pos:        position{line: 1306, col: 13, offset: 50460},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 1054, col: 9, offset: 42062},
							expr: &actionExpr{
								pos: position{line: 534, col: 5, offset: 19495},
								run: (*parser).callonBlockParagraphLine52,
								expr: &seqExpr{
									pos: position{line: 534, col: 5, offset: 19495},
									exprs: []interface{}{
										&zeroOrMoreExpr{
											pos: position{line: 534, col: 5, offset: 19495},
											expr: &choiceExpr{
												pos: position{line: 1306, col: 7, offset: 50454},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1306, col: 7, offset: 50454},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1306, col: 13, offset: 50460},
														run: (*parser).callonBlockParagraphLine57,
														expr: &litMatcher{
															pos:        position{line: 1306, col: 13, offset: 50460},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 534, col: 9, offset: 19499},
											label: "prefix",
											expr: &choiceExpr{
												pos: position{line: 535, col: 9, offset: 19516},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 535, col: 9, offset: 19516},
														run: (*parser).callonBlockParagraphLine61,
														expr: &litMatcher{
															pos:        position{line: 535, col: 9, offset: 19516},
															val:        "*****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 538, col: 11, offset: 19685},
														run: (*parser).callonBlockParagraphLine63,
														expr: &litMatcher{
															pos:        position{line: 538, col: 11, offset: 19685},
															val:        "****",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 541, col: 11, offset: 19854},
														run: (*parser).callonBlockParagraphLine65,
														expr: &litMatcher{
															pos:        position{line: 541, col: 11, offset: 19854},
															val:        "***",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 544, col: 11, offset: 20023},
														run: (*parser).callonBlockParagraphLine67,
														expr: &litMatcher{
															pos:        position{line: 544, col: 11, offset: 20023},
															val:        "**",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 547, col: 11, offset: 20189},
														run: (*parser).callonBlockParagraphLine69,
														expr: &litMatcher{
															pos:        position{line: 547, col: 11, offset: 20189},
															val:        "*",
															ignoreCase: false,
														},
													},
													&actionExpr{
														pos: position{line: 550, col: 11, offset: 20353},
														run: (*parser).callonBlockParagraphLine71,
														expr: &litMatcher{
															pos:        position{line: 550, col: 11, offset: 20353},
															val:        "-",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&oneOrMoreExpr{
											pos: position{line: 552, col: 12, offset: 20500},
											expr: &choiceExpr{
												pos: position{line: 1306, col: 7, offset: 50454},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1306, col: 7, offset: 50454},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1306, col: 13, offset: 50460},
														run: (*parser).callonBlockParagraphLine76,
														expr: &litMatcher{
															pos:        position{line: 1306, col: 13, offset: 50460},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 1055, col: 9, offset: 42098},
							expr: &seqExpr{
								pos: position{line: 1055, col: 11, offset: 42100},
								exprs: []interface{}{
									&actionExpr{
										pos: position{line: 575, col: 24, offset: 21401},
										run: (*parser).callonBlockParagraphLine80,
										expr: &zeroOrMoreExpr{
											pos: position{line: 575, col: 24, offset: 21401},
											expr: &choiceExpr{
												pos: position{line: 575, col: 25, offset: 21402},
												alternatives: []interface{}{
													&actionExpr{
														pos: position{line: 1264, col: 14, offset: 49515},
														run: (*parser).callonBlockParagraphLine83,
														expr: &oneOrMoreExpr{
															pos: position{line: 1264, col: 14, offset: 49515},
															expr: &charClassMatcher{
																pos:        position{line: 1264, col: 14, offset: 49515},
																val:        "[a-zA-Z0-9]",
																ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
																ignoreCase: false,
																inverted:   false,
															},
														},
													},
													&actionExpr{
														pos: position{line: 1278, col: 11, offset: 49909},
														run: (*parser).callonBlockParagraphLine86,
														expr: &oneOrMoreExpr{
															pos: position{line: 1278, col: 11, offset: 49909},
															expr: &choiceExpr{
																pos: position{line: 1306, col: 7, offset: 50454},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1306, col: 7, offset: 50454},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1306, col: 13, offset: 50460},
																		run: (*parser).callonBlockParagraphLine90,
																		expr: &litMatcher{
																			pos:        position{line: 1306, col: 13, offset: 50460},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
													},
													&actionExpr{
														pos: position{line: 575, col: 46, offset: 21423},
														run: (*parser).callonBlockParagraphLine92,
														expr: &seqExpr{
															pos: position{line: 575, col: 47, offset: 21424},
															exprs: []interface{}{
																&notExpr{
																	pos: position{line: 575, col: 47, offset: 21424},
																	expr: &choiceExpr{
																		pos: position{line: 1310, col: 12, offset: 50512},
																		alternatives: []interface{}{
																			&litMatcher{
																				pos:        position{line: 1310, col: 12, offset: 50512},
																				val:        "\r\n",
																				ignoreCase: false,
																			},
																			&charClassMatcher{
																				pos:        position{line: 1310, col: 21, offset: 50521},
																				val:        "[\\r\\n]",
																				chars:      []rune{'\r', '\n'},
																				ignoreCase: false,
																				inverted:   false,
																			},
																		},
																	},
																},
																&notExpr{
																	pos: position{line: 575, col: 56, offset: 21433},
																	expr: &litMatcher{
																		pos:        position{line: 575, col: 57, offset: 21434},
																		val:        "::",
																		ignoreCase: false,
																	},
																},
																&anyMatcher{
																	line: 575, col: 63, offset: 21440,
																},
															},
														},
													},
												},
											},
										},
									},
									&actionExpr{
										pos: position{line: 582, col: 29, offset: 21621},
										run: (*parser).callonBlockParagraphLine101,
										expr: &choiceExpr{
											pos: position{line: 582, col: 30, offset: 21622},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 582, col: 30, offset: 21622},
													val:        "::::",
													ignoreCase: false,
												},
												&litMatcher{
													pos:        position{line: 582, col: 39, offset: 21631},
													val:        ":::",
													ignoreCase: false,
												},
												&litMatcher{
													pos:        position{line: 582, col: 47, offset: 21639},
													val:        "::",
													ignoreCase: false,
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 1056, col: 9, offset: 42155},
							expr: &actionExpr{
								pos: position{line: 480, col: 25, offset: 17034},
								run: (*parser).callonBlockParagraphLine107,
								expr: &seqExpr{
									pos: position{line: 480, col: 25, offset: 17034},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 480, col: 25, offset: 17034},
											val:        "+",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 480, col: 29, offset: 17038},
											expr: &choiceExpr{
												pos: position{line: 1306, col: 7, offset: 50454},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1306, col: 7, offset: 50454},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1306, col: 13, offset: 50460},
														run: (*parser).callonBlockParagraphLine113,
														expr: &litMatcher{
															pos:        position{line: 1306, col: 13, offset: 50460},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1314, col: 8, offset: 50552},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1310, col: 12, offset: 50512},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1310, col: 21, offset: 50521},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1312, col: 8, offset: 50541},
													expr: &anyMatcher{
														line: 1312, col: 9, offset: 50542,
													},
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 1057, col: 9, offset: 42188},
							expr: &choiceExpr{
								pos: position{line: 995, col: 19, offset: 39728},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1179, col: 26, offset: 46634},
										val:        "....",
										ignoreCase: false,
									},
									&seqExpr{
										pos: position{line: 1007, col: 25, offset: 40213},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 1007, col: 25, offset: 40213},
												val:        "```",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 1007, col: 31, offset: 40219},
												expr: &choiceExpr{
													pos: position{line: 1306, col: 7, offset: 50454},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1306, col: 7, offset: 50454},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1306, col: 13, offset: 50460},
															run: (*parser).callonBlockParagraphLine128,
															expr: &litMatcher{
																pos:        position{line: 1306, col: 13, offset: 50460},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1314, col: 8, offset: 50552},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1310, col: 12, offset: 50512},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1310, col: 21, offset: 50521},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1312, col: 8, offset: 50541},
														expr: &anyMatcher{
															line: 1312, col: 9, offset: 50542,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 1018, col: 26, offset: 40692},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 1018, col: 26, offset: 40692},
												val:        "----",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 1018, col: 33, offset: 40699},
												expr: &choiceExpr{
													pos: position{line: 1306, col: 7, offset: 50454},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1306, col: 7, offset: 50454},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1306, col: 13, offset: 50460},
															run: (*parser).callonBlockParagraphLine140,
															expr: &litMatcher{
																pos:        position{line: 1306, col: 13, offset: 50460},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1314, col: 8, offset: 50552},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1310, col: 12, offset: 50512},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1310, col: 21, offset: 50521},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1312, col: 8, offset: 50541},
														expr: &anyMatcher{
															line: 1312, col: 9, offset: 50542,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 1042, col: 26, offset: 41655},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 1042, col: 26, offset: 41655},
												val:        "====",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 1042, col: 33, offset: 41662},
												expr: &choiceExpr{
													pos: position{line: 1306, col: 7, offset: 50454},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1306, col: 7, offset: 50454},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1306, col: 13, offset: 50460},
															run: (*parser).callonBlockParagraphLine152,
															expr: &litMatcher{
																pos:        position{line: 1306, col: 13, offset: 50460},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1314, col: 8, offset: 50552},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1310, col: 12, offset: 50512},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1310, col: 21, offset: 50521},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1312, col: 8, offset: 50541},
														expr: &anyMatcher{
															line: 1312, col: 9, offset: 50542,
														},
													},
												},
											},
										},
									},
									&litMatcher{
										pos:        position{line: 1151, col: 26, offset: 45573},
										val:        "////",
										ignoreCase: false,
									},
									&seqExpr{
										pos: position{line: 1065, col: 24, offset: 42480},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 1065, col: 24, offset: 42480},
												val:        "____",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 1065, col: 31, offset: 42487},
												expr: &choiceExpr{
													pos: position{line: 1306, col: 7, offset: 50454},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1306, col: 7, offset: 50454},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1306, col: 13, offset: 50460},
															run: (*parser).callonBlockParagraphLine165,
															expr: &litMatcher{
																pos:        position{line: 1306, col: 13, offset: 50460},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1314, col: 8, offset: 50552},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1310, col: 12, offset: 50512},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1310, col: 21, offset: 50521},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1312, col: 8, offset: 50541},
														expr: &anyMatcher{
															line: 1312, col: 9, offset: 50542,
														},
													},
												},
											},
										},
									},
									&seqExpr{
										pos: position{line: 1109, col: 26, offset: 44081},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 1109, col: 26, offset: 44081},
												val:        "****",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 1109, col: 33, offset: 44088},
												expr: &choiceExpr{
													pos: position{line: 1306, col: 7, offset: 50454},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1306, col: 7, offset: 50454},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1306, col: 13, offset: 50460},
															run: (*parser).callonBlockParagraphLine177,
															expr: &litMatcher{
																pos:        position{line: 1306, col: 13, offset: 50460},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1314, col: 8, offset: 50552},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1310, col: 12, offset: 50512},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1310, col: 21, offset: 50521},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1312, col: 8, offset: 50541},
														expr: &anyMatcher{
															line: 1312, col: 9, offset: 50542,
														},
													},
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 1058, col: 9, offset: 42215},
							label: "line",
							expr: &ruleRefExpr{
								pos:  position{line: 1058, col: 15, offset: 42221},
								name: "InlineElements",
							},
						},
					},
				},
			},
		},
		{
			name: "QuoteBlock",
			pos:  position{line: 1067, col: 1, offset: 42521},
			expr: &actionExpr{
				pos: position{line: 1067, col: 15, offset: 42535},
				run: (*parser).callonQuoteBlock1,
				expr: &seqExpr{
					pos: position{line: 1067, col: 15, offset: 42535},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 1065, col: 24, offset: 42480},
							val:        "____",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 1065, col: 31, offset: 42487},
							expr: &choiceExpr{
								pos: position{line: 1306, col: 7, offset: 50454},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1306, col: 7, offset: 50454},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1306, col: 13, offset: 50460},
										run: (*parser).callonQuoteBlock7,
										expr: &litMatcher{
											pos:        position{line: 1306, col: 13, offset: 50460},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1314, col: 8, offset: 50552},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1310, col: 12, offset: 50512},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1310, col: 21, offset: 50521},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1312, col: 8, offset: 50541},
									expr: &anyMatcher{
										line: 1312, col: 9, offset: 50542,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 1067, col: 35, offset: 42555},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 1067, col: 43, offset: 42563},
								expr: &ruleRefExpr{
									pos:  position{line: 1067, col: 44, offset: 42564},
									name: "QuoteBlockElement",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1067, col: 65, offset: 42585},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 1065, col: 24, offset: 42480},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 1065, col: 24, offset: 42480},
											val:        "____",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 1065, col: 31, offset: 42487},
											expr: &choiceExpr{
												pos: position{line: 1306, col: 7, offset: 50454},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1306, col: 7, offset: 50454},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1306, col: 13, offset: 50460},
														run: (*parser).callonQuoteBlock23,
														expr: &litMatcher{
															pos:        position{line: 1306, col: 13, offset: 50460},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1314, col: 8, offset: 50552},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1310, col: 12, offset: 50512},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1310, col: 21, offset: 50521},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1312, col: 8, offset: 50541},
													expr: &anyMatcher{
														line: 1312, col: 9, offset: 50542,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 1312, col: 8, offset: 50541},
									expr: &anyMatcher{
										line: 1312, col: 9, offset: 50542,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "QuoteBlockElement",
			pos:  position{line: 1071, col: 1, offset: 42702},
			expr: &actionExpr{
				pos: position{line: 1072, col: 5, offset: 42728},
				run: (*parser).callonQuoteBlockElement1,
				expr: &seqExpr{
					pos: position{line: 1072, col: 5, offset: 42728},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 1072, col: 5, offset: 42728},
							expr: &seqExpr{
								pos: position{line: 1065, col: 24, offset: 42480},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 1065, col: 24, offset: 42480},
										val:        "____",
										ignoreCase: false,
									},
									&zeroOrMoreExpr{
										pos: position{line: 1065, col: 31, offset: 42487},
										expr: &choiceExpr{
											pos: position{line: 1306, col: 7, offset: 50454},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1306, col: 7, offset: 50454},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1306, col: 13, offset: 50460},
													run: (*parser).callonQuoteBlockElement9,
													expr: &litMatcher{
														pos:        position{line: 1306, col: 13, offset: 50460},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&choiceExpr{
										pos: position{line: 1314, col: 8, offset: 50552},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1310, col: 12, offset: 50512},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1310, col: 21, offset: 50521},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1312, col: 8, offset: 50541},
												expr: &anyMatcher{
													line: 1312, col: 9, offset: 50542,
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 1072, col: 26, offset: 42749},
							expr: &notExpr{
								pos: position{line: 1312, col: 8, offset: 50541},
								expr: &anyMatcher{
									line: 1312, col: 9, offset: 50542,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 1072, col: 31, offset: 42754},
							label: "element",
							expr: &ruleRefExpr{
								pos:  position{line: 1072, col: 40, offset: 42763},
								name: "DocumentElement",
							},
						},
					},
				},
			},
		},
		{
			name: "VerseBlock",
			pos:  position{line: 1081, col: 1, offset: 43061},
			expr: &actionExpr{
				pos: position{line: 1081, col: 15, offset: 43075},
				run: (*parser).callonVerseBlock1,
				expr: &seqExpr{
					pos: position{line: 1081, col: 15, offset: 43075},
					exprs: []interface{}{
						&andCodeExpr{
							pos: position{line: 1081, col: 15, offset: 43075},
							run: (*parser).callonVerseBlock3,
						},
						&labeledExpr{
							pos:   position{line: 1085, col: 1, offset: 43151},
							label: "verse",
							expr: &actionExpr{
								pos: position{line: 1085, col: 8, offset: 43158},
								run: (*parser).callonVerseBlock5,
								expr: &seqExpr{
									pos: position{line: 1085, col: 8, offset: 43158},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 1065, col: 24, offset: 42480},
											val:        "____",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 1065, col: 31, offset: 42487},
											expr: &choiceExpr{
												pos: position{line: 1306, col: 7, offset: 50454},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1306, col: 7, offset: 50454},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1306, col: 13, offset: 50460},
														run: (*parser).callonVerseBlock11,
														expr: &litMatcher{
															pos:        position{line: 1306, col: 13, offset: 50460},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1314, col: 8, offset: 50552},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1310, col: 12, offset: 50512},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1310, col: 21, offset: 50521},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1312, col: 8, offset: 50541},
													expr: &anyMatcher{
														line: 1312, col: 9, offset: 50542,
													},
												},
											},
										},
										&labeledExpr{
											pos:   position{line: 1085, col: 28, offset: 43178},
											label: "content",
											expr: &zeroOrMoreExpr{
												pos: position{line: 1085, col: 36, offset: 43186},
												expr: &ruleRefExpr{
													pos:  position{line: 1085, col: 37, offset: 43187},
													name: "VerseBlockContent",
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1085, col: 58, offset: 43208},
											alternatives: []interface{}{
												&seqExpr{
													pos: position{line: 1065, col: 24, offset: 42480},
													exprs: []interface{}{
														&litMatcher{
															pos:        position{line: 1065, col: 24, offset: 42480},
															val:        "____",
															ignoreCase: false,
														},
														&zeroOrMoreExpr{
															pos: position{line: 1065, col: 31, offset: 42487},
															expr: &choiceExpr{
																pos: position{line: 1306, col: 7, offset: 50454},
																alternatives: []interface{}{
																	&litMatcher{
																		pos:        position{line: 1306, col: 7, offset: 50454},
																		val:        " ",
																		ignoreCase: false,
																	},
																	&actionExpr{
																		pos: position{line: 1306, col: 13, offset: 50460},
																		run: (*parser).callonVerseBlock27,
																		expr: &litMatcher{
																			pos:        position{line: 1306, col: 13, offset: 50460},
																			val:        "\t",
																			ignoreCase: false,
																		},
																	},
																},
															},
														},
														&choiceExpr{
															pos: position{line: 1314, col: 8, offset: 50552},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1310, col: 12, offset: 50512},
																	val:        "\r\n",
																	ignoreCase: false,
																},
																&charClassMatcher{
																	pos:        position{line: 1310, col: 21, offset: 50521},
																	val:        "[\\r\\n]",
																	chars:      []rune{'\r', '\n'},
																	ignoreCase: false,
																	inverted:   false,
																},
																&notExpr{
																	pos: position{line: 1312, col: 8, offset: 50541},
																	expr: &anyMatcher{
																		line: 1312, col: 9, offset: 50542,
																	},
																},
															},
														},
													},
												},
												&notExpr{
													pos: position{line: 1312, col: 8, offset: 50541},
													expr: &anyMatcher{
														line: 1312, col: 9, offset: 50542,
													},
												},
											},
										},
									},
								},
							},
						},
						&stateCodeExpr{
							pos: position{line: 1087, col: 4, offset: 43325},
							run: (*parser).callonVerseBlock36,
						},
					},
				},
			},
		},
		{
			name: "VerseBlockContent",
			pos:  position{line: 1094, col: 1, offset: 43401},
			expr: &actionExpr{
				pos: position{line: 1094, col: 22, offset: 43422},
				run: (*parser).callonVerseBlockContent1,
				expr: &labeledExpr{
					pos:   position{line: 1094, col: 22, offset: 43422},
					label: "lines",
					expr: &oneOrMoreExpr{
						pos: position{line: 1094, col: 28, offset: 43428},
						expr: &ruleRefExpr{
							pos:  position{line: 1094, col: 29, offset: 43429},
							name: "VerseBlockLine",
						},
					},
				},
			},
		},
		{
			name: "VerseBlockLine",
			pos:  position{line: 1098, col: 1, offset: 43509},
			expr: &actionExpr{
				pos: position{line: 1098, col: 19, offset: 43527},
				run: (*parser).callonVerseBlockLine1,
				expr: &seqExpr{
					pos: position{line: 1098, col: 19, offset: 43527},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 1098, col: 19, offset: 43527},
							expr: &seqExpr{
								pos: position{line: 1065, col: 24, offset: 42480},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 1065, col: 24, offset: 42480},
										val:        "____",
										ignoreCase: false,
									},
									&zeroOrMoreExpr{
										pos: position{line: 1065, col: 31, offset: 42487},
										expr: &choiceExpr{
											pos: position{line: 1306, col: 7, offset: 50454},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1306, col: 7, offset: 50454},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1306, col: 13, offset: 50460},
													run: (*parser).callonVerseBlockLine9,
													expr: &litMatcher{
														pos:        position{line: 1306, col: 13, offset: 50460},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&choiceExpr{
										pos: position{line: 1314, col: 8, offset: 50552},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1310, col: 12, offset: 50512},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1310, col: 21, offset: 50521},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1312, col: 8, offset: 50541},
												expr: &anyMatcher{
													line: 1312, col: 9, offset: 50542,
												},
											},
										},
									},
								},
							},
						},
						&notExpr{
							pos: position{line: 1098, col: 40, offset: 43548},
							expr: &notExpr{
								pos: position{line: 1312, col: 8, offset: 50541},
								expr: &anyMatcher{
									line: 1312, col: 9, offset: 50542,
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 1098, col: 45, offset: 43553},
							label: "line",
							expr: &ruleRefExpr{
								pos:  position{line: 1098, col: 51, offset: 43559},
								name: "VerseBlockLineContent",
							},
						},
						&choiceExpr{
							pos: position{line: 1314, col: 8, offset: 50552},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1310, col: 12, offset: 50512},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1310, col: 21, offset: 50521},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1312, col: 8, offset: 50541},
									expr: &anyMatcher{
										line: 1312, col: 9, offset: 50542,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "VerseBlockLineContent",
			pos:  position{line: 1102, col: 1, offset: 43635},
			expr: &actionExpr{
				pos: position{line: 1102, col: 26, offset: 43660},
				run: (*parser).callonVerseBlockLineContent1,
				expr: &labeledExpr{
					pos:   position{line: 1102, col: 26, offset: 43660},
					label: "elements",
					expr: &zeroOrMoreExpr{
						pos: position{line: 1102, col: 35, offset: 43669},
						expr: &seqExpr{
							pos: position{line: 1102, col: 36, offset: 43670},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 1102, col: 36, offset: 43670},
									expr: &seqExpr{
										pos: position{line: 1065, col: 24, offset: 42480},
										exprs: []interface{}{
											&litMatcher{
												pos:        position{line: 1065, col: 24, offset: 42480},
												val:        "____",
												ignoreCase: false,
											},
											&zeroOrMoreExpr{
												pos: position{line: 1065, col: 31, offset: 42487},
												expr: &choiceExpr{
													pos: position{line: 1306, col: 7, offset: 50454},
													alternatives: []interface{}{
														&litMatcher{
															pos:        position{line: 1306, col: 7, offset: 50454},
															val:        " ",
															ignoreCase: false,
														},
														&actionExpr{
															pos: position{line: 1306, col: 13, offset: 50460},
															run: (*parser).callonVerseBlockLineContent11,
															expr: &litMatcher{
																pos:        position{line: 1306, col: 13, offset: 50460},
																val:        "\t",
																ignoreCase: false,
															},
														},
													},
												},
											},
											&choiceExpr{
												pos: position{line: 1314, col: 8, offset: 50552},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1310, col: 12, offset: 50512},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1310, col: 21, offset: 50521},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1312, col: 8, offset: 50541},
														expr: &anyMatcher{
															line: 1312, col: 9, offset: 50542,
														},
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 1102, col: 57, offset: 43691},
									expr: &choiceExpr{
										pos: position{line: 1314, col: 8, offset: 50552},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1310, col: 12, offset: 50512},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1310, col: 21, offset: 50521},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1312, col: 8, offset: 50541},
												expr: &anyMatcher{
													line: 1312, col: 9, offset: 50542,
												},
											},
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 1102, col: 62, offset: 43696},
									expr: &choiceExpr{
										pos: position{line: 1306, col: 7, offset: 50454},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1306, col: 7, offset: 50454},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1306, col: 13, offset: 50460},
												run: (*parser).callonVerseBlockLineContent27,
												expr: &litMatcher{
													pos:        position{line: 1306, col: 13, offset: 50460},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&ruleRefExpr{
									pos:  position{line: 1102, col: 66, offset: 43700},
									name: "InlineElement",
								},
								&zeroOrMoreExpr{
									pos: position{line: 1102, col: 80, offset: 43714},
									expr: &choiceExpr{
										pos: position{line: 1306, col: 7, offset: 50454},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1306, col: 7, offset: 50454},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1306, col: 13, offset: 50460},
												run: (*parser).callonVerseBlockLineContent33,
												expr: &litMatcher{
													pos:        position{line: 1306, col: 13, offset: 50460},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "SidebarBlock",
			pos:  position{line: 1111, col: 1, offset: 44097},
			expr: &actionExpr{
				pos: position{line: 1111, col: 17, offset: 44113},
				run: (*parser).callonSidebarBlock1,
				expr: &seqExpr{
					pos: position{line: 1111, col: 17, offset: 44113},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 1109, col: 26, offset: 44081},
							val:        "****",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 1109, col: 33, offset: 44088},
							expr: &choiceExpr{
								pos: position{line: 1306, col: 7, offset: 50454},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1306, col: 7, offset: 50454},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1306, col: 13, offset: 50460},
										run: (*parser).callonSidebarBlock7,
										expr: &litMatcher{
											pos:        position{line: 1306, col: 13, offset: 50460},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1314, col: 8, offset: 50552},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1310, col: 12, offset: 50512},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1310, col: 21, offset: 50521},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1312, col: 8, offset: 50541},
									expr: &anyMatcher{
										line: 1312, col: 9, offset: 50542,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 1111, col: 39, offset: 44135},
							label: "content",
							expr: &zeroOrMoreExpr{
								pos: position{line: 1111, col: 47, offset: 44143},
								expr: &ruleRefExpr{
									pos:  position{line: 1111, col: 48, offset: 44144},
									name: "SidebarBlockContent",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1111, col: 72, offset: 44168},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 1109, col: 26, offset: 44081},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 1109, col: 26, offset: 44081},
											val:        "****",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 1109, col: 33, offset: 44088},
											expr: &choiceExpr{
												pos: position{line: 1306, col: 7, offset: 50454},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1306, col: 7, offset: 50454},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1306, col: 13, offset: 50460},
														run: (*parser).callonSidebarBlock23,
														expr: &litMatcher{
															pos:        position{line: 1306, col: 13, offset: 50460},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1314, col: 8, offset: 50552},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1310, col: 12, offset: 50512},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1310, col: 21, offset: 50521},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1312, col: 8, offset: 50541},
													expr: &anyMatcher{
														line: 1312, col: 9, offset: 50542,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 1312, col: 8, offset: 50541},
									expr: &anyMatcher{
										line: 1312, col: 9, offset: 50542,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "SidebarBlockContent",
			pos:  position{line: 1115, col: 1, offset: 44289},
			expr: &choiceExpr{
				pos: position{line: 1115, col: 24, offset: 44312},
				alternatives: []interface{}{
					&ruleRefExpr{
						pos:  position{line: 1115, col: 24, offset: 44312},
						name: "List",
					},
					&ruleRefExpr{
						pos:  position{line: 1115, col: 31, offset: 44319},
						name: "BlockParagraph",
					},
					&actionExpr{
						pos: position{line: 1253, col: 14, offset: 49283},
						run: (*parser).callonSidebarBlockContent4,
						expr: &seqExpr{
							pos: position{line: 1253, col: 14, offset: 49283},
							exprs: []interface{}{
								&notExpr{
									pos: position{line: 1253, col: 14, offset: 49283},
									expr: &notExpr{
										pos: position{line: 1312, col: 8, offset: 50541},
										expr: &anyMatcher{
											line: 1312, col: 9, offset: 50542,
										},
									},
								},
								&zeroOrMoreExpr{
									pos: position{line: 1253, col: 19, offset: 49288},
									expr: &choiceExpr{
										pos: position{line: 1306, col: 7, offset: 50454},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1306, col: 7, offset: 50454},
												val:        " ",
												ignoreCase: false,
											},
											&actionExpr{
												pos: position{line: 1306, col: 13, offset: 50460},
												run: (*parser).callonSidebarBlockContent12,
												expr: &litMatcher{
													pos:        position{line: 1306, col: 13, offset: 50460},
													val:        "\t",
													ignoreCase: false,
												},
											},
										},
									},
								},
								&choiceExpr{
									pos: position{line: 1314, col: 8, offset: 50552},
									alternatives: []interface{}{
										&litMatcher{
											pos:        position{line: 1310, col: 12, offset: 50512},
											val:        "\r\n",
											ignoreCase: false,
										},
										&charClassMatcher{
											pos:        position{line: 1310, col: 21, offset: 50521},
											val:        "[\\r\\n]",
											chars:      []rune{'\r', '\n'},
											ignoreCase: false,
											inverted:   false,
										},
										&notExpr{
											pos: position{line: 1312, col: 8, offset: 50541},
											expr: &anyMatcher{
												line: 1312, col: 9, offset: 50542,
											},
										},
									},
								},
							},
						},
					},
					&ruleRefExpr{
						pos:  position{line: 1115, col: 60, offset: 44348},
						name: "NonSidebarBlock",
					},
				},
			},
		},
		{
			name: "NonSidebarBlock",
			pos:  position{line: 1117, col: 1, offset: 44365},
			expr: &actionExpr{
				pos: position{line: 1117, col: 20, offset: 44384},
				run: (*parser).callonNonSidebarBlock1,
				expr: &seqExpr{
					pos: position{line: 1117, col: 20, offset: 44384},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 1117, col: 20, offset: 44384},
							expr: &ruleRefExpr{
								pos:  position{line: 1117, col: 21, offset: 44385},
								name: "SidebarBlock",
							},
						},
						&labeledExpr{
							pos:   position{line: 1117, col: 34, offset: 44398},
							label: "content",
							expr: &ruleRefExpr{
								pos:  position{line: 1117, col: 43, offset: 44407},
								name: "DelimitedBlock",
							},
						},
					},
				},
			},
		},
		{
			name: "Table",
			pos:  position{line: 1124, col: 1, offset: 44640},
			expr: &actionExpr{
				pos: position{line: 1124, col: 10, offset: 44649},
				run: (*parser).callonTable1,
				expr: &seqExpr{
					pos: position{line: 1124, col: 10, offset: 44649},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 1133, col: 19, offset: 44891},
							val:        "|===",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 1133, col: 26, offset: 44898},
							expr: &choiceExpr{
								pos: position{line: 1306, col: 7, offset: 50454},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1306, col: 7, offset: 50454},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1306, col: 13, offset: 50460},
										run: (*parser).callonTable7,
										expr: &litMatcher{
											pos:        position{line: 1306, col: 13, offset: 50460},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1314, col: 8, offset: 50552},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1310, col: 12, offset: 50512},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1310, col: 21, offset: 50521},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1312, col: 8, offset: 50541},
									expr: &anyMatcher{
										line: 1312, col: 9, offset: 50542,
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 1125, col: 5, offset: 44668},
							label: "header",
							expr: &zeroOrOneExpr{
								pos: position{line: 1125, col: 12, offset: 44675},
								expr: &ruleRefExpr{
									pos:  position{line: 1125, col: 13, offset: 44676},
									name: "TableLineHeader",
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 1126, col: 5, offset: 44698},
							label: "lines",
							expr: &zeroOrMoreExpr{
								pos: position{line: 1126, col: 11, offset: 44704},
								expr: &ruleRefExpr{
									pos:  position{line: 1126, col: 12, offset: 44705},
									name: "TableLine",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1127, col: 6, offset: 44722},
							alternatives: []interface{}{
								&seqExpr{
									pos: position{line: 1133, col: 19, offset: 44891},
									exprs: []interface{}{
										&litMatcher{
											pos:        position{line: 1133, col: 19, offset: 44891},
											val:        "|===",
											ignoreCase: false,
										},
										&zeroOrMoreExpr{
											pos: position{line: 1133, col: 26, offset: 44898},
											expr: &choiceExpr{
												pos: position{line: 1306, col: 7, offset: 50454},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1306, col: 7, offset: 50454},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1306, col: 13, offset: 50460},
														run: (*parser).callonTable26,
														expr: &litMatcher{
															pos:        position{line: 1306, col: 13, offset: 50460},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1314, col: 8, offset: 50552},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1310, col: 12, offset: 50512},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1310, col: 21, offset: 50521},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1312, col: 8, offset: 50541},
													expr: &anyMatcher{
														line: 1312, col: 9, offset: 50542,
													},
												},
											},
										},
									},
								},
								&notExpr{
									pos: position{line: 1312, col: 8, offset: 50541},
									expr: &anyMatcher{
										line: 1312, col: 9, offset: 50542,
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "TableLineHeader",
			pos:  position{line: 1136, col: 1, offset: 44970},
			expr: &actionExpr{
				pos: position{line: 1136, col: 20, offset: 44989},
				run: (*parser).callonTableLineHeader1,
				expr: &seqExpr{
					pos: position{line: 1136, col: 20, offset: 44989},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 1136, col: 20, offset: 44989},
							expr: &seqExpr{
								pos: position{line: 1133, col: 19, offset: 44891},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 1133, col: 19, offset: 44891},
										val:        "|===",
										ignoreCase: false,
									},
									&zeroOrMoreExpr{
										pos: position{line: 1133, col: 26, offset: 44898},
										expr: &choiceExpr{
											pos: position{line: 1306, col: 7, offset: 50454},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1306, col: 7, offset: 50454},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1306, col: 13, offset: 50460},
													run: (*parser).callonTableLineHeader9,
													expr: &litMatcher{
														pos:        position{line: 1306, col: 13, offset: 50460},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&choiceExpr{
										pos: position{line: 1314, col: 8, offset: 50552},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1310, col: 12, offset: 50512},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1310, col: 21, offset: 50521},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1312, col: 8, offset: 50541},
												expr: &anyMatcher{
													line: 1312, col: 9, offset: 50542,
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 1136, col: 36, offset: 45005},
							label: "cells",
							expr: &oneOrMoreExpr{
								pos: position{line: 1136, col: 42, offset: 45011},
								expr: &ruleRefExpr{
									pos:  position{line: 1136, col: 43, offset: 45012},
									name: "TableCell",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1314, col: 8, offset: 50552},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1310, col: 12, offset: 50512},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1310, col: 21, offset: 50521},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1312, col: 8, offset: 50541},
									expr: &anyMatcher{
										line: 1312, col: 9, offset: 50542,
									},
								},
							},
						},
						&actionExpr{
							pos: position{line: 1253, col: 14, offset: 49283},
							run: (*parser).callonTableLineHeader24,
							expr: &seqExpr{
								pos: position{line: 1253, col: 14, offset: 49283},
								exprs: []interface{}{
									&notExpr{
										pos: position{line: 1253, col: 14, offset: 49283},
										expr: &notExpr{
											pos: position{line: 1312, col: 8, offset: 50541},
											expr: &anyMatcher{
												line: 1312, col: 9, offset: 50542,
											},
										},
									},
									&zeroOrMoreExpr{
										pos: position{line: 1253, col: 19, offset: 49288},
										expr: &choiceExpr{
											pos: position{line: 1306, col: 7, offset: 50454},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1306, col: 7, offset: 50454},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1306, col: 13, offset: 50460},
													run: (*parser).callonTableLineHeader32,
													expr: &litMatcher{
														pos:        position{line: 1306, col: 13, offset: 50460},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&choiceExpr{
										pos: position{line: 1314, col: 8, offset: 50552},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1310, col: 12, offset: 50512},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1310, col: 21, offset: 50521},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1312, col: 8, offset: 50541},
												expr: &anyMatcher{
													line: 1312, col: 9, offset: 50542,
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "TableLine",
			pos:  position{line: 1140, col: 1, offset: 45096},
			expr: &actionExpr{
				pos: position{line: 1140, col: 14, offset: 45109},
				run: (*parser).callonTableLine1,
				expr: &seqExpr{
					pos: position{line: 1140, col: 14, offset: 45109},
					exprs: []interface{}{
						&notExpr{
							pos: position{line: 1140, col: 14, offset: 45109},
							expr: &seqExpr{
								pos: position{line: 1133, col: 19, offset: 44891},
								exprs: []interface{}{
									&litMatcher{
										pos:        position{line: 1133, col: 19, offset: 44891},
										val:        "|===",
										ignoreCase: false,
									},
									&zeroOrMoreExpr{
										pos: position{line: 1133, col: 26, offset: 44898},
										expr: &choiceExpr{
											pos: position{line: 1306, col: 7, offset: 50454},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1306, col: 7, offset: 50454},
													val:        " ",
													ignoreCase: false,
												},
												&actionExpr{
													pos: position{line: 1306, col: 13, offset: 50460},
													run: (*parser).callonTableLine9,
													expr: &litMatcher{
														pos:        position{line: 1306, col: 13, offset: 50460},
														val:        "\t",
														ignoreCase: false,
													},
												},
											},
										},
									},
									&choiceExpr{
										pos: position{line: 1314, col: 8, offset: 50552},
										alternatives: []interface{}{
											&litMatcher{
												pos:        position{line: 1310, col: 12, offset: 50512},
												val:        "\r\n",
												ignoreCase: false,
											},
											&charClassMatcher{
												pos:        position{line: 1310, col: 21, offset: 50521},
												val:        "[\\r\\n]",
												chars:      []rune{'\r', '\n'},
												ignoreCase: false,
												inverted:   false,
											},
											&notExpr{
												pos: position{line: 1312, col: 8, offset: 50541},
												expr: &anyMatcher{
													line: 1312, col: 9, offset: 50542,
												},
											},
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 1140, col: 30, offset: 45125},
							label: "cells",
							expr: &oneOrMoreExpr{
								pos: position{line: 1140, col: 36, offset: 45131},
								expr: &ruleRefExpr{
									pos:  position{line: 1140, col: 37, offset: 45132},
									name: "TableCell",
								},
							},
						},
						&choiceExpr{
							pos: position{line: 1314, col: 8, offset: 50552},
							alternatives: []interface{}{
								&litMatcher{
									pos:        position{line: 1310, col: 12, offset: 50512},
									val:        "\r\n",
									ignoreCase: false,
								},
								&charClassMatcher{
									pos:        position{line: 1310, col: 21, offset: 50521},
									val:        "[\\r\\n]",
									chars:      []rune{'\r', '\n'},
									ignoreCase: false,
									inverted:   false,
								},
								&notExpr{
									pos: position{line: 1312, col: 8, offset: 50541},
									expr: &anyMatcher{
										line: 1312, col: 9, offset: 50542,
									},
								},
							},
						},
						&zeroOrMoreExpr{
							pos: position{line: 1140, col: 53, offset: 45148},
							expr: &actionExpr{
								pos: position{line: 1253, col: 14, offset: 49283},
								run: (*parser).callonTableLine25,
								expr: &seqExpr{
									pos: position{line: 1253, col: 14, offset: 49283},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 1253, col: 14, offset: 49283},
											expr: &notExpr{
												pos: position{line: 1312, col: 8, offset: 50541},
												expr: &anyMatcher{
													line: 1312, col: 9, offset: 50542,
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 1253, col: 19, offset: 49288},
											expr: &choiceExpr{
												pos: position{line: 1306, col: 7, offset: 50454},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1306, col: 7, offset: 50454},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1306, col: 13, offset: 50460},
														run: (*parser).callonTableLine33,
														expr: &litMatcher{
															pos:        position{line: 1306, col: 13, offset: 50460},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&choiceExpr{
											pos: position{line: 1314, col: 8, offset: 50552},
											alternatives: []interface{}{
												&litMatcher{
													pos:        position{line: 1310, col: 12, offset: 50512},
													val:        "\r\n",
													ignoreCase: false,
												},
												&charClassMatcher{
													pos:        position{line: 1310, col: 21, offset: 50521},
													val:        "[\\r\\n]",
													chars:      []rune{'\r', '\n'},
													ignoreCase: false,
													inverted:   false,
												},
												&notExpr{
													pos: position{line: 1312, col: 8, offset: 50541},
													expr: &anyMatcher{
														line: 1312, col: 9, offset: 50542,
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "TableCell",
			pos:  position{line: 1144, col: 1, offset: 45217},
			expr: &actionExpr{
				pos: position{line: 1144, col: 14, offset: 45230},
				run: (*parser).callonTableCell1,
				expr: &seqExpr{
					pos: position{line: 1144, col: 14, offset: 45230},
					exprs: []interface{}{
						&litMatcher{
							pos:        position{line: 1131, col: 23, offset: 44864},
							val:        "|",
							ignoreCase: false,
						},
						&zeroOrMoreExpr{
							pos: position{line: 1131, col: 27, offset: 44868},
							expr: &choiceExpr{
								pos: position{line: 1306, col: 7, offset: 50454},
								alternatives: []interface{}{
									&litMatcher{
										pos:        position{line: 1306, col: 7, offset: 50454},
										val:        " ",
										ignoreCase: false,
									},
									&actionExpr{
										pos: position{line: 1306, col: 13, offset: 50460},
										run: (*parser).callonTableCell7,
										expr: &litMatcher{
											pos:        position{line: 1306, col: 13, offset: 50460},
											val:        "\t",
											ignoreCase: false,
										},
									},
								},
							},
						},
						&labeledExpr{
							pos:   position{line: 1144, col: 33, offset: 45249},
							label: "elements",
							expr: &oneOrMoreExpr{
								pos: position{line: 1144, col: 42, offset: 45258},
								expr: &seqExpr{
									pos: position{line: 1144, col: 43, offset: 45259},
									exprs: []interface{}{
										&notExpr{
											pos: position{line: 1144, col: 43, offset: 45259},
											expr: &seqExpr{
												pos: position{line: 1131, col: 23, offset: 44864},
												exprs: []interface{}{
													&litMatcher{
														pos:        position{line: 1131, col: 23, offset: 44864},
														val:        "|",
														ignoreCase: false,
													},
													&zeroOrMoreExpr{
														pos: position{line: 1131, col: 27, offset: 44868},
														expr: &choiceExpr{
															pos: position{line: 1306, col: 7, offset: 50454},
															alternatives: []interface{}{
																&litMatcher{
																	pos:        position{line: 1306, col: 7, offset: 50454},
																	val:        " ",
																	ignoreCase: false,
																},
																&actionExpr{
																	pos: position{line: 1306, col: 13, offset: 50460},
																	run: (*parser).callonTableCell18,
																	expr: &litMatcher{
																		pos:        position{line: 1306, col: 13, offset: 50460},
																		val:        "\t",
																		ignoreCase: false,
																	},
																},
															},
														},
													},
												},
											},
										},
										&notExpr{
											pos: position{line: 1144, col: 63, offset: 45279},
											expr: &choiceExpr{
												pos: position{line: 1314, col: 8, offset: 50552},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1310, col: 12, offset: 50512},
														val:        "\r\n",
														ignoreCase: false,
													},
													&charClassMatcher{
														pos:        position{line: 1310, col: 21, offset: 50521},
														val:        "[\\r\\n]",
														chars:      []rune{'\r', '\n'},
														ignoreCase: false,
														inverted:   false,
													},
													&notExpr{
														pos: position{line: 1312, col: 8, offset: 50541},
														expr: &anyMatcher{
															line: 1312, col: 9, offset: 50542,
														},
													},
												},
											},
										},
										&zeroOrMoreExpr{
											pos: position{line: 1144, col: 68, offset: 45284},
											expr: &choiceExpr{
												pos: position{line: 1306, col: 7, offset: 50454},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1306, col: 7, offset: 50454},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1306, col: 13, offset: 50460},
														run: (*parser).callonTableCell29,
														expr: &litMatcher{
															pos:        position{line: 1306, col: 13, offset: 50460},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
										&ruleRefExpr{
											pos:  position{line: 1144, col: 72, offset: 45288},
											name: "InlineElement",
										},
										&zeroOrMoreExpr{
											pos: position{line: 1144, col: 86, offset: 45302},
											expr: &choiceExpr{
												pos: position{line: 1306, col: 7, offset: 50454},
												alternatives: []interface{}{
													&litMatcher{
														pos:        position{line: 1306, col: 7, offset: 50454},
														val:        " ",
														ignoreCase: false,
													},
													&actionExpr{
														pos: position{line: 1306, col: 13, offset: 50460},
														run: (*parser).callonTableCell35,
														expr: &litMatcher{
															pos:        position{line: 1306, col: 13, offset: 50460},
															val:        "\t",
															ignoreCase: false,
														},
													},
												},
											},
										},
									},
								},
							},
						},
					},
				},
			},
		},
		{
			name: "Alphanums",
			pos:  position{line: 1264, col: 1, offset: 49502},
			expr: &actionExpr{
				pos: position{line: 1264, col: 14, offset: 49515},
				run: (*parser).callonAlphanums1,
				expr: &oneOrMoreExpr{
					pos: position{line: 1264, col: 14, offset: 49515},
					expr: &charClassMatcher{
						pos:        position{line: 1264, col: 14, offset: 49515},
						val:        "[a-zA-Z0-9]",
						ranges:     []rune{'a', 'z', 'A', 'Z', '0', '9'},
						ignoreCase: false,
						inverted:   false,
					},
				},
			},
		},
		{
			name: "WS",
			pos:  position{line: 1306, col: 1, offset: 50448},
			expr: &choiceExpr{
				pos: position{line: 1306, col: 7, offset: 50454},
				alternatives: []interface{}{
					&litMatcher{
						pos:        position{line: 1306, col: 7, offset: 50454},
						val:        " ",
						ignoreCase: false,
					},
					&actionExpr{
						pos: position{line: 1306, col: 13, offset: 50460},
						run: (*parser).callonWS3,
						expr: &litMatcher{
							pos:        position{line: 1306, col: 13, offset: 50460},
							val:        "\t",
							ignoreCase: false,
						},
					},
				},
			},
		},
		{
			name: "NEWLINE",
			pos:  position{line: 1310, col: 1, offset: 50501},
			expr: &choiceExpr{
				pos: position{line: 1310, col: 12, offset: 50512},
				alternatives: []interface{}{
					&litMatcher{
						pos:        position{line: 1310, col: 12, offset: 50512},
						val:        "\r\n",
						ignoreCase: false,
					},
					&charClassMatcher{
						pos:        position{line: 1310, col: 21, offset: 50521},
						val:        "[\\r\\n]",
						chars:      []rune{'\r', '\n'},
						ignoreCase: false,
						inverted:   false,
					},
				},
			},
		},
	},
}

func (c *current) onDocument1(frontMatter, documentHeader, blocks interface{}) (interface{}, error) {
	return types.NewDocument(frontMatter, documentHeader, blocks.([]interface{}))
}

func (p *parser) callonDocument1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocument1(stack["frontMatter"], stack["documentHeader"], stack["blocks"])
}

func (c *current) onDocumentBlock18() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock18()
}

func (c *current) onDocumentBlock30() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock30() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock30()
}

func (c *current) onDocumentBlock21() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock21()
}

func (c *current) onDocumentBlock15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock15()
}

func (c *current) onDocumentBlock11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDocumentBlock11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock11(stack["id"])
}

func (c *current) onDocumentBlock51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock51()
}

func (c *current) onDocumentBlock63() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock63()
}

func (c *current) onDocumentBlock54() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock54() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock54()
}

func (c *current) onDocumentBlock48() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock48() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock48()
}

func (c *current) onDocumentBlock44(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDocumentBlock44() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock44(stack["id"])
}

func (c *current) onDocumentBlock85() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock85() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock85()
}

func (c *current) onDocumentBlock91() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock91() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock91()
}

func (c *current) onDocumentBlock98() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock98() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock98()
}

func (c *current) onDocumentBlock94() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock94() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock94()
}

func (c *current) onDocumentBlock100() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock100() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock100()
}

func (c *current) onDocumentBlock88() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock88() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock88()
}

func (c *current) onDocumentBlock77(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonDocumentBlock77() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock77(stack["title"])
}

func (c *current) onDocumentBlock113() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock113()
}

func (c *current) onDocumentBlock119() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock119()
}

func (c *current) onDocumentBlock126() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock126() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock126()
}

func (c *current) onDocumentBlock122() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock122()
}

func (c *current) onDocumentBlock128() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock128() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock128()
}

func (c *current) onDocumentBlock116() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock116()
}

func (c *current) onDocumentBlock107(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonDocumentBlock107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock107(stack["role"])
}

func (c *current) onDocumentBlock138() (interface{}, error) {
	return types.NewSourceAttributes("")
}

func (p *parser) callonDocumentBlock138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock138()
}

func (c *current) onDocumentBlock147() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock147() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock147()
}

func (c *current) onDocumentBlock154() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock154() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock154()
}

func (c *current) onDocumentBlock150() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock150() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock150()
}

func (c *current) onDocumentBlock156() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonDocumentBlock156() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock156()
}

func (c *current) onDocumentBlock144() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonDocumentBlock144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock144()
}

func (c *current) onDocumentBlock140(language interface{}) (interface{}, error) {
	return types.NewSourceAttributes(language.(string))
}

func (p *parser) callonDocumentBlock140() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock140(stack["language"])
}

func (c *current) onDocumentBlock170() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock170() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock170()
}

func (c *current) onDocumentBlock175() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock175() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock175()
}

func (c *current) onDocumentBlock182() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock182() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock182()
}

func (c *current) onDocumentBlock189() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock189() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock189()
}

func (c *current) onDocumentBlock185() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock185() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock185()
}

func (c *current) onDocumentBlock191() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock191() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock191()
}

func (c *current) onDocumentBlock179() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock179()
}

func (c *current) onDocumentBlock209() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock209() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock209()
}

func (c *current) onDocumentBlock216() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock216() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock216()
}

func (c *current) onDocumentBlock212() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock212() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock212()
}

func (c *current) onDocumentBlock206() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock206() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock206()
}

func (c *current) onDocumentBlock166(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))
}

func (p *parser) callonDocumentBlock166() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock166(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onDocumentBlock235() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock235() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock235()
}

func (c *current) onDocumentBlock240() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock240() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock240()
}

func (c *current) onDocumentBlock247() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock247() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock247()
}

func (c *current) onDocumentBlock254() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock254() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock254()
}

func (c *current) onDocumentBlock250() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock250() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock250()
}

func (c *current) onDocumentBlock256() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock256() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock256()
}

func (c *current) onDocumentBlock244() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock244() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock244()
}

func (c *current) onDocumentBlock231(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")
}

func (p *parser) callonDocumentBlock231() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock231(stack["kind"], stack["author"])
}

func (c *current) onDocumentBlock274() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock274() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock274()
}

func (c *current) onDocumentBlock279() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock279() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock279()
}

func (c *current) onDocumentBlock270(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")
}

func (p *parser) callonDocumentBlock270() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock270(stack["kind"])
}

func (c *current) onDocumentBlock290() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock290() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock290()
}

func (c *current) onDocumentBlock295() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock295() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock295()
}

func (c *current) onDocumentBlock302() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock302() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock302()
}

func (c *current) onDocumentBlock309() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock309() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock309()
}

func (c *current) onDocumentBlock305() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock305() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock305()
}

func (c *current) onDocumentBlock311() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock311() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock311()
}

func (c *current) onDocumentBlock299() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock299() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock299()
}

func (c *current) onDocumentBlock329() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock329() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock329()
}

func (c *current) onDocumentBlock336() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock336() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock336()
}

func (c *current) onDocumentBlock332() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock332() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock332()
}

func (c *current) onDocumentBlock326() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock326() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock326()
}

func (c *current) onDocumentBlock286(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonDocumentBlock286() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock286(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onDocumentBlock355() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock355() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock355()
}

func (c *current) onDocumentBlock360() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock360() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock360()
}

func (c *current) onDocumentBlock367() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock367() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock367()
}

func (c *current) onDocumentBlock374() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock374() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock374()
}

func (c *current) onDocumentBlock370() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock370() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock370()
}

func (c *current) onDocumentBlock376() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock376() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock376()
}

func (c *current) onDocumentBlock364() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock364() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock364()
}

func (c *current) onDocumentBlock351(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonDocumentBlock351() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock351(stack["kind"], stack["author"])
}

func (c *current) onDocumentBlock394() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock394() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock394()
}

func (c *current) onDocumentBlock399() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock399() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock399()
}

func (c *current) onDocumentBlock390(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonDocumentBlock390() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock390(stack["kind"])
}

func (c *current) onDocumentBlock402(attribute interface{}) error {
	c.state["verse"] = true
	return nil
}

func (p *parser) callonDocumentBlock402() error {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock402(stack["attribute"])
}

func (c *current) onDocumentBlock282(attribute interface{}) (interface{}, error) {
	return attribute, nil
}

func (p *parser) callonDocumentBlock282() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock282(stack["attribute"])
}

func (c *current) onDocumentBlock408() (interface{}, error) {
	return types.Tip, nil

}

func (p *parser) callonDocumentBlock408() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock408()
}

func (c *current) onDocumentBlock410() (interface{}, error) {
	return types.Note, nil

}

func (p *parser) callonDocumentBlock410() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock410()
}

func (c *current) onDocumentBlock412() (interface{}, error) {
	return types.Important, nil

}

func (p *parser) callonDocumentBlock412() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock412()
}

func (c *current) onDocumentBlock414() (interface{}, error) {
	return types.Warning, nil

}

func (p *parser) callonDocumentBlock414() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock414()
}

func (c *current) onDocumentBlock416() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonDocumentBlock416() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock416()
}

func (c *current) onDocumentBlock403(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonDocumentBlock403() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock403(stack["k"])
}

func (c *current) onDocumentBlock419() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonDocumentBlock419() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock419()
}

func (c *current) onDocumentBlock427() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock427() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock427()
}

func (c *current) onDocumentBlock438() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock438() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock438()
}

func (c *current) onDocumentBlock441() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock441() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock441()
}

func (c *current) onDocumentBlock444() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock444() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock444()
}

func (c *current) onDocumentBlock449() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock449() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock449()
}

func (c *current) onDocumentBlock456() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock456() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock456()
}

func (c *current) onDocumentBlock452() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock452() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock452()
}

func (c *current) onDocumentBlock458() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock458() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock458()
}

func (c *current) onDocumentBlock435(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock435() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock435(stack["key"])
}

func (c *current) onDocumentBlock473() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock473() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock473()
}

func (c *current) onDocumentBlock480() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock480() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock480()
}

func (c *current) onDocumentBlock476() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock476() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock476()
}

func (c *current) onDocumentBlock482() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock482() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock482()
}

func (c *current) onDocumentBlock469(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock469() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock469(stack["value"])
}

func (c *current) onDocumentBlock496() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock496() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock496()
}

func (c *current) onDocumentBlock432(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentBlock432() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock432(stack["key"], stack["value"])
}

func (c *current) onDocumentBlock504() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock504() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock504()
}

func (c *current) onDocumentBlock507() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock507() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock507()
}

func (c *current) onDocumentBlock510() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock510() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock510()
}

func (c *current) onDocumentBlock515() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock515() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock515()
}

func (c *current) onDocumentBlock522() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock522() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock522()
}

func (c *current) onDocumentBlock518() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock518() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock518()
}

func (c *current) onDocumentBlock524() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock524() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock524()
}

func (c *current) onDocumentBlock501(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock501() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock501(stack["key"])
}

func (c *current) onDocumentBlock538() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock538() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock538()
}

func (c *current) onDocumentBlock498(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentBlock498() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock498(stack["key"])
}

func (c *current) onDocumentBlock421(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonDocumentBlock421() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock421(stack["attributes"])
}

func (c *current) onDocumentBlock544() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentBlock544() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock544()
}

func (c *current) onDocumentBlock5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonDocumentBlock5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock5(stack["attr"])
}

func (c *current) onDocumentBlock1(attributes, block interface{}) (interface{}, error) {
	return types.WithAttributes(block, attributes.([]interface{}))
}

func (p *parser) callonDocumentBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentBlock1(stack["attributes"], stack["block"])
}

func (c *current) onFrontMatter13() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFrontMatter13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFrontMatter13()
}

func (c *current) onFrontMatter20() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFrontMatter20() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFrontMatter20()
}

func (c *current) onFrontMatter16() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFrontMatter16() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFrontMatter16()
}

func (c *current) onFrontMatter22() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFrontMatter22() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFrontMatter22()
}

func (c *current) onFrontMatter10() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFrontMatter10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFrontMatter10()
}

func (c *current) onFrontMatter1(content interface{}) (interface{}, error) {
	return types.NewYamlFrontMatter(content.(string))
}

func (p *parser) callonFrontMatter1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFrontMatter1(stack["content"])
}

func (c *current) onDocumentHeader13() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader13()
}

func (c *current) onDocumentHeader24() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader24() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader24()
}

func (c *current) onDocumentHeader31() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader31() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader31()
}

func (c *current) onDocumentHeader47() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader47() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader47()
}

func (c *current) onDocumentHeader34() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader34() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader34()
}

func (c *current) onDocumentHeader53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader53()
}

func (c *current) onDocumentHeader27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader27()
}

func (c *current) onDocumentHeader61() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader61() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader61()
}

func (c *current) onDocumentHeader77() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader77() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader77()
}

func (c *current) onDocumentHeader64() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader64() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader64()
}

func (c *current) onDocumentHeader83() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader83() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader83()
}

func (c *current) onDocumentHeader57() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader57() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader57()
}

func (c *current) onDocumentHeader91() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader91() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader91()
}

func (c *current) onDocumentHeader107() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader107()
}

func (c *current) onDocumentHeader94() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader94() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader94()
}

func (c *current) onDocumentHeader113() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader113()
}

func (c *current) onDocumentHeader87() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader87() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader87()
}

func (c *current) onDocumentHeader123() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader123() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader123()
}

func (c *current) onDocumentHeader126() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader126() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader126()
}

func (c *current) onDocumentHeader117(email interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader117(stack["email"])
}

func (c *current) onDocumentHeader141() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader141()
}

func (c *current) onDocumentHeader148() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader148() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader148()
}

func (c *current) onDocumentHeader19(namePart1, namePart2, namePart3, email interface{}) (interface{}, error) {
	return types.NewDocumentAuthor(namePart1, namePart2, namePart3, email)
}

func (p *parser) callonDocumentHeader19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader19(stack["namePart1"], stack["namePart2"], stack["namePart3"], stack["email"])
}

func (c *current) onDocumentHeader8(authors interface{}) (interface{}, error) {
	return types.NewDocumentAuthors(authors.([]interface{}))
}

func (p *parser) callonDocumentHeader8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader8(stack["authors"])
}

func (c *current) onDocumentHeader160() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader160() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader160()
}

func (c *current) onDocumentHeader169() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader169() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader169()
}

func (c *current) onDocumentHeader176() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader176()
}

func (c *current) onDocumentHeader192() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader192() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader192()
}

func (c *current) onDocumentHeader179() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader179()
}

func (c *current) onDocumentHeader198() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader198()
}

func (c *current) onDocumentHeader172() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader172() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader172()
}

func (c *current) onDocumentHeader286() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader286() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader286()
}

func (c *current) onDocumentHeader293() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader293() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader293()
}

func (c *current) onDocumentHeader164(namePart1, namePart2, namePart3, email interface{}) (interface{}, error) {
	return types.NewDocumentAuthor(namePart1, namePart2, namePart3, email)
}

func (p *parser) callonDocumentHeader164() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader164(stack["namePart1"], stack["namePart2"], stack["namePart3"], stack["email"])
}

func (c *current) onDocumentHeader155(author interface{}) (interface{}, error) {
	return []types.DocumentAuthor{author.(types.DocumentAuthor)}, nil
}

func (p *parser) callonDocumentHeader155() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader155(stack["author"])
}

func (c *current) onDocumentHeader302() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader302() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader302()
}

func (c *current) onDocumentHeader312() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader312() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader312()
}

func (c *current) onDocumentHeader316() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader316() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader316()
}

func (c *current) onDocumentHeader323() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader323() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader323()
}

func (c *current) onDocumentHeader319() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader319() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader319()
}

func (c *current) onDocumentHeader325() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader325() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader325()
}

func (c *current) onDocumentHeader309() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader309() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader309()
}

func (c *current) onDocumentHeader342() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader342() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader342()
}

func (c *current) onDocumentHeader346() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader346() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader346()
}

func (c *current) onDocumentHeader353() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader353() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader353()
}

func (c *current) onDocumentHeader349() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader349() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader349()
}

func (c *current) onDocumentHeader370() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader370() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader370()
}

func (c *current) onDocumentHeader338() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader338() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader338()
}

func (c *current) onDocumentHeader381() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader381() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader381()
}

func (c *current) onDocumentHeader388() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader388() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader388()
}

func (c *current) onDocumentHeader384() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader384() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader384()
}

func (c *current) onDocumentHeader390() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader390() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader390()
}

func (c *current) onDocumentHeader378() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader378() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader378()
}

func (c *current) onDocumentHeader408() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader408() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader408()
}

func (c *current) onDocumentHeader415() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader415() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader415()
}

func (c *current) onDocumentHeader411() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader411() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader411()
}

func (c *current) onDocumentHeader417() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader417() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader417()
}

func (c *current) onDocumentHeader405() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader405() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader405()
}

func (c *current) onDocumentHeader297(revnumber, revdate, revremark interface{}) (interface{}, error) {
	return types.NewDocumentRevision(revnumber, revdate, revremark)
}

func (p *parser) callonDocumentHeader297() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader297(stack["revnumber"], stack["revdate"], stack["revremark"])
}

func (c *current) onDocumentHeader438() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader438() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader438()
}

func (c *current) onDocumentHeader447() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader447() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader447()
}

func (c *current) onDocumentHeader434(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeDeclaration(name.(string), nil)
}

func (p *parser) callonDocumentHeader434() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader434(stack["name"])
}

func (c *current) onDocumentHeader458() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader458() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader458()
}

func (c *current) onDocumentHeader467() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader467() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader467()
}

func (c *current) onDocumentHeader473() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader473() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader473()
}

func (c *current) onDocumentHeader480() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader480() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader480()
}

func (c *current) onDocumentHeader476() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader476() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader476()
}

func (c *current) onDocumentHeader482() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader482() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader482()
}

func (c *current) onDocumentHeader470() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentHeader470() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader470()
}

func (c *current) onDocumentHeader454(name, value interface{}) (interface{}, error) {
	return types.NewDocumentAttributeDeclaration(name.(string), value)
}

func (p *parser) callonDocumentHeader454() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader454(stack["name"], stack["value"])
}

func (c *current) onDocumentHeader1(header, authors, revision, otherAttributes interface{}) (interface{}, error) {

	return types.NewDocumentHeader(header, authors, revision, otherAttributes.([]interface{}))
}

func (p *parser) callonDocumentHeader1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentHeader1(stack["header"], stack["authors"], stack["revision"], stack["otherAttributes"])
}

func (c *current) onDocumentElement16() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement16() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement16()
}

func (c *current) onDocumentElement8() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonDocumentElement8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement8()
}

func (c *current) onDocumentElement32() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement32() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement32()
}

func (c *current) onDocumentElement44() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement44() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement44()
}

func (c *current) onDocumentElement35() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement35() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement35()
}

func (c *current) onDocumentElement29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement29()
}

func (c *current) onDocumentElement60() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement60() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement60()
}

func (c *current) onDocumentElement67() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement67()
}

func (c *current) onDocumentElement63() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement63()
}

func (c *current) onDocumentElement69() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement69() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement69()
}

func (c *current) onDocumentElement57() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentElement57() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement57()
}

func (c *current) onDocumentElement83() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement83() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement83()
}

func (c *current) onDocumentElement90() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement90() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement90()
}

func (c *current) onDocumentElement86() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement86()
}

func (c *current) onDocumentElement92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement92()
}

func (c *current) onDocumentElement80() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentElement80() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement80()
}

func (c *current) onDocumentElement106() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement106()
}

func (c *current) onDocumentElement113() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement113()
}

func (c *current) onDocumentElement109() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement109() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement109()
}

func (c *current) onDocumentElement115() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement115()
}

func (c *current) onDocumentElement103() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentElement103() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement103()
}

func (c *current) onDocumentElement135() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement135()
}

func (c *current) onDocumentElement138() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement138()
}

func (c *current) onDocumentElement141() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement141() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement141()
}

func (c *current) onDocumentElement146() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement146() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement146()
}

func (c *current) onDocumentElement153() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement153() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement153()
}

func (c *current) onDocumentElement149() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement149() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement149()
}

func (c *current) onDocumentElement155() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement155() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement155()
}

func (c *current) onDocumentElement132(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement132() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement132(stack["key"])
}

func (c *current) onDocumentElement170() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement170() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement170()
}

func (c *current) onDocumentElement177() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement177() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement177()
}

func (c *current) onDocumentElement173() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement173() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement173()
}

func (c *current) onDocumentElement179() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement179()
}

func (c *current) onDocumentElement166(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement166() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement166(stack["value"])
}

func (c *current) onDocumentElement193() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement193() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement193()
}

func (c *current) onDocumentElement129(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentElement129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement129(stack["key"], stack["value"])
}

func (c *current) onDocumentElement201() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement201() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement201()
}

func (c *current) onDocumentElement204() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement204() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement204()
}

func (c *current) onDocumentElement207() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement207() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement207()
}

func (c *current) onDocumentElement212() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement212() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement212()
}

func (c *current) onDocumentElement219() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement219() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement219()
}

func (c *current) onDocumentElement215() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement215() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement215()
}

func (c *current) onDocumentElement221() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement221() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement221()
}

func (c *current) onDocumentElement198(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement198(stack["key"])
}

func (c *current) onDocumentElement235() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement235() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement235()
}

func (c *current) onDocumentElement195(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentElement195() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement195(stack["key"])
}

func (c *current) onDocumentElement53(alt, width, height, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, height, otherAttrs.([]interface{}))
}

func (p *parser) callonDocumentElement53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement53(stack["alt"], stack["width"], stack["height"], stack["otherAttrs"])
}

func (c *current) onDocumentElement245() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement245() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement245()
}

func (c *current) onDocumentElement252() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement252() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement252()
}

func (c *current) onDocumentElement248() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement248() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement248()
}

func (c *current) onDocumentElement254() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement254() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement254()
}

func (c *current) onDocumentElement242() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentElement242() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement242()
}

func (c *current) onDocumentElement268() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement268() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement268()
}

func (c *current) onDocumentElement275() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement275() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement275()
}

func (c *current) onDocumentElement271() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement271() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement271()
}

func (c *current) onDocumentElement277() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement277() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement277()
}

func (c *current) onDocumentElement265() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentElement265() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement265()
}

func (c *current) onDocumentElement297() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement297() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement297()
}

func (c *current) onDocumentElement300() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement300() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement300()
}

func (c *current) onDocumentElement303() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement303() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement303()
}

func (c *current) onDocumentElement308() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement308() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement308()
}

func (c *current) onDocumentElement315() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement315() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement315()
}

func (c *current) onDocumentElement311() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement311() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement311()
}

func (c *current) onDocumentElement317() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement317() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement317()
}

func (c *current) onDocumentElement294(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement294() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement294(stack["key"])
}

func (c *current) onDocumentElement332() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement332() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement332()
}

func (c *current) onDocumentElement339() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement339() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement339()
}

func (c *current) onDocumentElement335() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement335() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement335()
}

func (c *current) onDocumentElement341() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement341() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement341()
}

func (c *current) onDocumentElement328(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement328() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement328(stack["value"])
}

func (c *current) onDocumentElement355() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement355() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement355()
}

func (c *current) onDocumentElement291(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentElement291() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement291(stack["key"], stack["value"])
}

func (c *current) onDocumentElement363() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement363() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement363()
}

func (c *current) onDocumentElement366() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement366() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement366()
}

func (c *current) onDocumentElement369() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement369() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement369()
}

func (c *current) onDocumentElement374() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement374() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement374()
}

func (c *current) onDocumentElement381() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement381() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement381()
}

func (c *current) onDocumentElement377() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement377() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement377()
}

func (c *current) onDocumentElement383() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement383() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement383()
}

func (c *current) onDocumentElement360(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement360() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement360(stack["key"])
}

func (c *current) onDocumentElement397() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement397() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement397()
}

func (c *current) onDocumentElement357(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentElement357() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement357(stack["key"])
}

func (c *current) onDocumentElement238(alt, width, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, nil, otherAttrs.([]interface{}))
}

func (p *parser) callonDocumentElement238() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement238(stack["alt"], stack["width"], stack["otherAttrs"])
}

func (c *current) onDocumentElement407() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement407() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement407()
}

func (c *current) onDocumentElement414() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement414() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement414()
}

func (c *current) onDocumentElement410() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement410() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement410()
}

func (c *current) onDocumentElement416() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement416() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement416()
}

func (c *current) onDocumentElement404() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonDocumentElement404() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement404()
}

func (c *current) onDocumentElement436() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement436() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement436()
}

func (c *current) onDocumentElement439() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement439() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement439()
}

func (c *current) onDocumentElement442() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement442() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement442()
}

func (c *current) onDocumentElement447() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement447() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement447()
}

func (c *current) onDocumentElement454() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement454() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement454()
}

func (c *current) onDocumentElement450() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement450() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement450()
}

func (c *current) onDocumentElement456() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement456() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement456()
}

func (c *current) onDocumentElement433(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement433() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement433(stack["key"])
}

func (c *current) onDocumentElement471() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement471() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement471()
}

func (c *current) onDocumentElement478() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement478() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement478()
}

func (c *current) onDocumentElement474() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement474() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement474()
}

func (c *current) onDocumentElement480() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement480() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement480()
}

func (c *current) onDocumentElement467(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement467() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement467(stack["value"])
}

func (c *current) onDocumentElement494() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement494() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement494()
}

func (c *current) onDocumentElement430(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentElement430() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement430(stack["key"], stack["value"])
}

func (c *current) onDocumentElement502() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement502() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement502()
}

func (c *current) onDocumentElement505() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement505() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement505()
}

func (c *current) onDocumentElement508() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement508() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement508()
}

func (c *current) onDocumentElement513() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement513() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement513()
}

func (c *current) onDocumentElement520() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement520() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement520()
}

func (c *current) onDocumentElement516() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement516() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement516()
}

func (c *current) onDocumentElement522() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement522() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement522()
}

func (c *current) onDocumentElement499(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement499() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement499(stack["key"])
}

func (c *current) onDocumentElement536() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement536() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement536()
}

func (c *current) onDocumentElement496(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentElement496() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement496(stack["key"])
}

func (c *current) onDocumentElement400(alt, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, nil, nil, otherAttrs.([]interface{}))
}

func (p *parser) callonDocumentElement400() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement400(stack["alt"], stack["otherAttrs"])
}

func (c *current) onDocumentElement551() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement551() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement551()
}

func (c *current) onDocumentElement554() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement554() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement554()
}

func (c *current) onDocumentElement557() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement557() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement557()
}

func (c *current) onDocumentElement562() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement562() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement562()
}

func (c *current) onDocumentElement569() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement569() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement569()
}

func (c *current) onDocumentElement565() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement565() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement565()
}

func (c *current) onDocumentElement571() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement571() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement571()
}

func (c *current) onDocumentElement548(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement548() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement548(stack["key"])
}

func (c *current) onDocumentElement586() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement586() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement586()
}

func (c *current) onDocumentElement593() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement593() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement593()
}

func (c *current) onDocumentElement589() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement589() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement589()
}

func (c *current) onDocumentElement595() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement595() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement595()
}

func (c *current) onDocumentElement582(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement582() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement582(stack["value"])
}

func (c *current) onDocumentElement609() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement609() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement609()
}

func (c *current) onDocumentElement545(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentElement545() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement545(stack["key"], stack["value"])
}

func (c *current) onDocumentElement617() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement617() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement617()
}

func (c *current) onDocumentElement620() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement620() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement620()
}

func (c *current) onDocumentElement623() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement623() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement623()
}

func (c *current) onDocumentElement628() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement628() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement628()
}

func (c *current) onDocumentElement635() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement635() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement635()
}

func (c *current) onDocumentElement631() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement631() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement631()
}

func (c *current) onDocumentElement637() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement637() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement637()
}

func (c *current) onDocumentElement614(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement614() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement614(stack["key"])
}

func (c *current) onDocumentElement651() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement651() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement651()
}

func (c *current) onDocumentElement611(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentElement611() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement611(stack["key"])
}

func (c *current) onDocumentElement539(otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(nil, nil, nil, otherAttrs.([]interface{}))
}

func (p *parser) callonDocumentElement539() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement539(stack["otherAttrs"])
}

func (c *current) onDocumentElement657() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement657() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement657()
}

func (c *current) onDocumentElement25(path, inlineAttributes interface{}) (interface{}, error) {
	return types.NewImageBlock(path.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonDocumentElement25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement25(stack["path"], stack["inlineAttributes"])
}

func (c *current) onDocumentElement672() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement672() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement672()
}

func (c *current) onDocumentElement692() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement692() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement692()
}

func (c *current) onDocumentElement706() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement706() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement706()
}

func (c *current) onDocumentElement713() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement713() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement713()
}

func (c *current) onDocumentElement709() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement709() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement709()
}

func (c *current) onDocumentElement723() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement723() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement723()
}

func (c *current) onDocumentElement715() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement715() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement715()
}

func (c *current) onDocumentElement703() (interface{}, error) {
	// skip EOL in line content, and stop when quote block delimiter is encountered
	return types.NewInlineElements(string(c.text))
}

func (p *parser) callonDocumentElement703() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement703()
}

func (c *current) onDocumentElement684(line interface{}) (interface{}, error) {
	return line.(types.InlineElements), nil
}

func (p *parser) callonDocumentElement684() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement684(stack["line"])
}

func (c *current) onDocumentElement681(lines interface{}) (interface{}, error) {
	return types.NewParagraph(lines.([]interface{}), nil)
}

func (p *parser) callonDocumentElement681() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement681(stack["lines"])
}

func (c *current) onDocumentElement748() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement748() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement748()
}

func (c *current) onDocumentElement666(content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Listing, content.([]interface{}), types.None)
}

func (p *parser) callonDocumentElement666() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement666(stack["content"])
}

func (c *current) onDocumentElement764() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement764() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement764()
}

func (c *current) onDocumentElement775() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement775() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement775()
}

func (c *current) onDocumentElement782() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement782() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement782()
}

func (c *current) onDocumentElement778() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement778() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement778()
}

func (c *current) onDocumentElement784() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement784() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement784()
}

func (c *current) onDocumentElement771() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement771() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement771()
}

func (c *current) onDocumentElement806() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement806() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement806()
}

func (c *current) onDocumentElement758(content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Comment, content.([]interface{}), types.Verbatim)
}

func (p *parser) callonDocumentElement758() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement758(stack["content"])
}

func (c *current) onDocumentElement827() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement827() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement827()
}

func (c *current) onDocumentElement831() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement831() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement831()
}

func (c *current) onDocumentElement838() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement838() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement838()
}

func (c *current) onDocumentElement834() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement834() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement834()
}

func (c *current) onDocumentElement840() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonDocumentElement840() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement840()
}

func (c *current) onDocumentElement823() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonDocumentElement823() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement823()
}

func (c *current) onDocumentElement867() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement867() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement867()
}

func (c *current) onDocumentElement859() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonDocumentElement859() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement859()
}

func (c *current) onDocumentElement878() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement878() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement878()
}

func (c *current) onDocumentElement885() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement885() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement885()
}

func (c *current) onDocumentElement881() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement881() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement881()
}

func (c *current) onDocumentElement887() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonDocumentElement887() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement887()
}

func (c *current) onDocumentElement875() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonDocumentElement875() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement875()
}

func (c *current) onDocumentElement856(otherLine interface{}) (interface{}, error) {
	return otherLine, nil // do not include the trailing 'EOL'

}

func (p *parser) callonDocumentElement856() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement856(stack["otherLine"])
}

func (c *current) onDocumentElement820(firstLine, otherLines interface{}) (interface{}, error) {

	return append([]interface{}{firstLine}, otherLines.([]interface{})...), nil
}

func (p *parser) callonDocumentElement820() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement820(stack["firstLine"], stack["otherLines"])
}

func (c *current) onDocumentElement818(lines interface{}) (interface{}, error) {
	return types.NewLiteralBlock(types.LiteralBlockWithSpacesOnFirstLine, lines.([]interface{}))
}

func (p *parser) callonDocumentElement818() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement818(stack["lines"])
}

func (c *current) onDocumentElement907() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement907() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement907()
}

func (c *current) onDocumentElement922() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement922() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement922()
}

func (c *current) onDocumentElement929() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement929() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement929()
}

func (c *current) onDocumentElement925() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement925() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement925()
}

func (c *current) onDocumentElement931() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonDocumentElement931() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement931()
}

func (c *current) onDocumentElement919() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonDocumentElement919() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement919()
}

func (c *current) onDocumentElement916(line interface{}) (interface{}, error) {

	return line, nil // do not include the trailing 'EOL'
}

func (p *parser) callonDocumentElement916() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement916(stack["line"])
}

func (c *current) onDocumentElement913(lines interface{}) (interface{}, error) {
	return lines.([]interface{}), nil
}

func (p *parser) callonDocumentElement913() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement913(stack["lines"])
}

func (c *current) onDocumentElement953() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement953() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement953()
}

func (c *current) onDocumentElement901(lines interface{}) (interface{}, error) {
	return types.NewLiteralBlock(types.LiteralBlockWithDelimiter, lines.([]interface{}))
}

func (p *parser) callonDocumentElement901() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement901(stack["lines"])
}

func (c *current) onDocumentElement972() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement972() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement972()
}

func (c *current) onDocumentElement966() (interface{}, error) {
	return types.NewLiteralAttribute()
}

func (p *parser) callonDocumentElement966() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement966()
}

func (c *current) onDocumentElement991() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement991() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement991()
}

func (c *current) onDocumentElement1003() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1003() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1003()
}

func (c *current) onDocumentElement994() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement994() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement994()
}

func (c *current) onDocumentElement988() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement988() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement988()
}

func (c *current) onDocumentElement984(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDocumentElement984() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement984(stack["id"])
}

func (c *current) onDocumentElement1024() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1024() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1024()
}

func (c *current) onDocumentElement1036() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1036() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1036()
}

func (c *current) onDocumentElement1027() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1027() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1027()
}

func (c *current) onDocumentElement1021() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1021() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1021()
}

func (c *current) onDocumentElement1017(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonDocumentElement1017() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1017(stack["id"])
}

func (c *current) onDocumentElement1058() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1058() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1058()
}

func (c *current) onDocumentElement1064() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1064() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1064()
}

func (c *current) onDocumentElement1071() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1071() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1071()
}

func (c *current) onDocumentElement1067() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1067() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1067()
}

func (c *current) onDocumentElement1073() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1073() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1073()
}

func (c *current) onDocumentElement1061() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1061() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1061()
}

func (c *current) onDocumentElement1050(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonDocumentElement1050() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1050(stack["title"])
}

func (c *current) onDocumentElement1086() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1086() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1086()
}

func (c *current) onDocumentElement1092() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1092() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1092()
}

func (c *current) onDocumentElement1099() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1099() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1099()
}

func (c *current) onDocumentElement1095() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1095() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1095()
}

func (c *current) onDocumentElement1101() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1101() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1101()
}

func (c *current) onDocumentElement1089() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1089() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1089()
}

func (c *current) onDocumentElement1080(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonDocumentElement1080() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1080(stack["role"])
}

func (c *current) onDocumentElement1111() (interface{}, error) {
	return types.NewSourceAttributes("")
}

func (p *parser) callonDocumentElement1111() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1111()
}

func (c *current) onDocumentElement1120() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1120() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1120()
}

func (c *current) onDocumentElement1127() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1127() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1127()
}

func (c *current) onDocumentElement1123() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1123() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1123()
}

func (c *current) onDocumentElement1129() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonDocumentElement1129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1129()
}

func (c *current) onDocumentElement1117() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonDocumentElement1117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1117()
}

func (c *current) onDocumentElement1113(language interface{}) (interface{}, error) {
	return types.NewSourceAttributes(language.(string))
}

func (p *parser) callonDocumentElement1113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1113(stack["language"])
}

func (c *current) onDocumentElement1143() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1143() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1143()
}

func (c *current) onDocumentElement1148() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1148() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1148()
}

func (c *current) onDocumentElement1155() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1155() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1155()
}

func (c *current) onDocumentElement1162() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1162() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1162()
}

func (c *current) onDocumentElement1158() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1158() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1158()
}

func (c *current) onDocumentElement1164() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1164() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1164()
}

func (c *current) onDocumentElement1152() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1152()
}

func (c *current) onDocumentElement1182() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1182() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1182()
}

func (c *current) onDocumentElement1189() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1189() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1189()
}

func (c *current) onDocumentElement1185() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1185() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1185()
}

func (c *current) onDocumentElement1179() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1179()
}

func (c *current) onDocumentElement1139(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))
}

func (p *parser) callonDocumentElement1139() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1139(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onDocumentElement1208() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1208() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1208()
}

func (c *current) onDocumentElement1213() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1213() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1213()
}

func (c *current) onDocumentElement1220() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1220() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1220()
}

func (c *current) onDocumentElement1227() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1227() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1227()
}

func (c *current) onDocumentElement1223() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1223() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1223()
}

func (c *current) onDocumentElement1229() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1229() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1229()
}

func (c *current) onDocumentElement1217() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1217() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1217()
}

func (c *current) onDocumentElement1204(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")
}

func (p *parser) callonDocumentElement1204() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1204(stack["kind"], stack["author"])
}

func (c *current) onDocumentElement1247() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1247() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1247()
}

func (c *current) onDocumentElement1252() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1252() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1252()
}

func (c *current) onDocumentElement1243(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")
}

func (p *parser) callonDocumentElement1243() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1243(stack["kind"])
}

func (c *current) onDocumentElement1263() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1263() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1263()
}

func (c *current) onDocumentElement1268() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1268() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1268()
}

func (c *current) onDocumentElement1275() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1275() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1275()
}

func (c *current) onDocumentElement1282() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1282() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1282()
}

func (c *current) onDocumentElement1278() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1278() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1278()
}

func (c *current) onDocumentElement1284() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1284() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1284()
}

func (c *current) onDocumentElement1272() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1272() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1272()
}

func (c *current) onDocumentElement1302() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1302() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1302()
}

func (c *current) onDocumentElement1309() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1309() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1309()
}

func (c *current) onDocumentElement1305() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1305() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1305()
}

func (c *current) onDocumentElement1299() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1299() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1299()
}

func (c *current) onDocumentElement1259(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonDocumentElement1259() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1259(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onDocumentElement1328() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1328() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1328()
}

func (c *current) onDocumentElement1333() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1333() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1333()
}

func (c *current) onDocumentElement1340() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1340() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1340()
}

func (c *current) onDocumentElement1347() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1347() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1347()
}

func (c *current) onDocumentElement1343() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1343() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1343()
}

func (c *current) onDocumentElement1349() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1349() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1349()
}

func (c *current) onDocumentElement1337() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1337() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1337()
}

func (c *current) onDocumentElement1324(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonDocumentElement1324() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1324(stack["kind"], stack["author"])
}

func (c *current) onDocumentElement1367() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1367() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1367()
}

func (c *current) onDocumentElement1372() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1372() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1372()
}

func (c *current) onDocumentElement1363(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonDocumentElement1363() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1363(stack["kind"])
}

func (c *current) onDocumentElement1375(attribute interface{}) error {
	c.state["verse"] = true
	return nil
}

func (p *parser) callonDocumentElement1375() error {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1375(stack["attribute"])
}

func (c *current) onDocumentElement1255(attribute interface{}) (interface{}, error) {
	return attribute, nil
}

func (p *parser) callonDocumentElement1255() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1255(stack["attribute"])
}

func (c *current) onDocumentElement1381() (interface{}, error) {
	return types.Tip, nil

}

func (p *parser) callonDocumentElement1381() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1381()
}

func (c *current) onDocumentElement1383() (interface{}, error) {
	return types.Note, nil

}

func (p *parser) callonDocumentElement1383() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1383()
}

func (c *current) onDocumentElement1385() (interface{}, error) {
	return types.Important, nil

}

func (p *parser) callonDocumentElement1385() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1385()
}

func (c *current) onDocumentElement1387() (interface{}, error) {
	return types.Warning, nil

}

func (p *parser) callonDocumentElement1387() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1387()
}

func (c *current) onDocumentElement1389() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonDocumentElement1389() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1389()
}

func (c *current) onDocumentElement1376(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonDocumentElement1376() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1376(stack["k"])
}

func (c *current) onDocumentElement1392() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonDocumentElement1392() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1392()
}

func (c *current) onDocumentElement1400() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1400() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1400()
}

func (c *current) onDocumentElement1411() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1411() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1411()
}

func (c *current) onDocumentElement1414() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1414() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1414()
}

func (c *current) onDocumentElement1417() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1417() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1417()
}

func (c *current) onDocumentElement1422() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1422() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1422()
}

func (c *current) onDocumentElement1429() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1429() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1429()
}

func (c *current) onDocumentElement1425() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1425() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1425()
}

func (c *current) onDocumentElement1431() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1431() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1431()
}

func (c *current) onDocumentElement1408(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1408() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1408(stack["key"])
}

func (c *current) onDocumentElement1446() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1446() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1446()
}

func (c *current) onDocumentElement1453() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1453() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1453()
}

func (c *current) onDocumentElement1449() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1449() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1449()
}

func (c *current) onDocumentElement1455() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1455() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1455()
}

func (c *current) onDocumentElement1442(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1442() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1442(stack["value"])
}

func (c *current) onDocumentElement1469() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1469() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1469()
}

func (c *current) onDocumentElement1405(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonDocumentElement1405() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1405(stack["key"], stack["value"])
}

func (c *current) onDocumentElement1477() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1477() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1477()
}

func (c *current) onDocumentElement1480() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1480() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1480()
}

func (c *current) onDocumentElement1483() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1483() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1483()
}

func (c *current) onDocumentElement1488() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1488() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1488()
}

func (c *current) onDocumentElement1495() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1495() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1495()
}

func (c *current) onDocumentElement1491() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1491() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1491()
}

func (c *current) onDocumentElement1497() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1497() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1497()
}

func (c *current) onDocumentElement1474(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1474() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1474(stack["key"])
}

func (c *current) onDocumentElement1511() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1511() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1511()
}

func (c *current) onDocumentElement1471(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonDocumentElement1471() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1471(stack["key"])
}

func (c *current) onDocumentElement1394(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonDocumentElement1394() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1394(stack["attributes"])
}

func (c *current) onDocumentElement1517() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1517() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1517()
}

func (c *current) onDocumentElement978(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonDocumentElement978() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement978(stack["attr"])
}

func (c *current) onDocumentElement1542() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1542() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1542()
}

func (c *current) onDocumentElement1534() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonDocumentElement1534() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1534()
}

func (c *current) onDocumentElement1551() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1551() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1551()
}

func (c *current) onDocumentElement1558() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1558() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1558()
}

func (c *current) onDocumentElement1554() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1554() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1554()
}

func (c *current) onDocumentElement1560() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1560() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1560()
}

func (c *current) onDocumentElement1531() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1531() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1531()
}

func (c *current) onDocumentElement1528(line interface{}) (interface{}, error) {
	return line, nil // do not include the trailing 'EOL'
}

func (p *parser) callonDocumentElement1528() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1528(stack["line"])
}

func (c *current) onDocumentElement1525(lines interface{}) (interface{}, error) {

	return lines.([]interface{}), nil
}

func (p *parser) callonDocumentElement1525() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1525(stack["lines"])
}

func (c *current) onDocumentElement962(attributes, lines interface{}) (interface{}, error) {
	return types.NewLiteralBlock(types.LiteralBlockWithAttribute, lines.([]interface{}), attributes.([]interface{}))
}

func (p *parser) callonDocumentElement962() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement962(stack["attributes"], stack["lines"])
}

func (c *current) onDocumentElement1578() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1578() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1578()
}

func (c *current) onDocumentElement1587() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1587() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1587()
}

func (c *current) onDocumentElement1574(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeDeclaration(name.(string), nil)
}

func (p *parser) callonDocumentElement1574() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1574(stack["name"])
}

func (c *current) onDocumentElement1598() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1598() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1598()
}

func (c *current) onDocumentElement1607() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1607() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1607()
}

func (c *current) onDocumentElement1613() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1613() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1613()
}

func (c *current) onDocumentElement1620() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1620() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1620()
}

func (c *current) onDocumentElement1616() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1616() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1616()
}

func (c *current) onDocumentElement1622() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1622() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1622()
}

func (c *current) onDocumentElement1610() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1610() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1610()
}

func (c *current) onDocumentElement1594(name, value interface{}) (interface{}, error) {
	return types.NewDocumentAttributeDeclaration(name.(string), value)
}

func (p *parser) callonDocumentElement1594() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1594(stack["name"], stack["value"])
}

func (c *current) onDocumentElement1638() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1638() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1638()
}

func (c *current) onDocumentElement1647() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1647() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1647()
}

func (c *current) onDocumentElement1634(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeReset(name.(string))
}

func (p *parser) callonDocumentElement1634() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1634(stack["name"])
}

func (c *current) onDocumentElement1658() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1658() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1658()
}

func (c *current) onDocumentElement1667() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDocumentElement1667() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1667()
}

func (c *current) onDocumentElement1654(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeReset(name.(string))
}

func (p *parser) callonDocumentElement1654() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1654(stack["name"])
}

func (c *current) onDocumentElement1(element interface{}) (interface{}, error) {
	return element, nil
}

func (p *parser) callonDocumentElement1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDocumentElement1(stack["element"])
}

func (c *current) onQuoteAttributes6() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes6() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes6()
}

func (c *current) onQuoteAttributes11() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes11()
}

func (c *current) onQuoteAttributes18() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes18()
}

func (c *current) onQuoteAttributes25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes25()
}

func (c *current) onQuoteAttributes21() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes21()
}

func (c *current) onQuoteAttributes27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes27()
}

func (c *current) onQuoteAttributes15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes15()
}

func (c *current) onQuoteAttributes45() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes45() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes45()
}

func (c *current) onQuoteAttributes52() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes52() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes52()
}

func (c *current) onQuoteAttributes48() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes48() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes48()
}

func (c *current) onQuoteAttributes42() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes42() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes42()
}

func (c *current) onQuoteAttributes2(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))
}

func (p *parser) callonQuoteAttributes2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes2(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onQuoteAttributes71() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes71()
}

func (c *current) onQuoteAttributes76() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes76() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes76()
}

func (c *current) onQuoteAttributes83() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes83() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes83()
}

func (c *current) onQuoteAttributes90() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes90() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes90()
}

func (c *current) onQuoteAttributes86() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes86()
}

func (c *current) onQuoteAttributes92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes92()
}

func (c *current) onQuoteAttributes80() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes80() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes80()
}

func (c *current) onQuoteAttributes67(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")
}

func (p *parser) callonQuoteAttributes67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes67(stack["kind"], stack["author"])
}

func (c *current) onQuoteAttributes110() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes110() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes110()
}

func (c *current) onQuoteAttributes115() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteAttributes115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes115()
}

func (c *current) onQuoteAttributes106(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")
}

func (p *parser) callonQuoteAttributes106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteAttributes106(stack["kind"])
}

func (c *current) onVerseAttributes9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes9()
}

func (c *current) onVerseAttributes14() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes14()
}

func (c *current) onVerseAttributes21() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes21()
}

func (c *current) onVerseAttributes28() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes28() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes28()
}

func (c *current) onVerseAttributes24() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes24() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes24()
}

func (c *current) onVerseAttributes30() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes30() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes30()
}

func (c *current) onVerseAttributes18() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes18()
}

func (c *current) onVerseAttributes48() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes48() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes48()
}

func (c *current) onVerseAttributes55() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes55() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes55()
}

func (c *current) onVerseAttributes51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes51()
}

func (c *current) onVerseAttributes45() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes45() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes45()
}

func (c *current) onVerseAttributes5(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonVerseAttributes5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes5(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onVerseAttributes74() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes74() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes74()
}

func (c *current) onVerseAttributes79() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes79() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes79()
}

func (c *current) onVerseAttributes86() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes86()
}

func (c *current) onVerseAttributes93() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes93() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes93()
}

func (c *current) onVerseAttributes89() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes89() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes89()
}

func (c *current) onVerseAttributes95() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes95()
}

func (c *current) onVerseAttributes83() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes83() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes83()
}

func (c *current) onVerseAttributes70(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonVerseAttributes70() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes70(stack["kind"], stack["author"])
}

func (c *current) onVerseAttributes113() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes113()
}

func (c *current) onVerseAttributes118() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseAttributes118() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes118()
}

func (c *current) onVerseAttributes109(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonVerseAttributes109() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes109(stack["kind"])
}

func (c *current) onVerseAttributes121(attribute interface{}) error {
	c.state["verse"] = true
	return nil
}

func (p *parser) callonVerseAttributes121() error {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes121(stack["attribute"])
}

func (c *current) onVerseAttributes1(attribute interface{}) (interface{}, error) {
	return attribute, nil
}

func (p *parser) callonVerseAttributes1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseAttributes1(stack["attribute"])
}

func (c *current) onSection1(section interface{}) (interface{}, error) {
	return section, nil
}

func (p *parser) callonSection1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1(stack["section"])
}

func (c *current) onSection1_51(section interface{}) (interface{}, error) {
	return section, nil
}

func (p *parser) callonSection1_51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1_51(stack["section"])
}

func (c *current) onSection2_51(section interface{}) (interface{}, error) {
	return section, nil
}

func (p *parser) callonSection2_51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2_51(stack["section"])
}

func (c *current) onSection3_51(section interface{}) (interface{}, error) {
	return section, nil
}

func (p *parser) callonSection3_51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3_51(stack["section"])
}

func (c *current) onSection4_51(section interface{}) (interface{}, error) {
	return section, nil
}

func (p *parser) callonSection4_51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4_51(stack["section"])
}

func (c *current) onSection01(header, elements interface{}) (interface{}, error) {
	return types.NewSection(0, header.(types.SectionTitle), elements.([]interface{}))
}

func (p *parser) callonSection01() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection01(stack["header"], stack["elements"])
}

func (c *current) onSection0Title7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title7()
}

func (c *current) onSection0Title20() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title20() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title20()
}

func (c *current) onSection0Title32() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title32() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title32()
}

func (c *current) onSection0Title23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title23()
}

func (c *current) onSection0Title17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title17()
}

func (c *current) onSection0Title49() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Title49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title49()
}

func (c *current) onSection0Title13(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonSection0Title13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title13(stack["id"])
}

func (c *current) onSection0Title1(elements, id interface{}) (interface{}, error) {

	return types.NewSectionTitle(elements.(types.InlineElements), id.([]interface{}))
}

func (p *parser) callonSection0Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Title1(stack["elements"], stack["id"])
}

func (c *current) onSection0TitleWithAttributes18() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes18()
}

func (c *current) onSection0TitleWithAttributes30() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes30() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes30()
}

func (c *current) onSection0TitleWithAttributes21() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes21()
}

func (c *current) onSection0TitleWithAttributes15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes15()
}

func (c *current) onSection0TitleWithAttributes11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection0TitleWithAttributes11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes11(stack["id"])
}

func (c *current) onSection0TitleWithAttributes51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes51()
}

func (c *current) onSection0TitleWithAttributes63() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes63()
}

func (c *current) onSection0TitleWithAttributes54() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes54() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes54()
}

func (c *current) onSection0TitleWithAttributes48() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes48() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes48()
}

func (c *current) onSection0TitleWithAttributes44(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection0TitleWithAttributes44() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes44(stack["id"])
}

func (c *current) onSection0TitleWithAttributes85() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes85() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes85()
}

func (c *current) onSection0TitleWithAttributes91() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes91() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes91()
}

func (c *current) onSection0TitleWithAttributes98() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes98() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes98()
}

func (c *current) onSection0TitleWithAttributes94() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes94() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes94()
}

func (c *current) onSection0TitleWithAttributes100() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes100() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes100()
}

func (c *current) onSection0TitleWithAttributes88() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes88() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes88()
}

func (c *current) onSection0TitleWithAttributes77(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection0TitleWithAttributes77() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes77(stack["title"])
}

func (c *current) onSection0TitleWithAttributes113() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes113()
}

func (c *current) onSection0TitleWithAttributes119() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes119()
}

func (c *current) onSection0TitleWithAttributes126() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes126() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes126()
}

func (c *current) onSection0TitleWithAttributes122() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes122()
}

func (c *current) onSection0TitleWithAttributes128() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes128() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes128()
}

func (c *current) onSection0TitleWithAttributes116() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes116()
}

func (c *current) onSection0TitleWithAttributes107(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection0TitleWithAttributes107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes107(stack["role"])
}

func (c *current) onSection0TitleWithAttributes138() (interface{}, error) {
	return types.NewSourceAttributes("")
}

func (p *parser) callonSection0TitleWithAttributes138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes138()
}

func (c *current) onSection0TitleWithAttributes147() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes147() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes147()
}

func (c *current) onSection0TitleWithAttributes154() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes154() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes154()
}

func (c *current) onSection0TitleWithAttributes150() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes150() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes150()
}

func (c *current) onSection0TitleWithAttributes156() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection0TitleWithAttributes156() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes156()
}

func (c *current) onSection0TitleWithAttributes144() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection0TitleWithAttributes144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes144()
}

func (c *current) onSection0TitleWithAttributes140(language interface{}) (interface{}, error) {
	return types.NewSourceAttributes(language.(string))
}

func (p *parser) callonSection0TitleWithAttributes140() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes140(stack["language"])
}

func (c *current) onSection0TitleWithAttributes170() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes170() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes170()
}

func (c *current) onSection0TitleWithAttributes175() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes175() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes175()
}

func (c *current) onSection0TitleWithAttributes182() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes182() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes182()
}

func (c *current) onSection0TitleWithAttributes189() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes189() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes189()
}

func (c *current) onSection0TitleWithAttributes185() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes185() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes185()
}

func (c *current) onSection0TitleWithAttributes191() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes191() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes191()
}

func (c *current) onSection0TitleWithAttributes179() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes179()
}

func (c *current) onSection0TitleWithAttributes209() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes209() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes209()
}

func (c *current) onSection0TitleWithAttributes216() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes216() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes216()
}

func (c *current) onSection0TitleWithAttributes212() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes212() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes212()
}

func (c *current) onSection0TitleWithAttributes206() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes206() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes206()
}

func (c *current) onSection0TitleWithAttributes166(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))
}

func (p *parser) callonSection0TitleWithAttributes166() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes166(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onSection0TitleWithAttributes235() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes235() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes235()
}

func (c *current) onSection0TitleWithAttributes240() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes240() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes240()
}

func (c *current) onSection0TitleWithAttributes247() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes247() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes247()
}

func (c *current) onSection0TitleWithAttributes254() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes254() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes254()
}

func (c *current) onSection0TitleWithAttributes250() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes250() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes250()
}

func (c *current) onSection0TitleWithAttributes256() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes256() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes256()
}

func (c *current) onSection0TitleWithAttributes244() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes244() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes244()
}

func (c *current) onSection0TitleWithAttributes231(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")
}

func (p *parser) callonSection0TitleWithAttributes231() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes231(stack["kind"], stack["author"])
}

func (c *current) onSection0TitleWithAttributes274() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes274() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes274()
}

func (c *current) onSection0TitleWithAttributes279() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes279() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes279()
}

func (c *current) onSection0TitleWithAttributes270(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")
}

func (p *parser) callonSection0TitleWithAttributes270() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes270(stack["kind"])
}

func (c *current) onSection0TitleWithAttributes290() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes290() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes290()
}

func (c *current) onSection0TitleWithAttributes295() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes295() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes295()
}

func (c *current) onSection0TitleWithAttributes302() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes302() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes302()
}

func (c *current) onSection0TitleWithAttributes309() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes309() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes309()
}

func (c *current) onSection0TitleWithAttributes305() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes305() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes305()
}

func (c *current) onSection0TitleWithAttributes311() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes311() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes311()
}

func (c *current) onSection0TitleWithAttributes299() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes299() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes299()
}

func (c *current) onSection0TitleWithAttributes329() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes329() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes329()
}

func (c *current) onSection0TitleWithAttributes336() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes336() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes336()
}

func (c *current) onSection0TitleWithAttributes332() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes332() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes332()
}

func (c *current) onSection0TitleWithAttributes326() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes326() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes326()
}

func (c *current) onSection0TitleWithAttributes286(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonSection0TitleWithAttributes286() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes286(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onSection0TitleWithAttributes355() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes355() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes355()
}

func (c *current) onSection0TitleWithAttributes360() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes360() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes360()
}

func (c *current) onSection0TitleWithAttributes367() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes367() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes367()
}

func (c *current) onSection0TitleWithAttributes374() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes374() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes374()
}

func (c *current) onSection0TitleWithAttributes370() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes370() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes370()
}

func (c *current) onSection0TitleWithAttributes376() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes376() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes376()
}

func (c *current) onSection0TitleWithAttributes364() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes364() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes364()
}

func (c *current) onSection0TitleWithAttributes351(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonSection0TitleWithAttributes351() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes351(stack["kind"], stack["author"])
}

func (c *current) onSection0TitleWithAttributes394() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes394() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes394()
}

func (c *current) onSection0TitleWithAttributes399() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes399() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes399()
}

func (c *current) onSection0TitleWithAttributes390(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonSection0TitleWithAttributes390() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes390(stack["kind"])
}

func (c *current) onSection0TitleWithAttributes402(attribute interface{}) error {
	c.state["verse"] = true
	return nil
}

func (p *parser) callonSection0TitleWithAttributes402() error {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes402(stack["attribute"])
}

func (c *current) onSection0TitleWithAttributes282(attribute interface{}) (interface{}, error) {
	return attribute, nil
}

func (p *parser) callonSection0TitleWithAttributes282() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes282(stack["attribute"])
}

func (c *current) onSection0TitleWithAttributes408() (interface{}, error) {
	return types.Tip, nil

}

func (p *parser) callonSection0TitleWithAttributes408() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes408()
}

func (c *current) onSection0TitleWithAttributes410() (interface{}, error) {
	return types.Note, nil

}

func (p *parser) callonSection0TitleWithAttributes410() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes410()
}

func (c *current) onSection0TitleWithAttributes412() (interface{}, error) {
	return types.Important, nil

}

func (p *parser) callonSection0TitleWithAttributes412() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes412()
}

func (c *current) onSection0TitleWithAttributes414() (interface{}, error) {
	return types.Warning, nil

}

func (p *parser) callonSection0TitleWithAttributes414() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes414()
}

func (c *current) onSection0TitleWithAttributes416() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection0TitleWithAttributes416() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes416()
}

func (c *current) onSection0TitleWithAttributes403(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection0TitleWithAttributes403() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes403(stack["k"])
}

func (c *current) onSection0TitleWithAttributes419() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection0TitleWithAttributes419() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes419()
}

func (c *current) onSection0TitleWithAttributes427() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes427() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes427()
}

func (c *current) onSection0TitleWithAttributes438() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes438() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes438()
}

func (c *current) onSection0TitleWithAttributes441() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes441() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes441()
}

func (c *current) onSection0TitleWithAttributes444() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes444() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes444()
}

func (c *current) onSection0TitleWithAttributes449() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes449() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes449()
}

func (c *current) onSection0TitleWithAttributes456() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes456() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes456()
}

func (c *current) onSection0TitleWithAttributes452() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes452() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes452()
}

func (c *current) onSection0TitleWithAttributes458() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes458() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes458()
}

func (c *current) onSection0TitleWithAttributes435(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes435() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes435(stack["key"])
}

func (c *current) onSection0TitleWithAttributes473() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes473() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes473()
}

func (c *current) onSection0TitleWithAttributes480() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes480() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes480()
}

func (c *current) onSection0TitleWithAttributes476() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes476() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes476()
}

func (c *current) onSection0TitleWithAttributes482() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes482() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes482()
}

func (c *current) onSection0TitleWithAttributes469(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes469() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes469(stack["value"])
}

func (c *current) onSection0TitleWithAttributes496() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes496() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes496()
}

func (c *current) onSection0TitleWithAttributes432(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection0TitleWithAttributes432() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes432(stack["key"], stack["value"])
}

func (c *current) onSection0TitleWithAttributes504() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes504() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes504()
}

func (c *current) onSection0TitleWithAttributes507() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes507() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes507()
}

func (c *current) onSection0TitleWithAttributes510() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes510() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes510()
}

func (c *current) onSection0TitleWithAttributes515() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes515() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes515()
}

func (c *current) onSection0TitleWithAttributes522() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes522() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes522()
}

func (c *current) onSection0TitleWithAttributes518() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes518() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes518()
}

func (c *current) onSection0TitleWithAttributes524() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes524() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes524()
}

func (c *current) onSection0TitleWithAttributes501(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes501() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes501(stack["key"])
}

func (c *current) onSection0TitleWithAttributes538() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes538() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes538()
}

func (c *current) onSection0TitleWithAttributes498(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection0TitleWithAttributes498() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes498(stack["key"])
}

func (c *current) onSection0TitleWithAttributes421(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection0TitleWithAttributes421() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes421(stack["attributes"])
}

func (c *current) onSection0TitleWithAttributes544() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0TitleWithAttributes544() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes544()
}

func (c *current) onSection0TitleWithAttributes5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection0TitleWithAttributes5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes5(stack["attr"])
}

func (c *current) onSection0TitleWithAttributes1(attributes, title interface{}) (interface{}, error) {
	return types.WithAttributes(title, attributes.([]interface{}))
}

func (p *parser) callonSection0TitleWithAttributes1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0TitleWithAttributes1(stack["attributes"], stack["title"])
}

func (c *current) onSection0Element9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element9()
}

func (c *current) onSection0Element26() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element26()
}

func (c *current) onSection0Element38() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element38() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element38()
}

func (c *current) onSection0Element29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element29()
}

func (c *current) onSection0Element23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element23()
}

func (c *current) onSection0Element19(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection0Element19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element19(stack["id"])
}

func (c *current) onSection0Element59() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element59() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element59()
}

func (c *current) onSection0Element71() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element71()
}

func (c *current) onSection0Element62() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element62() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element62()
}

func (c *current) onSection0Element56() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element56() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element56()
}

func (c *current) onSection0Element52(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection0Element52() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element52(stack["id"])
}

func (c *current) onSection0Element93() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element93() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element93()
}

func (c *current) onSection0Element99() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element99() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element99()
}

func (c *current) onSection0Element106() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element106()
}

func (c *current) onSection0Element102() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element102()
}

func (c *current) onSection0Element108() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element108() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element108()
}

func (c *current) onSection0Element96() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element96() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element96()
}

func (c *current) onSection0Element85(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection0Element85() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element85(stack["title"])
}

func (c *current) onSection0Element121() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element121()
}

func (c *current) onSection0Element127() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element127() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element127()
}

func (c *current) onSection0Element134() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element134() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element134()
}

func (c *current) onSection0Element130() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element130()
}

func (c *current) onSection0Element136() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element136() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element136()
}

func (c *current) onSection0Element124() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element124()
}

func (c *current) onSection0Element115(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection0Element115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element115(stack["role"])
}

func (c *current) onSection0Element146() (interface{}, error) {
	return types.NewSourceAttributes("")
}

func (p *parser) callonSection0Element146() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element146()
}

func (c *current) onSection0Element155() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element155() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element155()
}

func (c *current) onSection0Element162() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element162() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element162()
}

func (c *current) onSection0Element158() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element158() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element158()
}

func (c *current) onSection0Element164() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection0Element164() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element164()
}

func (c *current) onSection0Element152() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection0Element152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element152()
}

func (c *current) onSection0Element148(language interface{}) (interface{}, error) {
	return types.NewSourceAttributes(language.(string))
}

func (p *parser) callonSection0Element148() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element148(stack["language"])
}

func (c *current) onSection0Element178() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element178() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element178()
}

func (c *current) onSection0Element183() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element183() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element183()
}

func (c *current) onSection0Element190() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element190() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element190()
}

func (c *current) onSection0Element197() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element197() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element197()
}

func (c *current) onSection0Element193() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element193() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element193()
}

func (c *current) onSection0Element199() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element199() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element199()
}

func (c *current) onSection0Element187() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element187() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element187()
}

func (c *current) onSection0Element217() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element217() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element217()
}

func (c *current) onSection0Element224() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element224() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element224()
}

func (c *current) onSection0Element220() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element220() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element220()
}

func (c *current) onSection0Element214() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element214() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element214()
}

func (c *current) onSection0Element174(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))
}

func (p *parser) callonSection0Element174() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element174(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onSection0Element243() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element243() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element243()
}

func (c *current) onSection0Element248() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element248() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element248()
}

func (c *current) onSection0Element255() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element255() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element255()
}

func (c *current) onSection0Element262() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element262() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element262()
}

func (c *current) onSection0Element258() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element258() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element258()
}

func (c *current) onSection0Element264() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element264() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element264()
}

func (c *current) onSection0Element252() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element252() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element252()
}

func (c *current) onSection0Element239(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")
}

func (p *parser) callonSection0Element239() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element239(stack["kind"], stack["author"])
}

func (c *current) onSection0Element282() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element282() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element282()
}

func (c *current) onSection0Element287() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element287() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element287()
}

func (c *current) onSection0Element278(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")
}

func (p *parser) callonSection0Element278() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element278(stack["kind"])
}

func (c *current) onSection0Element298() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element298() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element298()
}

func (c *current) onSection0Element303() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element303() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element303()
}

func (c *current) onSection0Element310() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element310() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element310()
}

func (c *current) onSection0Element317() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element317() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element317()
}

func (c *current) onSection0Element313() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element313() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element313()
}

func (c *current) onSection0Element319() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element319() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element319()
}

func (c *current) onSection0Element307() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element307() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element307()
}

func (c *current) onSection0Element337() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element337() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element337()
}

func (c *current) onSection0Element344() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element344() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element344()
}

func (c *current) onSection0Element340() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element340() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element340()
}

func (c *current) onSection0Element334() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element334() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element334()
}

func (c *current) onSection0Element294(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonSection0Element294() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element294(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onSection0Element363() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element363() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element363()
}

func (c *current) onSection0Element368() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element368() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element368()
}

func (c *current) onSection0Element375() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element375() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element375()
}

func (c *current) onSection0Element382() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element382() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element382()
}

func (c *current) onSection0Element378() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element378() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element378()
}

func (c *current) onSection0Element384() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element384() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element384()
}

func (c *current) onSection0Element372() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element372() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element372()
}

func (c *current) onSection0Element359(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonSection0Element359() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element359(stack["kind"], stack["author"])
}

func (c *current) onSection0Element402() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element402() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element402()
}

func (c *current) onSection0Element407() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element407() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element407()
}

func (c *current) onSection0Element398(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonSection0Element398() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element398(stack["kind"])
}

func (c *current) onSection0Element410(attribute interface{}) error {
	c.state["verse"] = true
	return nil
}

func (p *parser) callonSection0Element410() error {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element410(stack["attribute"])
}

func (c *current) onSection0Element290(attribute interface{}) (interface{}, error) {
	return attribute, nil
}

func (p *parser) callonSection0Element290() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element290(stack["attribute"])
}

func (c *current) onSection0Element416() (interface{}, error) {
	return types.Tip, nil

}

func (p *parser) callonSection0Element416() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element416()
}

func (c *current) onSection0Element418() (interface{}, error) {
	return types.Note, nil

}

func (p *parser) callonSection0Element418() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element418()
}

func (c *current) onSection0Element420() (interface{}, error) {
	return types.Important, nil

}

func (p *parser) callonSection0Element420() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element420()
}

func (c *current) onSection0Element422() (interface{}, error) {
	return types.Warning, nil

}

func (p *parser) callonSection0Element422() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element422()
}

func (c *current) onSection0Element424() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection0Element424() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element424()
}

func (c *current) onSection0Element411(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection0Element411() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element411(stack["k"])
}

func (c *current) onSection0Element427() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection0Element427() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element427()
}

func (c *current) onSection0Element435() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element435() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element435()
}

func (c *current) onSection0Element446() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element446() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element446()
}

func (c *current) onSection0Element449() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element449() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element449()
}

func (c *current) onSection0Element452() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element452() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element452()
}

func (c *current) onSection0Element457() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element457() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element457()
}

func (c *current) onSection0Element464() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element464() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element464()
}

func (c *current) onSection0Element460() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element460() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element460()
}

func (c *current) onSection0Element466() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element466() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element466()
}

func (c *current) onSection0Element443(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element443() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element443(stack["key"])
}

func (c *current) onSection0Element481() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element481() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element481()
}

func (c *current) onSection0Element488() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element488() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element488()
}

func (c *current) onSection0Element484() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element484() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element484()
}

func (c *current) onSection0Element490() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element490() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element490()
}

func (c *current) onSection0Element477(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element477() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element477(stack["value"])
}

func (c *current) onSection0Element504() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element504() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element504()
}

func (c *current) onSection0Element440(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection0Element440() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element440(stack["key"], stack["value"])
}

func (c *current) onSection0Element512() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element512() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element512()
}

func (c *current) onSection0Element515() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element515() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element515()
}

func (c *current) onSection0Element518() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element518() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element518()
}

func (c *current) onSection0Element523() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element523() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element523()
}

func (c *current) onSection0Element530() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element530() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element530()
}

func (c *current) onSection0Element526() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element526() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element526()
}

func (c *current) onSection0Element532() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element532() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element532()
}

func (c *current) onSection0Element509(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element509() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element509(stack["key"])
}

func (c *current) onSection0Element546() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element546() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element546()
}

func (c *current) onSection0Element506(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection0Element506() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element506(stack["key"])
}

func (c *current) onSection0Element429(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection0Element429() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element429(stack["attributes"])
}

func (c *current) onSection0Element552() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection0Element552() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element552()
}

func (c *current) onSection0Element13(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection0Element13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element13(stack["attr"])
}

func (c *current) onSection0Element1(attributes, element interface{}) (interface{}, error) {
	return types.WithAttributes(element, attributes.([]interface{}))
}

func (p *parser) callonSection0Element1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection0Element1(stack["attributes"], stack["element"])
}

func (c *current) onSection11(header, elements interface{}) (interface{}, error) {
	return types.NewSection(1, header.(types.SectionTitle), elements.([]interface{}))
}

func (p *parser) callonSection11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection11(stack["header"], stack["elements"])
}

func (c *current) onSection1Title7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title7()
}

func (c *current) onSection1Title20() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title20() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title20()
}

func (c *current) onSection1Title32() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title32() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title32()
}

func (c *current) onSection1Title23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title23()
}

func (c *current) onSection1Title17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title17()
}

func (c *current) onSection1Title49() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Title49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title49()
}

func (c *current) onSection1Title13(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonSection1Title13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title13(stack["id"])
}

func (c *current) onSection1Title1(elements, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(elements.(types.InlineElements), id.([]interface{}))
}

func (p *parser) callonSection1Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Title1(stack["elements"], stack["id"])
}

func (c *current) onSection1Element9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element9()
}

func (c *current) onSection1Element26() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element26()
}

func (c *current) onSection1Element38() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element38() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element38()
}

func (c *current) onSection1Element29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element29()
}

func (c *current) onSection1Element23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element23()
}

func (c *current) onSection1Element19(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection1Element19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element19(stack["id"])
}

func (c *current) onSection1Element59() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element59() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element59()
}

func (c *current) onSection1Element71() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element71()
}

func (c *current) onSection1Element62() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element62() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element62()
}

func (c *current) onSection1Element56() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element56() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element56()
}

func (c *current) onSection1Element52(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection1Element52() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element52(stack["id"])
}

func (c *current) onSection1Element93() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element93() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element93()
}

func (c *current) onSection1Element99() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element99() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element99()
}

func (c *current) onSection1Element106() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element106()
}

func (c *current) onSection1Element102() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element102()
}

func (c *current) onSection1Element108() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element108() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element108()
}

func (c *current) onSection1Element96() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element96() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element96()
}

func (c *current) onSection1Element85(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection1Element85() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element85(stack["title"])
}

func (c *current) onSection1Element121() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element121()
}

func (c *current) onSection1Element127() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element127() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element127()
}

func (c *current) onSection1Element134() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element134() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element134()
}

func (c *current) onSection1Element130() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element130()
}

func (c *current) onSection1Element136() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element136() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element136()
}

func (c *current) onSection1Element124() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element124()
}

func (c *current) onSection1Element115(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection1Element115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element115(stack["role"])
}

func (c *current) onSection1Element146() (interface{}, error) {
	return types.NewSourceAttributes("")
}

func (p *parser) callonSection1Element146() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element146()
}

func (c *current) onSection1Element155() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element155() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element155()
}

func (c *current) onSection1Element162() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element162() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element162()
}

func (c *current) onSection1Element158() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element158() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element158()
}

func (c *current) onSection1Element164() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection1Element164() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element164()
}

func (c *current) onSection1Element152() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection1Element152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element152()
}

func (c *current) onSection1Element148(language interface{}) (interface{}, error) {
	return types.NewSourceAttributes(language.(string))
}

func (p *parser) callonSection1Element148() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element148(stack["language"])
}

func (c *current) onSection1Element178() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element178() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element178()
}

func (c *current) onSection1Element183() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element183() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element183()
}

func (c *current) onSection1Element190() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element190() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element190()
}

func (c *current) onSection1Element197() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element197() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element197()
}

func (c *current) onSection1Element193() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element193() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element193()
}

func (c *current) onSection1Element199() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element199() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element199()
}

func (c *current) onSection1Element187() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element187() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element187()
}

func (c *current) onSection1Element217() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element217() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element217()
}

func (c *current) onSection1Element224() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element224() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element224()
}

func (c *current) onSection1Element220() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element220() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element220()
}

func (c *current) onSection1Element214() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element214() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element214()
}

func (c *current) onSection1Element174(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))
}

func (p *parser) callonSection1Element174() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element174(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onSection1Element243() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element243() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element243()
}

func (c *current) onSection1Element248() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element248() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element248()
}

func (c *current) onSection1Element255() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element255() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element255()
}

func (c *current) onSection1Element262() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element262() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element262()
}

func (c *current) onSection1Element258() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element258() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element258()
}

func (c *current) onSection1Element264() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element264() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element264()
}

func (c *current) onSection1Element252() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element252() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element252()
}

func (c *current) onSection1Element239(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")
}

func (p *parser) callonSection1Element239() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element239(stack["kind"], stack["author"])
}

func (c *current) onSection1Element282() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element282() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element282()
}

func (c *current) onSection1Element287() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element287() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element287()
}

func (c *current) onSection1Element278(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")
}

func (p *parser) callonSection1Element278() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element278(stack["kind"])
}

func (c *current) onSection1Element298() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element298() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element298()
}

func (c *current) onSection1Element303() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element303() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element303()
}

func (c *current) onSection1Element310() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element310() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element310()
}

func (c *current) onSection1Element317() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element317() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element317()
}

func (c *current) onSection1Element313() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element313() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element313()
}

func (c *current) onSection1Element319() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element319() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element319()
}

func (c *current) onSection1Element307() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element307() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element307()
}

func (c *current) onSection1Element337() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element337() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element337()
}

func (c *current) onSection1Element344() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element344() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element344()
}

func (c *current) onSection1Element340() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element340() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element340()
}

func (c *current) onSection1Element334() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element334() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element334()
}

func (c *current) onSection1Element294(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonSection1Element294() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element294(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onSection1Element363() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element363() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element363()
}

func (c *current) onSection1Element368() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element368() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element368()
}

func (c *current) onSection1Element375() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element375() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element375()
}

func (c *current) onSection1Element382() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element382() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element382()
}

func (c *current) onSection1Element378() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element378() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element378()
}

func (c *current) onSection1Element384() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element384() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element384()
}

func (c *current) onSection1Element372() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element372() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element372()
}

func (c *current) onSection1Element359(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonSection1Element359() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element359(stack["kind"], stack["author"])
}

func (c *current) onSection1Element402() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element402() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element402()
}

func (c *current) onSection1Element407() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element407() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element407()
}

func (c *current) onSection1Element398(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonSection1Element398() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element398(stack["kind"])
}

func (c *current) onSection1Element410(attribute interface{}) error {
	c.state["verse"] = true
	return nil
}

func (p *parser) callonSection1Element410() error {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element410(stack["attribute"])
}

func (c *current) onSection1Element290(attribute interface{}) (interface{}, error) {
	return attribute, nil
}

func (p *parser) callonSection1Element290() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element290(stack["attribute"])
}

func (c *current) onSection1Element416() (interface{}, error) {
	return types.Tip, nil

}

func (p *parser) callonSection1Element416() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element416()
}

func (c *current) onSection1Element418() (interface{}, error) {
	return types.Note, nil

}

func (p *parser) callonSection1Element418() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element418()
}

func (c *current) onSection1Element420() (interface{}, error) {
	return types.Important, nil

}

func (p *parser) callonSection1Element420() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element420()
}

func (c *current) onSection1Element422() (interface{}, error) {
	return types.Warning, nil

}

func (p *parser) callonSection1Element422() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element422()
}

func (c *current) onSection1Element424() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection1Element424() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element424()
}

func (c *current) onSection1Element411(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection1Element411() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element411(stack["k"])
}

func (c *current) onSection1Element427() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection1Element427() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element427()
}

func (c *current) onSection1Element435() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element435() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element435()
}

func (c *current) onSection1Element446() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element446() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element446()
}

func (c *current) onSection1Element449() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element449() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element449()
}

func (c *current) onSection1Element452() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element452() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element452()
}

func (c *current) onSection1Element457() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element457() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element457()
}

func (c *current) onSection1Element464() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element464() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element464()
}

func (c *current) onSection1Element460() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element460() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element460()
}

func (c *current) onSection1Element466() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element466() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element466()
}

func (c *current) onSection1Element443(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element443() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element443(stack["key"])
}

func (c *current) onSection1Element481() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element481() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element481()
}

func (c *current) onSection1Element488() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element488() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element488()
}

func (c *current) onSection1Element484() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element484() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element484()
}

func (c *current) onSection1Element490() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element490() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element490()
}

func (c *current) onSection1Element477(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element477() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element477(stack["value"])
}

func (c *current) onSection1Element504() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element504() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element504()
}

func (c *current) onSection1Element440(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection1Element440() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element440(stack["key"], stack["value"])
}

func (c *current) onSection1Element512() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element512() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element512()
}

func (c *current) onSection1Element515() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element515() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element515()
}

func (c *current) onSection1Element518() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element518() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element518()
}

func (c *current) onSection1Element523() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element523() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element523()
}

func (c *current) onSection1Element530() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element530() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element530()
}

func (c *current) onSection1Element526() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element526() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element526()
}

func (c *current) onSection1Element532() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element532() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element532()
}

func (c *current) onSection1Element509(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element509() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element509(stack["key"])
}

func (c *current) onSection1Element546() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element546() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element546()
}

func (c *current) onSection1Element506(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection1Element506() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element506(stack["key"])
}

func (c *current) onSection1Element429(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection1Element429() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element429(stack["attributes"])
}

func (c *current) onSection1Element552() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection1Element552() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element552()
}

func (c *current) onSection1Element13(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection1Element13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element13(stack["attr"])
}

func (c *current) onSection1Element1(attributes, element interface{}) (interface{}, error) {
	return types.WithAttributes(element, attributes.([]interface{}))
}

func (p *parser) callonSection1Element1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection1Element1(stack["attributes"], stack["element"])
}

func (c *current) onSection21(header, elements interface{}) (interface{}, error) {
	return types.NewSection(2, header.(types.SectionTitle), elements.([]interface{}))
}

func (p *parser) callonSection21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection21(stack["header"], stack["elements"])
}

func (c *current) onSection2Title7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title7()
}

func (c *current) onSection2Title20() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title20() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title20()
}

func (c *current) onSection2Title32() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title32() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title32()
}

func (c *current) onSection2Title23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title23()
}

func (c *current) onSection2Title17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title17()
}

func (c *current) onSection2Title49() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Title49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title49()
}

func (c *current) onSection2Title13(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonSection2Title13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title13(stack["id"])
}

func (c *current) onSection2Title1(elements, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(elements.(types.InlineElements), id.([]interface{}))
	return types.NewSectionTitle(elements.(types.InlineElements), id.([]interface{}))
	return types.NewSectionTitle(elements.(types.InlineElements), id.([]interface{}))
	return types.NewSectionTitle(elements.(types.InlineElements), id.([]interface{}))
	return types.NewSectionTitle(elements.(types.InlineElements), id.([]interface{}))
}

func (p *parser) callonSection2Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Title1(stack["elements"], stack["id"])
}

func (c *current) onSection2Element9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element9()
}

func (c *current) onSection2Element17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element17()
}

func (c *current) onSection2Element34() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element34() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element34()
}

func (c *current) onSection2Element46() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element46() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element46()
}

func (c *current) onSection2Element37() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element37()
}

func (c *current) onSection2Element31() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element31() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element31()
}

func (c *current) onSection2Element27(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection2Element27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element27(stack["id"])
}

func (c *current) onSection2Element67() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element67()
}

func (c *current) onSection2Element79() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element79() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element79()
}

func (c *current) onSection2Element70() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element70() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element70()
}

func (c *current) onSection2Element64() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element64() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element64()
}

func (c *current) onSection2Element60(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection2Element60() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element60(stack["id"])
}

func (c *current) onSection2Element101() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element101() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element101()
}

func (c *current) onSection2Element107() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element107()
}

func (c *current) onSection2Element114() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element114() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element114()
}

func (c *current) onSection2Element110() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element110() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element110()
}

func (c *current) onSection2Element116() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element116()
}

func (c *current) onSection2Element104() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element104() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element104()
}

func (c *current) onSection2Element93(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection2Element93() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element93(stack["title"])
}

func (c *current) onSection2Element129() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element129()
}

func (c *current) onSection2Element135() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element135() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element135()
}

func (c *current) onSection2Element142() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element142() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element142()
}

func (c *current) onSection2Element138() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element138()
}

func (c *current) onSection2Element144() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element144()
}

func (c *current) onSection2Element132() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element132() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element132()
}

func (c *current) onSection2Element123(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection2Element123() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element123(stack["role"])
}

func (c *current) onSection2Element154() (interface{}, error) {
	return types.NewSourceAttributes("")
}

func (p *parser) callonSection2Element154() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element154()
}

func (c *current) onSection2Element163() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element163() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element163()
}

func (c *current) onSection2Element170() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element170() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element170()
}

func (c *current) onSection2Element166() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element166() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element166()
}

func (c *current) onSection2Element172() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection2Element172() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element172()
}

func (c *current) onSection2Element160() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection2Element160() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element160()
}

func (c *current) onSection2Element156(language interface{}) (interface{}, error) {
	return types.NewSourceAttributes(language.(string))
}

func (p *parser) callonSection2Element156() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element156(stack["language"])
}

func (c *current) onSection2Element186() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element186() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element186()
}

func (c *current) onSection2Element191() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element191() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element191()
}

func (c *current) onSection2Element198() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element198()
}

func (c *current) onSection2Element205() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element205() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element205()
}

func (c *current) onSection2Element201() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element201() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element201()
}

func (c *current) onSection2Element207() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element207() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element207()
}

func (c *current) onSection2Element195() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element195() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element195()
}

func (c *current) onSection2Element225() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element225() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element225()
}

func (c *current) onSection2Element232() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element232() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element232()
}

func (c *current) onSection2Element228() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element228() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element228()
}

func (c *current) onSection2Element222() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element222() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element222()
}

func (c *current) onSection2Element182(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))
}

func (p *parser) callonSection2Element182() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element182(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onSection2Element251() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element251() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element251()
}

func (c *current) onSection2Element256() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element256() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element256()
}

func (c *current) onSection2Element263() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element263() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element263()
}

func (c *current) onSection2Element270() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element270() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element270()
}

func (c *current) onSection2Element266() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element266() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element266()
}

func (c *current) onSection2Element272() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element272() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element272()
}

func (c *current) onSection2Element260() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element260() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element260()
}

func (c *current) onSection2Element247(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")
}

func (p *parser) callonSection2Element247() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element247(stack["kind"], stack["author"])
}

func (c *current) onSection2Element290() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element290() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element290()
}

func (c *current) onSection2Element295() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element295() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element295()
}

func (c *current) onSection2Element286(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")
}

func (p *parser) callonSection2Element286() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element286(stack["kind"])
}

func (c *current) onSection2Element306() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element306() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element306()
}

func (c *current) onSection2Element311() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element311() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element311()
}

func (c *current) onSection2Element318() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element318() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element318()
}

func (c *current) onSection2Element325() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element325() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element325()
}

func (c *current) onSection2Element321() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element321() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element321()
}

func (c *current) onSection2Element327() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element327() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element327()
}

func (c *current) onSection2Element315() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element315() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element315()
}

func (c *current) onSection2Element345() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element345() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element345()
}

func (c *current) onSection2Element352() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element352() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element352()
}

func (c *current) onSection2Element348() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element348() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element348()
}

func (c *current) onSection2Element342() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element342() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element342()
}

func (c *current) onSection2Element302(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonSection2Element302() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element302(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onSection2Element371() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element371() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element371()
}

func (c *current) onSection2Element376() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element376() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element376()
}

func (c *current) onSection2Element383() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element383() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element383()
}

func (c *current) onSection2Element390() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element390() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element390()
}

func (c *current) onSection2Element386() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element386() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element386()
}

func (c *current) onSection2Element392() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element392() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element392()
}

func (c *current) onSection2Element380() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element380() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element380()
}

func (c *current) onSection2Element367(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonSection2Element367() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element367(stack["kind"], stack["author"])
}

func (c *current) onSection2Element410() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element410() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element410()
}

func (c *current) onSection2Element415() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element415() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element415()
}

func (c *current) onSection2Element406(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonSection2Element406() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element406(stack["kind"])
}

func (c *current) onSection2Element418(attribute interface{}) error {
	c.state["verse"] = true
	return nil
}

func (p *parser) callonSection2Element418() error {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element418(stack["attribute"])
}

func (c *current) onSection2Element298(attribute interface{}) (interface{}, error) {
	return attribute, nil
}

func (p *parser) callonSection2Element298() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element298(stack["attribute"])
}

func (c *current) onSection2Element424() (interface{}, error) {
	return types.Tip, nil

}

func (p *parser) callonSection2Element424() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element424()
}

func (c *current) onSection2Element426() (interface{}, error) {
	return types.Note, nil

}

func (p *parser) callonSection2Element426() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element426()
}

func (c *current) onSection2Element428() (interface{}, error) {
	return types.Important, nil

}

func (p *parser) callonSection2Element428() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element428()
}

func (c *current) onSection2Element430() (interface{}, error) {
	return types.Warning, nil

}

func (p *parser) callonSection2Element430() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element430()
}

func (c *current) onSection2Element432() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection2Element432() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element432()
}

func (c *current) onSection2Element419(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection2Element419() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element419(stack["k"])
}

func (c *current) onSection2Element435() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection2Element435() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element435()
}

func (c *current) onSection2Element443() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element443() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element443()
}

func (c *current) onSection2Element454() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element454() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element454()
}

func (c *current) onSection2Element457() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element457() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element457()
}

func (c *current) onSection2Element460() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element460() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element460()
}

func (c *current) onSection2Element465() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element465() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element465()
}

func (c *current) onSection2Element472() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element472() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element472()
}

func (c *current) onSection2Element468() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element468() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element468()
}

func (c *current) onSection2Element474() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element474() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element474()
}

func (c *current) onSection2Element451(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element451() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element451(stack["key"])
}

func (c *current) onSection2Element489() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element489() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element489()
}

func (c *current) onSection2Element496() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element496() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element496()
}

func (c *current) onSection2Element492() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element492() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element492()
}

func (c *current) onSection2Element498() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element498() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element498()
}

func (c *current) onSection2Element485(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element485() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element485(stack["value"])
}

func (c *current) onSection2Element512() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element512() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element512()
}

func (c *current) onSection2Element448(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection2Element448() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element448(stack["key"], stack["value"])
}

func (c *current) onSection2Element520() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element520() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element520()
}

func (c *current) onSection2Element523() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element523() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element523()
}

func (c *current) onSection2Element526() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element526() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element526()
}

func (c *current) onSection2Element531() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element531() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element531()
}

func (c *current) onSection2Element538() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element538() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element538()
}

func (c *current) onSection2Element534() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element534() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element534()
}

func (c *current) onSection2Element540() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element540() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element540()
}

func (c *current) onSection2Element517(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element517() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element517(stack["key"])
}

func (c *current) onSection2Element554() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element554() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element554()
}

func (c *current) onSection2Element514(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection2Element514() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element514(stack["key"])
}

func (c *current) onSection2Element437(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection2Element437() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element437(stack["attributes"])
}

func (c *current) onSection2Element560() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection2Element560() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element560()
}

func (c *current) onSection2Element21(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection2Element21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element21(stack["attr"])
}

func (c *current) onSection2Element1(attributes, element interface{}) (interface{}, error) {
	return types.WithAttributes(element, attributes.([]interface{}))
}

func (p *parser) callonSection2Element1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection2Element1(stack["attributes"], stack["element"])
}

func (c *current) onSection31(header, elements interface{}) (interface{}, error) {
	return types.NewSection(3, header.(types.SectionTitle), elements.([]interface{}))
}

func (p *parser) callonSection31() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection31(stack["header"], stack["elements"])
}

func (c *current) onSection3Title7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title7()
}

func (c *current) onSection3Title20() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title20() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title20()
}

func (c *current) onSection3Title32() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title32() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title32()
}

func (c *current) onSection3Title23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title23()
}

func (c *current) onSection3Title17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title17()
}

func (c *current) onSection3Title49() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Title49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title49()
}

func (c *current) onSection3Title13(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonSection3Title13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title13(stack["id"])
}

func (c *current) onSection3Title1(elements, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(elements.(types.InlineElements), id.([]interface{}))
	return types.NewSectionTitle(elements.(types.InlineElements), id.([]interface{}))
	return types.NewSectionTitle(elements.(types.InlineElements), id.([]interface{}))
	return types.NewSectionTitle(elements.(types.InlineElements), id.([]interface{}))
	return types.NewSectionTitle(elements.(types.InlineElements), id.([]interface{}))
}

func (p *parser) callonSection3Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Title1(stack["elements"], stack["id"])
}

func (c *current) onSection3Element9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element9()
}

func (c *current) onSection3Element17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element17()
}

func (c *current) onSection3Element25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element25()
}

func (c *current) onSection3Element42() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element42() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element42()
}

func (c *current) onSection3Element54() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element54() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element54()
}

func (c *current) onSection3Element45() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element45() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element45()
}

func (c *current) onSection3Element39() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element39()
}

func (c *current) onSection3Element35(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection3Element35() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element35(stack["id"])
}

func (c *current) onSection3Element75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element75()
}

func (c *current) onSection3Element87() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element87() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element87()
}

func (c *current) onSection3Element78() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element78()
}

func (c *current) onSection3Element72() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element72() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element72()
}

func (c *current) onSection3Element68(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection3Element68() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element68(stack["id"])
}

func (c *current) onSection3Element109() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element109() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element109()
}

func (c *current) onSection3Element115() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element115()
}

func (c *current) onSection3Element122() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element122()
}

func (c *current) onSection3Element118() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element118() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element118()
}

func (c *current) onSection3Element124() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element124()
}

func (c *current) onSection3Element112() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element112() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element112()
}

func (c *current) onSection3Element101(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection3Element101() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element101(stack["title"])
}

func (c *current) onSection3Element137() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element137() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element137()
}

func (c *current) onSection3Element143() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element143() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element143()
}

func (c *current) onSection3Element150() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element150() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element150()
}

func (c *current) onSection3Element146() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element146() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element146()
}

func (c *current) onSection3Element152() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element152()
}

func (c *current) onSection3Element140() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element140() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element140()
}

func (c *current) onSection3Element131(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection3Element131() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element131(stack["role"])
}

func (c *current) onSection3Element162() (interface{}, error) {
	return types.NewSourceAttributes("")
}

func (p *parser) callonSection3Element162() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element162()
}

func (c *current) onSection3Element171() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element171() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element171()
}

func (c *current) onSection3Element178() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element178() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element178()
}

func (c *current) onSection3Element174() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element174() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element174()
}

func (c *current) onSection3Element180() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection3Element180() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element180()
}

func (c *current) onSection3Element168() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection3Element168() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element168()
}

func (c *current) onSection3Element164(language interface{}) (interface{}, error) {
	return types.NewSourceAttributes(language.(string))
}

func (p *parser) callonSection3Element164() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element164(stack["language"])
}

func (c *current) onSection3Element194() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element194() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element194()
}

func (c *current) onSection3Element199() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element199() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element199()
}

func (c *current) onSection3Element206() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element206() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element206()
}

func (c *current) onSection3Element213() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element213() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element213()
}

func (c *current) onSection3Element209() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element209() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element209()
}

func (c *current) onSection3Element215() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element215() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element215()
}

func (c *current) onSection3Element203() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element203() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element203()
}

func (c *current) onSection3Element233() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element233() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element233()
}

func (c *current) onSection3Element240() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element240() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element240()
}

func (c *current) onSection3Element236() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element236() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element236()
}

func (c *current) onSection3Element230() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element230() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element230()
}

func (c *current) onSection3Element190(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))
}

func (p *parser) callonSection3Element190() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element190(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onSection3Element259() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element259() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element259()
}

func (c *current) onSection3Element264() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element264() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element264()
}

func (c *current) onSection3Element271() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element271() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element271()
}

func (c *current) onSection3Element278() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element278() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element278()
}

func (c *current) onSection3Element274() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element274() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element274()
}

func (c *current) onSection3Element280() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element280() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element280()
}

func (c *current) onSection3Element268() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element268() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element268()
}

func (c *current) onSection3Element255(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")
}

func (p *parser) callonSection3Element255() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element255(stack["kind"], stack["author"])
}

func (c *current) onSection3Element298() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element298() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element298()
}

func (c *current) onSection3Element303() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element303() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element303()
}

func (c *current) onSection3Element294(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")
}

func (p *parser) callonSection3Element294() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element294(stack["kind"])
}

func (c *current) onSection3Element314() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element314() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element314()
}

func (c *current) onSection3Element319() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element319() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element319()
}

func (c *current) onSection3Element326() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element326() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element326()
}

func (c *current) onSection3Element333() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element333() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element333()
}

func (c *current) onSection3Element329() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element329() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element329()
}

func (c *current) onSection3Element335() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element335() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element335()
}

func (c *current) onSection3Element323() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element323() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element323()
}

func (c *current) onSection3Element353() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element353() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element353()
}

func (c *current) onSection3Element360() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element360() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element360()
}

func (c *current) onSection3Element356() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element356() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element356()
}

func (c *current) onSection3Element350() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element350() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element350()
}

func (c *current) onSection3Element310(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonSection3Element310() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element310(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onSection3Element379() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element379() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element379()
}

func (c *current) onSection3Element384() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element384() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element384()
}

func (c *current) onSection3Element391() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element391() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element391()
}

func (c *current) onSection3Element398() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element398() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element398()
}

func (c *current) onSection3Element394() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element394() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element394()
}

func (c *current) onSection3Element400() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element400() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element400()
}

func (c *current) onSection3Element388() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element388() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element388()
}

func (c *current) onSection3Element375(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonSection3Element375() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element375(stack["kind"], stack["author"])
}

func (c *current) onSection3Element418() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element418() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element418()
}

func (c *current) onSection3Element423() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element423() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element423()
}

func (c *current) onSection3Element414(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonSection3Element414() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element414(stack["kind"])
}

func (c *current) onSection3Element426(attribute interface{}) error {
	c.state["verse"] = true
	return nil
}

func (p *parser) callonSection3Element426() error {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element426(stack["attribute"])
}

func (c *current) onSection3Element306(attribute interface{}) (interface{}, error) {
	return attribute, nil
}

func (p *parser) callonSection3Element306() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element306(stack["attribute"])
}

func (c *current) onSection3Element432() (interface{}, error) {
	return types.Tip, nil

}

func (p *parser) callonSection3Element432() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element432()
}

func (c *current) onSection3Element434() (interface{}, error) {
	return types.Note, nil

}

func (p *parser) callonSection3Element434() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element434()
}

func (c *current) onSection3Element436() (interface{}, error) {
	return types.Important, nil

}

func (p *parser) callonSection3Element436() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element436()
}

func (c *current) onSection3Element438() (interface{}, error) {
	return types.Warning, nil

}

func (p *parser) callonSection3Element438() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element438()
}

func (c *current) onSection3Element440() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection3Element440() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element440()
}

func (c *current) onSection3Element427(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection3Element427() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element427(stack["k"])
}

func (c *current) onSection3Element443() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection3Element443() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element443()
}

func (c *current) onSection3Element451() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element451() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element451()
}

func (c *current) onSection3Element462() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element462() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element462()
}

func (c *current) onSection3Element465() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element465() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element465()
}

func (c *current) onSection3Element468() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element468() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element468()
}

func (c *current) onSection3Element473() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element473() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element473()
}

func (c *current) onSection3Element480() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element480() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element480()
}

func (c *current) onSection3Element476() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element476() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element476()
}

func (c *current) onSection3Element482() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element482() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element482()
}

func (c *current) onSection3Element459(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element459() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element459(stack["key"])
}

func (c *current) onSection3Element497() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element497() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element497()
}

func (c *current) onSection3Element504() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element504() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element504()
}

func (c *current) onSection3Element500() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element500() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element500()
}

func (c *current) onSection3Element506() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element506() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element506()
}

func (c *current) onSection3Element493(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element493() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element493(stack["value"])
}

func (c *current) onSection3Element520() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element520() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element520()
}

func (c *current) onSection3Element456(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection3Element456() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element456(stack["key"], stack["value"])
}

func (c *current) onSection3Element528() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element528() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element528()
}

func (c *current) onSection3Element531() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element531() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element531()
}

func (c *current) onSection3Element534() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element534() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element534()
}

func (c *current) onSection3Element539() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element539() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element539()
}

func (c *current) onSection3Element546() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element546() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element546()
}

func (c *current) onSection3Element542() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element542() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element542()
}

func (c *current) onSection3Element548() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element548() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element548()
}

func (c *current) onSection3Element525(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element525() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element525(stack["key"])
}

func (c *current) onSection3Element562() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element562() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element562()
}

func (c *current) onSection3Element522(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection3Element522() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element522(stack["key"])
}

func (c *current) onSection3Element445(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection3Element445() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element445(stack["attributes"])
}

func (c *current) onSection3Element568() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection3Element568() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element568()
}

func (c *current) onSection3Element29(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection3Element29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element29(stack["attr"])
}

func (c *current) onSection3Element1(attributes, element interface{}) (interface{}, error) {
	return types.WithAttributes(element, attributes.([]interface{}))
}

func (p *parser) callonSection3Element1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection3Element1(stack["attributes"], stack["element"])
}

func (c *current) onSection41(header, elements interface{}) (interface{}, error) {
	return types.NewSection(4, header.(types.SectionTitle), elements.([]interface{}))
}

func (p *parser) callonSection41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection41(stack["header"], stack["elements"])
}

func (c *current) onSection4Title7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title7()
}

func (c *current) onSection4Title20() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title20() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title20()
}

func (c *current) onSection4Title32() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title32() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title32()
}

func (c *current) onSection4Title23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title23()
}

func (c *current) onSection4Title17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title17()
}

func (c *current) onSection4Title49() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Title49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title49()
}

func (c *current) onSection4Title13(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonSection4Title13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title13(stack["id"])
}

func (c *current) onSection4Title1(elements, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(elements.(types.InlineElements), id.([]interface{}))
}

func (p *parser) callonSection4Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Title1(stack["elements"], stack["id"])
}

func (c *current) onSection4Element9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element9()
}

func (c *current) onSection4Element17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element17()
}

func (c *current) onSection4Element25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element25()
}

func (c *current) onSection4Element33() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element33()
}

func (c *current) onSection4Element50() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element50() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element50()
}

func (c *current) onSection4Element62() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element62() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element62()
}

func (c *current) onSection4Element53() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element53() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element53()
}

func (c *current) onSection4Element47() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element47() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element47()
}

func (c *current) onSection4Element43(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection4Element43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element43(stack["id"])
}

func (c *current) onSection4Element83() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element83() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element83()
}

func (c *current) onSection4Element95() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element95()
}

func (c *current) onSection4Element86() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element86()
}

func (c *current) onSection4Element80() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element80() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element80()
}

func (c *current) onSection4Element76(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection4Element76() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element76(stack["id"])
}

func (c *current) onSection4Element117() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element117()
}

func (c *current) onSection4Element123() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element123() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element123()
}

func (c *current) onSection4Element130() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element130()
}

func (c *current) onSection4Element126() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element126() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element126()
}

func (c *current) onSection4Element132() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element132() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element132()
}

func (c *current) onSection4Element120() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element120() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element120()
}

func (c *current) onSection4Element109(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection4Element109() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element109(stack["title"])
}

func (c *current) onSection4Element145() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element145() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element145()
}

func (c *current) onSection4Element151() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element151() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element151()
}

func (c *current) onSection4Element158() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element158() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element158()
}

func (c *current) onSection4Element154() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element154() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element154()
}

func (c *current) onSection4Element160() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element160() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element160()
}

func (c *current) onSection4Element148() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element148() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element148()
}

func (c *current) onSection4Element139(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection4Element139() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element139(stack["role"])
}

func (c *current) onSection4Element170() (interface{}, error) {
	return types.NewSourceAttributes("")
}

func (p *parser) callonSection4Element170() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element170()
}

func (c *current) onSection4Element179() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element179()
}

func (c *current) onSection4Element186() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element186() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element186()
}

func (c *current) onSection4Element182() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element182() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element182()
}

func (c *current) onSection4Element188() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection4Element188() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element188()
}

func (c *current) onSection4Element176() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection4Element176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element176()
}

func (c *current) onSection4Element172(language interface{}) (interface{}, error) {
	return types.NewSourceAttributes(language.(string))
}

func (p *parser) callonSection4Element172() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element172(stack["language"])
}

func (c *current) onSection4Element202() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element202() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element202()
}

func (c *current) onSection4Element207() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element207() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element207()
}

func (c *current) onSection4Element214() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element214() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element214()
}

func (c *current) onSection4Element221() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element221() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element221()
}

func (c *current) onSection4Element217() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element217() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element217()
}

func (c *current) onSection4Element223() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element223() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element223()
}

func (c *current) onSection4Element211() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element211() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element211()
}

func (c *current) onSection4Element241() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element241() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element241()
}

func (c *current) onSection4Element248() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element248() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element248()
}

func (c *current) onSection4Element244() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element244() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element244()
}

func (c *current) onSection4Element238() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element238() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element238()
}

func (c *current) onSection4Element198(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))
}

func (p *parser) callonSection4Element198() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element198(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onSection4Element267() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element267() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element267()
}

func (c *current) onSection4Element272() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element272() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element272()
}

func (c *current) onSection4Element279() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element279() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element279()
}

func (c *current) onSection4Element286() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element286() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element286()
}

func (c *current) onSection4Element282() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element282() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element282()
}

func (c *current) onSection4Element288() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element288() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element288()
}

func (c *current) onSection4Element276() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element276() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element276()
}

func (c *current) onSection4Element263(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")
}

func (p *parser) callonSection4Element263() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element263(stack["kind"], stack["author"])
}

func (c *current) onSection4Element306() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element306() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element306()
}

func (c *current) onSection4Element311() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element311() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element311()
}

func (c *current) onSection4Element302(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")
}

func (p *parser) callonSection4Element302() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element302(stack["kind"])
}

func (c *current) onSection4Element322() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element322() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element322()
}

func (c *current) onSection4Element327() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element327() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element327()
}

func (c *current) onSection4Element334() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element334() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element334()
}

func (c *current) onSection4Element341() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element341() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element341()
}

func (c *current) onSection4Element337() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element337() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element337()
}

func (c *current) onSection4Element343() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element343() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element343()
}

func (c *current) onSection4Element331() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element331() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element331()
}

func (c *current) onSection4Element361() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element361() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element361()
}

func (c *current) onSection4Element368() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element368() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element368()
}

func (c *current) onSection4Element364() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element364() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element364()
}

func (c *current) onSection4Element358() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element358() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element358()
}

func (c *current) onSection4Element318(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonSection4Element318() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element318(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onSection4Element387() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element387() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element387()
}

func (c *current) onSection4Element392() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element392() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element392()
}

func (c *current) onSection4Element399() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element399() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element399()
}

func (c *current) onSection4Element406() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element406() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element406()
}

func (c *current) onSection4Element402() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element402() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element402()
}

func (c *current) onSection4Element408() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element408() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element408()
}

func (c *current) onSection4Element396() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element396() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element396()
}

func (c *current) onSection4Element383(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonSection4Element383() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element383(stack["kind"], stack["author"])
}

func (c *current) onSection4Element426() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element426() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element426()
}

func (c *current) onSection4Element431() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element431() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element431()
}

func (c *current) onSection4Element422(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonSection4Element422() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element422(stack["kind"])
}

func (c *current) onSection4Element434(attribute interface{}) error {
	c.state["verse"] = true
	return nil
}

func (p *parser) callonSection4Element434() error {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element434(stack["attribute"])
}

func (c *current) onSection4Element314(attribute interface{}) (interface{}, error) {
	return attribute, nil
}

func (p *parser) callonSection4Element314() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element314(stack["attribute"])
}

func (c *current) onSection4Element440() (interface{}, error) {
	return types.Tip, nil

}

func (p *parser) callonSection4Element440() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element440()
}

func (c *current) onSection4Element442() (interface{}, error) {
	return types.Note, nil

}

func (p *parser) callonSection4Element442() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element442()
}

func (c *current) onSection4Element444() (interface{}, error) {
	return types.Important, nil

}

func (p *parser) callonSection4Element444() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element444()
}

func (c *current) onSection4Element446() (interface{}, error) {
	return types.Warning, nil

}

func (p *parser) callonSection4Element446() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element446()
}

func (c *current) onSection4Element448() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection4Element448() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element448()
}

func (c *current) onSection4Element435(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection4Element435() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element435(stack["k"])
}

func (c *current) onSection4Element451() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection4Element451() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element451()
}

func (c *current) onSection4Element459() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element459() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element459()
}

func (c *current) onSection4Element470() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element470() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element470()
}

func (c *current) onSection4Element473() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element473() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element473()
}

func (c *current) onSection4Element476() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element476() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element476()
}

func (c *current) onSection4Element481() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element481() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element481()
}

func (c *current) onSection4Element488() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element488() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element488()
}

func (c *current) onSection4Element484() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element484() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element484()
}

func (c *current) onSection4Element490() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element490() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element490()
}

func (c *current) onSection4Element467(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element467() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element467(stack["key"])
}

func (c *current) onSection4Element505() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element505() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element505()
}

func (c *current) onSection4Element512() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element512() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element512()
}

func (c *current) onSection4Element508() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element508() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element508()
}

func (c *current) onSection4Element514() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element514() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element514()
}

func (c *current) onSection4Element501(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element501() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element501(stack["value"])
}

func (c *current) onSection4Element528() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element528() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element528()
}

func (c *current) onSection4Element464(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection4Element464() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element464(stack["key"], stack["value"])
}

func (c *current) onSection4Element536() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element536() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element536()
}

func (c *current) onSection4Element539() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element539() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element539()
}

func (c *current) onSection4Element542() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element542() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element542()
}

func (c *current) onSection4Element547() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element547() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element547()
}

func (c *current) onSection4Element554() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element554() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element554()
}

func (c *current) onSection4Element550() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element550() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element550()
}

func (c *current) onSection4Element556() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element556() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element556()
}

func (c *current) onSection4Element533(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element533() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element533(stack["key"])
}

func (c *current) onSection4Element570() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element570() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element570()
}

func (c *current) onSection4Element530(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection4Element530() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element530(stack["key"])
}

func (c *current) onSection4Element453(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection4Element453() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element453(stack["attributes"])
}

func (c *current) onSection4Element576() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection4Element576() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element576()
}

func (c *current) onSection4Element37(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection4Element37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element37(stack["attr"])
}

func (c *current) onSection4Element1(attributes, element interface{}) (interface{}, error) {
	return types.WithAttributes(element, attributes.([]interface{}))
}

func (p *parser) callonSection4Element1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection4Element1(stack["attributes"], stack["element"])
}

func (c *current) onSection51(header, elements interface{}) (interface{}, error) {
	return types.NewSection(5, header.(types.SectionTitle), elements.([]interface{}))
}

func (p *parser) callonSection51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection51(stack["header"], stack["elements"])
}

func (c *current) onSection5Title7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title7()
}

func (c *current) onSection5Title20() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title20() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title20()
}

func (c *current) onSection5Title32() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title32() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title32()
}

func (c *current) onSection5Title23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title23()
}

func (c *current) onSection5Title17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title17()
}

func (c *current) onSection5Title49() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Title49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title49()
}

func (c *current) onSection5Title13(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonSection5Title13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title13(stack["id"])
}

func (c *current) onSection5Title1(elements, id interface{}) (interface{}, error) {
	return types.NewSectionTitle(elements.(types.InlineElements), id.([]interface{}))
}

func (p *parser) callonSection5Title1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Title1(stack["elements"], stack["id"])
}

func (c *current) onSection5Element28() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element28() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element28()
}

func (c *current) onSection5Element40() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element40() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element40()
}

func (c *current) onSection5Element31() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element31() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element31()
}

func (c *current) onSection5Element25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element25()
}

func (c *current) onSection5Element21(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection5Element21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element21(stack["id"])
}

func (c *current) onSection5Element61() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element61() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element61()
}

func (c *current) onSection5Element73() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element73() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element73()
}

func (c *current) onSection5Element64() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element64() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element64()
}

func (c *current) onSection5Element58() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element58() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element58()
}

func (c *current) onSection5Element54(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonSection5Element54() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element54(stack["id"])
}

func (c *current) onSection5Element95() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element95()
}

func (c *current) onSection5Element101() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element101() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element101()
}

func (c *current) onSection5Element108() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element108() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element108()
}

func (c *current) onSection5Element104() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element104() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element104()
}

func (c *current) onSection5Element110() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element110() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element110()
}

func (c *current) onSection5Element98() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element98() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element98()
}

func (c *current) onSection5Element87(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonSection5Element87() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element87(stack["title"])
}

func (c *current) onSection5Element123() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element123() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element123()
}

func (c *current) onSection5Element129() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element129()
}

func (c *current) onSection5Element136() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element136() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element136()
}

func (c *current) onSection5Element132() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element132() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element132()
}

func (c *current) onSection5Element138() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element138()
}

func (c *current) onSection5Element126() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element126() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element126()
}

func (c *current) onSection5Element117(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonSection5Element117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element117(stack["role"])
}

func (c *current) onSection5Element148() (interface{}, error) {
	return types.NewSourceAttributes("")
}

func (p *parser) callonSection5Element148() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element148()
}

func (c *current) onSection5Element157() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element157() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element157()
}

func (c *current) onSection5Element164() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element164() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element164()
}

func (c *current) onSection5Element160() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element160() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element160()
}

func (c *current) onSection5Element166() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection5Element166() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element166()
}

func (c *current) onSection5Element154() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonSection5Element154() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element154()
}

func (c *current) onSection5Element150(language interface{}) (interface{}, error) {
	return types.NewSourceAttributes(language.(string))
}

func (p *parser) callonSection5Element150() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element150(stack["language"])
}

func (c *current) onSection5Element180() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element180() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element180()
}

func (c *current) onSection5Element185() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element185() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element185()
}

func (c *current) onSection5Element192() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element192() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element192()
}

func (c *current) onSection5Element199() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element199() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element199()
}

func (c *current) onSection5Element195() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element195() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element195()
}

func (c *current) onSection5Element201() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element201() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element201()
}

func (c *current) onSection5Element189() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element189() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element189()
}

func (c *current) onSection5Element219() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element219() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element219()
}

func (c *current) onSection5Element226() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element226() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element226()
}

func (c *current) onSection5Element222() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element222() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element222()
}

func (c *current) onSection5Element216() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element216() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element216()
}

func (c *current) onSection5Element176(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))
}

func (p *parser) callonSection5Element176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element176(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onSection5Element245() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element245() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element245()
}

func (c *current) onSection5Element250() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element250() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element250()
}

func (c *current) onSection5Element257() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element257() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element257()
}

func (c *current) onSection5Element264() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element264() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element264()
}

func (c *current) onSection5Element260() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element260() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element260()
}

func (c *current) onSection5Element266() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element266() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element266()
}

func (c *current) onSection5Element254() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element254() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element254()
}

func (c *current) onSection5Element241(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")
}

func (p *parser) callonSection5Element241() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element241(stack["kind"], stack["author"])
}

func (c *current) onSection5Element284() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element284() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element284()
}

func (c *current) onSection5Element289() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element289() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element289()
}

func (c *current) onSection5Element280(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")
}

func (p *parser) callonSection5Element280() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element280(stack["kind"])
}

func (c *current) onSection5Element300() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element300() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element300()
}

func (c *current) onSection5Element305() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element305() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element305()
}

func (c *current) onSection5Element312() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element312() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element312()
}

func (c *current) onSection5Element319() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element319() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element319()
}

func (c *current) onSection5Element315() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element315() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element315()
}

func (c *current) onSection5Element321() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element321() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element321()
}

func (c *current) onSection5Element309() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element309() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element309()
}

func (c *current) onSection5Element339() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element339() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element339()
}

func (c *current) onSection5Element346() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element346() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element346()
}

func (c *current) onSection5Element342() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element342() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element342()
}

func (c *current) onSection5Element336() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element336() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element336()
}

func (c *current) onSection5Element296(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonSection5Element296() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element296(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onSection5Element365() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element365() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element365()
}

func (c *current) onSection5Element370() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element370() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element370()
}

func (c *current) onSection5Element377() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element377() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element377()
}

func (c *current) onSection5Element384() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element384() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element384()
}

func (c *current) onSection5Element380() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element380() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element380()
}

func (c *current) onSection5Element386() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element386() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element386()
}

func (c *current) onSection5Element374() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element374() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element374()
}

func (c *current) onSection5Element361(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonSection5Element361() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element361(stack["kind"], stack["author"])
}

func (c *current) onSection5Element404() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element404() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element404()
}

func (c *current) onSection5Element409() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element409() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element409()
}

func (c *current) onSection5Element400(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonSection5Element400() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element400(stack["kind"])
}

func (c *current) onSection5Element412(attribute interface{}) error {
	c.state["verse"] = true
	return nil
}

func (p *parser) callonSection5Element412() error {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element412(stack["attribute"])
}

func (c *current) onSection5Element292(attribute interface{}) (interface{}, error) {
	return attribute, nil
}

func (p *parser) callonSection5Element292() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element292(stack["attribute"])
}

func (c *current) onSection5Element418() (interface{}, error) {
	return types.Tip, nil

}

func (p *parser) callonSection5Element418() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element418()
}

func (c *current) onSection5Element420() (interface{}, error) {
	return types.Note, nil

}

func (p *parser) callonSection5Element420() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element420()
}

func (c *current) onSection5Element422() (interface{}, error) {
	return types.Important, nil

}

func (p *parser) callonSection5Element422() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element422()
}

func (c *current) onSection5Element424() (interface{}, error) {
	return types.Warning, nil

}

func (p *parser) callonSection5Element424() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element424()
}

func (c *current) onSection5Element426() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonSection5Element426() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element426()
}

func (c *current) onSection5Element413(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonSection5Element413() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element413(stack["k"])
}

func (c *current) onSection5Element429() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonSection5Element429() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element429()
}

func (c *current) onSection5Element437() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element437() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element437()
}

func (c *current) onSection5Element448() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element448() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element448()
}

func (c *current) onSection5Element451() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element451() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element451()
}

func (c *current) onSection5Element454() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element454() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element454()
}

func (c *current) onSection5Element459() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element459() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element459()
}

func (c *current) onSection5Element466() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element466() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element466()
}

func (c *current) onSection5Element462() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element462() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element462()
}

func (c *current) onSection5Element468() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element468() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element468()
}

func (c *current) onSection5Element445(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element445() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element445(stack["key"])
}

func (c *current) onSection5Element483() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element483() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element483()
}

func (c *current) onSection5Element490() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element490() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element490()
}

func (c *current) onSection5Element486() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element486() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element486()
}

func (c *current) onSection5Element492() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element492() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element492()
}

func (c *current) onSection5Element479(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element479() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element479(stack["value"])
}

func (c *current) onSection5Element506() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element506() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element506()
}

func (c *current) onSection5Element442(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonSection5Element442() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element442(stack["key"], stack["value"])
}

func (c *current) onSection5Element514() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element514() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element514()
}

func (c *current) onSection5Element517() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element517() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element517()
}

func (c *current) onSection5Element520() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element520() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element520()
}

func (c *current) onSection5Element525() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element525() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element525()
}

func (c *current) onSection5Element532() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element532() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element532()
}

func (c *current) onSection5Element528() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element528() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element528()
}

func (c *current) onSection5Element534() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element534() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element534()
}

func (c *current) onSection5Element511(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element511() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element511(stack["key"])
}

func (c *current) onSection5Element548() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element548() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element548()
}

func (c *current) onSection5Element508(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonSection5Element508() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element508(stack["key"])
}

func (c *current) onSection5Element431(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonSection5Element431() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element431(stack["attributes"])
}

func (c *current) onSection5Element554() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSection5Element554() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element554()
}

func (c *current) onSection5Element15(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonSection5Element15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element15(stack["attr"])
}

func (c *current) onSection5Element1(attributes, element interface{}) (interface{}, error) {
	return types.WithAttributes(element, attributes.([]interface{}))
}

func (p *parser) callonSection5Element1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSection5Element1(stack["attributes"], stack["element"])
}

func (c *current) onTitleElements17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements17()
}

func (c *current) onTitleElements29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements29()
}

func (c *current) onTitleElements20() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements20() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements20()
}

func (c *current) onTitleElements14() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements14()
}

func (c *current) onTitleElements46() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElements46() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements46()
}

func (c *current) onTitleElements10(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonTitleElements10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements10(stack["id"])
}

func (c *current) onTitleElements1(elements interface{}) (interface{}, error) {
	// absorbs heading and trailing spaces
	return types.NewInlineElements(elements.([]interface{}))
}

func (p *parser) callonTitleElements1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElements1(stack["elements"])
}

func (c *current) onTitleElement8() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement8()
}

func (c *current) onTitleElement4() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement4()
}

func (c *current) onTitleElement10() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement10()
}

func (c *current) onTitleElement19() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement19()
}

func (c *current) onTitleElement31() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement31() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement31()
}

func (c *current) onTitleElement22() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement22() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement22()
}

func (c *current) onTitleElement16() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement16() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement16()
}

func (c *current) onTitleElement47() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement47() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement47()
}

func (c *current) onTitleElement54() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement54() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement54()
}

func (c *current) onTitleElement61() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement61() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement61()
}

func (c *current) onTitleElement57() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement57() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement57()
}

func (c *current) onTitleElement63() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement63()
}

func (c *current) onTitleElement51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement51()
}

func (c *current) onTitleElement12(id, label interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string), label.(string))
}

func (p *parser) callonTitleElement12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement12(stack["id"], stack["label"])
}

func (c *current) onTitleElement76() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement76() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement76()
}

func (c *current) onTitleElement88() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement88() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement88()
}

func (c *current) onTitleElement79() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement79() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement79()
}

func (c *current) onTitleElement73() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement73() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement73()
}

func (c *current) onTitleElement69(id interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string), nil)
}

func (p *parser) callonTitleElement69() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement69(stack["id"])
}

func (c *current) onTitleElement112() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement112() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement112()
}

func (c *current) onTitleElement124() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement124()
}

func (c *current) onTitleElement115() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement115()
}

func (c *current) onTitleElement109() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement109() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement109()
}

func (c *current) onTitleElement140() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement140() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement140()
}

func (c *current) onTitleElement147() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement147() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement147()
}

func (c *current) onTitleElement143() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement143() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement143()
}

func (c *current) onTitleElement149() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement149() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement149()
}

func (c *current) onTitleElement137() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement137() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement137()
}

func (c *current) onTitleElement163() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement163() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement163()
}

func (c *current) onTitleElement170() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement170() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement170()
}

func (c *current) onTitleElement166() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement166() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement166()
}

func (c *current) onTitleElement172() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement172() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement172()
}

func (c *current) onTitleElement160() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement160() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement160()
}

func (c *current) onTitleElement186() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement186() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement186()
}

func (c *current) onTitleElement193() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement193() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement193()
}

func (c *current) onTitleElement189() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement189() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement189()
}

func (c *current) onTitleElement195() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement195() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement195()
}

func (c *current) onTitleElement183() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement183() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement183()
}

func (c *current) onTitleElement215() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement215() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement215()
}

func (c *current) onTitleElement218() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement218() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement218()
}

func (c *current) onTitleElement221() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement221() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement221()
}

func (c *current) onTitleElement226() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement226() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement226()
}

func (c *current) onTitleElement233() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement233() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement233()
}

func (c *current) onTitleElement229() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement229() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement229()
}

func (c *current) onTitleElement235() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement235() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement235()
}

func (c *current) onTitleElement212(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement212() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement212(stack["key"])
}

func (c *current) onTitleElement250() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement250() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement250()
}

func (c *current) onTitleElement257() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement257() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement257()
}

func (c *current) onTitleElement253() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement253() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement253()
}

func (c *current) onTitleElement259() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement259() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement259()
}

func (c *current) onTitleElement246(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement246() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement246(stack["value"])
}

func (c *current) onTitleElement273() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement273() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement273()
}

func (c *current) onTitleElement209(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement209() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement209(stack["key"], stack["value"])
}

func (c *current) onTitleElement281() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement281() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement281()
}

func (c *current) onTitleElement284() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement284() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement284()
}

func (c *current) onTitleElement287() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement287() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement287()
}

func (c *current) onTitleElement292() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement292() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement292()
}

func (c *current) onTitleElement299() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement299() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement299()
}

func (c *current) onTitleElement295() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement295() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement295()
}

func (c *current) onTitleElement301() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement301() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement301()
}

func (c *current) onTitleElement278(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement278() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement278(stack["key"])
}

func (c *current) onTitleElement315() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement315() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement315()
}

func (c *current) onTitleElement275(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement275() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement275(stack["key"])
}

func (c *current) onTitleElement133(alt, width, height, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, height, otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement133() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement133(stack["alt"], stack["width"], stack["height"], stack["otherAttrs"])
}

func (c *current) onTitleElement325() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement325() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement325()
}

func (c *current) onTitleElement332() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement332() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement332()
}

func (c *current) onTitleElement328() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement328() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement328()
}

func (c *current) onTitleElement334() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement334() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement334()
}

func (c *current) onTitleElement322() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement322() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement322()
}

func (c *current) onTitleElement348() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement348() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement348()
}

func (c *current) onTitleElement355() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement355() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement355()
}

func (c *current) onTitleElement351() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement351() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement351()
}

func (c *current) onTitleElement357() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement357() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement357()
}

func (c *current) onTitleElement345() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement345() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement345()
}

func (c *current) onTitleElement377() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement377() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement377()
}

func (c *current) onTitleElement380() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement380() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement380()
}

func (c *current) onTitleElement383() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement383() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement383()
}

func (c *current) onTitleElement388() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement388() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement388()
}

func (c *current) onTitleElement395() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement395() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement395()
}

func (c *current) onTitleElement391() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement391() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement391()
}

func (c *current) onTitleElement397() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement397() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement397()
}

func (c *current) onTitleElement374(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement374() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement374(stack["key"])
}

func (c *current) onTitleElement412() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement412() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement412()
}

func (c *current) onTitleElement419() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement419() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement419()
}

func (c *current) onTitleElement415() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement415() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement415()
}

func (c *current) onTitleElement421() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement421() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement421()
}

func (c *current) onTitleElement408(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement408() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement408(stack["value"])
}

func (c *current) onTitleElement435() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement435() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement435()
}

func (c *current) onTitleElement371(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement371() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement371(stack["key"], stack["value"])
}

func (c *current) onTitleElement443() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement443() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement443()
}

func (c *current) onTitleElement446() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement446() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement446()
}

func (c *current) onTitleElement449() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement449() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement449()
}

func (c *current) onTitleElement454() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement454() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement454()
}

func (c *current) onTitleElement461() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement461() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement461()
}

func (c *current) onTitleElement457() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement457() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement457()
}

func (c *current) onTitleElement463() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement463() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement463()
}

func (c *current) onTitleElement440(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement440() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement440(stack["key"])
}

func (c *current) onTitleElement477() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement477() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement477()
}

func (c *current) onTitleElement437(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement437() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement437(stack["key"])
}

func (c *current) onTitleElement318(alt, width, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, nil, otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement318() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement318(stack["alt"], stack["width"], stack["otherAttrs"])
}

func (c *current) onTitleElement487() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement487() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement487()
}

func (c *current) onTitleElement494() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement494() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement494()
}

func (c *current) onTitleElement490() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement490() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement490()
}

func (c *current) onTitleElement496() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement496() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement496()
}

func (c *current) onTitleElement484() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonTitleElement484() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement484()
}

func (c *current) onTitleElement516() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement516() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement516()
}

func (c *current) onTitleElement519() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement519() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement519()
}

func (c *current) onTitleElement522() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement522() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement522()
}

func (c *current) onTitleElement527() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement527() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement527()
}

func (c *current) onTitleElement534() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement534() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement534()
}

func (c *current) onTitleElement530() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement530() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement530()
}

func (c *current) onTitleElement536() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement536() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement536()
}

func (c *current) onTitleElement513(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement513() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement513(stack["key"])
}

func (c *current) onTitleElement551() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement551() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement551()
}

func (c *current) onTitleElement558() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement558() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement558()
}

func (c *current) onTitleElement554() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement554() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement554()
}

func (c *current) onTitleElement560() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement560() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement560()
}

func (c *current) onTitleElement547(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement547() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement547(stack["value"])
}

func (c *current) onTitleElement574() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement574() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement574()
}

func (c *current) onTitleElement510(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement510() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement510(stack["key"], stack["value"])
}

func (c *current) onTitleElement582() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement582() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement582()
}

func (c *current) onTitleElement585() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement585() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement585()
}

func (c *current) onTitleElement588() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement588() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement588()
}

func (c *current) onTitleElement593() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement593() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement593()
}

func (c *current) onTitleElement600() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement600() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement600()
}

func (c *current) onTitleElement596() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement596() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement596()
}

func (c *current) onTitleElement602() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement602() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement602()
}

func (c *current) onTitleElement579(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement579() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement579(stack["key"])
}

func (c *current) onTitleElement616() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement616() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement616()
}

func (c *current) onTitleElement576(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement576() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement576(stack["key"])
}

func (c *current) onTitleElement480(alt, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, nil, nil, otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement480() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement480(stack["alt"], stack["otherAttrs"])
}

func (c *current) onTitleElement631() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement631() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement631()
}

func (c *current) onTitleElement634() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement634() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement634()
}

func (c *current) onTitleElement637() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement637() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement637()
}

func (c *current) onTitleElement642() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement642() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement642()
}

func (c *current) onTitleElement649() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement649() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement649()
}

func (c *current) onTitleElement645() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement645() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement645()
}

func (c *current) onTitleElement651() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement651() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement651()
}

func (c *current) onTitleElement628(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement628() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement628(stack["key"])
}

func (c *current) onTitleElement666() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement666() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement666()
}

func (c *current) onTitleElement673() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement673() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement673()
}

func (c *current) onTitleElement669() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement669() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement669()
}

func (c *current) onTitleElement675() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement675() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement675()
}

func (c *current) onTitleElement662(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement662() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement662(stack["value"])
}

func (c *current) onTitleElement689() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement689() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement689()
}

func (c *current) onTitleElement625(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement625() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement625(stack["key"], stack["value"])
}

func (c *current) onTitleElement697() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement697() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement697()
}

func (c *current) onTitleElement700() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement700() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement700()
}

func (c *current) onTitleElement703() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement703() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement703()
}

func (c *current) onTitleElement708() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement708() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement708()
}

func (c *current) onTitleElement715() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement715() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement715()
}

func (c *current) onTitleElement711() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement711() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement711()
}

func (c *current) onTitleElement717() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement717() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement717()
}

func (c *current) onTitleElement694(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement694() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement694(stack["key"])
}

func (c *current) onTitleElement731() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement731() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement731()
}

func (c *current) onTitleElement691(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement691() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement691(stack["key"])
}

func (c *current) onTitleElement619(otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(nil, nil, nil, otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement619() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement619(stack["otherAttrs"])
}

func (c *current) onTitleElement103(path, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineImage(path.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonTitleElement103() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement103(stack["path"], stack["inlineAttributes"])
}

func (c *current) onTitleElement753() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement753() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement753()
}

func (c *current) onTitleElement765() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement765() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement765()
}

func (c *current) onTitleElement756() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement756() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement756()
}

func (c *current) onTitleElement750() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement750() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement750()
}

func (c *current) onTitleElement741() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement741() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement741()
}

func (c *current) onTitleElement781() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement781() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement781()
}

func (c *current) onTitleElement788() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement788() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement788()
}

func (c *current) onTitleElement784() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement784() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement784()
}

func (c *current) onTitleElement790() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement790() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement790()
}

func (c *current) onTitleElement778() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement778() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement778()
}

func (c *current) onTitleElement804() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement804() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement804()
}

func (c *current) onTitleElement815() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement815() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement815()
}

func (c *current) onTitleElement818() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement818() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement818()
}

func (c *current) onTitleElement821() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement821() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement821()
}

func (c *current) onTitleElement826() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement826() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement826()
}

func (c *current) onTitleElement833() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement833() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement833()
}

func (c *current) onTitleElement829() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement829() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement829()
}

func (c *current) onTitleElement835() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement835() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement835()
}

func (c *current) onTitleElement812(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement812() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement812(stack["key"])
}

func (c *current) onTitleElement850() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement850() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement850()
}

func (c *current) onTitleElement857() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement857() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement857()
}

func (c *current) onTitleElement853() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement853() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement853()
}

func (c *current) onTitleElement859() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement859() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement859()
}

func (c *current) onTitleElement846(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement846() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement846(stack["value"])
}

func (c *current) onTitleElement873() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement873() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement873()
}

func (c *current) onTitleElement809(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement809() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement809(stack["key"], stack["value"])
}

func (c *current) onTitleElement881() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement881() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement881()
}

func (c *current) onTitleElement884() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement884() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement884()
}

func (c *current) onTitleElement887() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement887() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement887()
}

func (c *current) onTitleElement892() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement892() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement892()
}

func (c *current) onTitleElement899() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement899() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement899()
}

func (c *current) onTitleElement895() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement895() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement895()
}

func (c *current) onTitleElement901() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement901() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement901()
}

func (c *current) onTitleElement878(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement878() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement878(stack["key"])
}

func (c *current) onTitleElement915() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement915() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement915()
}

func (c *current) onTitleElement875(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement875() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement875(stack["key"])
}

func (c *current) onTitleElement774(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement774() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement774(stack["text"], stack["otherAttrs"])
}

func (c *current) onTitleElement930() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement930() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement930()
}

func (c *current) onTitleElement933() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement933() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement933()
}

func (c *current) onTitleElement936() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement936() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement936()
}

func (c *current) onTitleElement941() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement941() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement941()
}

func (c *current) onTitleElement948() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement948() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement948()
}

func (c *current) onTitleElement944() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement944() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement944()
}

func (c *current) onTitleElement950() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement950() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement950()
}

func (c *current) onTitleElement927(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement927() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement927(stack["key"])
}

func (c *current) onTitleElement965() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement965() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement965()
}

func (c *current) onTitleElement972() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement972() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement972()
}

func (c *current) onTitleElement968() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement968() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement968()
}

func (c *current) onTitleElement974() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement974() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement974()
}

func (c *current) onTitleElement961(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement961() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement961(stack["value"])
}

func (c *current) onTitleElement988() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement988() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement988()
}

func (c *current) onTitleElement924(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement924() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement924(stack["key"], stack["value"])
}

func (c *current) onTitleElement996() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement996() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement996()
}

func (c *current) onTitleElement999() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement999() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement999()
}

func (c *current) onTitleElement1002() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1002() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1002()
}

func (c *current) onTitleElement1007() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1007() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1007()
}

func (c *current) onTitleElement1014() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1014() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1014()
}

func (c *current) onTitleElement1010() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1010() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1010()
}

func (c *current) onTitleElement1016() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1016() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1016()
}

func (c *current) onTitleElement993(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement993() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement993(stack["key"])
}

func (c *current) onTitleElement1030() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1030() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1030()
}

func (c *current) onTitleElement990(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement990() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement990(stack["key"])
}

func (c *current) onTitleElement918(otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement918() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement918(stack["otherAttrs"])
}

func (c *current) onTitleElement737(url, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonTitleElement737() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement737(stack["url"], stack["inlineAttributes"])
}

func (c *current) onTitleElement1047() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1047() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1047()
}

func (c *current) onTitleElement1059() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1059() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1059()
}

func (c *current) onTitleElement1050() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1050() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1050()
}

func (c *current) onTitleElement1044() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1044() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1044()
}

func (c *current) onTitleElement1036() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1036() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1036()
}

func (c *current) onTitleElement1075() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1075() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1075()
}

func (c *current) onTitleElement1082() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1082() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1082()
}

func (c *current) onTitleElement1078() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1078() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1078()
}

func (c *current) onTitleElement1084() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1084() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1084()
}

func (c *current) onTitleElement1072() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1072() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1072()
}

func (c *current) onTitleElement1098() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1098() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1098()
}

func (c *current) onTitleElement1109() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1109() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1109()
}

func (c *current) onTitleElement1112() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1112() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1112()
}

func (c *current) onTitleElement1115() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1115()
}

func (c *current) onTitleElement1120() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1120() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1120()
}

func (c *current) onTitleElement1127() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1127() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1127()
}

func (c *current) onTitleElement1123() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1123() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1123()
}

func (c *current) onTitleElement1129() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1129()
}

func (c *current) onTitleElement1106(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1106(stack["key"])
}

func (c *current) onTitleElement1144() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1144()
}

func (c *current) onTitleElement1151() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1151() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1151()
}

func (c *current) onTitleElement1147() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1147() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1147()
}

func (c *current) onTitleElement1153() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1153() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1153()
}

func (c *current) onTitleElement1140(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1140() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1140(stack["value"])
}

func (c *current) onTitleElement1167() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1167() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1167()
}

func (c *current) onTitleElement1103(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement1103() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1103(stack["key"], stack["value"])
}

func (c *current) onTitleElement1175() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1175() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1175()
}

func (c *current) onTitleElement1178() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1178() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1178()
}

func (c *current) onTitleElement1181() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1181() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1181()
}

func (c *current) onTitleElement1186() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1186() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1186()
}

func (c *current) onTitleElement1193() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1193() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1193()
}

func (c *current) onTitleElement1189() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1189() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1189()
}

func (c *current) onTitleElement1195() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1195() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1195()
}

func (c *current) onTitleElement1172(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1172() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1172(stack["key"])
}

func (c *current) onTitleElement1209() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1209() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1209()
}

func (c *current) onTitleElement1169(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement1169() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1169(stack["key"])
}

func (c *current) onTitleElement1068(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement1068() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1068(stack["text"], stack["otherAttrs"])
}

func (c *current) onTitleElement1224() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1224() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1224()
}

func (c *current) onTitleElement1227() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1227() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1227()
}

func (c *current) onTitleElement1230() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1230() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1230()
}

func (c *current) onTitleElement1235() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1235() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1235()
}

func (c *current) onTitleElement1242() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1242() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1242()
}

func (c *current) onTitleElement1238() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1238() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1238()
}

func (c *current) onTitleElement1244() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1244() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1244()
}

func (c *current) onTitleElement1221(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1221() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1221(stack["key"])
}

func (c *current) onTitleElement1259() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1259() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1259()
}

func (c *current) onTitleElement1266() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1266() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1266()
}

func (c *current) onTitleElement1262() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1262() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1262()
}

func (c *current) onTitleElement1268() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1268() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1268()
}

func (c *current) onTitleElement1255(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1255() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1255(stack["value"])
}

func (c *current) onTitleElement1282() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1282() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1282()
}

func (c *current) onTitleElement1218(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonTitleElement1218() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1218(stack["key"], stack["value"])
}

func (c *current) onTitleElement1290() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1290() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1290()
}

func (c *current) onTitleElement1293() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1293() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1293()
}

func (c *current) onTitleElement1296() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1296() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1296()
}

func (c *current) onTitleElement1301() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1301() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1301()
}

func (c *current) onTitleElement1308() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1308() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1308()
}

func (c *current) onTitleElement1304() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1304() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1304()
}

func (c *current) onTitleElement1310() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1310() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1310()
}

func (c *current) onTitleElement1287(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1287() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1287(stack["key"])
}

func (c *current) onTitleElement1324() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1324() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1324()
}

func (c *current) onTitleElement1284(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonTitleElement1284() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1284(stack["key"])
}

func (c *current) onTitleElement1212(otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonTitleElement1212() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1212(stack["otherAttrs"])
}

func (c *current) onTitleElement1033(url, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonTitleElement1033() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1033(stack["url"], stack["inlineAttributes"])
}

func (c *current) onTitleElement1340() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1340() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1340()
}

func (c *current) onTitleElement1352() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1352() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1352()
}

func (c *current) onTitleElement1343() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1343() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1343()
}

func (c *current) onTitleElement1337() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1337() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1337()
}

func (c *current) onTitleElement1329() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1329() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1329()
}

func (c *current) onTitleElement1327(url interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), nil)
}

func (p *parser) callonTitleElement1327() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1327(stack["url"])
}

func (c *current) onTitleElement734(link interface{}) (interface{}, error) {
	return link, nil
}

func (p *parser) callonTitleElement734() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement734(stack["link"])
}

func (c *current) onTitleElement1360() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1360() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1360()
}

func (c *current) onTitleElement1368() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1368() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1368()
}

func (c *current) onTitleElement1364(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeSubstitution(name.(string))
}

func (p *parser) callonTitleElement1364() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1364(stack["name"])
}

func (c *current) onTitleElement1379() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1379() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1379()
}

func (c *current) onTitleElement1385() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1385() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1385()
}

func (c *current) onTitleElement1375() (interface{}, error) {
	return types.NewLineBreak()
}

func (p *parser) callonTitleElement1375() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1375()
}

func (c *current) onTitleElement1395() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1395() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1395()
}

func (c *current) onTitleElement1408() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1408() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1408()
}

func (c *current) onTitleElement1417() (interface{}, error) {
	// rule used withn `words` to detect superscript or subscript portions, eg in math formulae.
	return string(c.text), nil
}

func (p *parser) callonTitleElement1417() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1417()
}

func (c *current) onTitleElement1399() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTitleElement1399() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1399()
}

func (c *current) onTitleElement1393() (interface{}, error) {
	// word cannot contain parenthesis. Dots and ellipsis are treated as independent words (but will be combined afterwards)
	return string(c.text), nil
}

func (p *parser) callonTitleElement1393() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1393()
}

func (c *current) onTitleElement1(element interface{}) (interface{}, error) {
	return element, nil
}

func (p *parser) callonTitleElement1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTitleElement1(stack["element"])
}

func (c *current) onList1(elements interface{}) (interface{}, error) {
	return types.NewList(elements.([]interface{}))
}

func (p *parser) callonList1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onList1(stack["elements"])
}

func (c *current) onListParagraph1(lines interface{}) (interface{}, error) {
	return types.NewParagraph(lines.([]interface{}))
}

func (p *parser) callonListParagraph1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraph1(stack["lines"])
}

func (c *current) onListParagraphLine12() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine12()
}

func (c *current) onListParagraphLine4() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonListParagraphLine4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine4()
}

func (c *current) onListParagraphLine25() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine25()
}

func (c *current) onListParagraphLine29() (interface{}, error) {
	// numbering style: "....."
	return types.NewOrderedListItemPrefix(types.UpperRoman, 5)

}

func (p *parser) callonListParagraphLine29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine29()
}

func (c *current) onListParagraphLine31() (interface{}, error) {
	// numbering style: "...."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 4)

}

func (p *parser) callonListParagraphLine31() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine31()
}

func (c *current) onListParagraphLine33() (interface{}, error) {
	// numbering style: "..."
	return types.NewOrderedListItemPrefix(types.LowerRoman, 3)

}

func (p *parser) callonListParagraphLine33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine33()
}

func (c *current) onListParagraphLine35() (interface{}, error) {
	// numbering style: ".."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 2)

}

func (p *parser) callonListParagraphLine35() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine35()
}

func (c *current) onListParagraphLine37() (interface{}, error) {
	// numbering style: "."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)
	// explicit numbering

}

func (p *parser) callonListParagraphLine37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine37()
}

func (c *current) onListParagraphLine39() (interface{}, error) {
	// numbering style: "1."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)

}

func (p *parser) callonListParagraphLine39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine39()
}

func (c *current) onListParagraphLine44() (interface{}, error) {
	// numbering style: "a."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 1)

}

func (p *parser) callonListParagraphLine44() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine44()
}

func (c *current) onListParagraphLine48() (interface{}, error) {
	// numbering style: "A."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 1)

}

func (p *parser) callonListParagraphLine48() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine48()
}

func (c *current) onListParagraphLine52() (interface{}, error) {
	// numbering style: "i)"
	return types.NewOrderedListItemPrefix(types.LowerRoman, 1)

}

func (p *parser) callonListParagraphLine52() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine52()
}

func (c *current) onListParagraphLine57() (interface{}, error) {
	// numbering style: "I)"
	return types.NewOrderedListItemPrefix(types.UpperRoman, 1)

}

func (p *parser) callonListParagraphLine57() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine57()
}

func (c *current) onListParagraphLine65() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine65() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine65()
}

func (c *current) onListParagraphLine20(prefix interface{}) (interface{}, error) {
	return prefix, nil
}

func (p *parser) callonListParagraphLine20() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine20(stack["prefix"])
}

func (c *current) onListParagraphLine73() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine73() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine73()
}

func (c *current) onListParagraphLine77() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FiveAsterisks, 5)

}

func (p *parser) callonListParagraphLine77() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine77()
}

func (c *current) onListParagraphLine79() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FourAsterisks, 4)

}

func (p *parser) callonListParagraphLine79() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine79()
}

func (c *current) onListParagraphLine81() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.ThreeAsterisks, 3)

}

func (p *parser) callonListParagraphLine81() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine81()
}

func (c *current) onListParagraphLine83() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.TwoAsterisks, 2)

}

func (p *parser) callonListParagraphLine83() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine83()
}

func (c *current) onListParagraphLine85() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.OneAsterisk, 1)

}

func (p *parser) callonListParagraphLine85() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine85()
}

func (c *current) onListParagraphLine87() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.Dash, 1)

}

func (p *parser) callonListParagraphLine87() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine87()
}

func (c *current) onListParagraphLine92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine92()
}

func (c *current) onListParagraphLine68(prefix interface{}) (interface{}, error) {
	return prefix, nil
}

func (p *parser) callonListParagraphLine68() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine68(stack["prefix"])
}

func (c *current) onListParagraphLine99() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine99() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine99()
}

func (c *current) onListParagraphLine106() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine106() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine106()
}

func (c *current) onListParagraphLine102() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine102()
}

func (c *current) onListParagraphLine108() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine108() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine108()
}

func (c *current) onListParagraphLine96() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine96() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine96()
}

func (c *current) onListParagraphLine117() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine117() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine117()
}

func (c *current) onListParagraphLine129() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine129() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine129()
}

func (c *current) onListParagraphLine123() (interface{}, error) {
	return types.NewListItemContinuation()
}

func (p *parser) callonListParagraphLine123() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine123()
}

func (c *current) onListParagraphLine150() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine150() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine150()
}

func (c *current) onListParagraphLine162() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine162() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine162()
}

func (c *current) onListParagraphLine153() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine153() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine153()
}

func (c *current) onListParagraphLine147() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine147() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine147()
}

func (c *current) onListParagraphLine143(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonListParagraphLine143() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine143(stack["id"])
}

func (c *current) onListParagraphLine183() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine183() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine183()
}

func (c *current) onListParagraphLine195() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine195() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine195()
}

func (c *current) onListParagraphLine186() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine186() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine186()
}

func (c *current) onListParagraphLine180() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine180() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine180()
}

func (c *current) onListParagraphLine176(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonListParagraphLine176() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine176(stack["id"])
}

func (c *current) onListParagraphLine217() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine217() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine217()
}

func (c *current) onListParagraphLine223() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine223() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine223()
}

func (c *current) onListParagraphLine230() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine230() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine230()
}

func (c *current) onListParagraphLine226() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine226() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine226()
}

func (c *current) onListParagraphLine232() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine232() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine232()
}

func (c *current) onListParagraphLine220() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine220() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine220()
}

func (c *current) onListParagraphLine209(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonListParagraphLine209() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine209(stack["title"])
}

func (c *current) onListParagraphLine245() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine245() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine245()
}

func (c *current) onListParagraphLine251() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine251() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine251()
}

func (c *current) onListParagraphLine258() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine258() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine258()
}

func (c *current) onListParagraphLine254() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine254() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine254()
}

func (c *current) onListParagraphLine260() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine260() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine260()
}

func (c *current) onListParagraphLine248() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine248() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine248()
}

func (c *current) onListParagraphLine239(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonListParagraphLine239() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine239(stack["role"])
}

func (c *current) onListParagraphLine270() (interface{}, error) {
	return types.NewSourceAttributes("")
}

func (p *parser) callonListParagraphLine270() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine270()
}

func (c *current) onListParagraphLine279() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine279() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine279()
}

func (c *current) onListParagraphLine286() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine286() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine286()
}

func (c *current) onListParagraphLine282() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine282() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine282()
}

func (c *current) onListParagraphLine288() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonListParagraphLine288() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine288()
}

func (c *current) onListParagraphLine276() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonListParagraphLine276() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine276()
}

func (c *current) onListParagraphLine272(language interface{}) (interface{}, error) {
	return types.NewSourceAttributes(language.(string))
}

func (p *parser) callonListParagraphLine272() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine272(stack["language"])
}

func (c *current) onListParagraphLine302() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine302() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine302()
}

func (c *current) onListParagraphLine307() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine307() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine307()
}

func (c *current) onListParagraphLine314() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine314() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine314()
}

func (c *current) onListParagraphLine321() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine321() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine321()
}

func (c *current) onListParagraphLine317() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine317() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine317()
}

func (c *current) onListParagraphLine323() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine323() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine323()
}

func (c *current) onListParagraphLine311() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine311() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine311()
}

func (c *current) onListParagraphLine341() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine341() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine341()
}

func (c *current) onListParagraphLine348() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine348() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine348()
}

func (c *current) onListParagraphLine344() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine344() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine344()
}

func (c *current) onListParagraphLine338() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine338() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine338()
}

func (c *current) onListParagraphLine298(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))
}

func (p *parser) callonListParagraphLine298() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine298(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onListParagraphLine367() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine367() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine367()
}

func (c *current) onListParagraphLine372() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine372() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine372()
}

func (c *current) onListParagraphLine379() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine379() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine379()
}

func (c *current) onListParagraphLine386() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine386() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine386()
}

func (c *current) onListParagraphLine382() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine382() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine382()
}

func (c *current) onListParagraphLine388() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine388() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine388()
}

func (c *current) onListParagraphLine376() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine376() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine376()
}

func (c *current) onListParagraphLine363(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")
}

func (p *parser) callonListParagraphLine363() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine363(stack["kind"], stack["author"])
}

func (c *current) onListParagraphLine406() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine406() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine406()
}

func (c *current) onListParagraphLine411() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine411() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine411()
}

func (c *current) onListParagraphLine402(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")
}

func (p *parser) callonListParagraphLine402() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine402(stack["kind"])
}

func (c *current) onListParagraphLine422() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine422() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine422()
}

func (c *current) onListParagraphLine427() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine427() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine427()
}

func (c *current) onListParagraphLine434() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine434() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine434()
}

func (c *current) onListParagraphLine441() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine441() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine441()
}

func (c *current) onListParagraphLine437() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine437() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine437()
}

func (c *current) onListParagraphLine443() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine443() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine443()
}

func (c *current) onListParagraphLine431() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine431() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine431()
}

func (c *current) onListParagraphLine461() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine461() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine461()
}

func (c *current) onListParagraphLine468() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine468() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine468()
}

func (c *current) onListParagraphLine464() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine464() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine464()
}

func (c *current) onListParagraphLine458() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine458() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine458()
}

func (c *current) onListParagraphLine418(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonListParagraphLine418() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine418(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onListParagraphLine487() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine487() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine487()
}

func (c *current) onListParagraphLine492() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine492() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine492()
}

func (c *current) onListParagraphLine499() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine499() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine499()
}

func (c *current) onListParagraphLine506() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine506() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine506()
}

func (c *current) onListParagraphLine502() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine502() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine502()
}

func (c *current) onListParagraphLine508() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine508() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine508()
}

func (c *current) onListParagraphLine496() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine496() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine496()
}

func (c *current) onListParagraphLine483(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonListParagraphLine483() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine483(stack["kind"], stack["author"])
}

func (c *current) onListParagraphLine526() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine526() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine526()
}

func (c *current) onListParagraphLine531() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine531() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine531()
}

func (c *current) onListParagraphLine522(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonListParagraphLine522() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine522(stack["kind"])
}

func (c *current) onListParagraphLine534(attribute interface{}) error {
	c.state["verse"] = true
	return nil
}

func (p *parser) callonListParagraphLine534() error {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine534(stack["attribute"])
}

func (c *current) onListParagraphLine414(attribute interface{}) (interface{}, error) {
	return attribute, nil
}

func (p *parser) callonListParagraphLine414() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine414(stack["attribute"])
}

func (c *current) onListParagraphLine540() (interface{}, error) {
	return types.Tip, nil

}

func (p *parser) callonListParagraphLine540() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine540()
}

func (c *current) onListParagraphLine542() (interface{}, error) {
	return types.Note, nil

}

func (p *parser) callonListParagraphLine542() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine542()
}

func (c *current) onListParagraphLine544() (interface{}, error) {
	return types.Important, nil

}

func (p *parser) callonListParagraphLine544() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine544()
}

func (c *current) onListParagraphLine546() (interface{}, error) {
	return types.Warning, nil

}

func (p *parser) callonListParagraphLine546() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine546()
}

func (c *current) onListParagraphLine548() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonListParagraphLine548() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine548()
}

func (c *current) onListParagraphLine535(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonListParagraphLine535() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine535(stack["k"])
}

func (c *current) onListParagraphLine551() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonListParagraphLine551() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine551()
}

func (c *current) onListParagraphLine559() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine559() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine559()
}

func (c *current) onListParagraphLine570() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine570() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine570()
}

func (c *current) onListParagraphLine573() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine573() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine573()
}

func (c *current) onListParagraphLine576() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine576() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine576()
}

func (c *current) onListParagraphLine581() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine581() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine581()
}

func (c *current) onListParagraphLine588() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine588() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine588()
}

func (c *current) onListParagraphLine584() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine584() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine584()
}

func (c *current) onListParagraphLine590() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine590() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine590()
}

func (c *current) onListParagraphLine567(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine567() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine567(stack["key"])
}

func (c *current) onListParagraphLine605() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine605() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine605()
}

func (c *current) onListParagraphLine612() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine612() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine612()
}

func (c *current) onListParagraphLine608() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine608() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine608()
}

func (c *current) onListParagraphLine614() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine614() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine614()
}

func (c *current) onListParagraphLine601(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine601() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine601(stack["value"])
}

func (c *current) onListParagraphLine628() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine628() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine628()
}

func (c *current) onListParagraphLine564(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonListParagraphLine564() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine564(stack["key"], stack["value"])
}

func (c *current) onListParagraphLine636() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine636() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine636()
}

func (c *current) onListParagraphLine639() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine639() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine639()
}

func (c *current) onListParagraphLine642() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine642() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine642()
}

func (c *current) onListParagraphLine647() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine647() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine647()
}

func (c *current) onListParagraphLine654() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine654() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine654()
}

func (c *current) onListParagraphLine650() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine650() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine650()
}

func (c *current) onListParagraphLine656() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine656() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine656()
}

func (c *current) onListParagraphLine633(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine633() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine633(stack["key"])
}

func (c *current) onListParagraphLine670() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine670() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine670()
}

func (c *current) onListParagraphLine630(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonListParagraphLine630() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine630(stack["key"])
}

func (c *current) onListParagraphLine553(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonListParagraphLine553() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine553(stack["attributes"])
}

func (c *current) onListParagraphLine676() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine676() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine676()
}

func (c *current) onListParagraphLine137(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonListParagraphLine137() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine137(stack["attr"])
}

func (c *current) onListParagraphLine691() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine691() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine691()
}

func (c *current) onListParagraphLine703() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine703() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine703()
}

func (c *current) onListParagraphLine715() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine715() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine715()
}

func (c *current) onListParagraphLine728() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine728() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine728()
}

func (c *current) onListParagraphLine740() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine740() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine740()
}

func (c *current) onListParagraphLine759() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine759() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine759()
}

func (c *current) onListParagraphLine765() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonListParagraphLine765() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine765()
}

func (c *current) onListParagraphLine755() (interface{}, error) {
	return types.NewLineBreak()
}

func (p *parser) callonListParagraphLine755() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine755()
}

func (c *current) onListParagraphLine748(elements, linebreak interface{}) (interface{}, error) {
	// absorbs heading and trailing spaces
	return types.NewInlineElements(append(elements.([]interface{}), linebreak))

}

func (p *parser) callonListParagraphLine748() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine748(stack["elements"], stack["linebreak"])
}

func (c *current) onListParagraphLine1(line interface{}) (interface{}, error) {
	// EOL may have been "swallowed" by 'linebreak rule'
	return line, nil

}

func (p *parser) callonListParagraphLine1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onListParagraphLine1(stack["line"])
}

func (c *current) onContinuedDocumentElement9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonContinuedDocumentElement9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onContinuedDocumentElement9()
}

func (c *current) onContinuedDocumentElement3() (interface{}, error) {
	return types.NewListItemContinuation()
}

func (p *parser) callonContinuedDocumentElement3() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onContinuedDocumentElement3()
}

func (c *current) onContinuedDocumentElement1(element interface{}) (interface{}, error) {
	return element, nil
}

func (p *parser) callonContinuedDocumentElement1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onContinuedDocumentElement1(stack["element"])
}

func (c *current) onOrderedListItem18() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem18()
}

func (c *current) onOrderedListItem30() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem30() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem30()
}

func (c *current) onOrderedListItem21() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem21()
}

func (c *current) onOrderedListItem15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem15()
}

func (c *current) onOrderedListItem11(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonOrderedListItem11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem11(stack["id"])
}

func (c *current) onOrderedListItem51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem51()
}

func (c *current) onOrderedListItem63() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem63()
}

func (c *current) onOrderedListItem54() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem54() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem54()
}

func (c *current) onOrderedListItem48() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem48() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem48()
}

func (c *current) onOrderedListItem44(id interface{}) (interface{}, error) {
	return types.NewElementID(id.(string))
}

func (p *parser) callonOrderedListItem44() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem44(stack["id"])
}

func (c *current) onOrderedListItem85() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem85() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem85()
}

func (c *current) onOrderedListItem91() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem91() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem91()
}

func (c *current) onOrderedListItem98() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem98() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem98()
}

func (c *current) onOrderedListItem94() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem94() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem94()
}

func (c *current) onOrderedListItem100() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem100() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem100()
}

func (c *current) onOrderedListItem88() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem88() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem88()
}

func (c *current) onOrderedListItem77(title interface{}) (interface{}, error) {
	return types.NewElementTitle(title.(string))
}

func (p *parser) callonOrderedListItem77() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem77(stack["title"])
}

func (c *current) onOrderedListItem113() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem113()
}

func (c *current) onOrderedListItem119() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem119()
}

func (c *current) onOrderedListItem126() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem126() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem126()
}

func (c *current) onOrderedListItem122() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem122() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem122()
}

func (c *current) onOrderedListItem128() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem128() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem128()
}

func (c *current) onOrderedListItem116() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem116()
}

func (c *current) onOrderedListItem107(role interface{}) (interface{}, error) {
	return types.NewElementRole(role.(string))
}

func (p *parser) callonOrderedListItem107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem107(stack["role"])
}

func (c *current) onOrderedListItem138() (interface{}, error) {
	return types.NewSourceAttributes("")
}

func (p *parser) callonOrderedListItem138() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem138()
}

func (c *current) onOrderedListItem147() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem147() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem147()
}

func (c *current) onOrderedListItem154() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem154() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem154()
}

func (c *current) onOrderedListItem150() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem150() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem150()
}

func (c *current) onOrderedListItem156() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonOrderedListItem156() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem156()
}

func (c *current) onOrderedListItem144() (interface{}, error) {
	return string(c.text), nil

}

func (p *parser) callonOrderedListItem144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem144()
}

func (c *current) onOrderedListItem140(language interface{}) (interface{}, error) {
	return types.NewSourceAttributes(language.(string))
}

func (p *parser) callonOrderedListItem140() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem140(stack["language"])
}

func (c *current) onOrderedListItem170() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem170() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem170()
}

func (c *current) onOrderedListItem175() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem175() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem175()
}

func (c *current) onOrderedListItem182() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem182() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem182()
}

func (c *current) onOrderedListItem189() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem189() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem189()
}

func (c *current) onOrderedListItem185() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem185() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem185()
}

func (c *current) onOrderedListItem191() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem191() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem191()
}

func (c *current) onOrderedListItem179() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem179()
}

func (c *current) onOrderedListItem209() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem209() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem209()
}

func (c *current) onOrderedListItem216() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem216() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem216()
}

func (c *current) onOrderedListItem212() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem212() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem212()
}

func (c *current) onOrderedListItem206() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem206() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem206()
}

func (c *current) onOrderedListItem166(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))
}

func (p *parser) callonOrderedListItem166() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem166(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onOrderedListItem235() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem235() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem235()
}

func (c *current) onOrderedListItem240() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem240() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem240()
}

func (c *current) onOrderedListItem247() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem247() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem247()
}

func (c *current) onOrderedListItem254() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem254() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem254()
}

func (c *current) onOrderedListItem250() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem250() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem250()
}

func (c *current) onOrderedListItem256() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem256() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem256()
}

func (c *current) onOrderedListItem244() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem244() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem244()
}

func (c *current) onOrderedListItem231(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")
}

func (p *parser) callonOrderedListItem231() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem231(stack["kind"], stack["author"])
}

func (c *current) onOrderedListItem274() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem274() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem274()
}

func (c *current) onOrderedListItem279() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem279() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem279()
}

func (c *current) onOrderedListItem270(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")
}

func (p *parser) callonOrderedListItem270() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem270(stack["kind"])
}

func (c *current) onOrderedListItem290() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem290() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem290()
}

func (c *current) onOrderedListItem295() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem295() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem295()
}

func (c *current) onOrderedListItem302() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem302() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem302()
}

func (c *current) onOrderedListItem309() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem309() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem309()
}

func (c *current) onOrderedListItem305() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem305() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem305()
}

func (c *current) onOrderedListItem311() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem311() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem311()
}

func (c *current) onOrderedListItem299() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem299() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem299()
}

func (c *current) onOrderedListItem329() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem329() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem329()
}

func (c *current) onOrderedListItem336() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem336() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem336()
}

func (c *current) onOrderedListItem332() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem332() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem332()
}

func (c *current) onOrderedListItem326() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem326() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem326()
}

func (c *current) onOrderedListItem286(kind, author, title interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), title.(string))

}

func (p *parser) callonOrderedListItem286() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem286(stack["kind"], stack["author"], stack["title"])
}

func (c *current) onOrderedListItem355() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem355() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem355()
}

func (c *current) onOrderedListItem360() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem360() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem360()
}

func (c *current) onOrderedListItem367() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem367() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem367()
}

func (c *current) onOrderedListItem374() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem374() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem374()
}

func (c *current) onOrderedListItem370() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem370() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem370()
}

func (c *current) onOrderedListItem376() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem376() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem376()
}

func (c *current) onOrderedListItem364() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem364() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem364()
}

func (c *current) onOrderedListItem351(kind, author interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), author.(string), "")

}

func (p *parser) callonOrderedListItem351() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem351(stack["kind"], stack["author"])
}

func (c *current) onOrderedListItem394() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem394() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem394()
}

func (c *current) onOrderedListItem399() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem399() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem399()
}

func (c *current) onOrderedListItem390(kind interface{}) (interface{}, error) {
	return types.NewQuoteAttributes(kind.(string), "", "")

}

func (p *parser) callonOrderedListItem390() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem390(stack["kind"])
}

func (c *current) onOrderedListItem402(attribute interface{}) error {
	c.state["verse"] = true
	return nil
}

func (p *parser) callonOrderedListItem402() error {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem402(stack["attribute"])
}

func (c *current) onOrderedListItem282(attribute interface{}) (interface{}, error) {
	return attribute, nil
}

func (p *parser) callonOrderedListItem282() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem282(stack["attribute"])
}

func (c *current) onOrderedListItem408() (interface{}, error) {
	return types.Tip, nil

}

func (p *parser) callonOrderedListItem408() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem408()
}

func (c *current) onOrderedListItem410() (interface{}, error) {
	return types.Note, nil

}

func (p *parser) callonOrderedListItem410() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem410()
}

func (c *current) onOrderedListItem412() (interface{}, error) {
	return types.Important, nil

}

func (p *parser) callonOrderedListItem412() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem412()
}

func (c *current) onOrderedListItem414() (interface{}, error) {
	return types.Warning, nil

}

func (p *parser) callonOrderedListItem414() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem414()
}

func (c *current) onOrderedListItem416() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonOrderedListItem416() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem416()
}

func (c *current) onOrderedListItem403(k interface{}) (interface{}, error) {
	return types.NewAdmonitionAttribute(k.(types.AdmonitionKind))
}

func (p *parser) callonOrderedListItem403() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem403(stack["k"])
}

func (c *current) onOrderedListItem419() (interface{}, error) {
	return types.ElementAttributes{"layout": "horizontal"}, nil
}

func (p *parser) callonOrderedListItem419() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem419()
}

func (c *current) onOrderedListItem427() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem427() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem427()
}

func (c *current) onOrderedListItem438() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem438() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem438()
}

func (c *current) onOrderedListItem441() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem441() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem441()
}

func (c *current) onOrderedListItem444() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem444() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem444()
}

func (c *current) onOrderedListItem449() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem449() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem449()
}

func (c *current) onOrderedListItem456() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem456() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem456()
}

func (c *current) onOrderedListItem452() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem452() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem452()
}

func (c *current) onOrderedListItem458() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem458() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem458()
}

func (c *current) onOrderedListItem435(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem435() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem435(stack["key"])
}

func (c *current) onOrderedListItem473() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem473() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem473()
}

func (c *current) onOrderedListItem480() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem480() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem480()
}

func (c *current) onOrderedListItem476() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem476() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem476()
}

func (c *current) onOrderedListItem482() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem482() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem482()
}

func (c *current) onOrderedListItem469(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem469() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem469(stack["value"])
}

func (c *current) onOrderedListItem496() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem496() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem496()
}

func (c *current) onOrderedListItem432(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonOrderedListItem432() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem432(stack["key"], stack["value"])
}

func (c *current) onOrderedListItem504() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem504() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem504()
}

func (c *current) onOrderedListItem507() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem507() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem507()
}

func (c *current) onOrderedListItem510() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem510() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem510()
}

func (c *current) onOrderedListItem515() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem515() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem515()
}

func (c *current) onOrderedListItem522() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem522() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem522()
}

func (c *current) onOrderedListItem518() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem518() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem518()
}

func (c *current) onOrderedListItem524() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem524() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem524()
}

func (c *current) onOrderedListItem501(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem501() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem501(stack["key"])
}

func (c *current) onOrderedListItem538() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem538() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem538()
}

func (c *current) onOrderedListItem498(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonOrderedListItem498() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem498(stack["key"])
}

func (c *current) onOrderedListItem421(attributes interface{}) (interface{}, error) {
	return types.NewAttributeGroup(attributes.([]interface{}))
}

func (p *parser) callonOrderedListItem421() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem421(stack["attributes"])
}

func (c *current) onOrderedListItem544() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem544() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem544()
}

func (c *current) onOrderedListItem5(attr interface{}) (interface{}, error) {
	return attr, nil // avoid returning something like `[]interface{}{attr, EOL}`
}

func (p *parser) callonOrderedListItem5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem5(stack["attr"])
}

func (c *current) onOrderedListItem557() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem557() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem557()
}

func (c *current) onOrderedListItem561() (interface{}, error) {
	// numbering style: "....."
	return types.NewOrderedListItemPrefix(types.UpperRoman, 5)

}

func (p *parser) callonOrderedListItem561() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem561()
}

func (c *current) onOrderedListItem563() (interface{}, error) {
	// numbering style: "...."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 4)

}

func (p *parser) callonOrderedListItem563() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem563()
}

func (c *current) onOrderedListItem565() (interface{}, error) {
	// numbering style: "..."
	return types.NewOrderedListItemPrefix(types.LowerRoman, 3)

}

func (p *parser) callonOrderedListItem565() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem565()
}

func (c *current) onOrderedListItem567() (interface{}, error) {
	// numbering style: ".."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 2)

}

func (p *parser) callonOrderedListItem567() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem567()
}

func (c *current) onOrderedListItem569() (interface{}, error) {
	// numbering style: "."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)
	// explicit numbering

}

func (p *parser) callonOrderedListItem569() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem569()
}

func (c *current) onOrderedListItem571() (interface{}, error) {
	// numbering style: "1."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)

}

func (p *parser) callonOrderedListItem571() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem571()
}

func (c *current) onOrderedListItem576() (interface{}, error) {
	// numbering style: "a."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 1)

}

func (p *parser) callonOrderedListItem576() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem576()
}

func (c *current) onOrderedListItem580() (interface{}, error) {
	// numbering style: "A."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 1)

}

func (p *parser) callonOrderedListItem580() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem580()
}

func (c *current) onOrderedListItem584() (interface{}, error) {
	// numbering style: "i)"
	return types.NewOrderedListItemPrefix(types.LowerRoman, 1)

}

func (p *parser) callonOrderedListItem584() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem584()
}

func (c *current) onOrderedListItem589() (interface{}, error) {
	// numbering style: "I)"
	return types.NewOrderedListItemPrefix(types.UpperRoman, 1)

}

func (p *parser) callonOrderedListItem589() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem589()
}

func (c *current) onOrderedListItem597() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem597() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem597()
}

func (c *current) onOrderedListItem552(prefix interface{}) (interface{}, error) {
	return prefix, nil
}

func (p *parser) callonOrderedListItem552() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem552(stack["prefix"])
}

func (c *current) onOrderedListItem610() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonOrderedListItem610() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem610()
}

func (c *current) onOrderedListItem602() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonOrderedListItem602() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem602()
}

func (c *current) onOrderedListItem1(attributes, prefix, content interface{}) (interface{}, error) {
	return types.NewOrderedListItem(prefix.(types.OrderedListItemPrefix), content.([]interface{}), attributes.([]interface{}))
}

func (p *parser) callonOrderedListItem1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItem1(stack["attributes"], stack["prefix"], stack["content"])
}

func (c *current) onOrderedListItemContent1(elements interface{}) (interface{}, error) {
	// Another list or a literal paragraph immediately following a list item will be implicitly included in the list item
	return types.NewListItemContent(elements.([]interface{}))
}

func (p *parser) callonOrderedListItemContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onOrderedListItemContent1(stack["elements"])
}

func (c *current) onUnorderedListItem9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonUnorderedListItem9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem9()
}

func (c *current) onUnorderedListItem13() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FiveAsterisks, 5)

}

func (p *parser) callonUnorderedListItem13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem13()
}

func (c *current) onUnorderedListItem15() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FourAsterisks, 4)

}

func (p *parser) callonUnorderedListItem15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem15()
}

func (c *current) onUnorderedListItem17() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.ThreeAsterisks, 3)

}

func (p *parser) callonUnorderedListItem17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem17()
}

func (c *current) onUnorderedListItem19() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.TwoAsterisks, 2)

}

func (p *parser) callonUnorderedListItem19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem19()
}

func (c *current) onUnorderedListItem21() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.OneAsterisk, 1)

}

func (p *parser) callonUnorderedListItem21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem21()
}

func (c *current) onUnorderedListItem23() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.Dash, 1)

}

func (p *parser) callonUnorderedListItem23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem23()
}

func (c *current) onUnorderedListItem28() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonUnorderedListItem28() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem28()
}

func (c *current) onUnorderedListItem4(prefix interface{}) (interface{}, error) {
	return prefix, nil
}

func (p *parser) callonUnorderedListItem4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem4(stack["prefix"])
}

func (c *current) onUnorderedListItem38() (interface{}, error) {
	return types.Unchecked, nil
}

func (p *parser) callonUnorderedListItem38() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem38()
}

func (c *current) onUnorderedListItem40() (interface{}, error) {
	return types.Checked, nil
}

func (p *parser) callonUnorderedListItem40() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem40()
}

func (c *current) onUnorderedListItem42() (interface{}, error) {
	return types.Checked, nil
}

func (p *parser) callonUnorderedListItem42() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem42()
}

func (c *current) onUnorderedListItem47() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonUnorderedListItem47() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem47()
}

func (c *current) onUnorderedListItem32(style interface{}) (interface{}, error) {
	return style, nil

}

func (p *parser) callonUnorderedListItem32() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem32(stack["style"])
}

func (c *current) onUnorderedListItem60() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonUnorderedListItem60() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem60()
}

func (c *current) onUnorderedListItem52() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonUnorderedListItem52() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem52()
}

func (c *current) onUnorderedListItem1(prefix, checkstyle, content interface{}) (interface{}, error) {
	return types.NewUnorderedListItem(prefix.(types.UnorderedListItemPrefix), checkstyle, content.([]interface{}))
}

func (p *parser) callonUnorderedListItem1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItem1(stack["prefix"], stack["checkstyle"], stack["content"])
}

func (c *current) onUnorderedListItemContent1(elements interface{}) (interface{}, error) {
	// Another list or a literal paragraph immediately following a list item will be implicitly included in the list item
	return types.NewListItemContent(elements.([]interface{}))
}

func (p *parser) callonUnorderedListItemContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onUnorderedListItemContent1(stack["elements"])
}

func (c *current) onLabeledListItem7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItem7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem7()
}

func (c *current) onLabeledListItem14() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItem14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem14()
}

func (c *current) onLabeledListItem10() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItem10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem10()
}

func (c *current) onLabeledListItem16() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItem16() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem16()
}

func (c *current) onLabeledListItem4() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItem4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem4()
}

func (c *current) onLabeledListItem26() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItem26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem26()
}

func (c *current) onLabeledListItem1(term, separator, description interface{}) (interface{}, error) {
	return types.NewLabeledListItem(len(separator.(string))-1, term.(string), description.([]interface{}))
}

func (p *parser) callonLabeledListItem1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItem1(stack["term"], stack["separator"], stack["description"])
}

func (c *current) onLabeledListItemDescription7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItemDescription7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItemDescription7()
}

func (c *current) onLabeledListItemDescription2(elements interface{}) (interface{}, error) {
	// TODO: replace with (ListParagraph+ ContinuedDocumentElement*) and use a single rule for all item contents ?
	return types.NewListItemContent(elements.([]interface{}))

}

func (p *parser) callonLabeledListItemDescription2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItemDescription2(stack["elements"])
}

func (c *current) onLabeledListItemDescription21() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonLabeledListItemDescription21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItemDescription21()
}

func (c *current) onLabeledListItemDescription16() (interface{}, error) {
	// here, WS is optional since there is no description afterwards
	return []interface{}{}, nil
}

func (p *parser) callonLabeledListItemDescription16() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onLabeledListItemDescription16()
}

func (c *current) onParagraph11() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph11()
}

func (c *current) onParagraph19() (interface{}, error) {
	return types.Tip, nil

}

func (p *parser) callonParagraph19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph19()
}

func (c *current) onParagraph21() (interface{}, error) {
	return types.Note, nil

}

func (p *parser) callonParagraph21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph21()
}

func (c *current) onParagraph23() (interface{}, error) {
	return types.Important, nil

}

func (p *parser) callonParagraph23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph23()
}

func (c *current) onParagraph25() (interface{}, error) {
	return types.Warning, nil

}

func (p *parser) callonParagraph25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph25()
}

func (c *current) onParagraph27() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonParagraph27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph27()
}

func (c *current) onParagraph2(t, lines interface{}) (interface{}, error) {

	return types.NewAdmonitionParagraph(lines.([]interface{}), t.(types.AdmonitionKind))

}

func (p *parser) callonParagraph2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph2(stack["t"], stack["lines"])
}

func (c *current) onParagraph42() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonParagraph42() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph42()
}

func (c *current) onParagraph33(lines interface{}) (interface{}, error) {

	return types.NewParagraph(lines.([]interface{}))
}

func (p *parser) callonParagraph33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onParagraph33(stack["lines"])
}

func (c *current) onVerseParagraph3() (bool, error) {
	verse, ok := c.state["verse"].(bool)
	return ok && verse, nil

}

func (p *parser) callonVerseParagraph3() (bool, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseParagraph3()
}

func (c *current) onVerseParagraph15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseParagraph15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseParagraph15()
}

func (c *current) onVerseParagraph23() (interface{}, error) {
	return types.Tip, nil

}

func (p *parser) callonVerseParagraph23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseParagraph23()
}

func (c *current) onVerseParagraph25() (interface{}, error) {
	return types.Note, nil

}

func (p *parser) callonVerseParagraph25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseParagraph25()
}

func (c *current) onVerseParagraph27() (interface{}, error) {
	return types.Important, nil

}

func (p *parser) callonVerseParagraph27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseParagraph27()
}

func (c *current) onVerseParagraph29() (interface{}, error) {
	return types.Warning, nil

}

func (p *parser) callonVerseParagraph29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseParagraph29()
}

func (c *current) onVerseParagraph31() (interface{}, error) {
	return types.Caution, nil
}

func (p *parser) callonVerseParagraph31() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseParagraph31()
}

func (c *current) onVerseParagraph6(t, lines interface{}) (interface{}, error) {

	return types.NewAdmonitionParagraph(lines.([]interface{}), t.(types.AdmonitionKind))

}

func (p *parser) callonVerseParagraph6() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseParagraph6(stack["t"], stack["lines"])
}

func (c *current) onVerseParagraph46() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseParagraph46() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseParagraph46()
}

func (c *current) onVerseParagraph37(lines interface{}) (interface{}, error) {

	return types.NewParagraph(lines.([]interface{}))

}

func (p *parser) callonVerseParagraph37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseParagraph37(stack["lines"])
}

func (c *current) onVerseParagraph55(verse interface{}) error {
	c.state["verse"] = false
	return nil

}

func (p *parser) callonVerseParagraph55() error {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseParagraph55(stack["verse"])
}

func (c *current) onVerseParagraph1(verse interface{}) (interface{}, error) {
	return verse, nil
}

func (p *parser) callonVerseParagraph1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseParagraph1(stack["verse"])
}

func (c *current) onInlineElements12() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements12()
}

func (c *current) onInlineElements4() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonInlineElements4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements4()
}

func (c *current) onInlineElements32() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements32() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements32()
}

func (c *current) onInlineElements39() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements39()
}

func (c *current) onInlineElements35() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements35() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements35()
}

func (c *current) onInlineElements41() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements41()
}

func (c *current) onInlineElements29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements29()
}

func (c *current) onInlineElements23(content interface{}) (interface{}, error) {
	return types.NewSingleLineComment(content.(string))
}

func (p *parser) callonInlineElements23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements23(stack["content"])
}

func (c *current) onInlineElements21(comment interface{}) (interface{}, error) {
	return types.NewInlineElements([]interface{}{comment})

}

func (p *parser) callonInlineElements21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements21(stack["comment"])
}

func (c *current) onInlineElements65() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements65() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements65()
}

func (c *current) onInlineElements77() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements77() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements77()
}

func (c *current) onInlineElements89() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements89() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements89()
}

func (c *current) onInlineElements102() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements102()
}

func (c *current) onInlineElements114() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements114() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements114()
}

func (c *current) onInlineElements130() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements130()
}

func (c *current) onInlineElements136() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElements136() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements136()
}

func (c *current) onInlineElements126() (interface{}, error) {
	return types.NewLineBreak()
}

func (p *parser) callonInlineElements126() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements126()
}

func (c *current) onInlineElements55(elements, linebreak interface{}) (interface{}, error) {

	return types.NewInlineElements(append(elements.([]interface{}), linebreak))

}

func (p *parser) callonInlineElements55() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements55(stack["elements"], stack["linebreak"])
}

func (c *current) onInlineElements1(elements interface{}) (interface{}, error) {
	return elements, nil

}

func (p *parser) callonInlineElements1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElements1(stack["elements"])
}

func (c *current) onInlineElement14() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement14()
}

func (c *current) onInlineElement20() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement20() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement20()
}

func (c *current) onInlineElement10() (interface{}, error) {
	return types.NewLineBreak()
}

func (p *parser) callonInlineElement10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement10()
}

func (c *current) onInlineElement34() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement34() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement34()
}

func (c *current) onInlineElement30() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement30() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement30()
}

func (c *current) onInlineElement36() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement36() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement36()
}

func (c *current) onInlineElement47() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement47() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement47()
}

func (c *current) onInlineElement59() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement59() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement59()
}

func (c *current) onInlineElement50() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement50() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement50()
}

func (c *current) onInlineElement44() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement44() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement44()
}

func (c *current) onInlineElement75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement75()
}

func (c *current) onInlineElement82() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement82() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement82()
}

func (c *current) onInlineElement78() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement78()
}

func (c *current) onInlineElement84() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement84() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement84()
}

func (c *current) onInlineElement72() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement72() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement72()
}

func (c *current) onInlineElement98() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement98() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement98()
}

func (c *current) onInlineElement105() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement105() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement105()
}

func (c *current) onInlineElement101() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement101() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement101()
}

func (c *current) onInlineElement107() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement107()
}

func (c *current) onInlineElement95() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement95()
}

func (c *current) onInlineElement121() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement121()
}

func (c *current) onInlineElement128() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement128() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement128()
}

func (c *current) onInlineElement124() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement124()
}

func (c *current) onInlineElement130() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement130()
}

func (c *current) onInlineElement118() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement118() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement118()
}

func (c *current) onInlineElement150() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement150() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement150()
}

func (c *current) onInlineElement153() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement153() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement153()
}

func (c *current) onInlineElement156() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement156() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement156()
}

func (c *current) onInlineElement161() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement161() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement161()
}

func (c *current) onInlineElement168() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement168() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement168()
}

func (c *current) onInlineElement164() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement164() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement164()
}

func (c *current) onInlineElement170() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement170() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement170()
}

func (c *current) onInlineElement147(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement147() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement147(stack["key"])
}

func (c *current) onInlineElement185() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement185() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement185()
}

func (c *current) onInlineElement192() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement192() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement192()
}

func (c *current) onInlineElement188() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement188() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement188()
}

func (c *current) onInlineElement194() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement194() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement194()
}

func (c *current) onInlineElement181(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement181() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement181(stack["value"])
}

func (c *current) onInlineElement208() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement208() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement208()
}

func (c *current) onInlineElement144(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement144(stack["key"], stack["value"])
}

func (c *current) onInlineElement216() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement216() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement216()
}

func (c *current) onInlineElement219() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement219() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement219()
}

func (c *current) onInlineElement222() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement222() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement222()
}

func (c *current) onInlineElement227() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement227() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement227()
}

func (c *current) onInlineElement234() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement234() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement234()
}

func (c *current) onInlineElement230() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement230() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement230()
}

func (c *current) onInlineElement236() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement236() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement236()
}

func (c *current) onInlineElement213(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement213() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement213(stack["key"])
}

func (c *current) onInlineElement250() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement250() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement250()
}

func (c *current) onInlineElement210(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement210() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement210(stack["key"])
}

func (c *current) onInlineElement68(alt, width, height, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, height, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement68() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement68(stack["alt"], stack["width"], stack["height"], stack["otherAttrs"])
}

func (c *current) onInlineElement260() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement260() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement260()
}

func (c *current) onInlineElement267() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement267() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement267()
}

func (c *current) onInlineElement263() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement263() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement263()
}

func (c *current) onInlineElement269() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement269() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement269()
}

func (c *current) onInlineElement257() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement257() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement257()
}

func (c *current) onInlineElement283() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement283() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement283()
}

func (c *current) onInlineElement290() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement290() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement290()
}

func (c *current) onInlineElement286() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement286() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement286()
}

func (c *current) onInlineElement292() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement292() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement292()
}

func (c *current) onInlineElement280() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement280() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement280()
}

func (c *current) onInlineElement312() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement312() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement312()
}

func (c *current) onInlineElement315() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement315() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement315()
}

func (c *current) onInlineElement318() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement318() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement318()
}

func (c *current) onInlineElement323() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement323() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement323()
}

func (c *current) onInlineElement330() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement330() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement330()
}

func (c *current) onInlineElement326() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement326() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement326()
}

func (c *current) onInlineElement332() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement332() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement332()
}

func (c *current) onInlineElement309(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement309() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement309(stack["key"])
}

func (c *current) onInlineElement347() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement347() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement347()
}

func (c *current) onInlineElement354() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement354() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement354()
}

func (c *current) onInlineElement350() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement350() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement350()
}

func (c *current) onInlineElement356() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement356() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement356()
}

func (c *current) onInlineElement343(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement343() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement343(stack["value"])
}

func (c *current) onInlineElement370() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement370() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement370()
}

func (c *current) onInlineElement306(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement306() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement306(stack["key"], stack["value"])
}

func (c *current) onInlineElement378() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement378() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement378()
}

func (c *current) onInlineElement381() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement381() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement381()
}

func (c *current) onInlineElement384() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement384() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement384()
}

func (c *current) onInlineElement389() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement389() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement389()
}

func (c *current) onInlineElement396() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement396() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement396()
}

func (c *current) onInlineElement392() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement392() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement392()
}

func (c *current) onInlineElement398() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement398() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement398()
}

func (c *current) onInlineElement375(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement375() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement375(stack["key"])
}

func (c *current) onInlineElement412() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement412() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement412()
}

func (c *current) onInlineElement372(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement372() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement372(stack["key"])
}

func (c *current) onInlineElement253(alt, width, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement253() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement253(stack["alt"], stack["width"], stack["otherAttrs"])
}

func (c *current) onInlineElement422() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement422() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement422()
}

func (c *current) onInlineElement429() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement429() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement429()
}

func (c *current) onInlineElement425() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement425() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement425()
}

func (c *current) onInlineElement431() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement431() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement431()
}

func (c *current) onInlineElement419() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElement419() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement419()
}

func (c *current) onInlineElement451() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement451() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement451()
}

func (c *current) onInlineElement454() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement454() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement454()
}

func (c *current) onInlineElement457() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement457() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement457()
}

func (c *current) onInlineElement462() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement462() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement462()
}

func (c *current) onInlineElement469() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement469() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement469()
}

func (c *current) onInlineElement465() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement465() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement465()
}

func (c *current) onInlineElement471() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement471() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement471()
}

func (c *current) onInlineElement448(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement448() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement448(stack["key"])
}

func (c *current) onInlineElement486() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement486() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement486()
}

func (c *current) onInlineElement493() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement493() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement493()
}

func (c *current) onInlineElement489() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement489() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement489()
}

func (c *current) onInlineElement495() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement495() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement495()
}

func (c *current) onInlineElement482(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement482() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement482(stack["value"])
}

func (c *current) onInlineElement509() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement509() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement509()
}

func (c *current) onInlineElement445(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement445() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement445(stack["key"], stack["value"])
}

func (c *current) onInlineElement517() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement517() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement517()
}

func (c *current) onInlineElement520() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement520() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement520()
}

func (c *current) onInlineElement523() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement523() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement523()
}

func (c *current) onInlineElement528() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement528() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement528()
}

func (c *current) onInlineElement535() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement535() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement535()
}

func (c *current) onInlineElement531() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement531() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement531()
}

func (c *current) onInlineElement537() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement537() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement537()
}

func (c *current) onInlineElement514(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement514() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement514(stack["key"])
}

func (c *current) onInlineElement551() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement551() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement551()
}

func (c *current) onInlineElement511(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement511() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement511(stack["key"])
}

func (c *current) onInlineElement415(alt, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, nil, nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement415() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement415(stack["alt"], stack["otherAttrs"])
}

func (c *current) onInlineElement566() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement566() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement566()
}

func (c *current) onInlineElement569() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement569() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement569()
}

func (c *current) onInlineElement572() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement572() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement572()
}

func (c *current) onInlineElement577() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement577() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement577()
}

func (c *current) onInlineElement584() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement584() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement584()
}

func (c *current) onInlineElement580() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement580() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement580()
}

func (c *current) onInlineElement586() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement586() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement586()
}

func (c *current) onInlineElement563(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement563() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement563(stack["key"])
}

func (c *current) onInlineElement601() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement601() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement601()
}

func (c *current) onInlineElement608() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement608() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement608()
}

func (c *current) onInlineElement604() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement604() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement604()
}

func (c *current) onInlineElement610() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement610() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement610()
}

func (c *current) onInlineElement597(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement597() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement597(stack["value"])
}

func (c *current) onInlineElement624() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement624() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement624()
}

func (c *current) onInlineElement560(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement560() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement560(stack["key"], stack["value"])
}

func (c *current) onInlineElement632() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement632() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement632()
}

func (c *current) onInlineElement635() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement635() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement635()
}

func (c *current) onInlineElement638() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement638() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement638()
}

func (c *current) onInlineElement643() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement643() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement643()
}

func (c *current) onInlineElement650() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement650() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement650()
}

func (c *current) onInlineElement646() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement646() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement646()
}

func (c *current) onInlineElement652() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement652() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement652()
}

func (c *current) onInlineElement629(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement629() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement629(stack["key"])
}

func (c *current) onInlineElement666() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement666() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement666()
}

func (c *current) onInlineElement626(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement626() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement626(stack["key"])
}

func (c *current) onInlineElement554(otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(nil, nil, nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement554() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement554(stack["otherAttrs"])
}

func (c *current) onInlineElement38(path, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineImage(path.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElement38() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement38(stack["path"], stack["inlineAttributes"])
}

func (c *current) onInlineElement688() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement688() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement688()
}

func (c *current) onInlineElement700() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement700() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement700()
}

func (c *current) onInlineElement691() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement691() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement691()
}

func (c *current) onInlineElement685() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement685() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement685()
}

func (c *current) onInlineElement676() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement676() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement676()
}

func (c *current) onInlineElement716() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement716() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement716()
}

func (c *current) onInlineElement723() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement723() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement723()
}

func (c *current) onInlineElement719() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement719() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement719()
}

func (c *current) onInlineElement725() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement725() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement725()
}

func (c *current) onInlineElement713() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement713() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement713()
}

func (c *current) onInlineElement739() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement739() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement739()
}

func (c *current) onInlineElement750() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement750() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement750()
}

func (c *current) onInlineElement753() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement753() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement753()
}

func (c *current) onInlineElement756() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement756() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement756()
}

func (c *current) onInlineElement761() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement761() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement761()
}

func (c *current) onInlineElement768() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement768() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement768()
}

func (c *current) onInlineElement764() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement764() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement764()
}

func (c *current) onInlineElement770() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement770() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement770()
}

func (c *current) onInlineElement747(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement747() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement747(stack["key"])
}

func (c *current) onInlineElement785() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement785() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement785()
}

func (c *current) onInlineElement792() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement792() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement792()
}

func (c *current) onInlineElement788() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement788() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement788()
}

func (c *current) onInlineElement794() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement794() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement794()
}

func (c *current) onInlineElement781(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement781() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement781(stack["value"])
}

func (c *current) onInlineElement808() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement808() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement808()
}

func (c *current) onInlineElement744(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement744() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement744(stack["key"], stack["value"])
}

func (c *current) onInlineElement816() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement816() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement816()
}

func (c *current) onInlineElement819() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement819() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement819()
}

func (c *current) onInlineElement822() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement822() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement822()
}

func (c *current) onInlineElement827() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement827() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement827()
}

func (c *current) onInlineElement834() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement834() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement834()
}

func (c *current) onInlineElement830() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement830() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement830()
}

func (c *current) onInlineElement836() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement836() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement836()
}

func (c *current) onInlineElement813(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement813() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement813(stack["key"])
}

func (c *current) onInlineElement850() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement850() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement850()
}

func (c *current) onInlineElement810(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement810() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement810(stack["key"])
}

func (c *current) onInlineElement709(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement709() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement709(stack["text"], stack["otherAttrs"])
}

func (c *current) onInlineElement865() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement865() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement865()
}

func (c *current) onInlineElement868() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement868() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement868()
}

func (c *current) onInlineElement871() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement871() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement871()
}

func (c *current) onInlineElement876() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement876() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement876()
}

func (c *current) onInlineElement883() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement883() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement883()
}

func (c *current) onInlineElement879() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement879() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement879()
}

func (c *current) onInlineElement885() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement885() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement885()
}

func (c *current) onInlineElement862(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement862() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement862(stack["key"])
}

func (c *current) onInlineElement900() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement900() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement900()
}

func (c *current) onInlineElement907() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement907() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement907()
}

func (c *current) onInlineElement903() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement903() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement903()
}

func (c *current) onInlineElement909() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement909() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement909()
}

func (c *current) onInlineElement896(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement896() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement896(stack["value"])
}

func (c *current) onInlineElement923() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement923() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement923()
}

func (c *current) onInlineElement859(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement859() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement859(stack["key"], stack["value"])
}

func (c *current) onInlineElement931() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement931() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement931()
}

func (c *current) onInlineElement934() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement934() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement934()
}

func (c *current) onInlineElement937() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement937() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement937()
}

func (c *current) onInlineElement942() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement942() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement942()
}

func (c *current) onInlineElement949() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement949() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement949()
}

func (c *current) onInlineElement945() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement945() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement945()
}

func (c *current) onInlineElement951() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement951() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement951()
}

func (c *current) onInlineElement928(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement928() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement928(stack["key"])
}

func (c *current) onInlineElement965() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement965() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement965()
}

func (c *current) onInlineElement925(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement925() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement925(stack["key"])
}

func (c *current) onInlineElement853(otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement853() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement853(stack["otherAttrs"])
}

func (c *current) onInlineElement672(url, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElement672() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement672(stack["url"], stack["inlineAttributes"])
}

func (c *current) onInlineElement982() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement982() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement982()
}

func (c *current) onInlineElement994() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement994() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement994()
}

func (c *current) onInlineElement985() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement985() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement985()
}

func (c *current) onInlineElement979() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement979() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement979()
}

func (c *current) onInlineElement971() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement971() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement971()
}

func (c *current) onInlineElement1010() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1010() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1010()
}

func (c *current) onInlineElement1017() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1017() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1017()
}

func (c *current) onInlineElement1013() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1013() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1013()
}

func (c *current) onInlineElement1019() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1019() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1019()
}

func (c *current) onInlineElement1007() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1007() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1007()
}

func (c *current) onInlineElement1033() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1033() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1033()
}

func (c *current) onInlineElement1044() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1044() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1044()
}

func (c *current) onInlineElement1047() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1047() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1047()
}

func (c *current) onInlineElement1050() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1050() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1050()
}

func (c *current) onInlineElement1055() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1055() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1055()
}

func (c *current) onInlineElement1062() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1062() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1062()
}

func (c *current) onInlineElement1058() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1058() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1058()
}

func (c *current) onInlineElement1064() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1064() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1064()
}

func (c *current) onInlineElement1041(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1041() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1041(stack["key"])
}

func (c *current) onInlineElement1079() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1079() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1079()
}

func (c *current) onInlineElement1086() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1086() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1086()
}

func (c *current) onInlineElement1082() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1082() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1082()
}

func (c *current) onInlineElement1088() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1088() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1088()
}

func (c *current) onInlineElement1075(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1075() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1075(stack["value"])
}

func (c *current) onInlineElement1102() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1102()
}

func (c *current) onInlineElement1038(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement1038() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1038(stack["key"], stack["value"])
}

func (c *current) onInlineElement1110() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1110() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1110()
}

func (c *current) onInlineElement1113() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1113()
}

func (c *current) onInlineElement1116() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1116()
}

func (c *current) onInlineElement1121() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1121()
}

func (c *current) onInlineElement1128() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1128() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1128()
}

func (c *current) onInlineElement1124() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1124()
}

func (c *current) onInlineElement1130() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1130()
}

func (c *current) onInlineElement1107(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1107(stack["key"])
}

func (c *current) onInlineElement1144() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1144()
}

func (c *current) onInlineElement1104(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement1104() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1104(stack["key"])
}

func (c *current) onInlineElement1003(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement1003() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1003(stack["text"], stack["otherAttrs"])
}

func (c *current) onInlineElement1159() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1159() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1159()
}

func (c *current) onInlineElement1162() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1162() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1162()
}

func (c *current) onInlineElement1165() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1165() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1165()
}

func (c *current) onInlineElement1170() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1170() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1170()
}

func (c *current) onInlineElement1177() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1177() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1177()
}

func (c *current) onInlineElement1173() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1173() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1173()
}

func (c *current) onInlineElement1179() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1179()
}

func (c *current) onInlineElement1156(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1156() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1156(stack["key"])
}

func (c *current) onInlineElement1194() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1194() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1194()
}

func (c *current) onInlineElement1201() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1201() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1201()
}

func (c *current) onInlineElement1197() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1197() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1197()
}

func (c *current) onInlineElement1203() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1203() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1203()
}

func (c *current) onInlineElement1190(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1190() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1190(stack["value"])
}

func (c *current) onInlineElement1217() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1217() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1217()
}

func (c *current) onInlineElement1153(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElement1153() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1153(stack["key"], stack["value"])
}

func (c *current) onInlineElement1225() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1225() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1225()
}

func (c *current) onInlineElement1228() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1228() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1228()
}

func (c *current) onInlineElement1231() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1231() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1231()
}

func (c *current) onInlineElement1236() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1236() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1236()
}

func (c *current) onInlineElement1243() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1243() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1243()
}

func (c *current) onInlineElement1239() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1239() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1239()
}

func (c *current) onInlineElement1245() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1245() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1245()
}

func (c *current) onInlineElement1222(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1222() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1222(stack["key"])
}

func (c *current) onInlineElement1259() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1259() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1259()
}

func (c *current) onInlineElement1219(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElement1219() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1219(stack["key"])
}

func (c *current) onInlineElement1147(otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElement1147() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1147(stack["otherAttrs"])
}

func (c *current) onInlineElement968(url, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElement968() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement968(stack["url"], stack["inlineAttributes"])
}

func (c *current) onInlineElement1275() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1275() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1275()
}

func (c *current) onInlineElement1287() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1287() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1287()
}

func (c *current) onInlineElement1278() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1278() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1278()
}

func (c *current) onInlineElement1272() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1272() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1272()
}

func (c *current) onInlineElement1264() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1264() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1264()
}

func (c *current) onInlineElement1262(url interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), nil)
}

func (p *parser) callonInlineElement1262() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1262(stack["url"])
}

func (c *current) onInlineElement669(link interface{}) (interface{}, error) {
	return link, nil
}

func (p *parser) callonInlineElement669() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement669(stack["link"])
}

func (c *current) onInlineElement1296() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1296() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1296()
}

func (c *current) onInlineElement1307() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1307() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1307()
}

func (c *current) onInlineElement1319() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1319() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1319()
}

func (c *current) onInlineElement1310() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1310() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1310()
}

func (c *current) onInlineElement1304() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1304() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1304()
}

func (c *current) onInlineElement1335() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1335() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1335()
}

func (c *current) onInlineElement1342() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1342() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1342()
}

func (c *current) onInlineElement1349() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1349() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1349()
}

func (c *current) onInlineElement1345() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1345() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1345()
}

func (c *current) onInlineElement1351() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1351() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1351()
}

func (c *current) onInlineElement1339() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1339() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1339()
}

func (c *current) onInlineElement1300(id, label interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string), label.(string))
}

func (p *parser) callonInlineElement1300() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1300(stack["id"], stack["label"])
}

func (c *current) onInlineElement1364() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1364() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1364()
}

func (c *current) onInlineElement1376() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1376() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1376()
}

func (c *current) onInlineElement1367() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1367() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1367()
}

func (c *current) onInlineElement1361() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1361() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1361()
}

func (c *current) onInlineElement1357(id interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string), nil)
}

func (p *parser) callonInlineElement1357() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1357(stack["id"])
}

func (c *current) onInlineElement1394() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1394() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1394()
}

func (c *current) onInlineElement1390(name interface{}) (interface{}, error) {
	return types.NewDocumentAttributeSubstitution(name.(string))
}

func (p *parser) callonInlineElement1390() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1390(stack["name"])
}

func (c *current) onInlineElement1407() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1407() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1407()
}

func (c *current) onInlineElement1419() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1419() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1419()
}

func (c *current) onInlineElement1410() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1410() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1410()
}

func (c *current) onInlineElement1404() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1404() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1404()
}

func (c *current) onInlineElement1436() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1436() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1436()
}

func (c *current) onInlineElement1400(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonInlineElement1400() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1400(stack["id"])
}

func (c *current) onInlineElement1441() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1441() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1441()
}

func (c *current) onInlineElement1454() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1454() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1454()
}

func (c *current) onInlineElement1463() (interface{}, error) {
	// rule used withn `words` to detect superscript or subscript portions, eg in math formulae.
	return string(c.text), nil
}

func (p *parser) callonInlineElement1463() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1463()
}

func (c *current) onInlineElement1445() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElement1445() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1445()
}

func (c *current) onInlineElement1439() (interface{}, error) {
	// word cannot contain parenthesis. Dots and ellipsis are treated as independent words (but will be combined afterwards)
	return string(c.text), nil
}

func (p *parser) callonInlineElement1439() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1439()
}

func (c *current) onInlineElement1(element interface{}) (interface{}, error) {
	return element, nil
}

func (p *parser) callonInlineElement1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElement1(stack["element"])
}

func (c *current) onInlineElementsWithoutSubtitution12() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution12()
}

func (c *current) onInlineElementsWithoutSubtitution4() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonInlineElementsWithoutSubtitution4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution4()
}

func (c *current) onInlineElementsWithoutSubtitution27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution27()
}

func (c *current) onInlineElementsWithoutSubtitution39() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution39()
}

func (c *current) onInlineElementsWithoutSubtitution51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution51()
}

func (c *current) onInlineElementsWithoutSubtitution64() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution64() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution64()
}

func (c *current) onInlineElementsWithoutSubtitution76() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution76() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution76()
}

func (c *current) onInlineElementsWithoutSubtitution92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution92()
}

func (c *current) onInlineElementsWithoutSubtitution98() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementsWithoutSubtitution98() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution98()
}

func (c *current) onInlineElementsWithoutSubtitution88() (interface{}, error) {
	return types.NewLineBreak()
}

func (p *parser) callonInlineElementsWithoutSubtitution88() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution88()
}

func (c *current) onInlineElementsWithoutSubtitution1(elements, linebreak interface{}) (interface{}, error) {
	// absorbs heading and trailing spaces
	return types.NewInlineElements(append(elements.([]interface{}), linebreak))
}

func (p *parser) callonInlineElementsWithoutSubtitution1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementsWithoutSubtitution1(stack["elements"], stack["linebreak"])
}

func (c *current) onInlineElementWithoutSubtitution14() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution14()
}

func (c *current) onInlineElementWithoutSubtitution20() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution20() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution20()
}

func (c *current) onInlineElementWithoutSubtitution10() (interface{}, error) {
	return types.NewLineBreak()
}

func (p *parser) callonInlineElementWithoutSubtitution10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution10()
}

func (c *current) onInlineElementWithoutSubtitution34() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution34() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution34()
}

func (c *current) onInlineElementWithoutSubtitution30() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution30() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution30()
}

func (c *current) onInlineElementWithoutSubtitution36() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution36() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution36()
}

func (c *current) onInlineElementWithoutSubtitution47() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution47() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution47()
}

func (c *current) onInlineElementWithoutSubtitution59() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution59() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution59()
}

func (c *current) onInlineElementWithoutSubtitution50() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution50() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution50()
}

func (c *current) onInlineElementWithoutSubtitution44() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution44() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution44()
}

func (c *current) onInlineElementWithoutSubtitution75() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution75() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution75()
}

func (c *current) onInlineElementWithoutSubtitution82() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution82() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution82()
}

func (c *current) onInlineElementWithoutSubtitution78() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution78() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution78()
}

func (c *current) onInlineElementWithoutSubtitution84() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution84() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution84()
}

func (c *current) onInlineElementWithoutSubtitution72() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution72() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution72()
}

func (c *current) onInlineElementWithoutSubtitution98() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution98() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution98()
}

func (c *current) onInlineElementWithoutSubtitution105() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution105() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution105()
}

func (c *current) onInlineElementWithoutSubtitution101() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution101() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution101()
}

func (c *current) onInlineElementWithoutSubtitution107() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution107()
}

func (c *current) onInlineElementWithoutSubtitution95() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution95()
}

func (c *current) onInlineElementWithoutSubtitution121() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution121()
}

func (c *current) onInlineElementWithoutSubtitution128() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution128() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution128()
}

func (c *current) onInlineElementWithoutSubtitution124() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution124()
}

func (c *current) onInlineElementWithoutSubtitution130() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution130()
}

func (c *current) onInlineElementWithoutSubtitution118() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution118() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution118()
}

func (c *current) onInlineElementWithoutSubtitution150() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution150() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution150()
}

func (c *current) onInlineElementWithoutSubtitution153() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution153() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution153()
}

func (c *current) onInlineElementWithoutSubtitution156() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution156() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution156()
}

func (c *current) onInlineElementWithoutSubtitution161() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution161() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution161()
}

func (c *current) onInlineElementWithoutSubtitution168() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution168() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution168()
}

func (c *current) onInlineElementWithoutSubtitution164() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution164() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution164()
}

func (c *current) onInlineElementWithoutSubtitution170() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution170() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution170()
}

func (c *current) onInlineElementWithoutSubtitution147(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution147() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution147(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution185() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution185() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution185()
}

func (c *current) onInlineElementWithoutSubtitution192() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution192() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution192()
}

func (c *current) onInlineElementWithoutSubtitution188() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution188() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution188()
}

func (c *current) onInlineElementWithoutSubtitution194() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution194() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution194()
}

func (c *current) onInlineElementWithoutSubtitution181(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution181() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution181(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution208() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution208() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution208()
}

func (c *current) onInlineElementWithoutSubtitution144(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution144(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution216() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution216() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution216()
}

func (c *current) onInlineElementWithoutSubtitution219() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution219() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution219()
}

func (c *current) onInlineElementWithoutSubtitution222() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution222() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution222()
}

func (c *current) onInlineElementWithoutSubtitution227() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution227() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution227()
}

func (c *current) onInlineElementWithoutSubtitution234() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution234() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution234()
}

func (c *current) onInlineElementWithoutSubtitution230() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution230() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution230()
}

func (c *current) onInlineElementWithoutSubtitution236() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution236() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution236()
}

func (c *current) onInlineElementWithoutSubtitution213(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution213() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution213(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution250() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution250() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution250()
}

func (c *current) onInlineElementWithoutSubtitution210(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution210() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution210(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution68(alt, width, height, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, height, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElementWithoutSubtitution68() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution68(stack["alt"], stack["width"], stack["height"], stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution260() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution260() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution260()
}

func (c *current) onInlineElementWithoutSubtitution267() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution267() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution267()
}

func (c *current) onInlineElementWithoutSubtitution263() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution263() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution263()
}

func (c *current) onInlineElementWithoutSubtitution269() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution269() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution269()
}

func (c *current) onInlineElementWithoutSubtitution257() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution257() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution257()
}

func (c *current) onInlineElementWithoutSubtitution283() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution283() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution283()
}

func (c *current) onInlineElementWithoutSubtitution290() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution290() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution290()
}

func (c *current) onInlineElementWithoutSubtitution286() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution286() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution286()
}

func (c *current) onInlineElementWithoutSubtitution292() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution292() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution292()
}

func (c *current) onInlineElementWithoutSubtitution280() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution280() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution280()
}

func (c *current) onInlineElementWithoutSubtitution312() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution312() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution312()
}

func (c *current) onInlineElementWithoutSubtitution315() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution315() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution315()
}

func (c *current) onInlineElementWithoutSubtitution318() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution318() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution318()
}

func (c *current) onInlineElementWithoutSubtitution323() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution323() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution323()
}

func (c *current) onInlineElementWithoutSubtitution330() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution330() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution330()
}

func (c *current) onInlineElementWithoutSubtitution326() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution326() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution326()
}

func (c *current) onInlineElementWithoutSubtitution332() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution332() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution332()
}

func (c *current) onInlineElementWithoutSubtitution309(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution309() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution309(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution347() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution347() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution347()
}

func (c *current) onInlineElementWithoutSubtitution354() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution354() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution354()
}

func (c *current) onInlineElementWithoutSubtitution350() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution350() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution350()
}

func (c *current) onInlineElementWithoutSubtitution356() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution356() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution356()
}

func (c *current) onInlineElementWithoutSubtitution343(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution343() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution343(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution370() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution370() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution370()
}

func (c *current) onInlineElementWithoutSubtitution306(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution306() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution306(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution378() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution378() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution378()
}

func (c *current) onInlineElementWithoutSubtitution381() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution381() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution381()
}

func (c *current) onInlineElementWithoutSubtitution384() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution384() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution384()
}

func (c *current) onInlineElementWithoutSubtitution389() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution389() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution389()
}

func (c *current) onInlineElementWithoutSubtitution396() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution396() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution396()
}

func (c *current) onInlineElementWithoutSubtitution392() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution392() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution392()
}

func (c *current) onInlineElementWithoutSubtitution398() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution398() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution398()
}

func (c *current) onInlineElementWithoutSubtitution375(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution375() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution375(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution412() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution412() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution412()
}

func (c *current) onInlineElementWithoutSubtitution372(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution372() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution372(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution253(alt, width, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, width, nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElementWithoutSubtitution253() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution253(stack["alt"], stack["width"], stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution422() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution422() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution422()
}

func (c *current) onInlineElementWithoutSubtitution429() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution429() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution429()
}

func (c *current) onInlineElementWithoutSubtitution425() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution425() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution425()
}

func (c *current) onInlineElementWithoutSubtitution431() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution431() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution431()
}

func (c *current) onInlineElementWithoutSubtitution419() (interface{}, error) {
	// attribute is followed by "," or "]" (but do not consume the latter)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution419() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution419()
}

func (c *current) onInlineElementWithoutSubtitution451() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution451() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution451()
}

func (c *current) onInlineElementWithoutSubtitution454() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution454() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution454()
}

func (c *current) onInlineElementWithoutSubtitution457() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution457() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution457()
}

func (c *current) onInlineElementWithoutSubtitution462() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution462() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution462()
}

func (c *current) onInlineElementWithoutSubtitution469() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution469() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution469()
}

func (c *current) onInlineElementWithoutSubtitution465() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution465() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution465()
}

func (c *current) onInlineElementWithoutSubtitution471() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution471() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution471()
}

func (c *current) onInlineElementWithoutSubtitution448(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution448() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution448(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution486() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution486() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution486()
}

func (c *current) onInlineElementWithoutSubtitution493() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution493() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution493()
}

func (c *current) onInlineElementWithoutSubtitution489() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution489() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution489()
}

func (c *current) onInlineElementWithoutSubtitution495() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution495() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution495()
}

func (c *current) onInlineElementWithoutSubtitution482(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution482() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution482(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution509() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution509() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution509()
}

func (c *current) onInlineElementWithoutSubtitution445(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution445() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution445(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution517() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution517() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution517()
}

func (c *current) onInlineElementWithoutSubtitution520() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution520() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution520()
}

func (c *current) onInlineElementWithoutSubtitution523() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution523() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution523()
}

func (c *current) onInlineElementWithoutSubtitution528() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution528() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution528()
}

func (c *current) onInlineElementWithoutSubtitution535() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution535() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution535()
}

func (c *current) onInlineElementWithoutSubtitution531() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution531() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution531()
}

func (c *current) onInlineElementWithoutSubtitution537() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution537() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution537()
}

func (c *current) onInlineElementWithoutSubtitution514(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution514() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution514(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution551() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution551() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution551()
}

func (c *current) onInlineElementWithoutSubtitution511(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution511() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution511(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution415(alt, otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(alt, nil, nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElementWithoutSubtitution415() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution415(stack["alt"], stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution566() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution566() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution566()
}

func (c *current) onInlineElementWithoutSubtitution569() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution569() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution569()
}

func (c *current) onInlineElementWithoutSubtitution572() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution572() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution572()
}

func (c *current) onInlineElementWithoutSubtitution577() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution577() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution577()
}

func (c *current) onInlineElementWithoutSubtitution584() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution584() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution584()
}

func (c *current) onInlineElementWithoutSubtitution580() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution580() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution580()
}

func (c *current) onInlineElementWithoutSubtitution586() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution586() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution586()
}

func (c *current) onInlineElementWithoutSubtitution563(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution563() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution563(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution601() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution601() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution601()
}

func (c *current) onInlineElementWithoutSubtitution608() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution608() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution608()
}

func (c *current) onInlineElementWithoutSubtitution604() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution604() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution604()
}

func (c *current) onInlineElementWithoutSubtitution610() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution610() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution610()
}

func (c *current) onInlineElementWithoutSubtitution597(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution597() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution597(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution624() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution624() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution624()
}

func (c *current) onInlineElementWithoutSubtitution560(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution560() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution560(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution632() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution632() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution632()
}

func (c *current) onInlineElementWithoutSubtitution635() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution635() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution635()
}

func (c *current) onInlineElementWithoutSubtitution638() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution638() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution638()
}

func (c *current) onInlineElementWithoutSubtitution643() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution643() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution643()
}

func (c *current) onInlineElementWithoutSubtitution650() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution650() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution650()
}

func (c *current) onInlineElementWithoutSubtitution646() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution646() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution646()
}

func (c *current) onInlineElementWithoutSubtitution652() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution652() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution652()
}

func (c *current) onInlineElementWithoutSubtitution629(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution629() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution629(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution666() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution666() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution666()
}

func (c *current) onInlineElementWithoutSubtitution626(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution626() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution626(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution554(otherAttrs interface{}) (interface{}, error) {
	return types.NewImageAttributes(nil, nil, nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElementWithoutSubtitution554() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution554(stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution38(path, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineImage(path.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElementWithoutSubtitution38() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution38(stack["path"], stack["inlineAttributes"])
}

func (c *current) onInlineElementWithoutSubtitution688() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution688() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution688()
}

func (c *current) onInlineElementWithoutSubtitution700() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution700() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution700()
}

func (c *current) onInlineElementWithoutSubtitution691() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution691() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution691()
}

func (c *current) onInlineElementWithoutSubtitution685() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution685() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution685()
}

func (c *current) onInlineElementWithoutSubtitution676() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution676() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution676()
}

func (c *current) onInlineElementWithoutSubtitution716() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution716() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution716()
}

func (c *current) onInlineElementWithoutSubtitution723() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution723() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution723()
}

func (c *current) onInlineElementWithoutSubtitution719() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution719() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution719()
}

func (c *current) onInlineElementWithoutSubtitution725() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution725() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution725()
}

func (c *current) onInlineElementWithoutSubtitution713() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution713() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution713()
}

func (c *current) onInlineElementWithoutSubtitution739() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution739() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution739()
}

func (c *current) onInlineElementWithoutSubtitution750() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution750() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution750()
}

func (c *current) onInlineElementWithoutSubtitution753() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution753() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution753()
}

func (c *current) onInlineElementWithoutSubtitution756() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution756() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution756()
}

func (c *current) onInlineElementWithoutSubtitution761() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution761() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution761()
}

func (c *current) onInlineElementWithoutSubtitution768() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution768() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution768()
}

func (c *current) onInlineElementWithoutSubtitution764() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution764() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution764()
}

func (c *current) onInlineElementWithoutSubtitution770() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution770() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution770()
}

func (c *current) onInlineElementWithoutSubtitution747(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution747() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution747(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution785() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution785() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution785()
}

func (c *current) onInlineElementWithoutSubtitution792() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution792() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution792()
}

func (c *current) onInlineElementWithoutSubtitution788() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution788() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution788()
}

func (c *current) onInlineElementWithoutSubtitution794() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution794() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution794()
}

func (c *current) onInlineElementWithoutSubtitution781(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution781() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution781(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution808() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution808() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution808()
}

func (c *current) onInlineElementWithoutSubtitution744(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution744() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution744(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution816() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution816() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution816()
}

func (c *current) onInlineElementWithoutSubtitution819() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution819() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution819()
}

func (c *current) onInlineElementWithoutSubtitution822() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution822() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution822()
}

func (c *current) onInlineElementWithoutSubtitution827() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution827() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution827()
}

func (c *current) onInlineElementWithoutSubtitution834() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution834() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution834()
}

func (c *current) onInlineElementWithoutSubtitution830() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution830() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution830()
}

func (c *current) onInlineElementWithoutSubtitution836() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution836() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution836()
}

func (c *current) onInlineElementWithoutSubtitution813(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution813() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution813(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution850() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution850() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution850()
}

func (c *current) onInlineElementWithoutSubtitution810(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution810() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution810(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution709(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElementWithoutSubtitution709() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution709(stack["text"], stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution865() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution865() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution865()
}

func (c *current) onInlineElementWithoutSubtitution868() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution868() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution868()
}

func (c *current) onInlineElementWithoutSubtitution871() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution871() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution871()
}

func (c *current) onInlineElementWithoutSubtitution876() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution876() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution876()
}

func (c *current) onInlineElementWithoutSubtitution883() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution883() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution883()
}

func (c *current) onInlineElementWithoutSubtitution879() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution879() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution879()
}

func (c *current) onInlineElementWithoutSubtitution885() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution885() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution885()
}

func (c *current) onInlineElementWithoutSubtitution862(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution862() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution862(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution900() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution900() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution900()
}

func (c *current) onInlineElementWithoutSubtitution907() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution907() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution907()
}

func (c *current) onInlineElementWithoutSubtitution903() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution903() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution903()
}

func (c *current) onInlineElementWithoutSubtitution909() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution909() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution909()
}

func (c *current) onInlineElementWithoutSubtitution896(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution896() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution896(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution923() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution923() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution923()
}

func (c *current) onInlineElementWithoutSubtitution859(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution859() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution859(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution931() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution931() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution931()
}

func (c *current) onInlineElementWithoutSubtitution934() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution934() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution934()
}

func (c *current) onInlineElementWithoutSubtitution937() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution937() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution937()
}

func (c *current) onInlineElementWithoutSubtitution942() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution942() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution942()
}

func (c *current) onInlineElementWithoutSubtitution949() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution949() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution949()
}

func (c *current) onInlineElementWithoutSubtitution945() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution945() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution945()
}

func (c *current) onInlineElementWithoutSubtitution951() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution951() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution951()
}

func (c *current) onInlineElementWithoutSubtitution928(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution928() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution928(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution965() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution965() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution965()
}

func (c *current) onInlineElementWithoutSubtitution925(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution925() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution925(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution853(otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElementWithoutSubtitution853() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution853(stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution672(url, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElementWithoutSubtitution672() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution672(stack["url"], stack["inlineAttributes"])
}

func (c *current) onInlineElementWithoutSubtitution982() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution982() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution982()
}

func (c *current) onInlineElementWithoutSubtitution994() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution994() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution994()
}

func (c *current) onInlineElementWithoutSubtitution985() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution985() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution985()
}

func (c *current) onInlineElementWithoutSubtitution979() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution979() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution979()
}

func (c *current) onInlineElementWithoutSubtitution971() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution971() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution971()
}

func (c *current) onInlineElementWithoutSubtitution1010() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1010() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1010()
}

func (c *current) onInlineElementWithoutSubtitution1017() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1017() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1017()
}

func (c *current) onInlineElementWithoutSubtitution1013() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1013() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1013()
}

func (c *current) onInlineElementWithoutSubtitution1019() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1019() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1019()
}

func (c *current) onInlineElementWithoutSubtitution1007() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1007() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1007()
}

func (c *current) onInlineElementWithoutSubtitution1033() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1033() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1033()
}

func (c *current) onInlineElementWithoutSubtitution1044() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1044() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1044()
}

func (c *current) onInlineElementWithoutSubtitution1047() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1047() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1047()
}

func (c *current) onInlineElementWithoutSubtitution1050() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1050() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1050()
}

func (c *current) onInlineElementWithoutSubtitution1055() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1055() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1055()
}

func (c *current) onInlineElementWithoutSubtitution1062() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1062() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1062()
}

func (c *current) onInlineElementWithoutSubtitution1058() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1058() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1058()
}

func (c *current) onInlineElementWithoutSubtitution1064() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1064() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1064()
}

func (c *current) onInlineElementWithoutSubtitution1041(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1041() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1041(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution1079() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1079() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1079()
}

func (c *current) onInlineElementWithoutSubtitution1086() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1086() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1086()
}

func (c *current) onInlineElementWithoutSubtitution1082() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1082() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1082()
}

func (c *current) onInlineElementWithoutSubtitution1088() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1088() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1088()
}

func (c *current) onInlineElementWithoutSubtitution1075(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1075() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1075(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution1102() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1102() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1102()
}

func (c *current) onInlineElementWithoutSubtitution1038(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution1038() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1038(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution1110() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1110() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1110()
}

func (c *current) onInlineElementWithoutSubtitution1113() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1113()
}

func (c *current) onInlineElementWithoutSubtitution1116() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1116() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1116()
}

func (c *current) onInlineElementWithoutSubtitution1121() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1121()
}

func (c *current) onInlineElementWithoutSubtitution1128() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1128() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1128()
}

func (c *current) onInlineElementWithoutSubtitution1124() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1124() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1124()
}

func (c *current) onInlineElementWithoutSubtitution1130() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1130() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1130()
}

func (c *current) onInlineElementWithoutSubtitution1107(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1107(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution1144() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1144() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1144()
}

func (c *current) onInlineElementWithoutSubtitution1104(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution1104() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1104(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution1003(text, otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(text, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElementWithoutSubtitution1003() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1003(stack["text"], stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution1159() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1159() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1159()
}

func (c *current) onInlineElementWithoutSubtitution1162() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1162() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1162()
}

func (c *current) onInlineElementWithoutSubtitution1165() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1165() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1165()
}

func (c *current) onInlineElementWithoutSubtitution1170() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1170() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1170()
}

func (c *current) onInlineElementWithoutSubtitution1177() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1177() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1177()
}

func (c *current) onInlineElementWithoutSubtitution1173() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1173() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1173()
}

func (c *current) onInlineElementWithoutSubtitution1179() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1179() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1179()
}

func (c *current) onInlineElementWithoutSubtitution1156(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1156() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1156(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution1194() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1194() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1194()
}

func (c *current) onInlineElementWithoutSubtitution1201() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1201() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1201()
}

func (c *current) onInlineElementWithoutSubtitution1197() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1197() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1197()
}

func (c *current) onInlineElementWithoutSubtitution1203() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1203() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1203()
}

func (c *current) onInlineElementWithoutSubtitution1190(value interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1190() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1190(stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution1217() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1217() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1217()
}

func (c *current) onInlineElementWithoutSubtitution1153(key, value interface{}) (interface{}, error) {
	// value is set
	return types.NewGenericAttribute(key.(string), value)
}

func (p *parser) callonInlineElementWithoutSubtitution1153() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1153(stack["key"], stack["value"])
}

func (c *current) onInlineElementWithoutSubtitution1225() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1225() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1225()
}

func (c *current) onInlineElementWithoutSubtitution1228() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1228() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1228()
}

func (c *current) onInlineElementWithoutSubtitution1231() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1231() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1231()
}

func (c *current) onInlineElementWithoutSubtitution1236() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1236() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1236()
}

func (c *current) onInlineElementWithoutSubtitution1243() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1243() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1243()
}

func (c *current) onInlineElementWithoutSubtitution1239() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1239() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1239()
}

func (c *current) onInlineElementWithoutSubtitution1245() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1245() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1245()
}

func (c *current) onInlineElementWithoutSubtitution1222(key interface{}) (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1222() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1222(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution1259() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1259() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1259()
}

func (c *current) onInlineElementWithoutSubtitution1219(key interface{}) (interface{}, error) {
	// value is not set
	return types.NewGenericAttribute(key.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution1219() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1219(stack["key"])
}

func (c *current) onInlineElementWithoutSubtitution1147(otherAttrs interface{}) (interface{}, error) {
	return types.NewInlineLinkAttributes(nil, otherAttrs.([]interface{}))
}

func (p *parser) callonInlineElementWithoutSubtitution1147() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1147(stack["otherAttrs"])
}

func (c *current) onInlineElementWithoutSubtitution968(url, inlineAttributes interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), inlineAttributes.(types.ElementAttributes))
}

func (p *parser) callonInlineElementWithoutSubtitution968() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution968(stack["url"], stack["inlineAttributes"])
}

func (c *current) onInlineElementWithoutSubtitution1275() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1275() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1275()
}

func (c *current) onInlineElementWithoutSubtitution1287() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1287() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1287()
}

func (c *current) onInlineElementWithoutSubtitution1278() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1278() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1278()
}

func (c *current) onInlineElementWithoutSubtitution1272() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1272() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1272()
}

func (c *current) onInlineElementWithoutSubtitution1264() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1264() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1264()
}

func (c *current) onInlineElementWithoutSubtitution1262(url interface{}) (interface{}, error) {
	return types.NewInlineLink(url.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution1262() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1262(stack["url"])
}

func (c *current) onInlineElementWithoutSubtitution669(link interface{}) (interface{}, error) {
	return link, nil
}

func (p *parser) callonInlineElementWithoutSubtitution669() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution669(stack["link"])
}

func (c *current) onInlineElementWithoutSubtitution1295() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1295() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1295()
}

func (c *current) onInlineElementWithoutSubtitution1306() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1306() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1306()
}

func (c *current) onInlineElementWithoutSubtitution1318() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1318() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1318()
}

func (c *current) onInlineElementWithoutSubtitution1309() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1309() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1309()
}

func (c *current) onInlineElementWithoutSubtitution1303() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1303() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1303()
}

func (c *current) onInlineElementWithoutSubtitution1334() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1334() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1334()
}

func (c *current) onInlineElementWithoutSubtitution1341() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1341() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1341()
}

func (c *current) onInlineElementWithoutSubtitution1348() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1348() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1348()
}

func (c *current) onInlineElementWithoutSubtitution1344() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1344() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1344()
}

func (c *current) onInlineElementWithoutSubtitution1350() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1350() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1350()
}

func (c *current) onInlineElementWithoutSubtitution1338() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1338() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1338()
}

func (c *current) onInlineElementWithoutSubtitution1299(id, label interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string), label.(string))
}

func (p *parser) callonInlineElementWithoutSubtitution1299() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1299(stack["id"], stack["label"])
}

func (c *current) onInlineElementWithoutSubtitution1363() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1363() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1363()
}

func (c *current) onInlineElementWithoutSubtitution1375() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1375() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1375()
}

func (c *current) onInlineElementWithoutSubtitution1366() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1366() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1366()
}

func (c *current) onInlineElementWithoutSubtitution1360() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1360() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1360()
}

func (c *current) onInlineElementWithoutSubtitution1356(id interface{}) (interface{}, error) {
	return types.NewCrossReference(id.(string), nil)
}

func (p *parser) callonInlineElementWithoutSubtitution1356() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1356(stack["id"])
}

func (c *current) onInlineElementWithoutSubtitution1396() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1396() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1396()
}

func (c *current) onInlineElementWithoutSubtitution1408() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1408() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1408()
}

func (c *current) onInlineElementWithoutSubtitution1399() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1399() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1399()
}

func (c *current) onInlineElementWithoutSubtitution1393() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1393() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1393()
}

func (c *current) onInlineElementWithoutSubtitution1425() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1425() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1425()
}

func (c *current) onInlineElementWithoutSubtitution1389(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonInlineElementWithoutSubtitution1389() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1389(stack["id"])
}

func (c *current) onInlineElementWithoutSubtitution1430() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1430() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1430()
}

func (c *current) onInlineElementWithoutSubtitution1443() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1443() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1443()
}

func (c *current) onInlineElementWithoutSubtitution1452() (interface{}, error) {
	// rule used withn `words` to detect superscript or subscript portions, eg in math formulae.
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1452() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1452()
}

func (c *current) onInlineElementWithoutSubtitution1434() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1434() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1434()
}

func (c *current) onInlineElementWithoutSubtitution1428() (interface{}, error) {
	// word cannot contain parenthesis. Dots and ellipsis are treated as independent words (but will be combined afterwards)
	return string(c.text), nil
}

func (p *parser) callonInlineElementWithoutSubtitution1428() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1428()
}

func (c *current) onInlineElementWithoutSubtitution1(element interface{}) (interface{}, error) {
	return element, nil
}

func (p *parser) callonInlineElementWithoutSubtitution1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineElementWithoutSubtitution1(stack["element"])
}

func (c *current) onQuotedText13() (interface{}, error) {
	// rule used withn `words` to detect superscript or subscript portions, eg in math formulae.
	return string(c.text), nil
}

func (p *parser) callonQuotedText13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedText13()
}

func (c *current) onBoldText2(content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewQuotedText(types.Bold, content.([]interface{}))

}

func (p *parser) callonBoldText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBoldText2(stack["content"])
}

func (c *current) onBoldText10(content interface{}) (interface{}, error) {
	// unbalanced `**` vs `*` punctuation
	result := append([]interface{}{"*"}, content.([]interface{}))
	return types.NewQuotedText(types.Bold, result)

}

func (p *parser) callonBoldText10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBoldText10(stack["content"])
}

func (c *current) onBoldText18(content interface{}) (interface{}, error) {
	// single punctuation cannot be followed by a character (needs '**' to emphazise a portion of a word)
	return types.NewQuotedText(types.Bold, content.([]interface{}))
}

func (p *parser) callonBoldText18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBoldText18(stack["content"])
}

func (c *current) onEscapedBoldText5() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedBoldText5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText5()
}

func (c *current) onEscapedBoldText2(backslashes, content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewEscapedQuotedText(backslashes.(string), "**", content.([]interface{}))

}

func (p *parser) callonEscapedBoldText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText2(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedBoldText17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedBoldText17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText17()
}

func (c *current) onEscapedBoldText14(backslashes, content interface{}) (interface{}, error) {
	// unbalanced `**` vs `*` punctuation
	result := append([]interface{}{"*"}, content.([]interface{}))
	return types.NewEscapedQuotedText(backslashes.(string), "*", result)

}

func (p *parser) callonEscapedBoldText14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText14(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedBoldText29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedBoldText29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText29()
}

func (c *current) onEscapedBoldText26(backslashes, content interface{}) (interface{}, error) {
	// simple punctuation must be evaluated last
	return types.NewEscapedQuotedText(backslashes.(string), "*", content.([]interface{}))
}

func (p *parser) callonEscapedBoldText26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedBoldText26(stack["backslashes"], stack["content"])
}

func (c *current) onItalicText2(content interface{}) (interface{}, error) {
	return types.NewQuotedText(types.Italic, content.([]interface{}))

}

func (p *parser) callonItalicText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onItalicText2(stack["content"])
}

func (c *current) onItalicText10(content interface{}) (interface{}, error) {
	// unbalanced `__` vs `_` punctuation
	result := append([]interface{}{"_"}, content.([]interface{}))
	return types.NewQuotedText(types.Italic, result)

}

func (p *parser) callonItalicText10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onItalicText10(stack["content"])
}

func (c *current) onItalicText18(content interface{}) (interface{}, error) {
	// single punctuation cannot be followed by a character (needs '__' to emphazise a portion of a word)
	return types.NewQuotedText(types.Italic, content.([]interface{}))
}

func (p *parser) callonItalicText18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onItalicText18(stack["content"])
}

func (c *current) onEscapedItalicText5() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedItalicText5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText5()
}

func (c *current) onEscapedItalicText2(backslashes, content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewEscapedQuotedText(backslashes.(string), "__", content.([]interface{}))

}

func (p *parser) callonEscapedItalicText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText2(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedItalicText17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedItalicText17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText17()
}

func (c *current) onEscapedItalicText14(backslashes, content interface{}) (interface{}, error) {
	// unbalanced `__` vs `_` punctuation
	result := append([]interface{}{"_"}, content.([]interface{}))
	return types.NewEscapedQuotedText(backslashes.(string), "_", result)

}

func (p *parser) callonEscapedItalicText14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText14(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedItalicText29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedItalicText29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText29()
}

func (c *current) onEscapedItalicText26(backslashes, content interface{}) (interface{}, error) {
	// simple punctuation must be evaluated last
	return types.NewEscapedQuotedText(backslashes.(string), "_", content.([]interface{}))
}

func (p *parser) callonEscapedItalicText26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedItalicText26(stack["backslashes"], stack["content"])
}

func (c *current) onMonospaceText2(content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewQuotedText(types.Monospace, content.([]interface{}))

}

func (p *parser) callonMonospaceText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMonospaceText2(stack["content"])
}

func (c *current) onMonospaceText10(content interface{}) (interface{}, error) {
	// unbalanced "``" vs "`" punctuation
	result := append([]interface{}{"`"}, content.([]interface{}))
	return types.NewQuotedText(types.Monospace, result)

}

func (p *parser) callonMonospaceText10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMonospaceText10(stack["content"])
}

func (c *current) onMonospaceText18(content interface{}) (interface{}, error) {
	// single punctuation cannot be followed by a character (needs '``' to emphazise a portion of a word)
	return types.NewQuotedText(types.Monospace, content.([]interface{}))
}

func (p *parser) callonMonospaceText18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onMonospaceText18(stack["content"])
}

func (c *current) onEscapedMonospaceText5() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedMonospaceText5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText5()
}

func (c *current) onEscapedMonospaceText2(backslashes, content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewEscapedQuotedText(backslashes.(string), "``", content.([]interface{}))

}

func (p *parser) callonEscapedMonospaceText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText2(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedMonospaceText17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedMonospaceText17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText17()
}

func (c *current) onEscapedMonospaceText14(backslashes, content interface{}) (interface{}, error) {
	// unbalanced "``" vs "`" punctuation
	result := append([]interface{}{"`"}, content.([]interface{}))
	return types.NewEscapedQuotedText(backslashes.(string), "`", result)

}

func (p *parser) callonEscapedMonospaceText14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText14(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedMonospaceText29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedMonospaceText29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText29()
}

func (c *current) onEscapedMonospaceText26(backslashes, content interface{}) (interface{}, error) {
	// simple punctuation must be evaluated last
	return types.NewEscapedQuotedText(backslashes.(string), "`", content.([]interface{}))
}

func (p *parser) callonEscapedMonospaceText26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedMonospaceText26(stack["backslashes"], stack["content"])
}

func (c *current) onSubscriptText2(content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewQuotedText(types.Subscript, content.([]interface{}))

}

func (p *parser) callonSubscriptText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSubscriptText2(stack["content"])
}

func (c *current) onSubscriptText10(content interface{}) (interface{}, error) {
	// unbalanced "~~" vs "~" punctuation
	result := append([]interface{}{"~"}, content.([]interface{}))
	return types.NewQuotedText(types.Subscript, result)

}

func (p *parser) callonSubscriptText10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSubscriptText10(stack["content"])
}

func (c *current) onSubscriptText18(content interface{}) (interface{}, error) {
	// single punctuation cannot be followed by a character (needs '~~' to emphazise a portion of a word)
	return types.NewQuotedText(types.Subscript, content.([]interface{}))
}

func (p *parser) callonSubscriptText18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSubscriptText18(stack["content"])
}

func (c *current) onEscapedSubscriptText5() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedSubscriptText5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSubscriptText5()
}

func (c *current) onEscapedSubscriptText2(backslashes, content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewEscapedQuotedText(backslashes.(string), "~~", content.([]interface{}))

}

func (p *parser) callonEscapedSubscriptText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSubscriptText2(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedSubscriptText17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedSubscriptText17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSubscriptText17()
}

func (c *current) onEscapedSubscriptText14(backslashes, content interface{}) (interface{}, error) {
	// unbalanced "~~" vs "~" punctuation
	result := append([]interface{}{"~"}, content.([]interface{}))
	return types.NewEscapedQuotedText(backslashes.(string), "~", result)

}

func (p *parser) callonEscapedSubscriptText14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSubscriptText14(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedSubscriptText29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedSubscriptText29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSubscriptText29()
}

func (c *current) onEscapedSubscriptText26(backslashes, content interface{}) (interface{}, error) {
	// simple punctuation must be evaluated last
	return types.NewEscapedQuotedText(backslashes.(string), "~", content.([]interface{}))
}

func (p *parser) callonEscapedSubscriptText26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSubscriptText26(stack["backslashes"], stack["content"])
}

func (c *current) onSuperscriptText2(content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewQuotedText(types.Superscript, content.([]interface{}))

}

func (p *parser) callonSuperscriptText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSuperscriptText2(stack["content"])
}

func (c *current) onSuperscriptText10(content interface{}) (interface{}, error) {
	// unbalanced "^^" vs "^" punctuation
	result := append([]interface{}{"^"}, content.([]interface{}))
	return types.NewQuotedText(types.Superscript, result)

}

func (p *parser) callonSuperscriptText10() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSuperscriptText10(stack["content"])
}

func (c *current) onSuperscriptText18(content interface{}) (interface{}, error) {
	// single punctuation cannot be followed by a character (needs '**' to emphazise a portion of a word)
	return types.NewQuotedText(types.Superscript, content.([]interface{}))
}

func (p *parser) callonSuperscriptText18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSuperscriptText18(stack["content"])
}

func (c *current) onEscapedSuperscriptText5() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedSuperscriptText5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSuperscriptText5()
}

func (c *current) onEscapedSuperscriptText2(backslashes, content interface{}) (interface{}, error) {
	// double punctuation must be evaluated first
	return types.NewEscapedQuotedText(backslashes.(string), "^^", content.([]interface{}))

}

func (p *parser) callonEscapedSuperscriptText2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSuperscriptText2(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedSuperscriptText17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedSuperscriptText17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSuperscriptText17()
}

func (c *current) onEscapedSuperscriptText14(backslashes, content interface{}) (interface{}, error) {
	// unbalanced "^^" vs "^" punctuation
	result := append([]interface{}{"^"}, content.([]interface{}))
	return types.NewEscapedQuotedText(backslashes.(string), "^", result)

}

func (p *parser) callonEscapedSuperscriptText14() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSuperscriptText14(stack["backslashes"], stack["content"])
}

func (c *current) onEscapedSuperscriptText29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonEscapedSuperscriptText29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSuperscriptText29()
}

func (c *current) onEscapedSuperscriptText26(backslashes, content interface{}) (interface{}, error) {
	// simple punctuation must be evaluated last
	return types.NewEscapedQuotedText(backslashes.(string), "^", content.([]interface{}))
}

func (p *parser) callonEscapedSuperscriptText26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onEscapedSuperscriptText26(stack["backslashes"], stack["content"])
}

func (c *current) onQuotedTextContent8() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuotedTextContent8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContent8()
}

func (c *current) onQuotedTextContentElement6() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuotedTextContentElement6() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContentElement6()
}

func (c *current) onQuotedTextContentElement18() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuotedTextContentElement18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContentElement18()
}

func (c *current) onQuotedTextContentElement9() (interface{}, error) {

	return string(c.text), nil // cannot have "*", "_", "`", "~" or "^" within
}

func (p *parser) callonQuotedTextContentElement9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContentElement9()
}

func (c *current) onQuotedTextContentElement3() (interface{}, error) {

	return c.text, nil
}

func (p *parser) callonQuotedTextContentElement3() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContentElement3()
}

func (c *current) onQuotedTextContentElement34() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuotedTextContentElement34() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContentElement34()
}

func (c *current) onQuotedTextContentElement46() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuotedTextContentElement46() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContentElement46()
}

func (c *current) onQuotedTextContentElement37() (interface{}, error) {

	return string(c.text), nil // cannot have "*", "_", "`", "~" or "^" within
}

func (p *parser) callonQuotedTextContentElement37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContentElement37()
}

func (c *current) onQuotedTextContentElement31() (interface{}, error) {

	return c.text, nil
}

func (p *parser) callonQuotedTextContentElement31() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuotedTextContentElement31()
}

func (c *current) onPassthrough8() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonPassthrough8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthrough8()
}

func (c *current) onPassthrough15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonPassthrough15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthrough15()
}

func (c *current) onPassthrough11() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonPassthrough11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthrough11()
}

func (c *current) onPassthrough17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonPassthrough17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthrough17()
}

func (c *current) onPassthrough2(content interface{}) (interface{}, error) {
	return types.NewPassthrough(types.TriplePlusPassthrough, content.([]interface{}))
}

func (p *parser) callonPassthrough2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthrough2(stack["content"])
}

func (c *current) onPassthrough29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonPassthrough29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthrough29()
}

func (c *current) onPassthrough36() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonPassthrough36() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthrough36()
}

func (c *current) onPassthrough32() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonPassthrough32() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthrough32()
}

func (c *current) onPassthrough38() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonPassthrough38() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthrough38()
}

func (c *current) onPassthrough23(content interface{}) (interface{}, error) {
	return types.NewPassthrough(types.SinglePlusPassthrough, content.([]interface{}))
}

func (p *parser) callonPassthrough23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthrough23(stack["content"])
}

func (c *current) onPassthroughMacro8() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonPassthroughMacro8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthroughMacro8()
}

func (c *current) onPassthroughMacro15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonPassthroughMacro15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthroughMacro15()
}

func (c *current) onPassthroughMacro11() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonPassthroughMacro11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthroughMacro11()
}

func (c *current) onPassthroughMacro17() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonPassthroughMacro17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthroughMacro17()
}

func (c *current) onPassthroughMacro2(content interface{}) (interface{}, error) {
	return types.NewPassthrough(types.PassthroughMacro, content.([]interface{}))
}

func (p *parser) callonPassthroughMacro2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthroughMacro2(stack["content"])
}

func (c *current) onPassthroughMacro30() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonPassthroughMacro30() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthroughMacro30()
}

func (c *current) onPassthroughMacro37() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonPassthroughMacro37() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthroughMacro37()
}

func (c *current) onPassthroughMacro33() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonPassthroughMacro33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthroughMacro33()
}

func (c *current) onPassthroughMacro39() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonPassthroughMacro39() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthroughMacro39()
}

func (c *current) onPassthroughMacro23(content interface{}) (interface{}, error) {
	return types.NewPassthrough(types.PassthroughMacro, content.([]interface{}))
}

func (p *parser) callonPassthroughMacro23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onPassthroughMacro23(stack["content"])
}

func (c *current) onInlineFootnote2(content interface{}) (interface{}, error) {
	return types.NewFootnote("", content.(types.InlineElements))
}

func (p *parser) callonInlineFootnote2() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote2(stack["content"])
}

func (c *current) onInlineFootnote15() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineFootnote15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote15()
}

func (c *current) onInlineFootnote22() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineFootnote22() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote22()
}

func (c *current) onInlineFootnote18() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineFootnote18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote18()
}

func (c *current) onInlineFootnote24() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineFootnote24() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote24()
}

func (c *current) onInlineFootnote12() (interface{}, error) {
	// footnote ID not may span multiple lines
	return string(c.text), nil
}

func (p *parser) callonInlineFootnote12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote12()
}

func (c *current) onInlineFootnote8(ref, content interface{}) (interface{}, error) {
	return types.NewFootnote(ref.(string), content.(types.InlineElements))
}

func (p *parser) callonInlineFootnote8() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote8(stack["ref"], stack["content"])
}

func (c *current) onInlineFootnote48() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineFootnote48() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote48()
}

func (c *current) onInlineFootnote55() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineFootnote55() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote55()
}

func (c *current) onInlineFootnote51() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineFootnote51() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote51()
}

func (c *current) onInlineFootnote57() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonInlineFootnote57() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote57()
}

func (c *current) onInlineFootnote45() (interface{}, error) {
	// footnote ID not may span multiple lines
	return string(c.text), nil
}

func (p *parser) callonInlineFootnote45() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote45()
}

func (c *current) onInlineFootnote41(ref interface{}) (interface{}, error) {
	return types.NewFootnote(ref.(string), types.InlineElements{}) // foot note referring to another note
}

func (p *parser) callonInlineFootnote41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onInlineFootnote41(stack["ref"])
}

func (c *current) onFootnoteContent16() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFootnoteContent16() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent16()
}

func (c *current) onFootnoteContent26() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFootnoteContent26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent26()
}

func (c *current) onFootnoteContent38() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFootnoteContent38() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent38()
}

func (c *current) onFootnoteContent29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFootnoteContent29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent29()
}

func (c *current) onFootnoteContent23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFootnoteContent23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent23()
}

func (c *current) onFootnoteContent55() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFootnoteContent55() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent55()
}

func (c *current) onFootnoteContent19(id interface{}) (interface{}, error) {
	return types.NewInlineElementID(id.(string))
}

func (p *parser) callonFootnoteContent19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent19(stack["id"])
}

func (c *current) onFootnoteContent61() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFootnoteContent61() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent61()
}

func (c *current) onFootnoteContent1(elements interface{}) (interface{}, error) {
	// footnote content may span multiple lines
	return types.NewInlineElements(elements.([]interface{}))

}

func (p *parser) callonFootnoteContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFootnoteContent1(stack["elements"])
}

func (c *current) onDelimitedBlock9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock9()
}

func (c *current) onDelimitedBlock29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock29()
}

func (c *current) onDelimitedBlock43() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock43() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock43()
}

func (c *current) onDelimitedBlock50() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock50() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock50()
}

func (c *current) onDelimitedBlock46() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock46() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock46()
}

func (c *current) onDelimitedBlock60() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock60() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock60()
}

func (c *current) onDelimitedBlock52() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock52() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock52()
}

func (c *current) onDelimitedBlock40() (interface{}, error) {
	// skip EOL in line content, and stop when quote block delimiter is encountered
	return types.NewInlineElements(string(c.text))
}

func (p *parser) callonDelimitedBlock40() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock40()
}

func (c *current) onDelimitedBlock21(line interface{}) (interface{}, error) {
	return line.(types.InlineElements), nil
}

func (p *parser) callonDelimitedBlock21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock21(stack["line"])
}

func (c *current) onDelimitedBlock18(lines interface{}) (interface{}, error) {
	return types.NewParagraph(lines.([]interface{}), nil)
}

func (p *parser) callonDelimitedBlock18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock18(stack["lines"])
}

func (c *current) onDelimitedBlock85() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock85() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock85()
}

func (c *current) onDelimitedBlock3(content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Listing, content.([]interface{}), types.None)
}

func (p *parser) callonDelimitedBlock3() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock3(stack["content"])
}

func (c *current) onDelimitedBlock101() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock101() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock101()
}

func (c *current) onDelimitedBlock112() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock112() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock112()
}

func (c *current) onDelimitedBlock119() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock119() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock119()
}

func (c *current) onDelimitedBlock115() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock115() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock115()
}

func (c *current) onDelimitedBlock121() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock121() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock121()
}

func (c *current) onDelimitedBlock108() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock108() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock108()
}

func (c *current) onDelimitedBlock143() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonDelimitedBlock143() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock143()
}

func (c *current) onDelimitedBlock95(content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Comment, content.([]interface{}), types.Verbatim)
}

func (p *parser) callonDelimitedBlock95() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onDelimitedBlock95(stack["content"])
}

func (c *current) onFencedBlock7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock7()
}

func (c *current) onFencedBlock23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlock23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock23()
}

func (c *current) onFencedBlock1(content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Fenced, content.([]interface{}), types.None)
}

func (p *parser) callonFencedBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlock1(stack["content"])
}

func (c *current) onFencedBlockContent12() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonFencedBlockContent12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlockContent12()
}

func (c *current) onFencedBlockContent4() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonFencedBlockContent4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onFencedBlockContent4()
}

func (c *current) onExampleBlock7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock7()
}

func (c *current) onExampleBlock27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock27()
}

func (c *current) onExampleBlock19() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonExampleBlock19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock19()
}

func (c *current) onExampleBlock40() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonExampleBlock40() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock40()
}

func (c *current) onExampleBlock1(content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Example, content.([]interface{}), types.None)
}

func (p *parser) callonExampleBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onExampleBlock1(stack["content"])
}

func (c *current) onBlockParagraph1(lines interface{}) (interface{}, error) {
	return types.NewParagraph(lines.([]interface{}), nil)
}

func (p *parser) callonBlockParagraph1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraph1(stack["lines"])
}

func (c *current) onBlockParagraphLine9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine9()
}

func (c *current) onBlockParagraphLine13() (interface{}, error) {
	// numbering style: "....."
	return types.NewOrderedListItemPrefix(types.UpperRoman, 5)

}

func (p *parser) callonBlockParagraphLine13() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine13()
}

func (c *current) onBlockParagraphLine15() (interface{}, error) {
	// numbering style: "...."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 4)

}

func (p *parser) callonBlockParagraphLine15() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine15()
}

func (c *current) onBlockParagraphLine17() (interface{}, error) {
	// numbering style: "..."
	return types.NewOrderedListItemPrefix(types.LowerRoman, 3)

}

func (p *parser) callonBlockParagraphLine17() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine17()
}

func (c *current) onBlockParagraphLine19() (interface{}, error) {
	// numbering style: ".."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 2)

}

func (p *parser) callonBlockParagraphLine19() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine19()
}

func (c *current) onBlockParagraphLine21() (interface{}, error) {
	// numbering style: "."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)
	// explicit numbering

}

func (p *parser) callonBlockParagraphLine21() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine21()
}

func (c *current) onBlockParagraphLine23() (interface{}, error) {
	// numbering style: "1."
	return types.NewOrderedListItemPrefix(types.Arabic, 1)

}

func (p *parser) callonBlockParagraphLine23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine23()
}

func (c *current) onBlockParagraphLine28() (interface{}, error) {
	// numbering style: "a."
	return types.NewOrderedListItemPrefix(types.LowerAlpha, 1)

}

func (p *parser) callonBlockParagraphLine28() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine28()
}

func (c *current) onBlockParagraphLine32() (interface{}, error) {
	// numbering style: "A."
	return types.NewOrderedListItemPrefix(types.UpperAlpha, 1)

}

func (p *parser) callonBlockParagraphLine32() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine32()
}

func (c *current) onBlockParagraphLine36() (interface{}, error) {
	// numbering style: "i)"
	return types.NewOrderedListItemPrefix(types.LowerRoman, 1)

}

func (p *parser) callonBlockParagraphLine36() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine36()
}

func (c *current) onBlockParagraphLine41() (interface{}, error) {
	// numbering style: "I)"
	return types.NewOrderedListItemPrefix(types.UpperRoman, 1)

}

func (p *parser) callonBlockParagraphLine41() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine41()
}

func (c *current) onBlockParagraphLine49() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine49() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine49()
}

func (c *current) onBlockParagraphLine4(prefix interface{}) (interface{}, error) {
	return prefix, nil
}

func (p *parser) callonBlockParagraphLine4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine4(stack["prefix"])
}

func (c *current) onBlockParagraphLine57() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine57() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine57()
}

func (c *current) onBlockParagraphLine61() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FiveAsterisks, 5)

}

func (p *parser) callonBlockParagraphLine61() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine61()
}

func (c *current) onBlockParagraphLine63() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.FourAsterisks, 4)

}

func (p *parser) callonBlockParagraphLine63() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine63()
}

func (c *current) onBlockParagraphLine65() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.ThreeAsterisks, 3)

}

func (p *parser) callonBlockParagraphLine65() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine65()
}

func (c *current) onBlockParagraphLine67() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.TwoAsterisks, 2)

}

func (p *parser) callonBlockParagraphLine67() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine67()
}

func (c *current) onBlockParagraphLine69() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.OneAsterisk, 1)

}

func (p *parser) callonBlockParagraphLine69() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine69()
}

func (c *current) onBlockParagraphLine71() (interface{}, error) {
	// ignore whitespaces, only return the relevant "*"/"-" marker
	return types.NewUnorderedListItemPrefix(types.Dash, 1)

}

func (p *parser) callonBlockParagraphLine71() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine71()
}

func (c *current) onBlockParagraphLine76() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine76() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine76()
}

func (c *current) onBlockParagraphLine52(prefix interface{}) (interface{}, error) {
	return prefix, nil
}

func (p *parser) callonBlockParagraphLine52() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine52(stack["prefix"])
}

func (c *current) onBlockParagraphLine83() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine83() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine83()
}

func (c *current) onBlockParagraphLine90() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine90() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine90()
}

func (c *current) onBlockParagraphLine86() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine86() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine86()
}

func (c *current) onBlockParagraphLine92() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine92() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine92()
}

func (c *current) onBlockParagraphLine80() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine80() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine80()
}

func (c *current) onBlockParagraphLine101() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine101() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine101()
}

func (c *current) onBlockParagraphLine113() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine113() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine113()
}

func (c *current) onBlockParagraphLine107() (interface{}, error) {
	return types.NewListItemContinuation()
}

func (p *parser) callonBlockParagraphLine107() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine107()
}

func (c *current) onBlockParagraphLine128() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine128() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine128()
}

func (c *current) onBlockParagraphLine140() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine140() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine140()
}

func (c *current) onBlockParagraphLine152() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine152() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine152()
}

func (c *current) onBlockParagraphLine165() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine165() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine165()
}

func (c *current) onBlockParagraphLine177() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonBlockParagraphLine177() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine177()
}

func (c *current) onBlockParagraphLine1(line interface{}) (interface{}, error) {
	return line, nil
}

func (p *parser) callonBlockParagraphLine1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onBlockParagraphLine1(stack["line"])
}

func (c *current) onQuoteBlock7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock7()
}

func (c *current) onQuoteBlock23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlock23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock23()
}

func (c *current) onQuoteBlock1(content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Quote, content.([]interface{}), types.None)
}

func (p *parser) callonQuoteBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlock1(stack["content"])
}

func (c *current) onQuoteBlockElement9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonQuoteBlockElement9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlockElement9()
}

func (c *current) onQuoteBlockElement1(element interface{}) (interface{}, error) {
	return element, nil

}

func (p *parser) callonQuoteBlockElement1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onQuoteBlockElement1(stack["element"])
}

func (c *current) onVerseBlock3() (bool, error) {
	verse, ok := c.state["verse"].(bool)
	return ok && verse, nil
}

func (p *parser) callonVerseBlock3() (bool, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock3()
}

func (c *current) onVerseBlock11() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock11()
}

func (c *current) onVerseBlock27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlock27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock27()
}

func (c *current) onVerseBlock5(content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Verse, content.([]interface{}), types.None)
}

func (p *parser) callonVerseBlock5() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock5(stack["content"])
}

func (c *current) onVerseBlock36(verse interface{}) error {
	c.state["verse"] = false
	return nil
}

func (p *parser) callonVerseBlock36() error {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock36(stack["verse"])
}

func (c *current) onVerseBlock1(verse interface{}) (interface{}, error) {
	return verse, nil
}

func (p *parser) callonVerseBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlock1(stack["verse"])
}

func (c *current) onVerseBlockContent1(lines interface{}) (interface{}, error) {
	return types.NewParagraph(lines.([]interface{}), nil)
}

func (p *parser) callonVerseBlockContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockContent1(stack["lines"])
}

func (c *current) onVerseBlockLine9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlockLine9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLine9()
}

func (c *current) onVerseBlockLine1(line interface{}) (interface{}, error) {
	return line.(types.InlineElements), nil
}

func (p *parser) callonVerseBlockLine1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLine1(stack["line"])
}

func (c *current) onVerseBlockLineContent11() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlockLineContent11() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLineContent11()
}

func (c *current) onVerseBlockLineContent27() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlockLineContent27() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLineContent27()
}

func (c *current) onVerseBlockLineContent33() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonVerseBlockLineContent33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLineContent33()
}

func (c *current) onVerseBlockLineContent1(elements interface{}) (interface{}, error) {
	// skip EOL in line content, and stop when quote block delimiter is encountered
	return types.NewInlineElements(elements.([]interface{}))
}

func (p *parser) callonVerseBlockLineContent1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onVerseBlockLineContent1(stack["elements"])
}

func (c *current) onSidebarBlock7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock7()
}

func (c *current) onSidebarBlock23() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlock23() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock23()
}

func (c *current) onSidebarBlock1(content interface{}) (interface{}, error) {
	return types.NewDelimitedBlock(types.Sidebar, content.([]interface{}), types.None)
}

func (p *parser) callonSidebarBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlock1(stack["content"])
}

func (c *current) onSidebarBlockContent12() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonSidebarBlockContent12() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlockContent12()
}

func (c *current) onSidebarBlockContent4() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonSidebarBlockContent4() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onSidebarBlockContent4()
}

func (c *current) onNonSidebarBlock1(content interface{}) (interface{}, error) {
	return content, nil
}

func (p *parser) callonNonSidebarBlock1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onNonSidebarBlock1(stack["content"])
}

func (c *current) onTable7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable7()
}

func (c *current) onTable26() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTable26() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable26()
}

func (c *current) onTable1(header, lines interface{}) (interface{}, error) {
	// end delimiter or end of file
	return types.NewTable(header, lines.([]interface{}))
}

func (p *parser) callonTable1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTable1(stack["header"], stack["lines"])
}

func (c *current) onTableLineHeader9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableLineHeader9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLineHeader9()
}

func (c *current) onTableLineHeader32() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableLineHeader32() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLineHeader32()
}

func (c *current) onTableLineHeader24(cells interface{}) (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonTableLineHeader24() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLineHeader24(stack["cells"])
}

func (c *current) onTableLineHeader1(cells interface{}) (interface{}, error) {
	return types.NewTableLine(cells.([]interface{}))
}

func (p *parser) callonTableLineHeader1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLineHeader1(stack["cells"])
}

func (c *current) onTableLine9() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableLine9() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLine9()
}

func (c *current) onTableLine33() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableLine33() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLine33()
}

func (c *current) onTableLine25() (interface{}, error) {
	return types.NewBlankLine()
}

func (p *parser) callonTableLine25() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLine25()
}

func (c *current) onTableLine1(cells interface{}) (interface{}, error) {
	return types.NewTableLine(cells.([]interface{}))
}

func (p *parser) callonTableLine1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableLine1(stack["cells"])
}

func (c *current) onTableCell7() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableCell7() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell7()
}

func (c *current) onTableCell18() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableCell18() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell18()
}

func (c *current) onTableCell29() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableCell29() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell29()
}

func (c *current) onTableCell35() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonTableCell35() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell35()
}

func (c *current) onTableCell1(elements interface{}) (interface{}, error) {
	return types.NewInlineElements(elements)
}

func (p *parser) callonTableCell1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onTableCell1(stack["elements"])
}

func (c *current) onAlphanums1() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonAlphanums1() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onAlphanums1()
}

func (c *current) onWS3() (interface{}, error) {
	return string(c.text), nil
}

func (p *parser) callonWS3() (interface{}, error) {
	stack := p.vstack[len(p.vstack)-1]
	_ = stack
	return p.cur.onWS3()
}

var (
	// errNoRule is returned when the grammar to parse has no rule.
	errNoRule = errors.New("grammar has no rule")

	// errInvalidEntrypoint is returned when the specified entrypoint rule
	// does not exit.
	errInvalidEntrypoint = errors.New("invalid entrypoint")

	// errInvalidEncoding is returned when the source is not properly
	// utf8-encoded.
	errInvalidEncoding = errors.New("invalid encoding")

	// errMaxExprCnt is used to signal that the maximum number of
	// expressions have been parsed.
	errMaxExprCnt = errors.New("max number of expresssions parsed")
)

// Option is a function that can set an option on the parser. It returns
// the previous setting as an Option.
type Option func(*parser) Option

// MaxExpressions creates an Option to stop parsing after the provided
// number of expressions have been parsed, if the value is 0 then the parser will
// parse for as many steps as needed (possibly an infinite number).
//
// The default for maxExprCnt is 0.
func MaxExpressions(maxExprCnt uint64) Option {
	return func(p *parser) Option {
		oldMaxExprCnt := p.maxExprCnt
		p.maxExprCnt = maxExprCnt
		return MaxExpressions(oldMaxExprCnt)
	}
}

// Entrypoint creates an Option to set the rule name to use as entrypoint.
// The rule name must have been specified in the -alternate-entrypoints
// if generating the parser with the -optimize-grammar flag, otherwise
// it may have been optimized out. Passing an empty string sets the
// entrypoint to the first rule in the grammar.
//
// The default is to start parsing at the first rule in the grammar.
func Entrypoint(ruleName string) Option {
	return func(p *parser) Option {
		oldEntrypoint := p.entrypoint
		p.entrypoint = ruleName
		if ruleName == "" {
			p.entrypoint = g.rules[0].name
		}
		return Entrypoint(oldEntrypoint)
	}
}

// Statistics adds a user provided Stats struct to the parser to allow
// the user to process the results after the parsing has finished.
// Also the key for the "no match" counter is set.
//
// Example usage:
//
//     input := "input"
//     stats := Stats{}
//     _, err := Parse("input-file", []byte(input), Statistics(&stats, "no match"))
//     if err != nil {
//         log.Panicln(err)
//     }
//     b, err := json.MarshalIndent(stats.ChoiceAltCnt, "", "  ")
//     if err != nil {
//         log.Panicln(err)
//     }
//     fmt.Println(string(b))
//
func Statistics(stats *Stats, choiceNoMatch string) Option {
	return func(p *parser) Option {
		oldStats := p.Stats
		p.Stats = stats
		oldChoiceNoMatch := p.choiceNoMatch
		p.choiceNoMatch = choiceNoMatch
		if p.Stats.ChoiceAltCnt == nil {
			p.Stats.ChoiceAltCnt = make(map[string]map[string]int)
		}
		return Statistics(oldStats, oldChoiceNoMatch)
	}
}

// Debug creates an Option to set the debug flag to b. When set to true,
// debugging information is printed to stdout while parsing.
//
// The default is false.
func Debug(b bool) Option {
	return func(p *parser) Option {
		old := p.debug
		p.debug = b
		return Debug(old)
	}
}

// Memoize creates an Option to set the memoize flag to b. When set to true,
// the parser will cache all results so each expression is evaluated only
// once. This guarantees linear parsing time even for pathological cases,
// at the expense of more memory and slower times for typical cases.
//
// The default is false.
func Memoize(b bool) Option {
	return func(p *parser) Option {
		old := p.memoize
		p.memoize = b
		return Memoize(old)
	}
}

// AllowInvalidUTF8 creates an Option to allow invalid UTF-8 bytes.
// Every invalid UTF-8 byte is treated as a utf8.RuneError (U+FFFD)
// by character class matchers and is matched by the any matcher.
// The returned matched value, c.text and c.offset are NOT affected.
//
// The default is false.
func AllowInvalidUTF8(b bool) Option {
	return func(p *parser) Option {
		old := p.allowInvalidUTF8
		p.allowInvalidUTF8 = b
		return AllowInvalidUTF8(old)
	}
}

// Recover creates an Option to set the recover flag to b. When set to
// true, this causes the parser to recover from panics and convert it
// to an error. Setting it to false can be useful while debugging to
// access the full stack trace.
//
// The default is true.
func Recover(b bool) Option {
	return func(p *parser) Option {
		old := p.recover
		p.recover = b
		return Recover(old)
	}
}

// GlobalStore creates an Option to set a key to a certain value in
// the globalStore.
func GlobalStore(key string, value interface{}) Option {
	return func(p *parser) Option {
		old := p.cur.globalStore[key]
		p.cur.globalStore[key] = value
		return GlobalStore(key, old)
	}
}

// InitState creates an Option to set a key to a certain value in
// the global "state" store.
func InitState(key string, value interface{}) Option {
	return func(p *parser) Option {
		old := p.cur.state[key]
		p.cur.state[key] = value
		return InitState(key, old)
	}
}

// ParseFile parses the file identified by filename.
func ParseFile(filename string, opts ...Option) (i interface{}, err error) {
	f, err := os.Open(filename)
	if err != nil {
		return nil, err
	}
	defer func() {
		if closeErr := f.Close(); closeErr != nil {
			err = closeErr
		}
	}()
	return ParseReader(filename, f, opts...)
}

// ParseReader parses the data from r using filename as information in the
// error messages.
func ParseReader(filename string, r io.Reader, opts ...Option) (interface{}, error) {
	b, err := ioutil.ReadAll(r)
	if err != nil {
		return nil, err
	}

	return Parse(filename, b, opts...)
}

// Parse parses the data from b using filename as information in the
// error messages.
func Parse(filename string, b []byte, opts ...Option) (interface{}, error) {
	return newParser(filename, b, opts...).parse(g)
}

// position records a position in the text.
type position struct {
	line, col, offset int
}

func (p position) String() string {
	return fmt.Sprintf("%d:%d [%d]", p.line, p.col, p.offset)
}

// savepoint stores all state required to go back to this point in the
// parser.
type savepoint struct {
	position
	rn rune
	w  int
}

type current struct {
	pos  position // start position of the match
	text []byte   // raw text of the match

	// state is a store for arbitrary key,value pairs that the user wants to be
	// tied to the backtracking of the parser.
	// This is always rolled back if a parsing rule fails.
	state storeDict

	// globalStore is a general store for the user to store arbitrary key-value
	// pairs that they need to manage and that they do not want tied to the
	// backtracking of the parser. This is only modified by the user and never
	// rolled back by the parser. It is always up to the user to keep this in a
	// consistent state.
	globalStore storeDict
}

type storeDict map[string]interface{}

// the AST types...

type grammar struct {
	pos   position
	rules []*rule
}

type rule struct {
	pos         position
	name        string
	displayName string
	expr        interface{}
}

type choiceExpr struct {
	pos          position
	alternatives []interface{}
}

type actionExpr struct {
	pos  position
	expr interface{}
	run  func(*parser) (interface{}, error)
}

type recoveryExpr struct {
	pos          position
	expr         interface{}
	recoverExpr  interface{}
	failureLabel []string
}

type seqExpr struct {
	pos   position
	exprs []interface{}
}

type throwExpr struct {
	pos   position
	label string
}

type labeledExpr struct {
	pos   position
	label string
	expr  interface{}
}

type expr struct {
	pos  position
	expr interface{}
}

type andExpr expr
type notExpr expr
type zeroOrOneExpr expr
type zeroOrMoreExpr expr
type oneOrMoreExpr expr

type ruleRefExpr struct {
	pos  position
	name string
}

type stateCodeExpr struct {
	pos position
	run func(*parser) error
}

type andCodeExpr struct {
	pos position
	run func(*parser) (bool, error)
}

type notCodeExpr struct {
	pos position
	run func(*parser) (bool, error)
}

type litMatcher struct {
	pos        position
	val        string
	ignoreCase bool
}

type charClassMatcher struct {
	pos             position
	val             string
	basicLatinChars [128]bool
	chars           []rune
	ranges          []rune
	classes         []*unicode.RangeTable
	ignoreCase      bool
	inverted        bool
}

type anyMatcher position

// errList cumulates the errors found by the parser.
type errList []error

func (e *errList) add(err error) {
	*e = append(*e, err)
}

func (e errList) err() error {
	if len(e) == 0 {
		return nil
	}
	e.dedupe()
	return e
}

func (e *errList) dedupe() {
	var cleaned []error
	set := make(map[string]bool)
	for _, err := range *e {
		if msg := err.Error(); !set[msg] {
			set[msg] = true
			cleaned = append(cleaned, err)
		}
	}
	*e = cleaned
}

func (e errList) Error() string {
	switch len(e) {
	case 0:
		return ""
	case 1:
		return e[0].Error()
	default:
		var buf bytes.Buffer

		for i, err := range e {
			if i > 0 {
				buf.WriteRune('\n')
			}
			buf.WriteString(err.Error())
		}
		return buf.String()
	}
}

// parserError wraps an error with a prefix indicating the rule in which
// the error occurred. The original error is stored in the Inner field.
type parserError struct {
	Inner    error
	pos      position
	prefix   string
	expected []string
}

// Error returns the error message.
func (p *parserError) Error() string {
	return p.prefix + ": " + p.Inner.Error()
}

// newParser creates a parser with the specified input source and options.
func newParser(filename string, b []byte, opts ...Option) *parser {
	stats := Stats{
		ChoiceAltCnt: make(map[string]map[string]int),
	}

	p := &parser{
		filename: filename,
		errs:     new(errList),
		data:     b,
		pt:       savepoint{position: position{line: 1}},
		recover:  true,
		cur: current{
			state:       make(storeDict),
			globalStore: make(storeDict),
		},
		maxFailPos:      position{col: 1, line: 1},
		maxFailExpected: make([]string, 0, 20),
		Stats:           &stats,
		// start rule is rule [0] unless an alternate entrypoint is specified
		entrypoint: g.rules[0].name,
	}
	p.setOptions(opts)

	if p.maxExprCnt == 0 {
		p.maxExprCnt = math.MaxUint64
	}

	return p
}

// setOptions applies the options to the parser.
func (p *parser) setOptions(opts []Option) {
	for _, opt := range opts {
		opt(p)
	}
}

type resultTuple struct {
	v   interface{}
	b   bool
	end savepoint
}

const choiceNoMatch = -1

// Stats stores some statistics, gathered during parsing
type Stats struct {
	// ExprCnt counts the number of expressions processed during parsing
	// This value is compared to the maximum number of expressions allowed
	// (set by the MaxExpressions option).
	ExprCnt uint64

	// ChoiceAltCnt is used to count for each ordered choice expression,
	// which alternative is used how may times.
	// These numbers allow to optimize the order of the ordered choice expression
	// to increase the performance of the parser
	//
	// The outer key of ChoiceAltCnt is composed of the name of the rule as well
	// as the line and the column of the ordered choice.
	// The inner key of ChoiceAltCnt is the number (one-based) of the matching alternative.
	// For each alternative the number of matches are counted. If an ordered choice does not
	// match, a special counter is incremented. The name of this counter is set with
	// the parser option Statistics.
	// For an alternative to be included in ChoiceAltCnt, it has to match at least once.
	ChoiceAltCnt map[string]map[string]int
}

type parser struct {
	filename string
	pt       savepoint
	cur      current

	data []byte
	errs *errList

	depth   int
	recover bool
	debug   bool

	memoize bool
	// memoization table for the packrat algorithm:
	// map[offset in source] map[expression or rule] {value, match}
	memo map[int]map[interface{}]resultTuple

	// rules table, maps the rule identifier to the rule node
	rules map[string]*rule
	// variables stack, map of label to value
	vstack []map[string]interface{}
	// rule stack, allows identification of the current rule in errors
	rstack []*rule

	// parse fail
	maxFailPos            position
	maxFailExpected       []string
	maxFailInvertExpected bool

	// max number of expressions to be parsed
	maxExprCnt uint64
	// entrypoint for the parser
	entrypoint string

	allowInvalidUTF8 bool

	*Stats

	choiceNoMatch string
	// recovery expression stack, keeps track of the currently available recovery expression, these are traversed in reverse
	recoveryStack []map[string]interface{}
}

// push a variable set on the vstack.
func (p *parser) pushV() {
	if cap(p.vstack) == len(p.vstack) {
		// create new empty slot in the stack
		p.vstack = append(p.vstack, nil)
	} else {
		// slice to 1 more
		p.vstack = p.vstack[:len(p.vstack)+1]
	}

	// get the last args set
	m := p.vstack[len(p.vstack)-1]
	if m != nil && len(m) == 0 {
		// empty map, all good
		return
	}

	m = make(map[string]interface{})
	p.vstack[len(p.vstack)-1] = m
}

// pop a variable set from the vstack.
func (p *parser) popV() {
	// if the map is not empty, clear it
	m := p.vstack[len(p.vstack)-1]
	if len(m) > 0 {
		// GC that map
		p.vstack[len(p.vstack)-1] = nil
	}
	p.vstack = p.vstack[:len(p.vstack)-1]
}

// push a recovery expression with its labels to the recoveryStack
func (p *parser) pushRecovery(labels []string, expr interface{}) {
	if cap(p.recoveryStack) == len(p.recoveryStack) {
		// create new empty slot in the stack
		p.recoveryStack = append(p.recoveryStack, nil)
	} else {
		// slice to 1 more
		p.recoveryStack = p.recoveryStack[:len(p.recoveryStack)+1]
	}

	m := make(map[string]interface{}, len(labels))
	for _, fl := range labels {
		m[fl] = expr
	}
	p.recoveryStack[len(p.recoveryStack)-1] = m
}

// pop a recovery expression from the recoveryStack
func (p *parser) popRecovery() {
	// GC that map
	p.recoveryStack[len(p.recoveryStack)-1] = nil

	p.recoveryStack = p.recoveryStack[:len(p.recoveryStack)-1]
}

func (p *parser) print(prefix, s string) string {
	if !p.debug {
		return s
	}

	fmt.Printf("%s %d:%d:%d: %s [%#U]\n",
		prefix, p.pt.line, p.pt.col, p.pt.offset, s, p.pt.rn)
	return s
}

func (p *parser) in(s string) string {
	p.depth++
	return p.print(strings.Repeat(" ", p.depth)+">", s)
}

func (p *parser) out(s string) string {
	p.depth--
	return p.print(strings.Repeat(" ", p.depth)+"<", s)
}

func (p *parser) addErr(err error) {
	p.addErrAt(err, p.pt.position, []string{})
}

func (p *parser) addErrAt(err error, pos position, expected []string) {
	var buf bytes.Buffer
	if p.filename != "" {
		buf.WriteString(p.filename)
	}
	if buf.Len() > 0 {
		buf.WriteString(":")
	}
	buf.WriteString(fmt.Sprintf("%d:%d (%d)", pos.line, pos.col, pos.offset))
	if len(p.rstack) > 0 {
		if buf.Len() > 0 {
			buf.WriteString(": ")
		}
		rule := p.rstack[len(p.rstack)-1]
		if rule.displayName != "" {
			buf.WriteString("rule " + rule.displayName)
		} else {
			buf.WriteString("rule " + rule.name)
		}
	}
	pe := &parserError{Inner: err, pos: pos, prefix: buf.String(), expected: expected}
	p.errs.add(pe)
}

func (p *parser) failAt(fail bool, pos position, want string) {
	// process fail if parsing fails and not inverted or parsing succeeds and invert is set
	if fail == p.maxFailInvertExpected {
		if pos.offset < p.maxFailPos.offset {
			return
		}

		if pos.offset > p.maxFailPos.offset {
			p.maxFailPos = pos
			p.maxFailExpected = p.maxFailExpected[:0]
		}

		if p.maxFailInvertExpected {
			want = "!" + want
		}
		p.maxFailExpected = append(p.maxFailExpected, want)
	}
}

// read advances the parser to the next rune.
func (p *parser) read() {
	p.pt.offset += p.pt.w
	rn, n := utf8.DecodeRune(p.data[p.pt.offset:])
	p.pt.rn = rn
	p.pt.w = n
	p.pt.col++
	if rn == '\n' {
		p.pt.line++
		p.pt.col = 0
	}

	if rn == utf8.RuneError && n == 1 { // see utf8.DecodeRune
		if !p.allowInvalidUTF8 {
			p.addErr(errInvalidEncoding)
		}
	}
}

// restore parser position to the savepoint pt.
func (p *parser) restore(pt savepoint) {
	if p.debug {
		defer p.out(p.in("restore"))
	}
	if pt.offset == p.pt.offset {
		return
	}
	p.pt = pt
}

// Cloner is implemented by any value that has a Clone method, which returns a
// copy of the value. This is mainly used for types which are not passed by
// value (e.g map, slice, chan) or structs that contain such types.
//
// This is used in conjunction with the global state feature to create proper
// copies of the state to allow the parser to properly restore the state in
// the case of backtracking.
type Cloner interface {
	Clone() interface{}
}

// clone and return parser current state.
func (p *parser) cloneState() storeDict {
	if p.debug {
		defer p.out(p.in("cloneState"))
	}

	state := make(storeDict, len(p.cur.state))
	for k, v := range p.cur.state {
		if c, ok := v.(Cloner); ok {
			state[k] = c.Clone()
		} else {
			state[k] = v
		}
	}
	return state
}

// restore parser current state to the state storeDict.
// every restoreState should applied only one time for every cloned state
func (p *parser) restoreState(state storeDict) {
	if p.debug {
		defer p.out(p.in("restoreState"))
	}
	p.cur.state = state
}

// get the slice of bytes from the savepoint start to the current position.
func (p *parser) sliceFrom(start savepoint) []byte {
	return p.data[start.position.offset:p.pt.position.offset]
}

func (p *parser) getMemoized(node interface{}) (resultTuple, bool) {
	if len(p.memo) == 0 {
		return resultTuple{}, false
	}
	m := p.memo[p.pt.offset]
	if len(m) == 0 {
		return resultTuple{}, false
	}
	res, ok := m[node]
	return res, ok
}

func (p *parser) setMemoized(pt savepoint, node interface{}, tuple resultTuple) {
	if p.memo == nil {
		p.memo = make(map[int]map[interface{}]resultTuple)
	}
	m := p.memo[pt.offset]
	if m == nil {
		m = make(map[interface{}]resultTuple)
		p.memo[pt.offset] = m
	}
	m[node] = tuple
}

func (p *parser) buildRulesTable(g *grammar) {
	p.rules = make(map[string]*rule, len(g.rules))
	for _, r := range g.rules {
		p.rules[r.name] = r
	}
}

func (p *parser) parse(g *grammar) (val interface{}, err error) {
	if len(g.rules) == 0 {
		p.addErr(errNoRule)
		return nil, p.errs.err()
	}

	// TODO : not super critical but this could be generated
	p.buildRulesTable(g)

	if p.recover {
		// panic can be used in action code to stop parsing immediately
		// and return the panic as an error.
		defer func() {
			if e := recover(); e != nil {
				if p.debug {
					defer p.out(p.in("panic handler"))
				}
				val = nil
				switch e := e.(type) {
				case error:
					p.addErr(e)
				default:
					p.addErr(fmt.Errorf("%v", e))
				}
				err = p.errs.err()
			}
		}()
	}

	startRule, ok := p.rules[p.entrypoint]
	if !ok {
		p.addErr(errInvalidEntrypoint)
		return nil, p.errs.err()
	}

	p.read() // advance to first rune
	val, ok = p.parseRule(startRule)
	if !ok {
		if len(*p.errs) == 0 {
			// If parsing fails, but no errors have been recorded, the expected values
			// for the farthest parser position are returned as error.
			maxFailExpectedMap := make(map[string]struct{}, len(p.maxFailExpected))
			for _, v := range p.maxFailExpected {
				maxFailExpectedMap[v] = struct{}{}
			}
			expected := make([]string, 0, len(maxFailExpectedMap))
			eof := false
			if _, ok := maxFailExpectedMap["!."]; ok {
				delete(maxFailExpectedMap, "!.")
				eof = true
			}
			for k := range maxFailExpectedMap {
				expected = append(expected, k)
			}
			sort.Strings(expected)
			if eof {
				expected = append(expected, "EOF")
			}
			p.addErrAt(errors.New("no match found, expected: "+listJoin(expected, ", ", "or")), p.maxFailPos, expected)
		}

		return nil, p.errs.err()
	}
	return val, p.errs.err()
}

func listJoin(list []string, sep string, lastSep string) string {
	switch len(list) {
	case 0:
		return ""
	case 1:
		return list[0]
	default:
		return fmt.Sprintf("%s %s %s", strings.Join(list[:len(list)-1], sep), lastSep, list[len(list)-1])
	}
}

func (p *parser) parseRule(rule *rule) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseRule " + rule.name))
	}

	if p.memoize {
		res, ok := p.getMemoized(rule)
		if ok {
			p.restore(res.end)
			return res.v, res.b
		}
	}

	start := p.pt
	p.rstack = append(p.rstack, rule)
	p.pushV()
	val, ok := p.parseExpr(rule.expr)
	p.popV()
	p.rstack = p.rstack[:len(p.rstack)-1]
	if ok && p.debug {
		p.print(strings.Repeat(" ", p.depth)+"MATCH", string(p.sliceFrom(start)))
	}

	if p.memoize {
		p.setMemoized(start, rule, resultTuple{val, ok, p.pt})
	}
	return val, ok
}

func (p *parser) parseExpr(expr interface{}) (interface{}, bool) {
	var pt savepoint

	if p.memoize {
		res, ok := p.getMemoized(expr)
		if ok {
			p.restore(res.end)
			return res.v, res.b
		}
		pt = p.pt
	}

	p.ExprCnt++
	if p.ExprCnt > p.maxExprCnt {
		panic(errMaxExprCnt)
	}

	var val interface{}
	var ok bool
	switch expr := expr.(type) {
	case *actionExpr:
		val, ok = p.parseActionExpr(expr)
	case *andCodeExpr:
		val, ok = p.parseAndCodeExpr(expr)
	case *andExpr:
		val, ok = p.parseAndExpr(expr)
	case *anyMatcher:
		val, ok = p.parseAnyMatcher(expr)
	case *charClassMatcher:
		val, ok = p.parseCharClassMatcher(expr)
	case *choiceExpr:
		val, ok = p.parseChoiceExpr(expr)
	case *labeledExpr:
		val, ok = p.parseLabeledExpr(expr)
	case *litMatcher:
		val, ok = p.parseLitMatcher(expr)
	case *notCodeExpr:
		val, ok = p.parseNotCodeExpr(expr)
	case *notExpr:
		val, ok = p.parseNotExpr(expr)
	case *oneOrMoreExpr:
		val, ok = p.parseOneOrMoreExpr(expr)
	case *recoveryExpr:
		val, ok = p.parseRecoveryExpr(expr)
	case *ruleRefExpr:
		val, ok = p.parseRuleRefExpr(expr)
	case *seqExpr:
		val, ok = p.parseSeqExpr(expr)
	case *stateCodeExpr:
		val, ok = p.parseStateCodeExpr(expr)
	case *throwExpr:
		val, ok = p.parseThrowExpr(expr)
	case *zeroOrMoreExpr:
		val, ok = p.parseZeroOrMoreExpr(expr)
	case *zeroOrOneExpr:
		val, ok = p.parseZeroOrOneExpr(expr)
	default:
		panic(fmt.Sprintf("unknown expression type %T", expr))
	}
	if p.memoize {
		p.setMemoized(pt, expr, resultTuple{val, ok, p.pt})
	}
	return val, ok
}

func (p *parser) parseActionExpr(act *actionExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseActionExpr"))
	}

	start := p.pt
	val, ok := p.parseExpr(act.expr)
	if ok {
		p.cur.pos = start.position
		p.cur.text = p.sliceFrom(start)
		state := p.cloneState()
		actVal, err := act.run(p)
		if err != nil {
			p.addErrAt(err, start.position, []string{})
		}
		p.restoreState(state)

		val = actVal
	}
	if ok && p.debug {
		p.print(strings.Repeat(" ", p.depth)+"MATCH", string(p.sliceFrom(start)))
	}
	return val, ok
}

func (p *parser) parseAndCodeExpr(and *andCodeExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseAndCodeExpr"))
	}

	state := p.cloneState()

	ok, err := and.run(p)
	if err != nil {
		p.addErr(err)
	}
	p.restoreState(state)

	return nil, ok
}

func (p *parser) parseAndExpr(and *andExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseAndExpr"))
	}

	pt := p.pt
	state := p.cloneState()
	p.pushV()
	_, ok := p.parseExpr(and.expr)
	p.popV()
	p.restoreState(state)
	p.restore(pt)

	return nil, ok
}

func (p *parser) parseAnyMatcher(any *anyMatcher) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseAnyMatcher"))
	}

	if p.pt.rn == utf8.RuneError && p.pt.w == 0 {
		// EOF - see utf8.DecodeRune
		p.failAt(false, p.pt.position, ".")
		return nil, false
	}
	start := p.pt
	p.read()
	p.failAt(true, start.position, ".")
	return p.sliceFrom(start), true
}

func (p *parser) parseCharClassMatcher(chr *charClassMatcher) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseCharClassMatcher"))
	}

	cur := p.pt.rn
	start := p.pt

	// can't match EOF
	if cur == utf8.RuneError && p.pt.w == 0 { // see utf8.DecodeRune
		p.failAt(false, start.position, chr.val)
		return nil, false
	}

	if chr.ignoreCase {
		cur = unicode.ToLower(cur)
	}

	// try to match in the list of available chars
	for _, rn := range chr.chars {
		if rn == cur {
			if chr.inverted {
				p.failAt(false, start.position, chr.val)
				return nil, false
			}
			p.read()
			p.failAt(true, start.position, chr.val)
			return p.sliceFrom(start), true
		}
	}

	// try to match in the list of ranges
	for i := 0; i < len(chr.ranges); i += 2 {
		if cur >= chr.ranges[i] && cur <= chr.ranges[i+1] {
			if chr.inverted {
				p.failAt(false, start.position, chr.val)
				return nil, false
			}
			p.read()
			p.failAt(true, start.position, chr.val)
			return p.sliceFrom(start), true
		}
	}

	// try to match in the list of Unicode classes
	for _, cl := range chr.classes {
		if unicode.Is(cl, cur) {
			if chr.inverted {
				p.failAt(false, start.position, chr.val)
				return nil, false
			}
			p.read()
			p.failAt(true, start.position, chr.val)
			return p.sliceFrom(start), true
		}
	}

	if chr.inverted {
		p.read()
		p.failAt(true, start.position, chr.val)
		return p.sliceFrom(start), true
	}
	p.failAt(false, start.position, chr.val)
	return nil, false
}

func (p *parser) incChoiceAltCnt(ch *choiceExpr, altI int) {
	choiceIdent := fmt.Sprintf("%s %d:%d", p.rstack[len(p.rstack)-1].name, ch.pos.line, ch.pos.col)
	m := p.ChoiceAltCnt[choiceIdent]
	if m == nil {
		m = make(map[string]int)
		p.ChoiceAltCnt[choiceIdent] = m
	}
	// We increment altI by 1, so the keys do not start at 0
	alt := strconv.Itoa(altI + 1)
	if altI == choiceNoMatch {
		alt = p.choiceNoMatch
	}
	m[alt]++
}

func (p *parser) parseChoiceExpr(ch *choiceExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseChoiceExpr"))
	}

	for altI, alt := range ch.alternatives {
		// dummy assignment to prevent compile error if optimized
		_ = altI

		state := p.cloneState()

		p.pushV()
		val, ok := p.parseExpr(alt)
		p.popV()
		if ok {
			p.incChoiceAltCnt(ch, altI)
			return val, ok
		}
		p.restoreState(state)
	}
	p.incChoiceAltCnt(ch, choiceNoMatch)
	return nil, false
}

func (p *parser) parseLabeledExpr(lab *labeledExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseLabeledExpr"))
	}

	p.pushV()
	val, ok := p.parseExpr(lab.expr)
	p.popV()
	if ok && lab.label != "" {
		m := p.vstack[len(p.vstack)-1]
		m[lab.label] = val
	}
	return val, ok
}

func (p *parser) parseLitMatcher(lit *litMatcher) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseLitMatcher"))
	}

	ignoreCase := ""
	if lit.ignoreCase {
		ignoreCase = "i"
	}
	val := fmt.Sprintf("%q%s", lit.val, ignoreCase)
	start := p.pt
	for _, want := range lit.val {
		cur := p.pt.rn
		if lit.ignoreCase {
			cur = unicode.ToLower(cur)
		}
		if cur != want {
			p.failAt(false, start.position, val)
			p.restore(start)
			return nil, false
		}
		p.read()
	}
	p.failAt(true, start.position, val)
	return p.sliceFrom(start), true
}

func (p *parser) parseNotCodeExpr(not *notCodeExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseNotCodeExpr"))
	}

	state := p.cloneState()

	ok, err := not.run(p)
	if err != nil {
		p.addErr(err)
	}
	p.restoreState(state)

	return nil, !ok
}

func (p *parser) parseNotExpr(not *notExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseNotExpr"))
	}

	pt := p.pt
	state := p.cloneState()
	p.pushV()
	p.maxFailInvertExpected = !p.maxFailInvertExpected
	_, ok := p.parseExpr(not.expr)
	p.maxFailInvertExpected = !p.maxFailInvertExpected
	p.popV()
	p.restoreState(state)
	p.restore(pt)

	return nil, !ok
}

func (p *parser) parseOneOrMoreExpr(expr *oneOrMoreExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseOneOrMoreExpr"))
	}

	var vals []interface{}

	for {
		p.pushV()
		val, ok := p.parseExpr(expr.expr)
		p.popV()
		if !ok {
			if len(vals) == 0 {
				// did not match once, no match
				return nil, false
			}
			return vals, true
		}
		vals = append(vals, val)
	}
}

func (p *parser) parseRecoveryExpr(recover *recoveryExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseRecoveryExpr (" + strings.Join(recover.failureLabel, ",") + ")"))
	}

	p.pushRecovery(recover.failureLabel, recover.recoverExpr)
	val, ok := p.parseExpr(recover.expr)
	p.popRecovery()

	return val, ok
}

func (p *parser) parseRuleRefExpr(ref *ruleRefExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseRuleRefExpr " + ref.name))
	}

	if ref.name == "" {
		panic(fmt.Sprintf("%s: invalid rule: missing name", ref.pos))
	}

	rule := p.rules[ref.name]
	if rule == nil {
		p.addErr(fmt.Errorf("undefined rule: %s", ref.name))
		return nil, false
	}
	return p.parseRule(rule)
}

func (p *parser) parseSeqExpr(seq *seqExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseSeqExpr"))
	}

	vals := make([]interface{}, 0, len(seq.exprs))

	pt := p.pt
	state := p.cloneState()
	for _, expr := range seq.exprs {
		val, ok := p.parseExpr(expr)
		if !ok {
			p.restoreState(state)
			p.restore(pt)
			return nil, false
		}
		vals = append(vals, val)
	}
	return vals, true
}

func (p *parser) parseStateCodeExpr(state *stateCodeExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseStateCodeExpr"))
	}

	err := state.run(p)
	if err != nil {
		p.addErr(err)
	}
	return nil, true
}

func (p *parser) parseThrowExpr(expr *throwExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseThrowExpr"))
	}

	for i := len(p.recoveryStack) - 1; i >= 0; i-- {
		if recoverExpr, ok := p.recoveryStack[i][expr.label]; ok {
			if val, ok := p.parseExpr(recoverExpr); ok {
				return val, ok
			}
		}
	}

	return nil, false
}

func (p *parser) parseZeroOrMoreExpr(expr *zeroOrMoreExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseZeroOrMoreExpr"))
	}

	var vals []interface{}

	for {
		p.pushV()
		val, ok := p.parseExpr(expr.expr)
		p.popV()
		if !ok {
			return vals, true
		}
		vals = append(vals, val)
	}
}

func (p *parser) parseZeroOrOneExpr(expr *zeroOrOneExpr) (interface{}, bool) {
	if p.debug {
		defer p.out(p.in("parseZeroOrOneExpr"))
	}

	p.pushV()
	val, _ := p.parseExpr(expr.expr)
	p.popV()
	// whether it matched or not, consider it a match
	return val, true
}
